; ModuleID = 'build/adafruit_feather_stm32f405/kernel/condition_variables/simple/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.k_mutex = type { %struct._wait_q_t, %struct.k_thread*, i32, i32 }
%struct._wait_q_t = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %struct._wait_q_t, [32 x i8], i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %struct._wait_q_t, %struct._wait_q_t*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %struct._wait_q_t, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct.k_spinlock = type { i32 }
%struct._thread_arch = type { i32, i32 }
%struct.k_condvar = type { %struct._wait_q_t }
%struct.z_thread_stack_element = type { i8 }
%struct.log_source_const_data = type { i8*, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.k_spinlock }
%struct.arm_mpu_region = type { i32, i8*, %struct.k_spinlock }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.k_spinlock, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.k_spinlock, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct._cpu_arch }
%struct._cpu_arch = type {}
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.k_spinlock, %struct.k_spinlock }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %struct._wait_q_t }
%struct._sflist = type { %struct.k_spinlock*, %struct.k_spinlock* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [82 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [82 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134237340 to i8*), void (i8*)* inttoptr (i32 134235989 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237340 to i8*), void (i8*)* inttoptr (i32 134235969 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237340 to i8*), void (i8*)* inttoptr (i32 134235959 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134237340 to i8*), void (i8*)* inttoptr (i32 134236059 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237340 to i8*), void (i8*)* inttoptr (i32 134236049 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237340 to i8*), void (i8*)* inttoptr (i32 134236039 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237340 to i8*), void (i8*)* inttoptr (i32 134236029 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237340 to i8*), void (i8*)* inttoptr (i32 134236019 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134237340 to i8*), void (i8*)* inttoptr (i32 134236009 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134237340 to i8*), void (i8*)* inttoptr (i32 134235999 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134237340 to i8*), void (i8*)* inttoptr (i32 134235979 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [45 x i8*] [i8* bitcast (%struct.k_condvar* @condvar to i8*), i8* bitcast (%struct.k_mutex* @mutex to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_37 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_67 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_68 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_69 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_70 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_71 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_72 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_73 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_74 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_21 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_67 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_68 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_69 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_70 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_71 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_72 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_73 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_74 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*)], section "llvm.metadata"
@mutex = dso_local global %struct.k_mutex { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @mutex, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @mutex, i32 0, i32 0, i32 0) } } }, %struct.k_thread* null, i32 0, i32 14 }, section "._k_mutex.static.mutex", align 4, !dbg !25
@condvar = dso_local global %struct.k_condvar { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_condvar, %struct.k_condvar* @condvar, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_condvar, %struct.k_condvar* @condvar, i32 0, i32 0, i32 0) } } } }, section "._k_condvar.static.condvar", align 4, !dbg !114
@.str = private unnamed_addr constant [29 x i8] c"[thread %d] working (%d/%d)\0A\00", align 1
@done = internal unnamed_addr global i32 0, align 4, !dbg !260
@.str.1 = private unnamed_addr constant [46 x i8] c"[thread %d] done is now %d. Signalling cond.\0A\00", align 1
@t = internal global [20 x %struct.k_thread] zeroinitializer, align 8, !dbg !152
@tstacks = dso_local global [20 x [1088 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.0", align 64, !dbg !141
@.str.2 = private unnamed_addr constant [57 x i8] c"[thread %s] done is %d which is < %d so waiting on cond\0A\00", align 1
@__func__.main = private unnamed_addr constant [5 x i8] c"main\00", align 1
@.str.3 = private unnamed_addr constant [40 x i8] c"[thread %s] wake - cond was signalled.\0A\00", align 1
@.str.4 = private unnamed_addr constant [44 x i8] c"[thread %s] done == %d so everyone is done\0A\00", align 1
@.str.5 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !269
@.str.1.7 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.8 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.3.9 = private unnamed_addr constant [39 x i8] c"ZEPHYR_BASE/lib/os/cbprintf_packaged.c\00", align 1
@.str.4.10 = private unnamed_addr constant [33 x i8] c"\09String with too many arguments\0A\00", align 1
@.str.5.11 = private unnamed_addr constant [26 x i8] c"\09str_ptr_pos[] too small\0A\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"\09unexpected size %u\0A\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"\09too many format args\0A\00", align 1
@.str.8 = private unnamed_addr constant [27 x i8] c"in_packaged != ((void *)0)\00", align 1
@.str.9 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@.str.10 = private unnamed_addr constant [31 x i8] c"scpy_cnt < sizeof(cpy_str_pos)\00", align 1
@.str.11 = private unnamed_addr constant [32 x i8] c"keep_cnt < sizeof(keep_str_pos)\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@.str.12 = private unnamed_addr constant [24 x i8] c"packaged != ((void *)0)\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !295
@.str.16 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !305
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !356
@.str.25 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.27 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.28 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.26 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.30 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.31 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.29 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.32 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.33 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.34 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.35 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@.str.36 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.37 = private unnamed_addr constant [27 x i8] c"prio <= ((1UL << (4)) - 1)\00", align 1
@.str.2.38 = private unnamed_addr constant [47 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/irq_manage.c\00", align 1
@.str.3.39 = private unnamed_addr constant [64 x i8] c"\09invalid priority %d for %d irq! values must be less than %lu\0A\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.42 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.43 = private unnamed_addr constant [19 x i8] c"esf != ((void *)0)\00", align 1
@.str.2.44 = private unnamed_addr constant [51 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/cortex_m/fault.c\00", align 1
@.str.3.45 = private unnamed_addr constant [62 x i8] c"\09ESF could not be retrieved successfully. Shall never occur.\0A\00", align 1
@.str.4.58 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.5.50 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.6.51 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.7.52 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.8.53 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.9.54 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.10.55 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.56 = private unnamed_addr constant [36 x i8] c"\09Fault escalation without FSR info\0A\00", align 1
@.str.12.57 = private unnamed_addr constant [48 x i8] c"\09HardFault without HFSR info Shall never occur\0A\00", align 1
@.str.13 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.14 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.16.49 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.18 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.19 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.20 = private unnamed_addr constant [74 x i8] c"!(((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CFSR & (1UL << (0U + 4U)))\00", align 1
@.str.21 = private unnamed_addr constant [35 x i8] c"\09Stacking error not a stack fail\0A\0A\00", align 1
@.str.22 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.23 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.24 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.25.48 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.26 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.28 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.29 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.30 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.31 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.32.47 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.33 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.34 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.35 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.36.46 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.37 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.38 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.64 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.64, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !385
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.k_spinlock { i32 101384192 } }], align 4, !dbg !519
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !391
@.str.70 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.71 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2.72 = private unnamed_addr constant [48 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/mpu/arm_mpu.c\00", align 1
@.str.3.73 = private unnamed_addr constant [44 x i8] c"\09Configuring %u static MPU regions failed\0A\0A\00", align 1
@.str.4.78 = private unnamed_addr constant [45 x i8] c"\09Configuring %u dynamic MPU regions failed\0A\0A\00", align 1
@.str.5.79 = private unnamed_addr constant [52 x i8] c"\09Request to configure: %u regions (supported: %u)\0A\0A\00", align 1
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !528
@.str.6.80 = private unnamed_addr constant [80 x i8] c"(((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->TYPE & (0xFFUL << 8U)) >> 8U == 8\00", align 1
@.str.7.81 = private unnamed_addr constant [33 x i8] c"\09Invalid number of MPU regions\0A\0A\00", align 1
@.str.8.74 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.9.75 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !564
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.90, i32 0, i32 0), %struct.k_spinlock { i32 117571622 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.91, i32 0, i32 0), %struct.k_spinlock { i32 285933600 } }], align 4, !dbg !574
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !579
@.str.90 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.91 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@.str.94 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.95 = private unnamed_addr constant [5 x i8] c"line\00", align 1
@.str.2.96 = private unnamed_addr constant [59 x i8] c"ZEPHYR_BASE/drivers/interrupt_controller/intc_exti_stm32.c\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !599
@__devicehdl_dts_ord_37 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !793
@.str.4.92 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_37 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !754
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !737
@__device_dts_ord_37 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.92, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_37, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_37, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !710
@__init___device_dts_ord_37 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_37 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !726
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !756
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !770
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !772
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !774
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !776
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !778
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !780
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !782
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !784
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !786
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !788
@__devicehdl_dts_ord_9 = dso_local constant [13 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 32767], section ".__device_handles_pass2", align 2, !dbg !798
@.str.97 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !827
@__devstate_dts_ord_9 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !921
@__init___device_dts_ord_9 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_9 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !910
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !962
@__devicehdl_dts_ord_74 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !820
@.str.106 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1028
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1314
@__devstate_dts_ord_74 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1280
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1266
@__init___device_dts_ord_74 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_74 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1205
@__devicehdl_dts_ord_67 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !818
@.str.1.114 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1316
@__devstate_dts_ord_67 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1284
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1282
@__init___device_dts_ord_67 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_67 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1222
@__devicehdl_dts_ord_21 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !816
@.str.2.115 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1329
@__devstate_dts_ord_21 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1288
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1286
@__init___device_dts_ord_21 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_21 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1228
@__devicehdl_dts_ord_68 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !814
@.str.3.116 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1331
@__devstate_dts_ord_68 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1292
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1290
@__init___device_dts_ord_68 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_68 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1234
@__devicehdl_dts_ord_69 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !812
@.str.4.117 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1333
@__devstate_dts_ord_69 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1296
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1294
@__init___device_dts_ord_69 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_69 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1240
@__devicehdl_dts_ord_70 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !810
@.str.5.118 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1335
@__devstate_dts_ord_70 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1300
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1298
@__init___device_dts_ord_70 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_70 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1246
@__devicehdl_dts_ord_71 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !808
@.str.6.119 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1337
@__devstate_dts_ord_71 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1304
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1302
@__init___device_dts_ord_71 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_71 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1252
@__devicehdl_dts_ord_72 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !806
@.str.7.120 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1339
@__devstate_dts_ord_72 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1308
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1306
@__init___device_dts_ord_72 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_72 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1258
@__devicehdl_dts_ord_73 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !804
@.str.8.121 = private unnamed_addr constant [14 x i8] c"gpio@40022000\00", align 1
@gpio_stm32_cfg_i = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073881088 to i32*), i32 8, %struct._thread_arch { i32 48, i32 256 } }, align 4, !dbg !1341
@__devstate_dts_ord_73 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1312
@gpio_stm32_data_i = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1310
@__init___device_dts_ord_73 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_73 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1264
@.str.9.107 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.32.113 = private unnamed_addr constant [12 x i8] c"cb->handler\00", align 1
@.str.33.109 = private unnamed_addr constant [53 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio/gpio_utils.h\00", align 1
@.str.34.112 = private unnamed_addr constant [23 x i8] c"\09No callback handler!\0A\00", align 1
@.str.35.108 = private unnamed_addr constant [9 x i8] c"callback\00", align 1
@.str.36.110 = private unnamed_addr constant [15 x i8] c"\09No callback!\0A\00", align 1
@.str.37.111 = private unnamed_addr constant [18 x i8] c"callback->handler\00", align 1
@.str.125 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.125, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1343
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !822
@.str.1.128 = private unnamed_addr constant [16 x i8] c"serial@40004800\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073760256 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45 }, align 4, !dbg !1499
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1554
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1497
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1556
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.128, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1488
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1490
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 262144 }], align 4, !dbg !1543
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !1546
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1548
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 839, i32 512 }, %struct._thread_arch { i32 871, i32 0 }], align 4, !dbg !1551
@.str.2.130 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.3.131 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.4.132 = private unnamed_addr constant [28 x i8] c"((config->usart->BRR)) > 16\00", align 1
@.str.5.133 = private unnamed_addr constant [40 x i8] c"ZEPHYR_BASE/drivers/serial/uart_stm32.c\00", align 1
@.str.6.134 = private unnamed_addr constant [20 x i8] c"\09BaudRateReg >= 16\0A\00", align 1
@.str.7.137 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.8.139 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.9.140 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_9 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.97, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_9, i8* null, i16* getelementptr inbounds ([13 x i16], [13 x i16]* @__devicehdl_dts_ord_9, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !894
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.10 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1567
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1678
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1680
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1676
@lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !1671
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1645
@.str.144 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.145 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.146 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.147 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.148 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.149 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_74, %struct.device* @__device_dts_ord_67, %struct.device* @__device_dts_ord_21, %struct.device* @__device_dts_ord_68, %struct.device* @__device_dts_ord_69, %struct.device* @__device_dts_ord_70, %struct.device* @__device_dts_ord_71, %struct.device* @__device_dts_ord_72, %struct.device* @__device_dts_ord_73, %struct.device* null, %struct.device* null], align 4, !dbg !1682
@__device_dts_ord_74 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.106, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_74, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_74, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1203
@__device_dts_ord_67 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.114, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_67, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_67, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1220
@__device_dts_ord_21 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.115, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_21, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_21, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1226
@__device_dts_ord_68 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.116, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_68, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_68, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1232
@__device_dts_ord_69 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.117, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_69, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_69, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1238
@__device_dts_ord_70 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.118, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_70, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_70, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1244
@__device_dts_ord_71 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.119, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_71, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_71, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1250
@__device_dts_ord_72 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.120, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_72, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_72, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1256
@__device_dts_ord_73 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8.121, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_i to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_73, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_i to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_73, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1262
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1772
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1812
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1815
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1822
@.str.181 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.185 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.186 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.187 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.191 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.5.192 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.6.193 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.7.194 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.8.195 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.9.190 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.10.189 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.191, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.192, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.193, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.194, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.195, i32 0, i32 0)], align 4
@.str.197 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.197, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !1829
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@__ccm_bss_start = external dso_local global [0 x i8], align 1
@__ccm_bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2054
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2042
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2049
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2061
@.str.5.203 = private unnamed_addr constant [5 x i8] c"idle\00", align 1
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2066
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.6.207 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.212, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.213, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.214, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.215, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.216, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.217, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.211, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.218, i32 0, i32 0)], align 4, !dbg !2094
@.str.212 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.213 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.214 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.215 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.216 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.217 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.211 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.218 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2209
@.str.8.210 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.9.221 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.10.222 = private unnamed_addr constant [128 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((entry))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.11.223 = private unnamed_addr constant [28 x i8] c"ZEPHYR_BASE/kernel/thread.c\00", align 1
@.str.12.224 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.13.228 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.14.229 = private unnamed_addr constant [37 x i8] c"\09Threads may not be created in ISRs\0A\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@.str.15.232 = private unnamed_addr constant [45 x i8] c"thread_data <= __static_thread_data_list_end\00", align 1
@.str.16.233 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.243 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.244 = private unnamed_addr constant [40 x i8] c"_kernel.cpus[0].current->base.prio >= 0\00", align 1
@.str.2.245 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/kernel/idle.c\00", align 1
@.str.250 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.251 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.2.252 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/mutex.c\00", align 1
@.str.3.253 = private unnamed_addr constant [37 x i8] c"\09mutexes cannot be used inside ISRs\0A\00", align 1
@lock.254 = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2222
@.str.4.262 = private unnamed_addr constant [23 x i8] c"mutex->lock_count > 0U\00", align 1
@.str.5.255 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.6.256 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.7.257 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.8.258 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.9.259 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@sched_spinlock = dso_local global %struct.k_spinlock zeroinitializer, align 4, !dbg !2333
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2444
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2447
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2449
@.str.263 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.285 = private unnamed_addr constant [61 x i8] c"thread == _kernel.cpus[0].current || is_thread_dummy(thread)\00", align 1
@.str.2.270 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/sched.c\00", align 1
@.str.3.292 = private unnamed_addr constant [55 x i8] c"sizeof(sched_spinlock) == 0 || lock != &sched_spinlock\00", align 1
@.str.4.304 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 0U\00", align 1
@.str.5.273 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.6.299 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.7.269 = private unnamed_addr constant [33 x i8] c"!z_is_idle_thread_object(thread)\00", align 1
@.str.8.309 = private unnamed_addr constant [134 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((((void *)0)))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.9.310 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.10.318 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.319 = private unnamed_addr constant [31 x i8] c"\09aborting essential thread %p\0A\00", align 1
@.str.12.320 = private unnamed_addr constant [34 x i8] c"\09aborted _current back from dead\0A\00", align 1
@.str.13.321 = private unnamed_addr constant [21 x i8] c"\09cannot join in ISR\0A\00", align 1
@.str.14.264 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.15.265 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.16.266 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.17.267 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.18.268 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.19.272 = private unnamed_addr constant [39 x i8] c"_kernel.cpus[0].current != ((void *)0)\00", align 1
@.str.20.289 = private unnamed_addr constant [23 x i8] c"thread->base.pended_on\00", align 1
@.str.21.300 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/kernel/include/ksched.h\00", align 1
@.str.22.301 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 1U\00", align 1
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2051
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2059
@.str.23.313 = private unnamed_addr constant [64 x i8] c"!z_is_thread_state_set(_kernel.cpus[0].current, ((1UL << (4))))\00", align 1
@lock.326 = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2451
@.str.327 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.328 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.329 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.330 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.331 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.332 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@__ccm_data_start = external dso_local global [0 x i8], align 1
@__ccm_data_rom_start = external dso_local global [0 x i8], align 1
@__ccm_data_end = external dso_local global [0 x i8], align 1
@.str.342 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.343 = private unnamed_addr constant [32 x i8] c"!sys_dnode_is_linked(&to->node)\00", align 1
@.str.2.344 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/timeout.c\00", align 1
@.str.3.345 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@timeout_lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2476
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2506
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2511
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1916
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2509
@.str.4.346 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.347 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.348 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.352 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.353 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.371 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3094 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !3098, !srcloc !3099
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !3100, !srcloc !3101
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !3102, !srcloc !3103
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !3104, !srcloc !3105
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3106, !srcloc !3107
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !3108, !srcloc !3109
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !3110, !srcloc !3111
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !3112, !srcloc !3113
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !3114, !srcloc !3115
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !3116, !srcloc !3117
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !3118, !srcloc !3119
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !3120, !srcloc !3121
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !3122, !srcloc !3123
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !3124, !srcloc !3125
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !3126, !srcloc !3127
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !3128, !srcloc !3129
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !3130, !srcloc !3131
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -149) #23, !dbg !3132, !srcloc !3133
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3134, !srcloc !3135
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #23, !dbg !3136, !srcloc !3137
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -133) #23, !dbg !3138, !srcloc !3139
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -161) #23, !dbg !3140, !srcloc !3141
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #23, !dbg !3142, !srcloc !3143
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3144, !srcloc !3145
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !3146, !srcloc !3147
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !3148, !srcloc !3149
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !3150, !srcloc !3151
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !3152, !srcloc !3155
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !3156, !srcloc !3157
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3158, !srcloc !3159
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3160, !srcloc !3161
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3162, !srcloc !3163
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3164, !srcloc !3165
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !3166, !srcloc !3167
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !3168, !srcloc !3169
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !3170, !srcloc !3171
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !3172, !srcloc !3173
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3174, !srcloc !3175
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3176, !srcloc !3177
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3178, !srcloc !3179
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3180, !srcloc !3181
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3182, !srcloc !3183
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3184, !srcloc !3185
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !3186, !srcloc !3187
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !3188, !srcloc !3189
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !3190, !srcloc !3191
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !3192, !srcloc !3193
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !3194, !srcloc !3195
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !3196, !srcloc !3197
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3198, !srcloc !3199
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #23, !dbg !3200, !srcloc !3201
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -161) #23, !dbg !3202, !srcloc !3203
  ret void, !dbg !3204
}

; Function Attrs: noinline nounwind optsize
define dso_local void @worker_thread(i8* noundef %0, i8* nocapture readnone %1, i8* nocapture readnone %2) #1 !dbg !3207 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3211, metadata !DIExpression()), !dbg !3218
  call void @llvm.dbg.value(metadata i8* undef, metadata !3212, metadata !DIExpression()), !dbg !3218
  call void @llvm.dbg.value(metadata i8* undef, metadata !3213, metadata !DIExpression()), !dbg !3218
  %4 = ptrtoint i8* %0 to i32, !dbg !3219
  call void @llvm.dbg.value(metadata i32 %4, metadata !3214, metadata !DIExpression()), !dbg !3218
  call void @llvm.dbg.value(metadata i32 5, metadata !3215, metadata !DIExpression()), !dbg !3218
  call void @llvm.dbg.value(metadata i32 0, metadata !3216, metadata !DIExpression()), !dbg !3220
  br label %8, !dbg !3221

5:                                                ; preds = %8
  tail call fastcc void @k_mutex_lock() #24, !dbg !3222
  %6 = load i32, i32* @done, align 4, !dbg !3223
  %7 = add nsw i32 %6, 1, !dbg !3223
  store i32 %7, i32* @done, align 4, !dbg !3223
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i32 0, i32 0), i32 noundef %4, i32 noundef %7) #25, !dbg !3224
  tail call fastcc void @k_condvar_signal() #24, !dbg !3225
  tail call fastcc void @k_mutex_unlock() #24, !dbg !3226
  ret void, !dbg !3227

8:                                                ; preds = %3, %8
  %9 = phi i32 [ 0, %3 ], [ %12, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !3216, metadata !DIExpression()), !dbg !3220
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i32 0, i32 0), i32 noundef %4, i32 noundef %9, i32 noundef 5) #25, !dbg !3228
  %10 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef 500) #24, !dbg !3231
  %11 = insertvalue [1 x i64] poison, i64 %10, 0, !dbg !3232
  tail call fastcc void @k_sleep([1 x i64] %11) #24, !dbg !3232
  %12 = add nuw nsw i32 %9, 1, !dbg !3233
  call void @llvm.dbg.value(metadata i32 %12, metadata !3216, metadata !DIExpression()), !dbg !3220
  %13 = icmp eq i32 %12, 5, !dbg !3234
  br i1 %13, label %5, label %8, !dbg !3221, !llvm.loop !3235
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_lock() unnamed_addr #1 !dbg !3237 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3248, metadata !DIExpression()), !dbg !3249
  call void @llvm.dbg.value(metadata %struct.k_mutex* @mutex, metadata !3247, metadata !DIExpression()), !dbg !3249
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3250, !srcloc !3252
  %1 = tail call i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef nonnull @mutex, [1 x i64] [i64 -1]) #25, !dbg !3253
  ret void, !dbg !3254
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_condvar_signal() unnamed_addr #1 !dbg !3255 {
  call void @llvm.dbg.value(metadata %struct.k_condvar* @condvar, metadata !3260, metadata !DIExpression()), !dbg !3261
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3262, !srcloc !3264
  %1 = tail call i32 @z_impl_k_condvar_signal(%struct.k_condvar* noundef nonnull @condvar) #25, !dbg !3265
  ret void, !dbg !3266
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_unlock() unnamed_addr #1 !dbg !3267 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* @mutex, metadata !3271, metadata !DIExpression()), !dbg !3272
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3273, !srcloc !3275
  %1 = tail call i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef nonnull @mutex) #25, !dbg !3276
  ret void, !dbg !3277
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #3 !dbg !3278 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3283, metadata !DIExpression()), !dbg !3284
  call void @llvm.dbg.value(metadata i64 %0, metadata !3285, metadata !DIExpression()), !dbg !3302
  call void @llvm.dbg.value(metadata i32 1000, metadata !3290, metadata !DIExpression()), !dbg !3302
  call void @llvm.dbg.value(metadata i32 10000, metadata !3291, metadata !DIExpression()), !dbg !3302
  call void @llvm.dbg.value(metadata i8 1, metadata !3292, metadata !DIExpression()), !dbg !3302
  call void @llvm.dbg.value(metadata i8 0, metadata !3293, metadata !DIExpression()), !dbg !3302
  call void @llvm.dbg.value(metadata i8 1, metadata !3294, metadata !DIExpression()), !dbg !3302
  call void @llvm.dbg.value(metadata i8 0, metadata !3295, metadata !DIExpression()), !dbg !3302
  call void @llvm.dbg.value(metadata i8 1, metadata !3296, metadata !DIExpression()), !dbg !3302
  call void @llvm.dbg.value(metadata i8 0, metadata !3297, metadata !DIExpression()), !dbg !3302
  call void @llvm.dbg.value(metadata i64 0, metadata !3298, metadata !DIExpression()), !dbg !3302
  call void @llvm.dbg.value(metadata i64 0, metadata !3298, metadata !DIExpression()), !dbg !3302
  %2 = mul i64 %0, 10, !dbg !3304
  ret i64 %2, !dbg !3310
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !3311 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3315, metadata !DIExpression()), !dbg !3316
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3317, !srcloc !3319
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #25, !dbg !3320
  ret void, !dbg !3321
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !3322 {
  store i32 0, i32* @done, align 4, !dbg !3329
  call void @llvm.dbg.value(metadata i32 0, metadata !3327, metadata !DIExpression()), !dbg !3330
  br label %6, !dbg !3331

1:                                                ; preds = %6
  %2 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef 1000) #24, !dbg !3332
  %3 = insertvalue [1 x i64] poison, i64 %2, 0, !dbg !3333
  tail call fastcc void @k_sleep([1 x i64] %3) #24, !dbg !3333
  tail call fastcc void @k_mutex_lock() #24, !dbg !3334
  %4 = load i32, i32* @done, align 4, !dbg !3335
  %5 = icmp slt i32 %4, 20, !dbg !3336
  br i1 %5, label %14, label %18, !dbg !3337

6:                                                ; preds = %0, %6
  %7 = phi i32 [ 0, %0 ], [ %12, %6 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !3327, metadata !DIExpression()), !dbg !3330
  %8 = getelementptr inbounds [20 x %struct.k_thread], [20 x %struct.k_thread]* @t, i32 0, i32 %7, !dbg !3338
  %9 = getelementptr inbounds [20 x [1088 x %struct.z_thread_stack_element]], [20 x [1088 x %struct.z_thread_stack_element]]* @tstacks, i32 0, i32 %7, i32 0, !dbg !3341
  %10 = inttoptr i32 %7 to i8*, !dbg !3342
  %11 = tail call fastcc %struct.k_thread* @k_thread_create(%struct.k_thread* noundef nonnull %8, %struct.z_thread_stack_element* noundef nonnull %9, i8* noundef %10) #24, !dbg !3343
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !3324, metadata !DIExpression()), !dbg !3344
  %12 = add nuw nsw i32 %7, 1, !dbg !3345
  call void @llvm.dbg.value(metadata i32 %12, metadata !3327, metadata !DIExpression()), !dbg !3330
  %13 = icmp eq i32 %12, 20, !dbg !3346
  br i1 %13, label %1, label %6, !dbg !3331, !llvm.loop !3347

14:                                               ; preds = %1, %14
  %15 = phi i32 [ %16, %14 ], [ %4, %1 ]
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @__func__.main, i32 0, i32 0), i32 noundef %15, i32 noundef 20) #25, !dbg !3349
  tail call fastcc void @k_condvar_wait() #24, !dbg !3351
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @__func__.main, i32 0, i32 0)) #25, !dbg !3352
  %16 = load i32, i32* @done, align 4, !dbg !3335
  %17 = icmp slt i32 %16, 20, !dbg !3336
  br i1 %17, label %14, label %18, !dbg !3337, !llvm.loop !3353

18:                                               ; preds = %14, %1
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @__func__.main, i32 0, i32 0), i32 noundef 20) #25, !dbg !3355
  tail call fastcc void @k_mutex_unlock() #24, !dbg !3356
  ret void, !dbg !3357
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.k_thread* @k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %2) unnamed_addr #1 !dbg !3358 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3376, metadata !DIExpression()), !dbg !3377
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3367, metadata !DIExpression()), !dbg !3377
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !3368, metadata !DIExpression()), !dbg !3377
  call void @llvm.dbg.value(metadata i32 1024, metadata !3369, metadata !DIExpression()), !dbg !3377
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* @worker_thread, metadata !3370, metadata !DIExpression()), !dbg !3377
  call void @llvm.dbg.value(metadata i8* %2, metadata !3371, metadata !DIExpression()), !dbg !3377
  call void @llvm.dbg.value(metadata i8* null, metadata !3372, metadata !DIExpression()), !dbg !3377
  call void @llvm.dbg.value(metadata i8* null, metadata !3373, metadata !DIExpression()), !dbg !3377
  call void @llvm.dbg.value(metadata i32 10, metadata !3374, metadata !DIExpression()), !dbg !3377
  call void @llvm.dbg.value(metadata i32 0, metadata !3375, metadata !DIExpression()), !dbg !3377
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3378, !srcloc !3380
  %4 = tail call %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @worker_thread, i8* noundef %2, i8* noundef null, i8* noundef null, i32 noundef 10, i32 noundef 0, [1 x i64] zeroinitializer) #25, !dbg !3381
  ret %struct.k_thread* %4, !dbg !3382
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_condvar_wait() unnamed_addr #1 !dbg !3383 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3389, metadata !DIExpression()), !dbg !3390
  call void @llvm.dbg.value(metadata %struct.k_condvar* @condvar, metadata !3387, metadata !DIExpression()), !dbg !3390
  call void @llvm.dbg.value(metadata %struct.k_mutex* @mutex, metadata !3388, metadata !DIExpression()), !dbg !3390
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3391, !srcloc !3393
  %1 = tail call i32 @z_impl_k_condvar_wait(%struct.k_condvar* noundef nonnull @condvar, %struct.k_mutex* noundef nonnull @mutex, [1 x i64] [i64 -1]) #25, !dbg !3394
  ret void, !dbg !3395
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !3396 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3411, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i8* %0, metadata !3407, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i32 %1, metadata !3408, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i32 %2, metadata !3409, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i8* %3, metadata !3410, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i8* %0, metadata !3412, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i8* %0, metadata !3413, metadata !DIExpression()), !dbg !3474
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !3475
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3475
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !3416, metadata !DIExpression()), !dbg !3476
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !3477
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3477
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !3418, metadata !DIExpression()), !dbg !3478
  call void @llvm.dbg.value(metadata i32 0, metadata !3419, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i32 0, metadata !3420, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i32 0, metadata !3421, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i32 -1, metadata !3422, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i8 0, metadata !3425, metadata !DIExpression()), !dbg !3474
  %12 = and i32 %2, 4, !dbg !3479
  %13 = icmp eq i32 %12, 0, !dbg !3480
  call void @llvm.dbg.value(metadata i1 %13, metadata !3426, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3474
  %14 = lshr i32 %2, 3, !dbg !3481
  %15 = and i32 %14, 7, !dbg !3481
  %16 = add nuw nsw i32 %15, 1, !dbg !3482
  call void @llvm.dbg.value(metadata i32 %16, metadata !3427, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i8 0, metadata !3428, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i8* %0, metadata !3429, metadata !DIExpression()), !dbg !3474
  %17 = ptrtoint i8* %0 to i32, !dbg !3483
  %18 = and i32 %17, 3, !dbg !3485
  %19 = icmp eq i32 %18, 0, !dbg !3485
  br i1 %19, label %20, label %320, !dbg !3486

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3487
  call void @llvm.dbg.value(metadata i8* %21, metadata !3413, metadata !DIExpression()), !dbg !3474
  %22 = icmp eq i8* %0, null, !dbg !3488
  %23 = and i32 %1, 7, !dbg !3490
  %24 = sub nuw nsw i32 8, %23, !dbg !3490
  %25 = select i1 %22, i32 %23, i32 0, !dbg !3490
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !3490
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !3490
  call void @llvm.dbg.value(metadata i32 %27, metadata !3408, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i8* %26, metadata !3413, metadata !DIExpression()), !dbg !3474
  br i1 %22, label %33, label %28, !dbg !3491

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !3493
  %30 = sub i32 4, %17, !dbg !3493
  %31 = add i32 %30, %29, !dbg !3494
  %32 = icmp ugt i32 %31, %27, !dbg !3495
  br i1 %32, label %320, label %33, !dbg !3496

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !3497
  call void @llvm.dbg.value(metadata i8* %34, metadata !3410, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i8* %3, metadata !3424, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i32 4, metadata !3415, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i32 4, metadata !3414, metadata !DIExpression()), !dbg !3474
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !3498

38:                                               ; preds = %63, %219
  %39 = phi i8 [ %224, %219 ], [ %64, %63 ]
  %40 = phi i8* [ %223, %219 ], [ %65, %63 ]
  %41 = phi i8* [ %221, %219 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %219 ], [ %67, %63 ]
  %43 = phi i8* [ %222, %219 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %219 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %219 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %219 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !3411, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i8* %42, metadata !3410, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i8* %43, metadata !3413, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i32 %44, metadata !3414, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i32 %45, metadata !3415, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i32 %72, metadata !3422, metadata !DIExpression()), !dbg !3474
  br i1 %46, label %73, label %47, !dbg !3499

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !3500
  %49 = zext i1 %48 to i32, !dbg !3504
  %50 = add nsw i32 %72, %49, !dbg !3504
  %51 = select i1 %48, i32 4, i32 %45, !dbg !3504
  %52 = select i1 %48, i32 4, i32 %44, !dbg !3504
  call void @llvm.dbg.value(metadata i32 %52, metadata !3414, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i32 %51, metadata !3415, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i8 poison, metadata !3425, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i32 %50, metadata !3422, metadata !DIExpression()), !dbg !3474
  br label %53, !dbg !3505

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3411, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i8* %40, metadata !3410, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i8* %58, metadata !3413, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i32 %57, metadata !3414, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i32 %56, metadata !3415, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i8 poison, metadata !3425, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i32 %54, metadata !3422, metadata !DIExpression()), !dbg !3474
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3506
  call void @llvm.dbg.value(metadata i8* %60, metadata !3410, metadata !DIExpression()), !dbg !3474
  %61 = load i8, i8* %60, align 1, !dbg !3508
  %62 = icmp eq i8 %61, 0, !dbg !3509
  br i1 %62, label %226, label %63, !dbg !3510, !llvm.loop !3511

63:                                               ; preds = %192, %53
  %64 = phi i8 [ %61, %53 ], [ %199, %192 ]
  %65 = phi i8* [ %60, %53 ], [ %198, %192 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %192 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %192 ]
  %68 = phi i8* [ %58, %53 ], [ %197, %192 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %192 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %192 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %192 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %192 ]
  br label %38, !dbg !3499

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !3514

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3425, metadata !DIExpression()), !dbg !3474
  %75 = add nsw i32 %72, -1, !dbg !3515
  call void @llvm.dbg.value(metadata i32 %75, metadata !3422, metadata !DIExpression()), !dbg !3474
  br label %53, !dbg !3516

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !3517

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3415, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i32 4, metadata !3414, metadata !DIExpression()), !dbg !3474
  br label %53, !dbg !3518

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3415, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i32 4, metadata !3414, metadata !DIExpression()), !dbg !3474
  br label %53, !dbg !3519

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !3520
  %81 = icmp eq i8 %80, 108, !dbg !3522
  br i1 %81, label %82, label %109, !dbg !3523

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !3524
  %84 = load i8, i8* %83, align 1, !dbg !3524
  %85 = icmp eq i8 %84, 108, !dbg !3527
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !3528
  %89 = add i32 %88, 7, !dbg !3528
  %90 = and i32 %89, -8, !dbg !3528
  %91 = inttoptr i32 %90 to i8*, !dbg !3528
  %92 = inttoptr i32 %90 to double*, !dbg !3528
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !3528
  %94 = load double, double* %92, align 8, !dbg !3528
  call void @llvm.dbg.value(metadata i8* %93, metadata !3411, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i32 8, metadata !3414, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i32 8, metadata !3415, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata double %94, metadata !3442, metadata !DIExpression()), !dbg !3530
  %95 = ptrtoint i8* %43 to i32, !dbg !3531
  %96 = add i32 %95, 7, !dbg !3531
  %97 = and i32 %96, -8, !dbg !3531
  %98 = inttoptr i32 %97 to i8*, !dbg !3532
  call void @llvm.dbg.value(metadata i8* %98, metadata !3413, metadata !DIExpression()), !dbg !3474
  br i1 %22, label %104, label %99, !dbg !3533

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !3534
  %101 = icmp ugt i32 %100, %196, !dbg !3538
  br i1 %101, label %320, label %102, !dbg !3539

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !3540
  store double %94, double* %103, align 8, !dbg !3540
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !3543
  call void @llvm.dbg.value(metadata i8* %105, metadata !3413, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i8 poison, metadata !3425, metadata !DIExpression()), !dbg !3474
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3425, metadata !DIExpression()), !dbg !3474
  br label %53, !dbg !3544

107:                                              ; preds = %73, %73
  br label %109, !dbg !3545

108:                                              ; preds = %73
  br label %109, !dbg !3545

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !3474
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !3474
  call void @llvm.dbg.value(metadata i32 %113, metadata !3414, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i32 %112, metadata !3415, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i8 poison, metadata !3428, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i8 poison, metadata !3425, metadata !DIExpression()), !dbg !3474
  %114 = ptrtoint i8* %43 to i32, !dbg !3545
  %115 = add i32 %114, -1, !dbg !3545
  %116 = add i32 %115, %112, !dbg !3545
  %117 = sub i32 0, %112, !dbg !3545
  %118 = and i32 %116, %117, !dbg !3545
  %119 = inttoptr i32 %118 to i8*, !dbg !3546
  call void @llvm.dbg.value(metadata i8* %119, metadata !3413, metadata !DIExpression()), !dbg !3474
  br i1 %22, label %124, label %120, !dbg !3547

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !3549
  %122 = add i32 %121, %118, !dbg !3550
  %123 = icmp ugt i32 %122, %196, !dbg !3551
  br i1 %123, label %320, label %124, !dbg !3552

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %201, !dbg !3553

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !3546
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3554
  call void @llvm.dbg.value(metadata i8* %127, metadata !3411, metadata !DIExpression()), !dbg !3474
  %128 = bitcast i8* %41 to i8**, !dbg !3554
  %129 = load i8*, i8** %128, align 4, !dbg !3554
  call void @llvm.dbg.value(metadata i8* %129, metadata !3424, metadata !DIExpression()), !dbg !3474
  br label %130, !dbg !3555

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !3474
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !3556
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !3474
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %194, %125 ], !dbg !3557
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !3474
  %137 = phi i32 [ 0, %33 ], [ %195, %125 ], !dbg !3474
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !3474
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !3474
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !3474
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !3474
  %142 = phi i32 [ %27, %33 ], [ %196, %125 ], !dbg !3558
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !3411, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i32 %142, metadata !3408, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i8* %141, metadata !3410, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i8* %140, metadata !3413, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i32 %139, metadata !3414, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i32 %138, metadata !3415, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i32 %137, metadata !3419, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i32 %136, metadata !3427, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i32 %135, metadata !3420, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i8 poison, metadata !3425, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i8* %133, metadata !3424, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i32 %132, metadata !3422, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i32 %131, metadata !3421, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.label(metadata !3473), !dbg !3560
  br i1 %22, label %146, label %144, !dbg !3561

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !3562
  store i8* %133, i8** %145, align 4, !dbg !3565
  br label %146, !dbg !3566

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !3567
  call void @llvm.dbg.value(metadata i32 %147, metadata !3427, metadata !DIExpression()), !dbg !3474
  %148 = icmp sgt i32 %136, 0, !dbg !3568
  br i1 %148, label %152, label %149, !dbg !3569

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #24, !dbg !3570
  %151 = zext i1 %150 to i32, !dbg !3570
  br label %152, !dbg !3569

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !3569
  %154 = icmp eq i32 %153, 0, !dbg !3569
  call void @llvm.dbg.value(metadata i1 %154, metadata !3451, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3571
  call void @llvm.dbg.value(metadata i1 %36, metadata !3454, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3571
  %155 = or i1 %36, %154, !dbg !3572
  br i1 %155, label %156, label %192, !dbg !3572

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !3573
  %158 = sub i32 %157, %17, !dbg !3573
  %159 = lshr i32 %158, 2, !dbg !3574
  call void @llvm.dbg.value(metadata i32 %159, metadata !3455, metadata !DIExpression()), !dbg !3575
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !3576
  br i1 %161, label %162, label %163, !dbg !3576

162:                                              ; preds = %156
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 635) #25, !dbg !3578
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4.10, i32 0, i32 0)) #25, !dbg !3578
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 635) #25, !dbg !3578
  unreachable, !dbg !3578

163:                                              ; preds = %156
  %164 = icmp ugt i32 %137, 15, !dbg !3583
  br i1 %164, label %165, label %166, !dbg !3585

165:                                              ; preds = %163
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 640) #25, !dbg !3586
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5.11, i32 0, i32 0)) #25, !dbg !3586
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 640) #25, !dbg !3586
  unreachable, !dbg !3586

166:                                              ; preds = %163
  br i1 %22, label %177, label %167, !dbg !3591

167:                                              ; preds = %166
  %168 = trunc i32 %159 to i8, !dbg !3592
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !3595
  store i8 %168, i8* %169, align 1, !dbg !3596
  %170 = trunc i32 %132 to i8, !dbg !3597
  %171 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !3598
  store i8 %170, i8* %171, align 1, !dbg !3599
  br i1 %154, label %175, label %172, !dbg !3600

172:                                              ; preds = %167
  %173 = or i8 %168, -128, !dbg !3601
  store i8 %173, i8* %169, align 1, !dbg !3601
  %174 = add i32 %131, 1, !dbg !3604
  call void @llvm.dbg.value(metadata i32 %174, metadata !3421, metadata !DIExpression()), !dbg !3474
  br label %187, !dbg !3605

175:                                              ; preds = %167
  %176 = add i32 %135, 1, !dbg !3606
  call void @llvm.dbg.value(metadata i32 %176, metadata !3420, metadata !DIExpression()), !dbg !3474
  br label %187

177:                                              ; preds = %166
  br i1 %154, label %180, label %178, !dbg !3608

178:                                              ; preds = %177
  %179 = add i32 %142, 1, !dbg !3609
  call void @llvm.dbg.value(metadata i32 %179, metadata !3408, metadata !DIExpression()), !dbg !3474
  br label %187, !dbg !3612

180:                                              ; preds = %177
  br i1 %13, label %183, label %181, !dbg !3613

181:                                              ; preds = %180
  %182 = add i32 %142, 2, !dbg !3614
  call void @llvm.dbg.value(metadata i32 %182, metadata !3408, metadata !DIExpression()), !dbg !3474
  br label %187, !dbg !3617

183:                                              ; preds = %180
  %184 = tail call i32 @strlen(i8* noundef %133) #25, !dbg !3618
  %185 = add i32 %142, 2, !dbg !3620
  %186 = add i32 %185, %184, !dbg !3621
  call void @llvm.dbg.value(metadata i32 %186, metadata !3408, metadata !DIExpression()), !dbg !3474
  br label %187

187:                                              ; preds = %178, %183, %181, %172, %175
  %188 = phi i32 [ %174, %172 ], [ %131, %175 ], [ %131, %178 ], [ %131, %181 ], [ %131, %183 ], !dbg !3474
  %189 = phi i32 [ %135, %172 ], [ %176, %175 ], [ %135, %178 ], [ %135, %181 ], [ %135, %183 ], !dbg !3474
  %190 = phi i32 [ %142, %172 ], [ %142, %175 ], [ %179, %178 ], [ %182, %181 ], [ %186, %183 ], !dbg !3474
  call void @llvm.dbg.value(metadata i32 %190, metadata !3408, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i32 %189, metadata !3420, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i32 %188, metadata !3421, metadata !DIExpression()), !dbg !3474
  %191 = add nuw nsw i32 %137, 1, !dbg !3622
  call void @llvm.dbg.value(metadata i32 %191, metadata !3419, metadata !DIExpression()), !dbg !3474
  br label %192

192:                                              ; preds = %152, %187
  %193 = phi i32 [ %188, %187 ], [ %131, %152 ], !dbg !3474
  %194 = phi i32 [ %189, %187 ], [ %135, %152 ], !dbg !3557
  %195 = phi i32 [ %191, %187 ], [ %137, %152 ], !dbg !3474
  %196 = phi i32 [ %190, %187 ], [ %142, %152 ], !dbg !3558
  call void @llvm.dbg.value(metadata i32 %196, metadata !3408, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i32 %195, metadata !3419, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i32 %194, metadata !3420, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i32 %193, metadata !3421, metadata !DIExpression()), !dbg !3474
  %197 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !3623
  call void @llvm.dbg.value(metadata i8* %197, metadata !3413, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i8* %143, metadata !3411, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i8* %141, metadata !3410, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i32 %139, metadata !3414, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i32 %138, metadata !3415, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i8 poison, metadata !3428, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i8 poison, metadata !3425, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i32 %132, metadata !3422, metadata !DIExpression()), !dbg !3474
  %198 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !3506
  call void @llvm.dbg.value(metadata i8* %198, metadata !3410, metadata !DIExpression()), !dbg !3474
  %199 = load i8, i8* %198, align 1, !dbg !3508
  %200 = icmp eq i8 %199, 0, !dbg !3509
  br i1 %200, label %226, label %63, !dbg !3510

201:                                              ; preds = %124
  switch i32 %113, label %218 [
    i32 4, label %202
    i32 8, label %208
  ], !dbg !3624

202:                                              ; preds = %201
  %203 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3625
  call void @llvm.dbg.value(metadata i8* %203, metadata !3411, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i32 undef, metadata !3458, metadata !DIExpression()), !dbg !3626
  br i1 %22, label %219, label %204, !dbg !3627

204:                                              ; preds = %202
  %205 = bitcast i8* %41 to i32*, !dbg !3625
  %206 = load i32, i32* %205, align 4, !dbg !3625
  call void @llvm.dbg.value(metadata i32 %206, metadata !3458, metadata !DIExpression()), !dbg !3626
  %207 = inttoptr i32 %118 to i32*, !dbg !3628
  store i32 %206, i32* %207, align 4, !dbg !3631
  br label %219, !dbg !3632

208:                                              ; preds = %201
  %209 = ptrtoint i8* %41 to i32, !dbg !3633
  %210 = add i32 %209, 7, !dbg !3633
  %211 = and i32 %210, -8, !dbg !3633
  %212 = inttoptr i32 %211 to i8*, !dbg !3633
  %213 = getelementptr inbounds i8, i8* %212, i32 8, !dbg !3633
  call void @llvm.dbg.value(metadata i8* %213, metadata !3411, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i64 undef, metadata !3464, metadata !DIExpression()), !dbg !3634
  br i1 %22, label %219, label %214, !dbg !3635

214:                                              ; preds = %208
  %215 = inttoptr i32 %211 to i64*, !dbg !3633
  %216 = load i64, i64* %215, align 8, !dbg !3633
  call void @llvm.dbg.value(metadata i64 %216, metadata !3464, metadata !DIExpression()), !dbg !3634
  %217 = inttoptr i32 %118 to i64*, !dbg !3636
  store i64 %216, i64* %217, align 8, !dbg !3641
  br label %219, !dbg !3642

218:                                              ; preds = %201
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 709) #25, !dbg !3643
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i32 0, i32 0), i32 noundef %113) #25, !dbg !3643
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 709) #25, !dbg !3643
  unreachable, !dbg !3643

219:                                              ; preds = %208, %214, %202, %204
  %220 = phi i32 [ 4, %204 ], [ 4, %202 ], [ 8, %214 ], [ 8, %208 ]
  %221 = phi i8* [ %203, %204 ], [ %203, %202 ], [ %213, %214 ], [ %213, %208 ], !dbg !3648
  %222 = getelementptr inbounds i8, i8* %119, i32 %220, !dbg !3648
  call void @llvm.dbg.value(metadata i8* %221, metadata !3411, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i8* %40, metadata !3410, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i8* %222, metadata !3413, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i32 %113, metadata !3414, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i32 %112, metadata !3415, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i8 poison, metadata !3428, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i8 poison, metadata !3425, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i32 %72, metadata !3422, metadata !DIExpression()), !dbg !3474
  %223 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3506
  call void @llvm.dbg.value(metadata i8* %223, metadata !3410, metadata !DIExpression()), !dbg !3474
  %224 = load i8, i8* %223, align 1, !dbg !3508
  %225 = icmp eq i8 %224, 0, !dbg !3509
  br i1 %225, label %226, label %38, !dbg !3510

226:                                              ; preds = %192, %219, %53
  %227 = phi i8* [ %222, %219 ], [ %58, %53 ], [ %197, %192 ], !dbg !3649
  %228 = ptrtoint i8* %227 to i32, !dbg !3650
  %229 = sub i32 %228, %17, !dbg !3650
  %230 = lshr i32 %229, 2, !dbg !3652
  %231 = icmp ugt i32 %229, 1023, !dbg !3653
  br i1 %231, label %232, label %233, !dbg !3654

232:                                              ; preds = %226
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 721) #25, !dbg !3655
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i32 0, i32 0)) #25, !dbg !3655
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 721) #25, !dbg !3655
  unreachable, !dbg !3655

233:                                              ; preds = %226
  br i1 %22, label %234, label %237, !dbg !3660

234:                                              ; preds = %233
  %235 = add i32 %196, -8, !dbg !3661
  %236 = add i32 %235, %229, !dbg !3664
  br label %320, !dbg !3665

237:                                              ; preds = %233
  %238 = trunc i32 %230 to i8, !dbg !3666
  store i8 %238, i8* %0, align 1, !dbg !3667
  %239 = trunc i32 %194 to i8, !dbg !3668
  %240 = select i1 %13, i8 %239, i8 0
  %241 = select i1 %13, i8 0, i8 %239
  %242 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !3670
  store i8 %240, i8* %242, align 1, !dbg !3672
  %243 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3673
  store i8 %241, i8* %243, align 1, !dbg !3674
  %244 = trunc i32 %193 to i8, !dbg !3675
  %245 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3676
  store i8 %244, i8* %245, align 1, !dbg !3677
  %246 = icmp eq i32 %193, 0, !dbg !3678
  %247 = xor i1 %246, true, !dbg !3679
  %248 = icmp ne i32 %195, 0
  %249 = select i1 %247, i1 %248, i1 false, !dbg !3679
  call void @llvm.dbg.value(metadata i8* %227, metadata !3413, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i32 0, metadata !3423, metadata !DIExpression()), !dbg !3474
  br i1 %249, label %250, label %269, !dbg !3679

250:                                              ; preds = %237
  %251 = sub i32 1, %17
  br label %252, !dbg !3680

252:                                              ; preds = %250, %265
  %253 = phi i8* [ %227, %250 ], [ %266, %265 ]
  %254 = phi i32 [ 0, %250 ], [ %267, %265 ]
  call void @llvm.dbg.value(metadata i8* %253, metadata !3413, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i32 %254, metadata !3423, metadata !DIExpression()), !dbg !3474
  %255 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %254, !dbg !3681
  %256 = load i8, i8* %255, align 1, !dbg !3681
  %257 = icmp sgt i8 %256, -1, !dbg !3683
  br i1 %257, label %265, label %258, !dbg !3684

258:                                              ; preds = %252
  call void @llvm.dbg.value(metadata i8 %256, metadata !3467, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3685
  %259 = ptrtoint i8* %253 to i32, !dbg !3686
  %260 = add i32 %251, %259, !dbg !3688
  %261 = icmp ugt i32 %260, %196, !dbg !3689
  br i1 %261, label %320, label %262, !dbg !3690

262:                                              ; preds = %258
  %263 = and i8 %256, 127, !dbg !3691
  call void @llvm.dbg.value(metadata i8 %263, metadata !3467, metadata !DIExpression()), !dbg !3685
  %264 = getelementptr inbounds i8, i8* %253, i32 1, !dbg !3692
  call void @llvm.dbg.value(metadata i8* %264, metadata !3413, metadata !DIExpression()), !dbg !3474
  store i8 %263, i8* %253, align 1, !dbg !3693
  br label %265

265:                                              ; preds = %262, %252
  %266 = phi i8* [ %264, %262 ], [ %253, %252 ], !dbg !3623
  call void @llvm.dbg.value(metadata i8* %266, metadata !3413, metadata !DIExpression()), !dbg !3474
  %267 = add nuw i32 %254, 1, !dbg !3694
  call void @llvm.dbg.value(metadata i32 %267, metadata !3423, metadata !DIExpression()), !dbg !3474
  %268 = icmp eq i32 %267, %195, !dbg !3695
  br i1 %268, label %269, label %252, !dbg !3680, !llvm.loop !3696

269:                                              ; preds = %265, %237
  %270 = phi i8* [ %227, %237 ], [ %266, %265 ], !dbg !3623
  call void @llvm.dbg.value(metadata i8* %270, metadata !3413, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i32 0, metadata !3423, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i8* %133, metadata !3424, metadata !DIExpression()), !dbg !3474
  %271 = icmp eq i32 %195, 0, !dbg !3698
  br i1 %271, label %316, label %272, !dbg !3701

272:                                              ; preds = %269
  %273 = sub i32 1, %17
  br label %274, !dbg !3701

274:                                              ; preds = %272, %311
  %275 = phi i8* [ %270, %272 ], [ %313, %311 ]
  %276 = phi i8* [ %133, %272 ], [ %312, %311 ]
  %277 = phi i32 [ 0, %272 ], [ %314, %311 ]
  call void @llvm.dbg.value(metadata i8* %275, metadata !3413, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i8* %276, metadata !3424, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i32 %277, metadata !3423, metadata !DIExpression()), !dbg !3474
  br i1 %246, label %282, label %278, !dbg !3702

278:                                              ; preds = %274
  %279 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3705
  %280 = load i8, i8* %279, align 1, !dbg !3705
  %281 = icmp sgt i8 %280, -1, !dbg !3706
  br i1 %281, label %282, label %311, !dbg !3707

282:                                              ; preds = %278, %274
  br i1 %13, label %287, label %283, !dbg !3708

283:                                              ; preds = %282
  call void @llvm.dbg.value(metadata i32 0, metadata !3414, metadata !DIExpression()), !dbg !3474
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %277, !dbg !3709
  %285 = load i8, i8* %284, align 1, !dbg !3709
  %286 = getelementptr inbounds i8, i8* %275, i32 1, !dbg !3712
  call void @llvm.dbg.value(metadata i8* %286, metadata !3413, metadata !DIExpression()), !dbg !3474
  store i8 %285, i8* %275, align 1, !dbg !3713
  br label %297, !dbg !3714

287:                                              ; preds = %282
  %288 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3715
  %289 = load i8, i8* %288, align 1, !dbg !3715
  %290 = zext i8 %289 to i32, !dbg !3715
  %291 = shl nuw nsw i32 %290, 2, !dbg !3717
  %292 = getelementptr inbounds i8, i8* %0, i32 %291, !dbg !3718
  %293 = bitcast i8* %292 to i8**, !dbg !3719
  %294 = load i8*, i8** %293, align 4, !dbg !3719
  call void @llvm.dbg.value(metadata i8* %294, metadata !3424, metadata !DIExpression()), !dbg !3474
  store i8* null, i8** %293, align 4, !dbg !3720
  %295 = tail call i32 @strlen(i8* noundef %294) #25, !dbg !3721
  %296 = add i32 %295, 1, !dbg !3722
  call void @llvm.dbg.value(metadata i32 %296, metadata !3414, metadata !DIExpression()), !dbg !3474
  br label %297

297:                                              ; preds = %287, %283
  %298 = phi i8* [ %276, %283 ], [ %294, %287 ], !dbg !3474
  %299 = phi i32 [ 0, %283 ], [ %296, %287 ], !dbg !3723
  %300 = phi i8* [ %286, %283 ], [ %275, %287 ], !dbg !3474
  call void @llvm.dbg.value(metadata i8* %300, metadata !3413, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i32 %299, metadata !3414, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i8* %298, metadata !3424, metadata !DIExpression()), !dbg !3474
  %301 = ptrtoint i8* %300 to i32, !dbg !3724
  %302 = add i32 %273, %299, !dbg !3726
  %303 = add i32 %302, %301, !dbg !3727
  %304 = icmp ugt i32 %303, %196, !dbg !3728
  br i1 %304, label %320, label %305, !dbg !3729

305:                                              ; preds = %297
  %306 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3730
  %307 = load i8, i8* %306, align 1, !dbg !3730
  %308 = getelementptr inbounds i8, i8* %300, i32 1, !dbg !3731
  call void @llvm.dbg.value(metadata i8* %308, metadata !3413, metadata !DIExpression()), !dbg !3474
  store i8 %307, i8* %300, align 1, !dbg !3732
  %309 = tail call i8* @memcpy(i8* noundef nonnull %308, i8* noundef %298, i32 noundef %299) #25, !dbg !3733
  %310 = getelementptr inbounds i8, i8* %308, i32 %299, !dbg !3734
  call void @llvm.dbg.value(metadata i8* %310, metadata !3413, metadata !DIExpression()), !dbg !3474
  br label %311, !dbg !3735

311:                                              ; preds = %278, %305
  %312 = phi i8* [ %276, %278 ], [ %298, %305 ], !dbg !3736
  %313 = phi i8* [ %275, %278 ], [ %310, %305 ], !dbg !3474
  call void @llvm.dbg.value(metadata i8* %313, metadata !3413, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i8* %312, metadata !3424, metadata !DIExpression()), !dbg !3474
  %314 = add nuw i32 %277, 1, !dbg !3737
  call void @llvm.dbg.value(metadata i32 %314, metadata !3423, metadata !DIExpression()), !dbg !3474
  %315 = icmp eq i32 %314, %195, !dbg !3698
  br i1 %315, label %316, label %274, !dbg !3701, !llvm.loop !3738

316:                                              ; preds = %311, %269
  %317 = phi i8* [ %270, %269 ], [ %313, %311 ], !dbg !3623
  %318 = ptrtoint i8* %317 to i32, !dbg !3740
  %319 = sub i32 %318, %17, !dbg !3740
  br label %320, !dbg !3741

320:                                              ; preds = %120, %99, %258, %297, %28, %5, %316, %234
  %321 = phi i32 [ %236, %234 ], [ %319, %316 ], [ -14, %5 ], [ -28, %28 ], [ -28, %297 ], [ -28, %258 ], [ -28, %99 ], [ -28, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3742
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3742
  ret i32 %321, !dbg !3742
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #3 !dbg !3743 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3747, metadata !DIExpression()), !dbg !3748
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #24, !dbg !3749
  ret i1 %2, !dbg !3750
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #3 !dbg !3751 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3756, metadata !DIExpression()), !dbg !3757
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !3758
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !3759
  %4 = and i1 %2, %3, !dbg !3759
  ret i1 %4, !dbg !3760
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !3761 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3765, metadata !DIExpression()), !dbg !3771
  call void @llvm.dbg.value(metadata i32 %1, metadata !3766, metadata !DIExpression()), !dbg !3771
  call void @llvm.dbg.value(metadata i32 %2, metadata !3767, metadata !DIExpression()), !dbg !3771
  call void @llvm.dbg.value(metadata i8* %3, metadata !3768, metadata !DIExpression()), !dbg !3771
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !3772
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3772
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !3769, metadata !DIExpression()), !dbg !3773
  call void @llvm.va_start(i8* nonnull %6), !dbg !3774
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !3775
  %8 = load i32, i32* %7, align 4, !dbg !3775
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !3775
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #24, !dbg !3775
  call void @llvm.dbg.value(metadata i32 %10, metadata !3770, metadata !DIExpression()), !dbg !3771
  call void @llvm.va_end(i8* nonnull %6), !dbg !3776
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3777
  ret i32 %10, !dbg !3778
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #5

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !3779 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3791, metadata !DIExpression()), !dbg !3810
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3792, metadata !DIExpression()), !dbg !3810
  call void @llvm.dbg.value(metadata i8* %2, metadata !3793, metadata !DIExpression()), !dbg !3810
  call void @llvm.dbg.value(metadata i8* %3, metadata !3794, metadata !DIExpression()), !dbg !3810
  call void @llvm.dbg.value(metadata i8* %3, metadata !3795, metadata !DIExpression()), !dbg !3810
  call void @llvm.dbg.value(metadata i8* %3, metadata !3796, metadata !DIExpression()), !dbg !3810
  %5 = icmp eq i8* %3, null, !dbg !3811
  br i1 %5, label %45, label %6, !dbg !3813

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !3805, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3810
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !3814
  %8 = load i8, i8* %7, align 1, !dbg !3814
  %9 = zext i8 %8 to i32, !dbg !3815
  call void @llvm.dbg.value(metadata i32 %9, metadata !3806, metadata !DIExpression()), !dbg !3810
  call void @llvm.dbg.value(metadata i8 undef, metadata !3807, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3810
  call void @llvm.dbg.value(metadata i8 undef, metadata !3808, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3810
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !3802, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3810
  call void @llvm.dbg.value(metadata i32 0, metadata !3804, metadata !DIExpression()), !dbg !3810
  %10 = icmp eq i8 %8, 0, !dbg !3816
  br i1 %10, label %39, label %11, !dbg !3819

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !3820
  call void @llvm.dbg.value(metadata i8 %12, metadata !3805, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3810
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !3802, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3810
  %13 = zext i8 %12 to i32, !dbg !3821
  call void @llvm.dbg.value(metadata i32 %13, metadata !3805, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3810
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !3802, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3810
  %14 = shl nuw nsw i32 %13, 2, !dbg !3822
  call void @llvm.dbg.value(metadata i32 %14, metadata !3805, metadata !DIExpression()), !dbg !3810
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !3802, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3810
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !3823
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !3802, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3810
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !3824
  %17 = load i8, i8* %16, align 1, !dbg !3824
  call void @llvm.dbg.value(metadata i8 %17, metadata !3807, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3810
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !3802, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3810
  %18 = zext i8 %17 to i32, !dbg !3825
  call void @llvm.dbg.value(metadata i32 %18, metadata !3807, metadata !DIExpression()), !dbg !3810
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !3802, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3810
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !3826
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !3802, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3810
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !3827
  %21 = load i8, i8* %20, align 1, !dbg !3827
  call void @llvm.dbg.value(metadata i8 %21, metadata !3808, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3810
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !3802, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3810
  %22 = zext i8 %21 to i32, !dbg !3828
  call void @llvm.dbg.value(metadata i32 %22, metadata !3808, metadata !DIExpression()), !dbg !3810
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !3802, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3810
  %23 = shl nuw nsw i32 %22, 1, !dbg !3829
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !3802, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3810
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !3830
  call void @llvm.dbg.value(metadata i8* %24, metadata !3802, metadata !DIExpression()), !dbg !3810
  br label %25, !dbg !3819

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !3802, metadata !DIExpression()), !dbg !3810
  call void @llvm.dbg.value(metadata i32 %27, metadata !3804, metadata !DIExpression()), !dbg !3810
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !3831
  call void @llvm.dbg.value(metadata i8* %28, metadata !3802, metadata !DIExpression()), !dbg !3810
  %29 = load i8, i8* %26, align 1, !dbg !3833
  %30 = zext i8 %29 to i32, !dbg !3833
  call void @llvm.dbg.value(metadata i32 %30, metadata !3809, metadata !DIExpression()), !dbg !3810
  %31 = shl nuw nsw i32 %30, 2, !dbg !3834
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !3835
  %33 = bitcast i8* %32 to i8**, !dbg !3836
  call void @llvm.dbg.value(metadata i8** %33, metadata !3803, metadata !DIExpression()), !dbg !3810
  store i8* %28, i8** %33, align 4, !dbg !3837
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #25, !dbg !3838
  %35 = add i32 %34, 1, !dbg !3839
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !3840
  call void @llvm.dbg.value(metadata i8* %36, metadata !3802, metadata !DIExpression()), !dbg !3810
  %37 = add nuw nsw i32 %27, 1, !dbg !3841
  call void @llvm.dbg.value(metadata i32 %37, metadata !3804, metadata !DIExpression()), !dbg !3810
  %38 = icmp eq i32 %37, %9, !dbg !3816
  br i1 %38, label %39, label %25, !dbg !3819, !llvm.loop !3842

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !3844
  call void @llvm.dbg.value(metadata i8* %40, metadata !3795, metadata !DIExpression()), !dbg !3810
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !3845
  %42 = bitcast i8* %41 to i8**, !dbg !3845
  %43 = load i8*, i8** %42, align 1, !dbg !3845
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #24, !dbg !3846
  br label %45, !dbg !3847

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !3810
  ret i32 %46, !dbg !3848
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !3849 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3853, metadata !DIExpression()), !dbg !3863
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3854, metadata !DIExpression()), !dbg !3863
  call void @llvm.dbg.value(metadata i8* %2, metadata !3855, metadata !DIExpression()), !dbg !3863
  call void @llvm.dbg.value(metadata i8* %3, metadata !3856, metadata !DIExpression()), !dbg !3863
  call void @llvm.dbg.value(metadata i8* %4, metadata !3857, metadata !DIExpression()), !dbg !3863
  call void @llvm.dbg.value(metadata i8* %4, metadata !3858, metadata !DIExpression()), !dbg !3863
  %6 = ptrtoint i8* %4 to i32, !dbg !3864
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !3864
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #25, !dbg !3864
  ret i32 %8, !dbg !3865
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !3866 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3870, metadata !DIExpression()), !dbg !3875
  call void @llvm.dbg.value(metadata i32 %1, metadata !3871, metadata !DIExpression()), !dbg !3875
  call void @llvm.dbg.value(metadata i8 0, metadata !3873, metadata !DIExpression()), !dbg !3875
  call void @llvm.dbg.value(metadata i32 0, metadata !3874, metadata !DIExpression()), !dbg !3875
  call void @llvm.dbg.value(metadata i8 poison, metadata !3873, metadata !DIExpression()), !dbg !3875
  call void @llvm.dbg.value(metadata i8* %0, metadata !3870, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3875
  %3 = load i8, i8* %0, align 1, !dbg !3876
  call void @llvm.dbg.value(metadata i8 %3, metadata !3872, metadata !DIExpression()), !dbg !3875
  %4 = icmp eq i8 %3, 0, !dbg !3877
  br i1 %4, label %29, label %5, !dbg !3878

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !3879
  call void @llvm.dbg.value(metadata i32 %8, metadata !3874, metadata !DIExpression()), !dbg !3875
  br i1 %9, label %11, label %22, !dbg !3880

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !3882
  br i1 %12, label %13, label %17, !dbg !3886

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !3887
  br i1 %14, label %29, label %15, !dbg !3890

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !3891
  br i1 %16, label %29, label %22, !dbg !3893

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !3894
  %19 = xor i1 %18, true, !dbg !3896
  %20 = zext i1 %18 to i32, !dbg !3896
  %21 = add nsw i32 %8, %20, !dbg !3896
  br label %22, !dbg !3896

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !3875
  call void @llvm.dbg.value(metadata i32 %24, metadata !3874, metadata !DIExpression()), !dbg !3875
  call void @llvm.dbg.value(metadata i8 poison, metadata !3873, metadata !DIExpression()), !dbg !3875
  %25 = icmp eq i8 %6, 37, !dbg !3897
  %26 = xor i1 %25, %23, !dbg !3899
  call void @llvm.dbg.value(metadata i8* %10, metadata !3870, metadata !DIExpression()), !dbg !3875
  call void @llvm.dbg.value(metadata i8* %10, metadata !3870, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3875
  %27 = load i8, i8* %10, align 1, !dbg !3876
  call void @llvm.dbg.value(metadata i8 %27, metadata !3872, metadata !DIExpression()), !dbg !3875
  %28 = icmp eq i8 %27, 0, !dbg !3877
  br i1 %28, label %29, label %5, !dbg !3878, !llvm.loop !3900

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !3875
  ret i1 %30, !dbg !3902
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #3 !dbg !3903 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !3907, metadata !DIExpression()), !dbg !3908
  %2 = add i8 %0, -64, !dbg !3909
  %3 = icmp ult i8 %2, 59, !dbg !3909
  ret i1 %3, !dbg !3910
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !3911 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3919, metadata !DIExpression()), !dbg !3988
  call void @llvm.dbg.value(metadata i32 %1, metadata !3920, metadata !DIExpression()), !dbg !3988
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !3921, metadata !DIExpression()), !dbg !3988
  call void @llvm.dbg.value(metadata i8* %3, metadata !3922, metadata !DIExpression()), !dbg !3988
  call void @llvm.dbg.value(metadata i32 %4, metadata !3923, metadata !DIExpression()), !dbg !3988
  call void @llvm.dbg.value(metadata i16* %5, metadata !3924, metadata !DIExpression()), !dbg !3988
  call void @llvm.dbg.value(metadata i32 %6, metadata !3925, metadata !DIExpression()), !dbg !3988
  %11 = icmp eq i8* %0, null, !dbg !3989
  br i1 %11, label %12, label %13, !dbg !3992

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 916) #25, !dbg !3993
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 916) #25, !dbg !3993
  unreachable, !dbg !3993

13:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8* %0, metadata !3926, metadata !DIExpression()), !dbg !3988
  %14 = bitcast i8* %0 to i32*, !dbg !3995
  call void @llvm.dbg.value(metadata i32* %14, metadata !3927, metadata !DIExpression()), !dbg !3988
  %15 = and i32 %4, 8, !dbg !3996
  %16 = icmp eq i32 %15, 0, !dbg !3997
  call void @llvm.dbg.value(metadata i1 %16, metadata !3931, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3988
  call void @llvm.dbg.value(metadata i8* %0, metadata !3934, metadata !DIExpression()), !dbg !3988
  %17 = icmp eq i32 %1, 0, !dbg !3998
  br i1 %17, label %18, label %20, !dbg !3999

18:                                               ; preds = %13
  %19 = tail call fastcc i32 @get_package_len(i8* noundef nonnull %0) #24, !dbg !4000
  br label %20, !dbg !3999

20:                                               ; preds = %13, %18
  %21 = phi i32 [ %19, %18 ], [ %1, %13 ], !dbg !3999
  call void @llvm.dbg.value(metadata i32 %21, metadata !3920, metadata !DIExpression()), !dbg !3988
  %22 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4001
  %23 = load i8, i8* %22, align 1, !dbg !4001
  %24 = zext i8 %23 to i32, !dbg !4002
  call void @llvm.dbg.value(metadata i32 %24, metadata !3929, metadata !DIExpression()), !dbg !3988
  %25 = icmp ne i8 %23, 0, !dbg !4003
  %26 = and i32 %4, 1, !dbg !4004
  %27 = icmp ne i32 %26, 0, !dbg !4004
  %28 = and i1 %27, %25, !dbg !4004
  call void @llvm.dbg.value(metadata i1 %28, metadata !3933, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3988
  %29 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4005
  %30 = load i8, i8* %29, align 1, !dbg !4005
  %31 = zext i8 %30 to i32, !dbg !4006
  call void @llvm.dbg.value(metadata i32 %31, metadata !3930, metadata !DIExpression()), !dbg !3988
  %32 = icmp ne i8 %30, 0, !dbg !4007
  %33 = and i32 %4, 2, !dbg !4008
  %34 = icmp ne i32 %33, 0, !dbg !4008
  %35 = and i1 %34, %32, !dbg !4008
  call void @llvm.dbg.value(metadata i1 %35, metadata !3932, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3988
  %36 = select i1 %35, i1 true, i1 %28, !dbg !4009
  br i1 %36, label %41, label %37, !dbg !4009

37:                                               ; preds = %20
  %38 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4011
  br i1 %38, label %287, label %39, !dbg !4014

39:                                               ; preds = %37
  %40 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %21, i8* noundef %3) #25, !dbg !4015
  br label %287, !dbg !4017

41:                                               ; preds = %20
  %42 = load i8, i8* %0, align 1, !dbg !4018
  %43 = zext i8 %42 to i32, !dbg !4019
  %44 = shl nuw nsw i32 %43, 2, !dbg !4020
  call void @llvm.dbg.value(metadata i32 %44, metadata !3928, metadata !DIExpression()), !dbg !3988
  %45 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4021
  %46 = bitcast i8* %45 to i8**, !dbg !4022
  %47 = load i8*, i8** %46, align 4, !dbg !4022
  call void @llvm.dbg.value(metadata i8* %47, metadata !3937, metadata !DIExpression()), !dbg !3988
  %48 = getelementptr inbounds i8, i8* %0, i32 %44, !dbg !4023
  call void @llvm.dbg.value(metadata i8* %48, metadata !3938, metadata !DIExpression()), !dbg !3988
  call void @llvm.dbg.value(metadata i32 0, metadata !3939, metadata !DIExpression()), !dbg !3988
  %49 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4024
  br i1 %49, label %50, label %135, !dbg !4025

50:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %21, metadata !3936, metadata !DIExpression()), !dbg !3988
  br i1 %28, label %51, label %76, !dbg !4026

51:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %21, metadata !3936, metadata !DIExpression()), !dbg !3988
  call void @llvm.dbg.value(metadata i8* %48, metadata !3938, metadata !DIExpression()), !dbg !3988
  call void @llvm.dbg.value(metadata i32 0, metadata !3939, metadata !DIExpression()), !dbg !3988
  call void @llvm.dbg.value(metadata i32 0, metadata !3940, metadata !DIExpression()), !dbg !4027
  %52 = icmp ne i16* %5, null
  br label %53, !dbg !4028

53:                                               ; preds = %51, %70
  %54 = phi i32 [ %21, %51 ], [ %72, %70 ]
  %55 = phi i8* [ %48, %51 ], [ %73, %70 ]
  %56 = phi i32 [ 0, %51 ], [ %71, %70 ]
  %57 = phi i32 [ 0, %51 ], [ %74, %70 ]
  call void @llvm.dbg.value(metadata i32 %54, metadata !3936, metadata !DIExpression()), !dbg !3988
  call void @llvm.dbg.value(metadata i8* %55, metadata !3938, metadata !DIExpression()), !dbg !3988
  call void @llvm.dbg.value(metadata i32 %56, metadata !3939, metadata !DIExpression()), !dbg !3988
  call void @llvm.dbg.value(metadata i32 %57, metadata !3940, metadata !DIExpression()), !dbg !4027
  %58 = load i8, i8* %55, align 1, !dbg !4029
  %59 = zext i8 %58 to i32, !dbg !4030
  %60 = getelementptr inbounds i32, i32* %14, i32 %59, !dbg !4030
  %61 = bitcast i32* %60 to i8**, !dbg !4031
  %62 = load i8*, i8** %61, align 4, !dbg !4031
  call void @llvm.dbg.value(metadata i8* %62, metadata !3946, metadata !DIExpression()), !dbg !4032
  %63 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %62, i16 noundef zeroext 0) #24, !dbg !4033
  call void @llvm.dbg.value(metadata i32 %63, metadata !3949, metadata !DIExpression()), !dbg !4032
  %64 = icmp ult i32 %56, %6
  %65 = select i1 %52, i1 %64, i1 false, !dbg !4034
  br i1 %65, label %66, label %70, !dbg !4034

66:                                               ; preds = %53
  %67 = trunc i32 %63 to i16, !dbg !4036
  %68 = add nuw i32 %56, 1, !dbg !4038
  call void @llvm.dbg.value(metadata i32 %68, metadata !3939, metadata !DIExpression()), !dbg !3988
  %69 = getelementptr inbounds i16, i16* %5, i32 %56, !dbg !4039
  store i16 %67, i16* %69, align 2, !dbg !4040
  br label %70, !dbg !4041

70:                                               ; preds = %66, %53
  %71 = phi i32 [ %68, %66 ], [ %56, %53 ], !dbg !3988
  call void @llvm.dbg.value(metadata i32 %71, metadata !3939, metadata !DIExpression()), !dbg !3988
  %72 = add nsw i32 %63, %54, !dbg !4042
  call void @llvm.dbg.value(metadata i32 %72, metadata !3936, metadata !DIExpression()), !dbg !3988
  %73 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !4043
  call void @llvm.dbg.value(metadata i8* %73, metadata !3938, metadata !DIExpression()), !dbg !3988
  %74 = add nuw nsw i32 %57, 1, !dbg !4044
  call void @llvm.dbg.value(metadata i32 %74, metadata !3940, metadata !DIExpression()), !dbg !4027
  %75 = icmp eq i32 %74, %24, !dbg !4045
  br i1 %75, label %82, label %53, !dbg !4028, !llvm.loop !4046

76:                                               ; preds = %50
  %77 = and i32 %4, 4
  %78 = icmp ne i32 %77, 0
  %79 = and i1 %78, %25, !dbg !4048
  %80 = select i1 %79, i32 %24, i32 0, !dbg !4048
  %81 = getelementptr i8, i8* %48, i32 %80, !dbg !4048
  br label %82, !dbg !4048

82:                                               ; preds = %70, %76
  %83 = phi i32 [ 0, %76 ], [ %71, %70 ], !dbg !4051
  %84 = phi i8* [ %81, %76 ], [ %73, %70 ], !dbg !3988
  %85 = phi i32 [ %21, %76 ], [ %72, %70 ], !dbg !4052
  call void @llvm.dbg.value(metadata i1 undef, metadata !3950, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4053
  call void @llvm.dbg.value(metadata i32 0, metadata !3951, metadata !DIExpression()), !dbg !4054
  call void @llvm.dbg.value(metadata i32 %85, metadata !3936, metadata !DIExpression()), !dbg !3988
  call void @llvm.dbg.value(metadata i8* %84, metadata !3938, metadata !DIExpression()), !dbg !3988
  call void @llvm.dbg.value(metadata i32 %83, metadata !3939, metadata !DIExpression()), !dbg !3988
  %86 = icmp eq i8 %30, 0, !dbg !4055
  br i1 %86, label %287, label %87, !dbg !4056

87:                                               ; preds = %82
  %88 = and i32 %4, 5, !dbg !4057
  %89 = icmp eq i32 %88, 0, !dbg !4058
  call void @llvm.dbg.value(metadata i1 %89, metadata !3950, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4053
  %90 = icmp eq i32 %33, 0
  %91 = icmp eq i32 %26, 0
  %92 = icmp ne i16* %5, null
  %93 = select i1 %89, i32 -2, i32 -1
  br label %94, !dbg !4056

94:                                               ; preds = %87, %130
  %95 = phi i32 [ %85, %87 ], [ %132, %130 ]
  %96 = phi i8* [ %84, %87 ], [ %100, %130 ]
  %97 = phi i32 [ %83, %87 ], [ %131, %130 ]
  %98 = phi i32 [ 0, %87 ], [ %133, %130 ]
  call void @llvm.dbg.value(metadata i32 %95, metadata !3936, metadata !DIExpression()), !dbg !3988
  call void @llvm.dbg.value(metadata i8* %96, metadata !3938, metadata !DIExpression()), !dbg !3988
  call void @llvm.dbg.value(metadata i32 %97, metadata !3939, metadata !DIExpression()), !dbg !3988
  call void @llvm.dbg.value(metadata i32 %98, metadata !3951, metadata !DIExpression()), !dbg !4054
  %99 = getelementptr inbounds i8, i8* %96, i32 1, !dbg !4059
  call void @llvm.dbg.value(metadata i8* %99, metadata !3938, metadata !DIExpression()), !dbg !3988
  call void @llvm.dbg.value(metadata i8 undef, metadata !3953, metadata !DIExpression()), !dbg !4060
  %100 = getelementptr inbounds i8, i8* %96, i32 2, !dbg !4061
  call void @llvm.dbg.value(metadata i8* %100, metadata !3938, metadata !DIExpression()), !dbg !3988
  %101 = load i8, i8* %99, align 1, !dbg !4062
  call void @llvm.dbg.value(metadata i8 %101, metadata !3956, metadata !DIExpression()), !dbg !4060
  %102 = zext i8 %101 to i32, !dbg !4063
  %103 = getelementptr inbounds i32, i32* %14, i32 %102, !dbg !4063
  %104 = bitcast i32* %103 to i8**, !dbg !4064
  %105 = load i8*, i8** %104, align 4, !dbg !4064
  call void @llvm.dbg.value(metadata i8* %105, metadata !3957, metadata !DIExpression()), !dbg !4060
  %106 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %105) #24, !dbg !4065
  call void @llvm.dbg.value(metadata i1 %106, metadata !3958, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4060
  br i1 %16, label %113, label %107, !dbg !4066

107:                                              ; preds = %94
  %108 = load i8, i8* %96, align 1, !dbg !4068
  call void @llvm.dbg.value(metadata i8 %108, metadata !3953, metadata !DIExpression()), !dbg !4060
  %109 = zext i8 %108 to i32, !dbg !4069
  %110 = tail call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %109) #24, !dbg !4070
  br i1 %110, label %111, label %113, !dbg !4071

111:                                              ; preds = %107
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.9, i32 0, i32 0), i32 noundef 87, i8* noundef %47, i32 noundef %109) #25, !dbg !4072
  %112 = add nsw i32 %95, -2, !dbg !4078
  call void @llvm.dbg.value(metadata i32 %112, metadata !3936, metadata !DIExpression()), !dbg !3988
  br label %130, !dbg !4079

113:                                              ; preds = %107, %94
  br i1 %106, label %114, label %117, !dbg !4080

114:                                              ; preds = %113
  br i1 %91, label %115, label %118, !dbg !4081

115:                                              ; preds = %114
  %116 = add i32 %95, %93, !dbg !4083
  call void @llvm.dbg.value(metadata i32 %116, metadata !3936, metadata !DIExpression()), !dbg !3988
  br label %130, !dbg !4086

117:                                              ; preds = %113
  br i1 %90, label %130, label %118, !dbg !4087

118:                                              ; preds = %117, %114
  call void @llvm.dbg.label(metadata !3984), !dbg !4088
  %119 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %105, i16 noundef zeroext 0) #24, !dbg !4089
  call void @llvm.dbg.value(metadata i32 %119, metadata !3959, metadata !DIExpression()), !dbg !4060
  %120 = icmp ult i32 %97, %6
  %121 = select i1 %92, i1 %120, i1 false, !dbg !4090
  br i1 %121, label %122, label %126, !dbg !4090

122:                                              ; preds = %118
  %123 = trunc i32 %119 to i16, !dbg !4092
  %124 = add nuw i32 %97, 1, !dbg !4094
  call void @llvm.dbg.value(metadata i32 %124, metadata !3939, metadata !DIExpression()), !dbg !3988
  %125 = getelementptr inbounds i16, i16* %5, i32 %97, !dbg !4095
  store i16 %123, i16* %125, align 2, !dbg !4096
  br label %126, !dbg !4097

126:                                              ; preds = %122, %118
  %127 = phi i32 [ %124, %122 ], [ %97, %118 ], !dbg !3988
  call void @llvm.dbg.value(metadata i32 %127, metadata !3939, metadata !DIExpression()), !dbg !3988
  %128 = add i32 %95, -1, !dbg !4098
  %129 = add i32 %128, %119, !dbg !4099
  call void @llvm.dbg.value(metadata i32 %129, metadata !3936, metadata !DIExpression()), !dbg !3988
  br label %130, !dbg !4100

130:                                              ; preds = %115, %126, %117, %111
  %131 = phi i32 [ %97, %111 ], [ %127, %126 ], [ %97, %115 ], [ %97, %117 ], !dbg !3988
  %132 = phi i32 [ %112, %111 ], [ %129, %126 ], [ %116, %115 ], [ %95, %117 ], !dbg !4060
  call void @llvm.dbg.value(metadata i32 %132, metadata !3936, metadata !DIExpression()), !dbg !3988
  call void @llvm.dbg.value(metadata i32 %131, metadata !3939, metadata !DIExpression()), !dbg !3988
  %133 = add nuw nsw i32 %98, 1, !dbg !4101
  call void @llvm.dbg.value(metadata i8* %100, metadata !3938, metadata !DIExpression()), !dbg !3988
  call void @llvm.dbg.value(metadata i32 %133, metadata !3951, metadata !DIExpression()), !dbg !4054
  %134 = icmp eq i32 %133, %31, !dbg !4055
  br i1 %134, label %287, label %94, !dbg !4056, !llvm.loop !4102

135:                                              ; preds = %41
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !3961, metadata !DIExpression()), !dbg !4104
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !3962, metadata !DIExpression()), !dbg !4105
  br i1 %28, label %136, label %138, !dbg !4106

136:                                              ; preds = %135
  call void @llvm.dbg.value(metadata i8 %23, metadata !3963, metadata !DIExpression()), !dbg !3988
  call void @llvm.dbg.value(metadata i8 0, metadata !3964, metadata !DIExpression()), !dbg !3988
  %137 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !4107
  call void @llvm.dbg.value(metadata i8* %137, metadata !3965, metadata !DIExpression()), !dbg !3988
  br label %143, !dbg !4110

138:                                              ; preds = %135
  %139 = and i32 %4, 4
  %140 = icmp ne i32 %139, 0
  %141 = and i1 %140, %25, !dbg !4111
  %142 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %141, label %143, label %148, !dbg !4111

143:                                              ; preds = %136, %138
  %144 = phi i8 [ 0, %138 ], [ %23, %136 ]
  %145 = phi i8 [ %23, %138 ], [ 0, %136 ]
  %146 = phi i8* [ %142, %138 ], [ %137, %136 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !3965, metadata !DIExpression()), !dbg !3988
  call void @llvm.dbg.value(metadata i8 undef, metadata !3964, metadata !DIExpression()), !dbg !3988
  call void @llvm.dbg.value(metadata i8 0, metadata !3963, metadata !DIExpression()), !dbg !3988
  %147 = call i8* @memcpy(i8* noundef nonnull %146, i8* noundef nonnull %48, i32 noundef %24) #25, !dbg !4113
  br label %148, !dbg !4116

148:                                              ; preds = %138, %143
  %149 = phi i8 [ %145, %143 ], [ 0, %138 ]
  %150 = phi i8 [ %144, %143 ], [ 0, %138 ]
  %151 = getelementptr inbounds i8, i8* %48, i32 %24, !dbg !4117
  call void @llvm.dbg.value(metadata i8* %151, metadata !3938, metadata !DIExpression()), !dbg !3988
  call void @llvm.dbg.value(metadata i32 0, metadata !3967, metadata !DIExpression()), !dbg !4118
  call void @llvm.dbg.value(metadata i8 %149, metadata !3964, metadata !DIExpression()), !dbg !3988
  call void @llvm.dbg.value(metadata i8 %150, metadata !3963, metadata !DIExpression()), !dbg !3988
  %152 = icmp eq i8 %30, 0, !dbg !4119
  br i1 %152, label %153, label %155, !dbg !4120

153:                                              ; preds = %148
  %154 = and i32 %4, 4, !dbg !4121
  br label %160, !dbg !4120

155:                                              ; preds = %148
  %156 = icmp eq i32 %33, 0
  %157 = icmp eq i32 %26, 0
  %158 = and i32 %4, 4
  %159 = icmp eq i32 %158, 0
  br label %179, !dbg !4120

160:                                              ; preds = %235, %153
  %161 = phi i32 [ %154, %153 ], [ %158, %235 ], !dbg !4121
  %162 = phi i8 [ %150, %153 ], [ %236, %235 ], !dbg !4122
  %163 = phi i8 [ %149, %153 ], [ %237, %235 ], !dbg !4123
  %164 = phi i8* [ %151, %153 ], [ %186, %235 ], !dbg !3988
  call void @llvm.dbg.value(metadata i8 undef, metadata !3960, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !3988
  %165 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4124
  %166 = load i8, i8* %165, align 1, !dbg !4124
  %167 = zext i8 %162 to i32, !dbg !4125
  %168 = add i8 %166, %162, !dbg !4126
  call void @llvm.dbg.value(metadata i8 %168, metadata !3960, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !3988
  %169 = icmp eq i32 %33, 0, !dbg !4127
  %170 = lshr i8 %163, 1, !dbg !4128
  %171 = select i1 %169, i8 %170, i8 0, !dbg !4128
  call void @llvm.dbg.value(metadata i8 %171, metadata !3960, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !3988
  %172 = icmp eq i32 %26, 0, !dbg !4129
  %173 = icmp eq i32 %161, 0, !dbg !4121
  %174 = select i1 %173, i8 0, i8 %163, !dbg !4121
  %175 = select i1 %172, i8 %174, i8 0, !dbg !4121
  call void @llvm.dbg.value(metadata i8 %175, metadata !3960, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !3988
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !3975, metadata !DIExpression()), !dbg !4130
  %176 = load i32, i32* %14, align 1, !dbg !4131
  store i8 %168, i8* %165, align 1, !dbg !4132
  store i8 %175, i8* %22, align 1, !dbg !4132
  store i8 %171, i8* %29, align 1, !dbg !4132
  %177 = call i32 %2(i8* noundef nonnull %0, i32 noundef %44, i8* noundef %3) #25, !dbg !4133
  call void @llvm.dbg.value(metadata i32 %177, metadata !3966, metadata !DIExpression()), !dbg !3988
  %178 = icmp slt i32 %177, 0, !dbg !4134
  br i1 %178, label %287, label %240, !dbg !4136

179:                                              ; preds = %155, %235
  %180 = phi i8* [ %151, %155 ], [ %186, %235 ]
  %181 = phi i32 [ 0, %155 ], [ %238, %235 ]
  %182 = phi i8 [ %149, %155 ], [ %237, %235 ]
  %183 = phi i8 [ %150, %155 ], [ %236, %235 ]
  call void @llvm.dbg.value(metadata i8* %180, metadata !3938, metadata !DIExpression()), !dbg !3988
  call void @llvm.dbg.value(metadata i32 %181, metadata !3967, metadata !DIExpression()), !dbg !4118
  call void @llvm.dbg.value(metadata i8 %182, metadata !3964, metadata !DIExpression()), !dbg !3988
  call void @llvm.dbg.value(metadata i8 %183, metadata !3963, metadata !DIExpression()), !dbg !3988
  %184 = getelementptr inbounds i8, i8* %180, i32 1, !dbg !4137
  call void @llvm.dbg.value(metadata i8* %184, metadata !3938, metadata !DIExpression()), !dbg !3988
  %185 = load i8, i8* %180, align 1, !dbg !4138
  call void @llvm.dbg.value(metadata i8 %185, metadata !3969, metadata !DIExpression()), !dbg !4139
  %186 = getelementptr inbounds i8, i8* %180, i32 2, !dbg !4140
  call void @llvm.dbg.value(metadata i8* %186, metadata !3938, metadata !DIExpression()), !dbg !3988
  %187 = load i8, i8* %184, align 1, !dbg !4141
  call void @llvm.dbg.value(metadata i8 %187, metadata !3972, metadata !DIExpression()), !dbg !4139
  %188 = zext i8 %187 to i32, !dbg !4142
  %189 = getelementptr inbounds i32, i32* %14, i32 %188, !dbg !4142
  %190 = bitcast i32* %189 to i8**, !dbg !4143
  %191 = load i8*, i8** %190, align 4, !dbg !4143
  call void @llvm.dbg.value(metadata i8* %191, metadata !3973, metadata !DIExpression()), !dbg !4139
  %192 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %191) #24, !dbg !4144
  call void @llvm.dbg.value(metadata i1 %192, metadata !3974, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4139
  br i1 %16, label %196, label %193, !dbg !4145

193:                                              ; preds = %179
  %194 = zext i8 %185 to i32, !dbg !4147
  %195 = call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %194) #24, !dbg !4148
  br i1 %195, label %235, label %196, !dbg !4149

196:                                              ; preds = %193, %179
  br i1 %192, label %197, label %213, !dbg !4150

197:                                              ; preds = %196
  br i1 %157, label %205, label %198, !dbg !4151

198:                                              ; preds = %197
  %199 = icmp ult i8 %183, 16, !dbg !4154
  br i1 %199, label %201, label %200, !dbg !4159

200:                                              ; preds = %198
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 1086) #25, !dbg !4160
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 1086) #25, !dbg !4160
  unreachable, !dbg !4160

201:                                              ; preds = %198
  %202 = zext i8 %183 to i32, !dbg !4154
  %203 = add nuw nsw i8 %183, 1, !dbg !4162
  call void @llvm.dbg.value(metadata i8 %203, metadata !3963, metadata !DIExpression()), !dbg !3988
  %204 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %202, !dbg !4163
  br label %231, !dbg !4164

205:                                              ; preds = %197
  br i1 %159, label %235, label %206, !dbg !4165

206:                                              ; preds = %205
  %207 = icmp ult i8 %182, 16, !dbg !4166
  br i1 %207, label %209, label %208, !dbg !4171

208:                                              ; preds = %206
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 1089) #25, !dbg !4172
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 1089) #25, !dbg !4172
  unreachable, !dbg !4172

209:                                              ; preds = %206
  %210 = zext i8 %182 to i32, !dbg !4166
  %211 = add nuw nsw i8 %182, 1, !dbg !4174
  call void @llvm.dbg.value(metadata i8 %211, metadata !3964, metadata !DIExpression()), !dbg !3988
  %212 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %210, !dbg !4175
  br label %231, !dbg !4176

213:                                              ; preds = %196
  br i1 %156, label %221, label %214, !dbg !4177

214:                                              ; preds = %213
  %215 = icmp ult i8 %183, 16, !dbg !4179
  br i1 %215, label %217, label %216, !dbg !4184

216:                                              ; preds = %214
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 1096) #25, !dbg !4185
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 1096) #25, !dbg !4185
  unreachable, !dbg !4185

217:                                              ; preds = %214
  %218 = zext i8 %183 to i32, !dbg !4179
  %219 = add nuw nsw i8 %183, 1, !dbg !4187
  call void @llvm.dbg.value(metadata i8 %219, metadata !3963, metadata !DIExpression()), !dbg !3988
  %220 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %218, !dbg !4188
  br label %231, !dbg !4189

221:                                              ; preds = %213
  %222 = icmp ult i8 %182, 16, !dbg !4190
  br i1 %222, label %224, label %223, !dbg !4194

223:                                              ; preds = %221
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 1099) #25, !dbg !4195
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 1099) #25, !dbg !4195
  unreachable, !dbg !4195

224:                                              ; preds = %221
  %225 = zext i8 %182 to i32, !dbg !4190
  %226 = add nuw nsw i8 %182, 1, !dbg !4197
  call void @llvm.dbg.value(metadata i8 %226, metadata !3964, metadata !DIExpression()), !dbg !3988
  %227 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %225, !dbg !4198
  store i8 %185, i8* %227, align 1, !dbg !4199
  %228 = add nuw nsw i8 %182, 2, !dbg !4200
  call void @llvm.dbg.value(metadata i8 %228, metadata !3964, metadata !DIExpression()), !dbg !3988
  %229 = zext i8 %226 to i32, !dbg !4201
  %230 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %229, !dbg !4201
  br label %231

231:                                              ; preds = %217, %224, %201, %209
  %232 = phi i8* [ %212, %209 ], [ %204, %201 ], [ %230, %224 ], [ %220, %217 ]
  %233 = phi i8 [ %183, %209 ], [ %203, %201 ], [ %183, %224 ], [ %219, %217 ]
  %234 = phi i8 [ %211, %209 ], [ %182, %201 ], [ %228, %224 ], [ %182, %217 ]
  store i8 %187, i8* %232, align 1, !dbg !4202
  br label %235, !dbg !4203

235:                                              ; preds = %231, %205, %193
  %236 = phi i8 [ %183, %193 ], [ %183, %205 ], [ %233, %231 ], !dbg !3988
  %237 = phi i8 [ %182, %193 ], [ %182, %205 ], [ %234, %231 ], !dbg !4123
  call void @llvm.dbg.value(metadata i8 %237, metadata !3964, metadata !DIExpression()), !dbg !3988
  call void @llvm.dbg.value(metadata i8 %236, metadata !3963, metadata !DIExpression()), !dbg !3988
  %238 = add nuw nsw i32 %181, 1, !dbg !4203
  call void @llvm.dbg.value(metadata i8* %186, metadata !3938, metadata !DIExpression()), !dbg !3988
  call void @llvm.dbg.value(metadata i32 %238, metadata !3967, metadata !DIExpression()), !dbg !4118
  %239 = icmp eq i32 %238, %31, !dbg !4119
  br i1 %239, label %160, label %179, !dbg !4120, !llvm.loop !4204

240:                                              ; preds = %160
  %241 = zext i8 %163 to i32, !dbg !4128
  call void @llvm.dbg.value(metadata i32 %177, metadata !3936, metadata !DIExpression()), !dbg !3988
  store i32 %176, i32* %14, align 1, !dbg !4206
  %242 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4207
  %243 = call i32 %2(i8* noundef nonnull %242, i32 noundef %241, i8* noundef %3) #25, !dbg !4208
  call void @llvm.dbg.value(metadata i32 %243, metadata !3966, metadata !DIExpression()), !dbg !3988
  %244 = icmp slt i32 %243, 0, !dbg !4209
  br i1 %244, label %287, label %245, !dbg !4211

245:                                              ; preds = %240
  call void @llvm.dbg.value(metadata !DIArgList(i32 %177, i32 %243), metadata !3936, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3988
  %246 = mul nsw i32 %31, -2
  %247 = add i32 %21, %246, !dbg !4212
  %248 = add nuw nsw i32 %44, %24, !dbg !4212
  %249 = sub i32 %247, %248, !dbg !4212
  call void @llvm.dbg.value(metadata i32 %249, metadata !3976, metadata !DIExpression()), !dbg !3988
  %250 = call i32 %2(i8* noundef %164, i32 noundef %249, i8* noundef %3) #25, !dbg !4213
  call void @llvm.dbg.value(metadata i32 %250, metadata !3966, metadata !DIExpression()), !dbg !3988
  %251 = icmp slt i32 %250, 0, !dbg !4214
  br i1 %251, label %287, label %252, !dbg !4216

252:                                              ; preds = %245
  %253 = add nuw nsw i32 %243, %177, !dbg !4217
  call void @llvm.dbg.value(metadata i32 %253, metadata !3936, metadata !DIExpression()), !dbg !3988
  %254 = add nuw nsw i32 %253, %250, !dbg !4218
  call void @llvm.dbg.value(metadata i32 %254, metadata !3936, metadata !DIExpression()), !dbg !3988
  call void @llvm.dbg.value(metadata i32 0, metadata !3977, metadata !DIExpression()), !dbg !4219
  %255 = icmp eq i8 %162, 0, !dbg !4220
  br i1 %255, label %284, label %256, !dbg !4221

256:                                              ; preds = %252
  %257 = icmp eq i16* %5, null
  br label %258, !dbg !4221

258:                                              ; preds = %256, %279
  %259 = phi i32 [ 0, %256 ], [ %282, %279 ]
  %260 = phi i32 [ %254, %256 ], [ %281, %279 ]
  call void @llvm.dbg.value(metadata i32 %259, metadata !3977, metadata !DIExpression()), !dbg !4219
  call void @llvm.dbg.value(metadata i32 %260, metadata !3936, metadata !DIExpression()), !dbg !3988
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4222
  %261 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %259, !dbg !4223
  %262 = load i8, i8* %261, align 1, !dbg !4223
  call void @llvm.dbg.value(metadata i8 %262, metadata !3979, metadata !DIExpression()), !dbg !4224
  store i8 %262, i8* %10, align 1, !dbg !4225
  %263 = zext i8 %262 to i32, !dbg !4226
  %264 = getelementptr inbounds i32, i32* %14, i32 %263, !dbg !4226
  %265 = bitcast i32* %264 to i8**, !dbg !4227
  %266 = load i8*, i8** %265, align 4, !dbg !4227
  call void @llvm.dbg.value(metadata i8* %266, metadata !3982, metadata !DIExpression()), !dbg !4224
  br i1 %257, label %270, label %267, !dbg !4228

267:                                              ; preds = %258
  %268 = getelementptr inbounds i16, i16* %5, i32 %259, !dbg !4229
  %269 = load i16, i16* %268, align 2, !dbg !4229
  br label %270, !dbg !4228

270:                                              ; preds = %258, %267
  %271 = phi i16 [ %269, %267 ], [ 0, %258 ], !dbg !4228
  call void @llvm.dbg.value(metadata i32 undef, metadata !3983, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4224
  call void @llvm.dbg.value(metadata i8* %10, metadata !3979, metadata !DIExpression(DW_OP_deref)), !dbg !4224
  %272 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #25, !dbg !4230
  call void @llvm.dbg.value(metadata i32 %272, metadata !3966, metadata !DIExpression()), !dbg !3988
  %273 = icmp slt i32 %272, 0, !dbg !4231
  br i1 %273, label %277, label %274, !dbg !4233

274:                                              ; preds = %270
  call void @llvm.dbg.value(metadata i16 %271, metadata !3983, metadata !DIExpression()), !dbg !4224
  call void @llvm.dbg.value(metadata !DIArgList(i32 %260, i32 %272), metadata !3936, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3988
  %275 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %266, i16 noundef zeroext %271) #24, !dbg !4234
  call void @llvm.dbg.value(metadata i32 %275, metadata !3966, metadata !DIExpression()), !dbg !3988
  %276 = icmp slt i32 %275, 0, !dbg !4235
  br i1 %276, label %277, label %279, !dbg !4237

277:                                              ; preds = %274, %270
  %278 = phi i32 [ %275, %274 ], [ %272, %270 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !3936, metadata !DIExpression()), !dbg !3988
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4238
  call void @llvm.dbg.value(metadata i32 undef, metadata !3936, metadata !DIExpression()), !dbg !3988
  br label %287

279:                                              ; preds = %274
  %280 = add nsw i32 %272, %260, !dbg !4239
  call void @llvm.dbg.value(metadata i32 %280, metadata !3936, metadata !DIExpression()), !dbg !3988
  %281 = add nsw i32 %280, %275, !dbg !4240
  call void @llvm.dbg.value(metadata i32 %281, metadata !3936, metadata !DIExpression()), !dbg !3988
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4238
  %282 = add nuw nsw i32 %259, 1, !dbg !4241
  call void @llvm.dbg.value(metadata i32 %282, metadata !3977, metadata !DIExpression()), !dbg !4219
  %283 = icmp eq i32 %282, %167, !dbg !4220
  br i1 %283, label %284, label %258, !dbg !4221, !llvm.loop !4242

284:                                              ; preds = %279, %252
  %285 = phi i32 [ %254, %252 ], [ %281, %279 ], !dbg !4218
  call void @llvm.dbg.value(metadata i32 %285, metadata !3936, metadata !DIExpression()), !dbg !3988
  %286 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #25, !dbg !4244
  br label %287, !dbg !4245

287:                                              ; preds = %130, %82, %277, %284, %160, %240, %245, %37, %39
  %288 = phi i32 [ %21, %39 ], [ %21, %37 ], [ %285, %284 ], [ %177, %160 ], [ %243, %240 ], [ %250, %245 ], [ %278, %277 ], [ %85, %82 ], [ %132, %130 ], !dbg !3988
  ret i32 %288, !dbg !4246
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4247 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4251, metadata !DIExpression()), !dbg !4259
  %2 = icmp eq i8* %0, null, !dbg !4260
  br i1 %2, label %3, label %4, !dbg !4263

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 198) #25, !dbg !4264
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 198) #25, !dbg !4264
  unreachable, !dbg !4264

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4252, metadata !DIExpression()), !dbg !4259
  call void @llvm.dbg.value(metadata i8* %0, metadata !4253, metadata !DIExpression()), !dbg !4259
  %5 = load i8, i8* %0, align 1, !dbg !4266
  %6 = zext i8 %5 to i32, !dbg !4266
  %7 = shl nuw nsw i32 %6, 2, !dbg !4267
  call void @llvm.dbg.value(metadata i32 %7, metadata !4254, metadata !DIExpression()), !dbg !4259
  %8 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4268
  %9 = load i8, i8* %8, align 1, !dbg !4268
  %10 = zext i8 %9 to i32, !dbg !4268
  call void @llvm.dbg.value(metadata i32 %10, metadata !4255, metadata !DIExpression()), !dbg !4259
  %11 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4269
  %12 = load i8, i8* %11, align 1, !dbg !4269
  %13 = zext i8 %12 to i32, !dbg !4269
  call void @llvm.dbg.value(metadata i32 %13, metadata !4256, metadata !DIExpression()), !dbg !4259
  %14 = getelementptr inbounds i8, i8* %0, i32 %7, !dbg !4270
  call void @llvm.dbg.value(metadata i8* %14, metadata !4252, metadata !DIExpression()), !dbg !4259
  %15 = getelementptr inbounds i8, i8* %14, i32 %13, !dbg !4271
  call void @llvm.dbg.value(metadata i8* %15, metadata !4252, metadata !DIExpression()), !dbg !4259
  call void @llvm.dbg.value(metadata i32 0, metadata !4257, metadata !DIExpression()), !dbg !4272
  %16 = icmp eq i8 %9, 0, !dbg !4273
  br i1 %16, label %17, label %22, !dbg !4275

17:                                               ; preds = %22, %4
  %18 = phi i8* [ %15, %4 ], [ %28, %22 ], !dbg !4259
  %19 = ptrtoint i8* %18 to i32, !dbg !4276
  %20 = ptrtoint i8* %0 to i32, !dbg !4276
  %21 = sub i32 %19, %20, !dbg !4276
  ret i32 %21, !dbg !4277

22:                                               ; preds = %4, %22
  %23 = phi i32 [ %29, %22 ], [ 0, %4 ]
  %24 = phi i8* [ %28, %22 ], [ %15, %4 ]
  call void @llvm.dbg.value(metadata i32 %23, metadata !4257, metadata !DIExpression()), !dbg !4272
  call void @llvm.dbg.value(metadata i8* %24, metadata !4252, metadata !DIExpression()), !dbg !4259
  %25 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !4278
  call void @llvm.dbg.value(metadata i8* %25, metadata !4252, metadata !DIExpression()), !dbg !4259
  %26 = tail call i32 @strlen(i8* noundef nonnull %25) #25, !dbg !4280
  %27 = add i32 %26, 1, !dbg !4281
  %28 = getelementptr inbounds i8, i8* %25, i32 %27, !dbg !4282
  call void @llvm.dbg.value(metadata i8* %28, metadata !4252, metadata !DIExpression()), !dbg !4259
  %29 = add nuw nsw i32 %23, 1, !dbg !4283
  call void @llvm.dbg.value(metadata i32 %29, metadata !4257, metadata !DIExpression()), !dbg !4272
  %30 = icmp eq i32 %29, %10, !dbg !4273
  br i1 %30, label %17, label %22, !dbg !4275, !llvm.loop !4284
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !4286 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !4290, metadata !DIExpression()), !dbg !4294
  call void @llvm.dbg.value(metadata i8* %1, metadata !4291, metadata !DIExpression()), !dbg !4294
  call void @llvm.dbg.value(metadata i8* %2, metadata !4292, metadata !DIExpression()), !dbg !4294
  call void @llvm.dbg.value(metadata i16 %3, metadata !4293, metadata !DIExpression()), !dbg !4294
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !4295
  br i1 %5, label %6, label %9, !dbg !4297

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4298
  %8 = add i32 %7, 1, !dbg !4300
  br label %20, !dbg !4301

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !4302
  br i1 %10, label %13, label %11, !dbg !4303

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !4303
  br label %16, !dbg !4303

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4304
  %15 = add i32 %14, 1, !dbg !4305
  br label %16, !dbg !4303

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !4303
  %18 = and i32 %17, 65535, !dbg !4306
  call void @llvm.dbg.value(metadata i32 %17, metadata !4293, metadata !DIExpression()), !dbg !4294
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #25, !dbg !4307
  br label %20, !dbg !4308

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !4294
  ret i32 %21, !dbg !4309
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !4310 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4312, metadata !DIExpression()), !dbg !4313
  ret i32 0, !dbg !4314
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !4315 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !4319, metadata !DIExpression()), !dbg !4320
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !4321
  ret void, !dbg !4322
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #8 !dbg !4323 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !4326
  ret i8* %1, !dbg !4327
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !4328 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4339, metadata !DIExpression()), !dbg !4350
  call void @llvm.dbg.value(metadata i8* %0, metadata !4338, metadata !DIExpression()), !dbg !4350
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #24, !dbg !4351
  ret void, !dbg !4353
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !4354 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4358, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i8* %1, metadata !4359, metadata !DIExpression()), !dbg !4360
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4361
  %4 = tail call i32 %3(i32 noundef %0) #25, !dbg !4361
  ret i32 %4, !dbg !4362
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !4363 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4370, metadata !DIExpression()), !dbg !4371
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4367, metadata !DIExpression()), !dbg !4371
  call void @llvm.dbg.value(metadata i8* %1, metadata !4368, metadata !DIExpression()), !dbg !4371
  call void @llvm.dbg.value(metadata i8* %2, metadata !4369, metadata !DIExpression()), !dbg !4371
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #25, !dbg !4372
  ret void, !dbg !4373
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !4374 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4378, metadata !DIExpression()), !dbg !4381
  call void @llvm.dbg.value(metadata i32 %1, metadata !4379, metadata !DIExpression()), !dbg !4381
  call void @llvm.dbg.value(metadata i32 0, metadata !4380, metadata !DIExpression()), !dbg !4381
  %3 = icmp eq i32 %1, 0, !dbg !4382
  br i1 %3, label %13, label %4, !dbg !4385

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !4380, metadata !DIExpression()), !dbg !4381
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4386
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !4388
  %8 = load i8, i8* %7, align 1, !dbg !4388
  %9 = zext i8 %8 to i32, !dbg !4388
  %10 = tail call i32 %6(i32 noundef %9) #25, !dbg !4386
  %11 = add nuw i32 %5, 1, !dbg !4389
  call void @llvm.dbg.value(metadata i32 %11, metadata !4380, metadata !DIExpression()), !dbg !4381
  %12 = icmp eq i32 %11, %1, !dbg !4382
  br i1 %12, label %13, label %4, !dbg !4385, !llvm.loop !4390

13:                                               ; preds = %4, %2
  ret void, !dbg !4392
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !4393 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4397, metadata !DIExpression()), !dbg !4399
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !4400
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4400
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !4398, metadata !DIExpression()), !dbg !4401
  call void @llvm.va_start(i8* nonnull %3), !dbg !4402
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !4403
  %5 = load i32, i32* %4, align 4, !dbg !4403
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !4403
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !4403
  call void @llvm.va_end(i8* nonnull %3), !dbg !4404
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4405
  ret void, !dbg !4405
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !4406 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4410, metadata !DIExpression()), !dbg !4415
  call void @llvm.dbg.value(metadata i32 %1, metadata !4411, metadata !DIExpression()), !dbg !4415
  call void @llvm.dbg.value(metadata i8* %2, metadata !4412, metadata !DIExpression()), !dbg !4415
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !4416
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4416
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !4413, metadata !DIExpression()), !dbg !4417
  call void @llvm.va_start(i8* nonnull %5), !dbg !4418
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !4419
  %7 = load i32, i32* %6, align 4, !dbg !4419
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !4419
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #24, !dbg !4419
  call void @llvm.dbg.value(metadata i32 %9, metadata !4414, metadata !DIExpression()), !dbg !4415
  call void @llvm.va_end(i8* nonnull %5), !dbg !4420
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4421
  ret i32 %9, !dbg !4422
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !4423 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !4430, metadata !DIExpression()), !dbg !4437
  call void @llvm.dbg.value(metadata i8* %0, metadata !4427, metadata !DIExpression()), !dbg !4437
  call void @llvm.dbg.value(metadata i32 %1, metadata !4428, metadata !DIExpression()), !dbg !4437
  call void @llvm.dbg.value(metadata i8* %2, metadata !4429, metadata !DIExpression()), !dbg !4437
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !4438
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4438
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !4431, metadata !DIExpression()), !dbg !4439
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !4440
  store i8* %0, i8** %7, align 4, !dbg !4440
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !4440
  store i32 %1, i32* %8, align 4, !dbg !4440
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !4440
  store i32 0, i32* %9, align 4, !dbg !4440
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #24, !dbg !4441
  %10 = load i32, i32* %9, align 4, !dbg !4442
  %11 = load i32, i32* %8, align 4, !dbg !4444
  %12 = icmp slt i32 %10, %11, !dbg !4445
  br i1 %12, label %13, label %15, !dbg !4446

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !4447
  store i8 0, i8* %14, align 1, !dbg !4449
  br label %15, !dbg !4450

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4451
  ret i32 %10, !dbg !4452
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #9 !dbg !4453 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4458, metadata !DIExpression()), !dbg !4460
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !4459, metadata !DIExpression()), !dbg !4460
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !4461
  %4 = load i8*, i8** %3, align 4, !dbg !4461
  %5 = icmp eq i8* %4, null, !dbg !4463
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !4464
  br i1 %5, label %12, label %8, !dbg !4465

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !4466
  %10 = load i32, i32* %9, align 4, !dbg !4466
  %11 = icmp slt i32 %7, %10, !dbg !4467
  br i1 %11, label %15, label %12, !dbg !4468

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !4469
  %14 = add nsw i32 %7, 1, !dbg !4471
  store i32 %14, i32* %13, align 4, !dbg !4471
  br label %25, !dbg !4472

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !4473
  %17 = icmp eq i32 %7, %16, !dbg !4475
  br i1 %17, label %18, label %21, !dbg !4476

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !4477
  store i32 %19, i32* %6, align 4, !dbg !4477
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4479
  store i8 0, i8* %20, align 1, !dbg !4480
  br label %25, !dbg !4481

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !4482
  %23 = add nsw i32 %7, 1, !dbg !4484
  store i32 %23, i32* %6, align 4, !dbg !4484
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4485
  store i8 %22, i8* %24, align 1, !dbg !4486
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !4487
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #10 !dbg !4488 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !4493, metadata !DIExpression()), !dbg !4497
  call void @llvm.dbg.value(metadata i8* %1, metadata !4494, metadata !DIExpression()), !dbg !4497
  call void @llvm.dbg.value(metadata i8* %2, metadata !4495, metadata !DIExpression()), !dbg !4497
  call void @llvm.dbg.value(metadata i8* %3, metadata !4496, metadata !DIExpression()), !dbg !4497
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #25, !dbg !4498
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #26, !dbg !4499
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #24, !dbg !4500
  unreachable, !dbg !4501
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #11 !dbg !4502 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #26, !dbg !4609
  ret %struct.k_thread* %1, !dbg !4610
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !4611 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !4615, metadata !DIExpression()), !dbg !4616
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4617, !srcloc !4619
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !4620
  ret void, !dbg !4621
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #11 !dbg !4622 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4623, !srcloc !4625
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !4626
  ret %struct.k_thread* %1, !dbg !4627
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4628 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4641, metadata !DIExpression()), !dbg !4767
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4638, metadata !DIExpression()), !dbg !4767
  call void @llvm.dbg.value(metadata i8* %1, metadata !4639, metadata !DIExpression()), !dbg !4767
  call void @llvm.dbg.value(metadata i8* %2, metadata !4640, metadata !DIExpression()), !dbg !4767
  call void @llvm.dbg.value(metadata i32 %4, metadata !4642, metadata !DIExpression()), !dbg !4767
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4768
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !4768
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4643, metadata !DIExpression()), !dbg !4769
  call void @llvm.dbg.value(metadata i32 0, metadata !4647, metadata !DIExpression()), !dbg !4767
  call void @llvm.dbg.value(metadata i1 undef, metadata !4649, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4767
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4770

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4770

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4771
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4641, metadata !DIExpression()), !dbg !4767
  call void @llvm.dbg.value(metadata i8* %30, metadata !4640, metadata !DIExpression()), !dbg !4767
  call void @llvm.dbg.value(metadata i32 %29, metadata !4647, metadata !DIExpression()), !dbg !4767
  %31 = load i8, i8* %30, align 1, !dbg !4772
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4770

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4772
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4773
  call void @llvm.dbg.value(metadata i8* %34, metadata !4640, metadata !DIExpression()), !dbg !4767
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #25, !dbg !4773
  call void @llvm.dbg.value(metadata i32 %35, metadata !4651, metadata !DIExpression()), !dbg !4774
  %36 = icmp slt i32 %35, 0, !dbg !4775
  %37 = add i32 %29, 1, !dbg !4773
  call void @llvm.dbg.value(metadata i32 undef, metadata !4647, metadata !DIExpression()), !dbg !4767
  br i1 %36, label %365, label %28, !llvm.loop !4777

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4779
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4656, metadata !DIExpression()), !dbg !4780
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4780
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4699, metadata !DIExpression()), !dbg !4781
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4702, metadata !DIExpression()), !dbg !4781
  call void @llvm.dbg.value(metadata i8* %30, metadata !4705, metadata !DIExpression()), !dbg !4781
  call void @llvm.dbg.value(metadata i32 -1, metadata !4706, metadata !DIExpression()), !dbg !4781
  call void @llvm.dbg.value(metadata i32 -1, metadata !4707, metadata !DIExpression()), !dbg !4781
  call void @llvm.dbg.value(metadata i8* null, metadata !4708, metadata !DIExpression()), !dbg !4781
  call void @llvm.dbg.value(metadata i8* %14, metadata !4709, metadata !DIExpression()), !dbg !4781
  call void @llvm.dbg.value(metadata i8 0, metadata !4710, metadata !DIExpression()), !dbg !4781
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #24, !dbg !4782
  call void @llvm.dbg.value(metadata i8* %39, metadata !4640, metadata !DIExpression()), !dbg !4767
  %40 = load i24, i24* %15, align 8, !dbg !4783
  %41 = and i24 %40, 256, !dbg !4783
  %42 = icmp eq i24 %41, 0, !dbg !4783
  br i1 %42, label %51, label %43, !dbg !4785

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4786
  call void @llvm.dbg.value(metadata i8* %44, metadata !4641, metadata !DIExpression()), !dbg !4767
  %45 = bitcast i8* %27 to i32*, !dbg !4786
  %46 = load i32, i32* %45, align 4, !dbg !4786
  call void @llvm.dbg.value(metadata i32 %46, metadata !4706, metadata !DIExpression()), !dbg !4781
  %47 = icmp slt i32 %46, 0, !dbg !4788
  br i1 %47, label %48, label %56, !dbg !4790

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4791
  store i24 %49, i24* %15, align 8, !dbg !4791
  %50 = sub nsw i32 0, %46, !dbg !4793
  call void @llvm.dbg.value(metadata i32 %50, metadata !4706, metadata !DIExpression()), !dbg !4781
  br label %56, !dbg !4794

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4795
  %53 = icmp eq i24 %52, 0, !dbg !4795
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4797
  br label %56, !dbg !4797

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4798
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4781
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4641, metadata !DIExpression()), !dbg !4767
  call void @llvm.dbg.value(metadata i32 %58, metadata !4706, metadata !DIExpression()), !dbg !4781
  %60 = and i24 %57, 1024, !dbg !4798
  %61 = icmp eq i24 %60, 0, !dbg !4798
  br i1 %61, label %69, label %62, !dbg !4799

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4800
  call void @llvm.dbg.value(metadata i8* %63, metadata !4641, metadata !DIExpression()), !dbg !4767
  %64 = bitcast i8* %59 to i32*, !dbg !4800
  %65 = load i32, i32* %64, align 4, !dbg !4800
  call void @llvm.dbg.value(metadata i32 %65, metadata !4711, metadata !DIExpression()), !dbg !4801
  %66 = icmp slt i32 %65, 0, !dbg !4802
  br i1 %66, label %67, label %74, !dbg !4804

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4805
  store i24 %68, i24* %15, align 8, !dbg !4805
  br label %74, !dbg !4807

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4808
  %71 = icmp eq i24 %70, 0, !dbg !4808
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4810
  br label %74, !dbg !4810

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4811
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4781
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4781
  call void @llvm.dbg.value(metadata i8* %77, metadata !4641, metadata !DIExpression()), !dbg !4767
  call void @llvm.dbg.value(metadata i32 %76, metadata !4707, metadata !DIExpression()), !dbg !4781
  store i32 0, i32* %16, align 4, !dbg !4812
  store i32 0, i32* %17, align 8, !dbg !4813
  %78 = lshr i24 %75, 16, !dbg !4811
  call void @llvm.dbg.value(metadata i24 %78, metadata !4714, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4781
  %79 = lshr i24 %75, 11, !dbg !4814
  %80 = and i24 %79, 15, !dbg !4814
  %81 = zext i24 %80 to i32, !dbg !4814
  call void @llvm.dbg.value(metadata i32 %81, metadata !4715, metadata !DIExpression()), !dbg !4781
  %82 = trunc i24 %78 to i3, !dbg !4815
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4815

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4816

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4819
  call void @llvm.dbg.value(metadata i8* %85, metadata !4641, metadata !DIExpression()), !dbg !4767
  %86 = bitcast i8* %77 to i32*, !dbg !4819
  %87 = load i32, i32* %86, align 4, !dbg !4819
  %88 = sext i32 %87 to i64, !dbg !4819
  store i64 %88, i64* %20, align 8, !dbg !4821
  br label %115, !dbg !4822

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4823
  call void @llvm.dbg.value(metadata i8* %90, metadata !4641, metadata !DIExpression()), !dbg !4767
  %91 = bitcast i8* %77 to i32*, !dbg !4823
  %92 = load i32, i32* %91, align 4, !dbg !4823
  %93 = sext i32 %92 to i64, !dbg !4823
  store i64 %93, i64* %20, align 8, !dbg !4826
  br label %115, !dbg !4827

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4828
  %96 = add i32 %95, 7, !dbg !4828
  %97 = and i32 %96, -8, !dbg !4828
  %98 = inttoptr i32 %97 to i8*, !dbg !4828
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4828
  call void @llvm.dbg.value(metadata i8* %99, metadata !4641, metadata !DIExpression()), !dbg !4767
  %100 = inttoptr i32 %97 to i64*, !dbg !4828
  %101 = load i64, i64* %100, align 8, !dbg !4828
  store i64 %101, i64* %20, align 8, !dbg !4829
  br label %115, !dbg !4830

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4831
  %104 = add i32 %103, 7, !dbg !4831
  %105 = and i32 %104, -8, !dbg !4831
  %106 = inttoptr i32 %105 to i8*, !dbg !4831
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4831
  call void @llvm.dbg.value(metadata i8* %107, metadata !4641, metadata !DIExpression()), !dbg !4767
  %108 = inttoptr i32 %105 to i64*, !dbg !4831
  %109 = load i64, i64* %108, align 8, !dbg !4831
  store i64 %109, i64* %20, align 8, !dbg !4832
  br label %115, !dbg !4833

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4834
  call void @llvm.dbg.value(metadata i8* %111, metadata !4641, metadata !DIExpression()), !dbg !4767
  %112 = bitcast i8* %77 to i32*, !dbg !4834
  %113 = load i32, i32* %112, align 4, !dbg !4834
  %114 = sext i32 %113 to i64, !dbg !4835
  store i64 %114, i64* %20, align 8, !dbg !4836
  br label %115, !dbg !4837

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4838
  call void @llvm.dbg.value(metadata i8* %117, metadata !4641, metadata !DIExpression()), !dbg !4767
  %118 = trunc i24 %79 to i4, !dbg !4839
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4839

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4840
  %121 = ashr exact i64 %120, 56, !dbg !4840
  store i64 %121, i64* %20, align 8, !dbg !4843
  br label %177, !dbg !4844

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4845
  %124 = ashr exact i64 %123, 48, !dbg !4845
  store i64 %124, i64* %20, align 8, !dbg !4848
  br label %177, !dbg !4849

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4850

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4853
  call void @llvm.dbg.value(metadata i8* %127, metadata !4641, metadata !DIExpression()), !dbg !4767
  %128 = bitcast i8* %77 to i32*, !dbg !4853
  %129 = load i32, i32* %128, align 4, !dbg !4853
  %130 = zext i32 %129 to i64, !dbg !4853
  store i64 %130, i64* %20, align 8, !dbg !4855
  br label %157, !dbg !4856

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4857
  call void @llvm.dbg.value(metadata i8* %132, metadata !4641, metadata !DIExpression()), !dbg !4767
  call void @llvm.dbg.value(metadata i8* %132, metadata !4641, metadata !DIExpression()), !dbg !4767
  %133 = bitcast i8* %77 to i32*, !dbg !4857
  %134 = load i32, i32* %133, align 4, !dbg !4857
  %135 = zext i32 %134 to i64, !dbg !4857
  store i64 %135, i64* %20, align 8, !dbg !4857
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4859
  %138 = add i32 %137, 7, !dbg !4859
  %139 = and i32 %138, -8, !dbg !4859
  %140 = inttoptr i32 %139 to i8*, !dbg !4859
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4859
  call void @llvm.dbg.value(metadata i8* %141, metadata !4641, metadata !DIExpression()), !dbg !4767
  %142 = inttoptr i32 %139 to i64*, !dbg !4859
  %143 = load i64, i64* %142, align 8, !dbg !4859
  store i64 %143, i64* %20, align 8, !dbg !4860
  br label %157, !dbg !4861

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4862
  %146 = add i32 %145, 7, !dbg !4862
  %147 = and i32 %146, -8, !dbg !4862
  %148 = inttoptr i32 %147 to i8*, !dbg !4862
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4862
  call void @llvm.dbg.value(metadata i8* %149, metadata !4641, metadata !DIExpression()), !dbg !4767
  %150 = inttoptr i32 %147 to i64*, !dbg !4862
  %151 = load i64, i64* %150, align 8, !dbg !4862
  store i64 %151, i64* %20, align 8, !dbg !4863
  br label %157, !dbg !4864

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4865
  call void @llvm.dbg.value(metadata i8* %153, metadata !4641, metadata !DIExpression()), !dbg !4767
  %154 = bitcast i8* %77 to i32*, !dbg !4865
  %155 = load i32, i32* %154, align 4, !dbg !4865
  %156 = zext i32 %155 to i64, !dbg !4866
  store i64 %156, i64* %20, align 8, !dbg !4867
  br label %157, !dbg !4868

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4869
  call void @llvm.dbg.value(metadata i8* %159, metadata !4641, metadata !DIExpression()), !dbg !4767
  %160 = trunc i24 %79 to i4, !dbg !4870
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4870

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4871
  store i64 %162, i64* %20, align 8, !dbg !4874
  br label %177, !dbg !4875

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4876
  store i64 %164, i64* %20, align 8, !dbg !4879
  br label %177, !dbg !4880

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4881
  %167 = add i32 %166, 7, !dbg !4881
  %168 = and i32 %167, -8, !dbg !4881
  %169 = inttoptr i32 %168 to i8*, !dbg !4881
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4881
  call void @llvm.dbg.value(metadata i8* %170, metadata !4641, metadata !DIExpression()), !dbg !4767
  call void @llvm.dbg.value(metadata i8* %170, metadata !4641, metadata !DIExpression()), !dbg !4767
  %171 = inttoptr i32 %168 to double*, !dbg !4881
  %172 = load double, double* %171, align 8, !dbg !4881
  store double %172, double* %19, align 8, !dbg !4881
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4885
  call void @llvm.dbg.value(metadata i8* %174, metadata !4641, metadata !DIExpression()), !dbg !4767
  %175 = bitcast i8* %77 to i8**, !dbg !4885
  %176 = load i8*, i8** %175, align 4, !dbg !4885
  store i8* %176, i8** %18, align 8, !dbg !4888
  br label %177, !dbg !4889

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4781
  call void @llvm.dbg.value(metadata i8* %178, metadata !4641, metadata !DIExpression()), !dbg !4767
  %179 = and i24 %75, 3, !dbg !4890
  %180 = icmp eq i24 %179, 0, !dbg !4890
  br i1 %180, label %185, label %181, !dbg !4890

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #24, !dbg !4891
  call void @llvm.dbg.value(metadata i32 %182, metadata !4716, metadata !DIExpression()), !dbg !4892
  %183 = icmp slt i32 %182, 0, !dbg !4893
  %184 = add i32 %182, %29, !dbg !4891
  call void @llvm.dbg.value(metadata i32 undef, metadata !4647, metadata !DIExpression()), !dbg !4767
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4895
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4896

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #25, !dbg !4897
  call void @llvm.dbg.value(metadata i32 %188, metadata !4720, metadata !DIExpression()), !dbg !4898
  %189 = icmp slt i32 %188, 0, !dbg !4899
  %190 = add i32 %29, 1, !dbg !4897
  call void @llvm.dbg.value(metadata i32 undef, metadata !4647, metadata !DIExpression()), !dbg !4767
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4901
  call void @llvm.dbg.value(metadata i8* %192, metadata !4708, metadata !DIExpression()), !dbg !4781
  %193 = icmp sgt i32 %76, -1, !dbg !4902
  br i1 %193, label %194, label %196, !dbg !4904

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #25, !dbg !4905
  call void @llvm.dbg.value(metadata i32 %195, metadata !4723, metadata !DIExpression()), !dbg !4907
  br label %241, !dbg !4908

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #25, !dbg !4909
  call void @llvm.dbg.value(metadata i32 %197, metadata !4723, metadata !DIExpression()), !dbg !4907
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4708, metadata !DIExpression()), !dbg !4781
  %199 = load i64, i64* %20, align 8, !dbg !4911
  %200 = trunc i64 %199 to i8, !dbg !4912
  store i8 %200, i8* %10, align 1, !dbg !4913
  call void @llvm.dbg.value(metadata i8* %23, metadata !4709, metadata !DIExpression()), !dbg !4781
  br label %245, !dbg !4914

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4915
  %203 = icmp eq i24 %202, 0, !dbg !4915
  %204 = trunc i24 %75 to i8, !dbg !4917
  %205 = shl i8 %204, 1, !dbg !4917
  %206 = and i8 %205, 32, !dbg !4917
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4917
  call void @llvm.dbg.value(metadata i8 %207, metadata !4710, metadata !DIExpression()), !dbg !4781
  %208 = load i64, i64* %20, align 8, !dbg !4918
  call void @llvm.dbg.value(metadata i64 %208, metadata !4648, metadata !DIExpression()), !dbg !4767
  %209 = icmp slt i64 %208, 0, !dbg !4919
  br i1 %209, label %210, label %212, !dbg !4921

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4710, metadata !DIExpression()), !dbg !4781
  %211 = sub nsw i64 0, %208, !dbg !4922
  store i64 %211, i64* %20, align 8, !dbg !4924
  br label %212, !dbg !4925

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4781
  call void @llvm.dbg.value(metadata i8 %213, metadata !4710, metadata !DIExpression()), !dbg !4781
  %214 = load i64, i64* %20, align 8, !dbg !4926
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4927
  call void @llvm.dbg.value(metadata i8* %215, metadata !4708, metadata !DIExpression()), !dbg !4781
  br label %216, !dbg !4928

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4929
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4930
  call void @llvm.dbg.value(metadata i8* %218, metadata !4708, metadata !DIExpression()), !dbg !4781
  call void @llvm.dbg.value(metadata i8 %217, metadata !4710, metadata !DIExpression()), !dbg !4781
  call void @llvm.dbg.label(metadata !4766), !dbg !4931
  %219 = icmp sgt i32 %76, -1, !dbg !4932
  br i1 %219, label %222, label %220, !dbg !4933

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4934
  br label %245, !dbg !4933

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4936
  %224 = sub i32 %22, %223, !dbg !4936
  call void @llvm.dbg.value(metadata i32 %224, metadata !4725, metadata !DIExpression()), !dbg !4937
  %225 = load i24, i24* %15, align 8, !dbg !4938
  %226 = and i24 %225, -65, !dbg !4938
  store i24 %226, i24* %15, align 8, !dbg !4938
  %227 = icmp ugt i32 %76, %224, !dbg !4939
  br i1 %227, label %228, label %245, !dbg !4941

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4942
  store i32 %229, i32* %16, align 4, !dbg !4944
  br label %245, !dbg !4945

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4946
  %232 = icmp eq i8* %231, null, !dbg !4948
  br i1 %232, label %245, label %233, !dbg !4949

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4950
  %235 = zext i32 %234 to i64, !dbg !4950
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4952
  call void @llvm.dbg.value(metadata i8* %236, metadata !4708, metadata !DIExpression()), !dbg !4781
  %237 = load i24, i24* %15, align 8, !dbg !4953
  %238 = or i24 %237, 1048576, !dbg !4953
  store i24 %238, i24* %15, align 8, !dbg !4953
  store i8 120, i8* %21, align 1, !dbg !4954
  br label %216, !dbg !4955

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4956
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #24, !dbg !4959
  br label %363, !dbg !4960

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4961
  call void @llvm.dbg.value(metadata i32 %242, metadata !4723, metadata !DIExpression()), !dbg !4907
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4962
  call void @llvm.dbg.value(metadata i32 -1, metadata !4707, metadata !DIExpression()), !dbg !4781
  call void @llvm.dbg.value(metadata i32 %29, metadata !4647, metadata !DIExpression()), !dbg !4767
  call void @llvm.dbg.value(metadata i8* %192, metadata !4708, metadata !DIExpression()), !dbg !4781
  call void @llvm.dbg.value(metadata i8* %243, metadata !4709, metadata !DIExpression()), !dbg !4781
  call void @llvm.dbg.value(metadata i8 0, metadata !4710, metadata !DIExpression()), !dbg !4781
  %244 = icmp eq i8* %192, null, !dbg !4963
  br i1 %244, label %363, label %245, !dbg !4965, !llvm.loop !4777

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4934
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4728, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4781
  call void @llvm.dbg.value(metadata i32 0, metadata !4729, metadata !DIExpression()), !dbg !4781
  %250 = zext i8 %249 to i32, !dbg !4966
  %251 = icmp eq i8 %249, 0, !dbg !4968
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4728, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4781
  call void @llvm.dbg.value(metadata i32 undef, metadata !4728, metadata !DIExpression()), !dbg !4781
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4728, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4781
  call void @llvm.dbg.value(metadata i32 undef, metadata !4728, metadata !DIExpression()), !dbg !4781
  %252 = icmp sgt i32 %58, 0, !dbg !4969
  br i1 %252, label %253, label %302, !dbg !4970

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4934
  %255 = icmp eq i24 %254, 0, !dbg !4934
  %256 = ptrtoint i8* %248 to i32, !dbg !4971
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4728, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4781
  %257 = ptrtoint i8* %247 to i32, !dbg !4971
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4728, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4781
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4728, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4781
  %258 = xor i1 %251, true, !dbg !4972
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4728, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4781
  %259 = sext i1 %258 to i32, !dbg !4972
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4728, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4781
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4728, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4781
  %260 = lshr i24 %246, 19, !dbg !4973
  %261 = and i24 %260, 1, !dbg !4973
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4973
  %263 = zext i24 %262 to i32, !dbg !4973
  %264 = add i32 %257, %259, !dbg !4973
  %265 = add i32 %256, %263, !dbg !4973
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4728, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4781
  %266 = and i24 %246, 4194304, !dbg !4974
  %267 = icmp eq i24 %266, 0, !dbg !4974
  %268 = load i32, i32* %16, align 4, !dbg !4976
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4728, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4781
  call void @llvm.dbg.value(metadata i32 undef, metadata !4728, metadata !DIExpression()), !dbg !4781
  %269 = load i32, i32* %17, align 8, !dbg !4977
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4977
  call void @llvm.dbg.value(metadata i32 undef, metadata !4728, metadata !DIExpression()), !dbg !4781
  %271 = add i32 %264, %58, !dbg !4977
  %272 = add i32 %265, %268, !dbg !4977
  %273 = add i32 %272, %270, !dbg !4978
  %274 = sub i32 %271, %273, !dbg !4978
  call void @llvm.dbg.value(metadata i32 %274, metadata !4706, metadata !DIExpression()), !dbg !4781
  %275 = and i24 %246, 4, !dbg !4979
  %276 = icmp eq i24 %275, 0, !dbg !4979
  br i1 %276, label %277, label %302, !dbg !4980

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4730, metadata !DIExpression()), !dbg !4981
  %278 = and i24 %246, 64, !dbg !4982
  %279 = icmp eq i24 %278, 0, !dbg !4982
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4983
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4983
  %282 = select i1 %279, i32 32, i32 48, !dbg !4983
  br i1 %280, label %287, label %283, !dbg !4983

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #25, !dbg !4984
  call void @llvm.dbg.value(metadata i32 %284, metadata !4735, metadata !DIExpression()), !dbg !4985
  %285 = icmp slt i32 %284, 0, !dbg !4986
  %286 = add i32 %29, 1, !dbg !4984
  call void @llvm.dbg.value(metadata i32 undef, metadata !4647, metadata !DIExpression()), !dbg !4767
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4781
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4771
  call void @llvm.dbg.value(metadata i32 %290, metadata !4647, metadata !DIExpression()), !dbg !4767
  call void @llvm.dbg.value(metadata i8 undef, metadata !4730, metadata !DIExpression()), !dbg !4981
  call void @llvm.dbg.value(metadata i8 %288, metadata !4710, metadata !DIExpression()), !dbg !4781
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4988
  %292 = add i32 %291, -1, !dbg !4988
  br label %293, !dbg !4988

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4989
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4771
  call void @llvm.dbg.value(metadata i32 %295, metadata !4647, metadata !DIExpression()), !dbg !4767
  call void @llvm.dbg.value(metadata i32 %294, metadata !4706, metadata !DIExpression()), !dbg !4781
  call void @llvm.dbg.value(metadata i32 %294, metadata !4706, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4781
  %296 = icmp sgt i32 %294, 0, !dbg !4990
  br i1 %296, label %297, label %302, !dbg !4988

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4991
  call void @llvm.dbg.value(metadata i32 %298, metadata !4706, metadata !DIExpression()), !dbg !4781
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #25, !dbg !4992
  call void @llvm.dbg.value(metadata i32 %299, metadata !4741, metadata !DIExpression()), !dbg !4993
  %300 = icmp slt i32 %299, 0, !dbg !4994
  %301 = add i32 %295, 1, !dbg !4992
  call void @llvm.dbg.value(metadata i32 undef, metadata !4647, metadata !DIExpression()), !dbg !4767
  br i1 %300, label %361, label %293, !llvm.loop !4996

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4781
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4781
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4771
  call void @llvm.dbg.value(metadata i32 %305, metadata !4647, metadata !DIExpression()), !dbg !4767
  call void @llvm.dbg.value(metadata i32 %304, metadata !4706, metadata !DIExpression()), !dbg !4781
  call void @llvm.dbg.value(metadata i8 %303, metadata !4710, metadata !DIExpression()), !dbg !4781
  %306 = icmp eq i8 %303, 0, !dbg !4998
  br i1 %306, label %312, label %307, !dbg !4999

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !5000
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #25, !dbg !5001
  call void @llvm.dbg.value(metadata i32 %309, metadata !4744, metadata !DIExpression()), !dbg !5002
  %310 = icmp slt i32 %309, 0, !dbg !5003
  %311 = add i32 %305, 1, !dbg !5001
  call void @llvm.dbg.value(metadata i32 undef, metadata !4647, metadata !DIExpression()), !dbg !4767
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4771
  call void @llvm.dbg.value(metadata i32 %313, metadata !4647, metadata !DIExpression()), !dbg !4767
  %314 = lshr i24 %246, 20, !dbg !5005
  %315 = lshr i24 %246, 19, !dbg !5006
  %316 = or i24 %314, %315, !dbg !5007
  %317 = and i24 %316, 1, !dbg !5007
  %318 = icmp eq i24 %317, 0, !dbg !5007
  br i1 %318, label %323, label %319, !dbg !5008

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !5009
  call void @llvm.dbg.value(metadata i32 %320, metadata !4748, metadata !DIExpression()), !dbg !5010
  %321 = icmp slt i32 %320, 0, !dbg !5011
  %322 = add i32 %313, 1, !dbg !5009
  call void @llvm.dbg.value(metadata i32 undef, metadata !4647, metadata !DIExpression()), !dbg !4767
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4771
  call void @llvm.dbg.value(metadata i32 %324, metadata !4647, metadata !DIExpression()), !dbg !4767
  %325 = and i24 %246, 1048576, !dbg !5013
  %326 = icmp eq i24 %325, 0, !dbg !5013
  br i1 %326, label %333, label %327, !dbg !5014

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !5015
  %329 = zext i8 %328 to i32, !dbg !5015
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #25, !dbg !5015
  call void @llvm.dbg.value(metadata i32 %330, metadata !4754, metadata !DIExpression()), !dbg !5016
  %331 = icmp slt i32 %330, 0, !dbg !5017
  %332 = add i32 %324, 1, !dbg !5015
  call void @llvm.dbg.value(metadata i32 undef, metadata !4647, metadata !DIExpression()), !dbg !4767
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4771
  call void @llvm.dbg.value(metadata i32 %334, metadata !4647, metadata !DIExpression()), !dbg !4767
  %335 = load i32, i32* %16, align 4, !dbg !5019
  call void @llvm.dbg.value(metadata i32 %335, metadata !4729, metadata !DIExpression()), !dbg !4781
  br label %336, !dbg !5020

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !5021
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4771
  call void @llvm.dbg.value(metadata i32 %338, metadata !4647, metadata !DIExpression()), !dbg !4767
  call void @llvm.dbg.value(metadata i32 %337, metadata !4729, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4781
  %339 = icmp sgt i32 %337, 0, !dbg !5022
  br i1 %339, label %340, label %345, !dbg !5020

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !5023
  call void @llvm.dbg.value(metadata i32 %341, metadata !4729, metadata !DIExpression()), !dbg !4781
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !5024
  call void @llvm.dbg.value(metadata i32 %342, metadata !4758, metadata !DIExpression()), !dbg !5025
  %343 = icmp slt i32 %342, 0, !dbg !5026
  %344 = add i32 %338, 1, !dbg !5024
  call void @llvm.dbg.value(metadata i32 undef, metadata !4647, metadata !DIExpression()), !dbg !4767
  br i1 %343, label %361, label %336, !llvm.loop !5028

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #24, !dbg !5030
  call void @llvm.dbg.value(metadata i32 %346, metadata !4761, metadata !DIExpression()), !dbg !5031
  %347 = icmp slt i32 %346, 0, !dbg !5032
  call void @llvm.dbg.value(metadata i32 undef, metadata !4647, metadata !DIExpression()), !dbg !4767
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !5030
  call void @llvm.dbg.value(metadata i32 %349, metadata !4647, metadata !DIExpression()), !dbg !4767
  call void @llvm.dbg.value(metadata i32 %304, metadata !4706, metadata !DIExpression()), !dbg !4781
  %350 = icmp sgt i32 %304, 0, !dbg !5034
  br i1 %350, label %351, label %363, !dbg !5035

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !5035
  %353 = add i32 %352, %338, !dbg !5035
  br label %354, !dbg !5035

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4647, metadata !DIExpression()), !dbg !4767
  call void @llvm.dbg.value(metadata i32 %355, metadata !4706, metadata !DIExpression()), !dbg !4781
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #25, !dbg !5036
  call void @llvm.dbg.value(metadata i32 %356, metadata !4763, metadata !DIExpression()), !dbg !5037
  %357 = icmp slt i32 %356, 0, !dbg !5038
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !5040
  call void @llvm.dbg.value(metadata i32 undef, metadata !4647, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4767
  call void @llvm.dbg.value(metadata i32 %359, metadata !4706, metadata !DIExpression()), !dbg !4781
  %360 = icmp sgt i32 %355, 1, !dbg !5034
  br i1 %360, label %354, label %363, !dbg !5035, !llvm.loop !5041

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4647, metadata !DIExpression()), !dbg !4767
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4778
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4771
  call void @llvm.dbg.value(metadata i32 %364, metadata !4647, metadata !DIExpression()), !dbg !4767
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4778
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4767
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !5043
  ret i32 %366, !dbg !5043
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #12

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5044 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5048, metadata !DIExpression()), !dbg !5050
  call void @llvm.dbg.value(metadata i8* %1, metadata !5049, metadata !DIExpression()), !dbg !5050
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !5051
  store i24 0, i24* %3, align 4, !dbg !5051
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5051
  store i8 0, i8* %4, align 1, !dbg !5051
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5051
  store i32 0, i32* %5, align 4, !dbg !5051
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5051
  store i32 0, i32* %6, align 4, !dbg !5051
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5052
  call void @llvm.dbg.value(metadata i8* %7, metadata !5049, metadata !DIExpression()), !dbg !5050
  %8 = load i8, i8* %7, align 1, !dbg !5053
  %9 = icmp eq i8 %8, 37, !dbg !5055
  br i1 %9, label %10, label %12, !dbg !5056

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5057
  call void @llvm.dbg.value(metadata i8* %11, metadata !5049, metadata !DIExpression()), !dbg !5050
  store i8 37, i8* %4, align 1, !dbg !5059
  br label %18, !dbg !5060

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #24, !dbg !5061
  call void @llvm.dbg.value(metadata i8* %13, metadata !5049, metadata !DIExpression()), !dbg !5050
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #24, !dbg !5062
  call void @llvm.dbg.value(metadata i8* %14, metadata !5049, metadata !DIExpression()), !dbg !5050
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #24, !dbg !5063
  call void @llvm.dbg.value(metadata i8* %15, metadata !5049, metadata !DIExpression()), !dbg !5050
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #24, !dbg !5064
  call void @llvm.dbg.value(metadata i8* %16, metadata !5049, metadata !DIExpression()), !dbg !5050
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #24, !dbg !5065
  call void @llvm.dbg.value(metadata i8* %17, metadata !5049, metadata !DIExpression()), !dbg !5050
  br label %18, !dbg !5066

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !5050
  ret i8* %19, !dbg !5067
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !5068 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5072, metadata !DIExpression()), !dbg !5079
  call void @llvm.dbg.value(metadata i8* %1, metadata !5073, metadata !DIExpression()), !dbg !5079
  call void @llvm.dbg.value(metadata i8* %2, metadata !5074, metadata !DIExpression()), !dbg !5079
  call void @llvm.dbg.value(metadata i8* %3, metadata !5075, metadata !DIExpression()), !dbg !5079
  call void @llvm.dbg.value(metadata i32 0, metadata !5076, metadata !DIExpression()), !dbg !5079
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !5080

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !5081
  call void @llvm.dbg.value(metadata i32 %9, metadata !5076, metadata !DIExpression()), !dbg !5079
  call void @llvm.dbg.value(metadata i8* %8, metadata !5074, metadata !DIExpression()), !dbg !5079
  %10 = icmp ult i8* %8, %3, !dbg !5082
  br i1 %10, label %11, label %13, !dbg !5083

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !5084
  br label %17, !dbg !5083

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !5085

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !5086
  %16 = icmp eq i8 %15, 0, !dbg !5085
  br i1 %16, label %24, label %17, !dbg !5080

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !5084
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5087
  call void @llvm.dbg.value(metadata i8* %19, metadata !5074, metadata !DIExpression()), !dbg !5079
  %20 = zext i8 %18 to i32, !dbg !5088
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #25, !dbg !5089
  call void @llvm.dbg.value(metadata i32 %21, metadata !5077, metadata !DIExpression()), !dbg !5090
  %22 = icmp slt i32 %21, 0, !dbg !5091
  %23 = add i32 %9, 1, !dbg !5093
  call void @llvm.dbg.value(metadata i32 undef, metadata !5076, metadata !DIExpression()), !dbg !5079
  br i1 %22, label %24, label %7, !llvm.loop !5094

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !5079
  ret i32 %25, !dbg !5096
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #13 !dbg !5097 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5101, metadata !DIExpression()), !dbg !5111
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !5102, metadata !DIExpression()), !dbg !5111
  call void @llvm.dbg.value(metadata i8* %2, metadata !5103, metadata !DIExpression()), !dbg !5111
  call void @llvm.dbg.value(metadata i8* %3, metadata !5104, metadata !DIExpression()), !dbg !5111
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !5112
  %6 = load i8, i8* %5, align 1, !dbg !5112
  %7 = zext i8 %6 to i32, !dbg !5113
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #24, !dbg !5114
  %9 = icmp eq i32 %8, 0, !dbg !5114
  call void @llvm.dbg.value(metadata i1 %9, metadata !5105, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5111
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #24, !dbg !5115
  call void @llvm.dbg.value(metadata i32 %10, metadata !5106, metadata !DIExpression()), !dbg !5111
  %11 = ptrtoint i8* %3 to i32, !dbg !5116
  %12 = ptrtoint i8* %2 to i32, !dbg !5116
  %13 = sub i32 %11, %12, !dbg !5116
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !5117
  call void @llvm.dbg.value(metadata i8* %14, metadata !5108, metadata !DIExpression()), !dbg !5111
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !5118

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !5111
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !5101, metadata !DIExpression()), !dbg !5111
  call void @llvm.dbg.value(metadata i8* %18, metadata !5108, metadata !DIExpression()), !dbg !5111
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !5119
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !5120
  call void @llvm.dbg.value(metadata i32 %25, metadata !5109, metadata !DIExpression()), !dbg !5121
  %26 = icmp ult i32 %25, 10, !dbg !5122
  %27 = select i1 %26, i32 48, i32 %16, !dbg !5123
  %28 = add i32 %27, %25, !dbg !5121
  %29 = trunc i32 %28 to i8, !dbg !5123
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5124
  call void @llvm.dbg.value(metadata i8* %30, metadata !5108, metadata !DIExpression()), !dbg !5111
  store i8 %29, i8* %30, align 1, !dbg !5125
  call void @llvm.dbg.value(metadata i64 %22, metadata !5101, metadata !DIExpression()), !dbg !5111
  %31 = icmp uge i64 %19, %15, !dbg !5126
  %32 = icmp ugt i8* %30, %2, !dbg !5127
  %33 = and i1 %31, %32, !dbg !5127
  br i1 %33, label %17, label %34, !dbg !5128, !llvm.loop !5129

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5131
  %36 = load i24, i24* %35, align 4, !dbg !5131
  %37 = and i24 %36, 32, !dbg !5131
  %38 = icmp eq i24 %37, 0, !dbg !5131
  br i1 %38, label %44, label %39, !dbg !5133

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5134

40:                                               ; preds = %39
  br label %41, !dbg !5136

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5140
  store i24 %43, i24* %35, align 4, !dbg !5140
  br label %44, !dbg !5141

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5141
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #9 !dbg !5142 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5148, metadata !DIExpression()), !dbg !5151
  call void @llvm.dbg.value(metadata i8* %1, metadata !5149, metadata !DIExpression()), !dbg !5151
  call void @llvm.dbg.value(metadata i32 %2, metadata !5150, metadata !DIExpression()), !dbg !5151
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5152
  %5 = load i24, i24* %4, align 4, !dbg !5152
  %6 = lshr i24 %5, 11, !dbg !5152
  %7 = and i24 %6, 15, !dbg !5152
  %8 = zext i24 %7 to i32, !dbg !5152
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5153

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5154
  store i32 %2, i32* %10, align 4, !dbg !5156
  br label %28, !dbg !5157

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5158
  store i8 %12, i8* %1, align 1, !dbg !5159
  br label %28, !dbg !5160

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5161
  %15 = bitcast i8* %1 to i16*, !dbg !5162
  store i16 %14, i16* %15, align 2, !dbg !5163
  br label %28, !dbg !5164

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5165
  store i32 %2, i32* %17, align 4, !dbg !5166
  br label %28, !dbg !5167

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5168
  %20 = bitcast i8* %1 to i64*, !dbg !5169
  store i64 %19, i64* %20, align 8, !dbg !5170
  br label %28, !dbg !5171

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5172
  %23 = bitcast i8* %1 to i64*, !dbg !5173
  store i64 %22, i64* %23, align 8, !dbg !5174
  br label %28, !dbg !5175

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5176
  store i32 %2, i32* %25, align 4, !dbg !5177
  br label %28, !dbg !5178

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5179
  store i32 %2, i32* %27, align 4, !dbg !5180
  br label %28, !dbg !5181

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5182
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #3 !dbg !5183 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5186, metadata !DIExpression()), !dbg !5187
  %2 = add i32 %0, -65, !dbg !5188
  %3 = icmp ult i32 %2, 26, !dbg !5189
  %4 = zext i1 %3 to i32, !dbg !5189
  ret i32 %4, !dbg !5190
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #3 !dbg !5191 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5195, metadata !DIExpression()), !dbg !5196
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5197

2:                                                ; preds = %1
  br label %4, !dbg !5198

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5200

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5201
  ret i32 %5, !dbg !5202
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #13 !dbg !5203 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5205, metadata !DIExpression()), !dbg !5208
  call void @llvm.dbg.value(metadata i8* %1, metadata !5206, metadata !DIExpression()), !dbg !5208
  call void @llvm.dbg.value(metadata i8 1, metadata !5207, metadata !DIExpression()), !dbg !5208
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5209

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5207, metadata !DIExpression()), !dbg !5208
  call void @llvm.dbg.value(metadata i8* %5, metadata !5206, metadata !DIExpression()), !dbg !5208
  %6 = load i8, i8* %5, align 1, !dbg !5210
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5212

7:                                                ; preds = %4
  br label %11, !dbg !5213

8:                                                ; preds = %4
  br label %11, !dbg !5215

9:                                                ; preds = %4
  br label %11, !dbg !5216

10:                                               ; preds = %4
  br label %11, !dbg !5217

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5218
  %14 = or i24 %13, %12, !dbg !5218
  store i24 %14, i24* %3, align 4, !dbg !5218
  call void @llvm.dbg.value(metadata i8 poison, metadata !5207, metadata !DIExpression()), !dbg !5208
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5206, metadata !DIExpression()), !dbg !5208
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5207, metadata !DIExpression()), !dbg !5208
  call void @llvm.dbg.value(metadata i8* %15, metadata !5206, metadata !DIExpression()), !dbg !5208
  %17 = load i24, i24* %3, align 4, !dbg !5219
  %18 = and i24 %17, 68, !dbg !5221
  %19 = icmp eq i24 %18, 68, !dbg !5221
  br i1 %19, label %20, label %22, !dbg !5221

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5222
  store i24 %21, i24* %3, align 4, !dbg !5222
  br label %22, !dbg !5224

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5225
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5226 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5228, metadata !DIExpression()), !dbg !5232
  call void @llvm.dbg.value(metadata i8* %1, metadata !5229, metadata !DIExpression()), !dbg !5232
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5233
  %5 = load i24, i24* %4, align 4, !dbg !5234
  %6 = or i24 %5, 128, !dbg !5234
  store i24 %6, i24* %4, align 4, !dbg !5234
  call void @llvm.dbg.value(metadata i8* %1, metadata !5229, metadata !DIExpression()), !dbg !5232
  %7 = load i8, i8* %1, align 1, !dbg !5235
  %8 = icmp eq i8 %7, 42, !dbg !5237
  br i1 %8, label %9, label %12, !dbg !5238

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5239
  store i24 %10, i24* %4, align 4, !dbg !5239
  call void @llvm.dbg.value(metadata i8* %1, metadata !5229, metadata !DIExpression()), !dbg !5232
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5241
  call void @llvm.dbg.value(metadata i8* %11, metadata !5229, metadata !DIExpression()), !dbg !5232
  store i8* %11, i8** %3, align 4, !dbg !5241
  br label %29, !dbg !5242

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5230, metadata !DIExpression()), !dbg !5232
  call void @llvm.dbg.value(metadata i8** %3, metadata !5229, metadata !DIExpression(DW_OP_deref)), !dbg !5232
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5243
  call void @llvm.dbg.value(metadata i32 %13, metadata !5231, metadata !DIExpression()), !dbg !5232
  %14 = load i8*, i8** %3, align 4, !dbg !5244
  call void @llvm.dbg.value(metadata i8* %14, metadata !5229, metadata !DIExpression()), !dbg !5232
  %15 = icmp eq i8* %14, %1, !dbg !5246
  br i1 %15, label %29, label %16, !dbg !5247

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5248
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5250
  store i32 %13, i32* %18, align 4, !dbg !5251
  %19 = lshr i32 %13, 31, !dbg !5252
  %20 = lshr i24 %17, 1, !dbg !5253
  %21 = and i24 %20, 1, !dbg !5253
  %22 = zext i24 %21 to i32, !dbg !5253
  %23 = or i32 %19, %22, !dbg !5253
  %24 = trunc i32 %23 to i24, !dbg !5253
  %25 = shl nuw nsw i24 %24, 1, !dbg !5253
  %26 = and i24 %17, -131, !dbg !5253
  %27 = or i24 %26, 128, !dbg !5253
  %28 = or i24 %25, %27, !dbg !5253
  store i24 %28, i24* %4, align 4, !dbg !5253
  br label %29, !dbg !5254

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5232
  ret i8* %30, !dbg !5255
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5256 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5258, metadata !DIExpression()), !dbg !5261
  call void @llvm.dbg.value(metadata i8* %1, metadata !5259, metadata !DIExpression()), !dbg !5261
  %4 = load i8, i8* %1, align 1, !dbg !5262
  %5 = icmp eq i8 %4, 46, !dbg !5263
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5264
  %7 = load i24, i24* %6, align 4, !dbg !5265
  %8 = select i1 %5, i24 512, i24 0, !dbg !5265
  %9 = and i24 %7, -513, !dbg !5265
  %10 = or i24 %9, %8, !dbg !5265
  store i24 %10, i24* %6, align 4, !dbg !5265
  br i1 %5, label %11, label %32, !dbg !5266

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5259, metadata !DIExpression()), !dbg !5261
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5267
  call void @llvm.dbg.value(metadata i8* %12, metadata !5259, metadata !DIExpression()), !dbg !5261
  store i8* %12, i8** %3, align 4, !dbg !5267
  %13 = load i8, i8* %12, align 1, !dbg !5268
  %14 = icmp eq i8 %13, 42, !dbg !5270
  br i1 %14, label %15, label %18, !dbg !5271

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5272
  store i24 %16, i24* %6, align 4, !dbg !5272
  call void @llvm.dbg.value(metadata i8* %12, metadata !5259, metadata !DIExpression()), !dbg !5261
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5274
  call void @llvm.dbg.value(metadata i8* %17, metadata !5259, metadata !DIExpression()), !dbg !5261
  store i8* %17, i8** %3, align 4, !dbg !5274
  br label %32, !dbg !5275

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5259, metadata !DIExpression(DW_OP_deref)), !dbg !5261
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5276
  call void @llvm.dbg.value(metadata i32 %19, metadata !5260, metadata !DIExpression()), !dbg !5261
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5277
  store i32 %19, i32* %20, align 4, !dbg !5278
  %21 = lshr i32 %19, 31, !dbg !5279
  %22 = load i24, i24* %6, align 4, !dbg !5280
  %23 = lshr i24 %22, 1, !dbg !5280
  %24 = and i24 %23, 1, !dbg !5280
  %25 = zext i24 %24 to i32, !dbg !5280
  %26 = or i32 %21, %25, !dbg !5280
  %27 = trunc i32 %26 to i24, !dbg !5280
  %28 = shl nuw nsw i24 %27, 1, !dbg !5280
  %29 = and i24 %22, -3, !dbg !5280
  %30 = or i24 %28, %29, !dbg !5280
  store i24 %30, i24* %6, align 4, !dbg !5280
  %31 = load i8*, i8** %3, align 4, !dbg !5281
  call void @llvm.dbg.value(metadata i8* %31, metadata !5259, metadata !DIExpression()), !dbg !5261
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5261
  ret i8* %33, !dbg !5282
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !5283 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5285, metadata !DIExpression()), !dbg !5287
  call void @llvm.dbg.value(metadata i8* %1, metadata !5286, metadata !DIExpression()), !dbg !5287
  %3 = load i8, i8* %1, align 1, !dbg !5288
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5289

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5290
  call void @llvm.dbg.value(metadata i8* %5, metadata !5286, metadata !DIExpression()), !dbg !5287
  %6 = load i8, i8* %5, align 1, !dbg !5293
  %7 = icmp eq i8 %6, 104, !dbg !5294
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5295
  %9 = load i24, i24* %8, align 4, !dbg !5295
  %10 = and i24 %9, -30721, !dbg !5295
  br i1 %7, label %11, label %14, !dbg !5296

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5297
  store i24 %12, i24* %8, align 4, !dbg !5297
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5299
  call void @llvm.dbg.value(metadata i8* %13, metadata !5286, metadata !DIExpression()), !dbg !5287
  br label %56, !dbg !5300

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5301
  store i24 %15, i24* %8, align 4, !dbg !5301
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5303
  call void @llvm.dbg.value(metadata i8* %17, metadata !5286, metadata !DIExpression()), !dbg !5287
  %18 = load i8, i8* %17, align 1, !dbg !5305
  %19 = icmp eq i8 %18, 108, !dbg !5306
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5307
  %21 = load i24, i24* %20, align 4, !dbg !5307
  %22 = and i24 %21, -30721, !dbg !5307
  br i1 %19, label %23, label %26, !dbg !5308

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5309
  store i24 %24, i24* %20, align 4, !dbg !5309
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5311
  call void @llvm.dbg.value(metadata i8* %25, metadata !5286, metadata !DIExpression()), !dbg !5287
  br label %56, !dbg !5312

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5313
  store i24 %27, i24* %20, align 4, !dbg !5313
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5315
  %30 = load i24, i24* %29, align 4, !dbg !5316
  %31 = and i24 %30, -30721, !dbg !5316
  %32 = or i24 %31, 10240, !dbg !5316
  store i24 %32, i24* %29, align 4, !dbg !5316
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5317
  call void @llvm.dbg.value(metadata i8* %33, metadata !5286, metadata !DIExpression()), !dbg !5287
  br label %56, !dbg !5318

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5319
  %36 = load i24, i24* %35, align 4, !dbg !5320
  %37 = and i24 %36, -30721, !dbg !5320
  %38 = or i24 %37, 12288, !dbg !5320
  store i24 %38, i24* %35, align 4, !dbg !5320
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5321
  call void @llvm.dbg.value(metadata i8* %39, metadata !5286, metadata !DIExpression()), !dbg !5287
  br label %56, !dbg !5322

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5323
  %42 = load i24, i24* %41, align 4, !dbg !5324
  %43 = and i24 %42, -30721, !dbg !5324
  %44 = or i24 %43, 14336, !dbg !5324
  store i24 %44, i24* %41, align 4, !dbg !5324
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5325
  call void @llvm.dbg.value(metadata i8* %45, metadata !5286, metadata !DIExpression()), !dbg !5287
  br label %56, !dbg !5326

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5327
  %48 = load i24, i24* %47, align 4, !dbg !5328
  %49 = and i24 %48, -30723, !dbg !5328
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5329
  call void @llvm.dbg.value(metadata i8* %50, metadata !5286, metadata !DIExpression()), !dbg !5287
  %51 = or i24 %49, 16386, !dbg !5330
  store i24 %51, i24* %47, align 4, !dbg !5330
  br label %56, !dbg !5331

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5332
  %54 = load i24, i24* %53, align 4, !dbg !5333
  %55 = and i24 %54, -30721, !dbg !5333
  store i24 %55, i24* %53, align 4, !dbg !5333
  br label %56, !dbg !5334

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5286, metadata !DIExpression()), !dbg !5287
  ret i8* %57, !dbg !5335
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !5336 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5338, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata i8* %1, metadata !5339, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata i8 0, metadata !5340, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata i8* %1, metadata !5339, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5343
  %3 = load i8, i8* %1, align 1, !dbg !5344
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5345
  store i8 %3, i8* %4, align 1, !dbg !5346
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5347

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5348

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5349
  %9 = load i24, i24* %8, align 4, !dbg !5349
  %10 = and i24 %9, -458753, !dbg !5349
  %11 = or i24 %10, %7, !dbg !5349
  call void @llvm.dbg.label(metadata !5341), !dbg !5350
  %12 = and i24 %9, 30720, !dbg !5351
  %13 = icmp eq i24 %12, 16384, !dbg !5351
  %14 = zext i1 %13 to i24, !dbg !5353
  %15 = or i24 %11, %14, !dbg !5353
  %16 = icmp eq i8 %3, 99, !dbg !5354
  br i1 %16, label %17, label %43, !dbg !5356

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5357
  %19 = icmp ne i24 %18, 0, !dbg !5357
  call void @llvm.dbg.value(metadata i1 %19, metadata !5340, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5343
  br label %43, !dbg !5359

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5360
  %22 = load i24, i24* %21, align 4, !dbg !5361
  %23 = and i24 %22, -458753, !dbg !5361
  %24 = or i24 %23, 262144, !dbg !5361
  call void @llvm.dbg.value(metadata i8 1, metadata !5340, metadata !DIExpression()), !dbg !5343
  br label %43, !dbg !5362

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5365
  %27 = load i24, i24* %26, align 4, !dbg !5366
  %28 = and i24 %27, -458753, !dbg !5366
  %29 = or i24 %28, 196608, !dbg !5366
  %30 = and i24 %27, 30720, !dbg !5367
  %31 = icmp eq i24 %30, 16384, !dbg !5367
  br label %43, !dbg !5369

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5370
  %34 = load i24, i24* %33, align 4, !dbg !5371
  %35 = and i24 %34, -458753, !dbg !5371
  %36 = or i24 %35, 196608, !dbg !5371
  %37 = and i24 %34, 30720, !dbg !5372
  %38 = icmp ne i24 %37, 0, !dbg !5372
  br label %43, !dbg !5374

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5375
  %41 = load i24, i24* %40, align 4, !dbg !5376
  %42 = or i24 %41, 1, !dbg !5376
  br label %43, !dbg !5377

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5378
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5379
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5380
  call void @llvm.dbg.value(metadata i8* %48, metadata !5339, metadata !DIExpression()), !dbg !5343
  call void @llvm.dbg.value(metadata i8 poison, metadata !5340, metadata !DIExpression()), !dbg !5343
  %49 = lshr i24 %44, 1, !dbg !5378
  %50 = and i24 %49, 1, !dbg !5378
  %51 = zext i24 %50 to i32, !dbg !5378
  %52 = or i32 %51, %47, !dbg !5378
  %53 = trunc i32 %52 to i24, !dbg !5378
  %54 = shl nuw nsw i24 %53, 1, !dbg !5378
  %55 = and i24 %44, -3, !dbg !5378
  %56 = or i24 %54, %55, !dbg !5378
  store i24 %56, i24* %46, align 4, !dbg !5378
  ret i8* %48, !dbg !5381
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #13 !dbg !5382 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5386, metadata !DIExpression()), !dbg !5389
  %2 = load i8*, i8** %0, align 4, !dbg !5390
  call void @llvm.dbg.value(metadata i8* %2, metadata !5387, metadata !DIExpression()), !dbg !5389
  call void @llvm.dbg.value(metadata i32 0, metadata !5388, metadata !DIExpression()), !dbg !5389
  %3 = load i8, i8* %2, align 1, !dbg !5391
  %4 = zext i8 %3 to i32, !dbg !5392
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #24, !dbg !5393
  %6 = icmp eq i32 %5, 0, !dbg !5394
  br i1 %6, label %19, label %7, !dbg !5394

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5388, metadata !DIExpression()), !dbg !5389
  call void @llvm.dbg.value(metadata i8* %10, metadata !5387, metadata !DIExpression()), !dbg !5389
  %11 = mul i32 %9, 10, !dbg !5395
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5397
  call void @llvm.dbg.value(metadata i8* %12, metadata !5387, metadata !DIExpression()), !dbg !5389
  %13 = add i32 %11, -48, !dbg !5398
  %14 = add i32 %13, %8, !dbg !5399
  call void @llvm.dbg.value(metadata i32 %14, metadata !5388, metadata !DIExpression()), !dbg !5389
  %15 = load i8, i8* %12, align 1, !dbg !5391
  %16 = zext i8 %15 to i32, !dbg !5392
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #24, !dbg !5393
  %18 = icmp eq i32 %17, 0, !dbg !5394
  br i1 %18, label %19, label %7, !dbg !5394, !llvm.loop !5400

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5389
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5389
  store i8* %20, i8** %0, align 4, !dbg !5402
  ret i32 %21, !dbg !5403
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #3 !dbg !5404 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5406, metadata !DIExpression()), !dbg !5407
  %2 = add i32 %0, -48, !dbg !5408
  %3 = icmp ult i32 %2, 10, !dbg !5409
  %4 = zext i1 %3 to i32, !dbg !5409
  ret i32 %4, !dbg !5410
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @assert_post_action(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5411 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5416, metadata !DIExpression()), !dbg !5418
  call void @llvm.dbg.value(metadata i32 %1, metadata !5417, metadata !DIExpression()), !dbg !5418
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !5419, !srcloc !5421
  ret void, !dbg !5422
}

; Function Attrs: noinline nounwind optsize
define dso_local void @assert_print(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5423 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5425, metadata !DIExpression()), !dbg !5433
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5434
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5434
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5426, metadata !DIExpression()), !dbg !5435
  call void @llvm.va_start(i8* nonnull %3), !dbg !5436
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5437
  %5 = load i32, i32* %4, align 4, !dbg !5437
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5437
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !5437
  call void @llvm.va_end(i8* nonnull %3), !dbg !5438
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5439
  ret void, !dbg !5439
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5440 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !5442, !srcloc !5443
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !5444, !srcloc !5445
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !5446, !srcloc !5447
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !5448, !srcloc !5449
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !5450, !srcloc !5451
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,82\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !5452, !srcloc !5453
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,168000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !5454, !srcloc !5455
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !5456, !srcloc !5457
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,1024\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !5458, !srcloc !5459
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !5460, !srcloc !5461
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !5462, !srcloc !5463
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !5464, !srcloc !5465
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !5466, !srcloc !5467
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !5468, !srcloc !5469
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !5470, !srcloc !5471
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !5472, !srcloc !5473
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !5474, !srcloc !5475
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #23, !dbg !5476, !srcloc !5477
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !5478, !srcloc !5479
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #23, !dbg !5480, !srcloc !5481
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !5482, !srcloc !5483
  tail call void asm sideeffect ".globl\09CONFIG_TEST_EXTRA_STACK_SIZE\0A\09.equ\09CONFIG_TEST_EXTRA_STACK_SIZE,0\0A\09.type\09CONFIG_TEST_EXTRA_STACK_SIZE,%object", ""() #23, !dbg !5484, !srcloc !5485
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !5486, !srcloc !5487
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !5488, !srcloc !5489
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #23, !dbg !5490, !srcloc !5491
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !5492, !srcloc !5493
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !5494, !srcloc !5495
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ADAFRUIT_FEATHER_HEADER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ADAFRUIT_FEATHER_HEADER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ADAFRUIT_FEATHER_HEADER_ENABLED,%object", ""() #23, !dbg !5496, !srcloc !5497
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !5498, !srcloc !5499
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #23, !dbg !5500, !srcloc !5501
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !5502, !srcloc !5503
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #23, !dbg !5504, !srcloc !5505
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !5506, !srcloc !5507
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_JEDEC_SPI_NOR_ENABLED\0A\09.equ\09CONFIG_DT_HAS_JEDEC_SPI_NOR_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_JEDEC_SPI_NOR_ENABLED,%object", ""() #23, !dbg !5508, !srcloc !5509
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #23, !dbg !5510, !srcloc !5511
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5512, !srcloc !5513
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED,%object", ""() #23, !dbg !5514, !srcloc !5515
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #23, !dbg !5516, !srcloc !5517
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5518, !srcloc !5519
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #23, !dbg !5520, !srcloc !5521
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #23, !dbg !5522, !srcloc !5523
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #23, !dbg !5524, !srcloc !5525
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5526, !srcloc !5527
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,%object", ""() #23, !dbg !5528, !srcloc !5529
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #23, !dbg !5530, !srcloc !5531
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #23, !dbg !5532, !srcloc !5533
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #23, !dbg !5534, !srcloc !5535
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #23, !dbg !5536, !srcloc !5537
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #23, !dbg !5538, !srcloc !5539
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #23, !dbg !5540, !srcloc !5541
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5542, !srcloc !5543
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #23, !dbg !5544, !srcloc !5545
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #23, !dbg !5546, !srcloc !5547
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED,%object", ""() #23, !dbg !5548, !srcloc !5549
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !5550, !srcloc !5551
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !5552, !srcloc !5553
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !5554, !srcloc !5555
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !5556, !srcloc !5557
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #23, !dbg !5558, !srcloc !5559
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #23, !dbg !5560, !srcloc !5561
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !5562, !srcloc !5563
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !5564, !srcloc !5565
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !5566, !srcloc !5567
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !5568, !srcloc !5569
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !5570, !srcloc !5571
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !5572, !srcloc !5573
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !5574, !srcloc !5575
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !5576, !srcloc !5577
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !5578, !srcloc !5579
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !5580, !srcloc !5581
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !5582, !srcloc !5583
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !5584, !srcloc !5585
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !5586, !srcloc !5587
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !5588, !srcloc !5589
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !5590, !srcloc !5591
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !5592, !srcloc !5593
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !5594, !srcloc !5595
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !5596, !srcloc !5597
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !5598, !srcloc !5599
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !5600, !srcloc !5601
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !5602, !srcloc !5603
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !5604, !srcloc !5605
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !5606, !srcloc !5607
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !5608, !srcloc !5609
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !5610, !srcloc !5611
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !5612, !srcloc !5613
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #23, !dbg !5614, !srcloc !5615
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #23, !dbg !5616, !srcloc !5617
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !5618, !srcloc !5619
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_ADAFRUIT_FEATHER_STM32F405\0A\09.equ\09CONFIG_BOARD_ADAFRUIT_FEATHER_STM32F405,1\0A\09.type\09CONFIG_BOARD_ADAFRUIT_FEATHER_STM32F405,%object", ""() #23, !dbg !5620, !srcloc !5621
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #23, !dbg !5622, !srcloc !5623
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #23, !dbg !5624, !srcloc !5625
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #23, !dbg !5626, !srcloc !5627
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !5628, !srcloc !5629
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #23, !dbg !5630, !srcloc !5631
  tail call void asm sideeffect ".globl\09CONFIG_STM32_CCM\0A\09.equ\09CONFIG_STM32_CCM,1\0A\09.type\09CONFIG_STM32_CCM,%object", ""() #23, !dbg !5632, !srcloc !5633
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F405XG\0A\09.equ\09CONFIG_SOC_STM32F405XG,1\0A\09.type\09CONFIG_SOC_STM32F405XG,%object", ""() #23, !dbg !5634, !srcloc !5635
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5636, !srcloc !5637
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #23, !dbg !5638, !srcloc !5639
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !5640, !srcloc !5641
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !5642, !srcloc !5643
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !5644, !srcloc !5645
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !5646, !srcloc !5647
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !5648, !srcloc !5649
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !5650, !srcloc !5651
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !5652, !srcloc !5653
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !5654, !srcloc !5655
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #23, !dbg !5656, !srcloc !5657
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !5658, !srcloc !5659
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !5660, !srcloc !5661
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #23, !dbg !5662, !srcloc !5663
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !5664, !srcloc !5665
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !5666, !srcloc !5667
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !5668, !srcloc !5669
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !5670, !srcloc !5671
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !5672, !srcloc !5673
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !5674, !srcloc !5675
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #23, !dbg !5676, !srcloc !5677
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !5678, !srcloc !5679
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !5680, !srcloc !5681
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !5682, !srcloc !5683
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #23, !dbg !5684, !srcloc !5685
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #23, !dbg !5686, !srcloc !5687
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #23, !dbg !5688, !srcloc !5689
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #23, !dbg !5690, !srcloc !5691
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !5692, !srcloc !5693
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !5694, !srcloc !5695
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #23, !dbg !5696, !srcloc !5697
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #23, !dbg !5698, !srcloc !5699
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !5700, !srcloc !5701
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !5702, !srcloc !5703
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !5704, !srcloc !5705
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #23, !dbg !5706, !srcloc !5707
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #23, !dbg !5708, !srcloc !5709
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #23, !dbg !5710, !srcloc !5711
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #23, !dbg !5712, !srcloc !5713
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #23, !dbg !5714, !srcloc !5715
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !5716, !srcloc !5717
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !5718, !srcloc !5719
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !5720, !srcloc !5721
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !5722, !srcloc !5723
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !5724, !srcloc !5725
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !5726, !srcloc !5727
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !5728, !srcloc !5729
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !5730, !srcloc !5731
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #23, !dbg !5732, !srcloc !5733
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #23, !dbg !5734, !srcloc !5735
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #23, !dbg !5736, !srcloc !5737
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !5738, !srcloc !5739
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !5740, !srcloc !5741
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !5742, !srcloc !5743
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !5744, !srcloc !5745
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !5746, !srcloc !5747
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5748, !srcloc !5749
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !5750, !srcloc !5751
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !5752, !srcloc !5753
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !5754, !srcloc !5755
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #23, !dbg !5756, !srcloc !5757
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #23, !dbg !5758, !srcloc !5759
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #23, !dbg !5760, !srcloc !5761
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #23, !dbg !5762, !srcloc !5763
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #23, !dbg !5764, !srcloc !5765
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #23, !dbg !5766, !srcloc !5767
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #23, !dbg !5768, !srcloc !5769
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !5770, !srcloc !5771
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5772, !srcloc !5773
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #23, !dbg !5774, !srcloc !5775
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !5776, !srcloc !5777
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !5778, !srcloc !5779
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !5780, !srcloc !5781
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !5782, !srcloc !5783
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !5784, !srcloc !5785
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !5786, !srcloc !5787
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !5788, !srcloc !5789
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !5790, !srcloc !5791
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !5792, !srcloc !5793
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !5794, !srcloc !5795
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #23, !dbg !5796, !srcloc !5797
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !5798, !srcloc !5799
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !5800, !srcloc !5801
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !5802, !srcloc !5803
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !5804, !srcloc !5805
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !5806, !srcloc !5807
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_NAME\0A\09.equ\09CONFIG_THREAD_NAME,1\0A\09.type\09CONFIG_THREAD_NAME,%object", ""() #23, !dbg !5808, !srcloc !5809
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_MAX_NAME_LEN\0A\09.equ\09CONFIG_THREAD_MAX_NAME_LEN,32\0A\09.type\09CONFIG_THREAD_MAX_NAME_LEN,%object", ""() #23, !dbg !5810, !srcloc !5811
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !5812, !srcloc !5813
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !5814, !srcloc !5815
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !5816, !srcloc !5817
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !5818, !srcloc !5819
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !5820, !srcloc !5821
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !5822, !srcloc !5823
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !5824, !srcloc !5825
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !5826, !srcloc !5827
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !5828, !srcloc !5829
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !5830, !srcloc !5831
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !5832, !srcloc !5833
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !5834, !srcloc !5835
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !5836, !srcloc !5837
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !5838, !srcloc !5839
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !5840, !srcloc !5841
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !5842, !srcloc !5843
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !5844, !srcloc !5845
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !5846, !srcloc !5847
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !5848, !srcloc !5849
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !5850, !srcloc !5851
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5852, !srcloc !5853
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !5854, !srcloc !5855
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !5856, !srcloc !5857
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !5858, !srcloc !5859
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !5860, !srcloc !5861
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !5862, !srcloc !5863
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #23, !dbg !5864, !srcloc !5865
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #23, !dbg !5866, !srcloc !5867
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !5868, !srcloc !5869
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !5870, !srcloc !5871
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !5872, !srcloc !5873
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !5874, !srcloc !5875
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #23, !dbg !5876, !srcloc !5877
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #23, !dbg !5878, !srcloc !5879
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !5880, !srcloc !5881
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #23, !dbg !5882, !srcloc !5883
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !5884, !srcloc !5885
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5886, !srcloc !5887
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #23, !dbg !5888, !srcloc !5889
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #23, !dbg !5890, !srcloc !5891
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #23, !dbg !5892, !srcloc !5893
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #23, !dbg !5894, !srcloc !5895
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #23, !dbg !5896, !srcloc !5897
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #23, !dbg !5898, !srcloc !5899
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #23, !dbg !5900, !srcloc !5901
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #23, !dbg !5902, !srcloc !5903
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #23, !dbg !5904, !srcloc !5905
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #23, !dbg !5906, !srcloc !5907
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5908, !srcloc !5909
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #23, !dbg !5910, !srcloc !5911
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5912, !srcloc !5913
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !5914, !srcloc !5915
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !5916, !srcloc !5917
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !5918, !srcloc !5919
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !5920, !srcloc !5921
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #23, !dbg !5922, !srcloc !5923
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #23, !dbg !5924, !srcloc !5925
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #23, !dbg !5926, !srcloc !5927
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #23, !dbg !5928, !srcloc !5929
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #23, !dbg !5930, !srcloc !5931
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5932, !srcloc !5933
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #23, !dbg !5934, !srcloc !5935
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,12000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #23, !dbg !5936, !srcloc !5937
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #23, !dbg !5938, !srcloc !5939
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #23, !dbg !5940, !srcloc !5941
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5942, !srcloc !5943
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #23, !dbg !5944, !srcloc !5945
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #23, !dbg !5946, !srcloc !5947
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #23, !dbg !5948, !srcloc !5949
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5950, !srcloc !5951
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #23, !dbg !5952, !srcloc !5953
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !5954, !srcloc !5955
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !5956, !srcloc !5957
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !5958, !srcloc !5959
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !5960, !srcloc !5961
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !5962, !srcloc !5963
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !5964, !srcloc !5965
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !5966, !srcloc !5967
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !5968, !srcloc !5969
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !5970, !srcloc !5971
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !5972, !srcloc !5973
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !5974, !srcloc !5975
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !5976, !srcloc !5977
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !5978, !srcloc !5979
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !5980, !srcloc !5981
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !5982, !srcloc !5983
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !5984, !srcloc !5985
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !5986, !srcloc !5987
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #23, !dbg !5988, !srcloc !5989
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #23, !dbg !5990, !srcloc !5991
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !5992, !srcloc !5993
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !5994, !srcloc !5995
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !5996, !srcloc !5997
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !5998, !srcloc !5999
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !6000, !srcloc !6001
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !6002, !srcloc !6003
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT\0A\09.equ\09CONFIG_ASSERT,1\0A\09.type\09CONFIG_ASSERT,%object", ""() #23, !dbg !6004, !srcloc !6005
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_LEVEL\0A\09.equ\09CONFIG_ASSERT_LEVEL,2\0A\09.type\09CONFIG_ASSERT_LEVEL,%object", ""() #23, !dbg !6006, !srcloc !6007
  tail call void asm sideeffect ".globl\09CONFIG_SPIN_VALIDATE\0A\09.equ\09CONFIG_SPIN_VALIDATE,1\0A\09.type\09CONFIG_SPIN_VALIDATE,%object", ""() #23, !dbg !6008, !srcloc !6009
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !6010, !srcloc !6011
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #23, !dbg !6012, !srcloc !6013
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #23, !dbg !6014, !srcloc !6015
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_MINIMAL\0A\09.equ\09CONFIG_LOG_DEFAULT_MINIMAL,1\0A\09.type\09CONFIG_LOG_DEFAULT_MINIMAL,%object", ""() #23, !dbg !6016, !srcloc !6017
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #23, !dbg !6018, !srcloc !6019
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #23, !dbg !6020, !srcloc !6021
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #23, !dbg !6022, !srcloc !6023
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #23, !dbg !6024, !srcloc !6025
  tail call void asm sideeffect ".globl\09CONFIG_TEST\0A\09.equ\09CONFIG_TEST,1\0A\09.type\09CONFIG_TEST,%object", ""() #23, !dbg !6026, !srcloc !6027
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !6028, !srcloc !6029
  tail call void asm sideeffect ".globl\09CONFIG_TEST_LOGGING_DEFAULTS\0A\09.equ\09CONFIG_TEST_LOGGING_DEFAULTS,1\0A\09.type\09CONFIG_TEST_LOGGING_DEFAULTS,%object", ""() #23, !dbg !6030, !srcloc !6031
  tail call void asm sideeffect ".globl\09CONFIG_TEST_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_TEST_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_TEST_HW_STACK_PROTECTION,%object", ""() #23, !dbg !6032, !srcloc !6033
  tail call void asm sideeffect ".globl\09CONFIG_TEST_ARM_CORTEX_M\0A\09.equ\09CONFIG_TEST_ARM_CORTEX_M,1\0A\09.type\09CONFIG_TEST_ARM_CORTEX_M,%object", ""() #23, !dbg !6034, !srcloc !6035
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !6036, !srcloc !6037
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !6038, !srcloc !6039
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !6040, !srcloc !6041
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !6042, !srcloc !6043
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !6044, !srcloc !6045
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !6046, !srcloc !6047
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !6048, !srcloc !6049
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !6050, !srcloc !6051
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !6052, !srcloc !6053
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !6054, !srcloc !6055
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !6056, !srcloc !6057
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !6058, !srcloc !6059
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !6060, !srcloc !6061
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !6062, !srcloc !6063
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !6064, !srcloc !6065
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !6066, !srcloc !6067
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !6068, !srcloc !6069
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !6070, !srcloc !6071
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !6072, !srcloc !6073
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !6074, !srcloc !6075
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !6076, !srcloc !6077
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !6078, !srcloc !6079
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !6080, !srcloc !6081
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !6082, !srcloc !6083
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !6084, !srcloc !6085
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !6086, !srcloc !6087
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !6088, !srcloc !6089
  ret void, !dbg !6090
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6091 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6093, metadata !DIExpression()), !dbg !6095
  tail call fastcc void @LL_FLASH_EnableInstCache() #24, !dbg !6096
  tail call fastcc void @LL_FLASH_EnableDataCache() #24, !dbg !6097
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !6098, !srcloc !6107
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !6098
  call void @llvm.dbg.value(metadata i32 %3, metadata !6104, metadata !DIExpression()) #23, !dbg !6108
  call void @llvm.dbg.value(metadata i32 undef, metadata !6105, metadata !DIExpression()) #23, !dbg !6108
  call void @llvm.dbg.value(metadata i32 %3, metadata !6094, metadata !DIExpression()), !dbg !6095
  call void @llvm.dbg.value(metadata i32 %3, metadata !6109, metadata !DIExpression()) #23, !dbg !6114
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !6116, !srcloc !6117
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !6118
  ret i32 0, !dbg !6119
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #14 !dbg !6120 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6122
  %2 = or i32 %1, 512, !dbg !6122
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6122
  ret void, !dbg !6123
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #14 !dbg !6124 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6125
  %2 = or i32 %1, 1024, !dbg !6125
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6125
  ret void, !dbg !6126
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #3 !dbg !6127 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6129, metadata !DIExpression()), !dbg !6130
  ret i32 0, !dbg !6131
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !6132 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6135, metadata !DIExpression()), !dbg !6143
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !6144
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6144
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !6136, metadata !DIExpression()), !dbg !6145
  call void @llvm.va_start(i8* nonnull %3), !dbg !6146
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !6147
  %5 = load i32, i32* %4, align 4, !dbg !6147
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !6147
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !6147
  call void @llvm.va_end(i8* nonnull %3), !dbg !6148
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6149
  ret void, !dbg !6149
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !6150 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !6155, metadata !DIExpression()), !dbg !6156
  call void @llvm.dbg.value(metadata i8* %0, metadata !6154, metadata !DIExpression()), !dbg !6156
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #25, !dbg !6157
  ret void, !dbg !6158
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6159 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6163, metadata !DIExpression()), !dbg !6167
  call void @llvm.dbg.value(metadata i8* %1, metadata !6164, metadata !DIExpression()), !dbg !6167
  call void @llvm.dbg.value(metadata i32 %2, metadata !6165, metadata !DIExpression()), !dbg !6167
  call void @llvm.dbg.value(metadata i8* %1, metadata !6166, metadata !DIExpression()), !dbg !6167
  %4 = icmp eq i32 %2, 0, !dbg !6168
  br i1 %4, label %14, label %5, !dbg !6169

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) #24, !dbg !6167
  %7 = zext i8 %6 to i32
  br label %8, !dbg !6169

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !6166, metadata !DIExpression()), !dbg !6167
  call void @llvm.dbg.value(metadata i32 %10, metadata !6165, metadata !DIExpression()), !dbg !6167
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25, i32 0, i32 0), i32 noundef %7) #25, !dbg !6170
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #24, !dbg !6172
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !6173
  call void @llvm.dbg.value(metadata i32 %11, metadata !6165, metadata !DIExpression()), !dbg !6167
  call void @llvm.dbg.value(metadata i8* %12, metadata !6166, metadata !DIExpression()), !dbg !6167
  br i1 %13, label %14, label %8, !dbg !6173, !llvm.loop !6174

14:                                               ; preds = %8, %3
  ret void, !dbg !6176
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #3 !dbg !6177 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6182, metadata !DIExpression()), !dbg !6183
  %2 = add i32 %0, -1, !dbg !6184
  %3 = icmp ult i32 %2, 4, !dbg !6184
  %4 = shl i32 %2, 3, !dbg !6184
  %5 = lshr i32 1145657157, %4, !dbg !6184
  %6 = trunc i32 %5 to i8, !dbg !6184
  %7 = select i1 %3, i8 %6, i8 63, !dbg !6184
  ret i8 %7, !dbg !6185
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !6186 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6190, metadata !DIExpression()), !dbg !6201
  call void @llvm.dbg.value(metadata i32 %1, metadata !6191, metadata !DIExpression()), !dbg !6201
  call void @llvm.dbg.value(metadata i32 0, metadata !6192, metadata !DIExpression()), !dbg !6202
  br label %4, !dbg !6203

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.26, i32 0, i32 0)) #25, !dbg !6204
  call void @llvm.dbg.value(metadata i32 0, metadata !6194, metadata !DIExpression()), !dbg !6205
  br label %16, !dbg !6206

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !6192, metadata !DIExpression()), !dbg !6202
  %6 = icmp ult i32 %5, %1, !dbg !6207
  br i1 %6, label %7, label %11, !dbg !6211

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !6212
  %9 = load i8, i8* %8, align 1, !dbg !6212
  %10 = zext i8 %9 to i32, !dbg !6214
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.27, i32 0, i32 0), i32 noundef %10) #25, !dbg !6215
  br label %12, !dbg !6216

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.28, i32 0, i32 0)) #25, !dbg !6217
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !6219
  call void @llvm.dbg.value(metadata i32 %13, metadata !6192, metadata !DIExpression()), !dbg !6202
  %14 = icmp eq i32 %13, 8, !dbg !6220
  br i1 %14, label %3, label %4, !dbg !6203, !llvm.loop !6221

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.29, i32 0, i32 0)) #25, !dbg !6223
  ret void, !dbg !6224

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !6194, metadata !DIExpression()), !dbg !6205
  %18 = icmp ult i32 %17, %1, !dbg !6225
  br i1 %18, label %19, label %26, !dbg !6226

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !6227
  %21 = load i8, i8* %20, align 1, !dbg !6227
  call void @llvm.dbg.value(metadata i8 %21, metadata !6196, metadata !DIExpression()), !dbg !6228
  %22 = zext i8 %21 to i32, !dbg !6229
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #24, !dbg !6230
  %24 = icmp eq i32 %23, 0, !dbg !6231
  %25 = select i1 %24, i32 46, i32 %22, !dbg !6230
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.30, i32 0, i32 0), i32 noundef %25) #25, !dbg !6232
  br label %27, !dbg !6233

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.31, i32 0, i32 0)) #25, !dbg !6234
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !6236
  call void @llvm.dbg.value(metadata i32 %28, metadata !6194, metadata !DIExpression()), !dbg !6205
  %29 = icmp eq i32 %28, 8, !dbg !6237
  br i1 %29, label %15, label %16, !dbg !6206, !llvm.loop !6238
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #3 !dbg !6240 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6242, metadata !DIExpression()), !dbg !6243
  %2 = add i32 %0, -32, !dbg !6244
  %3 = icmp ult i32 %2, 95, !dbg !6244
  %4 = zext i1 %3 to i32, !dbg !6244
  ret i32 %4, !dbg !6245
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6246 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6295, metadata !DIExpression()), !dbg !6297
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6296, metadata !DIExpression()), !dbg !6297
  %3 = icmp eq %struct.__esf* %1, null, !dbg !6298
  br i1 %3, label %5, label %4, !dbg !6300

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #24, !dbg !6301
  br label %5, !dbg !6303

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !6304
  ret void, !dbg !6305
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6306 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6310, metadata !DIExpression()), !dbg !6311
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6312
  %3 = load i32, i32* %2, align 4, !dbg !6312
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !6312
  %5 = load i32, i32* %4, align 4, !dbg !6312
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !6312
  %7 = load i32, i32* %6, align 4, !dbg !6312
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.32, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #25, !dbg !6312
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !6317
  %9 = load i32, i32* %8, align 4, !dbg !6317
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !6317
  %11 = load i32, i32* %10, align 4, !dbg !6317
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !6317
  %13 = load i32, i32* %12, align 4, !dbg !6317
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.33, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #25, !dbg !6317
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !6322
  %15 = load i32, i32* %14, align 4, !dbg !6322
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.34, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #25, !dbg !6322
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6327
  %17 = load i32, i32* %16, align 4, !dbg !6327
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.35, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !6327
  ret void, !dbg !6332
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6333 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6350, metadata !DIExpression()), !dbg !6353
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6351, metadata !DIExpression()), !dbg !6353
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6354
  %4 = load i32, i32* %3, align 4, !dbg !6354
  call void @llvm.dbg.value(metadata i32 %4, metadata !6352, metadata !DIExpression()), !dbg !6353
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #24, !dbg !6355
  ret void, !dbg !6356
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !6357 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6361, metadata !DIExpression()), !dbg !6364
  call void @llvm.dbg.value(metadata i8* %0, metadata !6362, metadata !DIExpression()), !dbg !6364
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6365
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !6365
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6363, metadata !DIExpression()), !dbg !6366
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6366
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6367
  %5 = bitcast i8* %4 to i32*, !dbg !6367
  %6 = load i32, i32* %5, align 4, !dbg !6367
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6368
  store i32 %6, i32* %7, align 4, !dbg !6369
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #24, !dbg !6370
  unreachable, !dbg !6371
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6372 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6375, metadata !DIExpression()), !dbg !6376
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #24, !dbg !6377
  ret void, !dbg !6378
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6379 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6383, metadata !DIExpression()), !dbg !6384
  %2 = icmp sgt i32 %0, -1, !dbg !6385
  br i1 %2, label %3, label %8, !dbg !6387

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6388, !srcloc !6390
  %4 = and i32 %0, 31, !dbg !6391
  %5 = shl nuw i32 1, %4, !dbg !6392
  %6 = lshr i32 %0, 5, !dbg !6393
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6394
  store volatile i32 %5, i32* %7, align 4, !dbg !6395
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6396, !srcloc !6397
  br label %8, !dbg !6398

8:                                                ; preds = %3, %1
  ret void, !dbg !6399
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6400 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6402, metadata !DIExpression()), !dbg !6403
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #24, !dbg !6404
  ret void, !dbg !6405
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6406 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6408, metadata !DIExpression()), !dbg !6409
  %2 = icmp sgt i32 %0, -1, !dbg !6410
  br i1 %2, label %3, label %8, !dbg !6412

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6413
  %5 = shl nuw i32 1, %4, !dbg !6415
  %6 = lshr i32 %0, 5, !dbg !6416
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6417
  store volatile i32 %5, i32* %7, align 4, !dbg !6418
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6419, !srcloc !6423
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6424, !srcloc !6427
  br label %8, !dbg !6428

8:                                                ; preds = %3, %1
  ret void, !dbg !6429
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #15 !dbg !6430 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6434, metadata !DIExpression()), !dbg !6435
  %2 = lshr i32 %0, 5, !dbg !6436
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6437
  %4 = load volatile i32, i32* %3, align 4, !dbg !6437
  %5 = and i32 %0, 31, !dbg !6438
  %6 = shl nuw i32 1, %5, !dbg !6438
  %7 = and i32 %4, %6, !dbg !6439
  ret i32 %7, !dbg !6440
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6441 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6445, metadata !DIExpression()), !dbg !6448
  call void @llvm.dbg.value(metadata i32 %1, metadata !6446, metadata !DIExpression()), !dbg !6448
  call void @llvm.dbg.value(metadata i32 %2, metadata !6447, metadata !DIExpression()), !dbg !6448
  %4 = add i32 %1, 1, !dbg !6449
  call void @llvm.dbg.value(metadata i32 %4, metadata !6446, metadata !DIExpression()), !dbg !6448
  %5 = icmp ult i32 %4, 16, !dbg !6452
  br i1 %5, label %7, label %6, !dbg !6455

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.36, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.37, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.38, i32 0, i32 0), i32 noundef 94) #25, !dbg !6456
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3.39, i32 0, i32 0), i32 noundef %1, i32 noundef %0, i32 noundef 15) #25, !dbg !6456
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.38, i32 0, i32 0), i32 noundef 94) #25, !dbg !6456
  unreachable, !dbg !6456

7:                                                ; preds = %3
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #24, !dbg !6458
  ret void, !dbg !6459
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !6460 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6464, metadata !DIExpression()), !dbg !6466
  call void @llvm.dbg.value(metadata i32 %1, metadata !6465, metadata !DIExpression()), !dbg !6466
  %3 = trunc i32 %1 to i8, !dbg !6467
  %4 = shl i8 %3, 4, !dbg !6467
  %5 = and i32 %0, 15, !dbg !6469
  %6 = add nsw i32 %5, -4, !dbg !6469
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6469
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6469
  %9 = icmp slt i32 %0, 0, !dbg !6469
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6469
  store volatile i8 %4, i8* %10, align 1, !dbg !6467
  ret void, !dbg !6470
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6471 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6473, metadata !DIExpression()), !dbg !6474
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #25, !dbg !6475
  ret void, !dbg !6476
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6477 {
  tail call void @z_SysNmiOnReset() #25, !dbg !6479
  tail call void @z_arm_int_exit() #25, !dbg !6480
  ret void, !dbg !6481
}

; Function Attrs: optsize
declare !dbg !6482 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6483 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #10 !dbg !6485 {
  tail call fastcc void @relocate_vector_table() #24, !dbg !6487
  tail call fastcc void @z_arm_floating_point_init() #24, !dbg !6488
  tail call void @z_bss_zero() #25, !dbg !6489
  tail call void @z_data_copy() #25, !dbg !6490
  tail call void @z_arm_interrupt_init() #25, !dbg !6491
  tail call void @z_cstart() #27, !dbg !6492
  unreachable, !dbg !6492
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6493 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6494
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6495, !srcloc !6498
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6499, !srcloc !6502
  ret void, !dbg !6503
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6504 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6505
  %2 = and i32 %1, -15728641, !dbg !6505
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6505
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #23, !dbg !6506, !srcloc !6513
  call void @llvm.dbg.value(metadata i32 %3, metadata !6511, metadata !DIExpression()) #23, !dbg !6514
  %4 = and i32 %3, -5, !dbg !6515
  call void @llvm.dbg.value(metadata i32 %4, metadata !6516, metadata !DIExpression()) #23, !dbg !6521
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #23, !dbg !6523, !srcloc !6524
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6525, !srcloc !6502
  ret void, !dbg !6527
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6528 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6531, metadata !DIExpression()), !dbg !6532
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6533
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 0, !dbg !6534
  store i32 %0, i32* %3, align 4, !dbg !6535
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6536
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 1, !dbg !6537
  store i32 %4, i32* %5, align 4, !dbg !6538
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6539
  %7 = or i32 %6, 268435456, !dbg !6539
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6539
  call void @llvm.dbg.value(metadata i32 0, metadata !6540, metadata !DIExpression()) #23, !dbg !6543
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6545, !srcloc !6546
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6547
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 8, i32 1, !dbg !6548
  %10 = load i32, i32* %9, align 4, !dbg !6548
  ret i32 %10, !dbg !6549
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #7 !dbg !6550 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6663, metadata !DIExpression()), !dbg !6671
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6664, metadata !DIExpression()), !dbg !6671
  call void @llvm.dbg.value(metadata i8* %2, metadata !6665, metadata !DIExpression()), !dbg !6671
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6666, metadata !DIExpression()), !dbg !6671
  call void @llvm.dbg.value(metadata i8* %4, metadata !6667, metadata !DIExpression()), !dbg !6671
  call void @llvm.dbg.value(metadata i8* %5, metadata !6668, metadata !DIExpression()), !dbg !6671
  call void @llvm.dbg.value(metadata i8* %6, metadata !6669, metadata !DIExpression()), !dbg !6671
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6672
  call void @llvm.dbg.value(metadata i8* %8, metadata !6670, metadata !DIExpression()), !dbg !6671
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6673
  %10 = bitcast i8* %9 to i32*, !dbg !6673
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6674
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6675
  %12 = bitcast i8* %8 to i32*, !dbg !6676
  store i32 %11, i32* %12, align 4, !dbg !6677
  %13 = ptrtoint i8* %4 to i32, !dbg !6678
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6679
  %15 = bitcast i8* %14 to i32*, !dbg !6679
  store i32 %13, i32* %15, align 4, !dbg !6680
  %16 = ptrtoint i8* %5 to i32, !dbg !6681
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6682
  %18 = bitcast i8* %17 to i32*, !dbg !6682
  store i32 %16, i32* %18, align 4, !dbg !6683
  %19 = ptrtoint i8* %6 to i32, !dbg !6684
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6685
  %21 = bitcast i8* %20 to i32*, !dbg !6685
  store i32 %19, i32* %21, align 4, !dbg !6686
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6687
  %23 = bitcast i8* %22 to i32*, !dbg !6687
  store i32 16777216, i32* %23, align 4, !dbg !6688
  %24 = ptrtoint i8* %8 to i32, !dbg !6689
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6690
  store i32 %24, i32* %25, align 8, !dbg !6691
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 8, i32 0, !dbg !6692
  store i32 0, i32* %26, align 4, !dbg !6693
  ret void, !dbg !6694
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #8 !dbg !6695 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6700, metadata !DIExpression()), !dbg !6706
  call void @llvm.dbg.value(metadata i32 %1, metadata !6701, metadata !DIExpression()), !dbg !6706
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6707
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !6702, metadata !DIExpression()), !dbg !6706
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !6708
  br i1 %4, label %19, label %5, !dbg !6710

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !6705, metadata !DIExpression()), !dbg !6706
  %6 = icmp eq i32 %0, -22, !dbg !6711
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 6, i32 0, !dbg !6711
  %8 = load i32, i32* %7, align 4, !dbg !6711
  br i1 %6, label %16, label %9, !dbg !6713

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !6711
  %11 = icmp ule i32 %10, %0, !dbg !6711
  %12 = icmp ugt i32 %8, %0, !dbg !6711
  %13 = and i1 %12, %11, !dbg !6711
  %14 = icmp ugt i32 %8, %1, !dbg !6711
  %15 = and i1 %14, %13, !dbg !6711
  br i1 %15, label %18, label %19, !dbg !6711

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !6711
  br i1 %17, label %18, label %19, !dbg !6713

18:                                               ; preds = %9, %16
  br label %19, !dbg !6714

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !6706
  ret i32 %20, !dbg !6716
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #10 !dbg !6717 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6721, metadata !DIExpression()), !dbg !6724
  call void @llvm.dbg.value(metadata i8* %1, metadata !6722, metadata !DIExpression()), !dbg !6724
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6723, metadata !DIExpression()), !dbg !6724
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6725
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #25, !dbg !6726
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !6727, !srcloc !6728
  unreachable, !dbg !6729
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6730 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6748, metadata !DIExpression()), !dbg !6758
  call void @llvm.dbg.value(metadata i32 %1, metadata !6749, metadata !DIExpression()), !dbg !6758
  call void @llvm.dbg.value(metadata i32 %2, metadata !6750, metadata !DIExpression()), !dbg !6758
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6751, metadata !DIExpression()), !dbg !6758
  call void @llvm.dbg.value(metadata i32 0, metadata !6752, metadata !DIExpression()), !dbg !6758
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6759
  call void @llvm.dbg.value(metadata i32 %8, metadata !6753, metadata !DIExpression(DW_OP_constu, 511, DW_OP_and, DW_OP_stack_value)), !dbg !6758
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6760
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6760
  %9 = bitcast %struct.__esf* %7 to i8*, !dbg !6761
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6761
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6757, metadata !DIExpression()), !dbg !6762
  call void @llvm.dbg.value(metadata i32 0, metadata !6763, metadata !DIExpression()) #23, !dbg !6766
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6768, !srcloc !6769
  call void @llvm.dbg.value(metadata i8* %6, metadata !6755, metadata !DIExpression(DW_OP_deref)), !dbg !6758
  %10 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #24, !dbg !6770
  call void @llvm.dbg.value(metadata %struct.__esf* %10, metadata !6756, metadata !DIExpression()), !dbg !6758
  %11 = icmp eq %struct.__esf* %10, null, !dbg !6771
  br i1 %11, label %12, label %13, !dbg !6774

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.42, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.44, i32 0, i32 0), i32 noundef 1057) #25, !dbg !6775
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3.45, i32 0, i32 0)) #25, !dbg !6775
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.44, i32 0, i32 0), i32 noundef 1057) #25, !dbg !6775
  unreachable, !dbg !6775

13:                                               ; preds = %4
  %14 = and i32 %8, 511, !dbg !6777
  call void @llvm.dbg.value(metadata i32 %14, metadata !6753, metadata !DIExpression()), !dbg !6758
  call void @llvm.dbg.value(metadata i8* %5, metadata !6754, metadata !DIExpression(DW_OP_deref)), !dbg !6758
  %15 = call fastcc i32 @fault_handle(%struct.__esf* noundef nonnull %10, i32 noundef %14, i8* noundef nonnull %5) #24, !dbg !6778
  call void @llvm.dbg.value(metadata i32 %15, metadata !6752, metadata !DIExpression()), !dbg !6758
  %16 = load i8, i8* %5, align 1, !dbg !6779, !range !6781
  call void @llvm.dbg.value(metadata i8 %16, metadata !6754, metadata !DIExpression()), !dbg !6758
  %17 = icmp eq i8 %16, 0, !dbg !6779
  br i1 %17, label %18, label %35, !dbg !6782

18:                                               ; preds = %13
  %19 = bitcast %struct.__esf* %10 to i8*, !dbg !6783
  %20 = call i8* @memcpy(i8* noundef nonnull %9, i8* noundef nonnull %19, i32 noundef 32) #25, !dbg !6784
  %21 = load i8, i8* %6, align 1, !dbg !6785, !range !6781
  call void @llvm.dbg.value(metadata i8 %21, metadata !6755, metadata !DIExpression()), !dbg !6758
  %22 = icmp eq i8 %21, 0, !dbg !6785
  %23 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6787
  %24 = load i32, i32* %23, align 4, !dbg !6787
  br i1 %22, label %30, label %25, !dbg !6788

25:                                               ; preds = %18
  %26 = and i32 %24, 511, !dbg !6789
  %27 = icmp eq i32 %26, 0, !dbg !6792
  br i1 %27, label %28, label %34, !dbg !6793

28:                                               ; preds = %25
  %29 = or i32 %24, 511, !dbg !6794
  br label %32, !dbg !6796

30:                                               ; preds = %18
  %31 = and i32 %24, -512, !dbg !6797
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]
  store i32 %33, i32* %23, align 4, !dbg !6787
  br label %34, !dbg !6799

34:                                               ; preds = %32, %25
  call void @z_arm_fatal_error(i32 noundef %15, %struct.__esf* noundef nonnull %7) #25, !dbg !6799
  br label %35, !dbg !6800

35:                                               ; preds = %13, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6800
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6800
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6800
  ret void, !dbg !6800
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !6801 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6806, metadata !DIExpression()), !dbg !6812
  call void @llvm.dbg.value(metadata i32 %1, metadata !6807, metadata !DIExpression()), !dbg !6812
  call void @llvm.dbg.value(metadata i32 %2, metadata !6808, metadata !DIExpression()), !dbg !6812
  call void @llvm.dbg.value(metadata i8* %3, metadata !6809, metadata !DIExpression()), !dbg !6812
  call void @llvm.dbg.value(metadata i8 0, metadata !6810, metadata !DIExpression()), !dbg !6812
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6811, metadata !DIExpression()), !dbg !6812
  store i8 0, i8* %3, align 1, !dbg !6813
  %5 = icmp ugt i32 %2, -16777217, !dbg !6814
  br i1 %5, label %6, label %17, !dbg !6816

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !6817
  %8 = icmp eq i32 %7, 8, !dbg !6817
  br i1 %8, label %9, label %10, !dbg !6817

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4.58, i32 0, i32 0), i32 noundef 69) #25, !dbg !6819
  br label %17, !dbg !6825

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !6826
  %12 = icmp eq i32 %11, 0, !dbg !6826
  br i1 %12, label %13, label %14, !dbg !6827

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !6811, metadata !DIExpression()), !dbg !6812
  store i8 1, i8* %3, align 1, !dbg !6830
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !6812
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !6811, metadata !DIExpression()), !dbg !6812
  br label %17, !dbg !6833

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !6812
  ret %struct.__esf* %18, !dbg !6834
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6835 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6839, metadata !DIExpression()), !dbg !6843
  call void @llvm.dbg.value(metadata i32 %1, metadata !6840, metadata !DIExpression()), !dbg !6843
  call void @llvm.dbg.value(metadata i8* %2, metadata !6841, metadata !DIExpression()), !dbg !6843
  call void @llvm.dbg.value(metadata i32 0, metadata !6842, metadata !DIExpression()), !dbg !6843
  store i8 0, i8* %2, align 1, !dbg !6844
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !6845

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #24, !dbg !6846
  call void @llvm.dbg.value(metadata i32 %5, metadata !6842, metadata !DIExpression()), !dbg !6843
  br label %12, !dbg !6848

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6849
  call void @llvm.dbg.value(metadata i32 %7, metadata !6842, metadata !DIExpression()), !dbg !6843
  br label %12, !dbg !6850

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6851
  call void @llvm.dbg.value(metadata i32 0, metadata !6842, metadata !DIExpression()), !dbg !6843
  br label %12, !dbg !6852

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #24, !dbg !6853
  call void @llvm.dbg.value(metadata i32 0, metadata !6842, metadata !DIExpression()), !dbg !6843
  br label %12, !dbg !6854

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #24, !dbg !6855
  br label %12, !dbg !6856

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #24, !dbg !6857
  br label %12, !dbg !6858

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !6843
  call void @llvm.dbg.value(metadata i32 %13, metadata !6842, metadata !DIExpression()), !dbg !6843
  ret i32 %13, !dbg !6859
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6860 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6864, metadata !DIExpression()), !dbg !6867
  call void @llvm.dbg.value(metadata i8* %1, metadata !6865, metadata !DIExpression()), !dbg !6867
  call void @llvm.dbg.value(metadata i32 0, metadata !6866, metadata !DIExpression()), !dbg !6867
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.50, i32 0, i32 0), i32 noundef 69) #25, !dbg !6868
  store i8 0, i8* %1, align 1, !dbg !6873
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6874
  %4 = and i32 %3, 2, !dbg !6876
  %5 = icmp eq i32 %4, 0, !dbg !6877
  br i1 %5, label %7, label %6, !dbg !6878

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.51, i32 0, i32 0), i32 noundef 69) #25, !dbg !6879
  br label %38, !dbg !6885

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6886
  %9 = icmp sgt i32 %8, -1, !dbg !6888
  br i1 %9, label %11, label %10, !dbg !6889

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.52, i32 0, i32 0), i32 noundef 69) #25, !dbg !6890
  br label %38, !dbg !6896

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6897
  %13 = and i32 %12, 1073741824, !dbg !6899
  %14 = icmp eq i32 %13, 0, !dbg !6900
  br i1 %14, label %37, label %15, !dbg !6901

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.53, i32 0, i32 0), i32 noundef 69) #25, !dbg !6902
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #24, !dbg !6908
  br i1 %16, label %17, label %21, !dbg !6910

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6911
  %19 = load i32, i32* %18, align 4, !dbg !6911
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.54, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #25, !dbg !6911
  %20 = load i32, i32* %18, align 4, !dbg !6917
  call void @llvm.dbg.value(metadata i32 %20, metadata !6866, metadata !DIExpression()), !dbg !6867
  br label %38, !dbg !6918

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6919
  %23 = and i32 %22, 255, !dbg !6921
  %24 = icmp eq i32 %23, 0, !dbg !6922
  br i1 %24, label %27, label %25, !dbg !6923

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6924
  call void @llvm.dbg.value(metadata i32 %26, metadata !6866, metadata !DIExpression()), !dbg !6867
  br label %38, !dbg !6926

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6927
  %29 = and i32 %28, 65280, !dbg !6929
  %30 = icmp eq i32 %29, 0, !dbg !6930
  br i1 %30, label %32, label %31, !dbg !6931

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6932
  call void @llvm.dbg.value(metadata i32 0, metadata !6866, metadata !DIExpression()), !dbg !6867
  br label %38, !dbg !6934

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6935
  %34 = icmp ult i32 %33, 65536, !dbg !6937
  br i1 %34, label %36, label %35, !dbg !6938

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #24, !dbg !6939
  call void @llvm.dbg.value(metadata i32 0, metadata !6866, metadata !DIExpression()), !dbg !6867
  br label %38

36:                                               ; preds = %32
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.42, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.55, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.44, i32 0, i32 0), i32 noundef 755) #25, !dbg !6941
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.56, i32 0, i32 0)) #25, !dbg !6941
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.44, i32 0, i32 0), i32 noundef 755) #25, !dbg !6941
  unreachable, !dbg !6941

37:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.42, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.55, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.44, i32 0, i32 0), i32 noundef 760) #25, !dbg !6946
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12.57, i32 0, i32 0)) #25, !dbg !6946
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.44, i32 0, i32 0), i32 noundef 760) #25, !dbg !6946
  unreachable, !dbg !6946

38:                                               ; preds = %10, %17, %31, %35, %25, %6
  %39 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], !dbg !6867
  call void @llvm.dbg.value(metadata i32 %39, metadata !6866, metadata !DIExpression()), !dbg !6867
  ret i32 %39, !dbg !6951
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !6952 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6954, metadata !DIExpression()), !dbg !6967
  call void @llvm.dbg.value(metadata i32 %1, metadata !6955, metadata !DIExpression()), !dbg !6967
  call void @llvm.dbg.value(metadata i8* %2, metadata !6956, metadata !DIExpression()), !dbg !6967
  call void @llvm.dbg.value(metadata i32 0, metadata !6957, metadata !DIExpression()), !dbg !6967
  call void @llvm.dbg.value(metadata i32 -22, metadata !6958, metadata !DIExpression()), !dbg !6967
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i32 0, i32 0), i32 noundef 69) #25, !dbg !6968
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6973
  %5 = and i32 %4, 16, !dbg !6975
  %6 = icmp eq i32 %5, 0, !dbg !6976
  br i1 %6, label %8, label %7, !dbg !6977

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.14, i32 0, i32 0), i32 noundef 69) #25, !dbg !6978
  br label %8, !dbg !6984

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6985
  %10 = and i32 %9, 8, !dbg !6987
  %11 = icmp eq i32 %10, 0, !dbg !6988
  br i1 %11, label %13, label %12, !dbg !6989

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #25, !dbg !6990
  br label %13, !dbg !6996

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6997
  %15 = and i32 %14, 2, !dbg !6998
  %16 = icmp eq i32 %15, 0, !dbg !6999
  br i1 %16, label %27, label %17, !dbg !7000

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16.49, i32 0, i32 0), i32 noundef 69) #25, !dbg !7001
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !7006
  call void @llvm.dbg.value(metadata i32 %18, metadata !6959, metadata !DIExpression()), !dbg !7007
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7008
  %20 = and i32 %19, 128, !dbg !7010
  %21 = icmp eq i32 %20, 0, !dbg !7011
  br i1 %21, label %27, label %22, !dbg !7012

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !6958, metadata !DIExpression()), !dbg !6967
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #25, !dbg !7013
  %23 = icmp eq i32 %1, 0, !dbg !7019
  br i1 %23, label %27, label %24, !dbg !7021

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7022
  %26 = and i32 %25, -129, !dbg !7022
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7022
  br label %27, !dbg !7024

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !6967
  call void @llvm.dbg.value(metadata i32 %28, metadata !6958, metadata !DIExpression()), !dbg !6967
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7025
  %30 = and i32 %29, 1, !dbg !7027
  %31 = icmp eq i32 %30, 0, !dbg !7028
  br i1 %31, label %33, label %32, !dbg !7029

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i32 0, i32 0), i32 noundef 69) #25, !dbg !7030
  br label %33, !dbg !7036

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7037
  %35 = and i32 %34, 32, !dbg !7039
  %36 = icmp eq i32 %35, 0, !dbg !7040
  br i1 %36, label %38, label %37, !dbg !7041

37:                                               ; preds = %33
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), i32 noundef 69) #25, !dbg !7042
  br label %38, !dbg !7048

38:                                               ; preds = %37, %33
  %39 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7049
  %40 = and i32 %39, 16, !dbg !7050
  %41 = icmp eq i32 %40, 0, !dbg !7050
  br i1 %41, label %42, label %46, !dbg !7051

42:                                               ; preds = %38
  %43 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7052
  %44 = and i32 %43, 2, !dbg !7053
  %45 = icmp eq i32 %44, 0, !dbg !7053
  br i1 %45, label %60, label %46, !dbg !7054

46:                                               ; preds = %42, %38
  %47 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7055
  %48 = and i32 %47, 2048, !dbg !7056
  %49 = icmp eq i32 %48, 0, !dbg !7056
  br i1 %49, label %60, label %50, !dbg !7057

50:                                               ; preds = %46
  %51 = ptrtoint %struct.__esf* %0 to i32, !dbg !7058
  %52 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %51) #25, !dbg !7059
  call void @llvm.dbg.value(metadata i32 %52, metadata !6962, metadata !DIExpression()), !dbg !7060
  %53 = icmp eq i32 %52, 0, !dbg !7061
  br i1 %53, label %55, label %54, !dbg !7063

54:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %52, metadata !7064, metadata !DIExpression()) #23, !dbg !7067
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %52) #23, !dbg !7070, !srcloc !7071
  call void @llvm.dbg.value(metadata i32 2, metadata !6957, metadata !DIExpression()), !dbg !6967
  br label %60, !dbg !7072

55:                                               ; preds = %50
  %56 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7073
  %57 = and i32 %56, 16, !dbg !7073
  %58 = icmp eq i32 %57, 0, !dbg !7073
  br i1 %58, label %60, label %59, !dbg !7077

59:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.42, i32 0, i32 0), i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.20, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.44, i32 0, i32 0), i32 noundef 343) #25, !dbg !7078
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.21, i32 0, i32 0)) #25, !dbg !7078
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.44, i32 0, i32 0), i32 noundef 343) #25, !dbg !7078
  unreachable, !dbg !7078

60:                                               ; preds = %54, %55, %46, %42
  %61 = phi i32 [ 0, %46 ], [ 0, %42 ], [ 2, %54 ], [ 0, %55 ], !dbg !6967
  call void @llvm.dbg.value(metadata i32 %61, metadata !6957, metadata !DIExpression()), !dbg !6967
  %62 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7080
  %63 = and i32 %62, 32, !dbg !7082
  %64 = icmp eq i32 %63, 0, !dbg !7083
  br i1 %64, label %68, label %65, !dbg !7084

65:                                               ; preds = %60
  %66 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7085
  %67 = and i32 %66, -8193, !dbg !7085
  store volatile i32 %67, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7085
  br label %68, !dbg !7087

68:                                               ; preds = %65, %60
  %69 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7088
  %70 = or i32 %69, 255, !dbg !7088
  store volatile i32 %70, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7088
  store i8 0, i8* %2, align 1, !dbg !7089
  ret i32 %61, !dbg !7090
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7091 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7095, metadata !DIExpression()), !dbg !7102
  call void @llvm.dbg.value(metadata i32 %0, metadata !7096, metadata !DIExpression()), !dbg !7102
  call void @llvm.dbg.value(metadata i8* %1, metadata !7097, metadata !DIExpression()), !dbg !7102
  call void @llvm.dbg.value(metadata i32 0, metadata !7098, metadata !DIExpression()), !dbg !7102
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i32 0, i32 0), i32 noundef 69) #25, !dbg !7103
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7108
  %4 = and i32 %3, 4096, !dbg !7110
  %5 = icmp eq i32 %4, 0, !dbg !7110
  br i1 %5, label %7, label %6, !dbg !7111

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23, i32 0, i32 0), i32 noundef 69) #25, !dbg !7112
  br label %7, !dbg !7118

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7119
  %9 = and i32 %8, 2048, !dbg !7121
  %10 = icmp eq i32 %9, 0, !dbg !7121
  br i1 %10, label %12, label %11, !dbg !7122

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #25, !dbg !7123
  br label %12, !dbg !7129

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7130
  %14 = and i32 %13, 512, !dbg !7131
  %15 = icmp eq i32 %14, 0, !dbg !7131
  br i1 %15, label %26, label %16, !dbg !7132

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69) #25, !dbg !7133
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !7138
  call void @llvm.dbg.value(metadata i32 %17, metadata !7099, metadata !DIExpression()), !dbg !7139
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7140
  %19 = and i32 %18, 32768, !dbg !7142
  %20 = icmp eq i32 %19, 0, !dbg !7143
  br i1 %20, label %26, label %21, !dbg !7144

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25.48, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !7145
  %22 = icmp eq i32 %0, 0, !dbg !7151
  br i1 %22, label %26, label %23, !dbg !7153

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7154
  %25 = and i32 %24, -32769, !dbg !7154
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7154
  br label %26, !dbg !7156

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7157
  %28 = and i32 %27, 1024, !dbg !7159
  %29 = icmp eq i32 %28, 0, !dbg !7159
  br i1 %29, label %31, label %30, !dbg !7160

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26, i32 0, i32 0), i32 noundef 69) #25, !dbg !7161
  br label %31, !dbg !7167

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7168
  %33 = and i32 %32, 256, !dbg !7170
  %34 = icmp eq i32 %33, 0, !dbg !7171
  br i1 %34, label %35, label %39, !dbg !7172

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7173
  %37 = and i32 %36, 8192, !dbg !7175
  %38 = icmp eq i32 %37, 0, !dbg !7175
  br i1 %38, label %41, label %39, !dbg !7176

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.27, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #25, !dbg !7177
  br label %41, !dbg !7178

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7178
  %43 = or i32 %42, 65280, !dbg !7178
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7178
  store i8 0, i8* %1, align 1, !dbg !7179
  ret void, !dbg !7180
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !7181 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7187, metadata !DIExpression()), !dbg !7189
  call void @llvm.dbg.value(metadata i32 0, metadata !7188, metadata !DIExpression()), !dbg !7189
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i32 0, i32 0), i32 noundef 69) #25, !dbg !7190
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7195
  %2 = and i32 %1, 33554432, !dbg !7197
  %3 = icmp eq i32 %2, 0, !dbg !7198
  br i1 %3, label %5, label %4, !dbg !7199

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.29, i32 0, i32 0), i32 noundef 69) #25, !dbg !7200
  br label %5, !dbg !7206

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7207
  %7 = and i32 %6, 16777216, !dbg !7209
  %8 = icmp eq i32 %7, 0, !dbg !7210
  br i1 %8, label %10, label %9, !dbg !7211

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30, i32 0, i32 0), i32 noundef 69) #25, !dbg !7212
  br label %10, !dbg !7218

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7219
  %12 = and i32 %11, 524288, !dbg !7221
  %13 = icmp eq i32 %12, 0, !dbg !7222
  br i1 %13, label %15, label %14, !dbg !7223

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.31, i32 0, i32 0), i32 noundef 69) #25, !dbg !7224
  br label %15, !dbg !7230

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7231
  %17 = and i32 %16, 262144, !dbg !7233
  %18 = icmp eq i32 %17, 0, !dbg !7234
  br i1 %18, label %20, label %19, !dbg !7235

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.32.47, i32 0, i32 0), i32 noundef 69) #25, !dbg !7236
  br label %20, !dbg !7242

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7243
  %22 = and i32 %21, 131072, !dbg !7245
  %23 = icmp eq i32 %22, 0, !dbg !7246
  br i1 %23, label %25, label %24, !dbg !7247

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.33, i32 0, i32 0), i32 noundef 69) #25, !dbg !7248
  br label %25, !dbg !7254

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7255
  %27 = and i32 %26, 65536, !dbg !7257
  %28 = icmp eq i32 %27, 0, !dbg !7258
  br i1 %28, label %30, label %29, !dbg !7259

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.34, i32 0, i32 0), i32 noundef 69) #25, !dbg !7260
  br label %30, !dbg !7266

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7267
  %32 = or i32 %31, -65536, !dbg !7267
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7267
  ret void, !dbg !7268
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !7269 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7273, metadata !DIExpression()), !dbg !7275
  call void @llvm.dbg.value(metadata i8* %0, metadata !7274, metadata !DIExpression()), !dbg !7275
  store i8 0, i8* %0, align 1, !dbg !7276
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.35, i32 0, i32 0), i32 noundef 69) #25, !dbg !7277
  ret void, !dbg !7282
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !7283 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7287, metadata !DIExpression()), !dbg !7289
  call void @llvm.dbg.value(metadata i32 %0, metadata !7288, metadata !DIExpression()), !dbg !7289
  %2 = icmp slt i32 %0, 16, !dbg !7290
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.38, i32 0, i32 0), !dbg !7290
  %4 = add nsw i32 %0, -16, !dbg !7290
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.36.46, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #25, !dbg !7290
  ret void, !dbg !7295
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7296 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7300, metadata !DIExpression()), !dbg !7303
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7304
  %3 = load i32, i32* %2, align 4, !dbg !7304
  %4 = inttoptr i32 %3 to i16*, !dbg !7305
  call void @llvm.dbg.value(metadata i16* %4, metadata !7301, metadata !DIExpression()), !dbg !7303
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7306
  %6 = or i32 %5, 256, !dbg !7306
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7306
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7307, !srcloc !7310
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7311, !srcloc !7314
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !7315
  %8 = load i16, i16* %7, align 2, !dbg !7316
  call void @llvm.dbg.value(metadata i16 %8, metadata !7302, metadata !DIExpression()), !dbg !7303
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7317
  %10 = and i32 %9, -257, !dbg !7317
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7317
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7318, !srcloc !7310
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7320, !srcloc !7314
  %11 = icmp eq i16 %8, -8446, !dbg !7322
  ret i1 %11, !dbg !7324
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #14 !dbg !7325 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7326
  %2 = or i32 %1, 16, !dbg !7326
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7326
  ret void, !dbg !7327
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #14 !dbg !7328 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7331, metadata !DIExpression()), !dbg !7332
  br label %1, !dbg !7333

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7331, metadata !DIExpression()), !dbg !7332
  tail call fastcc void @__NVIC_SetPriority.61(i32 noundef %2) #24, !dbg !7335
  %3 = add nuw nsw i32 %2, 1, !dbg !7338
  call void @llvm.dbg.value(metadata i32 %3, metadata !7331, metadata !DIExpression()), !dbg !7332
  %4 = icmp eq i32 %3, 82, !dbg !7339
  br i1 %4, label %5, label %1, !dbg !7333, !llvm.loop !7340

5:                                                ; preds = %1
  ret void, !dbg !7342
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.61(i32 noundef %0) unnamed_addr #14 !dbg !7343 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7345, metadata !DIExpression()), !dbg !7347
  call void @llvm.dbg.value(metadata i32 1, metadata !7346, metadata !DIExpression()), !dbg !7347
  %2 = and i32 %0, 15, !dbg !7348
  %3 = add nsw i32 %2, -4, !dbg !7348
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !7348
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7348
  %6 = icmp slt i32 %0, 0, !dbg !7348
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !7348
  store volatile i8 16, i8* %7, align 1, !dbg !7349
  ret void, !dbg !7351
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !7352 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7461, metadata !DIExpression()), !dbg !7462
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7463
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !7465
  br i1 %3, label %4, label %12, !dbg !7466

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !7467, !srcloc !7479
  call void @llvm.dbg.value(metadata i32 %5, metadata !7470, metadata !DIExpression()) #23, !dbg !7480
  %6 = icmp eq i32 %5, 0, !dbg !7481
  br i1 %6, label %12, label %7, !dbg !7482

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7483
  %9 = or i32 %8, 268435456, !dbg !7483
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7483
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7485
  %11 = and i32 %10, -32769, !dbg !7485
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7485
  br label %12, !dbg !7486

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !7487
  ret void, !dbg !7488
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !7489 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #25, !dbg !7490
  ret void, !dbg !7491
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !393 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !501, metadata !DIExpression()), !dbg !7492
  call void @llvm.dbg.value(metadata i8 0, metadata !502, metadata !DIExpression()), !dbg !7492
  call void @llvm.dbg.value(metadata i32 64, metadata !504, metadata !DIExpression()), !dbg !7492
  call void @llvm.dbg.value(metadata i32 undef, metadata !503, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7492
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !7493
  %3 = load i32, i32* %2, align 4, !dbg !7493
  call void @llvm.dbg.value(metadata i32 %3, metadata !503, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7492
  %4 = add i32 %3, -64, !dbg !7495
  call void @llvm.dbg.value(metadata i32 %4, metadata !503, metadata !DIExpression()), !dbg !7492
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !7496
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !7497
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !7498
  call void @llvm.dbg.value(metadata i8 1, metadata !502, metadata !DIExpression()), !dbg !7492
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #25, !dbg !7499
  ret void, !dbg !7500
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !7501 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7502
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7503, !srcloc !7506
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7507, !srcloc !7510
  ret void, !dbg !7511
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !7512 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #23, !dbg !7513, !srcloc !7516
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7517
  ret void, !dbg !7518
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !7519 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7534, metadata !DIExpression()), !dbg !7538
  call void @llvm.dbg.value(metadata i8 %1, metadata !7535, metadata !DIExpression()), !dbg !7538
  call void @llvm.dbg.value(metadata i32 %2, metadata !7536, metadata !DIExpression()), !dbg !7538
  call void @llvm.dbg.value(metadata i32 %3, metadata !7537, metadata !DIExpression()), !dbg !7538
  %5 = tail call fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !7539
  %6 = icmp eq i32 %5, -22, !dbg !7541
  br i1 %6, label %7, label %9, !dbg !7542

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.70, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.71, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.72, i32 0, i32 0), i32 noundef 283) #25, !dbg !7543
  %8 = zext i8 %1 to i32, !dbg !7543
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3.73, i32 0, i32 0), i32 noundef %8) #25, !dbg !7543
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.72, i32 0, i32 0), i32 noundef 283) #25, !dbg !7543
  unreachable, !dbg !7543

9:                                                ; preds = %4
  ret void, !dbg !7548
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7549 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7554, metadata !DIExpression()), !dbg !7559
  call void @llvm.dbg.value(metadata i8 %1, metadata !7555, metadata !DIExpression()), !dbg !7559
  call void @llvm.dbg.value(metadata i32 undef, metadata !7556, metadata !DIExpression()), !dbg !7559
  call void @llvm.dbg.value(metadata i32 undef, metadata !7557, metadata !DIExpression()), !dbg !7559
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7560
  call void @llvm.dbg.value(metadata i8 %3, metadata !7558, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7559
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #24, !dbg !7561
  call void @llvm.dbg.value(metadata i32 %4, metadata !7558, metadata !DIExpression()), !dbg !7559
  %5 = trunc i32 %4 to i8, !dbg !7562
  store i8 %5, i8* @static_regions_num, align 1, !dbg !7563
  ret i32 %4, !dbg !7564
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !7565 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7569, metadata !DIExpression()), !dbg !7575
  call void @llvm.dbg.value(metadata i8 %1, metadata !7570, metadata !DIExpression()), !dbg !7575
  call void @llvm.dbg.value(metadata i8 %2, metadata !7571, metadata !DIExpression()), !dbg !7575
  call void @llvm.dbg.value(metadata i1 %3, metadata !7572, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7575
  %5 = zext i8 %2 to i32, !dbg !7576
  call void @llvm.dbg.value(metadata i32 %5, metadata !7574, metadata !DIExpression()), !dbg !7575
  call void @llvm.dbg.value(metadata i32 0, metadata !7573, metadata !DIExpression()), !dbg !7575
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !7574, metadata !DIExpression()), !dbg !7575
  call void @llvm.dbg.value(metadata i32 0, metadata !7573, metadata !DIExpression()), !dbg !7575
  %7 = icmp eq i8 %1, 0, !dbg !7577
  br i1 %7, label %30, label %8, !dbg !7580

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7574, metadata !DIExpression()), !dbg !7575
  call void @llvm.dbg.value(metadata i32 %10, metadata !7573, metadata !DIExpression()), !dbg !7575
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !7581
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !7584
  %13 = load i32, i32* %12, align 4, !dbg !7584
  %14 = icmp eq i32 %13, 0, !dbg !7585
  br i1 %14, label %26, label %15, !dbg !7586

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !7587

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !7589
  %18 = icmp eq i32 %17, 0, !dbg !7589
  br i1 %18, label %19, label %20, !dbg !7590

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.74, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #25, !dbg !7591
  br label %30, !dbg !7597

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !7598
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !7599
  call void @llvm.dbg.value(metadata i32 %22, metadata !7574, metadata !DIExpression()), !dbg !7575
  %23 = icmp eq i32 %22, -22, !dbg !7600
  br i1 %23, label %30, label %24, !dbg !7602

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !7603
  call void @llvm.dbg.value(metadata i32 %25, metadata !7574, metadata !DIExpression()), !dbg !7575
  br label %26, !dbg !7604

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !7575
  call void @llvm.dbg.value(metadata i32 %27, metadata !7574, metadata !DIExpression()), !dbg !7575
  %28 = add nuw nsw i32 %10, 1, !dbg !7605
  call void @llvm.dbg.value(metadata i32 %28, metadata !7573, metadata !DIExpression()), !dbg !7575
  %29 = icmp eq i32 %28, %6, !dbg !7577
  br i1 %29, label %30, label %8, !dbg !7580, !llvm.loop !7606

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !7575
  ret i32 %31, !dbg !7608
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #16 !dbg !7609 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7613, metadata !DIExpression()), !dbg !7615
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7616
  %3 = load i32, i32* %2, align 4, !dbg !7616
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7617, !range !7618
  %5 = icmp ult i32 %4, 2, !dbg !7617
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7619
  br i1 %7, label %8, label %15, !dbg !7619

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7620
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7621
  %11 = load i32, i32* %10, align 4, !dbg !7621
  %12 = and i32 %11, %9, !dbg !7622
  %13 = icmp eq i32 %12, 0, !dbg !7623
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7614, metadata !DIExpression()), !dbg !7615
  ret i32 %16, !dbg !7624
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7625 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7629, metadata !DIExpression()), !dbg !7632
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7630, metadata !DIExpression()), !dbg !7632
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7633
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7633
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7631, metadata !DIExpression()), !dbg !7634
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7635
  %6 = load i32, i32* %5, align 4, !dbg !7635
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7636
  store i32 %6, i32* %7, align 4, !dbg !7637
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7638
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7639
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7640
  %11 = load i32, i32* %10, align 4, !dbg !7640
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* noundef nonnull %8, %struct.k_spinlock* noundef nonnull %9, i32 noundef %11) #24, !dbg !7641
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #24, !dbg !7642
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7643
  ret i32 %12, !dbg !7644
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* nocapture noundef writeonly %0, %struct.k_spinlock* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #17 !dbg !7645 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !7652, metadata !DIExpression()), !dbg !7656
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !7653, metadata !DIExpression()), !dbg !7656
  call void @llvm.dbg.value(metadata i32 undef, metadata !7654, metadata !DIExpression()), !dbg !7656
  call void @llvm.dbg.value(metadata i32 %2, metadata !7655, metadata !DIExpression()), !dbg !7656
  %4 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %1, i32 0, i32 0, !dbg !7657
  %5 = load i32, i32* %4, align 4, !dbg !7657
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #24, !dbg !7658
  %7 = or i32 %6, %5, !dbg !7659
  %8 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !7660
  store i32 %7, i32* %8, align 4, !dbg !7661
  ret void, !dbg !7662
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7663 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7667, metadata !DIExpression()), !dbg !7669
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7668, metadata !DIExpression()), !dbg !7669
  %3 = zext i8 %0 to i32, !dbg !7670
  %4 = icmp ugt i8 %0, 7, !dbg !7672
  br i1 %4, label %5, label %6, !dbg !7673

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.9.75, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #25, !dbg !7674
  br label %7, !dbg !7680

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #24, !dbg !7681
  br label %7, !dbg !7682

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !7669
  ret i32 %8, !dbg !7683
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #14 !dbg !7684 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7688, metadata !DIExpression()), !dbg !7690
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7689, metadata !DIExpression()), !dbg !7690
  tail call fastcc void @set_region_number(i32 noundef %0) #24, !dbg !7691
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7692
  %4 = load i32, i32* %3, align 4, !dbg !7692
  %5 = and i32 %4, -32, !dbg !7693
  %6 = or i32 %5, %0, !dbg !7694
  %7 = or i32 %6, 16, !dbg !7694
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7695
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7696
  %9 = load i32, i32* %8, align 4, !dbg !7696
  %10 = or i32 %9, 1, !dbg !7697
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7698
  ret void, !dbg !7699
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #14 !dbg !7700 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7703, metadata !DIExpression()), !dbg !7704
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7705
  ret void, !dbg !7706
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #11 !dbg !7707 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7711, metadata !DIExpression()), !dbg !7712
  %2 = icmp ult i32 %0, 33, !dbg !7713
  br i1 %2, label %11, label %3, !dbg !7715

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7716
  br i1 %4, label %11, label %5, !dbg !7718

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7719
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7720, !range !7618
  %8 = mul nsw i32 %7, -2, !dbg !7721
  %9 = add nsw i32 %8, 62, !dbg !7721
  %10 = and i32 %9, 62, !dbg !7722
  br label %11, !dbg !7723

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7712
  ret i32 %12, !dbg !7724
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !7725 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7729, metadata !DIExpression()), !dbg !7731
  call void @llvm.dbg.value(metadata i8 %1, metadata !7730, metadata !DIExpression()), !dbg !7731
  %3 = tail call fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !7732
  %4 = icmp eq i32 %3, -22, !dbg !7734
  br i1 %4, label %5, label %7, !dbg !7735

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.70, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.71, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.72, i32 0, i32 0), i32 noundef 314) #25, !dbg !7736
  %6 = zext i8 %1 to i32, !dbg !7736
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4.78, i32 0, i32 0), i32 noundef %6) #25, !dbg !7736
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.72, i32 0, i32 0), i32 noundef 314) #25, !dbg !7736
  unreachable, !dbg !7736

7:                                                ; preds = %2
  ret void, !dbg !7741
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7742 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7746, metadata !DIExpression()), !dbg !7753
  call void @llvm.dbg.value(metadata i8 %1, metadata !7747, metadata !DIExpression()), !dbg !7753
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7754
  call void @llvm.dbg.value(metadata i8 %3, metadata !7748, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7753
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #24, !dbg !7755
  call void @llvm.dbg.value(metadata i32 %4, metadata !7748, metadata !DIExpression()), !dbg !7753
  %5 = icmp ne i32 %4, -22, !dbg !7756
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7757
  call void @llvm.dbg.value(metadata i32 %4, metadata !7749, metadata !DIExpression()), !dbg !7758
  br i1 %7, label %8, label %12, !dbg !7757

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7749, metadata !DIExpression()), !dbg !7758
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #24, !dbg !7759
  %10 = add i32 %9, 1, !dbg !7762
  call void @llvm.dbg.value(metadata i32 %10, metadata !7749, metadata !DIExpression()), !dbg !7758
  %11 = icmp eq i32 %10, 8, !dbg !7763
  br i1 %11, label %12, label %8, !dbg !7764, !llvm.loop !7765

12:                                               ; preds = %8, %2
  ret i32 %4, !dbg !7767
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #14 !dbg !7768 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7771, metadata !DIExpression()), !dbg !7772
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7773
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7774
  ret void, !dbg !7775
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7776 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7781
  %2 = icmp ugt i32 %1, 8, !dbg !7783
  br i1 %2, label %3, label %4, !dbg !7784

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.70, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.71, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.72, i32 0, i32 0), i32 noundef 341) #25, !dbg !7785
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5.79, i32 0, i32 0), i32 noundef %1, i32 noundef 8) #25, !dbg !7785
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.72, i32 0, i32 0), i32 noundef 341) #25, !dbg !7785
  unreachable, !dbg !7785

4:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #24, !dbg !7790
  call void @llvm.dbg.value(metadata i32 0, metadata !7780, metadata !DIExpression()), !dbg !7791
  %5 = icmp eq i32 %1, 0, !dbg !7792
  br i1 %5, label %13, label %6, !dbg !7795

6:                                                ; preds = %4
  %7 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %8, !dbg !7795

8:                                                ; preds = %6, %8
  %9 = phi i32 [ 0, %6 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7780, metadata !DIExpression()), !dbg !7791
  %10 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %7, i32 %9, !dbg !7796
  tail call fastcc void @region_init(i32 noundef %9, %struct.arm_mpu_region* noundef %10) #24, !dbg !7798
  %11 = add nuw i32 %9, 1, !dbg !7799
  call void @llvm.dbg.value(metadata i32 %11, metadata !7780, metadata !DIExpression()), !dbg !7791
  %12 = icmp eq i32 %11, %1, !dbg !7792
  br i1 %12, label %13, label %8, !dbg !7795, !llvm.loop !7800

13:                                               ; preds = %8, %4
  %14 = trunc i32 %1 to i8, !dbg !7802
  store i8 %14, i8* @static_regions_num, align 1, !dbg !7803
  tail call void @arm_core_mpu_enable() #24, !dbg !7804
  %15 = load volatile i32, i32* inttoptr (i32 -536810096 to i32*), align 16, !dbg !7805
  %16 = and i32 %15, 65280, !dbg !7805
  %17 = icmp eq i32 %16, 2048, !dbg !7805
  br i1 %17, label %19, label %18, !dbg !7808

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.70, i32 0, i32 0), i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.6.80, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.72, i32 0, i32 0), i32 noundef 435) #25, !dbg !7809
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.81, i32 0, i32 0)) #25, !dbg !7809
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.72, i32 0, i32 0), i32 noundef 435) #25, !dbg !7809
  unreachable, !dbg !7809

19:                                               ; preds = %13
  ret i32 0, !dbg !7811
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7812 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7819, metadata !DIExpression()), !dbg !7822
  call void @llvm.dbg.value(metadata i8* %1, metadata !7820, metadata !DIExpression()), !dbg !7822
  call void @llvm.dbg.value(metadata i8* %0, metadata !7821, metadata !DIExpression()), !dbg !7822
  %3 = load i8, i8* %1, align 1, !dbg !7823
  %4 = icmp eq i8 %3, 0, !dbg !7824
  br i1 %4, label %13, label %5, !dbg !7825

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7819, metadata !DIExpression()), !dbg !7822
  call void @llvm.dbg.value(metadata i8* %8, metadata !7820, metadata !DIExpression()), !dbg !7822
  store i8 %6, i8* %7, align 1, !dbg !7826
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7828
  call void @llvm.dbg.value(metadata i8* %9, metadata !7819, metadata !DIExpression()), !dbg !7822
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7829
  call void @llvm.dbg.value(metadata i8* %10, metadata !7820, metadata !DIExpression()), !dbg !7822
  %11 = load i8, i8* %10, align 1, !dbg !7823
  %12 = icmp eq i8 %11, 0, !dbg !7824
  br i1 %12, label %13, label %5, !dbg !7825, !llvm.loop !7830

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7832
  ret i8* %0, !dbg !7833
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7834 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7838, metadata !DIExpression()), !dbg !7842
  call void @llvm.dbg.value(metadata i8* %1, metadata !7839, metadata !DIExpression()), !dbg !7842
  call void @llvm.dbg.value(metadata i32 %2, metadata !7840, metadata !DIExpression()), !dbg !7842
  call void @llvm.dbg.value(metadata i8* %0, metadata !7841, metadata !DIExpression()), !dbg !7842
  %4 = icmp eq i32 %2, 0, !dbg !7843
  br i1 %4, label %22, label %5, !dbg !7844

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7838, metadata !DIExpression()), !dbg !7842
  call void @llvm.dbg.value(metadata i32 %7, metadata !7840, metadata !DIExpression()), !dbg !7842
  call void @llvm.dbg.value(metadata i8* %8, metadata !7839, metadata !DIExpression()), !dbg !7842
  %9 = load i8, i8* %8, align 1, !dbg !7845
  %10 = icmp eq i8 %9, 0, !dbg !7846
  br i1 %10, label %16, label %11, !dbg !7847

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7848
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7850
  call void @llvm.dbg.value(metadata i8* %12, metadata !7839, metadata !DIExpression()), !dbg !7842
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7851
  call void @llvm.dbg.value(metadata i8* %13, metadata !7838, metadata !DIExpression()), !dbg !7842
  %14 = add i32 %7, -1, !dbg !7852
  call void @llvm.dbg.value(metadata i32 %14, metadata !7840, metadata !DIExpression()), !dbg !7842
  %15 = icmp eq i32 %14, 0, !dbg !7843
  br i1 %15, label %22, label %5, !dbg !7844, !llvm.loop !7853

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7838, metadata !DIExpression()), !dbg !7842
  call void @llvm.dbg.value(metadata i32 %18, metadata !7840, metadata !DIExpression()), !dbg !7842
  store i8 0, i8* %17, align 1, !dbg !7855
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7857
  call void @llvm.dbg.value(metadata i8* %19, metadata !7838, metadata !DIExpression()), !dbg !7842
  %20 = add i32 %18, -1, !dbg !7858
  call void @llvm.dbg.value(metadata i32 %20, metadata !7840, metadata !DIExpression()), !dbg !7842
  %21 = icmp eq i32 %20, 0, !dbg !7859
  br i1 %21, label %22, label %16, !dbg !7860, !llvm.loop !7861

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7863
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7864 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7868, metadata !DIExpression()), !dbg !7871
  call void @llvm.dbg.value(metadata i32 %1, metadata !7869, metadata !DIExpression()), !dbg !7871
  call void @llvm.dbg.value(metadata i32 %1, metadata !7870, metadata !DIExpression()), !dbg !7871
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7872

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7868, metadata !DIExpression()), !dbg !7871
  %6 = load i8, i8* %5, align 1, !dbg !7873
  %7 = icmp eq i8 %6, %3, !dbg !7874
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7875
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7876
  call void @llvm.dbg.value(metadata i8* %10, metadata !7868, metadata !DIExpression()), !dbg !7871
  br i1 %9, label %11, label %4, !dbg !7875, !llvm.loop !7878

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7880
  ret i8* %12, !dbg !7881
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7882 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7884, metadata !DIExpression()), !dbg !7887
  call void @llvm.dbg.value(metadata i32 %1, metadata !7885, metadata !DIExpression()), !dbg !7887
  call void @llvm.dbg.value(metadata i8* null, metadata !7886, metadata !DIExpression()), !dbg !7887
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7888

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7887
  call void @llvm.dbg.value(metadata i8* %6, metadata !7886, metadata !DIExpression()), !dbg !7887
  call void @llvm.dbg.value(metadata i8* %5, metadata !7884, metadata !DIExpression()), !dbg !7887
  %7 = load i8, i8* %5, align 1, !dbg !7889
  %8 = icmp eq i8 %7, %3, !dbg !7892
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7893
  call void @llvm.dbg.value(metadata i8* %9, metadata !7886, metadata !DIExpression()), !dbg !7887
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7894
  call void @llvm.dbg.value(metadata i8* %10, metadata !7884, metadata !DIExpression()), !dbg !7887
  %11 = icmp eq i8 %7, 0, !dbg !7895
  br i1 %11, label %12, label %4, !dbg !7895, !llvm.loop !7896

12:                                               ; preds = %4
  ret i8* %9, !dbg !7898
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #6 !dbg !7899 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7903, metadata !DIExpression()), !dbg !7905
  call void @llvm.dbg.value(metadata i32 0, metadata !7904, metadata !DIExpression()), !dbg !7905
  %2 = load i8, i8* %0, align 1, !dbg !7906
  %3 = icmp eq i8 %2, 0, !dbg !7907
  br i1 %3, label %11, label %4, !dbg !7908

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7904, metadata !DIExpression()), !dbg !7905
  call void @llvm.dbg.value(metadata i8* %6, metadata !7903, metadata !DIExpression()), !dbg !7905
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7909
  call void @llvm.dbg.value(metadata i8* %7, metadata !7903, metadata !DIExpression()), !dbg !7905
  %8 = add i32 %5, 1, !dbg !7911
  call void @llvm.dbg.value(metadata i32 %8, metadata !7904, metadata !DIExpression()), !dbg !7905
  %9 = load i8, i8* %7, align 1, !dbg !7906
  %10 = icmp eq i8 %9, 0, !dbg !7907
  br i1 %10, label %11, label %4, !dbg !7908, !llvm.loop !7912

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7905
  ret i32 %12, !dbg !7914
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7915 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7919, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata i32 %1, metadata !7920, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata i32 0, metadata !7921, metadata !DIExpression()), !dbg !7922
  %3 = load i8, i8* %0, align 1, !dbg !7923
  %4 = icmp ne i8 %3, 0, !dbg !7924
  %5 = icmp ne i32 %1, 0, !dbg !7925
  %6 = and i1 %4, %5, !dbg !7925
  br i1 %6, label %7, label %16, !dbg !7926

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7921, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata i8* %9, metadata !7919, metadata !DIExpression()), !dbg !7922
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7927
  call void @llvm.dbg.value(metadata i8* %10, metadata !7919, metadata !DIExpression()), !dbg !7922
  %11 = add nuw i32 %8, 1, !dbg !7929
  call void @llvm.dbg.value(metadata i32 %11, metadata !7921, metadata !DIExpression()), !dbg !7922
  %12 = load i8, i8* %10, align 1, !dbg !7923
  %13 = icmp ne i8 %12, 0, !dbg !7924
  %14 = icmp ult i32 %11, %1, !dbg !7925
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7925
  br i1 %15, label %7, label %16, !dbg !7926, !llvm.loop !7930

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7922
  ret i32 %17, !dbg !7932
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #6 !dbg !7933 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7937, metadata !DIExpression()), !dbg !7939
  call void @llvm.dbg.value(metadata i8* %1, metadata !7938, metadata !DIExpression()), !dbg !7939
  %3 = load i8, i8* %0, align 1, !dbg !7940
  %4 = load i8, i8* %1, align 1, !dbg !7941
  %5 = icmp ne i8 %3, %4, !dbg !7942
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7943
  br i1 %7, label %18, label %8, !dbg !7943

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7938, metadata !DIExpression()), !dbg !7939
  call void @llvm.dbg.value(metadata i8* %10, metadata !7937, metadata !DIExpression()), !dbg !7939
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7944
  call void @llvm.dbg.value(metadata i8* %11, metadata !7937, metadata !DIExpression()), !dbg !7939
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7946
  call void @llvm.dbg.value(metadata i8* %12, metadata !7938, metadata !DIExpression()), !dbg !7939
  %13 = load i8, i8* %11, align 1, !dbg !7940
  %14 = load i8, i8* %12, align 1, !dbg !7941
  %15 = icmp ne i8 %13, %14, !dbg !7942
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7943
  br i1 %17, label %18, label %8, !dbg !7943, !llvm.loop !7947

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7940
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7941
  %21 = zext i8 %19 to i32, !dbg !7950
  %22 = zext i8 %20 to i32, !dbg !7951
  %23 = sub nsw i32 %21, %22, !dbg !7952
  ret i32 %23, !dbg !7953
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 !dbg !7954 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7958, metadata !DIExpression()), !dbg !7961
  call void @llvm.dbg.value(metadata i8* %1, metadata !7959, metadata !DIExpression()), !dbg !7961
  call void @llvm.dbg.value(metadata i32 %2, metadata !7960, metadata !DIExpression()), !dbg !7961
  %4 = icmp eq i32 %2, 0, !dbg !7962
  br i1 %4, label %23, label %5, !dbg !7962

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7960, metadata !DIExpression()), !dbg !7961
  call void @llvm.dbg.value(metadata i8* %7, metadata !7959, metadata !DIExpression()), !dbg !7961
  call void @llvm.dbg.value(metadata i8* %8, metadata !7958, metadata !DIExpression()), !dbg !7961
  %9 = load i8, i8* %8, align 1, !dbg !7963
  %10 = load i8, i8* %7, align 1, !dbg !7964
  %11 = icmp ne i8 %9, %10, !dbg !7965
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7966
  br i1 %13, label %19, label %14, !dbg !7966

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7967
  call void @llvm.dbg.value(metadata i8* %15, metadata !7958, metadata !DIExpression()), !dbg !7961
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7969
  call void @llvm.dbg.value(metadata i8* %16, metadata !7959, metadata !DIExpression()), !dbg !7961
  %17 = add i32 %6, -1, !dbg !7970
  call void @llvm.dbg.value(metadata i32 %17, metadata !7960, metadata !DIExpression()), !dbg !7961
  %18 = icmp eq i32 %17, 0, !dbg !7962
  br i1 %18, label %23, label %5, !dbg !7962, !llvm.loop !7971

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7974
  %21 = zext i8 %10 to i32, !dbg !7975
  %22 = sub nsw i32 %20, %21, !dbg !7976
  br label %23, !dbg !7977

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7977
  ret i32 %24, !dbg !7978
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #13 !dbg !7979 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7983, metadata !DIExpression()), !dbg !7988
  call void @llvm.dbg.value(metadata i8* %1, metadata !7984, metadata !DIExpression()), !dbg !7988
  call void @llvm.dbg.value(metadata i8** %2, metadata !7985, metadata !DIExpression()), !dbg !7988
  %4 = icmp eq i8* %0, null, !dbg !7989
  br i1 %4, label %5, label %7, !dbg !7989

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7990
  br label %7, !dbg !7989

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7989
  call void @llvm.dbg.value(metadata i8* %8, metadata !7986, metadata !DIExpression()), !dbg !7988
  %9 = load i8, i8* %8, align 1, !dbg !7991
  %10 = icmp eq i8 %9, 0, !dbg !7991
  br i1 %10, label %33, label %11, !dbg !7992

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7986, metadata !DIExpression()), !dbg !7988
  %14 = zext i8 %12 to i32, !dbg !7991
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #24, !dbg !7993
  %16 = icmp eq i8* %15, null, !dbg !7992
  br i1 %16, label %21, label %17, !dbg !7994

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7995
  call void @llvm.dbg.value(metadata i8* %18, metadata !7986, metadata !DIExpression()), !dbg !7988
  %19 = load i8, i8* %18, align 1, !dbg !7991
  %20 = icmp eq i8 %19, 0, !dbg !7991
  br i1 %20, label %33, label %11, !dbg !7992, !llvm.loop !7997

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7987, metadata !DIExpression()), !dbg !7988
  %24 = zext i8 %22 to i32, !dbg !7999
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #24, !dbg !8000
  %26 = icmp eq i8* %25, null, !dbg !8001
  br i1 %26, label %27, label %31, !dbg !8002

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8003
  call void @llvm.dbg.value(metadata i8* %28, metadata !7987, metadata !DIExpression()), !dbg !7988
  %29 = load i8, i8* %28, align 1, !dbg !7999
  %30 = icmp eq i8 %29, 0, !dbg !7999
  br i1 %30, label %33, label %21, !dbg !8005, !llvm.loop !8006

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !8008
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8011
  br label %33, !dbg !8012

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7988
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7988
  store i8* %34, i8** %2, align 4, !dbg !7988
  ret i8* %35, !dbg !8013
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !8014 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8016, metadata !DIExpression()), !dbg !8018
  call void @llvm.dbg.value(metadata i8* %1, metadata !8017, metadata !DIExpression()), !dbg !8018
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !8019
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !8020
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #24, !dbg !8021
  ret i8* %0, !dbg !8022
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !8023 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8025, metadata !DIExpression()), !dbg !8030
  call void @llvm.dbg.value(metadata i8* %1, metadata !8026, metadata !DIExpression()), !dbg !8030
  call void @llvm.dbg.value(metadata i32 %2, metadata !8027, metadata !DIExpression()), !dbg !8030
  call void @llvm.dbg.value(metadata i8* %0, metadata !8028, metadata !DIExpression()), !dbg !8030
  %4 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !8031
  call void @llvm.dbg.value(metadata i32 %4, metadata !8029, metadata !DIExpression()), !dbg !8030
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !8032
  call void @llvm.dbg.value(metadata i8* %5, metadata !8025, metadata !DIExpression()), !dbg !8030
  call void @llvm.dbg.value(metadata i8* %1, metadata !8026, metadata !DIExpression()), !dbg !8030
  call void @llvm.dbg.value(metadata i32 %2, metadata !8027, metadata !DIExpression()), !dbg !8030
  call void @llvm.dbg.value(metadata i32 %2, metadata !8027, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8030
  %6 = icmp eq i32 %2, 0, !dbg !8033
  br i1 %6, label %18, label %7, !dbg !8034

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !8035
  call void @llvm.dbg.value(metadata i8* %9, metadata !8025, metadata !DIExpression()), !dbg !8030
  call void @llvm.dbg.value(metadata i8* %10, metadata !8026, metadata !DIExpression()), !dbg !8030
  %12 = load i8, i8* %10, align 1, !dbg !8036
  %13 = icmp eq i8 %12, 0, !dbg !8037
  br i1 %13, label %18, label %14, !dbg !8038

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8039
  call void @llvm.dbg.value(metadata i8* %15, metadata !8026, metadata !DIExpression()), !dbg !8030
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8041
  call void @llvm.dbg.value(metadata i8* %16, metadata !8025, metadata !DIExpression()), !dbg !8030
  store i8 %12, i8* %9, align 1, !dbg !8042
  call void @llvm.dbg.value(metadata i32 %11, metadata !8027, metadata !DIExpression()), !dbg !8030
  call void @llvm.dbg.value(metadata i32 %11, metadata !8027, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8030
  %17 = icmp eq i32 %11, 0, !dbg !8033
  br i1 %17, label %18, label %7, !dbg !8034, !llvm.loop !8043

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !8030
  store i8 0, i8* %19, align 1, !dbg !8045
  ret i8* %0, !dbg !8046
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 !dbg !8047 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8051, metadata !DIExpression()), !dbg !8056
  call void @llvm.dbg.value(metadata i8* %1, metadata !8052, metadata !DIExpression()), !dbg !8056
  call void @llvm.dbg.value(metadata i32 %2, metadata !8053, metadata !DIExpression()), !dbg !8056
  call void @llvm.dbg.value(metadata i8* %0, metadata !8054, metadata !DIExpression()), !dbg !8056
  call void @llvm.dbg.value(metadata i8* %1, metadata !8055, metadata !DIExpression()), !dbg !8056
  %4 = icmp eq i32 %2, 0, !dbg !8057
  br i1 %4, label %31, label %5, !dbg !8059

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8055, metadata !DIExpression()), !dbg !8056
  call void @llvm.dbg.value(metadata i8* %0, metadata !8054, metadata !DIExpression()), !dbg !8056
  call void @llvm.dbg.value(metadata i32 %2, metadata !8053, metadata !DIExpression()), !dbg !8056
  %6 = add i32 %2, -1, !dbg !8060
  call void @llvm.dbg.value(metadata i32 %6, metadata !8053, metadata !DIExpression()), !dbg !8056
  %7 = icmp eq i32 %6, 0, !dbg !8061
  br i1 %7, label %23, label %8, !dbg !8062

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !8063
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !8063
  br label %11, !dbg !8063

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8055, metadata !DIExpression()), !dbg !8056
  call void @llvm.dbg.value(metadata i8* %14, metadata !8054, metadata !DIExpression()), !dbg !8056
  %15 = load i8, i8* %14, align 1, !dbg !8064
  %16 = load i8, i8* %13, align 1, !dbg !8065
  %17 = icmp eq i8 %15, %16, !dbg !8066
  br i1 %17, label %18, label %23, !dbg !8063

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !8067
  call void @llvm.dbg.value(metadata i8* %19, metadata !8054, metadata !DIExpression()), !dbg !8056
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8069
  call void @llvm.dbg.value(metadata i8* %20, metadata !8055, metadata !DIExpression()), !dbg !8056
  call void @llvm.dbg.value(metadata i32 %12, metadata !8053, metadata !DIExpression()), !dbg !8056
  %21 = add i32 %12, -1, !dbg !8060
  call void @llvm.dbg.value(metadata i32 %21, metadata !8053, metadata !DIExpression()), !dbg !8056
  %22 = icmp eq i32 %21, 0, !dbg !8061
  br i1 %22, label %23, label %11, !dbg !8062, !llvm.loop !8070

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !8056
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !8056
  %26 = load i8, i8* %24, align 1, !dbg !8072
  %27 = zext i8 %26 to i32, !dbg !8072
  %28 = load i8, i8* %25, align 1, !dbg !8073
  %29 = zext i8 %28 to i32, !dbg !8073
  %30 = sub nsw i32 %27, %29, !dbg !8074
  br label %31, !dbg !8075

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !8056
  ret i32 %32, !dbg !8076
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !8077 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8081, metadata !DIExpression()), !dbg !8086
  call void @llvm.dbg.value(metadata i8* %1, metadata !8082, metadata !DIExpression()), !dbg !8086
  call void @llvm.dbg.value(metadata i32 %2, metadata !8083, metadata !DIExpression()), !dbg !8086
  call void @llvm.dbg.value(metadata i8* %0, metadata !8084, metadata !DIExpression()), !dbg !8086
  call void @llvm.dbg.value(metadata i8* %1, metadata !8085, metadata !DIExpression()), !dbg !8086
  %4 = ptrtoint i8* %0 to i32, !dbg !8087
  %5 = ptrtoint i8* %1 to i32, !dbg !8087
  %6 = sub i32 %4, %5, !dbg !8087
  %7 = icmp ult i32 %6, %2, !dbg !8089
  br i1 %7, label %10, label %8, !dbg !8090

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8085, metadata !DIExpression()), !dbg !8086
  call void @llvm.dbg.value(metadata i8* %0, metadata !8084, metadata !DIExpression()), !dbg !8086
  call void @llvm.dbg.value(metadata i32 %2, metadata !8083, metadata !DIExpression()), !dbg !8086
  %9 = icmp eq i32 %2, 0, !dbg !8091
  br i1 %9, label %26, label %17, !dbg !8093

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !8083, metadata !DIExpression()), !dbg !8086
  %12 = add i32 %11, -1, !dbg !8094
  call void @llvm.dbg.value(metadata i32 %12, metadata !8083, metadata !DIExpression()), !dbg !8086
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !8097
  %14 = load i8, i8* %13, align 1, !dbg !8097
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !8098
  store i8 %14, i8* %15, align 1, !dbg !8099
  %16 = icmp eq i32 %12, 0, !dbg !8100
  br i1 %16, label %26, label %10, !dbg !8101, !llvm.loop !8102

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !8085, metadata !DIExpression()), !dbg !8086
  call void @llvm.dbg.value(metadata i8* %19, metadata !8084, metadata !DIExpression()), !dbg !8086
  call void @llvm.dbg.value(metadata i32 %20, metadata !8083, metadata !DIExpression()), !dbg !8086
  %21 = load i8, i8* %18, align 1, !dbg !8104
  store i8 %21, i8* %19, align 1, !dbg !8106
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !8107
  call void @llvm.dbg.value(metadata i8* %22, metadata !8084, metadata !DIExpression()), !dbg !8086
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !8108
  call void @llvm.dbg.value(metadata i8* %23, metadata !8085, metadata !DIExpression()), !dbg !8086
  %24 = add i32 %20, -1, !dbg !8109
  call void @llvm.dbg.value(metadata i32 %24, metadata !8083, metadata !DIExpression()), !dbg !8086
  %25 = icmp eq i32 %24, 0, !dbg !8091
  br i1 %25, label %26, label %17, !dbg !8093, !llvm.loop !8110

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !8112
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !8113 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8119, metadata !DIExpression()), !dbg !8124
  call void @llvm.dbg.value(metadata i8* %1, metadata !8120, metadata !DIExpression()), !dbg !8124
  call void @llvm.dbg.value(metadata i32 %2, metadata !8121, metadata !DIExpression()), !dbg !8124
  call void @llvm.dbg.value(metadata i8* %0, metadata !8122, metadata !DIExpression()), !dbg !8124
  call void @llvm.dbg.value(metadata i8* %1, metadata !8123, metadata !DIExpression()), !dbg !8124
  %4 = icmp eq i32 %2, 0, !dbg !8125
  br i1 %4, label %14, label %5, !dbg !8126

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8123, metadata !DIExpression()), !dbg !8124
  call void @llvm.dbg.value(metadata i8* %7, metadata !8122, metadata !DIExpression()), !dbg !8124
  call void @llvm.dbg.value(metadata i32 %8, metadata !8121, metadata !DIExpression()), !dbg !8124
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8127
  call void @llvm.dbg.value(metadata i8* %9, metadata !8123, metadata !DIExpression()), !dbg !8124
  %10 = load i8, i8* %6, align 1, !dbg !8129
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8130
  call void @llvm.dbg.value(metadata i8* %11, metadata !8122, metadata !DIExpression()), !dbg !8124
  store i8 %10, i8* %7, align 1, !dbg !8131
  %12 = add i32 %8, -1, !dbg !8132
  call void @llvm.dbg.value(metadata i32 %12, metadata !8121, metadata !DIExpression()), !dbg !8124
  %13 = icmp eq i32 %12, 0, !dbg !8125
  br i1 %13, label %14, label %5, !dbg !8126, !llvm.loop !8133

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !8135
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !8136 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8140, metadata !DIExpression()), !dbg !8145
  call void @llvm.dbg.value(metadata i32 %1, metadata !8141, metadata !DIExpression()), !dbg !8145
  call void @llvm.dbg.value(metadata i32 %2, metadata !8142, metadata !DIExpression()), !dbg !8145
  call void @llvm.dbg.value(metadata i8* %0, metadata !8143, metadata !DIExpression()), !dbg !8145
  %4 = trunc i32 %1 to i8, !dbg !8146
  call void @llvm.dbg.value(metadata i8 %4, metadata !8144, metadata !DIExpression()), !dbg !8145
  call void @llvm.dbg.value(metadata i32 %2, metadata !8142, metadata !DIExpression()), !dbg !8145
  call void @llvm.dbg.value(metadata i8* %0, metadata !8143, metadata !DIExpression()), !dbg !8145
  %5 = icmp eq i32 %2, 0, !dbg !8147
  br i1 %5, label %12, label %6, !dbg !8148

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !8142, metadata !DIExpression()), !dbg !8145
  call void @llvm.dbg.value(metadata i8* %8, metadata !8143, metadata !DIExpression()), !dbg !8145
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8149
  call void @llvm.dbg.value(metadata i8* %9, metadata !8143, metadata !DIExpression()), !dbg !8145
  store i8 %4, i8* %8, align 1, !dbg !8151
  %10 = add i32 %7, -1, !dbg !8152
  call void @llvm.dbg.value(metadata i32 %10, metadata !8142, metadata !DIExpression()), !dbg !8145
  %11 = icmp eq i32 %10, 0, !dbg !8147
  br i1 %11, label %12, label %6, !dbg !8148, !llvm.loop !8153

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !8155
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #6 !dbg !8156 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8160, metadata !DIExpression()), !dbg !8166
  call void @llvm.dbg.value(metadata i32 %1, metadata !8161, metadata !DIExpression()), !dbg !8166
  call void @llvm.dbg.value(metadata i32 %2, metadata !8162, metadata !DIExpression()), !dbg !8166
  %4 = icmp eq i32 %2, 0, !dbg !8167
  br i1 %4, label %17, label %5, !dbg !8168

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !8169

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !8170
  call void @llvm.dbg.value(metadata i8* %9, metadata !8163, metadata !DIExpression()), !dbg !8170
  call void @llvm.dbg.value(metadata i32 %8, metadata !8162, metadata !DIExpression()), !dbg !8166
  call void @llvm.dbg.value(metadata i8* %9, metadata !8163, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8170
  %10 = load i8, i8* %9, align 1, !dbg !8171
  %11 = icmp eq i8 %10, %6, !dbg !8174
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !8175
  call void @llvm.dbg.value(metadata i8* %12, metadata !8163, metadata !DIExpression()), !dbg !8170
  call void @llvm.dbg.value(metadata i32 %13, metadata !8162, metadata !DIExpression()), !dbg !8166
  br i1 %15, label %16, label %7, !dbg !8175, !llvm.loop !8176

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !8178

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !8166
  ret i8* %19, !dbg !8179
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !8180 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !8182, metadata !DIExpression()), !dbg !8183
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !8184
  ret void, !dbg !8185
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #3 !dbg !8186 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8188, metadata !DIExpression()), !dbg !8189
  ret i32 -1, !dbg !8190
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8191 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8195, metadata !DIExpression()), !dbg !8197
  call void @llvm.dbg.value(metadata i32* %1, metadata !8196, metadata !DIExpression()), !dbg !8197
  %3 = ptrtoint i32* %1 to i32, !dbg !8198
  %4 = and i32 %3, -2, !dbg !8198
  %5 = icmp eq i32 %4, 2, !dbg !8198
  br i1 %5, label %6, label %9, !dbg !8198

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8199
  %8 = tail call i32 %7(i32 noundef %0) #25, !dbg !8199
  br label %9, !dbg !8200

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !8200
  ret i32 %10, !dbg !8201
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8202 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8204, metadata !DIExpression()), !dbg !8206
  call void @llvm.dbg.value(metadata i32* %1, metadata !8205, metadata !DIExpression()), !dbg !8206
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !8207
  ret i32 %3, !dbg !8208
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !8209 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8212, metadata !DIExpression()), !dbg !8214
  call void @llvm.dbg.value(metadata i32* %1, metadata !8213, metadata !DIExpression()), !dbg !8214
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8215, !srcloc !8217
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !8218
  ret i32 %3, !dbg !8219
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !8220 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8225, metadata !DIExpression()), !dbg !8229
  call void @llvm.dbg.value(metadata i32* %1, metadata !8226, metadata !DIExpression()), !dbg !8229
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !8230
  call void @llvm.dbg.value(metadata i32 %3, metadata !8227, metadata !DIExpression()), !dbg !8229
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #24, !dbg !8231
  call void @llvm.dbg.value(metadata i32 %4, metadata !8228, metadata !DIExpression()), !dbg !8229
  %5 = icmp ne i32 %3, %4, !dbg !8232
  %6 = sext i1 %5 to i32, !dbg !8233
  ret i32 %6, !dbg !8234
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !8235 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8239, metadata !DIExpression()), !dbg !8243
  call void @llvm.dbg.value(metadata i32 %1, metadata !8240, metadata !DIExpression()), !dbg !8243
  call void @llvm.dbg.value(metadata i32 %2, metadata !8241, metadata !DIExpression()), !dbg !8243
  call void @llvm.dbg.value(metadata i32* %3, metadata !8242, metadata !DIExpression()), !dbg !8243
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8244
  ret i32 %5, !dbg !8245
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !8246 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8248, metadata !DIExpression()), !dbg !8252
  call void @llvm.dbg.value(metadata i32 %1, metadata !8249, metadata !DIExpression()), !dbg !8252
  call void @llvm.dbg.value(metadata i32 %2, metadata !8250, metadata !DIExpression()), !dbg !8252
  call void @llvm.dbg.value(metadata i32* %3, metadata !8251, metadata !DIExpression()), !dbg !8252
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8253, !srcloc !8255
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8256
  ret i32 %5, !dbg !8257
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !8258 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8260, metadata !DIExpression()), !dbg !8268
  call void @llvm.dbg.value(metadata i32 %1, metadata !8261, metadata !DIExpression()), !dbg !8268
  call void @llvm.dbg.value(metadata i32 %2, metadata !8262, metadata !DIExpression()), !dbg !8268
  call void @llvm.dbg.value(metadata i32* %3, metadata !8263, metadata !DIExpression()), !dbg !8268
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !8269
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !8271
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !8271
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !8271
  br i1 %11, label %33, label %12, !dbg !8271

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !8268
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !8268
  call void @llvm.dbg.value(metadata i8* %14, metadata !8266, metadata !DIExpression()), !dbg !8268
  call void @llvm.dbg.value(metadata i32 %13, metadata !8264, metadata !DIExpression()), !dbg !8268
  call void @llvm.dbg.value(metadata i32 %1, metadata !8265, metadata !DIExpression()), !dbg !8268
  br label %15, !dbg !8272

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !8274
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !8268
  call void @llvm.dbg.value(metadata i8* %17, metadata !8266, metadata !DIExpression()), !dbg !8268
  call void @llvm.dbg.value(metadata i32 %16, metadata !8265, metadata !DIExpression()), !dbg !8268
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8275
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8278
  call void @llvm.dbg.value(metadata i8* %19, metadata !8266, metadata !DIExpression()), !dbg !8268
  %20 = load i8, i8* %17, align 1, !dbg !8279
  %21 = zext i8 %20 to i32, !dbg !8280
  %22 = tail call i32 %18(i32 noundef %21) #25, !dbg !8275
  %23 = icmp eq i32 %22, -1, !dbg !8281
  br i1 %23, label %30, label %24, !dbg !8282

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !8283
  call void @llvm.dbg.value(metadata i32 %25, metadata !8265, metadata !DIExpression()), !dbg !8268
  %26 = icmp eq i32 %25, 0, !dbg !8284
  br i1 %26, label %27, label %15, !dbg !8285, !llvm.loop !8286

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !8288
  call void @llvm.dbg.value(metadata i32 %28, metadata !8264, metadata !DIExpression()), !dbg !8268
  %29 = icmp eq i32 %28, 0, !dbg !8289
  br i1 %29, label %30, label %12, !dbg !8290, !llvm.loop !8291

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !8268
  call void @llvm.dbg.value(metadata i32 %31, metadata !8264, metadata !DIExpression()), !dbg !8268
  call void @llvm.dbg.label(metadata !8267), !dbg !8294
  %32 = sub i32 %2, %31, !dbg !8295
  br label %33, !dbg !8296

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !8268
  ret i32 %34, !dbg !8297
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !8298 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8302, metadata !DIExpression()), !dbg !8303
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8304
  %3 = icmp eq i32 %2, -1, !dbg !8306
  br i1 %3, label %8, label %4, !dbg !8307

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8308
  %6 = icmp eq i32 %5, -1, !dbg !8309
  %7 = sext i1 %6 to i32, !dbg !8308
  br label %8, !dbg !8310

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !8303
  ret i32 %9, !dbg !8311
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !8312 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8314, metadata !DIExpression()), !dbg !8315
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #24, !dbg !8316
  ret void, !dbg !8317
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !8318 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8322, metadata !DIExpression()), !dbg !8328
  call void @llvm.dbg.value(metadata i32 %1, metadata !8323, metadata !DIExpression()), !dbg !8328
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !8324, metadata !DIExpression()), !dbg !8328
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !8329
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !8329
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !8329
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !8325, metadata !DIExpression()), !dbg !8328
  call void @llvm.dbg.value(metadata i32 %0, metadata !8327, metadata !DIExpression()), !dbg !8328
  %7 = icmp slt i32 %0, %1, !dbg !8330
  br i1 %7, label %8, label %22, !dbg !8333

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8327, metadata !DIExpression()), !dbg !8328
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #24, !dbg !8334
  %11 = icmp eq i32 %10, 0, !dbg !8334
  br i1 %11, label %19, label %12, !dbg !8337

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #24, !dbg !8338
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !8340
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !8340
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !8342
  br i1 %15, label %19, label %16, !dbg !8343

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !8344
  %18 = load i8*, i8** %17, align 4, !dbg !8344
  tail call void %14(i32 noundef %9, i8* noundef %18) #25, !dbg !8345
  br label %19, !dbg !8346

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !8347
  call void @llvm.dbg.value(metadata i32 %20, metadata !8327, metadata !DIExpression()), !dbg !8328
  %21 = icmp eq i32 %20, %1, !dbg !8330
  br i1 %21, label %22, label %8, !dbg !8333, !llvm.loop !8348

22:                                               ; preds = %19, %3
  ret void, !dbg !8350
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #15 !dbg !8351 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8353, metadata !DIExpression()), !dbg !8354
  %2 = shl nuw i32 1, %0, !dbg !8355
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #24, !dbg !8358
  ret i32 %3, !dbg !8359
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #14 !dbg !8360 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8364, metadata !DIExpression()), !dbg !8365
  %2 = shl nuw i32 1, %0, !dbg !8366
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #24, !dbg !8369
  ret void, !dbg !8370
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8371 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8374, metadata !DIExpression()), !dbg !8375
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8376
  ret void, !dbg !8377
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8378 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8380, metadata !DIExpression()), !dbg !8381
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8382
  %3 = and i32 %2, %0, !dbg !8382
  %4 = icmp eq i32 %3, %0, !dbg !8383
  %5 = zext i1 %4 to i32, !dbg !8383
  ret i32 %5, !dbg !8384
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !8385 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8387, metadata !DIExpression()), !dbg !8388
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #24, !dbg !8389
  ret void, !dbg !8390
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !8391 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8393, metadata !DIExpression()), !dbg !8394
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #24, !dbg !8395
  ret void, !dbg !8396
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !8397 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8399, metadata !DIExpression()), !dbg !8400
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #24, !dbg !8401
  ret void, !dbg !8402
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !8403 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8405, metadata !DIExpression()), !dbg !8406
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #24, !dbg !8407
  ret void, !dbg !8408
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !8409 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8411, metadata !DIExpression()), !dbg !8412
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #24, !dbg !8413
  ret void, !dbg !8414
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !8415 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8417, metadata !DIExpression()), !dbg !8418
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #24, !dbg !8419
  ret void, !dbg !8420
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !8421 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8423, metadata !DIExpression()), !dbg !8424
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #24, !dbg !8425
  ret void, !dbg !8426
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !8427 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8429, metadata !DIExpression()), !dbg !8430
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #24, !dbg !8431
  ret void, !dbg !8432
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !8433 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8435, metadata !DIExpression()), !dbg !8436
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #24, !dbg !8437
  ret void, !dbg !8438
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !8439 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8441, metadata !DIExpression()), !dbg !8442
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #24, !dbg !8443
  ret void, !dbg !8444
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8445 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8447, metadata !DIExpression()), !dbg !8448
  tail call fastcc void @__stm32_exti_connect_irqs() #24, !dbg !8449
  ret i32 0, !dbg !8450
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !758 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !762, metadata !DIExpression()), !dbg !8451
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #25, !dbg !8452
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #25, !dbg !8454
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #25, !dbg !8456
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #25, !dbg !8458
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #25, !dbg !8460
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #25, !dbg !8462
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #25, !dbg !8464
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #25, !dbg !8466
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #25, !dbg !8468
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #25, !dbg !8470
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #25, !dbg !8472
  ret void, !dbg !8474
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !8475 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8477, metadata !DIExpression()), !dbg !8479
  call void @llvm.dbg.value(metadata i32 0, metadata !8478, metadata !DIExpression()), !dbg !8479
  call void @llvm.dbg.value(metadata i32 undef, metadata !8478, metadata !DIExpression()), !dbg !8479
  %2 = lshr i32 6684671, %0, !dbg !8480
  %3 = and i32 %2, 1, !dbg !8480
  %4 = or i32 %3, %0, !dbg !8482
  %5 = icmp eq i32 %4, 0, !dbg !8482
  br i1 %5, label %6, label %7, !dbg !8482

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.94, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.95, i32 0, i32 0), i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.96, i32 0, i32 0), i32 noundef 123) #25, !dbg !8483
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.96, i32 0, i32 0), i32 noundef 123) #25, !dbg !8483
  unreachable, !dbg !8483

7:                                                ; preds = %1
  %8 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !8488
  %9 = load i32, i32* %8, align 4, !dbg !8488
  call void @llvm.dbg.value(metadata i32 %9, metadata !8478, metadata !DIExpression()), !dbg !8479
  %10 = shl nuw i32 1, %0, !dbg !8489
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %10) #24, !dbg !8490
  tail call void @arch_irq_enable(i32 noundef %9) #25, !dbg !8491
  ret void, !dbg !8492
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8493 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8495, metadata !DIExpression()), !dbg !8496
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8497
  %3 = or i32 %2, %0, !dbg !8497
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8497
  ret void, !dbg !8498
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #14 !dbg !8499 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8501, metadata !DIExpression()), !dbg !8502
  %2 = icmp slt i32 %0, 32, !dbg !8503
  br i1 %2, label %3, label %5, !dbg !8505

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !8506
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #24, !dbg !8508
  br label %5, !dbg !8509

5:                                                ; preds = %1, %3
  ret void, !dbg !8510
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8511 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8513, metadata !DIExpression()), !dbg !8514
  %2 = xor i32 %0, -1, !dbg !8515
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8515
  %4 = and i32 %3, %2, !dbg !8515
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8515
  ret void, !dbg !8516
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #14 !dbg !8517 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8521, metadata !DIExpression()), !dbg !8523
  call void @llvm.dbg.value(metadata i32 %1, metadata !8522, metadata !DIExpression()), !dbg !8523
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !8524

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !8525
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #24, !dbg !8527
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #24, !dbg !8528
  br label %11, !dbg !8529

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !8530
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #24, !dbg !8531
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #24, !dbg !8532
  br label %11, !dbg !8533

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !8534
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #24, !dbg !8535
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #24, !dbg !8536
  br label %11, !dbg !8537

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !8538
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #24, !dbg !8539
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #24, !dbg !8540
  br label %11, !dbg !8541

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !8542
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8543 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8545, metadata !DIExpression()), !dbg !8546
  %2 = xor i32 %0, -1, !dbg !8547
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8547
  %4 = and i32 %3, %2, !dbg !8547
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8547
  ret void, !dbg !8548
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8549 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8551, metadata !DIExpression()), !dbg !8552
  %2 = xor i32 %0, -1, !dbg !8553
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8553
  %4 = and i32 %3, %2, !dbg !8553
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8553
  ret void, !dbg !8554
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8555 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8557, metadata !DIExpression()), !dbg !8558
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8559
  %3 = or i32 %2, %0, !dbg !8559
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8559
  ret void, !dbg !8560
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8561 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8563, metadata !DIExpression()), !dbg !8564
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8565
  %3 = or i32 %2, %0, !dbg !8565
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8565
  ret void, !dbg !8566
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #9 !dbg !8567 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8571, metadata !DIExpression()), !dbg !8577
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !8572, metadata !DIExpression()), !dbg !8577
  call void @llvm.dbg.value(metadata i8* %2, metadata !8573, metadata !DIExpression()), !dbg !8577
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_37, metadata !8574, metadata !DIExpression()), !dbg !8577
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8576, metadata !DIExpression()), !dbg !8577
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8578
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !8578
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !8580
  br i1 %6, label %7, label %9, !dbg !8581

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !8582
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8583
  store i8* %2, i8** %8, align 4, !dbg !8584
  br label %9, !dbg !8585

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !8577
  ret i32 %10, !dbg !8586
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #7 !dbg !8587 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8589, metadata !DIExpression()), !dbg !8592
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_37, metadata !8590, metadata !DIExpression()), !dbg !8592
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8591, metadata !DIExpression()), !dbg !8592
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8593
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !8594
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8595
  store i8* null, i8** %3, align 4, !dbg !8596
  ret void, !dbg !8597
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #14 !dbg !8598 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8600, metadata !DIExpression()), !dbg !8605
  call void @llvm.dbg.value(metadata i8* %1, metadata !8601, metadata !DIExpression()), !dbg !8605
  call void @llvm.dbg.value(metadata i8* %1, metadata !8602, metadata !DIExpression()), !dbg !8605
  %3 = bitcast i8* %1 to i32*, !dbg !8606
  %4 = load i32, i32* %3, align 4, !dbg !8606
  %5 = add i32 %4, -169, !dbg !8606
  %6 = icmp ult i32 %5, -121, !dbg !8606
  br i1 %6, label %15, label %7, !dbg !8608

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8609
  %9 = inttoptr i32 %8 to i32*, !dbg !8610
  call void @llvm.dbg.value(metadata i32* %9, metadata !8603, metadata !DIExpression()), !dbg !8605
  %10 = load volatile i32, i32* %9, align 4, !dbg !8611
  call void @llvm.dbg.value(metadata i32 %10, metadata !8604, metadata !DIExpression()), !dbg !8605
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8612
  %12 = bitcast i8* %11 to i32*, !dbg !8612
  %13 = load i32, i32* %12, align 4, !dbg !8612
  %14 = or i32 %13, %10, !dbg !8613
  call void @llvm.dbg.value(metadata i32 %14, metadata !8604, metadata !DIExpression()), !dbg !8605
  store volatile i32 %14, i32* %9, align 4, !dbg !8614
  br label %15, !dbg !8615

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8605
  ret i32 %16, !dbg !8616
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #14 !dbg !8617 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8619, metadata !DIExpression()), !dbg !8624
  call void @llvm.dbg.value(metadata i8* %1, metadata !8620, metadata !DIExpression()), !dbg !8624
  call void @llvm.dbg.value(metadata i8* %1, metadata !8621, metadata !DIExpression()), !dbg !8624
  %3 = bitcast i8* %1 to i32*, !dbg !8625
  %4 = load i32, i32* %3, align 4, !dbg !8625
  %5 = add i32 %4, -169, !dbg !8625
  %6 = icmp ult i32 %5, -121, !dbg !8625
  br i1 %6, label %16, label %7, !dbg !8627

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8628
  %9 = inttoptr i32 %8 to i32*, !dbg !8629
  call void @llvm.dbg.value(metadata i32* %9, metadata !8622, metadata !DIExpression()), !dbg !8624
  %10 = load volatile i32, i32* %9, align 4, !dbg !8630
  call void @llvm.dbg.value(metadata i32 %10, metadata !8623, metadata !DIExpression()), !dbg !8624
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8631
  %12 = bitcast i8* %11 to i32*, !dbg !8631
  %13 = load i32, i32* %12, align 4, !dbg !8631
  %14 = xor i32 %13, -1, !dbg !8632
  %15 = and i32 %10, %14, !dbg !8633
  call void @llvm.dbg.value(metadata i32 %15, metadata !8623, metadata !DIExpression()), !dbg !8624
  store volatile i32 %15, i32* %9, align 4, !dbg !8634
  br label %16, !dbg !8635

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8624
  ret i32 %17, !dbg !8636
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !8637 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8639, metadata !DIExpression()), !dbg !8647
  call void @llvm.dbg.value(metadata i8* %1, metadata !8640, metadata !DIExpression()), !dbg !8647
  call void @llvm.dbg.value(metadata i32* %2, metadata !8641, metadata !DIExpression()), !dbg !8647
  call void @llvm.dbg.value(metadata i8* %1, metadata !8642, metadata !DIExpression()), !dbg !8647
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !8648
  call void @llvm.dbg.value(metadata i32 %4, metadata !8643, metadata !DIExpression()), !dbg !8647
  call void @llvm.dbg.value(metadata i32 undef, metadata !8644, metadata !DIExpression()), !dbg !8647
  call void @llvm.dbg.value(metadata i32 undef, metadata !8645, metadata !DIExpression()), !dbg !8647
  call void @llvm.dbg.value(metadata i32 %4, metadata !8646, metadata !DIExpression()), !dbg !8647
  %5 = bitcast i8* %1 to i32*, !dbg !8649
  %6 = load i32, i32* %5, align 4, !dbg !8649
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !8650

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 4) #24, !dbg !8651
  call void @llvm.dbg.value(metadata i32 %8, metadata !8644, metadata !DIExpression()), !dbg !8647
  br label %19, !dbg !8652

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #24, !dbg !8654
  call void @llvm.dbg.value(metadata i32 %10, metadata !8645, metadata !DIExpression()), !dbg !8647
  br label %19, !dbg !8655

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #25, !dbg !8656
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 2) #24, !dbg !8657
  br label %19, !dbg !8658

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #25, !dbg !8659
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 7) #24, !dbg !8660
  br label %19, !dbg !8661

17:                                               ; preds = %3
  br label %19, !dbg !8662

18:                                               ; preds = %3
  br label %19, !dbg !8663

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 32000, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !8664
  br label %21, !dbg !8665

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !8647
  ret i32 %22, !dbg !8665
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #14 !dbg !8666 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8668, metadata !DIExpression()), !dbg !8676
  call void @llvm.dbg.value(metadata i8* %1, metadata !8669, metadata !DIExpression()), !dbg !8676
  call void @llvm.dbg.value(metadata i8* %2, metadata !8670, metadata !DIExpression()), !dbg !8676
  call void @llvm.dbg.value(metadata i8* %1, metadata !8671, metadata !DIExpression()), !dbg !8676
  %4 = bitcast i8* %1 to i32*, !dbg !8677
  %5 = load i32, i32* %4, align 4, !dbg !8677
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #24, !dbg !8678
  call void @llvm.dbg.value(metadata i32 %6, metadata !8675, metadata !DIExpression()), !dbg !8676
  %7 = icmp slt i32 %6, 0, !dbg !8679
  br i1 %7, label %22, label %8, !dbg !8681

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8671, metadata !DIExpression()), !dbg !8676
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8682
  %10 = bitcast i8* %9 to i32*, !dbg !8682
  %11 = load i32, i32* %10, align 4, !dbg !8682
  %12 = lshr i32 %11, 16, !dbg !8682
  %13 = and i32 %12, 7, !dbg !8682
  %14 = lshr i32 %11, 8, !dbg !8683
  %15 = and i32 %14, 31, !dbg !8683
  %16 = shl i32 %13, %15, !dbg !8684
  call void @llvm.dbg.value(metadata i32 %16, metadata !8674, metadata !DIExpression()), !dbg !8676
  %17 = and i32 %11, 255, !dbg !8685
  %18 = or i32 %17, 1073887232, !dbg !8686
  %19 = inttoptr i32 %18 to i32*, !dbg !8687
  call void @llvm.dbg.value(metadata i32* %19, metadata !8672, metadata !DIExpression()), !dbg !8676
  %20 = load volatile i32, i32* %19, align 4, !dbg !8688
  call void @llvm.dbg.value(metadata i32 %20, metadata !8673, metadata !DIExpression()), !dbg !8676
  %21 = or i32 %16, %20, !dbg !8689
  call void @llvm.dbg.value(metadata i32 %21, metadata !8673, metadata !DIExpression()), !dbg !8676
  store volatile i32 %21, i32* %19, align 4, !dbg !8690
  br label %22, !dbg !8691

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !8676
  ret i32 %23, !dbg !8692
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #3 !dbg !8693 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8697, metadata !DIExpression()), !dbg !8699
  call void @llvm.dbg.value(metadata i32 0, metadata !8698, metadata !DIExpression()), !dbg !8699
  %2 = add i32 %0, -1, !dbg !8700
  %3 = icmp ult i32 %2, 6, !dbg !8700
  br i1 %3, label %4, label %7, !dbg !8700

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !8700
  %6 = load i32, i32* %5, align 4, !dbg !8700
  call void @llvm.dbg.value(metadata i32 %6, metadata !8698, metadata !DIExpression()), !dbg !8699
  br label %7, !dbg !8701

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !8699
  ret i32 %8, !dbg !8702
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !8703 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8707, metadata !DIExpression()), !dbg !8709
  call void @llvm.dbg.value(metadata i32 %1, metadata !8708, metadata !DIExpression()), !dbg !8709
  %3 = udiv i32 %0, %1, !dbg !8710
  ret i32 %3, !dbg !8711
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !8712 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8716, metadata !DIExpression()), !dbg !8720
  call void @llvm.dbg.value(metadata i32 12, metadata !8717, metadata !DIExpression()), !dbg !8720
  call void @llvm.dbg.value(metadata i32 336, metadata !8718, metadata !DIExpression()), !dbg !8720
  call void @llvm.dbg.value(metadata i32 %1, metadata !8719, metadata !DIExpression()), !dbg !8720
  %3 = mul i32 %0, 336, !dbg !8721
  %4 = mul nsw i32 %1, 12, !dbg !8722
  %5 = udiv i32 %3, %4, !dbg !8723
  ret i32 %5, !dbg !8724
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !8725 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !8727, metadata !DIExpression()), !dbg !8730
  tail call void @config_enable_default_clocks() #25, !dbg !8731
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !8732
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #24, !dbg !8732
  %4 = lshr i32 %3, 4, !dbg !8732
  %5 = and i32 %4, 15, !dbg !8732
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !8732
  %7 = load i8, i8* %6, align 1, !dbg !8732
  %8 = zext i8 %7 to i32, !dbg !8732
  %9 = lshr i32 %2, %8, !dbg !8732
  call void @llvm.dbg.value(metadata i32 %9, metadata !8728, metadata !DIExpression()), !dbg !8730
  call void @llvm.dbg.value(metadata !DIArgList(i32 168000000, i8 undef), metadata !8729, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !8730
  %10 = icmp ult i32 %9, 168000000, !dbg !8733
  br i1 %10, label %11, label %13, !dbg !8735

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 168000000) #25, !dbg !8736
  br label %13, !dbg !8738

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #24, !dbg !8739
  tail call fastcc void @set_up_plls() #24, !dbg !8740
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !8741
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #24, !dbg !8744
  br label %14, !dbg !8745

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !8746
  %16 = icmp eq i32 %15, 8, !dbg !8747
  br i1 %16, label %17, label %14, !dbg !8745, !llvm.loop !8748

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 167999999, !dbg !8750
  br i1 %18, label %19, label %21, !dbg !8752

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 168000000) #25, !dbg !8753
  br label %21, !dbg !8755

21:                                               ; preds = %19, %17
  store i32 168000000, i32* @SystemCoreClock, align 4, !dbg !8756
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #24, !dbg !8757
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #24, !dbg !8758
  ret i32 0, !dbg !8759
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #15 !dbg !8760 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8762
  %2 = and i32 %1, 240, !dbg !8762
  ret i32 %2, !dbg !8763
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #14 !dbg !8764 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #24, !dbg !8765
  tail call fastcc void @LL_RCC_HSE_Enable() #24, !dbg !8770
  br label %1, !dbg !8771

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #24, !dbg !8772
  %3 = icmp eq i32 %2, 1, !dbg !8773
  br i1 %3, label %4, label %1, !dbg !8771, !llvm.loop !8774

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #24, !dbg !8776
  br label %5, !dbg !8779

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #24, !dbg !8780
  %7 = icmp eq i32 %6, 1, !dbg !8781
  br i1 %7, label %8, label %5, !dbg !8779, !llvm.loop !8782

8:                                                ; preds = %5
  ret void, !dbg !8784
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !8785 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !8786
  %2 = icmp eq i32 %1, 8, !dbg !8788
  br i1 %2, label %3, label %4, !dbg !8789

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !8790
  tail call fastcc void @stm32_clock_switch_to_hsi() #24, !dbg !8792
  br label %4, !dbg !8793

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #24, !dbg !8794
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8795
  %6 = and i32 %5, -196609, !dbg !8795
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8795
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8796
  %8 = and i32 %7, -251658241, !dbg !8796
  %9 = or i32 %8, 117440512, !dbg !8796
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8796
  tail call void @config_pll_sysclock() #25, !dbg !8797
  tail call fastcc void @LL_RCC_PLL_Enable() #24, !dbg !8798
  br label %10, !dbg !8799

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #24, !dbg !8800
  %12 = icmp eq i32 %11, 1, !dbg !8801
  br i1 %12, label %13, label %10, !dbg !8799, !llvm.loop !8802

13:                                               ; preds = %10
  ret void, !dbg !8804
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #14 !dbg !8805 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8807, metadata !DIExpression()), !dbg !8808
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8809
  %2 = and i32 %1, -241, !dbg !8809
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8809
  ret void, !dbg !8810
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #14 !dbg !8811 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8813, metadata !DIExpression()), !dbg !8814
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8815
  %3 = and i32 %2, -4, !dbg !8815
  %4 = or i32 %3, %0, !dbg !8815
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8815
  ret void, !dbg !8816
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #15 !dbg !8817 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8818
  %2 = and i32 %1, 12, !dbg !8818
  ret i32 %2, !dbg !8819
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #14 !dbg !8820 {
  call void @llvm.dbg.value(metadata i32 5120, metadata !8822, metadata !DIExpression()), !dbg !8823
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8824
  %2 = and i32 %1, -7169, !dbg !8824
  %3 = or i32 %2, 5120, !dbg !8824
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8824
  ret void, !dbg !8825
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #14 !dbg !8826 {
  call void @llvm.dbg.value(metadata i32 32768, metadata !8828, metadata !DIExpression()), !dbg !8829
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8830
  %2 = and i32 %1, -57345, !dbg !8830
  %3 = or i32 %2, 32768, !dbg !8830
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8830
  ret void, !dbg !8831
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #14 !dbg !8832 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !8833
  %2 = icmp eq i32 %1, 1, !dbg !8835
  br i1 %2, label %7, label %3, !dbg !8836

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #24, !dbg !8837
  br label %4, !dbg !8839

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !8840
  %6 = icmp eq i32 %5, 1, !dbg !8841
  br i1 %6, label %7, label %4, !dbg !8839, !llvm.loop !8842

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #24, !dbg !8844
  br label %8, !dbg !8845

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !8846
  %10 = icmp eq i32 %9, 0, !dbg !8847
  br i1 %10, label %11, label %8, !dbg !8845, !llvm.loop !8848

11:                                               ; preds = %8
  ret void, !dbg !8850
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #14 !dbg !8851 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8852
  %2 = and i32 %1, -16777217, !dbg !8852
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8852
  ret void, !dbg !8853
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #14 !dbg !8854 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8855
  %2 = or i32 %1, 16777216, !dbg !8855
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8855
  ret void, !dbg !8856
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #15 !dbg !8857 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8858
  %2 = lshr i32 %1, 25, !dbg !8859
  %3 = and i32 %2, 1, !dbg !8859
  ret i32 %3, !dbg !8860
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #15 !dbg !8861 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8862
  %2 = lshr i32 %1, 1, !dbg !8863
  %3 = and i32 %2, 1, !dbg !8863
  ret i32 %3, !dbg !8864
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #14 !dbg !8865 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8866
  %2 = or i32 %1, 1, !dbg !8866
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8866
  ret void, !dbg !8867
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #14 !dbg !8868 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8869
  %2 = and i32 %1, -262145, !dbg !8869
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8869
  ret void, !dbg !8870
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #14 !dbg !8871 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8872
  %2 = or i32 %1, 65536, !dbg !8872
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8872
  ret void, !dbg !8873
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #15 !dbg !8874 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8875
  %2 = lshr i32 %1, 17, !dbg !8876
  %3 = and i32 %2, 1, !dbg !8876
  ret i32 %3, !dbg !8877
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #14 !dbg !8878 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8879
  %2 = or i32 %1, 1, !dbg !8879
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8879
  ret void, !dbg !8880
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #15 !dbg !8881 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8882
  %2 = lshr i32 %1, 1, !dbg !8883
  %3 = and i32 %2, 1, !dbg !8883
  ret i32 %3, !dbg !8884
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #3 !dbg !8885 {
  ret i32 12000000, !dbg !8887
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #14 !dbg !8891 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #24, !dbg !8892
  ret void, !dbg !8893
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #14 !dbg !8894 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !8898, metadata !DIExpression()), !dbg !8902
  call void @llvm.dbg.value(metadata i32 12, metadata !8899, metadata !DIExpression()), !dbg !8902
  call void @llvm.dbg.value(metadata i32 336, metadata !8900, metadata !DIExpression()), !dbg !8902
  call void @llvm.dbg.value(metadata i32 0, metadata !8901, metadata !DIExpression()), !dbg !8902
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8903
  %2 = and i32 %1, -4227072, !dbg !8903
  %3 = or i32 %2, 4215820, !dbg !8903
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8903
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8904
  %5 = and i32 %4, -196609, !dbg !8904
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8904
  ret void, !dbg !8905
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #19 !dbg !8906 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #24, !dbg !8907
  ret void, !dbg !8908
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #19 !dbg !8909 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !8912, metadata !DIExpression()), !dbg !8914
  %2 = bitcast i32* %1 to i8*, !dbg !8915
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !8915
  call void @llvm.dbg.declare(metadata i32* %1, metadata !8913, metadata !DIExpression()), !dbg !8916
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8917
  %4 = or i32 %3, 268435456, !dbg !8917
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8917
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8918
  %6 = and i32 %5, 268435456, !dbg !8918
  store volatile i32 %6, i32* %1, align 4, !dbg !8919
  %7 = load volatile i32, i32* %1, align 4, !dbg !8920
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !8921
  ret void, !dbg !8921
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8922 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8924, metadata !DIExpression()), !dbg !8925
  %2 = tail call fastcc zeroext i1 @device_is_ready() #24, !dbg !8926
  br i1 %2, label %3, label %4, !dbg !8928

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #24, !dbg !8929
  br label %4, !dbg !8930

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !8925
  ret i32 %5, !dbg !8931
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !8932 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8937, metadata !DIExpression()), !dbg !8938
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8939, !srcloc !8941
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #24, !dbg !8942
  ret i1 %1, !dbg !8943
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !8944 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !8945
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !8946
  ret void, !dbg !8947
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !8948 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8950, metadata !DIExpression()), !dbg !8951
  %2 = icmp eq i32 %0, 10, !dbg !8952
  br i1 %2, label %3, label %4, !dbg !8954

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #24, !dbg !8955
  br label %4, !dbg !8957

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !8958
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #24, !dbg !8959
  ret i32 %0, !dbg !8960
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8961 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8964, metadata !DIExpression()), !dbg !8966
  call void @llvm.dbg.value(metadata i8 %0, metadata !8965, metadata !DIExpression()), !dbg !8966
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8967, !srcloc !8969
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #24, !dbg !8970
  ret void, !dbg !8971
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8972 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8974, metadata !DIExpression()), !dbg !8977
  call void @llvm.dbg.value(metadata i8 %0, metadata !8975, metadata !DIExpression()), !dbg !8977
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8978
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !8976, metadata !DIExpression()), !dbg !8977
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !8979
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !8979
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_45, i8 noundef zeroext %0) #25, !dbg !8980
  ret void, !dbg !8981
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !8982 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8984, metadata !DIExpression()), !dbg !8985
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_45) #25, !dbg !8986
  ret i1 %1, !dbg !8987
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #3 !dbg !8988 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !9037, metadata !DIExpression()), !dbg !9040
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !9038, metadata !DIExpression()), !dbg !9040
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !9039, metadata !DIExpression()), !dbg !9040
  ret void, !dbg !9041
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !9042 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9044, metadata !DIExpression()), !dbg !9049
  call void @llvm.dbg.value(metadata i8 %1, metadata !9045, metadata !DIExpression()), !dbg !9049
  call void @llvm.dbg.value(metadata i32 %2, metadata !9046, metadata !DIExpression()), !dbg !9049
  %5 = bitcast i32* %4 to i8*, !dbg !9050
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9050
  call void @llvm.dbg.value(metadata i32* %4, metadata !9048, metadata !DIExpression(DW_OP_deref)), !dbg !9049
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #24, !dbg !9051
  call void @llvm.dbg.value(metadata i32 %6, metadata !9047, metadata !DIExpression()), !dbg !9049
  %7 = icmp eq i32 %6, 0, !dbg !9052
  br i1 %7, label %8, label %31, !dbg !9054

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !9047, metadata !DIExpression()), !dbg !9049
  %9 = and i32 %2, 131072, !dbg !9055
  %10 = icmp eq i32 %9, 0, !dbg !9057
  br i1 %10, label %28, label %11, !dbg !9058

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !9059
  %13 = icmp eq i32 %12, 0, !dbg !9062
  br i1 %13, label %18, label %14, !dbg !9063

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !9064
  %16 = shl nuw i32 1, %15, !dbg !9064
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #24, !dbg !9066
  br label %25, !dbg !9067

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !9068
  %20 = icmp eq i32 %19, 0, !dbg !9070
  %21 = zext i8 %1 to i32, !dbg !9049
  br i1 %20, label %25, label %22, !dbg !9071

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !9072
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #24, !dbg !9074
  br label %25, !dbg !9075

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !9076
  %27 = load i32, i32* %4, align 4, !dbg !9077
  call void @llvm.dbg.value(metadata i32 %30, metadata !9048, metadata !DIExpression()), !dbg !9049
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #24, !dbg !9078
  br label %31, !dbg !9079

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !9076
  %30 = load i32, i32* %4, align 4, !dbg !9077
  call void @llvm.dbg.value(metadata i32 %30, metadata !9048, metadata !DIExpression()), !dbg !9049
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #24, !dbg !9078
  call void @llvm.dbg.value(metadata i32 0, metadata !9047, metadata !DIExpression()), !dbg !9049
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9080
  ret i32 %6, !dbg !9080
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #15 !dbg !9081 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9085, metadata !DIExpression()), !dbg !9090
  call void @llvm.dbg.value(metadata i32* %1, metadata !9086, metadata !DIExpression()), !dbg !9090
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9091
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9091
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9091
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9087, metadata !DIExpression()), !dbg !9090
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9092
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9092
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9092
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9089, metadata !DIExpression()), !dbg !9090
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #24, !dbg !9093
  store i32 %9, i32* %1, align 4, !dbg !9094
  ret i32 0, !dbg !9095
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #14 !dbg !9096 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9098, metadata !DIExpression()), !dbg !9104
  call void @llvm.dbg.value(metadata i32 %1, metadata !9099, metadata !DIExpression()), !dbg !9104
  call void @llvm.dbg.value(metadata i32 %2, metadata !9100, metadata !DIExpression()), !dbg !9104
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9105
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !9105
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !9105
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !9101, metadata !DIExpression()), !dbg !9104
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !9106
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !9106
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !9106
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !9102, metadata !DIExpression()), !dbg !9104
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #24, !dbg !9107
  call void @llvm.dbg.value(metadata i32 %10, metadata !9103, metadata !DIExpression()), !dbg !9104
  %11 = xor i32 %1, -1, !dbg !9108
  %12 = and i32 %10, %11, !dbg !9109
  %13 = and i32 %2, %1, !dbg !9110
  %14 = or i32 %12, %13, !dbg !9111
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #24, !dbg !9112
  ret i32 0, !dbg !9113
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !9114 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9116, metadata !DIExpression()), !dbg !9120
  call void @llvm.dbg.value(metadata i32 %1, metadata !9117, metadata !DIExpression()), !dbg !9120
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9121
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9121
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9121
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9118, metadata !DIExpression()), !dbg !9120
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9122
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9122
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9122
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9119, metadata !DIExpression()), !dbg !9120
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !9123
  store volatile i32 %1, i32* %9, align 4, !dbg !9123
  ret i32 0, !dbg !9124
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !9125 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9127, metadata !DIExpression()), !dbg !9131
  call void @llvm.dbg.value(metadata i32 %1, metadata !9128, metadata !DIExpression()), !dbg !9131
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9132
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9132
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9132
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9129, metadata !DIExpression()), !dbg !9131
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9133
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9133
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9133
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9130, metadata !DIExpression()), !dbg !9131
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #24, !dbg !9134
  ret i32 0, !dbg !9135
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !9136 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9138, metadata !DIExpression()), !dbg !9142
  call void @llvm.dbg.value(metadata i32 %1, metadata !9139, metadata !DIExpression()), !dbg !9142
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9143
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9143
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9143
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9140, metadata !DIExpression()), !dbg !9142
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9144
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9144
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9144
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9141, metadata !DIExpression()), !dbg !9142
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !9145
  %10 = load volatile i32, i32* %9, align 4, !dbg !9145
  %11 = xor i32 %10, %1, !dbg !9145
  store volatile i32 %11, i32* %9, align 4, !dbg !9145
  ret i32 0, !dbg !9146
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !9147 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9149, metadata !DIExpression()), !dbg !9159
  call void @llvm.dbg.value(metadata i8 %1, metadata !9150, metadata !DIExpression()), !dbg !9159
  call void @llvm.dbg.value(metadata i32 %2, metadata !9151, metadata !DIExpression()), !dbg !9159
  call void @llvm.dbg.value(metadata i32 %3, metadata !9152, metadata !DIExpression()), !dbg !9159
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9160
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9160
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9160
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9153, metadata !DIExpression()), !dbg !9159
  call void @llvm.dbg.value(metadata i8* undef, metadata !9154, metadata !DIExpression()), !dbg !9159
  call void @llvm.dbg.value(metadata i32 0, metadata !9156, metadata !DIExpression()), !dbg !9159
  call void @llvm.dbg.value(metadata i32 0, metadata !9157, metadata !DIExpression()), !dbg !9159
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !9161

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !9162
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #24, !dbg !9166
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9167
  %12 = load i32, i32* %11, align 4, !dbg !9167
  %13 = icmp eq i32 %10, %12, !dbg !9168
  br i1 %13, label %14, label %29, !dbg !9169

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #25, !dbg !9170
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #25, !dbg !9172
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #25, !dbg !9173
  br label %29, !dbg !9174

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9175
  %17 = load i8*, i8** %16, align 4, !dbg !9175
  call void @llvm.dbg.value(metadata i8* %17, metadata !9154, metadata !DIExpression()), !dbg !9159
  %18 = zext i8 %1 to i32, !dbg !9176
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #25, !dbg !9178
  %20 = icmp eq i32 %19, 0, !dbg !9179
  br i1 %20, label %21, label %29, !dbg !9180

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9181
  %23 = load i32, i32* %22, align 4, !dbg !9181
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #24, !dbg !9182
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !9183

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !9156, metadata !DIExpression()), !dbg !9159
  br label %27, !dbg !9184

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !9156, metadata !DIExpression()), !dbg !9159
  br label %27, !dbg !9186

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !9156, metadata !DIExpression()), !dbg !9159
  br label %27, !dbg !9187

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !9159
  call void @llvm.dbg.value(metadata i32 %28, metadata !9156, metadata !DIExpression()), !dbg !9159
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #25, !dbg !9188
  tail call void @stm32_exti_enable(i32 noundef %18) #25, !dbg !9189
  br label %29, !dbg !9189

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !9159
  call void @llvm.dbg.value(metadata i32 %30, metadata !9157, metadata !DIExpression()), !dbg !9159
  call void @llvm.dbg.label(metadata !9158), !dbg !9190
  ret i32 %30, !dbg !9191
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !9192 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9194, metadata !DIExpression()), !dbg !9198
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9195, metadata !DIExpression()), !dbg !9198
  call void @llvm.dbg.value(metadata i1 %2, metadata !9196, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9198
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9199
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !9199
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !9199
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !9197, metadata !DIExpression()), !dbg !9198
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !9200
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #24, !dbg !9201
  ret i32 %8, !dbg !9202
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #1 !dbg !9203 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9209, metadata !DIExpression()), !dbg !9212
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9210, metadata !DIExpression()), !dbg !9212
  call void @llvm.dbg.value(metadata i1 %2, metadata !9211, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9212
  %4 = icmp eq %struct.gpio_callback* %1, null, !dbg !9213
  br i1 %4, label %5, label %6, !dbg !9216

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.107, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.35.108, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.33.109, i32 0, i32 0), i32 noundef 42) #25, !dbg !9217
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.36.110, i32 0, i32 0)) #25, !dbg !9217
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.33.109, i32 0, i32 0), i32 noundef 42) #25, !dbg !9217
  unreachable, !dbg !9217

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 1, !dbg !9219
  %8 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %7, align 4, !dbg !9219
  %9 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %8, null, !dbg !9219
  br i1 %9, label %10, label %11, !dbg !9222

10:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.107, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.37.111, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.33.109, i32 0, i32 0), i32 noundef 43) #25, !dbg !9223
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.34.112, i32 0, i32 0)) #25, !dbg !9223
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.33.109, i32 0, i32 0), i32 noundef 43) #25, !dbg !9223
  unreachable, !dbg !9223

11:                                               ; preds = %6
  %12 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #24, !dbg !9225
  br i1 %12, label %18, label %13, !dbg !9227

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9228
  %15 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef nonnull %14) #24, !dbg !9231
  %16 = or i1 %15, %2, !dbg !9232
  %17 = select i1 %16, i32 0, i32 -22, !dbg !9232
  br i1 %2, label %19, label %21, !dbg !9232

18:                                               ; preds = %11
  br i1 %2, label %19, label %21, !dbg !9233

19:                                               ; preds = %18, %13
  %20 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9234
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef nonnull %20) #24, !dbg !9237
  br label %21, !dbg !9238

21:                                               ; preds = %13, %19, %18
  %22 = phi i32 [ %17, %13 ], [ -22, %18 ], [ 0, %19 ], !dbg !9212
  ret i32 %22, !dbg !9239
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !9240 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9244, metadata !DIExpression()), !dbg !9245
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9246
  %3 = icmp eq %struct._snode* %2, null, !dbg !9246
  ret i1 %3, !dbg !9246
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #13 !dbg !9247 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9251, metadata !DIExpression()), !dbg !9255
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9252, metadata !DIExpression()), !dbg !9255
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9253, metadata !DIExpression()), !dbg !9255
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9256
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9254, metadata !DIExpression()), !dbg !9255
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9253, metadata !DIExpression()), !dbg !9255
  %4 = icmp eq %struct._snode* %3, null, !dbg !9258
  br i1 %4, label %15, label %5, !dbg !9256

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9254, metadata !DIExpression()), !dbg !9255
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9253, metadata !DIExpression()), !dbg !9255
  %6 = icmp eq %struct._snode* %3, %1, !dbg !9260
  br i1 %6, label %9, label %11, !dbg !9263

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9254, metadata !DIExpression()), !dbg !9255
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9253, metadata !DIExpression()), !dbg !9255
  %8 = icmp eq %struct._snode* %13, %1, !dbg !9260
  br i1 %8, label %9, label %11, !dbg !9263, !llvm.loop !9264

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #24, !dbg !9265
  br label %15, !dbg !9265

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9254, metadata !DIExpression()), !dbg !9255
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9253, metadata !DIExpression()), !dbg !9255
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #24, !dbg !9258
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9254, metadata !DIExpression()), !dbg !9255
  %14 = icmp eq %struct._snode* %13, null, !dbg !9258
  br i1 %14, label %15, label %7, !dbg !9256, !llvm.loop !9264

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !9267
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !9268 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9272, metadata !DIExpression()), !dbg !9274
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9273, metadata !DIExpression()), !dbg !9274
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9275
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #24, !dbg !9275
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #24, !dbg !9275
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !9276
  %5 = icmp eq %struct._snode* %4, null, !dbg !9276
  br i1 %5, label %6, label %8, !dbg !9275

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9278
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #24, !dbg !9278
  br label %8, !dbg !9278

8:                                                ; preds = %6, %2
  ret void, !dbg !9275
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !9280 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9284, metadata !DIExpression()), !dbg !9285
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9286
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9286
  ret %struct._snode* %3, !dbg !9287
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !9288 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9292, metadata !DIExpression()), !dbg !9294
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9293, metadata !DIExpression()), !dbg !9294
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9295
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9296
  ret void, !dbg !9297
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !9298 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9300, metadata !DIExpression()), !dbg !9302
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9301, metadata !DIExpression()), !dbg !9302
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9303
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9304
  ret void, !dbg !9305
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !9306 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9308, metadata !DIExpression()), !dbg !9309
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9310
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9310
  ret %struct._snode* %3, !dbg !9311
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !9312 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9314, metadata !DIExpression()), !dbg !9316
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9315, metadata !DIExpression()), !dbg !9316
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9317
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9318
  ret void, !dbg !9319
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #9 !dbg !9320 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9324, metadata !DIExpression()), !dbg !9327
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9325, metadata !DIExpression()), !dbg !9327
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !9326, metadata !DIExpression()), !dbg !9327
  %4 = icmp eq %struct._snode* %1, null, !dbg !9328
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #24, !dbg !9330
  br i1 %4, label %6, label %11, !dbg !9331

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #24, !dbg !9332
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !9334
  %8 = icmp eq %struct._snode* %7, %2, !dbg !9334
  br i1 %8, label %9, label %15, !dbg !9332

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9336
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #24, !dbg !9336
  br label %15, !dbg !9336

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #24, !dbg !9338
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !9340
  %13 = icmp eq %struct._snode* %12, %2, !dbg !9340
  br i1 %13, label %14, label %15, !dbg !9338

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #24, !dbg !9342
  br label %15, !dbg !9342

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #24, !dbg !9331
  ret void, !dbg !9331
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #8 !dbg !9344 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9348, metadata !DIExpression()), !dbg !9349
  %2 = icmp eq %struct._snode* %0, null, !dbg !9350
  br i1 %2, label %5, label %3, !dbg !9350

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #24, !dbg !9350
  br label %5, !dbg !9350

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !9350
  ret %struct._snode* %6, !dbg !9350
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !9351 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9353, metadata !DIExpression()), !dbg !9354
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #24, !dbg !9355
  ret %struct._snode* %2, !dbg !9355
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !9356 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9358, metadata !DIExpression()), !dbg !9359
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9360
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9360
  ret %struct._snode* %3, !dbg !9361
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !9362 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9364, metadata !DIExpression()), !dbg !9367
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #24, !dbg !9368, !range !9369
  call void @llvm.dbg.value(metadata i32 %2, metadata !9365, metadata !DIExpression()), !dbg !9367
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #24, !dbg !9370
  call void @llvm.dbg.value(metadata i32 %3, metadata !9366, metadata !DIExpression()), !dbg !9367
  ret i32 %3, !dbg !9371
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !9372 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9374, metadata !DIExpression()), !dbg !9377
  call void @llvm.dbg.value(metadata i8* %1, metadata !9375, metadata !DIExpression()), !dbg !9377
  call void @llvm.dbg.value(metadata i8* %1, metadata !9376, metadata !DIExpression()), !dbg !9377
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !9378
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !9378
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9379
  %6 = bitcast i8* %5 to %struct.device**, !dbg !9379
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !9379
  %8 = shl nuw i32 1, %0, !dbg !9380
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #24, !dbg !9381
  ret void, !dbg !9382
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9383 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !9387, metadata !DIExpression()), !dbg !9393
  call void @llvm.dbg.value(metadata i32 %1, metadata !9388, metadata !DIExpression()), !dbg !9393
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9389, metadata !DIExpression()), !dbg !9393
  %4 = bitcast i64* %3 to i8*, !dbg !9394
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !9394
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !9391, metadata !DIExpression()), !dbg !9393
  store i64 70368744177732, i64* %3, align 8, !dbg !9395
  call void @llvm.dbg.value(metadata i64* %3, metadata !9391, metadata !DIExpression(DW_OP_deref)), !dbg !9393
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #24, !dbg !9396
  call void @llvm.dbg.value(metadata i32 %5, metadata !9392, metadata !DIExpression()), !dbg !9393
  %6 = icmp eq i32 %5, 0, !dbg !9397
  br i1 %6, label %7, label %8, !dbg !9399

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #24, !dbg !9400
  br label %8, !dbg !9401

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !9402
  ret void, !dbg !9402
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !9403 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9405, metadata !DIExpression()), !dbg !9408
  call void @llvm.dbg.value(metadata i8* %0, metadata !9406, metadata !DIExpression()), !dbg !9408
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_9, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !9409
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !9407, metadata !DIExpression()), !dbg !9408
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !9410
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !9410
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_9, i8* noundef %0) #25, !dbg !9411
  ret i32 %5, !dbg !9412
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9413 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9415, metadata !DIExpression()), !dbg !9418
  call void @llvm.dbg.value(metadata i32 %1, metadata !9416, metadata !DIExpression()), !dbg !9418
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #24, !dbg !9419
  call void @llvm.dbg.value(metadata i32 %3, metadata !9417, metadata !DIExpression()), !dbg !9418
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #24, !dbg !9420
  ret void, !dbg !9421
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #3 !dbg !9422 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9426, metadata !DIExpression()), !dbg !9427
  %2 = sdiv i32 %0, 4, !dbg !9428
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !9429
  %6 = add nsw i32 %5, 16, !dbg !9430
  %7 = shl i32 15, %6, !dbg !9431
  %8 = or i32 %7, %2, !dbg !9432
  ret i32 %8, !dbg !9433
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9434 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9438, metadata !DIExpression()), !dbg !9440
  call void @llvm.dbg.value(metadata i32 %1, metadata !9439, metadata !DIExpression()), !dbg !9440
  %3 = and i32 %1, 255, !dbg !9441
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !9441
  %5 = load volatile i32, i32* %4, align 4, !dbg !9441
  %6 = lshr i32 %1, 16, !dbg !9441
  %7 = xor i32 %6, -1, !dbg !9441
  %8 = and i32 %5, %7, !dbg !9441
  call void @llvm.dbg.value(metadata i32 %6, metadata !9442, metadata !DIExpression()) #23, !dbg !9446
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !9448, !srcloc !9449
  call void @llvm.dbg.value(metadata i32 %9, metadata !9445, metadata !DIExpression()) #23, !dbg !9446
  call void @llvm.dbg.value(metadata i32 %9, metadata !9450, metadata !DIExpression()) #23, !dbg !9455
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #23, !dbg !9457, !range !7618
  %11 = shl i32 %0, %10, !dbg !9441
  %12 = or i32 %11, %8, !dbg !9441
  store volatile i32 %12, i32* %4, align 4, !dbg !9441
  ret void, !dbg !9458
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9459 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9463, metadata !DIExpression()), !dbg !9468
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !9464, metadata !DIExpression()), !dbg !9468
  call void @llvm.dbg.value(metadata i32 %2, metadata !9465, metadata !DIExpression()), !dbg !9468
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9469
  %5 = icmp eq %struct._snode* %4, null, !dbg !9469
  br i1 %5, label %24, label %6, !dbg !9469

6:                                                ; preds = %3, %22
  %7 = phi %struct._snode* [ %8, %22 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #24, !dbg !9471
  %9 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9467, metadata !DIExpression()), !dbg !9468
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %9, metadata !9466, metadata !DIExpression()), !dbg !9468
  %10 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !9472
  %11 = bitcast %struct._snode* %10 to i32*, !dbg !9472
  %12 = load i32, i32* %11, align 4, !dbg !9472
  %13 = and i32 %12, %2, !dbg !9476
  %14 = icmp eq i32 %13, 0, !dbg !9476
  br i1 %14, label %22, label %15, !dbg !9477

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !9478
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !9478
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !9478
  %19 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %18, null, !dbg !9478
  br i1 %19, label %20, label %21, !dbg !9482

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.107, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.32.113, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.33.109, i32 0, i32 0), i32 noundef 77) #25, !dbg !9483
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.34.112, i32 0, i32 0)) #25, !dbg !9483
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.33.109, i32 0, i32 0), i32 noundef 77) #25, !dbg !9483
  unreachable, !dbg !9483

21:                                               ; preds = %15
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %9, i32 noundef %13) #25, !dbg !9485
  br label %22, !dbg !9486

22:                                               ; preds = %6, %21
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9466, metadata !DIExpression()), !dbg !9468
  %23 = icmp eq %struct._snode* %8, null, !dbg !9487
  br i1 %23, label %24, label %6, !dbg !9487

24:                                               ; preds = %22, %3
  ret void, !dbg !9488
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !9489 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9491, metadata !DIExpression()), !dbg !9492
  %2 = and i32 %0, 255, !dbg !9493
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !9493
  %4 = load volatile i32, i32* %3, align 4, !dbg !9493
  %5 = lshr i32 %0, 16, !dbg !9493
  %6 = and i32 %4, %5, !dbg !9493
  call void @llvm.dbg.value(metadata i32 %5, metadata !9442, metadata !DIExpression()) #23, !dbg !9494
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #28, !dbg !9496, !srcloc !9449
  call void @llvm.dbg.value(metadata i32 %7, metadata !9445, metadata !DIExpression()) #23, !dbg !9494
  call void @llvm.dbg.value(metadata i32 %7, metadata !9450, metadata !DIExpression()) #23, !dbg !9497
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !9499, !range !7618
  %9 = lshr i32 %6, %8, !dbg !9500
  ret i32 %9, !dbg !9501
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !9502 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9507, metadata !DIExpression()), !dbg !9509
  call void @llvm.dbg.value(metadata i32 %1, metadata !9508, metadata !DIExpression()), !dbg !9509
  %3 = shl i32 %1, 16, !dbg !9510
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !9510
  store volatile i32 %3, i32* %4, align 4, !dbg !9510
  ret void, !dbg !9511
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #15 !dbg !9512 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9516, metadata !DIExpression()), !dbg !9517
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9518
  %3 = load volatile i32, i32* %2, align 4, !dbg !9518
  ret i32 %3, !dbg !9519
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !9520 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9522, metadata !DIExpression()), !dbg !9524
  call void @llvm.dbg.value(metadata i32 %1, metadata !9523, metadata !DIExpression()), !dbg !9524
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9525
  store volatile i32 %1, i32* %3, align 4, !dbg !9525
  ret void, !dbg !9526
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #15 !dbg !9527 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9529, metadata !DIExpression()), !dbg !9530
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !9531
  %3 = load volatile i32, i32* %2, align 4, !dbg !9531
  ret i32 %3, !dbg !9532
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #9 !dbg !9533 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9537, metadata !DIExpression()), !dbg !9539
  call void @llvm.dbg.value(metadata i32* %1, metadata !9538, metadata !DIExpression()), !dbg !9539
  %3 = and i32 %0, 131072, !dbg !9540
  %4 = icmp eq i32 %3, 0, !dbg !9542
  br i1 %4, label %22, label %5, !dbg !9543

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !9544
  %6 = and i32 %0, 2, !dbg !9546
  %7 = icmp eq i32 %6, 0, !dbg !9548
  br i1 %7, label %11, label %8, !dbg !9549

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !9550
  %10 = icmp eq i32 %9, 0, !dbg !9550
  br i1 %10, label %33, label %11, !dbg !9553

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !9554
  store i32 %12, i32* %1, align 4, !dbg !9554
  %13 = and i32 %0, 16, !dbg !9555
  %14 = icmp eq i32 %13, 0, !dbg !9557
  br i1 %14, label %17, label %15, !dbg !9558

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !9559
  br label %31, !dbg !9561

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !9562
  %19 = icmp eq i32 %18, 0, !dbg !9564
  br i1 %19, label %33, label %20, !dbg !9565

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !9566
  br label %31, !dbg !9568

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !9569
  %24 = icmp eq i32 %23, 0, !dbg !9571
  br i1 %24, label %31, label %25, !dbg !9572

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !9573
  %27 = icmp eq i32 %26, 0, !dbg !9576
  br i1 %27, label %28, label %31, !dbg !9577

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !9578
  br label %33, !dbg !9579

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !9539
  ret i32 %34, !dbg !9579
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !9580 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9584, metadata !DIExpression()), !dbg !9595
  call void @llvm.dbg.value(metadata i32 %1, metadata !9585, metadata !DIExpression()), !dbg !9595
  call void @llvm.dbg.value(metadata i32 %2, metadata !9586, metadata !DIExpression()), !dbg !9595
  call void @llvm.dbg.value(metadata i32 %3, metadata !9587, metadata !DIExpression()), !dbg !9595
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9596
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9596
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9596
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9588, metadata !DIExpression()), !dbg !9595
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !9597
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !9597
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !9597
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !9589, metadata !DIExpression()), !dbg !9595
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #24, !dbg !9598
  call void @llvm.dbg.value(metadata i32 %11, metadata !9590, metadata !DIExpression()), !dbg !9595
  %12 = and i32 %2, 48, !dbg !9599
  call void @llvm.dbg.value(metadata i32 %12, metadata !9591, metadata !DIExpression()), !dbg !9595
  call void @llvm.dbg.value(metadata i32 %2, metadata !9592, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !9595
  call void @llvm.dbg.value(metadata i32 %2, metadata !9593, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !9595
  call void @llvm.dbg.value(metadata i32 %2, metadata !9594, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !9595
  %13 = lshr i32 %2, 6, !dbg !9600
  %14 = and i32 %13, 1, !dbg !9600
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #24, !dbg !9601
  %15 = lshr i32 %2, 7, !dbg !9602
  %16 = and i32 %15, 3, !dbg !9602
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #24, !dbg !9603
  %17 = lshr i32 %2, 9, !dbg !9604
  %18 = and i32 %17, 3, !dbg !9604
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #24, !dbg !9605
  %19 = icmp eq i32 %12, 32, !dbg !9606
  br i1 %19, label %20, label %24, !dbg !9608

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !9609
  br i1 %21, label %22, label %23, !dbg !9612

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !9613
  br label %24, !dbg !9615

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !9616
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !9618
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #24, !dbg !9619
  ret void, !dbg !9620
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #3 !dbg !9621 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9623, metadata !DIExpression()), !dbg !9625
  %2 = shl nuw i32 1, %0, !dbg !9626
  call void @llvm.dbg.value(metadata i32 %2, metadata !9624, metadata !DIExpression()), !dbg !9625
  ret i32 %2, !dbg !9627
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !9628 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9632, metadata !DIExpression()), !dbg !9635
  call void @llvm.dbg.value(metadata i32 %1, metadata !9633, metadata !DIExpression()), !dbg !9635
  call void @llvm.dbg.value(metadata i32 %2, metadata !9634, metadata !DIExpression()), !dbg !9635
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !9636
  %5 = load volatile i32, i32* %4, align 4, !dbg !9636
  %6 = xor i32 %1, -1, !dbg !9636
  %7 = and i32 %5, %6, !dbg !9636
  %8 = mul i32 %2, %1, !dbg !9636
  %9 = or i32 %7, %8, !dbg !9636
  store volatile i32 %9, i32* %4, align 4, !dbg !9636
  ret void, !dbg !9637
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9638 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9640, metadata !DIExpression()), !dbg !9643
  call void @llvm.dbg.value(metadata i32 %1, metadata !9641, metadata !DIExpression()), !dbg !9643
  call void @llvm.dbg.value(metadata i32 %2, metadata !9642, metadata !DIExpression()), !dbg !9643
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !9644
  %5 = load volatile i32, i32* %4, align 4, !dbg !9644
  call void @llvm.dbg.value(metadata i32 %1, metadata !9442, metadata !DIExpression()) #23, !dbg !9645
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9647, !srcloc !9449
  call void @llvm.dbg.value(metadata i32 %6, metadata !9445, metadata !DIExpression()) #23, !dbg !9645
  call void @llvm.dbg.value(metadata i32 %6, metadata !9450, metadata !DIExpression()) #23, !dbg !9648
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9650, !range !7618
  %8 = shl nuw nsw i32 %7, 1, !dbg !9644
  %9 = shl i32 3, %8, !dbg !9644
  %10 = xor i32 %9, -1, !dbg !9644
  %11 = and i32 %5, %10, !dbg !9644
  call void @llvm.dbg.value(metadata i32 %1, metadata !9442, metadata !DIExpression()) #23, !dbg !9651
  call void @llvm.dbg.value(metadata i32 %6, metadata !9445, metadata !DIExpression()) #23, !dbg !9651
  call void @llvm.dbg.value(metadata i32 %6, metadata !9450, metadata !DIExpression()) #23, !dbg !9653
  %12 = shl i32 %2, %8, !dbg !9644
  %13 = or i32 %11, %12, !dbg !9644
  store volatile i32 %13, i32* %4, align 4, !dbg !9644
  ret void, !dbg !9655
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9656 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9658, metadata !DIExpression()), !dbg !9661
  call void @llvm.dbg.value(metadata i32 %1, metadata !9659, metadata !DIExpression()), !dbg !9661
  call void @llvm.dbg.value(metadata i32 %2, metadata !9660, metadata !DIExpression()), !dbg !9661
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !9662
  %5 = load volatile i32, i32* %4, align 4, !dbg !9662
  call void @llvm.dbg.value(metadata i32 %1, metadata !9442, metadata !DIExpression()) #23, !dbg !9663
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9665, !srcloc !9449
  call void @llvm.dbg.value(metadata i32 %6, metadata !9445, metadata !DIExpression()) #23, !dbg !9663
  call void @llvm.dbg.value(metadata i32 %6, metadata !9450, metadata !DIExpression()) #23, !dbg !9666
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9668, !range !7618
  %8 = shl nuw nsw i32 %7, 1, !dbg !9662
  %9 = shl i32 3, %8, !dbg !9662
  %10 = xor i32 %9, -1, !dbg !9662
  %11 = and i32 %5, %10, !dbg !9662
  call void @llvm.dbg.value(metadata i32 %1, metadata !9442, metadata !DIExpression()) #23, !dbg !9669
  call void @llvm.dbg.value(metadata i32 %6, metadata !9445, metadata !DIExpression()) #23, !dbg !9669
  call void @llvm.dbg.value(metadata i32 %6, metadata !9450, metadata !DIExpression()) #23, !dbg !9671
  %12 = shl i32 %2, %8, !dbg !9662
  %13 = or i32 %11, %12, !dbg !9662
  store volatile i32 %13, i32* %4, align 4, !dbg !9662
  ret void, !dbg !9673
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9674 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9676, metadata !DIExpression()), !dbg !9679
  call void @llvm.dbg.value(metadata i32 %1, metadata !9677, metadata !DIExpression()), !dbg !9679
  call void @llvm.dbg.value(metadata i32 %2, metadata !9678, metadata !DIExpression()), !dbg !9679
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !9680
  %5 = load volatile i32, i32* %4, align 4, !dbg !9680
  call void @llvm.dbg.value(metadata i32 %1, metadata !9442, metadata !DIExpression()) #23, !dbg !9681
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9683, !srcloc !9449
  call void @llvm.dbg.value(metadata i32 %6, metadata !9445, metadata !DIExpression()) #23, !dbg !9681
  call void @llvm.dbg.value(metadata i32 %6, metadata !9450, metadata !DIExpression()) #23, !dbg !9684
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9686, !range !7618
  %8 = shl nuw nsw i32 %7, 2, !dbg !9680
  %9 = shl i32 15, %8, !dbg !9680
  %10 = xor i32 %9, -1, !dbg !9680
  %11 = and i32 %5, %10, !dbg !9680
  call void @llvm.dbg.value(metadata i32 %1, metadata !9442, metadata !DIExpression()) #23, !dbg !9687
  call void @llvm.dbg.value(metadata i32 %6, metadata !9445, metadata !DIExpression()) #23, !dbg !9687
  call void @llvm.dbg.value(metadata i32 %6, metadata !9450, metadata !DIExpression()) #23, !dbg !9689
  %12 = shl i32 %2, %8, !dbg !9680
  %13 = or i32 %11, %12, !dbg !9680
  store volatile i32 %13, i32* %4, align 4, !dbg !9680
  ret void, !dbg !9691
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9692 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9694, metadata !DIExpression()), !dbg !9697
  call void @llvm.dbg.value(metadata i32 %1, metadata !9695, metadata !DIExpression()), !dbg !9697
  call void @llvm.dbg.value(metadata i32 %2, metadata !9696, metadata !DIExpression()), !dbg !9697
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !9698
  %5 = load volatile i32, i32* %4, align 4, !dbg !9698
  %6 = lshr i32 %1, 8, !dbg !9698
  call void @llvm.dbg.value(metadata i32 %6, metadata !9442, metadata !DIExpression()) #23, !dbg !9699
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !9701, !srcloc !9449
  call void @llvm.dbg.value(metadata i32 %7, metadata !9445, metadata !DIExpression()) #23, !dbg !9699
  call void @llvm.dbg.value(metadata i32 %7, metadata !9450, metadata !DIExpression()) #23, !dbg !9702
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !9704, !range !7618
  %9 = shl nuw nsw i32 %8, 2, !dbg !9698
  %10 = shl i32 15, %9, !dbg !9698
  %11 = xor i32 %10, -1, !dbg !9698
  %12 = and i32 %5, %11, !dbg !9698
  call void @llvm.dbg.value(metadata i32 %6, metadata !9442, metadata !DIExpression()) #23, !dbg !9705
  call void @llvm.dbg.value(metadata i32 %7, metadata !9445, metadata !DIExpression()) #23, !dbg !9705
  call void @llvm.dbg.value(metadata i32 %7, metadata !9450, metadata !DIExpression()) #23, !dbg !9707
  %13 = shl i32 %2, %9, !dbg !9698
  %14 = or i32 %12, %13, !dbg !9698
  store volatile i32 %14, i32* %4, align 4, !dbg !9698
  ret void, !dbg !9709
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9710 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9712, metadata !DIExpression()), !dbg !9715
  call void @llvm.dbg.value(metadata i32 %1, metadata !9713, metadata !DIExpression()), !dbg !9715
  call void @llvm.dbg.value(metadata i32 %2, metadata !9714, metadata !DIExpression()), !dbg !9715
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !9716
  %5 = load volatile i32, i32* %4, align 4, !dbg !9716
  call void @llvm.dbg.value(metadata i32 %1, metadata !9442, metadata !DIExpression()) #23, !dbg !9717
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9719, !srcloc !9449
  call void @llvm.dbg.value(metadata i32 %6, metadata !9445, metadata !DIExpression()) #23, !dbg !9717
  call void @llvm.dbg.value(metadata i32 %6, metadata !9450, metadata !DIExpression()) #23, !dbg !9720
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9722, !range !7618
  %8 = shl nuw nsw i32 %7, 1, !dbg !9716
  %9 = shl i32 3, %8, !dbg !9716
  %10 = xor i32 %9, -1, !dbg !9716
  %11 = and i32 %5, %10, !dbg !9716
  call void @llvm.dbg.value(metadata i32 %1, metadata !9442, metadata !DIExpression()) #23, !dbg !9723
  call void @llvm.dbg.value(metadata i32 %6, metadata !9445, metadata !DIExpression()) #23, !dbg !9723
  call void @llvm.dbg.value(metadata i32 %6, metadata !9450, metadata !DIExpression()) #23, !dbg !9725
  %12 = shl i32 %2, %8, !dbg !9716
  %13 = or i32 %11, %12, !dbg !9716
  store volatile i32 %13, i32* %4, align 4, !dbg !9716
  ret void, !dbg !9727
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !9728 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9730, metadata !DIExpression()), !dbg !9733
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9734
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !9734
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !9734
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !9731, metadata !DIExpression()), !dbg !9733
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !9735
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !9736
  %6 = tail call fastcc zeroext i1 @device_is_ready.123() #24, !dbg !9737
  br i1 %6, label %7, label %11, !dbg !9739

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #24, !dbg !9740
  call void @llvm.dbg.value(metadata i32 %8, metadata !9732, metadata !DIExpression()), !dbg !9733
  %9 = icmp slt i32 %8, 0, !dbg !9741
  %10 = select i1 %9, i32 %8, i32 0, !dbg !9743
  br label %11, !dbg !9743

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !9733
  ret i32 %12, !dbg !9744
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.123() unnamed_addr #1 !dbg !9745 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9749, metadata !DIExpression()), !dbg !9750
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9751, !srcloc !9753
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.124() #24, !dbg !9754
  ret i1 %1, !dbg !9755
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef readonly %0) unnamed_addr #1 !dbg !9756 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9760, metadata !DIExpression()), !dbg !9765
  call void @llvm.dbg.value(metadata i8 1, metadata !9761, metadata !DIExpression()), !dbg !9765
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9766
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !9766
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !9766
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !9762, metadata !DIExpression()), !dbg !9765
  call void @llvm.dbg.value(metadata i32 0, metadata !9763, metadata !DIExpression()), !dbg !9765
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9764, metadata !DIExpression()), !dbg !9765
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !9767
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !9770
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #24, !dbg !9771
  call void @llvm.dbg.value(metadata i32 %7, metadata !9763, metadata !DIExpression()), !dbg !9765
  ret i32 %7, !dbg !9772
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.124() unnamed_addr #1 !dbg !9773 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9775, metadata !DIExpression()), !dbg !9776
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_9) #25, !dbg !9777
  ret i1 %1, !dbg !9778
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !9779 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9783, metadata !DIExpression()), !dbg !9791
  call void @llvm.dbg.value(metadata i32 %1, metadata !9784, metadata !DIExpression()), !dbg !9791
  call void @llvm.dbg.value(metadata i32 %2, metadata !9785, metadata !DIExpression()), !dbg !9791
  call void @llvm.dbg.value(metadata i32 %3, metadata !9786, metadata !DIExpression()), !dbg !9791
  call void @llvm.dbg.value(metadata i32 0, metadata !9787, metadata !DIExpression()), !dbg !9791
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #24, !dbg !9792
  %5 = icmp eq i32 %3, 17, !dbg !9793
  br i1 %5, label %6, label %14, !dbg !9794

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !9795
  call void @llvm.dbg.value(metadata i32 %7, metadata !9788, metadata !DIExpression()), !dbg !9796
  %8 = icmp eq i32 %7, 0, !dbg !9797
  %9 = shl nuw i32 1, %1, !dbg !9799
  br i1 %8, label %12, label %10, !dbg !9800

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !9801
  br label %14, !dbg !9803

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !9804
  br label %14, !dbg !9807

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !9808
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #19 !dbg !9809 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9811, metadata !DIExpression()), !dbg !9815
  call void @llvm.dbg.value(metadata i8* %1, metadata !9812, metadata !DIExpression()), !dbg !9815
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9816
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9816
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9816
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9813, metadata !DIExpression()), !dbg !9815
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9817
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9817
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #24, !dbg !9819
  %9 = icmp eq i32 %8, 0, !dbg !9819
  br i1 %9, label %12, label %10, !dbg !9820

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9821
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #24, !dbg !9823
  br label %12, !dbg !9824

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9825
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #24, !dbg !9827
  %15 = icmp eq i32 %14, 0, !dbg !9827
  br i1 %15, label %19, label %16, !dbg !9828

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9829
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #24, !dbg !9830
  store i8 %18, i8* %1, align 1, !dbg !9831
  br label %19, !dbg !9832

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !9815
  ret i32 %20, !dbg !9833
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !9834 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9836, metadata !DIExpression()), !dbg !9840
  call void @llvm.dbg.value(metadata i8 %1, metadata !9837, metadata !DIExpression()), !dbg !9840
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9841
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9841
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9841
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9838, metadata !DIExpression()), !dbg !9840
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !9842

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9843
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #24, !dbg !9846
  %10 = icmp eq i32 %9, 0, !dbg !9846
  br i1 %10, label %18, label %11, !dbg !9847

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9848, !srcloc !9855
  call void @llvm.dbg.value(metadata i32 undef, metadata !9851, metadata !DIExpression()) #23, !dbg !9856
  call void @llvm.dbg.value(metadata i32 undef, metadata !9852, metadata !DIExpression()) #23, !dbg !9856
  call void @llvm.dbg.value(metadata i32 undef, metadata !9839, metadata !DIExpression()), !dbg !9840
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9857
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #24, !dbg !9859
  %15 = icmp eq i32 %14, 0, !dbg !9859
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !9848
  br i1 %15, label %17, label %19, !dbg !9860

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !9851, metadata !DIExpression()) #23, !dbg !9856
  call void @llvm.dbg.value(metadata i32 %16, metadata !9839, metadata !DIExpression()), !dbg !9840
  call void @llvm.dbg.value(metadata i32 undef, metadata !9861, metadata !DIExpression()) #23, !dbg !9864
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !9866, !srcloc !9867
  br label %18, !dbg !9868

18:                                               ; preds = %17, %7
  br label %7, !dbg !9843, !llvm.loop !9869

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !9848
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9871
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #24, !dbg !9872
  call void @llvm.dbg.value(metadata i32 %20, metadata !9861, metadata !DIExpression()) #23, !dbg !9873
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !9875, !srcloc !9867
  ret void, !dbg !9876
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #19 !dbg !9877 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9879, metadata !DIExpression()), !dbg !9882
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9883
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9883
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9883
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9880, metadata !DIExpression()), !dbg !9882
  call void @llvm.dbg.value(metadata i32 0, metadata !9881, metadata !DIExpression()), !dbg !9882
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9884
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9884
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #24, !dbg !9886
  %8 = icmp ne i32 %7, 0, !dbg !9886
  %9 = zext i1 %8 to i32, !dbg !9887
  call void @llvm.dbg.value(metadata i32 %9, metadata !9881, metadata !DIExpression()), !dbg !9882
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9888
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #24, !dbg !9890
  %12 = icmp eq i32 %11, 0, !dbg !9890
  %13 = or i32 %9, 2, !dbg !9891
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !9891
  call void @llvm.dbg.value(metadata i32 %14, metadata !9881, metadata !DIExpression()), !dbg !9882
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9892
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #24, !dbg !9894
  %17 = icmp eq i32 %16, 0, !dbg !9894
  %18 = or i32 %14, 4, !dbg !9895
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !9895
  call void @llvm.dbg.value(metadata i32 %19, metadata !9881, metadata !DIExpression()), !dbg !9882
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9896
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #24, !dbg !9898
  %22 = icmp eq i32 %21, 0, !dbg !9898
  %23 = or i32 %19, 8, !dbg !9899
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !9899
  call void @llvm.dbg.value(metadata i32 %24, metadata !9881, metadata !DIExpression()), !dbg !9882
  %25 = and i32 %24, 8, !dbg !9900
  %26 = icmp eq i32 %25, 0, !dbg !9900
  br i1 %26, label %29, label %27, !dbg !9902

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9903
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #24, !dbg !9905
  br label %29, !dbg !9906

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !9907
  %31 = icmp eq i32 %30, 0, !dbg !9907
  br i1 %31, label %34, label %32, !dbg !9909

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9910
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #24, !dbg !9912
  br label %34, !dbg !9913

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !9914
  %36 = icmp eq i32 %35, 0, !dbg !9914
  br i1 %36, label %39, label %37, !dbg !9916

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9917
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #24, !dbg !9919
  br label %39, !dbg !9920

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !9921
  %41 = icmp eq i32 %40, 0, !dbg !9921
  br i1 %41, label %44, label %42, !dbg !9923

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9924
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #24, !dbg !9926
  br label %44, !dbg !9927

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9928
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #24, !dbg !9929
  ret i32 %24, !dbg !9930
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !9931 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9933, metadata !DIExpression()), !dbg !9942
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9934, metadata !DIExpression()), !dbg !9942
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9943
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9943
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9943
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9935, metadata !DIExpression()), !dbg !9942
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9944
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !9944
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !9944
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !9936, metadata !DIExpression()), !dbg !9942
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9945
  %10 = load i8, i8* %9, align 4, !dbg !9945
  %11 = zext i8 %10 to i32, !dbg !9946
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #24, !dbg !9947
  call void @llvm.dbg.value(metadata i32 %12, metadata !9938, metadata !DIExpression()), !dbg !9942
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9948
  %14 = load i8, i8* %13, align 1, !dbg !9948
  %15 = zext i8 %14 to i32, !dbg !9949
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #24, !dbg !9950
  call void @llvm.dbg.value(metadata i32 %16, metadata !9939, metadata !DIExpression()), !dbg !9942
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9951
  %18 = load i8, i8* %17, align 2, !dbg !9951
  %19 = zext i8 %18 to i32, !dbg !9952
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #24, !dbg !9953
  call void @llvm.dbg.value(metadata i32 %20, metadata !9940, metadata !DIExpression()), !dbg !9942
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9954
  %22 = load i8, i8* %21, align 1, !dbg !9954
  %23 = zext i8 %22 to i32, !dbg !9955
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #24, !dbg !9956
  call void @llvm.dbg.value(metadata i32 %24, metadata !9941, metadata !DIExpression()), !dbg !9942
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !9957

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !9959
  br i1 %26, label %69, label %27, !dbg !9961

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !9962

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !9963
  br i1 %29, label %65, label %30, !dbg !9963

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !9965
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !9942
  br i1 %31, label %38, label %34, !dbg !9967

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !9968
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
    i32 1073812480, label %36
  ], !dbg !9968

36:                                               ; preds = %34, %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !9971
  br i1 %37, label %38, label %69, !dbg !9972

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9973
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #24, !dbg !9974
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #24, !dbg !9975
  %41 = icmp eq i32 %12, %40, !dbg !9977
  br i1 %41, label %43, label %42, !dbg !9978

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #24, !dbg !9979
  br label %43, !dbg !9981

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #24, !dbg !9982
  %45 = icmp eq i32 %16, %44, !dbg !9984
  br i1 %45, label %47, label %46, !dbg !9985

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #24, !dbg !9986
  br label %47, !dbg !9988

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #24, !dbg !9989
  %49 = icmp eq i32 %20, %48, !dbg !9991
  br i1 %49, label %51, label %50, !dbg !9992

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #24, !dbg !9993
  br label %51, !dbg !9995

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #24, !dbg !9996
  %53 = icmp eq i32 %24, %52, !dbg !9998
  br i1 %53, label %55, label %54, !dbg !9999

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #24, !dbg !10000
  br label %55, !dbg !10002

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10003
  %57 = load i32, i32* %56, align 4, !dbg !10003
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !10005
  %59 = load i32, i32* %58, align 4, !dbg !10005
  %60 = icmp eq i32 %57, %59, !dbg !10006
  br i1 %60, label %63, label %61, !dbg !10007

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #24, !dbg !10008
  %62 = load i32, i32* %56, align 4, !dbg !10010
  store i32 %62, i32* %58, align 4, !dbg !10011
  br label %63, !dbg !10012

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !10013
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #24, !dbg !10014
  br label %69, !dbg !10015

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !9963
  %67 = and i8 %66, 1, !dbg !9963
  %68 = icmp eq i8 %67, 0, !dbg !9963
  br i1 %68, label %30, label %69, !dbg !9963

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !9942
  ret i32 %70, !dbg !10016
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #20 !dbg !10017 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10019, metadata !DIExpression()), !dbg !10022
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10020, metadata !DIExpression()), !dbg !10022
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10023
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !10023
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !10023
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !10021, metadata !DIExpression()), !dbg !10022
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !10024
  %7 = load i32, i32* %6, align 4, !dbg !10024
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10025
  store i32 %7, i32* %8, align 4, !dbg !10026
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !10027, !range !10028
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #24, !dbg !10029
  %11 = trunc i32 %10 to i8, !dbg !10029
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10030
  store i8 %11, i8* %12, align 4, !dbg !10031
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #24, !dbg !10032, !range !10033
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #24, !dbg !10034
  %15 = trunc i32 %14 to i8, !dbg !10034
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10035
  store i8 %15, i8* %16, align 1, !dbg !10036
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #24, !dbg !10037
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !10038, !range !10028
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #24, !dbg !10039
  %20 = trunc i32 %19 to i8, !dbg !10039
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10040
  store i8 %20, i8* %21, align 2, !dbg !10041
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #24, !dbg !10042, !range !10043
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #24, !dbg !10044
  %24 = trunc i32 %23 to i8, !dbg !10044
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10045
  store i8 %24, i8* %25, align 1, !dbg !10046
  ret i32 0, !dbg !10047
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10048 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10052, metadata !DIExpression()), !dbg !10054
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10055
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10055
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10055
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10053, metadata !DIExpression()), !dbg !10054
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10056
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10056
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #24, !dbg !10057
  ret i32 %7, !dbg !10058
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #3 !dbg !10059 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10063, metadata !DIExpression()), !dbg !10064
  %2 = icmp eq i32 %0, 1024, !dbg !10065
  %3 = select i1 %2, i32 2, i32 0, !dbg !10065
  %4 = icmp eq i32 %0, 1536, !dbg !10065
  %5 = select i1 %4, i32 1, i32 %3, !dbg !10065
  ret i32 %5, !dbg !10066
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10067 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10069, metadata !DIExpression()), !dbg !10071
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10072
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10072
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10072
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10070, metadata !DIExpression()), !dbg !10071
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10073
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10073
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #24, !dbg !10074
  ret i32 %7, !dbg !10075
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !10076 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10080, metadata !DIExpression()), !dbg !10081
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !10082
  %3 = icmp ult i32 %2, 4, !dbg !10082
  br i1 %3, label %4, label %7, !dbg !10082

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !10082
  %6 = load i32, i32* %5, align 4, !dbg !10082
  br label %7, !dbg !10082

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !10083
  ret i32 %8, !dbg !10085
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10086 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10088, metadata !DIExpression()), !dbg !10090
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10091
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10091
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10091
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10089, metadata !DIExpression()), !dbg !10090
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10092
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10092
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #24, !dbg !10093
  ret i32 %7, !dbg !10094
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !10095 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10099, metadata !DIExpression()), !dbg !10101
  call void @llvm.dbg.value(metadata i32 %1, metadata !10100, metadata !DIExpression()), !dbg !10101
  %3 = icmp eq i32 %0, 4096, !dbg !10102
  %4 = icmp eq i32 %1, 0, !dbg !10102
  %5 = select i1 %4, i32 4, i32 3, !dbg !10102
  %6 = select i1 %4, i32 3, i32 2, !dbg !10102
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !10102
  ret i32 %7, !dbg !10103
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10104 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10106, metadata !DIExpression()), !dbg !10108
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10109
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10109
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10109
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10107, metadata !DIExpression()), !dbg !10108
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10110
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10110
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #24, !dbg !10111
  ret i32 %7, !dbg !10112
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #3 !dbg !10113 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10117, metadata !DIExpression()), !dbg !10118
  %2 = icmp eq i32 %0, 768, !dbg !10119
  %3 = zext i1 %2 to i32, !dbg !10118
  ret i32 %3, !dbg !10121
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10122 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10127, metadata !DIExpression()), !dbg !10128
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10129
  %3 = load volatile i32, i32* %2, align 4, !dbg !10129
  %4 = and i32 %3, 768, !dbg !10129
  ret i32 %4, !dbg !10130
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10131 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10133, metadata !DIExpression()), !dbg !10134
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10135
  %3 = load volatile i32, i32* %2, align 4, !dbg !10135
  %4 = and i32 %3, 4096, !dbg !10135
  ret i32 %4, !dbg !10136
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10137 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10139, metadata !DIExpression()), !dbg !10140
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10141
  %3 = load volatile i32, i32* %2, align 4, !dbg !10141
  %4 = and i32 %3, 12288, !dbg !10141
  ret i32 %4, !dbg !10142
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10143 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10145, metadata !DIExpression()), !dbg !10146
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10147
  %3 = load volatile i32, i32* %2, align 4, !dbg !10147
  %4 = and i32 %3, 1536, !dbg !10147
  ret i32 %4, !dbg !10148
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #3 !dbg !10149 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10153, metadata !DIExpression()), !dbg !10154
  %2 = icmp eq i32 %0, 2, !dbg !10155
  %3 = select i1 %2, i32 1024, i32 0, !dbg !10155
  %4 = icmp eq i32 %0, 1, !dbg !10155
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !10155
  ret i32 %5, !dbg !10156
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #3 !dbg !10157 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10161, metadata !DIExpression()), !dbg !10162
  %2 = icmp ult i32 %0, 3, !dbg !10163
  br i1 %2, label %3, label %6, !dbg !10163

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !10163
  %5 = load i32, i32* %4, align 4, !dbg !10163
  br label %6, !dbg !10163

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !10164
  ret i32 %7, !dbg !10166
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !10167 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10171, metadata !DIExpression()), !dbg !10173
  call void @llvm.dbg.value(metadata i32 %1, metadata !10172, metadata !DIExpression()), !dbg !10173
  %3 = icmp eq i32 %0, 4, !dbg !10174
  %4 = icmp eq i32 %1, 0, !dbg !10174
  %5 = select i1 %4, i32 0, i32 4096, !dbg !10174
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !10174
  ret i32 %6, !dbg !10175
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #3 !dbg !10176 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10180, metadata !DIExpression()), !dbg !10181
  %2 = icmp eq i32 %0, 1, !dbg !10182
  %3 = select i1 %2, i32 768, i32 0, !dbg !10181
  ret i32 %3, !dbg !10184
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10185 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10189, metadata !DIExpression()), !dbg !10190
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10191
  %3 = load volatile i32, i32* %2, align 4, !dbg !10191
  %4 = and i32 %3, -8193, !dbg !10191
  store volatile i32 %4, i32* %2, align 4, !dbg !10191
  ret void, !dbg !10192
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !10193 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10197, metadata !DIExpression()), !dbg !10200
  call void @llvm.dbg.value(metadata i32 %1, metadata !10198, metadata !DIExpression()), !dbg !10200
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10201
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10201
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10201
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10199, metadata !DIExpression()), !dbg !10200
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10202
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10202
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !10203
  ret void, !dbg !10204
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !10205 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10207, metadata !DIExpression()), !dbg !10210
  call void @llvm.dbg.value(metadata i32 %1, metadata !10208, metadata !DIExpression()), !dbg !10210
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10211
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10211
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10211
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10209, metadata !DIExpression()), !dbg !10210
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10212
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10212
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !10213
  ret void, !dbg !10214
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !10215 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10217, metadata !DIExpression()), !dbg !10220
  call void @llvm.dbg.value(metadata i32 %1, metadata !10218, metadata !DIExpression()), !dbg !10220
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10221
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10221
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10221
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10219, metadata !DIExpression()), !dbg !10220
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10222
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10222
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !10223
  ret void, !dbg !10224
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !10225 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10227, metadata !DIExpression()), !dbg !10230
  call void @llvm.dbg.value(metadata i32 %1, metadata !10228, metadata !DIExpression()), !dbg !10230
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10231
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10231
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10231
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10229, metadata !DIExpression()), !dbg !10230
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10232
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10232
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !10233
  ret void, !dbg !10234
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !10235 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10237, metadata !DIExpression()), !dbg !10242
  call void @llvm.dbg.value(metadata i32 %1, metadata !10238, metadata !DIExpression()), !dbg !10242
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10243
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !10243
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !10243
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !10239, metadata !DIExpression()), !dbg !10242
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10244
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !10244
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !10244
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !10240, metadata !DIExpression()), !dbg !10242
  %10 = bitcast i32* %3 to i8*, !dbg !10245
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !10245
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !10246
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !10246
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !10250
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !10250
  %15 = load i8*, i8** %14, align 4, !dbg !10250
  call void @llvm.dbg.value(metadata i32* %3, metadata !10241, metadata !DIExpression(DW_OP_deref)), !dbg !10242
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #24, !dbg !10251
  %17 = icmp slt i32 %16, 0, !dbg !10252
  br i1 %17, label %18, label %21, !dbg !10253

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.129(i32 noundef 1) #24, !dbg !10254
  %20 = zext i8 %19 to i32, !dbg !10254
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.130, i32 0, i32 0), i32 noundef %20) #25, !dbg !10254
  br label %31, !dbg !10260

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !10261
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !10261
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #24, !dbg !10262
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !10263
  %25 = load i32, i32* %3, align 4, !dbg !10264
  call void @llvm.dbg.value(metadata i32 %25, metadata !10241, metadata !DIExpression()), !dbg !10242
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #24, !dbg !10265
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !10266
  %27 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %26, i32 0, i32 2, !dbg !10266
  %28 = load volatile i32, i32* %27, align 4, !dbg !10266
  %29 = icmp ugt i32 %28, 16, !dbg !10266
  br i1 %29, label %31, label %30, !dbg !10269

30:                                               ; preds = %21
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.131, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4.132, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.133, i32 0, i32 0), i32 noundef 190) #25, !dbg !10270
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6.134, i32 0, i32 0)) #25, !dbg !10270
  call void @assert_post_action(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.133, i32 0, i32 0), i32 noundef 190) #25, !dbg !10270
  unreachable, !dbg !10270

31:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !10272
  ret void, !dbg !10272
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10273 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10275, metadata !DIExpression()), !dbg !10276
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10277
  %3 = load volatile i32, i32* %2, align 4, !dbg !10277
  %4 = or i32 %3, 8192, !dbg !10277
  store volatile i32 %4, i32* %2, align 4, !dbg !10277
  ret void, !dbg !10278
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !10279 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10281, metadata !DIExpression()), !dbg !10285
  call void @llvm.dbg.value(metadata i8* %1, metadata !10282, metadata !DIExpression()), !dbg !10285
  call void @llvm.dbg.value(metadata i32* %2, metadata !10283, metadata !DIExpression()), !dbg !10285
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10286
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !10286
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !10286
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !10284, metadata !DIExpression()), !dbg !10285
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !10287
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !10287
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !10289
  br i1 %9, label %12, label %10, !dbg !10290

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #25, !dbg !10291
  br label %12, !dbg !10292

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !10285
  ret i32 %13, !dbg !10293
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.129(i32 noundef %0) unnamed_addr #3 !dbg !10294 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10296, metadata !DIExpression()), !dbg !10297
  %2 = icmp eq i32 %0, 2, !dbg !10298
  %3 = select i1 %2, i8 87, i8 63, !dbg !10298
  %4 = icmp eq i32 %0, 1, !dbg !10298
  %5 = select i1 %4, i8 69, i8 %3, !dbg !10298
  ret i8 %5, !dbg !10299
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10300 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10304, metadata !DIExpression()), !dbg !10306
  call void @llvm.dbg.value(metadata i32 0, metadata !10305, metadata !DIExpression()), !dbg !10306
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10307
  %3 = load volatile i32, i32* %2, align 4, !dbg !10307
  %4 = and i32 %3, -32769, !dbg !10307
  store volatile i32 %4, i32* %2, align 4, !dbg !10307
  ret void, !dbg !10308
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !10309 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10313, metadata !DIExpression()), !dbg !10317
  call void @llvm.dbg.value(metadata i32 %1, metadata !10314, metadata !DIExpression()), !dbg !10317
  call void @llvm.dbg.value(metadata i32 0, metadata !10315, metadata !DIExpression()), !dbg !10317
  call void @llvm.dbg.value(metadata i32 %2, metadata !10316, metadata !DIExpression()), !dbg !10317
  %4 = zext i32 %1 to i64, !dbg !10318
  %5 = mul nuw nsw i64 %4, 25, !dbg !10318
  %6 = zext i32 %2 to i64, !dbg !10318
  %7 = shl nuw nsw i64 %6, 2, !dbg !10318
  %8 = udiv i64 %5, %7, !dbg !10318
  %9 = trunc i64 %8 to i32, !dbg !10318
  %10 = udiv i32 %9, 100, !dbg !10318
  %11 = shl nuw nsw i32 %10, 4, !dbg !10318
  %12 = mul i32 %10, -100, !dbg !10318
  %13 = add i32 %12, %9, !dbg !10318
  %14 = shl i32 %13, 4, !dbg !10318
  %15 = add i32 %14, 50, !dbg !10318
  %16 = udiv i32 %15, 100, !dbg !10318
  %17 = and i32 %16, 240, !dbg !10318
  %18 = add nuw nsw i32 %17, %11, !dbg !10318
  %19 = and i32 %16, 15, !dbg !10318
  %20 = and i32 %18, 65520, !dbg !10321
  %21 = or i32 %20, %19, !dbg !10321
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !10322
  store volatile i32 %21, i32* %22, align 4, !dbg !10323
  ret void, !dbg !10324
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !10325 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10327, metadata !DIExpression()), !dbg !10329
  call void @llvm.dbg.value(metadata i32 %1, metadata !10328, metadata !DIExpression()), !dbg !10329
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10330
  %4 = load volatile i32, i32* %3, align 4, !dbg !10330
  %5 = and i32 %4, -769, !dbg !10330
  %6 = or i32 %5, %1, !dbg !10330
  store volatile i32 %6, i32* %3, align 4, !dbg !10330
  ret void, !dbg !10331
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !10332 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10334, metadata !DIExpression()), !dbg !10336
  call void @llvm.dbg.value(metadata i32 %1, metadata !10335, metadata !DIExpression()), !dbg !10336
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10337
  %4 = load volatile i32, i32* %3, align 4, !dbg !10337
  %5 = and i32 %4, -4097, !dbg !10337
  %6 = or i32 %5, %1, !dbg !10337
  store volatile i32 %6, i32* %3, align 4, !dbg !10337
  ret void, !dbg !10338
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !10339 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10341, metadata !DIExpression()), !dbg !10343
  call void @llvm.dbg.value(metadata i32 %1, metadata !10342, metadata !DIExpression()), !dbg !10343
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10344
  %4 = load volatile i32, i32* %3, align 4, !dbg !10344
  %5 = and i32 %4, -12289, !dbg !10344
  %6 = or i32 %5, %1, !dbg !10344
  store volatile i32 %6, i32* %3, align 4, !dbg !10344
  ret void, !dbg !10345
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !10346 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10348, metadata !DIExpression()), !dbg !10350
  call void @llvm.dbg.value(metadata i32 %1, metadata !10349, metadata !DIExpression()), !dbg !10350
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10351
  %4 = load volatile i32, i32* %3, align 4, !dbg !10351
  %5 = and i32 %4, -1537, !dbg !10351
  %6 = or i32 %5, %1, !dbg !10351
  store volatile i32 %6, i32* %3, align 4, !dbg !10351
  ret void, !dbg !10352
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10353 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10355, metadata !DIExpression()), !dbg !10356
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10357
  %3 = load volatile i32, i32* %2, align 4, !dbg !10357
  %4 = lshr i32 %3, 3, !dbg !10358
  %5 = and i32 %4, 1, !dbg !10358
  ret i32 %5, !dbg !10359
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10360 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10362, metadata !DIExpression()), !dbg !10363
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10364
  %3 = load volatile i32, i32* %2, align 4, !dbg !10364
  %4 = and i32 %3, 1, !dbg !10364
  ret i32 %4, !dbg !10365
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10366 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10368, metadata !DIExpression()), !dbg !10369
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10370
  %3 = load volatile i32, i32* %2, align 4, !dbg !10370
  %4 = lshr i32 %3, 1, !dbg !10371
  %5 = and i32 %4, 1, !dbg !10371
  ret i32 %5, !dbg !10372
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10373 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10375, metadata !DIExpression()), !dbg !10376
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10377
  %3 = load volatile i32, i32* %2, align 4, !dbg !10377
  %4 = lshr i32 %3, 8, !dbg !10378
  %5 = and i32 %4, 1, !dbg !10378
  ret i32 %5, !dbg !10379
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10380 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10382, metadata !DIExpression()), !dbg !10383
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10384
  store volatile i32 -257, i32* %2, align 4, !dbg !10384
  ret void, !dbg !10385
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !10386 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10388, metadata !DIExpression()), !dbg !10390
  %3 = bitcast i32* %2 to i8*, !dbg !10391
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10391
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10389, metadata !DIExpression()), !dbg !10392
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10393
  %5 = load volatile i32, i32* %4, align 4, !dbg !10393
  store volatile i32 %5, i32* %2, align 4, !dbg !10394
  %6 = load volatile i32, i32* %2, align 4, !dbg !10395
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10396
  %8 = load volatile i32, i32* %7, align 4, !dbg !10396
  store volatile i32 %8, i32* %2, align 4, !dbg !10397
  %9 = load volatile i32, i32* %2, align 4, !dbg !10398
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10399
  ret void, !dbg !10399
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !10400 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10402, metadata !DIExpression()), !dbg !10404
  %3 = bitcast i32* %2 to i8*, !dbg !10405
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10405
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10403, metadata !DIExpression()), !dbg !10406
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10407
  %5 = load volatile i32, i32* %4, align 4, !dbg !10407
  store volatile i32 %5, i32* %2, align 4, !dbg !10408
  %6 = load volatile i32, i32* %2, align 4, !dbg !10409
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10410
  %8 = load volatile i32, i32* %7, align 4, !dbg !10410
  store volatile i32 %8, i32* %2, align 4, !dbg !10411
  %9 = load volatile i32, i32* %2, align 4, !dbg !10412
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10413
  ret void, !dbg !10413
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !10414 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10416, metadata !DIExpression()), !dbg !10418
  %3 = bitcast i32* %2 to i8*, !dbg !10419
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10419
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10417, metadata !DIExpression()), !dbg !10420
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10421
  %5 = load volatile i32, i32* %4, align 4, !dbg !10421
  store volatile i32 %5, i32* %2, align 4, !dbg !10422
  %6 = load volatile i32, i32* %2, align 4, !dbg !10423
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10424
  %8 = load volatile i32, i32* %7, align 4, !dbg !10424
  store volatile i32 %8, i32* %2, align 4, !dbg !10425
  %9 = load volatile i32, i32* %2, align 4, !dbg !10426
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10427
  ret void, !dbg !10427
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !10428 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10430, metadata !DIExpression()), !dbg !10432
  %3 = bitcast i32* %2 to i8*, !dbg !10433
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10433
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10431, metadata !DIExpression()), !dbg !10434
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10435
  %5 = load volatile i32, i32* %4, align 4, !dbg !10435
  store volatile i32 %5, i32* %2, align 4, !dbg !10436
  %6 = load volatile i32, i32* %2, align 4, !dbg !10437
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10438
  %8 = load volatile i32, i32* %7, align 4, !dbg !10438
  store volatile i32 %8, i32* %2, align 4, !dbg !10439
  %9 = load volatile i32, i32* %2, align 4, !dbg !10440
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10441
  ret void, !dbg !10441
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10442 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10444, metadata !DIExpression()), !dbg !10445
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10446
  %3 = load volatile i32, i32* %2, align 4, !dbg !10446
  %4 = lshr i32 %3, 7, !dbg !10447
  %5 = and i32 %4, 1, !dbg !10447
  ret i32 %5, !dbg !10448
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #14 !dbg !10449 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10453, metadata !DIExpression()), !dbg !10455
  call void @llvm.dbg.value(metadata i8 %1, metadata !10454, metadata !DIExpression()), !dbg !10455
  %3 = zext i8 %1 to i32, !dbg !10456
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10457
  store volatile i32 %3, i32* %4, align 4, !dbg !10458
  ret void, !dbg !10459
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10460 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10462, metadata !DIExpression()), !dbg !10463
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10464
  %3 = load volatile i32, i32* %2, align 4, !dbg !10464
  %4 = lshr i32 %3, 5, !dbg !10465
  %5 = and i32 %4, 1, !dbg !10465
  ret i32 %5, !dbg !10466
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10467 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10471, metadata !DIExpression()), !dbg !10472
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10473
  %3 = load volatile i32, i32* %2, align 4, !dbg !10473
  %4 = trunc i32 %3 to i8, !dbg !10474
  ret i8 %4, !dbg !10475
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !10476 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10478, metadata !DIExpression()), !dbg !10484
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10485
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10485
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10485
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10479, metadata !DIExpression()), !dbg !10484
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10486
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !10486
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !10486
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !10480, metadata !DIExpression()), !dbg !10484
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #24, !dbg !10487
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !10488
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !10488
  %10 = tail call fastcc zeroext i1 @device_is_ready.136(%struct.device* noundef %9) #24, !dbg !10490
  br i1 %10, label %14, label %11, !dbg !10491

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.129(i32 noundef 1) #24, !dbg !10492
  %13 = zext i8 %12 to i32, !dbg !10492
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.7.137, i32 0, i32 0), i32 noundef %13) #25, !dbg !10492
  br label %62, !dbg !10498

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !10499
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !10500
  %17 = bitcast %struct._thread_arch** %16 to i8**, !dbg !10500
  %18 = load i8*, i8** %17, align 4, !dbg !10500
  %19 = tail call fastcc i32 @clock_control_on.138(%struct.device* noundef %15, i8* noundef %18) #24, !dbg !10501
  call void @llvm.dbg.value(metadata i32 %19, metadata !10483, metadata !DIExpression()), !dbg !10484
  %20 = icmp eq i32 %19, 0, !dbg !10502
  br i1 %20, label %24, label %21, !dbg !10504

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.129(i32 noundef 1) #24, !dbg !10505
  %23 = zext i8 %22 to i32, !dbg !10505
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.8.139, i32 0, i32 0), i32 noundef %23) #25, !dbg !10505
  br label %62, !dbg !10511

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !10512
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !10512
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #24, !dbg !10513
  call void @llvm.dbg.value(metadata i32 %27, metadata !10483, metadata !DIExpression()), !dbg !10484
  %28 = icmp slt i32 %27, 0, !dbg !10514
  br i1 %28, label %62, label %29, !dbg !10516

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10517
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10517
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #24, !dbg !10518
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10519
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #24, !dbg !10520
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !10521
  %34 = load i32, i32* %33, align 4, !dbg !10521
  %35 = icmp ult i32 %34, 3, !dbg !10523
  br i1 %35, label %39, label %36, !dbg !10523

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.129(i32 noundef 2) #24, !dbg !10524
  %38 = zext i8 %37 to i32, !dbg !10524
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9.140, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #25, !dbg !10524
  call void @llvm.dbg.value(metadata i32 0, metadata !10481, metadata !DIExpression()), !dbg !10484
  call void @llvm.dbg.value(metadata i32 0, metadata !10482, metadata !DIExpression()), !dbg !10484
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !10523
  %41 = load i32, i32* %40, align 4, !dbg !10523
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.10, i32 0, i32 %34, !dbg !10523
  %43 = load i32, i32* %42, align 4, !dbg !10523
  br label %44, !dbg !10523

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !10533
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !10533
  call void @llvm.dbg.value(metadata i32 %46, metadata !10482, metadata !DIExpression()), !dbg !10484
  call void @llvm.dbg.value(metadata i32 %45, metadata !10481, metadata !DIExpression()), !dbg !10484
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10534
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #24, !dbg !10535
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !10536
  %49 = load i8, i8* %48, align 4, !dbg !10536, !range !6781
  %50 = icmp eq i8 %49, 0, !dbg !10536
  br i1 %50, label %52, label %51, !dbg !10538

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #24, !dbg !10539
  br label %52, !dbg !10541

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !10542
  %54 = load i32, i32* %53, align 4, !dbg !10542
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #24, !dbg !10543
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !10544
  %56 = load i8, i8* %55, align 4, !dbg !10544, !range !6781
  %57 = icmp eq i8 %56, 0, !dbg !10544
  br i1 %57, label %60, label %58, !dbg !10546

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10547
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #24, !dbg !10549
  br label %60, !dbg !10550

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10551
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #24, !dbg !10552
  br label %62, !dbg !10553

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !10484
  ret i32 %63, !dbg !10554
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #9 !dbg !10555 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10559, metadata !DIExpression()), !dbg !10563
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10564
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !10564
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !10564
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !10560, metadata !DIExpression()), !dbg !10563
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10561, metadata !DIExpression()), !dbg !10563
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !10565
  store %struct.device* @__device_dts_ord_9, %struct.device** %5, align 4, !dbg !10566
  ret void, !dbg !10567
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.136(%struct.device* noundef %0) unnamed_addr #1 !dbg !10568 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10572, metadata !DIExpression()), !dbg !10573
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10574, !srcloc !10576
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.141(%struct.device* noundef %0) #24, !dbg !10577
  ret i1 %2, !dbg !10578
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.138(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !10579 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10581, metadata !DIExpression()), !dbg !10584
  call void @llvm.dbg.value(metadata i8* %1, metadata !10582, metadata !DIExpression()), !dbg !10584
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10585
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !10585
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !10585
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !10583, metadata !DIExpression()), !dbg !10584
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !10586
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !10586
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #25, !dbg !10587
  ret i32 %8, !dbg !10588
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !10589 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10593, metadata !DIExpression()), !dbg !10597
  call void @llvm.dbg.value(metadata i8 0, metadata !10594, metadata !DIExpression()), !dbg !10597
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !10598
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !10598
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10596, metadata !DIExpression(DW_OP_deref)), !dbg !10597
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #25, !dbg !10599
  call void @llvm.dbg.value(metadata i32 %4, metadata !10595, metadata !DIExpression()), !dbg !10597
  %5 = icmp slt i32 %4, 0, !dbg !10600
  br i1 %5, label %9, label %6, !dbg !10602

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !10603
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !10596, metadata !DIExpression()), !dbg !10597
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #24, !dbg !10604
  br label %9, !dbg !10605

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !10597
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !10606
  ret i32 %10, !dbg !10606
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10607 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10609, metadata !DIExpression()), !dbg !10613
  call void @llvm.dbg.value(metadata i32 12, metadata !10610, metadata !DIExpression()), !dbg !10613
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10614

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10615, metadata !DIExpression()) #23, !dbg !10621
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #23, !dbg !10624, !srcloc !10625
  call void @llvm.dbg.value(metadata i32 %4, metadata !10620, metadata !DIExpression()) #23, !dbg !10621
  %5 = or i32 %4, 12, !dbg !10626
  call void @llvm.dbg.value(metadata i32 %5, metadata !10611, metadata !DIExpression()), !dbg !10627
  call void @llvm.dbg.value(metadata i32 %5, metadata !10628, metadata !DIExpression()) #23, !dbg !10635
  call void @llvm.dbg.value(metadata i32* %2, metadata !10633, metadata !DIExpression()) #23, !dbg !10635
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #23, !dbg !10637, !srcloc !10638
  call void @llvm.dbg.value(metadata i32 %6, metadata !10634, metadata !DIExpression()) #23, !dbg !10635
  %7 = icmp eq i32 %6, 0, !dbg !10614
  br i1 %7, label %8, label %3, !dbg !10626, !llvm.loop !10639

8:                                                ; preds = %3
  ret void, !dbg !10640
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !10641 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10643, metadata !DIExpression()), !dbg !10647
  call void @llvm.dbg.value(metadata i32 %1, metadata !10644, metadata !DIExpression()), !dbg !10647
  call void @llvm.dbg.value(metadata i32 %2, metadata !10645, metadata !DIExpression()), !dbg !10647
  call void @llvm.dbg.value(metadata i32 0, metadata !10646, metadata !DIExpression()), !dbg !10647
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10648
  %5 = load volatile i32, i32* %4, align 4, !dbg !10648
  %6 = and i32 %5, -5633, !dbg !10648
  %7 = or i32 %2, %1, !dbg !10648
  %8 = or i32 %7, %6, !dbg !10648
  store volatile i32 %8, i32* %4, align 4, !dbg !10648
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10649
  %10 = load volatile i32, i32* %9, align 4, !dbg !10649
  %11 = and i32 %10, -12289, !dbg !10649
  store volatile i32 %11, i32* %9, align 4, !dbg !10649
  ret void, !dbg !10650
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10651 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10653, metadata !DIExpression()), !dbg !10654
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10655
  %3 = load volatile i32, i32* %2, align 4, !dbg !10655
  %4 = or i32 %3, 8, !dbg !10655
  store volatile i32 %4, i32* %2, align 4, !dbg !10655
  ret void, !dbg !10656
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10657 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !10661, metadata !DIExpression()), !dbg !10664
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !10662, metadata !DIExpression()), !dbg !10664
  call void @llvm.dbg.value(metadata i32 0, metadata !10663, metadata !DIExpression()), !dbg !10664
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !10665
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !10665
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !10666
  %5 = load i8, i8* %4, align 4, !dbg !10666
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #25, !dbg !10667
  ret i32 %6, !dbg !10668
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.141(%struct.device* noundef %0) unnamed_addr #1 !dbg !10669 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10671, metadata !DIExpression()), !dbg !10672
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !10673
  ret i1 %2, !dbg !10674
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #14 !dbg !10675 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10677, metadata !DIExpression()), !dbg !10678
  tail call fastcc void @__NVIC_SetPriority.143() #24, !dbg !10679
  store i32 16799, i32* @last_load, align 4, !dbg !10680
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10681
  store volatile i32 16799, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10682
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10683
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10684
  %3 = or i32 %2, 7, !dbg !10684
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10684
  ret i32 0, !dbg !10685
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.143() unnamed_addr #14 !dbg !10686 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !10688, metadata !DIExpression()), !dbg !10690
  call void @llvm.dbg.value(metadata i32 1, metadata !10689, metadata !DIExpression()), !dbg !10690
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !10691
  ret void, !dbg !10694
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !10695 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10697, metadata !DIExpression()), !dbg !10699
  %2 = tail call fastcc i32 @elapsed() #24, !dbg !10700
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10701
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10702
  %5 = add i32 %4, %3, !dbg !10702
  store i32 %5, i32* @cycle_count, align 4, !dbg !10702
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10703
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10704
  %7 = sub i32 %5, %6, !dbg !10707
  %8 = udiv i32 %7, 16800, !dbg !10708
  call void @llvm.dbg.value(metadata i32 %8, metadata !10698, metadata !DIExpression()), !dbg !10699
  %9 = mul nuw i32 %8, 16800, !dbg !10709
  %10 = add i32 %9, %6, !dbg !10710
  store i32 %10, i32* @announced_cycles, align 4, !dbg !10710
  tail call void @sys_clock_announce(i32 noundef %8) #25, !dbg !10711
  tail call void @z_arm_int_exit() #25, !dbg !10712
  ret void, !dbg !10713
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #14 !dbg !10714 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10719
  call void @llvm.dbg.value(metadata i32 %1, metadata !10716, metadata !DIExpression()), !dbg !10720
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10721
  call void @llvm.dbg.value(metadata i32 %2, metadata !10717, metadata !DIExpression()), !dbg !10720
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10722
  call void @llvm.dbg.value(metadata i32 %3, metadata !10718, metadata !DIExpression()), !dbg !10720
  %4 = and i32 %2, 65536, !dbg !10723
  %5 = icmp ne i32 %4, 0, !dbg !10723
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !10725
  %8 = load i32, i32* @last_load, align 4, !dbg !10720
  br i1 %7, label %9, label %13, !dbg !10725

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10726
  %11 = add i32 %10, %8, !dbg !10726
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !10726
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10728
  br label %13, !dbg !10729

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !10730
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10731
  %16 = add i32 %14, %15, !dbg !10732
  ret i32 %16, !dbg !10733
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !10734 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10738, metadata !DIExpression()), !dbg !10751
  call void @llvm.dbg.value(metadata i1 %1, metadata !10739, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10751
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !10752
  br i1 %4, label %5, label %8, !dbg !10752

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10754
  %7 = and i32 %6, -2, !dbg !10754
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10754
  store i32 -16777216, i32* @last_load, align 4, !dbg !10756
  br label %60, !dbg !10757

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !10758
  call void @llvm.dbg.value(metadata i32 %9, metadata !10743, metadata !DIExpression()), !dbg !10751
  br i1 %3, label %18, label %10, !dbg !10759

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !10759
  call void @llvm.dbg.value(metadata i32 undef, metadata !10738, metadata !DIExpression()), !dbg !10751
  %12 = icmp slt i32 %11, 1, !dbg !10760
  br i1 %12, label %18, label %13, !dbg !10760

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 997, !dbg !10760
  %15 = select i1 %14, i32 %11, i32 997, !dbg !10760
  %16 = mul nuw nsw i32 %15, 16800, !dbg !10760
  %17 = add nuw nsw i32 %16, 16799, !dbg !10760
  br label %18, !dbg !10760

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 16799, %10 ], [ 16749599, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !10738, metadata !DIExpression()), !dbg !10751
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10761, metadata !DIExpression()) #23, !dbg !10768
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10770, !srcloc !10776
  call void @llvm.dbg.value(metadata i32 undef, metadata !10773, metadata !DIExpression()) #23, !dbg !10777
  call void @llvm.dbg.value(metadata i32 undef, metadata !10774, metadata !DIExpression()) #23, !dbg !10777
  call void @llvm.dbg.value(metadata i32 undef, metadata !10767, metadata !DIExpression()) #23, !dbg !10768
  %21 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10778
  br i1 %21, label %23, label %22, !dbg !10781

22:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.144, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.145, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.146, i32 0, i32 0), i32 noundef 148) #25, !dbg !10782
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.147, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10782
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.146, i32 0, i32 0), i32 noundef 148) #25, !dbg !10782
  unreachable, !dbg !10782

23:                                               ; preds = %18
  %24 = extractvalue { i32, i32 } %20, 0, !dbg !10770
  call void @llvm.dbg.value(metadata i32 %24, metadata !10773, metadata !DIExpression()) #23, !dbg !10777
  call void @llvm.dbg.value(metadata i32 %24, metadata !10767, metadata !DIExpression()) #23, !dbg !10768
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10784
  call void @llvm.dbg.value(metadata i32 %24, metadata !10744, metadata !DIExpression()), !dbg !10751
  %25 = tail call fastcc i32 @elapsed() #24, !dbg !10785
  call void @llvm.dbg.value(metadata i32 %25, metadata !10749, metadata !DIExpression()), !dbg !10751
  %26 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10786
  call void @llvm.dbg.value(metadata i32 %26, metadata !10741, metadata !DIExpression()), !dbg !10751
  %27 = load i32, i32* @cycle_count, align 4, !dbg !10787
  %28 = add i32 %27, %25, !dbg !10787
  store i32 %28, i32* @cycle_count, align 4, !dbg !10787
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10788
  %29 = load i32, i32* @announced_cycles, align 4, !dbg !10789
  %30 = sub i32 %28, %29, !dbg !10790
  call void @llvm.dbg.value(metadata i32 %30, metadata !10750, metadata !DIExpression()), !dbg !10751
  %31 = icmp slt i32 %30, 0, !dbg !10791
  br i1 %31, label %41, label %32, !dbg !10793

32:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !10740, metadata !DIExpression()), !dbg !10751
  call void @llvm.dbg.value(metadata i32 undef, metadata !10740, metadata !DIExpression()), !dbg !10751
  %33 = add nuw i32 %19, %30, !dbg !10794
  %34 = urem i32 %33, 16800, !dbg !10796
  call void @llvm.dbg.value(metadata !DIArgList(i32 %33, i32 %34), metadata !10740, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10751
  %35 = sub nuw nsw i32 %19, %34, !dbg !10797
  call void @llvm.dbg.value(metadata i32 %35, metadata !10740, metadata !DIExpression()), !dbg !10751
  %36 = icmp ugt i32 %35, 1050, !dbg !10798
  br i1 %36, label %37, label %39, !dbg !10798

37:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i32 %35, metadata !10740, metadata !DIExpression()), !dbg !10751
  %38 = icmp ugt i32 %35, 16749600, !dbg !10799
  br i1 %38, label %41, label %39, !dbg !10801

39:                                               ; preds = %32, %37
  %40 = phi i32 [ %35, %37 ], [ 1050, %32 ]
  br label %41

41:                                               ; preds = %37, %23, %39
  %42 = phi i32 [ %40, %39 ], [ 1050, %23 ], [ 16749600, %37 ]
  store i32 %42, i32* @last_load, align 4, !dbg !10802
  %43 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10803
  call void @llvm.dbg.value(metadata i32 %43, metadata !10742, metadata !DIExpression()), !dbg !10751
  %44 = add nsw i32 %42, -1, !dbg !10804
  store volatile i32 %44, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10805
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10806
  %45 = icmp ult i32 %26, %43, !dbg !10807
  br i1 %45, label %46, label %51, !dbg !10809

46:                                               ; preds = %41
  %47 = load i32, i32* @cycle_count, align 4, !dbg !10810
  %48 = add i32 %26, %9, !dbg !10812
  %49 = sub i32 %48, %43, !dbg !10813
  %50 = add i32 %49, %47, !dbg !10810
  br label %55, !dbg !10814

51:                                               ; preds = %41
  %52 = sub i32 %26, %43, !dbg !10815
  %53 = load i32, i32* @cycle_count, align 4, !dbg !10817
  %54 = add i32 %52, %53, !dbg !10817
  br label %55

55:                                               ; preds = %51, %46
  %56 = phi i32 [ %54, %51 ], [ %50, %46 ], !dbg !10818
  store i32 %56, i32* @cycle_count, align 4, !dbg !10818
  call void @llvm.dbg.value(metadata i32 undef, metadata !10819, metadata !DIExpression()) #23, !dbg !10825
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10824, metadata !DIExpression()) #23, !dbg !10825
  %57 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10827
  br i1 %57, label %59, label %58, !dbg !10830

58:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.144, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.148, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.146, i32 0, i32 0), i32 noundef 194) #25, !dbg !10831
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.149, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10831
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.146, i32 0, i32 0), i32 noundef 194) #25, !dbg !10831
  unreachable, !dbg !10831

59:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i32 %24, metadata !10819, metadata !DIExpression()) #23, !dbg !10825
  call void @llvm.dbg.value(metadata i32 %24, metadata !10833, metadata !DIExpression()) #23, !dbg !10836
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !10838, !srcloc !10839
  br label %60

60:                                               ; preds = %59, %5
  ret void, !dbg !10840
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !10841 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10761, metadata !DIExpression()) #23, !dbg !10845
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10847, !srcloc !10776
  call void @llvm.dbg.value(metadata i32 undef, metadata !10773, metadata !DIExpression()) #23, !dbg !10849
  call void @llvm.dbg.value(metadata i32 undef, metadata !10774, metadata !DIExpression()) #23, !dbg !10849
  call void @llvm.dbg.value(metadata i32 undef, metadata !10767, metadata !DIExpression()) #23, !dbg !10845
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10850
  br i1 %2, label %4, label %3, !dbg !10851

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.144, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.145, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.146, i32 0, i32 0), i32 noundef 148) #25, !dbg !10852
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.147, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10852
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.146, i32 0, i32 0), i32 noundef 148) #25, !dbg !10852
  unreachable, !dbg !10852

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !10773, metadata !DIExpression()) #23, !dbg !10849
  call void @llvm.dbg.value(metadata i32 undef, metadata !10767, metadata !DIExpression()) #23, !dbg !10845
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10853
  call void @llvm.dbg.value(metadata i32 undef, metadata !10843, metadata !DIExpression()), !dbg !10854
  %5 = tail call fastcc i32 @elapsed() #24, !dbg !10855
  %6 = load i32, i32* @cycle_count, align 4, !dbg !10856
  %7 = load i32, i32* @announced_cycles, align 4, !dbg !10857
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %7, i32 %6), metadata !10844, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10854
  call void @llvm.dbg.value(metadata i32 undef, metadata !10819, metadata !DIExpression()) #23, !dbg !10858
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10824, metadata !DIExpression()) #23, !dbg !10858
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10860
  br i1 %8, label %10, label %9, !dbg !10861

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.144, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.148, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.146, i32 0, i32 0), i32 noundef 194) #25, !dbg !10862
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.149, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10862
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.146, i32 0, i32 0), i32 noundef 194) #25, !dbg !10862
  unreachable, !dbg !10862

10:                                               ; preds = %4
  %11 = add i32 %6, %5, !dbg !10863
  call void @llvm.dbg.value(metadata !DIArgList(i32 %11, i32 %7), metadata !10844, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10854
  %12 = sub i32 %11, %7, !dbg !10864
  call void @llvm.dbg.value(metadata i32 %12, metadata !10844, metadata !DIExpression()), !dbg !10854
  %13 = extractvalue { i32, i32 } %1, 0, !dbg !10847
  call void @llvm.dbg.value(metadata i32 %13, metadata !10773, metadata !DIExpression()) #23, !dbg !10849
  call void @llvm.dbg.value(metadata i32 %13, metadata !10767, metadata !DIExpression()) #23, !dbg !10845
  call void @llvm.dbg.value(metadata i32 %13, metadata !10843, metadata !DIExpression()), !dbg !10854
  call void @llvm.dbg.value(metadata i32 undef, metadata !10819, metadata !DIExpression()) #23, !dbg !10858
  call void @llvm.dbg.value(metadata i32 undef, metadata !10833, metadata !DIExpression()) #23, !dbg !10865
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !10867, !srcloc !10839
  %14 = udiv i32 %12, 16800, !dbg !10868
  ret i32 %14, !dbg !10869
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !10870 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10761, metadata !DIExpression()) #23, !dbg !10874
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10876, !srcloc !10776
  call void @llvm.dbg.value(metadata i32 undef, metadata !10773, metadata !DIExpression()) #23, !dbg !10878
  call void @llvm.dbg.value(metadata i32 undef, metadata !10774, metadata !DIExpression()) #23, !dbg !10878
  call void @llvm.dbg.value(metadata i32 undef, metadata !10767, metadata !DIExpression()) #23, !dbg !10874
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10879
  br i1 %2, label %4, label %3, !dbg !10880

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.144, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.145, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.146, i32 0, i32 0), i32 noundef 148) #25, !dbg !10881
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.147, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10881
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.146, i32 0, i32 0), i32 noundef 148) #25, !dbg !10881
  unreachable, !dbg !10881

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !10773, metadata !DIExpression()) #23, !dbg !10878
  call void @llvm.dbg.value(metadata i32 undef, metadata !10767, metadata !DIExpression()) #23, !dbg !10874
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10882
  call void @llvm.dbg.value(metadata i32 undef, metadata !10872, metadata !DIExpression()), !dbg !10883
  %5 = tail call fastcc i32 @elapsed() #24, !dbg !10884
  %6 = load i32, i32* @cycle_count, align 4, !dbg !10885
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %6), metadata !10873, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !10883
  call void @llvm.dbg.value(metadata i32 undef, metadata !10819, metadata !DIExpression()) #23, !dbg !10886
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10824, metadata !DIExpression()) #23, !dbg !10886
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10888
  br i1 %7, label %9, label %8, !dbg !10889

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.144, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.148, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.146, i32 0, i32 0), i32 noundef 194) #25, !dbg !10890
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.149, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10890
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.146, i32 0, i32 0), i32 noundef 194) #25, !dbg !10890
  unreachable, !dbg !10890

9:                                                ; preds = %4
  %10 = add i32 %6, %5, !dbg !10891
  call void @llvm.dbg.value(metadata i32 %10, metadata !10873, metadata !DIExpression()), !dbg !10883
  %11 = extractvalue { i32, i32 } %1, 0, !dbg !10876
  call void @llvm.dbg.value(metadata i32 %11, metadata !10773, metadata !DIExpression()) #23, !dbg !10878
  call void @llvm.dbg.value(metadata i32 %11, metadata !10767, metadata !DIExpression()) #23, !dbg !10874
  call void @llvm.dbg.value(metadata i32 %11, metadata !10872, metadata !DIExpression()), !dbg !10883
  call void @llvm.dbg.value(metadata i32 undef, metadata !10819, metadata !DIExpression()) #23, !dbg !10886
  call void @llvm.dbg.value(metadata i32 undef, metadata !10833, metadata !DIExpression()) #23, !dbg !10892
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !10894, !srcloc !10839
  ret i32 %10, !dbg !10895
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #14 !dbg !10896 {
  %1 = load i32, i32* @last_load, align 4, !dbg !10897
  %2 = icmp eq i32 %1, -16777216, !dbg !10899
  br i1 %2, label %3, label %6, !dbg !10900

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10901
  %5 = or i32 %4, 1, !dbg !10901
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10901
  br label %6, !dbg !10903

6:                                                ; preds = %3, %0
  ret void, !dbg !10904
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #14 !dbg !10905 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10906
  %2 = and i32 %1, -2, !dbg !10906
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10906
  ret void, !dbg !10907
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #13 !dbg !10908 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10934, metadata !DIExpression()), !dbg !10937
  call void @llvm.dbg.value(metadata i8 %1, metadata !10935, metadata !DIExpression()), !dbg !10937
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10936, metadata !DIExpression()), !dbg !10937
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !10938
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10938
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !10937
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10939
  %8 = load i8, i8* %6, align 4, !dbg !10940
  %9 = zext i8 %8 to i32, !dbg !10941
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !10941
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !10942
  br i1 %11, label %18, label %24, !dbg !10943

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !10937
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10939
  %14 = load i8, i8* %6, align 4, !dbg !10940
  %15 = zext i8 %14 to i32, !dbg !10941
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !10941
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !10942
  br i1 %17, label %18, label %24, !dbg !10943, !llvm.loop !10944

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !10946
  %21 = load i8, i8* %20, align 1, !dbg !10946
  %22 = icmp eq i8 %21, %1, !dbg !10949
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !10950
  br i1 %22, label %24, label %12, !dbg !10951

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !10937
  ret i32 %25, !dbg !10952
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10953 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !10964, metadata !DIExpression()), !dbg !10980
  call void @llvm.dbg.value(metadata i8 %1, metadata !10965, metadata !DIExpression()), !dbg !10980
  call void @llvm.dbg.value(metadata i32 %2, metadata !10966, metadata !DIExpression()), !dbg !10980
  call void @llvm.dbg.value(metadata i32 0, metadata !10969, metadata !DIExpression()), !dbg !10980
  call void @llvm.dbg.value(metadata i32 0, metadata !10970, metadata !DIExpression()), !dbg !10980
  call void @llvm.dbg.value(metadata i8 0, metadata !10971, metadata !DIExpression()), !dbg !10981
  %4 = icmp eq i8 %1, 0, !dbg !10982
  br i1 %4, label %35, label %5, !dbg !10983

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !10982
  br label %9, !dbg !10983

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !10971, metadata !DIExpression()), !dbg !10981
  call void @llvm.dbg.value(metadata i32 %29, metadata !10969, metadata !DIExpression()), !dbg !10980
  %8 = icmp eq i32 %34, %6, !dbg !10982
  br i1 %8, label %35, label %9, !dbg !10983, !llvm.loop !10984

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !10971, metadata !DIExpression()), !dbg !10981
  call void @llvm.dbg.value(metadata i32 %11, metadata !10969, metadata !DIExpression()), !dbg !10980
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !10986
  %13 = load i32, i32* %12, align 4, !dbg !10986
  call void @llvm.dbg.value(metadata i32 %13, metadata !10968, metadata !DIExpression()), !dbg !10980
  %14 = and i32 %13, 31, !dbg !10987
  %15 = icmp ult i32 %14, 16, !dbg !10988
  br i1 %15, label %16, label %20, !dbg !10989

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10990
  %18 = load i32, i32* %17, align 4, !dbg !10990
  %19 = or i32 %18, 32, !dbg !10992
  call void @llvm.dbg.value(metadata i32 %19, metadata !10969, metadata !DIExpression()), !dbg !10980
  br label %28, !dbg !10993

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !10994

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10995
  %23 = load i32, i32* %22, align 4, !dbg !10995
  call void @llvm.dbg.value(metadata i32 %23, metadata !10973, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !10996
  %24 = lshr i32 %23, 7, !dbg !10997
  %25 = and i32 %24, 16, !dbg !10997
  %26 = or i32 %25, %23, !dbg !10997
  call void @llvm.dbg.value(metadata i32 %26, metadata !10969, metadata !DIExpression()), !dbg !10980
  br label %28, !dbg !10998

27:                                               ; preds = %20
  br label %28

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ %11, %27 ], [ 48, %20 ], !dbg !10980
  call void @llvm.dbg.value(metadata i32 %29, metadata !10969, metadata !DIExpression()), !dbg !10980
  %30 = lshr i32 %13, 5, !dbg !10999
  %31 = and i32 %30, 255, !dbg !10999
  call void @llvm.dbg.value(metadata i32 %31, metadata !10967, metadata !DIExpression()), !dbg !10980
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #24, !dbg !11000
  call void @llvm.dbg.value(metadata i32 %32, metadata !10970, metadata !DIExpression()), !dbg !10980
  %33 = icmp slt i32 %32, 0, !dbg !11001
  %34 = add nuw nsw i32 %10, 1, !dbg !11003
  call void @llvm.dbg.value(metadata i32 %34, metadata !10971, metadata !DIExpression()), !dbg !10981
  br i1 %33, label %35, label %7, !dbg !11004

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !11005
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11006 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11010, metadata !DIExpression()), !dbg !11014
  call void @llvm.dbg.value(metadata i32 %1, metadata !11011, metadata !DIExpression()), !dbg !11014
  call void @llvm.dbg.value(metadata i32 %2, metadata !11012, metadata !DIExpression()), !dbg !11014
  %4 = icmp ugt i32 %0, 175, !dbg !11015
  br i1 %4, label %16, label %5, !dbg !11017

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !11018
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !11019
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !11019
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !11013, metadata !DIExpression()), !dbg !11014
  %9 = add nsw i32 %6, -9, !dbg !11020
  %10 = icmp ult i32 %9, 2, !dbg !11020
  br i1 %10, label %16, label %11, !dbg !11022

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.154(%struct.device* noundef %8) #24, !dbg !11023
  br i1 %12, label %13, label %16, !dbg !11024

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !11025
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #25, !dbg !11026
  br label %16, !dbg !11027

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !11014
  ret i32 %17, !dbg !11028
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.154(%struct.device* noundef %0) unnamed_addr #1 !dbg !11029 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11033, metadata !DIExpression()), !dbg !11034
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11035, !srcloc !11037
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.155(%struct.device* noundef %0) #24, !dbg !11038
  ret i1 %2, !dbg !11039
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.155(%struct.device* noundef %0) unnamed_addr #1 !dbg !11040 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11042, metadata !DIExpression()), !dbg !11043
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !11044
  ret i1 %2, !dbg !11045
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #3 !dbg !11046 {
  ret void, !dbg !11047
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #15 !dbg !11048 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11050, metadata !DIExpression()), !dbg !11055
  call void @llvm.dbg.value(metadata i32 0, metadata !11051, metadata !DIExpression()), !dbg !11055
  call void @llvm.dbg.value(metadata i32 2, metadata !11052, metadata !DIExpression()), !dbg !11055
  call void @llvm.dbg.value(metadata i32 0, metadata !11053, metadata !DIExpression()), !dbg !11055
  call void @llvm.dbg.value(metadata i32 2, metadata !11054, metadata !DIExpression()), !dbg !11055
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11056
  %2 = and i32 %1, 12, !dbg !11057
  call void @llvm.dbg.value(metadata i32 %2, metadata !11050, metadata !DIExpression()), !dbg !11055
  switch i32 %2, label %21 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !11058

3:                                                ; preds = %0
  br label %21, !dbg !11059

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11061
  call void @llvm.dbg.value(metadata i32 %5, metadata !11053, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !11055
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11062
  %7 = and i32 %6, 63, !dbg !11063
  call void @llvm.dbg.value(metadata i32 %7, metadata !11054, metadata !DIExpression()), !dbg !11055
  %8 = and i32 %5, 4194304, !dbg !11064
  %9 = icmp eq i32 %8, 0, !dbg !11064
  %10 = select i1 %9, i32 16000000, i32 12000000
  %11 = udiv i32 %10, %7, !dbg !11066
  %12 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11066
  %13 = lshr i32 %12, 6, !dbg !11066
  %14 = and i32 %13, 511, !dbg !11066
  %15 = mul i32 %14, %11, !dbg !11066
  call void @llvm.dbg.value(metadata i32 %15, metadata !11051, metadata !DIExpression()), !dbg !11055
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11067
  %17 = lshr i32 %16, 15, !dbg !11068
  %18 = and i32 %17, 6, !dbg !11068
  %19 = add nuw nsw i32 %18, 2, !dbg !11068
  call void @llvm.dbg.value(metadata i32 %19, metadata !11052, metadata !DIExpression()), !dbg !11055
  %20 = udiv i32 %15, %19, !dbg !11069
  br label %21, !dbg !11070

21:                                               ; preds = %0, %4, %3
  %22 = phi i32 [ %20, %4 ], [ 12000000, %3 ], [ 16000000, %0 ]
  store i32 %22, i32* @SystemCoreClock, align 4, !dbg !11071
  %23 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11072
  %24 = lshr i32 %23, 4, !dbg !11073
  %25 = and i32 %24, 15, !dbg !11073
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %25, !dbg !11074
  %27 = load i8, i8* %26, align 1, !dbg !11074
  %28 = zext i8 %27 to i32, !dbg !11074
  call void @llvm.dbg.value(metadata i32 %28, metadata !11050, metadata !DIExpression()), !dbg !11055
  %29 = lshr i32 %22, %28, !dbg !11075
  store i32 %29, i32* @SystemCoreClock, align 4, !dbg !11075
  ret void, !dbg !11076
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !11077 {
  ret i32 0, !dbg !11082
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !11083 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11109, metadata !DIExpression()), !dbg !11120
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !11121
  br i1 %3, label %311, label %4, !dbg !11123

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11124
  %6 = load i32, i32* %5, align 4, !dbg !11124
  %7 = and i32 %6, 1, !dbg !11126
  %8 = icmp eq i32 %7, 0, !dbg !11127
  br i1 %8, label %66, label %9, !dbg !11128

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11129
  %11 = and i32 %10, 12, !dbg !11129
  %12 = icmp eq i32 %11, 4, !dbg !11132
  br i1 %12, label %21, label %13, !dbg !11133

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11134
  %15 = and i32 %14, 12, !dbg !11134
  %16 = icmp eq i32 %15, 8, !dbg !11135
  br i1 %16, label %17, label %29, !dbg !11136

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11137
  %19 = and i32 %18, 4194304, !dbg !11138
  %20 = icmp eq i32 %19, 0, !dbg !11139
  br i1 %20, label %29, label %21, !dbg !11140

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11141
  %23 = and i32 %22, 131072, !dbg !11141
  %24 = icmp eq i32 %23, 0, !dbg !11141
  br i1 %24, label %66, label %25, !dbg !11144

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11145
  %27 = load i32, i32* %26, align 4, !dbg !11145
  %28 = icmp eq i32 %27, 0, !dbg !11146
  br i1 %28, label %311, label %66, !dbg !11147

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11148
  %31 = load i32, i32* %30, align 4, !dbg !11148
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !11152

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11153
  %34 = or i32 %33, 65536, !dbg !11153
  br label %45, !dbg !11153

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11155
  %37 = or i32 %36, 262144, !dbg !11155
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11155
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11155
  %39 = or i32 %38, 65536, !dbg !11155
  br label %45, !dbg !11155

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11158
  %42 = and i32 %41, -65537, !dbg !11158
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11158
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11158
  %44 = and i32 %43, -262145, !dbg !11158
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11160
  %47 = load i32, i32* %30, align 4, !dbg !11161
  %48 = icmp eq i32 %47, 0, !dbg !11163
  %49 = tail call i32 @HAL_GetTick() #25, !dbg !11164
  call void @llvm.dbg.value(metadata i32 %49, metadata !11110, metadata !DIExpression()), !dbg !11120
  call void @llvm.dbg.value(metadata i32 %49, metadata !11110, metadata !DIExpression()), !dbg !11120
  br i1 %48, label %58, label %50, !dbg !11165

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11166
  %52 = and i32 %51, 131072, !dbg !11168
  %53 = icmp eq i32 %52, 0, !dbg !11168
  br i1 %53, label %54, label %66, !dbg !11169

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #25, !dbg !11170
  %56 = sub i32 %55, %49, !dbg !11173
  %57 = icmp ugt i32 %56, 100, !dbg !11174
  br i1 %57, label %311, label %50, !dbg !11175, !llvm.loop !11176

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11178
  %60 = and i32 %59, 131072, !dbg !11178
  %61 = icmp eq i32 %60, 0, !dbg !11178
  br i1 %61, label %66, label %62, !dbg !11180

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #25, !dbg !11181
  %64 = sub i32 %63, %49, !dbg !11184
  %65 = icmp ugt i32 %64, 100, !dbg !11185
  br i1 %65, label %311, label %58, !dbg !11186, !llvm.loop !11187

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !11189
  %68 = and i32 %67, 2, !dbg !11191
  %69 = icmp eq i32 %68, 0, !dbg !11192
  br i1 %69, label %121, label %70, !dbg !11193

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11194
  %72 = and i32 %71, 12, !dbg !11194
  %73 = icmp eq i32 %72, 0, !dbg !11197
  br i1 %73, label %82, label %74, !dbg !11198

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11199
  %76 = and i32 %75, 12, !dbg !11199
  %77 = icmp eq i32 %76, 8, !dbg !11200
  br i1 %77, label %78, label %90, !dbg !11201

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11202
  %80 = and i32 %79, 4194304, !dbg !11203
  %81 = icmp eq i32 %80, 0, !dbg !11204
  br i1 %81, label %82, label %90, !dbg !11205

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11206
  %84 = and i32 %83, 2, !dbg !11206
  %85 = icmp eq i32 %84, 0, !dbg !11206
  br i1 %85, label %114, label %86, !dbg !11209

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11210
  %88 = load i32, i32* %87, align 4, !dbg !11210
  %89 = icmp eq i32 %88, 1, !dbg !11211
  br i1 %89, label %114, label %311, !dbg !11212

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11213
  %92 = load i32, i32* %91, align 4, !dbg !11213
  %93 = icmp eq i32 %92, 0, !dbg !11216
  br i1 %93, label %104, label %94, !dbg !11217

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !11218
  %95 = tail call i32 @HAL_GetTick() #25, !dbg !11220
  call void @llvm.dbg.value(metadata i32 %95, metadata !11110, metadata !DIExpression()), !dbg !11120
  br label %96, !dbg !11221

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11222
  %98 = and i32 %97, 2, !dbg !11223
  %99 = icmp eq i32 %98, 0, !dbg !11223
  br i1 %99, label %100, label %114, !dbg !11221

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #25, !dbg !11224
  %102 = sub i32 %101, %95, !dbg !11227
  %103 = icmp ugt i32 %102, 2, !dbg !11228
  br i1 %103, label %311, label %96, !dbg !11229, !llvm.loop !11230

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !11232
  %105 = tail call i32 @HAL_GetTick() #25, !dbg !11234
  call void @llvm.dbg.value(metadata i32 %105, metadata !11110, metadata !DIExpression()), !dbg !11120
  br label %106, !dbg !11235

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11236
  %108 = and i32 %107, 2, !dbg !11236
  %109 = icmp eq i32 %108, 0, !dbg !11236
  br i1 %109, label %121, label %110, !dbg !11235

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #25, !dbg !11237
  %112 = sub i32 %111, %105, !dbg !11240
  %113 = icmp ugt i32 %112, 2, !dbg !11241
  br i1 %113, label %311, label %106, !dbg !11242, !llvm.loop !11243

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11245
  %116 = and i32 %115, -249, !dbg !11245
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11245
  %118 = load i32, i32* %117, align 4, !dbg !11245
  %119 = shl i32 %118, 3, !dbg !11245
  %120 = or i32 %119, %116, !dbg !11245
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11245
  br label %121, !dbg !11246

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !11246
  %123 = and i32 %122, 8, !dbg !11248
  %124 = icmp eq i32 %123, 0, !dbg !11249
  br i1 %124, label %149, label %125, !dbg !11250

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11251
  %127 = load i32, i32* %126, align 4, !dbg !11251
  %128 = icmp eq i32 %127, 0, !dbg !11254
  br i1 %128, label %139, label %129, !dbg !11255

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !11256
  %130 = tail call i32 @HAL_GetTick() #25, !dbg !11258
  call void @llvm.dbg.value(metadata i32 %130, metadata !11110, metadata !DIExpression()), !dbg !11120
  br label %131, !dbg !11259

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11260
  %133 = and i32 %132, 2, !dbg !11261
  %134 = icmp eq i32 %133, 0, !dbg !11261
  br i1 %134, label %135, label %149, !dbg !11259

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #25, !dbg !11262
  %137 = sub i32 %136, %130, !dbg !11265
  %138 = icmp ugt i32 %137, 2, !dbg !11266
  br i1 %138, label %311, label %131, !dbg !11267, !llvm.loop !11268

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !11270
  %140 = tail call i32 @HAL_GetTick() #25, !dbg !11272
  call void @llvm.dbg.value(metadata i32 %140, metadata !11110, metadata !DIExpression()), !dbg !11120
  br label %141, !dbg !11273

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11274
  %143 = and i32 %142, 2, !dbg !11274
  %144 = icmp eq i32 %143, 0, !dbg !11274
  br i1 %144, label %149, label %145, !dbg !11273

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #25, !dbg !11275
  %147 = sub i32 %146, %140, !dbg !11278
  %148 = icmp ugt i32 %147, 2, !dbg !11279
  br i1 %148, label %311, label %141, !dbg !11280, !llvm.loop !11281

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !11283
  %151 = and i32 %150, 4, !dbg !11284
  %152 = icmp eq i32 %151, 0, !dbg !11285
  br i1 %152, label %221, label %153, !dbg !11286

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !11112, metadata !DIExpression()), !dbg !11287
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11288
  %155 = and i32 %154, 268435456, !dbg !11288
  %156 = icmp eq i32 %155, 0, !dbg !11288
  br i1 %156, label %157, label %164, !dbg !11289

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !11290
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !11290
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11116, metadata !DIExpression()), !dbg !11290
  store volatile i32 0, i32* %2, align 4, !dbg !11290
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11290
  %160 = or i32 %159, 268435456, !dbg !11290
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11290
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11290
  %162 = and i32 %161, 268435456, !dbg !11290
  store volatile i32 %162, i32* %2, align 4, !dbg !11290
  %163 = load volatile i32, i32* %2, align 4, !dbg !11290
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !11291
  call void @llvm.dbg.value(metadata i32 1, metadata !11112, metadata !DIExpression()), !dbg !11287
  br label %164, !dbg !11292

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !11112, metadata !DIExpression()), !dbg !11287
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11293
  %166 = and i32 %165, 256, !dbg !11293
  %167 = icmp eq i32 %166, 0, !dbg !11293
  br i1 %167, label %168, label %180, !dbg !11295

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11296
  %170 = or i32 %169, 256, !dbg !11296
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11296
  %171 = tail call i32 @HAL_GetTick() #25, !dbg !11298
  call void @llvm.dbg.value(metadata i32 %171, metadata !11110, metadata !DIExpression()), !dbg !11120
  br label %172, !dbg !11299

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11300
  %174 = and i32 %173, 256, !dbg !11300
  %175 = icmp eq i32 %174, 0, !dbg !11300
  br i1 %175, label %176, label %180, !dbg !11299

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #25, !dbg !11301
  %178 = sub i32 %177, %171, !dbg !11304
  %179 = icmp ugt i32 %178, 2, !dbg !11305
  br i1 %179, label %311, label %172, !dbg !11306, !llvm.loop !11307

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11309
  %182 = load i32, i32* %181, align 4, !dbg !11309
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !11312

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11313
  %185 = or i32 %184, 1, !dbg !11313
  br label %196, !dbg !11313

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11315
  %188 = or i32 %187, 4, !dbg !11315
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11315
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11315
  %190 = or i32 %189, 1, !dbg !11315
  br label %196, !dbg !11315

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11318
  %193 = and i32 %192, -2, !dbg !11318
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11318
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11318
  %195 = and i32 %194, -5, !dbg !11318
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11320
  %198 = load i32, i32* %181, align 4, !dbg !11321
  %199 = icmp eq i32 %198, 0, !dbg !11323
  %200 = tail call i32 @HAL_GetTick() #25, !dbg !11324
  call void @llvm.dbg.value(metadata i32 %200, metadata !11110, metadata !DIExpression()), !dbg !11120
  call void @llvm.dbg.value(metadata i32 %200, metadata !11110, metadata !DIExpression()), !dbg !11120
  br i1 %199, label %209, label %201, !dbg !11325

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11326
  %203 = and i32 %202, 2, !dbg !11328
  %204 = icmp eq i32 %203, 0, !dbg !11328
  br i1 %204, label %205, label %217, !dbg !11329

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #25, !dbg !11330
  %207 = sub i32 %206, %200, !dbg !11333
  %208 = icmp ugt i32 %207, 5000, !dbg !11334
  br i1 %208, label %311, label %201, !dbg !11335, !llvm.loop !11336

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11338
  %211 = and i32 %210, 2, !dbg !11338
  %212 = icmp eq i32 %211, 0, !dbg !11338
  br i1 %212, label %217, label %213, !dbg !11340

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #25, !dbg !11341
  %215 = sub i32 %214, %200, !dbg !11344
  %216 = icmp ugt i32 %215, 5000, !dbg !11345
  br i1 %216, label %311, label %209, !dbg !11346, !llvm.loop !11347

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !11349

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11350
  %220 = and i32 %219, -268435457, !dbg !11350
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11350
  br label %221, !dbg !11353

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !11354
  %223 = load i32, i32* %222, align 4, !dbg !11354
  %224 = icmp eq i32 %223, 0, !dbg !11356
  br i1 %224, label %310, label %225, !dbg !11357

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11358
  %227 = and i32 %226, 12, !dbg !11358
  %228 = icmp eq i32 %227, 8, !dbg !11361
  br i1 %228, label %277, label %229, !dbg !11362

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !11363
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11366
  %231 = tail call i32 @HAL_GetTick() #25, !dbg !11366
  call void @llvm.dbg.value(metadata i32 %231, metadata !11110, metadata !DIExpression()), !dbg !11120
  call void @llvm.dbg.value(metadata i32 %231, metadata !11110, metadata !DIExpression()), !dbg !11120
  br i1 %230, label %232, label %269, !dbg !11367

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11368
  %234 = and i32 %233, 33554432, !dbg !11368
  %235 = icmp eq i32 %234, 0, !dbg !11368
  br i1 %235, label %240, label %236, !dbg !11370

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #25, !dbg !11371
  %238 = sub i32 %237, %231, !dbg !11374
  %239 = icmp ugt i32 %238, 2, !dbg !11375
  br i1 %239, label %311, label %232, !dbg !11376, !llvm.loop !11377

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11379
  %242 = load i32, i32* %241, align 4, !dbg !11379
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11379
  %244 = load i32, i32* %243, align 4, !dbg !11379
  %245 = or i32 %244, %242, !dbg !11379
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11379
  %247 = load i32, i32* %246, align 4, !dbg !11379
  %248 = shl i32 %247, 6, !dbg !11379
  %249 = or i32 %245, %248, !dbg !11379
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11379
  %251 = load i32, i32* %250, align 4, !dbg !11379
  %252 = shl i32 %251, 15, !dbg !11379
  %253 = add i32 %252, -65536, !dbg !11379
  %254 = and i32 %253, -65536, !dbg !11379
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11379
  %256 = load i32, i32* %255, align 4, !dbg !11379
  %257 = shl i32 %256, 24, !dbg !11379
  %258 = or i32 %249, %257, !dbg !11379
  %259 = or i32 %258, %254, !dbg !11379
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11379
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11380
  %260 = tail call i32 @HAL_GetTick() #25, !dbg !11381
  call void @llvm.dbg.value(metadata i32 %260, metadata !11110, metadata !DIExpression()), !dbg !11120
  br label %261, !dbg !11382

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11383
  %263 = and i32 %262, 33554432, !dbg !11384
  %264 = icmp eq i32 %263, 0, !dbg !11384
  br i1 %264, label %265, label %310, !dbg !11382

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #25, !dbg !11385
  %267 = sub i32 %266, %260, !dbg !11388
  %268 = icmp ugt i32 %267, 2, !dbg !11389
  br i1 %268, label %311, label %261, !dbg !11390, !llvm.loop !11391

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11393
  %271 = and i32 %270, 33554432, !dbg !11393
  %272 = icmp eq i32 %271, 0, !dbg !11393
  br i1 %272, label %310, label %273, !dbg !11395

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #25, !dbg !11396
  %275 = sub i32 %274, %231, !dbg !11399
  %276 = icmp ugt i32 %275, 2, !dbg !11400
  br i1 %276, label %311, label %269, !dbg !11401, !llvm.loop !11402

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !11404
  br i1 %278, label %311, label %279, !dbg !11407

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11408
  call void @llvm.dbg.value(metadata i32 %280, metadata !11111, metadata !DIExpression()), !dbg !11120
  %281 = and i32 %280, 4194304, !dbg !11410
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11412
  %283 = load i32, i32* %282, align 4, !dbg !11412
  %284 = icmp eq i32 %281, %283, !dbg !11413
  br i1 %284, label %285, label %311, !dbg !11414

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !11415
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11416
  %288 = load i32, i32* %287, align 4, !dbg !11416
  %289 = icmp eq i32 %286, %288, !dbg !11417
  br i1 %289, label %290, label %311, !dbg !11418

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !11419
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11420
  %293 = load i32, i32* %292, align 4, !dbg !11420
  %294 = shl i32 %293, 6, !dbg !11421
  %295 = icmp eq i32 %291, %294, !dbg !11422
  br i1 %295, label %296, label %311, !dbg !11423

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !11424
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11425
  %299 = load i32, i32* %298, align 4, !dbg !11425
  %300 = shl i32 %299, 15, !dbg !11426
  %301 = add i32 %300, -65536, !dbg !11426
  %302 = and i32 %301, -65536, !dbg !11426
  %303 = icmp eq i32 %297, %302, !dbg !11427
  br i1 %303, label %304, label %311, !dbg !11428

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !11429
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11430
  %307 = load i32, i32* %306, align 4, !dbg !11430
  %308 = shl i32 %307, 24, !dbg !11431
  %309 = icmp eq i32 %305, %308, !dbg !11432
  br i1 %309, label %310, label %311, !dbg !11433

310:                                              ; preds = %269, %261, %304, %221
  br label %311, !dbg !11434

311:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %277, %86, %25, %1, %310
  %312 = phi i32 [ 0, %310 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !11120
  ret i32 %312, !dbg !11435
}

; Function Attrs: optsize
declare !dbg !11436 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !11438 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11451, metadata !DIExpression()), !dbg !11454
  call void @llvm.dbg.value(metadata i32 %1, metadata !11452, metadata !DIExpression()), !dbg !11454
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !11455
  br i1 %3, label %115, label %4, !dbg !11457

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11458
  %6 = and i32 %5, 7, !dbg !11458
  %7 = icmp ult i32 %6, %1, !dbg !11460
  br i1 %7, label %8, label %13, !dbg !11461

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !11462
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !11462
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11464
  %11 = and i32 %10, 7, !dbg !11464
  %12 = icmp eq i32 %11, %1, !dbg !11466
  br i1 %12, label %13, label %115, !dbg !11467

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11468
  %15 = load i32, i32* %14, align 4, !dbg !11468
  %16 = and i32 %15, 2, !dbg !11470
  %17 = icmp eq i32 %16, 0, !dbg !11471
  br i1 %17, label %39, label %18, !dbg !11472

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !11473
  %20 = icmp eq i32 %19, 0, !dbg !11476
  br i1 %20, label %25, label %21, !dbg !11477

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11478
  %23 = or i32 %22, 7168, !dbg !11478
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11478
  %24 = load i32, i32* %14, align 4, !dbg !11480
  br label %25, !dbg !11482

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !11480
  %27 = and i32 %26, 8, !dbg !11483
  %28 = icmp eq i32 %27, 0, !dbg !11484
  br i1 %28, label %32, label %29, !dbg !11485

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11486
  %31 = or i32 %30, 57344, !dbg !11486
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11486
  br label %32, !dbg !11488

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11489
  %34 = and i32 %33, -241, !dbg !11489
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11489
  %36 = load i32, i32* %35, align 4, !dbg !11489
  %37 = or i32 %34, %36, !dbg !11489
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11489
  %38 = load i32, i32* %14, align 4, !dbg !11490
  br label %39, !dbg !11492

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !11490
  %41 = and i32 %40, 1, !dbg !11493
  %42 = icmp eq i32 %41, 0, !dbg !11494
  br i1 %42, label %73, label %43, !dbg !11495

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11496
  %45 = load i32, i32* %44, align 4, !dbg !11496
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !11499

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11500
  %48 = and i32 %47, 131072, !dbg !11503
  %49 = icmp eq i32 %48, 0, !dbg !11503
  br i1 %49, label %115, label %58, !dbg !11504

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11505
  %52 = and i32 %51, 33554432, !dbg !11509
  %53 = icmp eq i32 %52, 0, !dbg !11509
  br i1 %53, label %115, label %58, !dbg !11510

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11511
  %56 = and i32 %55, 2, !dbg !11514
  %57 = icmp eq i32 %56, 0, !dbg !11514
  br i1 %57, label %115, label %58, !dbg !11515

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11516
  %60 = and i32 %59, -4, !dbg !11516
  %61 = or i32 %60, %45, !dbg !11516
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11516
  %62 = tail call i32 @HAL_GetTick() #25, !dbg !11517
  call void @llvm.dbg.value(metadata i32 %62, metadata !11453, metadata !DIExpression()), !dbg !11454
  br label %63, !dbg !11518

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11519
  %65 = and i32 %64, 12, !dbg !11519
  %66 = load i32, i32* %44, align 4, !dbg !11520
  %67 = shl i32 %66, 2, !dbg !11521
  %68 = icmp eq i32 %65, %67, !dbg !11522
  br i1 %68, label %73, label %69, !dbg !11518

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #25, !dbg !11523
  %71 = sub i32 %70, %62, !dbg !11526
  %72 = icmp ugt i32 %71, 5000, !dbg !11527
  br i1 %72, label %115, label %63, !dbg !11528, !llvm.loop !11529

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11531
  %75 = and i32 %74, 7, !dbg !11531
  %76 = icmp ugt i32 %75, %1, !dbg !11533
  br i1 %76, label %77, label %82, !dbg !11534

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !11535
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !11535
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11537
  %80 = and i32 %79, 7, !dbg !11537
  %81 = icmp eq i32 %80, %1, !dbg !11539
  br i1 %81, label %82, label %115, !dbg !11540

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !11541
  %84 = and i32 %83, 4, !dbg !11543
  %85 = icmp eq i32 %84, 0, !dbg !11544
  br i1 %85, label %93, label %86, !dbg !11545

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11546
  %88 = and i32 %87, -7169, !dbg !11546
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11546
  %90 = load i32, i32* %89, align 4, !dbg !11546
  %91 = or i32 %88, %90, !dbg !11546
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11546
  %92 = load i32, i32* %14, align 4, !dbg !11548
  br label %93, !dbg !11550

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !11548
  %95 = and i32 %94, 8, !dbg !11551
  %96 = icmp eq i32 %95, 0, !dbg !11552
  br i1 %96, label %104, label %97, !dbg !11553

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11554
  %99 = and i32 %98, -57345, !dbg !11554
  %100 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11554
  %101 = load i32, i32* %100, align 4, !dbg !11554
  %102 = shl i32 %101, 3, !dbg !11554
  %103 = or i32 %102, %99, !dbg !11554
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11554
  br label %104, !dbg !11556

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #24, !dbg !11557
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11558
  %107 = lshr i32 %106, 4, !dbg !11559
  %108 = and i32 %107, 15, !dbg !11559
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !11560
  %110 = load i8, i8* %109, align 1, !dbg !11560
  %111 = zext i8 %110 to i32, !dbg !11560
  %112 = lshr i32 %105, %111, !dbg !11561
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !11562
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !11563
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #25, !dbg !11564
  br label %115, !dbg !11565

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !11454
  ret i32 %116, !dbg !11566
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !11567 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11569, metadata !DIExpression()), !dbg !11573
  call void @llvm.dbg.value(metadata i32 0, metadata !11570, metadata !DIExpression()), !dbg !11573
  call void @llvm.dbg.value(metadata i32 0, metadata !11571, metadata !DIExpression()), !dbg !11573
  call void @llvm.dbg.value(metadata i32 0, metadata !11572, metadata !DIExpression()), !dbg !11573
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11574
  %2 = and i32 %1, 12, !dbg !11575
  switch i32 %2, label %24 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !11576

3:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 12000000, metadata !11572, metadata !DIExpression()), !dbg !11573
  br label %24, !dbg !11577

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11580
  %6 = and i32 %5, 63, !dbg !11582
  call void @llvm.dbg.value(metadata i32 %6, metadata !11569, metadata !DIExpression()), !dbg !11573
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11583
  %8 = and i32 %7, 4194304, !dbg !11583
  %9 = icmp eq i32 %8, 0, !dbg !11585
  %10 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11586
  %11 = lshr i32 %10, 6, !dbg !11586
  %12 = and i32 %11, 511, !dbg !11586
  %13 = zext i32 %12 to i64, !dbg !11586
  %14 = select i1 %9, i64 16000000, i64 12000000
  %15 = mul nuw nsw i64 %14, %13, !dbg !11586
  %16 = zext i32 %6 to i64, !dbg !11586
  %17 = udiv i64 %15, %16, !dbg !11586
  %18 = trunc i64 %17 to i32, !dbg !11586
  call void @llvm.dbg.value(metadata i32 %18, metadata !11570, metadata !DIExpression()), !dbg !11573
  %19 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11587
  %20 = lshr i32 %19, 15, !dbg !11588
  %21 = and i32 %20, 6, !dbg !11588
  %22 = add nuw nsw i32 %21, 2, !dbg !11588
  call void @llvm.dbg.value(metadata i32 %22, metadata !11571, metadata !DIExpression()), !dbg !11573
  %23 = udiv i32 %18, %22, !dbg !11589
  call void @llvm.dbg.value(metadata i32 %23, metadata !11572, metadata !DIExpression()), !dbg !11573
  br label %24, !dbg !11590

24:                                               ; preds = %0, %4, %3
  %25 = phi i32 [ %23, %4 ], [ 12000000, %3 ], [ 16000000, %0 ], !dbg !11591
  call void @llvm.dbg.value(metadata i32 %25, metadata !11572, metadata !DIExpression()), !dbg !11573
  ret i32 %25, !dbg !11592
}

; Function Attrs: optsize
declare !dbg !11593 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11596 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11600, metadata !DIExpression()), !dbg !11620
  call void @llvm.dbg.value(metadata i32 %1, metadata !11601, metadata !DIExpression()), !dbg !11620
  call void @llvm.dbg.value(metadata i32 %2, metadata !11602, metadata !DIExpression()), !dbg !11620
  %7 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !11621
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #23, !dbg !11621
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !11603, metadata !DIExpression()), !dbg !11622
  %8 = icmp eq i32 %0, 0, !dbg !11623
  br i1 %8, label %9, label %23, !dbg !11624

9:                                                ; preds = %3
  %10 = bitcast i32* %5 to i8*, !dbg !11625
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10), !dbg !11625
  call void @llvm.dbg.declare(metadata i32* %5, metadata !11613, metadata !DIExpression()), !dbg !11625
  store volatile i32 0, i32* %5, align 4, !dbg !11625
  %11 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11625
  %12 = or i32 %11, 1, !dbg !11625
  store volatile i32 %12, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11625
  %13 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11625
  %14 = and i32 %13, 1, !dbg !11625
  store volatile i32 %14, i32* %5, align 4, !dbg !11625
  %15 = load volatile i32, i32* %5, align 4, !dbg !11625
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !11626
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !11627
  store i32 256, i32* %16, align 4, !dbg !11628
  %17 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !11629
  store i32 2, i32* %17, align 4, !dbg !11630
  %18 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !11631
  store i32 3, i32* %18, align 4, !dbg !11632
  %19 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !11633
  store i32 0, i32* %19, align 4, !dbg !11634
  %20 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !11635
  store i32 0, i32* %20, align 4, !dbg !11636
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #25, !dbg !11637
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11638
  %22 = and i32 %21, -123731969, !dbg !11638
  br label %38, !dbg !11639

23:                                               ; preds = %3
  %24 = bitcast i32* %6 to i8*, !dbg !11640
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24), !dbg !11640
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11617, metadata !DIExpression()), !dbg !11640
  store volatile i32 0, i32* %6, align 4, !dbg !11640
  %25 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11640
  %26 = or i32 %25, 4, !dbg !11640
  store volatile i32 %26, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11640
  %27 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11640
  %28 = and i32 %27, 4, !dbg !11640
  store volatile i32 %28, i32* %6, align 4, !dbg !11640
  %29 = load volatile i32, i32* %6, align 4, !dbg !11640
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24), !dbg !11641
  %30 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !11642
  store i32 512, i32* %30, align 4, !dbg !11643
  %31 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !11644
  store i32 2, i32* %31, align 4, !dbg !11645
  %32 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !11646
  store i32 3, i32* %32, align 4, !dbg !11647
  %33 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !11648
  store i32 0, i32* %33, align 4, !dbg !11649
  %34 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !11650
  store i32 0, i32* %34, align 4, !dbg !11651
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073874944 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #25, !dbg !11652
  %35 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11653
  %36 = and i32 %35, 134217727, !dbg !11653
  %37 = shl i32 %2, 3, !dbg !11653
  br label %38

38:                                               ; preds = %23, %9
  %39 = phi i32 [ %37, %23 ], [ %2, %9 ]
  %40 = phi i32 [ %36, %23 ], [ %22, %9 ]
  %41 = or i32 %39, %1, !dbg !11654
  %42 = or i32 %41, %40, !dbg !11654
  store volatile i32 %42, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11654
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #23, !dbg !11655
  ret void, !dbg !11655
}

; Function Attrs: optsize
declare !dbg !11656 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #14 !dbg !11660 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !11661
  ret void, !dbg !11662
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #14 !dbg !11663 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !11664
  ret void, !dbg !11665
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #8 !dbg !11666 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !11667
  ret i32 %1, !dbg !11668
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #15 !dbg !11669 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !11670
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11671
  %3 = lshr i32 %2, 10, !dbg !11672
  %4 = and i32 %3, 7, !dbg !11672
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11673
  %6 = load i8, i8* %5, align 1, !dbg !11673
  %7 = zext i8 %6 to i32, !dbg !11673
  %8 = lshr i32 %1, %7, !dbg !11674
  ret i32 %8, !dbg !11675
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #15 !dbg !11676 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !11677
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11678
  %3 = lshr i32 %2, 13, !dbg !11679
  %4 = and i32 %3, 7, !dbg !11679
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11680
  %6 = load i8, i8* %5, align 1, !dbg !11680
  %7 = zext i8 %6 to i32, !dbg !11680
  %8 = lshr i32 %1, %7, !dbg !11681
  ret i32 %8, !dbg !11682
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !11683 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11687, metadata !DIExpression()), !dbg !11688
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11689
  store i32 15, i32* %2, align 4, !dbg !11690
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11691
  %4 = and i32 %3, 262144, !dbg !11693
  %5 = icmp eq i32 %4, 0, !dbg !11694
  br i1 %5, label %8, label %6, !dbg !11695

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11696
  store i32 327680, i32* %7, align 4, !dbg !11698
  br label %15, !dbg !11699

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11700
  %10 = and i32 %9, 65536, !dbg !11702
  %11 = icmp eq i32 %10, 0, !dbg !11703
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11704
  br i1 %11, label %14, label %13, !dbg !11705

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !11706
  br label %15, !dbg !11708

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !11709
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11711
  %17 = and i32 %16, 1, !dbg !11713
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11714
  store i32 %17, i32* %18, align 4, !dbg !11716
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11717
  %20 = lshr i32 %19, 3, !dbg !11718
  %21 = and i32 %20, 31, !dbg !11718
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11719
  store i32 %21, i32* %22, align 4, !dbg !11720
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11721
  %24 = and i32 %23, 4, !dbg !11723
  %25 = icmp eq i32 %24, 0, !dbg !11724
  br i1 %25, label %28, label %26, !dbg !11725

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11726
  store i32 5, i32* %27, align 4, !dbg !11728
  br label %35, !dbg !11729

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11730
  %30 = and i32 %29, 1, !dbg !11732
  %31 = icmp eq i32 %30, 0, !dbg !11733
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11734
  br i1 %31, label %34, label %33, !dbg !11735

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !11736
  br label %35, !dbg !11738

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !11739
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11741
  %37 = and i32 %36, 1, !dbg !11743
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11744
  store i32 %37, i32* %38, align 4, !dbg !11746
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11747
  %40 = and i32 %39, 16777216, !dbg !11749
  %41 = icmp eq i32 %40, 0, !dbg !11750
  %42 = select i1 %41, i32 1, i32 2, !dbg !11751
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !11752
  store i32 %42, i32* %43, align 4, !dbg !11754
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11755
  %45 = and i32 %44, 4194304, !dbg !11756
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11757
  store i32 %45, i32* %46, align 4, !dbg !11758
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11759
  %48 = and i32 %47, 63, !dbg !11760
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11761
  store i32 %48, i32* %49, align 4, !dbg !11762
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11763
  %51 = lshr i32 %50, 6, !dbg !11764
  %52 = and i32 %51, 511, !dbg !11764
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11765
  store i32 %52, i32* %53, align 4, !dbg !11766
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11767
  %55 = shl i32 %54, 1, !dbg !11768
  %56 = and i32 %55, 393216, !dbg !11768
  %57 = add nuw nsw i32 %56, 131072, !dbg !11768
  %58 = lshr exact i32 %57, 16, !dbg !11769
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11770
  store i32 %58, i32* %59, align 4, !dbg !11771
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11772
  %61 = lshr i32 %60, 24, !dbg !11773
  %62 = and i32 %61, 15, !dbg !11773
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11774
  store i32 %62, i32* %63, align 4, !dbg !11775
  ret void, !dbg !11776
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #15 !dbg !11777 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11781, metadata !DIExpression()), !dbg !11783
  call void @llvm.dbg.value(metadata i32* %1, metadata !11782, metadata !DIExpression()), !dbg !11783
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11784
  store i32 15, i32* %3, align 4, !dbg !11785
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11786
  %5 = and i32 %4, 3, !dbg !11787
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11788
  store i32 %5, i32* %6, align 4, !dbg !11789
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11790
  %8 = and i32 %7, 240, !dbg !11791
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11792
  store i32 %8, i32* %9, align 4, !dbg !11793
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11794
  %11 = and i32 %10, 7168, !dbg !11795
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11796
  store i32 %11, i32* %12, align 4, !dbg !11797
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11798
  %14 = lshr i32 %13, 3, !dbg !11799
  %15 = and i32 %14, 7168, !dbg !11799
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11800
  store i32 %15, i32* %16, align 4, !dbg !11801
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11802
  %18 = and i32 %17, 7, !dbg !11803
  store i32 %18, i32* %1, align 4, !dbg !11804
  ret void, !dbg !11805
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !11806 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11807
  %2 = and i32 %1, 128, !dbg !11807
  %3 = icmp eq i32 %2, 0, !dbg !11807
  br i1 %3, label %5, label %4, !dbg !11809

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #24, !dbg !11810
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !11812
  br label %5, !dbg !11813

5:                                                ; preds = %4, %0
  ret void, !dbg !11814
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !11815 {
  ret void, !dbg !11816
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #14 !dbg !11817 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11820, metadata !DIExpression()), !dbg !11821
  tail call fastcc void @LL_InitTick(i32 noundef %0) #24, !dbg !11822
  ret void, !dbg !11823
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #14 !dbg !11824 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11827, metadata !DIExpression()), !dbg !11829
  call void @llvm.dbg.value(metadata i32 1000, metadata !11828, metadata !DIExpression()), !dbg !11829
  %2 = udiv i32 %0, 1000, !dbg !11830
  %3 = add nsw i32 %2, -1, !dbg !11831
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11832
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11833
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11834
  ret void, !dbg !11835
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #19 !dbg !11836 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11838, metadata !DIExpression()), !dbg !11840
  %3 = bitcast i32* %2 to i8*, !dbg !11841
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11841
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11839, metadata !DIExpression()), !dbg !11842
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11843
  store volatile i32 %4, i32* %2, align 4, !dbg !11842
  %5 = load volatile i32, i32* %2, align 4, !dbg !11844
  %6 = icmp eq i32 %0, -1, !dbg !11845
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11838, metadata !DIExpression()), !dbg !11840
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !11840
  call void @llvm.dbg.value(metadata i32 %8, metadata !11838, metadata !DIExpression()), !dbg !11840
  br label %9, !dbg !11847

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11838, metadata !DIExpression()), !dbg !11840
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11848
  call void @llvm.dbg.value(metadata i32 undef, metadata !11838, metadata !DIExpression()), !dbg !11840
  %12 = shl i32 %11, 15, !dbg !11840
  %13 = ashr i32 %12, 31, !dbg !11840
  %14 = add i32 %13, %10, !dbg !11840
  call void @llvm.dbg.value(metadata i32 %14, metadata !11838, metadata !DIExpression()), !dbg !11840
  %15 = icmp eq i32 %14, 0, !dbg !11847
  br i1 %15, label %16, label %9, !dbg !11847

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11851
  ret void, !dbg !11851
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #7 !dbg !11852 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11854, metadata !DIExpression()), !dbg !11855
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !11856
  ret void, !dbg !11857
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #14 !dbg !11858 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11863, metadata !DIExpression()), !dbg !11868
  call void @llvm.dbg.value(metadata i32 0, metadata !11866, metadata !DIExpression()), !dbg !11868
  call void @llvm.dbg.value(metadata i32 0, metadata !11867, metadata !DIExpression()), !dbg !11868
  %2 = icmp eq i32 %0, 0, !dbg !11869
  br i1 %2, label %52, label %3, !dbg !11871

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !11872
  %5 = icmp eq i32 %4, 16384, !dbg !11875
  br i1 %5, label %6, label %21, !dbg !11876

6:                                                ; preds = %3
  %7 = icmp ult i32 %0, 150000001, !dbg !11877
  %8 = select i1 %7, i32 0, i32 5, !dbg !11880
  call void @llvm.dbg.value(metadata i32 %8, metadata !11866, metadata !DIExpression()), !dbg !11868
  %9 = add i32 %0, -120000001, !dbg !11881
  %10 = icmp ult i32 %9, 30000000, !dbg !11881
  %11 = select i1 %10, i32 4, i32 %8, !dbg !11881
  call void @llvm.dbg.value(metadata i32 %11, metadata !11866, metadata !DIExpression()), !dbg !11868
  %12 = icmp ult i32 %9, -30000000, !dbg !11883
  %13 = select i1 %12, i32 %11, i32 3, !dbg !11883
  call void @llvm.dbg.value(metadata i32 %13, metadata !11866, metadata !DIExpression()), !dbg !11868
  %14 = icmp ugt i32 %0, 60000000, !dbg !11885
  %15 = icmp eq i32 %13, 0
  %16 = and i1 %14, %15, !dbg !11887
  br i1 %16, label %21, label %17, !dbg !11887

17:                                               ; preds = %6
  %18 = icmp ugt i32 %0, 30000000, !dbg !11888
  %19 = and i1 %18, %15, !dbg !11891
  %20 = select i1 %19, i32 1, i32 %13, !dbg !11891
  br label %21, !dbg !11891

21:                                               ; preds = %17, %6, %3
  %22 = phi i32 [ 0, %3 ], [ 2, %6 ], [ %20, %17 ], !dbg !11868
  call void @llvm.dbg.value(metadata i32 %22, metadata !11866, metadata !DIExpression()), !dbg !11868
  %23 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !11892
  %24 = icmp eq i32 %23, 0, !dbg !11894
  br i1 %24, label %25, label %41, !dbg !11895

25:                                               ; preds = %21
  %26 = icmp ugt i32 %0, 12000000, !dbg !11896
  %27 = icmp eq i32 %22, 0
  %28 = and i1 %26, %27, !dbg !11899
  %29 = select i1 %28, i32 4, i32 %22, !dbg !11899
  call void @llvm.dbg.value(metadata i32 %29, metadata !11866, metadata !DIExpression()), !dbg !11868
  %30 = icmp ugt i32 %0, 90000000, !dbg !11900
  %31 = icmp eq i32 %29, 0
  %32 = and i1 %30, %31, !dbg !11902
  %33 = select i1 %32, i32 3, i32 %29, !dbg !11902
  call void @llvm.dbg.value(metadata i32 %33, metadata !11866, metadata !DIExpression()), !dbg !11868
  %34 = icmp ugt i32 %0, 60000000, !dbg !11903
  %35 = icmp eq i32 %33, 0
  %36 = and i1 %34, %35, !dbg !11905
  br i1 %36, label %41, label %37, !dbg !11905

37:                                               ; preds = %25
  %38 = icmp ugt i32 %0, 30000000, !dbg !11906
  %39 = and i1 %38, %35, !dbg !11909
  %40 = select i1 %39, i32 1, i32 %33, !dbg !11909
  br label %41, !dbg !11909

41:                                               ; preds = %37, %25, %21
  %42 = phi i32 [ %22, %21 ], [ 2, %25 ], [ %40, %37 ], !dbg !11910
  call void @llvm.dbg.value(metadata i32 %42, metadata !11866, metadata !DIExpression()), !dbg !11868
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %42) #24, !dbg !11911
  call void @llvm.dbg.value(metadata i32 2, metadata !11864, metadata !DIExpression()), !dbg !11868
  br label %43, !dbg !11912

43:                                               ; preds = %43, %41
  %44 = phi i32 [ 2, %41 ], [ %46, %43 ], !dbg !11910
  call void @llvm.dbg.value(metadata i32 %44, metadata !11864, metadata !DIExpression()), !dbg !11868
  %45 = tail call fastcc i32 @LL_FLASH_GetLatency() #24, !dbg !11913
  call void @llvm.dbg.value(metadata i32 %45, metadata !11865, metadata !DIExpression()), !dbg !11868
  %46 = add nsw i32 %44, -1, !dbg !11915
  call void @llvm.dbg.value(metadata i32 %46, metadata !11864, metadata !DIExpression()), !dbg !11868
  %47 = icmp ne i32 %45, %42, !dbg !11916
  %48 = icmp ne i32 %46, 0, !dbg !11917
  %49 = select i1 %47, i1 %48, i1 false, !dbg !11917
  br i1 %49, label %43, label %50, !dbg !11918, !llvm.loop !11919

50:                                               ; preds = %43
  %51 = zext i1 %47 to i32
  br label %52

52:                                               ; preds = %50, %1
  %53 = phi i32 [ 1, %1 ], [ %51, %50 ], !dbg !11921
  call void @llvm.dbg.value(metadata i32 %53, metadata !11867, metadata !DIExpression()), !dbg !11868
  ret i32 %53, !dbg !11922
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #15 !dbg !11923 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11925
  %2 = and i32 %1, 16384, !dbg !11925
  ret i32 %2, !dbg !11926
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #14 !dbg !11927 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11929, metadata !DIExpression()), !dbg !11930
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11931
  %3 = and i32 %2, -8, !dbg !11931
  %4 = or i32 %3, %0, !dbg !11931
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11931
  ret void, !dbg !11932
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #15 !dbg !11933 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11934
  %2 = and i32 %1, 7, !dbg !11934
  ret i32 %2, !dbg !11935
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !11936 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !11954, metadata !DIExpression()), !dbg !11958
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !11955, metadata !DIExpression()), !dbg !11958
  call void @llvm.dbg.value(metadata i32 0, metadata !11956, metadata !DIExpression()), !dbg !11958
  call void @llvm.dbg.value(metadata i32 0, metadata !11957, metadata !DIExpression()), !dbg !11958
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !11959
  %4 = icmp eq i32 %3, 0, !dbg !11961
  br i1 %4, label %5, label %21, !dbg !11962

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #24, !dbg !11963
  call void @llvm.dbg.value(metadata i32 %6, metadata !11957, metadata !DIExpression()), !dbg !11958
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.164() #24, !dbg !11965
  %8 = icmp eq i32 %7, 1, !dbg !11967
  br i1 %8, label %13, label %9, !dbg !11968

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.165() #24, !dbg !11969
  br label %10, !dbg !11971

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.164() #24, !dbg !11972
  %12 = icmp eq i32 %11, 1, !dbg !11973
  br i1 %12, label %13, label %10, !dbg !11971, !llvm.loop !11974

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !11976
  %15 = load i32, i32* %14, align 4, !dbg !11976
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !11977
  %17 = load i32, i32* %16, align 4, !dbg !11977
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !11978
  %19 = load i32, i32* %18, align 4, !dbg !11978
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.166(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #24, !dbg !11979
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #24, !dbg !11980
  call void @llvm.dbg.value(metadata i32 %20, metadata !11956, metadata !DIExpression()), !dbg !11958
  br label %21, !dbg !11981

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !11982
  call void @llvm.dbg.value(metadata i32 %22, metadata !11956, metadata !DIExpression()), !dbg !11958
  ret i32 %22, !dbg !11983
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #15 !dbg !11984 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11988, metadata !DIExpression()), !dbg !11989
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.168() #24, !dbg !11990
  %2 = icmp ne i32 %1, 0, !dbg !11992
  call void @llvm.dbg.value(metadata i1 %2, metadata !11988, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11989
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #24, !dbg !11993
  %4 = icmp ne i32 %3, 0, !dbg !11995
  %5 = select i1 %4, i1 true, i1 %2, !dbg !11996
  %6 = zext i1 %5 to i32, !dbg !11996
  call void @llvm.dbg.value(metadata i32 %6, metadata !11988, metadata !DIExpression()), !dbg !11989
  ret i32 %6, !dbg !11997
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #8 !dbg !11998 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12002, metadata !DIExpression()), !dbg !12005
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12003, metadata !DIExpression()), !dbg !12005
  call void @llvm.dbg.value(metadata i32 0, metadata !12004, metadata !DIExpression()), !dbg !12005
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !12006
  %4 = load i32, i32* %3, align 4, !dbg !12006
  %5 = and i32 %4, 63, !dbg !12007
  %6 = udiv i32 %0, %5, !dbg !12008
  call void @llvm.dbg.value(metadata i32 %6, metadata !12004, metadata !DIExpression()), !dbg !12005
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !12009
  %8 = load i32, i32* %7, align 4, !dbg !12009
  %9 = and i32 %8, 511, !dbg !12010
  %10 = mul i32 %9, %6, !dbg !12011
  call void @llvm.dbg.value(metadata i32 %10, metadata !12004, metadata !DIExpression()), !dbg !12005
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !12012
  %12 = load i32, i32* %11, align 4, !dbg !12012
  %13 = lshr i32 %12, 15, !dbg !12013
  %14 = and i32 %13, 131070, !dbg !12013
  %15 = add nuw nsw i32 %14, 2, !dbg !12013
  %16 = udiv i32 %10, %15, !dbg !12014
  call void @llvm.dbg.value(metadata i32 %16, metadata !12004, metadata !DIExpression()), !dbg !12005
  ret i32 %16, !dbg !12015
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.164() unnamed_addr #15 !dbg !12016 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12017
  %2 = lshr i32 %1, 1, !dbg !12018
  %3 = and i32 %2, 1, !dbg !12018
  ret i32 %3, !dbg !12019
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.165() unnamed_addr #14 !dbg !12020 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12021
  %2 = or i32 %1, 1, !dbg !12021
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12021
  ret void, !dbg !12022
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.166(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #14 !dbg !12023 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12025, metadata !DIExpression()), !dbg !12029
  call void @llvm.dbg.value(metadata i32 %1, metadata !12026, metadata !DIExpression()), !dbg !12029
  call void @llvm.dbg.value(metadata i32 %2, metadata !12027, metadata !DIExpression()), !dbg !12029
  call void @llvm.dbg.value(metadata i32 %3, metadata !12028, metadata !DIExpression()), !dbg !12029
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12030
  %6 = and i32 %5, -4227072, !dbg !12030
  %7 = or i32 %1, %0, !dbg !12030
  %8 = shl i32 %2, 6, !dbg !12030
  %9 = or i32 %7, %8, !dbg !12030
  %10 = or i32 %9, %6, !dbg !12030
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12030
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12031
  %12 = and i32 %11, -196609, !dbg !12031
  %13 = or i32 %12, %3, !dbg !12031
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12031
  ret void, !dbg !12032
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #14 !dbg !12033 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12037, metadata !DIExpression()), !dbg !12041
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12038, metadata !DIExpression()), !dbg !12041
  call void @llvm.dbg.value(metadata i32 0, metadata !12039, metadata !DIExpression()), !dbg !12041
  call void @llvm.dbg.value(metadata i32 0, metadata !12040, metadata !DIExpression()), !dbg !12041
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !12042
  %4 = load i32, i32* %3, align 4, !dbg !12042
  %5 = lshr i32 %4, 4, !dbg !12042
  %6 = and i32 %5, 15, !dbg !12042
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !12042
  %8 = load i8, i8* %7, align 1, !dbg !12042
  %9 = zext i8 %8 to i32, !dbg !12042
  %10 = lshr i32 %0, %9, !dbg !12042
  call void @llvm.dbg.value(metadata i32 %10, metadata !12040, metadata !DIExpression()), !dbg !12041
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !12043
  %12 = icmp ult i32 %11, %10, !dbg !12045
  br i1 %12, label %13, label %16, !dbg !12046

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !12047
  call void @llvm.dbg.value(metadata i32 %14, metadata !12039, metadata !DIExpression()), !dbg !12041
  %15 = icmp eq i32 %14, 0, !dbg !12049
  br i1 %15, label %16, label %30, !dbg !12051

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.167() #24, !dbg !12052
  br label %17, !dbg !12054

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.168() #24, !dbg !12055
  %19 = icmp eq i32 %18, 1, !dbg !12056
  br i1 %19, label %20, label %17, !dbg !12054, !llvm.loop !12057

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !12059
  tail call fastcc void @LL_RCC_SetAHBPrescaler.169(i32 noundef %21) #24, !dbg !12060
  tail call fastcc void @LL_RCC_SetSysClkSource.170() #24, !dbg !12061
  br label %22, !dbg !12062

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.171() #24, !dbg !12063
  %24 = icmp eq i32 %23, 8, !dbg !12064
  br i1 %24, label %25, label %22, !dbg !12062, !llvm.loop !12065

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !12067
  %27 = load i32, i32* %26, align 4, !dbg !12067
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.172(i32 noundef %27) #24, !dbg !12068
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !12069
  %29 = load i32, i32* %28, align 4, !dbg !12069
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.173(i32 noundef %29) #24, !dbg !12070
  br label %30, !dbg !12071

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !12072
  %33 = icmp ugt i32 %32, %10, !dbg !12074
  br i1 %33, label %34, label %36, !dbg !12075

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !12076
  call void @llvm.dbg.value(metadata i32 %35, metadata !12039, metadata !DIExpression()), !dbg !12041
  br label %36, !dbg !12078

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !12041
  call void @llvm.dbg.value(metadata i32 %37, metadata !12039, metadata !DIExpression()), !dbg !12041
  %38 = icmp eq i32 %37, 0, !dbg !12079
  br i1 %38, label %39, label %40, !dbg !12081

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #24, !dbg !12082
  br label %40, !dbg !12084

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !12085
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.167() unnamed_addr #14 !dbg !12086 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12087
  %2 = or i32 %1, 16777216, !dbg !12087
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12087
  ret void, !dbg !12088
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.168() unnamed_addr #15 !dbg !12089 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12090
  %2 = lshr i32 %1, 25, !dbg !12091
  %3 = and i32 %2, 1, !dbg !12091
  ret i32 %3, !dbg !12092
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.169(i32 noundef %0) unnamed_addr #14 !dbg !12093 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12095, metadata !DIExpression()), !dbg !12096
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12097
  %3 = and i32 %2, -241, !dbg !12097
  %4 = or i32 %3, %0, !dbg !12097
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12097
  ret void, !dbg !12098
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.170() unnamed_addr #14 !dbg !12099 {
  call void @llvm.dbg.value(metadata i32 2, metadata !12101, metadata !DIExpression()), !dbg !12102
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12103
  %2 = and i32 %1, -4, !dbg !12103
  %3 = or i32 %2, 2, !dbg !12103
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12103
  ret void, !dbg !12104
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.171() unnamed_addr #15 !dbg !12105 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12106
  %2 = and i32 %1, 12, !dbg !12106
  ret i32 %2, !dbg !12107
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.172(i32 noundef %0) unnamed_addr #14 !dbg !12108 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12110, metadata !DIExpression()), !dbg !12111
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12112
  %3 = and i32 %2, -7169, !dbg !12112
  %4 = or i32 %3, %0, !dbg !12112
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12112
  ret void, !dbg !12113
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.173(i32 noundef %0) unnamed_addr #14 !dbg !12114 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12116, metadata !DIExpression()), !dbg !12117
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12118
  %3 = and i32 %2, -57345, !dbg !12118
  %4 = or i32 %3, %0, !dbg !12118
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12118
  ret void, !dbg !12119
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #15 !dbg !12120 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12121
  %2 = lshr i32 %1, 27, !dbg !12122
  %3 = and i32 %2, 1, !dbg !12122
  ret i32 %3, !dbg !12123
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #14 !dbg !12124 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12128, metadata !DIExpression()), !dbg !12134
  call void @llvm.dbg.value(metadata i32 %1, metadata !12129, metadata !DIExpression()), !dbg !12134
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !12130, metadata !DIExpression()), !dbg !12134
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !12131, metadata !DIExpression()), !dbg !12134
  call void @llvm.dbg.value(metadata i32 0, metadata !12132, metadata !DIExpression()), !dbg !12134
  call void @llvm.dbg.value(metadata i32 0, metadata !12133, metadata !DIExpression()), !dbg !12134
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !12135
  %6 = icmp eq i32 %5, 0, !dbg !12137
  br i1 %6, label %7, label %27, !dbg !12138

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #24, !dbg !12139
  call void @llvm.dbg.value(metadata i32 %8, metadata !12133, metadata !DIExpression()), !dbg !12134
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.174() #24, !dbg !12141
  %10 = icmp eq i32 %9, 1, !dbg !12143
  br i1 %10, label %19, label %11, !dbg !12144

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !12145
  br i1 %12, label %13, label %14, !dbg !12148

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #24, !dbg !12149
  br label %15, !dbg !12151

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.175() #24, !dbg !12152
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.176() #24, !dbg !12154
  br label %16, !dbg !12155

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.174() #24, !dbg !12156
  %18 = icmp eq i32 %17, 1, !dbg !12157
  br i1 %18, label %19, label %16, !dbg !12155, !llvm.loop !12158

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !12160
  %21 = load i32, i32* %20, align 4, !dbg !12160
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !12161
  %23 = load i32, i32* %22, align 4, !dbg !12161
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !12162
  %25 = load i32, i32* %24, align 4, !dbg !12162
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.166(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #24, !dbg !12163
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #24, !dbg !12164
  call void @llvm.dbg.value(metadata i32 %26, metadata !12132, metadata !DIExpression()), !dbg !12134
  br label %27, !dbg !12165

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !12166
  call void @llvm.dbg.value(metadata i32 %28, metadata !12132, metadata !DIExpression()), !dbg !12134
  ret i32 %28, !dbg !12167
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.174() unnamed_addr #15 !dbg !12168 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12169
  %2 = lshr i32 %1, 17, !dbg !12170
  %3 = and i32 %2, 1, !dbg !12170
  ret i32 %3, !dbg !12171
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #14 !dbg !12172 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12173
  %2 = or i32 %1, 262144, !dbg !12173
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12173
  ret void, !dbg !12174
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.175() unnamed_addr #14 !dbg !12175 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12176
  %2 = and i32 %1, -262145, !dbg !12176
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12176
  ret void, !dbg !12177
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.176() unnamed_addr #14 !dbg !12178 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12179
  %2 = or i32 %1, 65536, !dbg !12179
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12179
  ret void, !dbg !12180
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #21 !dbg !12181 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12184, metadata !DIExpression()), !dbg !12200
  call void @llvm.dbg.value(metadata i32 undef, metadata !12184, metadata !DIExpression()), !dbg !12200
  call void @llvm.dbg.value(metadata i32 undef, metadata !12184, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !12200
  ret void, !dbg !12201
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !12202 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12206, metadata !DIExpression()), !dbg !12208
  %2 = icmp eq i8* %0, null, !dbg !12209
  br i1 %2, label %29, label %3, !dbg !12211

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !12212
  %5 = icmp eq i8 %4, 0, !dbg !12213
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !12214
  br i1 %6, label %29, label %8, !dbg !12214

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12207, metadata !DIExpression()), !dbg !12208
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !12215

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !12207, metadata !DIExpression()), !dbg !12208
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #24, !dbg !12217
  br i1 %10, label %11, label %15, !dbg !12222

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !12223
  %13 = load i8*, i8** %12, align 4, !dbg !12223
  %14 = icmp eq i8* %13, %0, !dbg !12224
  br i1 %14, label %29, label %15, !dbg !12225

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !12226
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !12207, metadata !DIExpression()), !dbg !12208
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12227
  br i1 %17, label %7, label %8, !dbg !12228, !llvm.loop !12229

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !12207, metadata !DIExpression()), !dbg !12208
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #24, !dbg !12231
  br i1 %20, label %21, label %26, !dbg !12235

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !12236
  %23 = load i8*, i8** %22, align 4, !dbg !12236
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #25, !dbg !12237
  %25 = icmp eq i32 %24, 0, !dbg !12238
  br i1 %25, label %29, label %26, !dbg !12239

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !12240
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !12207, metadata !DIExpression()), !dbg !12208
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12241
  br i1 %28, label %29, label %18, !dbg !12215, !llvm.loop !12242

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !12208
  ret %struct.device* %30, !dbg !12244
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #8 !dbg !12245 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12249, metadata !DIExpression()), !dbg !12250
  %2 = icmp eq %struct.device* %0, null, !dbg !12251
  br i1 %2, label %14, label %3, !dbg !12253

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !12254
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !12254
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !12255
  %7 = load i8, i8* %6, align 1, !dbg !12255
  %8 = and i8 %7, 1, !dbg !12255
  %9 = icmp eq i8 %8, 0, !dbg !12255
  br i1 %9, label %14, label %10, !dbg !12256

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !12257
  %12 = load i8, i8* %11, align 1, !dbg !12257
  %13 = icmp eq i8 %12, 0, !dbg !12258
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !12250
  ret i1 %15, !dbg !12259
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #7 !dbg !12260 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !12265, metadata !DIExpression()), !dbg !12266
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !12267
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !12268
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12269 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12277, metadata !DIExpression()), !dbg !12282
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12278, metadata !DIExpression()), !dbg !12282
  call void @llvm.dbg.value(metadata i8* %2, metadata !12279, metadata !DIExpression()), !dbg !12282
  %5 = bitcast i32* %4 to i8*, !dbg !12283
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12283
  call void @llvm.dbg.value(metadata i32 0, metadata !12280, metadata !DIExpression()), !dbg !12282
  store i32 0, i32* %4, align 4, !dbg !12284
  call void @llvm.dbg.value(metadata i32* %4, metadata !12280, metadata !DIExpression(DW_OP_deref)), !dbg !12282
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !12285
  call void @llvm.dbg.value(metadata i16* %6, metadata !12281, metadata !DIExpression()), !dbg !12282
  %7 = load i32, i32* %4, align 4, !dbg !12286
  call void @llvm.dbg.value(metadata i32 %7, metadata !12280, metadata !DIExpression()), !dbg !12282
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !12287
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12288
  ret i32 %8, !dbg !12289
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !12290 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12294, metadata !DIExpression()), !dbg !12300
  call void @llvm.dbg.value(metadata i32* %1, metadata !12295, metadata !DIExpression()), !dbg !12300
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12301
  %4 = load i16*, i16** %3, align 4, !dbg !12301
  call void @llvm.dbg.value(metadata i16* %4, metadata !12296, metadata !DIExpression()), !dbg !12300
  %5 = icmp eq i16* %4, null, !dbg !12302
  br i1 %5, label %14, label %6, !dbg !12303

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !12304
  call void @llvm.dbg.value(metadata i32 %7, metadata !12297, metadata !DIExpression()), !dbg !12304
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !12305
  %9 = load i16, i16* %8, align 2, !dbg !12305
  %10 = add i16 %9, -32767, !dbg !12306
  %11 = icmp ult i16 %10, 2, !dbg !12306
  %12 = add i32 %7, 1, !dbg !12307
  call void @llvm.dbg.value(metadata i32 %12, metadata !12297, metadata !DIExpression()), !dbg !12304
  br i1 %11, label %13, label %6, !dbg !12306, !llvm.loop !12309

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !12312
  br label %14, !dbg !12313

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !12314
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !12315 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !12319, metadata !DIExpression()), !dbg !12330
  call void @llvm.dbg.value(metadata i32 %1, metadata !12320, metadata !DIExpression()), !dbg !12330
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !12321, metadata !DIExpression()), !dbg !12330
  call void @llvm.dbg.value(metadata i8* %3, metadata !12322, metadata !DIExpression()), !dbg !12330
  call void @llvm.dbg.value(metadata i32 0, metadata !12323, metadata !DIExpression()), !dbg !12331
  %5 = icmp eq i32 %1, 0, !dbg !12332
  br i1 %5, label %16, label %8, !dbg !12333

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !12323, metadata !DIExpression()), !dbg !12331
  %7 = icmp eq i32 %15, %1, !dbg !12332
  br i1 %7, label %16, label %8, !dbg !12333, !llvm.loop !12334

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !12323, metadata !DIExpression()), !dbg !12331
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !12336
  %11 = load i16, i16* %10, align 2, !dbg !12336
  call void @llvm.dbg.value(metadata i16 %11, metadata !12325, metadata !DIExpression()), !dbg !12337
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #24, !dbg !12338
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !12328, metadata !DIExpression()), !dbg !12337
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #25, !dbg !12339
  call void @llvm.dbg.value(metadata i32 %13, metadata !12329, metadata !DIExpression()), !dbg !12337
  %14 = icmp slt i32 %13, 0, !dbg !12340
  %15 = add nuw i32 %9, 1, !dbg !12342
  call void @llvm.dbg.value(metadata i32 %15, metadata !12323, metadata !DIExpression()), !dbg !12331
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !12343
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #3 !dbg !12344 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !12348, metadata !DIExpression()), !dbg !12351
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !12349, metadata !DIExpression()), !dbg !12351
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !12350, metadata !DIExpression()), !dbg !12351
  %2 = sext i16 %0 to i32, !dbg !12352
  %3 = icmp slt i16 %0, 1, !dbg !12354
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !12355
  %6 = add nsw i32 %2, -1, !dbg !12355
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !12355
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !12355
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12349, metadata !DIExpression()), !dbg !12351
  ret %struct.device* %8, !dbg !12356
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12357 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12359, metadata !DIExpression()), !dbg !12364
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12360, metadata !DIExpression()), !dbg !12364
  call void @llvm.dbg.value(metadata i8* %2, metadata !12361, metadata !DIExpression()), !dbg !12364
  %5 = bitcast i32* %4 to i8*, !dbg !12365
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12365
  call void @llvm.dbg.value(metadata i32 0, metadata !12362, metadata !DIExpression()), !dbg !12364
  store i32 0, i32* %4, align 4, !dbg !12366
  call void @llvm.dbg.value(metadata i32* %4, metadata !12362, metadata !DIExpression(DW_OP_deref)), !dbg !12364
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !12367
  call void @llvm.dbg.value(metadata i16* %6, metadata !12363, metadata !DIExpression()), !dbg !12364
  %7 = load i32, i32* %4, align 4, !dbg !12368
  call void @llvm.dbg.value(metadata i32 %7, metadata !12362, metadata !DIExpression()), !dbg !12364
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !12369
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12370
  ret i32 %8, !dbg !12371
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !12372 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12374, metadata !DIExpression()), !dbg !12379
  call void @llvm.dbg.value(metadata i32* %1, metadata !12375, metadata !DIExpression()), !dbg !12379
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12380
  %4 = load i16*, i16** %3, align 4, !dbg !12380
  call void @llvm.dbg.value(metadata i16* %4, metadata !12376, metadata !DIExpression()), !dbg !12379
  call void @llvm.dbg.value(metadata i32 0, metadata !12377, metadata !DIExpression()), !dbg !12379
  call void @llvm.dbg.value(metadata i32 0, metadata !12378, metadata !DIExpression()), !dbg !12379
  %5 = icmp eq i16* %4, null, !dbg !12381
  br i1 %5, label %22, label %6, !dbg !12383

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !12377, metadata !DIExpression()), !dbg !12379
  call void @llvm.dbg.value(metadata i16* %8, metadata !12376, metadata !DIExpression()), !dbg !12379
  %9 = load i16, i16* %8, align 2, !dbg !12384
  %10 = icmp eq i16 %9, -32768, !dbg !12388
  call void @llvm.dbg.value(metadata i32 undef, metadata !12377, metadata !DIExpression()), !dbg !12379
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !12389
  call void @llvm.dbg.value(metadata i16* %11, metadata !12376, metadata !DIExpression()), !dbg !12379
  %12 = zext i1 %10 to i32, !dbg !12390
  %13 = add i32 %7, %12, !dbg !12390
  call void @llvm.dbg.value(metadata i32 %13, metadata !12377, metadata !DIExpression()), !dbg !12379
  %14 = icmp eq i32 %13, 2, !dbg !12391
  br i1 %14, label %15, label %6, !dbg !12392

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !12379
  call void @llvm.dbg.value(metadata i32 %16, metadata !12378, metadata !DIExpression()), !dbg !12379
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !12393
  %18 = load i16, i16* %17, align 2, !dbg !12393
  %19 = icmp eq i16 %18, 32767, !dbg !12394
  %20 = add i32 %16, 1, !dbg !12395
  call void @llvm.dbg.value(metadata i32 %20, metadata !12378, metadata !DIExpression()), !dbg !12379
  br i1 %19, label %21, label %15, !dbg !12397, !llvm.loop !12398

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !12400
  br label %22, !dbg !12401

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !12402
  call void @llvm.dbg.value(metadata i16* %23, metadata !12376, metadata !DIExpression()), !dbg !12379
  ret i16* %23, !dbg !12403
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #8 !dbg !12404 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12407
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 5, !dbg !12408
  ret i32* %2, !dbg !12409
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #3 !dbg !12410 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12561, metadata !DIExpression()), !dbg !12564
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !12562, metadata !DIExpression()), !dbg !12564
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12563, metadata !DIExpression()), !dbg !12564
  ret void, !dbg !12565
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !12566 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12570, metadata !DIExpression()), !dbg !12572
  call void @llvm.dbg.value(metadata i32 %1, metadata !12571, metadata !DIExpression()), !dbg !12572
  ret void, !dbg !12573
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !12574 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12578, metadata !DIExpression()), !dbg !12580
  call void @llvm.dbg.value(metadata i32 %1, metadata !12579, metadata !DIExpression()), !dbg !12580
  ret void, !dbg !12581
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #3 !dbg !12582 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12586, metadata !DIExpression()), !dbg !12588
  call void @llvm.dbg.value(metadata i8* %1, metadata !12587, metadata !DIExpression()), !dbg !12588
  ret i32 -134, !dbg !12589
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #3 !dbg !12590 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12594, metadata !DIExpression()), !dbg !12596
  call void @llvm.dbg.value(metadata i8* %1, metadata !12595, metadata !DIExpression()), !dbg !12596
  ret i32 -134, !dbg !12597
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !12598 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12601, metadata !DIExpression()), !dbg !12602
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12603, !srcloc !12609
  call void @llvm.dbg.value(metadata i32 undef, metadata !12606, metadata !DIExpression()) #23, !dbg !12610
  call void @llvm.dbg.value(metadata i32 undef, metadata !12607, metadata !DIExpression()) #23, !dbg !12610
  br label %3, !dbg !12611

3:                                                ; preds = %3, %1
  br label %3, !dbg !12612, !llvm.loop !12615
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12618 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12622, metadata !DIExpression()), !dbg !12624
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12623, metadata !DIExpression()), !dbg !12624
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.181, i32 0, i32 0), i32 noundef 69) #25, !dbg !12625
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !12630
  unreachable, !dbg !12630
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !12631 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12633, metadata !DIExpression()), !dbg !12634
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !12635
  unreachable, !dbg !12635
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12636 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12638, metadata !DIExpression()), !dbg !12642
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12639, metadata !DIExpression()), !dbg !12642
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12643, !srcloc !12609
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !12643
  call void @llvm.dbg.value(metadata i32 %4, metadata !12606, metadata !DIExpression()) #23, !dbg !12645
  call void @llvm.dbg.value(metadata i32 undef, metadata !12607, metadata !DIExpression()) #23, !dbg !12645
  call void @llvm.dbg.value(metadata i32 %4, metadata !12640, metadata !DIExpression()), !dbg !12642
  %5 = tail call fastcc %struct.k_thread* @k_current_get.184() #26, !dbg !12646
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !12641, metadata !DIExpression()), !dbg !12642
  %6 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #24, !dbg !12647
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.185, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %6, i32 noundef 0) #25, !dbg !12647
  %7 = icmp eq %struct.__esf* %1, null, !dbg !12652
  br i1 %7, label %20, label %8, !dbg !12654

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12655, metadata !DIExpression()), !dbg !12660
  %9 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !12662
  %10 = load i32, i32* %9, align 4, !dbg !12662
  %11 = and i32 %10, 511, !dbg !12663
  %12 = icmp eq i32 %11, 0, !dbg !12664
  br i1 %12, label %14, label %13, !dbg !12665

13:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.186, i32 0, i32 0), i32 noundef 69) #25, !dbg !12666
  br label %14, !dbg !12672

14:                                               ; preds = %8, %13
  %15 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #24, !dbg !12673
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.187, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %15) #25, !dbg !12673
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #24, !dbg !12678
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12655, metadata !DIExpression()), !dbg !12679
  %16 = load i32, i32* %9, align 4, !dbg !12684
  %17 = and i32 %16, 511, !dbg !12685
  %18 = icmp eq i32 %17, 0, !dbg !12686
  br i1 %18, label %22, label %19, !dbg !12687

19:                                               ; preds = %14
  call void @llvm.dbg.value(metadata i32 %4, metadata !12688, metadata !DIExpression()) #23, !dbg !12691
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !12694, !srcloc !12695
  br label %25, !dbg !12696

20:                                               ; preds = %2
  %21 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #24, !dbg !12673
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.187, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %21) #25, !dbg !12673
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #24, !dbg !12678
  br label %22, !dbg !12697

22:                                               ; preds = %20, %14
  %23 = icmp eq i32 %0, 1, !dbg !12698
  call void @llvm.dbg.value(metadata i32 %4, metadata !12688, metadata !DIExpression()) #23, !dbg !12701
  call void @llvm.dbg.value(metadata i32 %4, metadata !12688, metadata !DIExpression()) #23, !dbg !12704
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !12642
  br i1 %23, label %25, label %24, !dbg !12706

24:                                               ; preds = %22
  tail call fastcc void @k_thread_abort.188(%struct.k_thread* noundef %5) #24, !dbg !12707
  br label %25, !dbg !12710

25:                                               ; preds = %22, %24, %19
  ret void, !dbg !12710
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.184() unnamed_addr #11 !dbg !12711 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.196() #26, !dbg !12715
  ret %struct.k_thread* %1, !dbg !12716
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #3 !dbg !12717 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12721, metadata !DIExpression()), !dbg !12722
  %2 = icmp ult i32 %0, 5, !dbg !12723
  br i1 %2, label %3, label %6, !dbg !12723

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !12723
  %5 = load i8*, i8** %4, align 4, !dbg !12723
  br label %6, !dbg !12723

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.190, i32 0, i32 0), %1 ], !dbg !12724
  ret i8* %7, !dbg !12726
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12727 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12731, metadata !DIExpression()), !dbg !12733
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !12734
  br i1 %2, label %9, label %3, !dbg !12735

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #25, !dbg !12736
  call void @llvm.dbg.value(metadata i8* %4, metadata !12732, metadata !DIExpression()), !dbg !12733
  %5 = icmp eq i8* %4, null, !dbg !12737
  br i1 %5, label %9, label %6, !dbg !12739

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !12740
  %8 = icmp eq i8 %7, 0, !dbg !12741
  br i1 %8, label %9, label %10, !dbg !12742

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.189, i32 0, i32 0), metadata !12732, metadata !DIExpression()), !dbg !12733
  br label %10, !dbg !12743

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.189, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !12733
  call void @llvm.dbg.value(metadata i8* %11, metadata !12732, metadata !DIExpression()), !dbg !12733
  ret i8* %11, !dbg !12745
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.188(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12746 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12750, metadata !DIExpression()), !dbg !12751
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12752, !srcloc !12754
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !12755
  ret void, !dbg !12756
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.196() unnamed_addr #11 !dbg !12757 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12758, !srcloc !12760
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !12761
  ret %struct.k_thread* %1, !dbg !12762
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12763 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12767, metadata !DIExpression()), !dbg !12770
  call void @llvm.dbg.value(metadata i32 %1, metadata !12768, metadata !DIExpression()), !dbg !12770
  call void @llvm.dbg.value(metadata i32 %2, metadata !12769, metadata !DIExpression()), !dbg !12770
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #25, !dbg !12771
  ret void, !dbg !12772
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12773 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12777, metadata !DIExpression()), !dbg !12780
  call void @llvm.dbg.value(metadata i8* %1, metadata !12778, metadata !DIExpression()), !dbg !12780
  call void @llvm.dbg.value(metadata i32 %2, metadata !12779, metadata !DIExpression()), !dbg !12780
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !12781
  ret void, !dbg !12782
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !12783 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #24, !dbg !12784
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__ccm_bss_end to i32), i32 ptrtoint ([0 x i8]* @__ccm_bss_start to i32))) #24, !dbg !12785
  ret void, !dbg !12786
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !12787 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12789, metadata !DIExpression()), !dbg !12790
  tail call fastcc void @init_idle_thread(i32 noundef %0) #24, !dbg !12791
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12792
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !12793
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !12794
  %4 = trunc i32 %0 to i8, !dbg !12795
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !12796
  store i8 %4, i8* %5, align 4, !dbg !12797
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !12798
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #24, !dbg !12799
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !12800
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !12801
  store i8* %8, i8** %9, align 4, !dbg !12802
  ret void, !dbg !12803
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !12804 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12806, metadata !DIExpression()), !dbg !12812
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12813
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12807, metadata !DIExpression()), !dbg !12812
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !12814
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !12808, metadata !DIExpression()), !dbg !12812
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.203, i32 0, i32 0), metadata !12811, metadata !DIExpression()), !dbg !12812
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !12815
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !12816
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.203, i32 0, i32 0)) #25, !dbg !12817
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #24, !dbg !12818
  ret void, !dbg !12819
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #3 !dbg !12820 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12824, metadata !DIExpression()), !dbg !12825
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !12826
  ret i8* %2, !dbg !12827
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !12828 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12833, metadata !DIExpression()), !dbg !12834
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12835
  %3 = load i8, i8* %2, align 1, !dbg !12836
  %4 = and i8 %3, -5, !dbg !12836
  store i8 %4, i8* %2, align 1, !dbg !12836
  ret void, !dbg !12837
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #10 !dbg !12838 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #24, !dbg !12841
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #25, !dbg !12842
  %3 = ptrtoint i8* %2 to i32, !dbg !12851
  %4 = add i32 %3, 2048, !dbg !12852
  call void @llvm.dbg.value(metadata i32 %4, metadata !12846, metadata !DIExpression()) #23, !dbg !12853
  call void @llvm.dbg.value(metadata i32 %4, metadata !12854, metadata !DIExpression()) #23, !dbg !12857
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !12859, !srcloc !12860
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12861
  %6 = or i32 %5, 512, !dbg !12861
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12861
  tail call fastcc void @__NVIC_SetPriority.206(i32 noundef -2, i32 noundef 255) #25, !dbg !12862
  tail call fastcc void @__NVIC_SetPriority.206(i32 noundef -5, i32 noundef 0) #25, !dbg !12865
  tail call fastcc void @__NVIC_SetPriority.206(i32 noundef -12, i32 noundef 0) #25, !dbg !12866
  tail call fastcc void @__NVIC_SetPriority.206(i32 noundef -11, i32 noundef 0) #25, !dbg !12867
  tail call fastcc void @__NVIC_SetPriority.206(i32 noundef -10, i32 noundef 0) #25, !dbg !12868
  tail call fastcc void @__NVIC_SetPriority.206(i32 noundef -4, i32 noundef 0) #25, !dbg !12869
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12870
  %8 = or i32 %7, 458752, !dbg !12870
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12870
  tail call void @z_arm_fault_init() #25, !dbg !12871
  tail call void @z_arm_cpu_idle_init() #25, !dbg !12872
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !12873
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !12876
  %9 = tail call i32 @z_arm_mpu_init() #25, !dbg !12877
  tail call void @z_arm_configure_static_mpu_regions() #25, !dbg !12878
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !12879
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %10) #23, !dbg !12879
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !12840, metadata !DIExpression()), !dbg !12880
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #24, !dbg !12881
  call void @z_device_state_init() #25, !dbg !12882
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #24, !dbg !12883
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #24, !dbg !12884
  %11 = call fastcc i8* @prepare_multithreading() #24, !dbg !12885
  call fastcc void @switch_to_main_thread(i8* noundef %11) #29, !dbg !12886
  unreachable, !dbg !12886
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2068 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2072, metadata !DIExpression()), !dbg !12887
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !12888
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !12888
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2073, metadata !DIExpression()), !dbg !12887
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2073, metadata !DIExpression()), !dbg !12887
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !12889
  br i1 %7, label %8, label %35, !dbg !12890

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2073, metadata !DIExpression()), !dbg !12887
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !12891
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !12891
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2083, metadata !DIExpression()), !dbg !12892
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !12893
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !12893
  %14 = tail call i32 %13(%struct.device* noundef %11) #25, !dbg !12894
  call void @llvm.dbg.value(metadata i32 %14, metadata !2087, metadata !DIExpression()), !dbg !12892
  %15 = icmp eq %struct.device* %11, null, !dbg !12895
  br i1 %15, label %32, label %16, !dbg !12897

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !12898
  br i1 %17, label %26, label %18, !dbg !12901

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !12902
  call void @llvm.dbg.value(metadata i32 %19, metadata !2087, metadata !DIExpression()), !dbg !12892
  %20 = icmp ult i32 %19, 255, !dbg !12904
  %21 = select i1 %20, i32 %19, i32 255, !dbg !12904
  call void @llvm.dbg.value(metadata i32 %21, metadata !2087, metadata !DIExpression()), !dbg !12892
  %22 = trunc i32 %21 to i8, !dbg !12905
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12906
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !12906
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !12907
  store i8 %22, i8* %25, align 1, !dbg !12908
  br label %26, !dbg !12909

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12910
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !12910
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !12911
  %30 = load i8, i8* %29, align 1, !dbg !12912
  %31 = or i8 %30, 1, !dbg !12912
  store i8 %31, i8* %29, align 1, !dbg !12912
  br label %32, !dbg !12913

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !12914
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2073, metadata !DIExpression()), !dbg !12887
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !12889
  br i1 %34, label %8, label %35, !dbg !12890, !llvm.loop !12915

35:                                               ; preds = %32, %1
  ret void, !dbg !12917
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.206(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !12918 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12920, metadata !DIExpression()), !dbg !12922
  call void @llvm.dbg.value(metadata i32 %1, metadata !12921, metadata !DIExpression()), !dbg !12922
  %3 = trunc i32 %1 to i8, !dbg !12923
  %4 = shl i8 %3, 4, !dbg !12923
  %5 = and i32 %0, 15, !dbg !12926
  %6 = add nsw i32 %5, -4, !dbg !12927
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !12928
  store volatile i8 %4, i8* %7, align 1, !dbg !12929
  ret void, !dbg !12930
}

; Function Attrs: optsize
declare !dbg !12931 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #7 !dbg !12932 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12935, metadata !DIExpression()), !dbg !12936
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12937
  store i8 1, i8* %2, align 1, !dbg !12938
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !12939
  store i8 1, i8* %3, align 4, !dbg !12940
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !12941
  store i32 0, i32* %4, align 4, !dbg !12942
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !12943
  store i32 0, i32* %5, align 4, !dbg !12944
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !12945
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !12946
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12947
  ret void, !dbg !12948
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !12949 {
  tail call void @z_sched_init() #25, !dbg !12954
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12955
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.207, i32 0, i32 0)) #25, !dbg !12956
  call void @llvm.dbg.value(metadata i8* %1, metadata !12953, metadata !DIExpression()), !dbg !12957
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !12958
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !12959
  tail call void @z_init_cpu(i32 noundef 0) #24, !dbg !12960
  ret i8* %1, !dbg !12961
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #10 !dbg !12962 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12966, metadata !DIExpression()), !dbg !12967
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #25, !dbg !12968
  unreachable, !dbg !12969
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !12970 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12972, metadata !DIExpression()), !dbg !12975
  call void @llvm.dbg.value(metadata i8* %1, metadata !12973, metadata !DIExpression()), !dbg !12975
  call void @llvm.dbg.value(metadata i8* %2, metadata !12974, metadata !DIExpression()), !dbg !12975
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !12976
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #24, !dbg !12977
  tail call void @boot_banner() #25, !dbg !12978
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #24, !dbg !12979
  tail call void @z_init_static_threads() #25, !dbg !12980
  tail call void @main() #25, !dbg !12981
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12982
  %5 = and i8 %4, -2, !dbg !12982
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12982
  ret void, !dbg !12983
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #3 !dbg !12984 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12994, metadata !DIExpression()), !dbg !12996
  call void @llvm.dbg.value(metadata i8* %1, metadata !12995, metadata !DIExpression()), !dbg !12996
  ret void, !dbg !12997
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #3 !dbg !12998 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13000, metadata !DIExpression()), !dbg !13002
  call void @llvm.dbg.value(metadata i8* %1, metadata !13001, metadata !DIExpression()), !dbg !13002
  ret void, !dbg !13003
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !13004 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13005, !srcloc !13012
  call void @llvm.dbg.value(metadata i32 %1, metadata !13008, metadata !DIExpression()) #23, !dbg !13013
  %2 = icmp ne i32 %1, 0, !dbg !13014
  ret i1 %2, !dbg !13015
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #9 !dbg !13016 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13017
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13018
  %3 = load i8, i8* %2, align 4, !dbg !13019
  %4 = or i8 %3, 1, !dbg !13019
  store i8 %4, i8* %2, align 4, !dbg !13019
  ret void, !dbg !13020
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #9 !dbg !13021 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13022
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13023
  %3 = load i8, i8* %2, align 4, !dbg !13024
  %4 = and i8 %3, -2, !dbg !13024
  store i8 %4, i8* %2, align 4, !dbg !13024
  ret void, !dbg !13025
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #8 !dbg !13026 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13027
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13028
  %3 = load i8, i8* %2, align 4, !dbg !13028
  %4 = and i8 %3, 1, !dbg !13029
  %5 = icmp ne i8 %4, 0, !dbg !13030
  ret i1 %5, !dbg !13031
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13032 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13036, metadata !DIExpression()), !dbg !13038
  call void @llvm.dbg.value(metadata i8* %1, metadata !13037, metadata !DIExpression()), !dbg !13038
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13039
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %0, !dbg !13041
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13036, metadata !DIExpression()), !dbg !13038
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 0, !dbg !13042
  %7 = tail call i8* @strncpy(i8* noundef nonnull %6, i8* noundef %1, i32 noundef 31) #25, !dbg !13043
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 31, !dbg !13044
  store i8 0, i8* %8, align 1, !dbg !13045
  ret i32 0, !dbg !13046
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull i8* @k_thread_name_get(%struct.k_thread* noundef readnone %0) local_unnamed_addr #3 !dbg !13047 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13051, metadata !DIExpression()), !dbg !13052
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13053
  ret i8* %2, !dbg !13054
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13055 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13059, metadata !DIExpression()), !dbg !13062
  call void @llvm.dbg.value(metadata i8* %1, metadata !13060, metadata !DIExpression()), !dbg !13062
  call void @llvm.dbg.value(metadata i32 %2, metadata !13061, metadata !DIExpression()), !dbg !13062
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13063
  %5 = tail call i8* @strncpy(i8* noundef %1, i8* noundef nonnull %4, i32 noundef %2) #25, !dbg !13064
  ret i32 0, !dbg !13065
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2096 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2213, metadata !DIExpression()), !dbg !13066
  call void @llvm.dbg.value(metadata i8* %1, metadata !2214, metadata !DIExpression()), !dbg !13066
  call void @llvm.dbg.value(metadata i32 %2, metadata !2215, metadata !DIExpression()), !dbg !13066
  call void @llvm.dbg.value(metadata i32 0, metadata !2216, metadata !DIExpression()), !dbg !13066
  call void @llvm.dbg.value(metadata i8 undef, metadata !2218, metadata !DIExpression()), !dbg !13066
  %4 = icmp eq i8* %1, null, !dbg !13067
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !13069
  br i1 %6, label %46, label %7, !dbg !13069

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13070
  %9 = load i8, i8* %8, align 1, !dbg !13070
  call void @llvm.dbg.value(metadata i8 %9, metadata !2218, metadata !DIExpression()), !dbg !13066
  %10 = add i32 %2, -1, !dbg !13071
  call void @llvm.dbg.value(metadata i32 %10, metadata !2215, metadata !DIExpression()), !dbg !13066
  call void @llvm.dbg.value(metadata i8 0, metadata !2219, metadata !DIExpression()), !dbg !13072
  call void @llvm.dbg.value(metadata i8 %9, metadata !2218, metadata !DIExpression()), !dbg !13066
  call void @llvm.dbg.value(metadata i32 0, metadata !2216, metadata !DIExpression()), !dbg !13066
  %11 = icmp eq i8 %9, 0, !dbg !13073
  br i1 %11, label %12, label %15, !dbg !13075

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !13076
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !13077
  store i8 0, i8* %14, align 1, !dbg !13078
  br label %46, !dbg !13079

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2219, metadata !DIExpression()), !dbg !13072
  call void @llvm.dbg.value(metadata i8 %17, metadata !2218, metadata !DIExpression()), !dbg !13066
  call void @llvm.dbg.value(metadata i32 %18, metadata !2216, metadata !DIExpression()), !dbg !13066
  %19 = zext i8 %17 to i32, !dbg !13080
  %20 = zext i8 %16 to i32, !dbg !13081
  %21 = shl nuw i32 1, %20, !dbg !13081
  call void @llvm.dbg.value(metadata i32 %21, metadata !2217, metadata !DIExpression()), !dbg !13066
  %22 = and i32 %21, %19, !dbg !13083
  %23 = icmp eq i32 %22, 0, !dbg !13085
  br i1 %23, label %42, label %24, !dbg !13086

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !13087
  %26 = sub i32 %10, %18, !dbg !13088
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !13089
  %28 = load i8*, i8** %27, align 4, !dbg !13089
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !13090
  %30 = load i32, i32* %29, align 4, !dbg !13090
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #24, !dbg !13091
  %32 = add i32 %31, %18, !dbg !13092
  call void @llvm.dbg.value(metadata i32 %32, metadata !2216, metadata !DIExpression()), !dbg !13066
  %33 = trunc i32 %21 to i8, !dbg !13093
  %34 = xor i8 %33, -1, !dbg !13093
  %35 = and i8 %17, %34, !dbg !13093
  call void @llvm.dbg.value(metadata i8 %35, metadata !2218, metadata !DIExpression()), !dbg !13066
  %36 = icmp eq i8 %35, 0, !dbg !13094
  br i1 %36, label %12, label %37, !dbg !13096

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !13097
  %39 = sub i32 %10, %32, !dbg !13099
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.210, i32 0, i32 0), i32 noundef 1) #24, !dbg !13100
  %41 = add i32 %40, %32, !dbg !13101
  call void @llvm.dbg.value(metadata i32 %41, metadata !2216, metadata !DIExpression()), !dbg !13066
  br label %42, !dbg !13102

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !13066
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !13066
  call void @llvm.dbg.value(metadata i8 %44, metadata !2218, metadata !DIExpression()), !dbg !13066
  call void @llvm.dbg.value(metadata i32 %43, metadata !2216, metadata !DIExpression()), !dbg !13066
  %45 = add i8 %16, 1, !dbg !13103
  call void @llvm.dbg.value(metadata i8 %45, metadata !2219, metadata !DIExpression()), !dbg !13072
  br label %15, !dbg !13075

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.211, i32 0, i32 0), %3 ], !dbg !13066
  ret i8* %47, !dbg !13104
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !13105 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13109, metadata !DIExpression()), !dbg !13114
  call void @llvm.dbg.value(metadata i32 %1, metadata !13110, metadata !DIExpression()), !dbg !13114
  call void @llvm.dbg.value(metadata i8* %2, metadata !13111, metadata !DIExpression()), !dbg !13114
  call void @llvm.dbg.value(metadata i32 %3, metadata !13112, metadata !DIExpression()), !dbg !13114
  %5 = icmp ult i32 %1, %3, !dbg !13115
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !13115
  call void @llvm.dbg.value(metadata i32 %6, metadata !13113, metadata !DIExpression()), !dbg !13114
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #25, !dbg !13116
  ret i32 %6, !dbg !13117
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13118 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13122, metadata !DIExpression()), !dbg !13123
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #25, !dbg !13124
  ret void, !dbg !13125
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef %9) local_unnamed_addr #1 !dbg !13126 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13135, metadata !DIExpression()), !dbg !13146
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13136, metadata !DIExpression()), !dbg !13146
  call void @llvm.dbg.value(metadata i32 %2, metadata !13137, metadata !DIExpression()), !dbg !13146
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13138, metadata !DIExpression()), !dbg !13146
  call void @llvm.dbg.value(metadata i8* %4, metadata !13139, metadata !DIExpression()), !dbg !13146
  call void @llvm.dbg.value(metadata i8* %5, metadata !13140, metadata !DIExpression()), !dbg !13146
  call void @llvm.dbg.value(metadata i8* %6, metadata !13141, metadata !DIExpression()), !dbg !13146
  call void @llvm.dbg.value(metadata i32 %7, metadata !13142, metadata !DIExpression()), !dbg !13146
  call void @llvm.dbg.value(metadata i32 %8, metadata !13143, metadata !DIExpression()), !dbg !13146
  call void @llvm.dbg.value(metadata i8* %9, metadata !13144, metadata !DIExpression()), !dbg !13146
  %11 = icmp eq i32 %7, 15, !dbg !13147
  br i1 %11, label %12, label %15, !dbg !13147

12:                                               ; preds = %10
  %13 = bitcast void (i8*, i8*, i8*)* %3 to i8*, !dbg !13147
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef %13) #24, !dbg !13147
  br i1 %14, label %19, label %18, !dbg !13147

15:                                               ; preds = %10
  %16 = add i32 %7, 16, !dbg !13147
  %17 = icmp ult i32 %16, 31, !dbg !13147
  br i1 %17, label %19, label %18, !dbg !13147

18:                                               ; preds = %12, %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.221, i32 0, i32 0), i8* noundef getelementptr inbounds ([128 x i8], [128 x i8]* @.str.10.222, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.223, i32 0, i32 0), i32 noundef 536) #25, !dbg !13151
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.224, i32 0, i32 0), i32 noundef %7, i32 noundef 14, i32 noundef -16) #25, !dbg !13151
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.223, i32 0, i32 0), i32 noundef 536) #25, !dbg !13151
  unreachable, !dbg !13151

19:                                               ; preds = %15, %12
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13153
  tail call fastcc void @z_waitq_init(%struct._wait_q_t* noundef nonnull %20) #24, !dbg !13154
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !13155
  tail call void @z_init_thread_base(%struct._thread_base* noundef %21, i32 noundef %7, i32 noundef 4, i32 noundef %8) #24, !dbg !13156
  %22 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #24, !dbg !13157
  call void @llvm.dbg.value(metadata i8* %22, metadata !13145, metadata !DIExpression()), !dbg !13146
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %22, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #25, !dbg !13158
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !13159
  store i8* null, i8** %23, align 4, !dbg !13160
  %24 = icmp eq i8* %9, null, !dbg !13161
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13163
  br i1 %24, label %29, label %26, !dbg !13164

26:                                               ; preds = %19
  %27 = tail call i8* @strncpy(i8* noundef nonnull %25, i8* noundef nonnull %9, i32 noundef 31) #25, !dbg !13165
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 31, !dbg !13167
  store i8 0, i8* %28, align 1, !dbg !13168
  br label %30, !dbg !13169

29:                                               ; preds = %19
  store i8 0, i8* %25, align 8, !dbg !13170
  br label %30

30:                                               ; preds = %29, %26
  %31 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13172
  %32 = icmp eq %struct.k_thread* %31, null, !dbg !13172
  br i1 %32, label %36, label %33, !dbg !13174

33:                                               ; preds = %30
  %34 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %31, i32 0, i32 7, !dbg !13175
  %35 = load %struct.k_heap*, %struct.k_heap** %34, align 8, !dbg !13175
  br label %36, !dbg !13176

36:                                               ; preds = %30, %33
  %37 = phi %struct.k_heap* [ %35, %33 ], [ null, %30 ], !dbg !13146
  %38 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !13177
  store %struct.k_heap* %37, %struct.k_heap** %38, align 8, !dbg !13179
  ret i8* %22, !dbg !13180
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef readnone %0) unnamed_addr #3 !dbg !13181 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13185, metadata !DIExpression()), !dbg !13186
  %2 = icmp eq i8* %0, bitcast (void (i8*, i8*, i8*)* @idle to i8*), !dbg !13187
  ret i1 %2, !dbg !13188
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%struct._wait_q_t* noundef %0) unnamed_addr #7 !dbg !13189 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13194, metadata !DIExpression()), !dbg !13195
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13196
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #24, !dbg !13197
  ret void, !dbg !13198
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #7 !dbg !13199 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13204, metadata !DIExpression()), !dbg !13208
  call void @llvm.dbg.value(metadata i32 %1, metadata !13205, metadata !DIExpression()), !dbg !13208
  call void @llvm.dbg.value(metadata i32 %2, metadata !13206, metadata !DIExpression()), !dbg !13208
  call void @llvm.dbg.value(metadata i32 %3, metadata !13207, metadata !DIExpression()), !dbg !13208
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !13209
  store %struct._wait_q_t* null, %struct._wait_q_t** %5, align 8, !dbg !13210
  %6 = trunc i32 %3 to i8, !dbg !13211
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !13212
  store i8 %6, i8* %7, align 4, !dbg !13213
  %8 = trunc i32 %2 to i8, !dbg !13214
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !13215
  store i8 %8, i8* %9, align 1, !dbg !13216
  %10 = trunc i32 %1 to i8, !dbg !13217
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !13218
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !13218
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !13218
  store i8 %10, i8* %13, align 2, !dbg !13219
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !13220
  store i8 0, i8* %14, align 1, !dbg !13221
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #24, !dbg !13222
  ret void, !dbg !13223
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !13224 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13228, metadata !DIExpression()), !dbg !13236
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13229, metadata !DIExpression()), !dbg !13236
  call void @llvm.dbg.value(metadata i32 %2, metadata !13230, metadata !DIExpression()), !dbg !13236
  call void @llvm.dbg.value(metadata i32 0, metadata !13235, metadata !DIExpression()), !dbg !13236
  %4 = add i32 %2, 7, !dbg !13237
  %5 = and i32 %4, -8, !dbg !13237
  %6 = add i32 %5, 64, !dbg !13237
  call void @llvm.dbg.value(metadata i32 %6, metadata !13231, metadata !DIExpression()), !dbg !13236
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.225(%struct.z_thread_stack_element* noundef %1) #24, !dbg !13239
  call void @llvm.dbg.value(metadata i8* %7, metadata !13234, metadata !DIExpression()), !dbg !13236
  call void @llvm.dbg.value(metadata i32 %5, metadata !13232, metadata !DIExpression()), !dbg !13236
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !13240
  call void @llvm.dbg.value(metadata i8* %8, metadata !13233, metadata !DIExpression()), !dbg !13236
  call void @llvm.dbg.value(metadata i32 0, metadata !13235, metadata !DIExpression()), !dbg !13236
  %9 = ptrtoint i8* %7 to i32, !dbg !13241
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !13242
  store i32 %9, i32* %10, align 4, !dbg !13243
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !13244
  store i32 %5, i32* %11, align 4, !dbg !13245
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 2, !dbg !13246
  store i32 0, i32* %12, align 4, !dbg !13247
  call void @llvm.dbg.value(metadata i8* %8, metadata !13233, metadata !DIExpression()), !dbg !13236
  ret i8* %8, !dbg !13248
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.225(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #3 !dbg !13249 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13253, metadata !DIExpression()), !dbg !13254
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !13255
  ret i8* %2, !dbg !13256
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !13257 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13262, metadata !DIExpression()), !dbg !13263
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !13264
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !13265
  ret void, !dbg !13266
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !13267 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13269, metadata !DIExpression()), !dbg !13270
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13271
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #24, !dbg !13272
  ret void, !dbg !13273
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !13274 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13278, metadata !DIExpression()), !dbg !13279
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13280
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !13281
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13282
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !13283
  ret void, !dbg !13284
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !13285 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13290, metadata !DIExpression()), !dbg !13291
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13292
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13293
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13294
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13295
  ret void, !dbg !13296
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !13297 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13314, metadata !DIExpression()), !dbg !13315
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13305, metadata !DIExpression()), !dbg !13315
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13306, metadata !DIExpression()), !dbg !13315
  call void @llvm.dbg.value(metadata i32 %2, metadata !13307, metadata !DIExpression()), !dbg !13315
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13308, metadata !DIExpression()), !dbg !13315
  call void @llvm.dbg.value(metadata i8* %4, metadata !13309, metadata !DIExpression()), !dbg !13315
  call void @llvm.dbg.value(metadata i8* %5, metadata !13310, metadata !DIExpression()), !dbg !13315
  call void @llvm.dbg.value(metadata i8* %6, metadata !13311, metadata !DIExpression()), !dbg !13315
  call void @llvm.dbg.value(metadata i32 %7, metadata !13312, metadata !DIExpression()), !dbg !13315
  call void @llvm.dbg.value(metadata i32 %8, metadata !13313, metadata !DIExpression()), !dbg !13315
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13316, !srcloc !13012
  call void @llvm.dbg.value(metadata i32 %11, metadata !13008, metadata !DIExpression()) #23, !dbg !13321
  %12 = icmp eq i32 %11, 0, !dbg !13322
  br i1 %12, label %14, label %13, !dbg !13323

13:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.221, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13.228, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.223, i32 0, i32 0), i32 noundef 647) #25, !dbg !13324
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14.229, i32 0, i32 0)) #25, !dbg !13324
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.223, i32 0, i32 0), i32 noundef 647) #25, !dbg !13324
  unreachable, !dbg !13324

14:                                               ; preds = %10
  %15 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %15, metadata !13314, metadata !DIExpression()), !dbg !13315
  %16 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef null) #24, !dbg !13326
  %17 = icmp eq i64 %15, -1, !dbg !13327
  br i1 %17, label %19, label %18, !dbg !13329

18:                                               ; preds = %14
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #24, !dbg !13330
  br label %19, !dbg !13332

19:                                               ; preds = %18, %14
  ret %struct.k_thread* %0, !dbg !13333
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13334 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13339, metadata !DIExpression()), !dbg !13340
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13338, metadata !DIExpression()), !dbg !13340
  %4 = icmp eq i64 %3, 0, !dbg !13341
  br i1 %4, label %5, label %6, !dbg !13343

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !13344
  br label %7, !dbg !13346

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !13347
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !13349
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13350 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13354, metadata !DIExpression()), !dbg !13355
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13356, !srcloc !13358
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !13359
  ret void, !dbg !13360
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13361 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13364, metadata !DIExpression()), !dbg !13365
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13363, metadata !DIExpression()), !dbg !13365
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13366
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !13367
  ret void, !dbg !13368
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !13369 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13371, metadata !DIExpression()), !dbg !13391
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %1, label %2, !dbg !13392

1:                                                ; preds = %6, %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.221, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.223, i32 0, i32 0), i32 noundef 750) #25, !dbg !13396
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.233, i32 0, i32 0)) #25, !dbg !13396
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.223, i32 0, i32 0), i32 noundef 750) #25, !dbg !13396
  unreachable, !dbg !13396

2:                                                ; preds = %0, %6
  %3 = phi %struct._static_thread_data* [ %31, %6 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !13371, metadata !DIExpression()), !dbg !13391
  %4 = icmp ult %struct._static_thread_data* %3, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13399
  br i1 %4, label %6, label %5, !dbg !13400

5:                                                ; preds = %2
  tail call void @k_sched_lock() #25, !dbg !13401
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13389, metadata !DIExpression()), !dbg !13402
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %33, label %34, !dbg !13403

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !13407
  %8 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !13407
  %9 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !13409
  %10 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %9, align 4, !dbg !13409
  %11 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !13410
  %12 = load i32, i32* %11, align 4, !dbg !13410
  %13 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !13411
  %14 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 4, !dbg !13411
  %15 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !13412
  %16 = load i8*, i8** %15, align 4, !dbg !13412
  %17 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !13413
  %18 = load i8*, i8** %17, align 4, !dbg !13413
  %19 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !13414
  %20 = load i8*, i8** %19, align 4, !dbg !13414
  %21 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !13415
  %22 = load i32, i32* %21, align 4, !dbg !13415
  %23 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !13416
  %24 = load i32, i32* %23, align 4, !dbg !13416
  %25 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 11, !dbg !13417
  %26 = load i8*, i8** %25, align 4, !dbg !13417
  %27 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %8, %struct.z_thread_stack_element* noundef %10, i32 noundef %12, void (i8*, i8*, i8*)* noundef %14, i8* noundef %16, i8* noundef %18, i8* noundef %20, i32 noundef %22, i32 noundef %24, i8* noundef %26) #24, !dbg !13418
  %28 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !13419
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 2, !dbg !13420
  %30 = bitcast i8** %29 to %struct._static_thread_data**, !dbg !13421
  store %struct._static_thread_data* %3, %struct._static_thread_data** %30, align 4, !dbg !13421
  %31 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !13422
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !13371, metadata !DIExpression()), !dbg !13391
  %32 = icmp ugt %struct._static_thread_data* %31, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13423
  br i1 %32, label %1, label %2, !dbg !13392, !llvm.loop !13424

33:                                               ; preds = %50, %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.221, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.223, i32 0, i32 0), i32 noundef 781) #25, !dbg !13426
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.233, i32 0, i32 0)) #25, !dbg !13426
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.223, i32 0, i32 0), i32 noundef 781) #25, !dbg !13426
  unreachable, !dbg !13426

34:                                               ; preds = %5, %50
  %35 = phi %struct._static_thread_data* [ %51, %50 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %5 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %35, metadata !13389, metadata !DIExpression()), !dbg !13402
  %36 = icmp ult %struct._static_thread_data* %35, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13429
  br i1 %36, label %38, label %37, !dbg !13430

37:                                               ; preds = %34
  tail call void @k_sched_unlock() #25, !dbg !13431
  ret void, !dbg !13432

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 9, !dbg !13433
  %40 = load i32, i32* %39, align 4, !dbg !13433
  %41 = icmp eq i32 %40, -1, !dbg !13436
  br i1 %41, label %50, label %42, !dbg !13437

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 0, !dbg !13438
  %44 = load %struct.k_thread*, %struct.k_thread** %43, align 4, !dbg !13438
  %45 = icmp sgt i32 %40, 0, !dbg !13440
  %46 = select i1 %45, i32 %40, i32 0, !dbg !13440
  %47 = zext i32 %46 to i64, !dbg !13440
  %48 = tail call fastcc i64 @k_ms_to_ticks_ceil64.234(i64 noundef %47) #24, !dbg !13440
  %49 = insertvalue [1 x i64] poison, i64 %48, 0, !dbg !13441
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %44, [1 x i64] %49) #24, !dbg !13441
  br label %50, !dbg !13442

50:                                               ; preds = %38, %42
  %51 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 1, !dbg !13443
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %51, metadata !13389, metadata !DIExpression()), !dbg !13402
  %52 = icmp ugt %struct._static_thread_data* %51, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13444
  br i1 %52, label %33, label %34, !dbg !13403, !llvm.loop !13445
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.234(i64 noundef %0) unnamed_addr #3 !dbg !13447 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13449, metadata !DIExpression()), !dbg !13450
  call void @llvm.dbg.value(metadata i64 %0, metadata !13451, metadata !DIExpression()), !dbg !13466
  call void @llvm.dbg.value(metadata i32 1000, metadata !13454, metadata !DIExpression()), !dbg !13466
  call void @llvm.dbg.value(metadata i32 10000, metadata !13455, metadata !DIExpression()), !dbg !13466
  call void @llvm.dbg.value(metadata i8 1, metadata !13456, metadata !DIExpression()), !dbg !13466
  call void @llvm.dbg.value(metadata i8 0, metadata !13457, metadata !DIExpression()), !dbg !13466
  call void @llvm.dbg.value(metadata i8 1, metadata !13458, metadata !DIExpression()), !dbg !13466
  call void @llvm.dbg.value(metadata i8 0, metadata !13459, metadata !DIExpression()), !dbg !13466
  call void @llvm.dbg.value(metadata i8 1, metadata !13460, metadata !DIExpression()), !dbg !13466
  call void @llvm.dbg.value(metadata i8 0, metadata !13461, metadata !DIExpression()), !dbg !13466
  call void @llvm.dbg.value(metadata i64 0, metadata !13462, metadata !DIExpression()), !dbg !13466
  call void @llvm.dbg.value(metadata i64 0, metadata !13462, metadata !DIExpression()), !dbg !13466
  %2 = mul i64 %0, 10, !dbg !13468
  ret i64 %2, !dbg !13474
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #10 !dbg !13475 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !13477, metadata !DIExpression()), !dbg !13481
  call void @llvm.dbg.value(metadata i8* %1, metadata !13478, metadata !DIExpression()), !dbg !13481
  call void @llvm.dbg.value(metadata i8* %2, metadata !13479, metadata !DIExpression()), !dbg !13481
  call void @llvm.dbg.value(metadata i8* %3, metadata !13480, metadata !DIExpression()), !dbg !13481
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13482
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !13483
  %7 = load i8, i8* %6, align 4, !dbg !13484
  %8 = or i8 %7, 4, !dbg !13484
  store i8 %8, i8* %6, align 4, !dbg !13484
  tail call void @z_thread_essential_clear() #24, !dbg !13485
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !13486
  unreachable, !dbg !13486
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !13487 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13492, metadata !DIExpression()), !dbg !13494
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !13495
  %3 = load i32, i32* %2, align 4, !dbg !13495
  call void @llvm.dbg.value(metadata i32 %3, metadata !13493, metadata !DIExpression()), !dbg !13494
  %4 = icmp eq i32 %3, 0, !dbg !13496
  br i1 %4, label %10, label %5, !dbg !13498

5:                                                ; preds = %1
  %6 = and i32 %3, 3, !dbg !13499
  %7 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13502
  %8 = zext i8 %7 to i32, !dbg !13503
  %9 = icmp eq i32 %6, %8, !dbg !13504
  br i1 %9, label %11, label %10, !dbg !13505

10:                                               ; preds = %5, %1
  br label %11, !dbg !13506

11:                                               ; preds = %5, %10
  %12 = phi i1 [ true, %10 ], [ false, %5 ], !dbg !13494
  ret i1 %12, !dbg !13507
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* nocapture noundef %0) local_unnamed_addr #9 !dbg !13508 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13510, metadata !DIExpression()), !dbg !13511
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !13512
  %3 = load i32, i32* %2, align 4, !dbg !13512
  %4 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13514
  %5 = zext i8 %4 to i32, !dbg !13515
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13516
  %7 = ptrtoint %struct.k_thread* %6 to i32, !dbg !13517
  %8 = or i32 %7, %5, !dbg !13518
  %9 = icmp eq i32 %3, %8, !dbg !13519
  br i1 %9, label %10, label %11, !dbg !13520

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !13521
  br label %11, !dbg !13522

11:                                               ; preds = %1, %10
  ret i1 %9, !dbg !13523
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_spin_lock_set_owner(%struct.k_spinlock* nocapture noundef writeonly %0) local_unnamed_addr #9 !dbg !13524 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13528, metadata !DIExpression()), !dbg !13529
  %2 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13530
  %3 = zext i8 %2 to i32, !dbg !13531
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13532
  %5 = ptrtoint %struct.k_thread* %4 to i32, !dbg !13533
  %6 = or i32 %5, %3, !dbg !13534
  %7 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !13535
  store i32 %6, i32* %7, align 4, !dbg !13536
  ret void, !dbg !13537
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #3 !dbg !13538 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13542, metadata !DIExpression()), !dbg !13543
  ret i32 -134, !dbg !13544
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #3 !dbg !13545 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13549, metadata !DIExpression()), !dbg !13551
  call void @llvm.dbg.value(metadata i32 %1, metadata !13550, metadata !DIExpression()), !dbg !13551
  ret i32 -134, !dbg !13552
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct._cpu_arch* noundef readnone %1) local_unnamed_addr #3 !dbg !13553 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13560, metadata !DIExpression()), !dbg !13562
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %1, metadata !13561, metadata !DIExpression()), !dbg !13562
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13563
  %4 = icmp eq %struct._cpu_arch* %1, null
  %5 = or i1 %3, %4, !dbg !13565
  %6 = select i1 %5, i32 -22, i32 0, !dbg !13562
  ret i32 %6, !dbg !13566
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct._cpu_arch* noundef readnone %0) local_unnamed_addr #3 !dbg !13567 {
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %0, metadata !13571, metadata !DIExpression()), !dbg !13572
  %2 = icmp eq %struct._cpu_arch* %0, null, !dbg !13573
  %3 = select i1 %2, i32 -22, i32 0, !dbg !13572
  ret i32 %3, !dbg !13575
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !13576 {
  tail call void @sys_clock_idle_exit() #25, !dbg !13578
  ret void, !dbg !13579
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #10 !dbg !13580 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13582, metadata !DIExpression()), !dbg !13585
  call void @llvm.dbg.value(metadata i8* %1, metadata !13583, metadata !DIExpression()), !dbg !13585
  call void @llvm.dbg.value(metadata i8* %2, metadata !13584, metadata !DIExpression()), !dbg !13585
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13586
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !13586
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !13586
  %7 = load i8, i8* %6, align 2, !dbg !13586
  %8 = icmp sgt i8 %7, -1, !dbg !13586
  br i1 %8, label %10, label %9, !dbg !13589

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.245, i32 0, i32 0), i32 noundef 39) #25, !dbg !13590
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.245, i32 0, i32 0), i32 noundef 39) #25, !dbg !13590
  unreachable, !dbg !13590

10:                                               ; preds = %3, %10
  %11 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13592, !srcloc !13599
  call void @llvm.dbg.value(metadata i32 undef, metadata !13595, metadata !DIExpression()) #23, !dbg !13600
  call void @llvm.dbg.value(metadata i32 undef, metadata !13596, metadata !DIExpression()) #23, !dbg !13600
  tail call fastcc void @k_cpu_idle() #24, !dbg !13601
  br label %10, !dbg !13602, !llvm.loop !13603
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !13605 {
  tail call void @arch_cpu_idle() #25, !dbg !13606
  ret void, !dbg !13607
}

; Function Attrs: optsize
declare !dbg !13608 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_mutex_init(%struct.k_mutex* noundef %0) local_unnamed_addr #7 !dbg !13609 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13620, metadata !DIExpression()), !dbg !13621
  %2 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13622
  store %struct.k_thread* null, %struct.k_thread** %2, align 4, !dbg !13623
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !13624
  store i32 0, i32* %3, align 4, !dbg !13625
  %4 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !13626
  tail call fastcc void @z_waitq_init.246(%struct._wait_q_t* noundef %4) #24, !dbg !13627
  ret i32 0, !dbg !13628
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.246(%struct._wait_q_t* noundef %0) unnamed_addr #7 !dbg !13629 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13633, metadata !DIExpression()), !dbg !13634
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13635
  tail call fastcc void @sys_dlist_init.247(%struct._dnode* noundef %2) #24, !dbg !13636
  ret void, !dbg !13637
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.247(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !13638 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13643, metadata !DIExpression()), !dbg !13644
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13645
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13646
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13647
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13648
  ret void, !dbg !13649
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !13650 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13659, metadata !DIExpression()), !dbg !13671
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13658, metadata !DIExpression()), !dbg !13671
  call void @llvm.dbg.value(metadata i8 0, metadata !13666, metadata !DIExpression()), !dbg !13671
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13672, !srcloc !13681
  call void @llvm.dbg.value(metadata i32 %4, metadata !13675, metadata !DIExpression()) #23, !dbg !13682
  %5 = icmp eq i32 %4, 0, !dbg !13683
  br i1 %5, label %7, label %6, !dbg !13684

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.252, i32 0, i32 0), i32 noundef 101) #25, !dbg !13685
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3.253, i32 0, i32 0)) #25, !dbg !13685
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.252, i32 0, i32 0), i32 noundef 101) #25, !dbg !13685
  unreachable, !dbg !13685

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.254, metadata !13687, metadata !DIExpression()) #23, !dbg !13694
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13696, !srcloc !13702
  call void @llvm.dbg.value(metadata i32 undef, metadata !13699, metadata !DIExpression()) #23, !dbg !13703
  call void @llvm.dbg.value(metadata i32 undef, metadata !13700, metadata !DIExpression()) #23, !dbg !13703
  call void @llvm.dbg.value(metadata i32 undef, metadata !13693, metadata !DIExpression()) #23, !dbg !13694
  %9 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.254) #25, !dbg !13704
  br i1 %9, label %11, label %10, !dbg !13707

10:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.256, i32 0, i32 0), i32 noundef 148) #25, !dbg !13708
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.257, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.254) #25, !dbg !13708
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.256, i32 0, i32 0), i32 noundef 148) #25, !dbg !13708
  unreachable, !dbg !13708

11:                                               ; preds = %7
  %12 = extractvalue { i32, i32 } %8, 0, !dbg !13696
  call void @llvm.dbg.value(metadata i32 %12, metadata !13699, metadata !DIExpression()) #23, !dbg !13703
  call void @llvm.dbg.value(metadata i32 %12, metadata !13693, metadata !DIExpression()) #23, !dbg !13694
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.254) #25, !dbg !13710
  call void @llvm.dbg.value(metadata i32 %12, metadata !13661, metadata !DIExpression()), !dbg !13671
  %13 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !13711
  %14 = load i32, i32* %13, align 4, !dbg !13711
  %15 = icmp eq i32 %14, 0, !dbg !13711
  br i1 %15, label %21, label %16, !dbg !13711

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13711
  %18 = load %struct.k_thread*, %struct.k_thread** %17, align 4, !dbg !13711
  %19 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13711
  %20 = icmp eq %struct.k_thread* %18, %19, !dbg !13711
  br i1 %20, label %27, label %39, !dbg !13713, !prof !13714

21:                                               ; preds = %11
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13715
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %22, i32 0, i32 0, i32 4, !dbg !13717
  %24 = bitcast %union.anon.2* %23 to i8*, !dbg !13717
  %25 = load i8, i8* %24, align 2, !dbg !13717
  %26 = sext i8 %25 to i32, !dbg !13715
  br label %30, !dbg !13718

27:                                               ; preds = %16
  %28 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13719
  %29 = load i32, i32* %28, align 4, !dbg !13719
  br label %30, !dbg !13718

30:                                               ; preds = %27, %21
  %31 = phi %struct.k_thread* [ %22, %21 ], [ %18, %27 ], !dbg !13720
  %32 = phi i32 [ %26, %21 ], [ %29, %27 ], !dbg !13718
  %33 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13721
  store i32 %32, i32* %33, align 4, !dbg !13722
  %34 = add i32 %14, 1, !dbg !13723
  store i32 %34, i32* %13, align 4, !dbg !13723
  %35 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13724
  store %struct.k_thread* %31, %struct.k_thread** %35, align 4, !dbg !13725
  call void @llvm.dbg.value(metadata i32 undef, metadata !13726, metadata !DIExpression()) #23, !dbg !13732
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.254, metadata !13731, metadata !DIExpression()) #23, !dbg !13732
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.254) #25, !dbg !13734
  br i1 %36, label %38, label %37, !dbg !13737

37:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.258, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.256, i32 0, i32 0), i32 noundef 194) #25, !dbg !13738
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.259, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.254) #25, !dbg !13738
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.256, i32 0, i32 0), i32 noundef 194) #25, !dbg !13738
  unreachable, !dbg !13738

38:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %12, metadata !13726, metadata !DIExpression()) #23, !dbg !13732
  call void @llvm.dbg.value(metadata i32 %12, metadata !13740, metadata !DIExpression()) #23, !dbg !13743
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !13745, !srcloc !13746
  br label %97, !dbg !13747

39:                                               ; preds = %16
  %40 = icmp eq i64 %3, 0, !dbg !13748
  br i1 %40, label %41, label %45, !dbg !13750, !prof !13751

41:                                               ; preds = %39
  call void @llvm.dbg.value(metadata i32 undef, metadata !13726, metadata !DIExpression()) #23, !dbg !13752
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.254, metadata !13731, metadata !DIExpression()) #23, !dbg !13752
  %42 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.254) #25, !dbg !13755
  br i1 %42, label %44, label %43, !dbg !13756

43:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.258, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.256, i32 0, i32 0), i32 noundef 194) #25, !dbg !13757
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.259, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.254) #25, !dbg !13757
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.256, i32 0, i32 0), i32 noundef 194) #25, !dbg !13757
  unreachable, !dbg !13757

44:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %12, metadata !13726, metadata !DIExpression()) #23, !dbg !13752
  call void @llvm.dbg.value(metadata i32 %12, metadata !13740, metadata !DIExpression()) #23, !dbg !13758
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !13760, !srcloc !13746
  br label %97, !dbg !13761

45:                                               ; preds = %39
  %46 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %19, i32 0, i32 0, i32 4, !dbg !13762
  %47 = bitcast %union.anon.2* %46 to i8*, !dbg !13762
  %48 = load i8, i8* %47, align 2, !dbg !13762
  %49 = sext i8 %48 to i32, !dbg !13763
  %50 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %18, i32 0, i32 0, i32 4, !dbg !13764
  %51 = bitcast %union.anon.2* %50 to i8*, !dbg !13764
  %52 = load i8, i8* %51, align 2, !dbg !13764
  %53 = sext i8 %52 to i32, !dbg !13765
  %54 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %49, i32 noundef %53) #24, !dbg !13766
  call void @llvm.dbg.value(metadata i32 %54, metadata !13660, metadata !DIExpression()), !dbg !13671
  %55 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %54, i32 noundef %53) #24, !dbg !13767
  br i1 %55, label %56, label %58, !dbg !13769

56:                                               ; preds = %45
  %57 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %54) #24, !dbg !13770
  call void @llvm.dbg.value(metadata i1 %57, metadata !13666, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13671
  br label %58, !dbg !13772

58:                                               ; preds = %56, %45
  %59 = phi i1 [ %57, %56 ], [ false, %45 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !13666, metadata !DIExpression()), !dbg !13671
  %60 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !13773
  %61 = insertvalue [1 x i32] poison, i32 %12, 0, !dbg !13774
  %62 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock.254, [1 x i32] %61, %struct._wait_q_t* noundef %60, [1 x i64] %1) #25, !dbg !13774
  call void @llvm.dbg.value(metadata i32 %62, metadata !13667, metadata !DIExpression()), !dbg !13671
  %63 = icmp eq i32 %62, 0, !dbg !13775
  br i1 %63, label %97, label %64, !dbg !13777

64:                                               ; preds = %58
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.254, metadata !13687, metadata !DIExpression()) #23, !dbg !13778
  %65 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13780, !srcloc !13702
  call void @llvm.dbg.value(metadata i32 undef, metadata !13699, metadata !DIExpression()) #23, !dbg !13782
  call void @llvm.dbg.value(metadata i32 undef, metadata !13700, metadata !DIExpression()) #23, !dbg !13782
  call void @llvm.dbg.value(metadata i32 undef, metadata !13693, metadata !DIExpression()) #23, !dbg !13778
  %66 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.254) #25, !dbg !13783
  br i1 %66, label %68, label %67, !dbg !13784

67:                                               ; preds = %64
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.256, i32 0, i32 0), i32 noundef 148) #25, !dbg !13785
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.257, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.254) #25, !dbg !13785
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.256, i32 0, i32 0), i32 noundef 148) #25, !dbg !13785
  unreachable, !dbg !13785

68:                                               ; preds = %64
  %69 = extractvalue { i32, i32 } %65, 0, !dbg !13780
  call void @llvm.dbg.value(metadata i32 %69, metadata !13699, metadata !DIExpression()) #23, !dbg !13782
  call void @llvm.dbg.value(metadata i32 %69, metadata !13693, metadata !DIExpression()) #23, !dbg !13778
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.254) #25, !dbg !13786
  call void @llvm.dbg.value(metadata i32 %69, metadata !13661, metadata !DIExpression()), !dbg !13671
  %70 = load %struct.k_thread*, %struct.k_thread** %17, align 4, !dbg !13787
  %71 = icmp eq %struct.k_thread* %70, null, !dbg !13787
  br i1 %71, label %90, label %72, !dbg !13788, !prof !13751

72:                                               ; preds = %68
  %73 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef nonnull %60) #24, !dbg !13789
  call void @llvm.dbg.value(metadata %struct.k_thread* %73, metadata !13668, metadata !DIExpression()), !dbg !13790
  %74 = icmp eq %struct.k_thread* %73, null, !dbg !13791
  br i1 %74, label %83, label %75, !dbg !13792

75:                                               ; preds = %72
  %76 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %73, i32 0, i32 0, i32 4, !dbg !13793
  %77 = bitcast %union.anon.2* %76 to i8*, !dbg !13793
  %78 = load i8, i8* %77, align 2, !dbg !13793
  %79 = sext i8 %78 to i32, !dbg !13794
  %80 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13795
  %81 = load i32, i32* %80, align 4, !dbg !13795
  %82 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %79, i32 noundef %81) #24, !dbg !13796
  br label %86, !dbg !13792

83:                                               ; preds = %72
  %84 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13797
  %85 = load i32, i32* %84, align 4, !dbg !13797
  br label %86, !dbg !13792

86:                                               ; preds = %83, %75
  %87 = phi i32 [ %82, %75 ], [ %85, %83 ], !dbg !13792
  call void @llvm.dbg.value(metadata i32 %87, metadata !13660, metadata !DIExpression()), !dbg !13671
  %88 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %87) #24, !dbg !13798
  %89 = select i1 %88, i1 true, i1 %59, !dbg !13799
  call void @llvm.dbg.value(metadata i1 %89, metadata !13666, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13671
  call void @llvm.dbg.value(metadata i8 poison, metadata !13666, metadata !DIExpression()), !dbg !13671
  br i1 %89, label %91, label %93, !dbg !13800

90:                                               ; preds = %68
  call void @llvm.dbg.value(metadata i8 poison, metadata !13666, metadata !DIExpression()), !dbg !13671
  br i1 %59, label %91, label %93, !dbg !13800

91:                                               ; preds = %86, %90
  %92 = insertvalue [1 x i32] poison, i32 %69, 0, !dbg !13801
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.254, [1 x i32] %92) #25, !dbg !13801
  br label %97, !dbg !13804

93:                                               ; preds = %86, %90
  call void @llvm.dbg.value(metadata i32 undef, metadata !13726, metadata !DIExpression()) #23, !dbg !13805
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.254, metadata !13731, metadata !DIExpression()) #23, !dbg !13805
  %94 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.254) #25, !dbg !13808
  br i1 %94, label %96, label %95, !dbg !13809

95:                                               ; preds = %93
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.258, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.256, i32 0, i32 0), i32 noundef 194) #25, !dbg !13810
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.259, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.254) #25, !dbg !13810
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.256, i32 0, i32 0), i32 noundef 194) #25, !dbg !13810
  unreachable, !dbg !13810

96:                                               ; preds = %93
  call void @llvm.dbg.value(metadata i32 %69, metadata !13726, metadata !DIExpression()) #23, !dbg !13805
  call void @llvm.dbg.value(metadata i32 %69, metadata !13740, metadata !DIExpression()) #23, !dbg !13811
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %69) #23, !dbg !13813, !srcloc !13746
  br label %97

97:                                               ; preds = %58, %91, %96, %44, %38
  %98 = phi i32 [ 0, %38 ], [ -16, %44 ], [ 0, %58 ], [ -11, %91 ], [ -11, %96 ], !dbg !13671
  ret i32 %98, !dbg !13814
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @new_prio_for_inheritance(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !13815 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13819, metadata !DIExpression()), !dbg !13822
  call void @llvm.dbg.value(metadata i32 %1, metadata !13820, metadata !DIExpression()), !dbg !13822
  %3 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) #24, !dbg !13823
  %4 = select i1 %3, i32 %0, i32 %1, !dbg !13823
  call void @llvm.dbg.value(metadata i32 %4, metadata !13821, metadata !DIExpression()), !dbg !13822
  %5 = tail call fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %4) #24, !dbg !13824
  call void @llvm.dbg.value(metadata i32 %5, metadata !13821, metadata !DIExpression()), !dbg !13822
  ret i32 %5, !dbg !13825
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !13826 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13830, metadata !DIExpression()), !dbg !13832
  call void @llvm.dbg.value(metadata i32 %1, metadata !13831, metadata !DIExpression()), !dbg !13832
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #24, !dbg !13833
  ret i1 %3, !dbg !13834
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !13835 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13839, metadata !DIExpression()), !dbg !13841
  call void @llvm.dbg.value(metadata i32 %1, metadata !13840, metadata !DIExpression()), !dbg !13841
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13842
  %4 = load %struct.k_thread*, %struct.k_thread** %3, align 4, !dbg !13842
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !13844
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !13844
  %7 = load i8, i8* %6, align 2, !dbg !13844
  %8 = sext i8 %7 to i32, !dbg !13845
  %9 = icmp eq i32 %8, %1, !dbg !13846
  br i1 %9, label %12, label %10, !dbg !13847

10:                                               ; preds = %2
  %11 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef nonnull %4, i32 noundef %1) #25, !dbg !13848
  br label %12, !dbg !13850

12:                                               ; preds = %2, %10
  %13 = phi i1 [ %11, %10 ], [ false, %2 ], !dbg !13841
  ret i1 %13, !dbg !13851
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef readonly %0) unnamed_addr #8 !dbg !13852 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13856, metadata !DIExpression()), !dbg !13857
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13858
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #24, !dbg !13859
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !13860
  ret %struct.k_thread* %4, !dbg !13861
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !13862 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13866, metadata !DIExpression()), !dbg !13867
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #24, !dbg !13868
  br i1 %2, label %6, label %3, !dbg !13868

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13869
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !13869
  br label %6, !dbg !13868

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !13868
  ret %struct._dnode* %7, !dbg !13870
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !13871 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13875, metadata !DIExpression()), !dbg !13876
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13877
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13877
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !13878
  ret i1 %4, !dbg !13879
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !13880 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13882, metadata !DIExpression()), !dbg !13884
  call void @llvm.dbg.value(metadata i32 %1, metadata !13883, metadata !DIExpression()), !dbg !13884
  %3 = icmp slt i32 %0, %1, !dbg !13885
  ret i1 %3, !dbg !13886
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %0) unnamed_addr #3 !dbg !13887 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13889, metadata !DIExpression()), !dbg !13890
  %2 = tail call fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) #24, !dbg !13891
  %3 = select i1 %2, i32 %0, i32 -127, !dbg !13891
  ret i32 %3, !dbg !13892
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) unnamed_addr #3 !dbg !13893 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13897, metadata !DIExpression()), !dbg !13898
  %2 = icmp sgt i32 %0, -128, !dbg !13899
  ret i1 %2, !dbg !13900
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) local_unnamed_addr #1 !dbg !13901 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13903, metadata !DIExpression()), !dbg !13907
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13908, !srcloc !13681
  call void @llvm.dbg.value(metadata i32 %2, metadata !13675, metadata !DIExpression()) #23, !dbg !13913
  %3 = icmp eq i32 %2, 0, !dbg !13914
  br i1 %3, label %5, label %4, !dbg !13915

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.252, i32 0, i32 0), i32 noundef 205) #25, !dbg !13916
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3.253, i32 0, i32 0)) #25, !dbg !13916
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.252, i32 0, i32 0), i32 noundef 205) #25, !dbg !13916
  unreachable, !dbg !13916

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13918
  %7 = load %struct.k_thread*, %struct.k_thread** %6, align 4, !dbg !13918
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !13918
  br i1 %8, label %41, label %9, !dbg !13920

9:                                                ; preds = %5
  %10 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13921
  %11 = icmp eq %struct.k_thread* %7, %10, !dbg !13921
  br i1 %11, label %12, label %41, !dbg !13923

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !13924
  %14 = load i32, i32* %13, align 4, !dbg !13924
  switch i32 %14, label %16 [
    i32 0, label %15
    i32 1, label %18
  ], !dbg !13927

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.252, i32 0, i32 0), i32 noundef 229) #25, !dbg !13928
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.252, i32 0, i32 0), i32 noundef 229) #25, !dbg !13928
  unreachable, !dbg !13928

16:                                               ; preds = %12
  %17 = add i32 %14, -1, !dbg !13930
  store i32 %17, i32* %13, align 4, !dbg !13930
  br label %41, !dbg !13933

18:                                               ; preds = %12
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.254, metadata !13687, metadata !DIExpression()) #23, !dbg !13934
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13936, !srcloc !13702
  call void @llvm.dbg.value(metadata i32 undef, metadata !13699, metadata !DIExpression()) #23, !dbg !13938
  call void @llvm.dbg.value(metadata i32 undef, metadata !13700, metadata !DIExpression()) #23, !dbg !13938
  call void @llvm.dbg.value(metadata i32 undef, metadata !13693, metadata !DIExpression()) #23, !dbg !13934
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.254) #25, !dbg !13939
  br i1 %20, label %22, label %21, !dbg !13940

21:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.256, i32 0, i32 0), i32 noundef 148) #25, !dbg !13941
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.257, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.254) #25, !dbg !13941
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.256, i32 0, i32 0), i32 noundef 148) #25, !dbg !13941
  unreachable, !dbg !13941

22:                                               ; preds = %18
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !13936
  call void @llvm.dbg.value(metadata i32 %23, metadata !13699, metadata !DIExpression()) #23, !dbg !13938
  call void @llvm.dbg.value(metadata i32 %23, metadata !13693, metadata !DIExpression()) #23, !dbg !13934
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.254) #25, !dbg !13942
  call void @llvm.dbg.value(metadata i32 %23, metadata !13905, metadata !DIExpression()), !dbg !13907
  %24 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13943
  %25 = load i32, i32* %24, align 4, !dbg !13943
  %26 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %25) #24, !dbg !13944
  %27 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !13945
  %28 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %27) #25, !dbg !13946
  call void @llvm.dbg.value(metadata %struct.k_thread* %28, metadata !13904, metadata !DIExpression()), !dbg !13907
  store %struct.k_thread* %28, %struct.k_thread** %6, align 4, !dbg !13947
  %29 = icmp eq %struct.k_thread* %28, null, !dbg !13948
  br i1 %29, label %37, label %30, !dbg !13950

30:                                               ; preds = %22
  %31 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 0, i32 4, !dbg !13951
  %32 = bitcast %union.anon.2* %31 to i8*, !dbg !13951
  %33 = load i8, i8* %32, align 2, !dbg !13951
  %34 = sext i8 %33 to i32, !dbg !13953
  store i32 %34, i32* %24, align 4, !dbg !13954
  call void @llvm.dbg.value(metadata %struct.k_thread* %28, metadata !13955, metadata !DIExpression()), !dbg !13961
  call void @llvm.dbg.value(metadata i32 0, metadata !13960, metadata !DIExpression()), !dbg !13961
  %35 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 8, i32 1, !dbg !13963
  store i32 0, i32* %35, align 4, !dbg !13964
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %28) #25, !dbg !13965
  %36 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !13966
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.254, [1 x i32] %36) #25, !dbg !13966
  br label %41, !dbg !13967

37:                                               ; preds = %22
  store i32 0, i32* %13, align 4, !dbg !13968
  call void @llvm.dbg.value(metadata i32 undef, metadata !13726, metadata !DIExpression()) #23, !dbg !13970
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.254, metadata !13731, metadata !DIExpression()) #23, !dbg !13970
  %38 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.254) #25, !dbg !13972
  br i1 %38, label %40, label %39, !dbg !13973

39:                                               ; preds = %37
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.258, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.256, i32 0, i32 0), i32 noundef 194) #25, !dbg !13974
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.259, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.254) #25, !dbg !13974
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.256, i32 0, i32 0), i32 noundef 194) #25, !dbg !13974
  unreachable, !dbg !13974

40:                                               ; preds = %37
  call void @llvm.dbg.value(metadata i32 %23, metadata !13726, metadata !DIExpression()) #23, !dbg !13970
  call void @llvm.dbg.value(metadata i32 %23, metadata !13740, metadata !DIExpression()) #23, !dbg !13975
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #23, !dbg !13977, !srcloc !13746
  br label %41

41:                                               ; preds = %30, %40, %16, %9, %5
  %42 = phi i32 [ -22, %5 ], [ -1, %9 ], [ 0, %16 ], [ 0, %40 ], [ 0, %30 ], !dbg !13907
  ret i32 %42, !dbg !13978
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !13979 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13983, metadata !DIExpression()), !dbg !13987
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13984, metadata !DIExpression()), !dbg !13987
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13988
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !13988
  %5 = load i8, i8* %4, align 2, !dbg !13988
  call void @llvm.dbg.value(metadata i8 %5, metadata !13985, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13987
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !13989
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !13989
  %8 = load i8, i8* %7, align 2, !dbg !13989
  call void @llvm.dbg.value(metadata i8 %8, metadata !13986, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13987
  %9 = icmp eq i8 %8, %5, !dbg !13990
  %10 = sext i8 %5 to i32, !dbg !13992
  %11 = sext i8 %8 to i32, !dbg !13992
  %12 = sub nsw i32 %11, %10, !dbg !13992
  %13 = select i1 %9, i32 0, i32 %12, !dbg !13992
  ret i32 %13, !dbg !13993
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !13994 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13998, metadata !DIExpression()), !dbg !13999
  %2 = tail call fastcc i32 @slice_time() #24, !dbg !14000
  %3 = icmp eq i32 %2, 0, !dbg !14002
  br i1 %3, label %8, label %4, !dbg !14003

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #25, !dbg !14004
  %6 = add i32 %5, %2, !dbg !14006
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14007
  %7 = tail call fastcc i32 @slice_time() #24, !dbg !14008
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #25, !dbg !14009
  br label %8, !dbg !14010

8:                                                ; preds = %4, %1
  ret void, !dbg !14011
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #8 !dbg !14012 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14016, metadata !DIExpression()), !dbg !14018
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !14019
  call void @llvm.dbg.value(metadata i32 %1, metadata !14017, metadata !DIExpression()), !dbg !14018
  ret i32 %1, !dbg !14020
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14021 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14025, metadata !DIExpression()), !dbg !14034
  call void @llvm.dbg.value(metadata i32 %1, metadata !14026, metadata !DIExpression()), !dbg !14034
  call void @llvm.dbg.value(metadata i32 0, metadata !14027, metadata !DIExpression()), !dbg !14035
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14036, metadata !DIExpression()) #23, !dbg !14043
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14045, !srcloc !14051
  call void @llvm.dbg.value(metadata i32 undef, metadata !14048, metadata !DIExpression()) #23, !dbg !14052
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !14052
  call void @llvm.dbg.value(metadata i32 undef, metadata !14042, metadata !DIExpression()) #23, !dbg !14043
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14053
  br i1 %4, label %6, label %5, !dbg !14056

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 148) #25, !dbg !14057
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.266, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14057
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 148) #25, !dbg !14057
  unreachable, !dbg !14057

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14048, metadata !DIExpression()) #23, !dbg !14052
  call void @llvm.dbg.value(metadata i32 undef, metadata !14042, metadata !DIExpression()) #23, !dbg !14043
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14059
  call void @llvm.dbg.value(metadata i32 undef, metadata !14033, metadata !DIExpression()), !dbg !14035
  call void @llvm.dbg.value(metadata i32 undef, metadata !14027, metadata !DIExpression()), !dbg !14035
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14060
  %7 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #24, !dbg !14063
  %8 = icmp sgt i32 %0, 0, !dbg !14064
  %9 = icmp sgt i32 %7, 2, !dbg !14066
  %10 = select i1 %9, i32 %7, i32 2, !dbg !14066
  %11 = select i1 %8, i32 %10, i32 %7, !dbg !14066
  store i32 %11, i32* @slice_ticks, align 4, !dbg !14067
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !14068
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14069
  call void @llvm.dbg.value(metadata i32 undef, metadata !14070, metadata !DIExpression()) #23, !dbg !14076
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14075, metadata !DIExpression()) #23, !dbg !14076
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14078
  br i1 %12, label %14, label %13, !dbg !14081

13:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 194) #25, !dbg !14082
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.268, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14082
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 194) #25, !dbg !14082
  unreachable, !dbg !14082

14:                                               ; preds = %6
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !14045
  call void @llvm.dbg.value(metadata i32 %15, metadata !14048, metadata !DIExpression()) #23, !dbg !14052
  call void @llvm.dbg.value(metadata i32 %15, metadata !14042, metadata !DIExpression()) #23, !dbg !14043
  call void @llvm.dbg.value(metadata i32 %15, metadata !14033, metadata !DIExpression()), !dbg !14035
  call void @llvm.dbg.value(metadata i32 undef, metadata !14070, metadata !DIExpression()) #23, !dbg !14076
  call void @llvm.dbg.value(metadata i32 undef, metadata !14084, metadata !DIExpression()) #23, !dbg !14087
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !14089, !srcloc !14090
  call void @llvm.dbg.value(metadata i32 1, metadata !14027, metadata !DIExpression()), !dbg !14035
  call void @llvm.dbg.value(metadata i32 undef, metadata !14027, metadata !DIExpression()), !dbg !14035
  ret void, !dbg !14091
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #3 !dbg !14092 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14094, metadata !DIExpression()), !dbg !14095
  call void @llvm.dbg.value(metadata i32 %0, metadata !14096, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14111
  call void @llvm.dbg.value(metadata i32 1000, metadata !14099, metadata !DIExpression()), !dbg !14111
  call void @llvm.dbg.value(metadata i32 10000, metadata !14100, metadata !DIExpression()), !dbg !14111
  call void @llvm.dbg.value(metadata i8 1, metadata !14101, metadata !DIExpression()), !dbg !14111
  call void @llvm.dbg.value(metadata i1 true, metadata !14102, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14111
  call void @llvm.dbg.value(metadata i1 true, metadata !14103, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14111
  call void @llvm.dbg.value(metadata i8 0, metadata !14104, metadata !DIExpression()), !dbg !14111
  call void @llvm.dbg.value(metadata i1 true, metadata !14105, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14111
  call void @llvm.dbg.value(metadata i1 false, metadata !14106, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14111
  call void @llvm.dbg.value(metadata i64 0, metadata !14107, metadata !DIExpression()), !dbg !14111
  call void @llvm.dbg.value(metadata i64 0, metadata !14107, metadata !DIExpression()), !dbg !14111
  %2 = mul i32 %0, 10, !dbg !14113
  ret i32 %2, !dbg !14119
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !14120 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14122, metadata !DIExpression()), !dbg !14124
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14036, metadata !DIExpression()) #23, !dbg !14125
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14127, !srcloc !14051
  call void @llvm.dbg.value(metadata i32 undef, metadata !14048, metadata !DIExpression()) #23, !dbg !14129
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !14129
  call void @llvm.dbg.value(metadata i32 undef, metadata !14042, metadata !DIExpression()) #23, !dbg !14125
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14130
  br i1 %3, label %5, label %4, !dbg !14131

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 148) #25, !dbg !14132
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.266, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14132
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 148) #25, !dbg !14132
  unreachable, !dbg !14132

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14127
  call void @llvm.dbg.value(metadata i32 %6, metadata !14048, metadata !DIExpression()) #23, !dbg !14129
  call void @llvm.dbg.value(metadata i32 %6, metadata !14042, metadata !DIExpression()) #23, !dbg !14125
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14133
  call void @llvm.dbg.value(metadata i32 %6, metadata !14123, metadata !DIExpression()), !dbg !14124
  %7 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14134
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14136
  %9 = icmp eq %struct.k_thread* %7, %8, !dbg !14137
  br i1 %9, label %10, label %14, !dbg !14138

10:                                               ; preds = %5
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14139
  call void @llvm.dbg.value(metadata i32 undef, metadata !14070, metadata !DIExpression()) #23, !dbg !14141
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14075, metadata !DIExpression()) #23, !dbg !14141
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14143
  br i1 %11, label %13, label %12, !dbg !14144

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 194) #25, !dbg !14145
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.268, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14145
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 194) #25, !dbg !14145
  unreachable, !dbg !14145

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %6, metadata !14070, metadata !DIExpression()) #23, !dbg !14141
  call void @llvm.dbg.value(metadata i32 %6, metadata !14084, metadata !DIExpression()) #23, !dbg !14146
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14148, !srcloc !14090
  br label %33, !dbg !14149

14:                                               ; preds = %5
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14150
  %15 = tail call fastcc i32 @slice_time() #24, !dbg !14151
  %16 = icmp eq i32 %15, 0, !dbg !14151
  br i1 %16, label %27, label %17, !dbg !14153

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %8) #24, !dbg !14154
  br i1 %18, label %19, label %27, !dbg !14155

19:                                               ; preds = %17
  %20 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14156
  %21 = icmp sgt i32 %20, %0, !dbg !14159
  br i1 %21, label %25, label %22, !dbg !14160

22:                                               ; preds = %19
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14161
  %24 = tail call fastcc i32 @slice_expired_locked([1 x i32] %23) #24, !dbg !14161
  call void @llvm.dbg.value(metadata i32 %24, metadata !14123, metadata !DIExpression()), !dbg !14124
  br label %28, !dbg !14163

25:                                               ; preds = %19
  %26 = sub nsw i32 %20, %0, !dbg !14164
  store i32 %26, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14164
  br label %28

27:                                               ; preds = %17, %14
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14166
  br label %28

28:                                               ; preds = %22, %25, %27
  %29 = phi i32 [ %24, %22 ], [ %6, %25 ], [ %6, %27 ], !dbg !14124
  call void @llvm.dbg.value(metadata i32 %29, metadata !14123, metadata !DIExpression()), !dbg !14124
  call void @llvm.dbg.value(metadata i32 undef, metadata !14070, metadata !DIExpression()) #23, !dbg !14168
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14075, metadata !DIExpression()) #23, !dbg !14168
  %30 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14170
  br i1 %30, label %32, label %31, !dbg !14171

31:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 194) #25, !dbg !14172
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.268, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14172
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 194) #25, !dbg !14172
  unreachable, !dbg !14172

32:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %29, metadata !14070, metadata !DIExpression()) #23, !dbg !14168
  call void @llvm.dbg.value(metadata i32 %29, metadata !14084, metadata !DIExpression()) #23, !dbg !14173
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #23, !dbg !14175, !srcloc !14090
  br label %33, !dbg !14176

33:                                               ; preds = %32, %13
  ret void, !dbg !14176
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #8 !dbg !14177 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14181, metadata !DIExpression()), !dbg !14183
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #24, !dbg !14184
  %3 = icmp eq i32 %2, 0, !dbg !14184
  br i1 %3, label %16, label %4, !dbg !14185

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !14186
  br i1 %5, label %16, label %6, !dbg !14187

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14188
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !14188
  %9 = load i8, i8* %8, align 2, !dbg !14188
  %10 = sext i8 %9 to i32, !dbg !14189
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !14190
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher.276(i32 noundef %10, i32 noundef %11) #24, !dbg !14191
  br i1 %12, label %16, label %13, !dbg !14192

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #24, !dbg !14193
  %15 = xor i1 %14, true, !dbg !14194
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !14183
  call void @llvm.dbg.value(metadata i1 %17, metadata !14182, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14183
  ret i1 %17, !dbg !14195
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !14196 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14200, metadata !DIExpression()), !dbg !14202
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14203
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14201, metadata !DIExpression()), !dbg !14202
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #24, !dbg !14204
  br i1 %3, label %5, label %4, !dbg !14206

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #24, !dbg !14207
  br label %5, !dbg !14209

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !14200, metadata !DIExpression()), !dbg !14202
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14210
  ret i32 %6, !dbg !14211
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14212 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14214, metadata !DIExpression()), !dbg !14216
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14217
  %3 = load i8, i8* %2, align 1, !dbg !14217
  call void @llvm.dbg.value(metadata i8 %3, metadata !14215, metadata !DIExpression()), !dbg !14216
  %4 = and i8 %3, 31, !dbg !14218
  %5 = icmp ne i8 %4, 0, !dbg !14219
  ret i1 %5, !dbg !14220
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14221 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14223, metadata !DIExpression()), !dbg !14224
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14225
  br i1 %2, label %3, label %7, !dbg !14227

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14228, metadata !DIExpression()) #23, !dbg !14231
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14234
  %5 = load i8, i8* %4, align 1, !dbg !14235
  %6 = and i8 %5, 127, !dbg !14235
  store i8 %6, i8* %4, align 1, !dbg !14235
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14236, metadata !DIExpression()) #23, !dbg !14239
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14243
  br label %7, !dbg !14244

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14245, metadata !DIExpression()) #23, !dbg !14248
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14250
  %9 = load i8, i8* %8, align 1, !dbg !14251
  %10 = or i8 %9, -128, !dbg !14251
  store i8 %10, i8* %8, align 1, !dbg !14251
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14252, metadata !DIExpression()) #23, !dbg !14255
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14259, metadata !DIExpression()) #23, !dbg !14267
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14265, metadata !DIExpression()) #23, !dbg !14267
  %11 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !14269
  br i1 %11, label %12, label %13, !dbg !14272

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.270, i32 0, i32 0), i32 noundef 186) #25, !dbg !14273
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.270, i32 0, i32 0), i32 noundef 186) #25, !dbg !14273
  unreachable, !dbg !14273

13:                                               ; preds = %7
  %14 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.271(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14275
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !14266, metadata !DIExpression()) #23, !dbg !14267
  %15 = icmp eq %struct._dnode* %14, null, !dbg !14277
  br i1 %15, label %26, label %16, !dbg !14275

16:                                               ; preds = %13, %23
  %17 = phi %struct._dnode* [ %24, %23 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !14266, metadata !DIExpression()) #23, !dbg !14267
  %18 = bitcast %struct._dnode* %17 to %struct.k_thread*, !dbg !14279
  call void @llvm.dbg.value(metadata %struct.k_thread* %18, metadata !14266, metadata !DIExpression()) #23, !dbg !14267
  %19 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %18) #25, !dbg !14280
  %20 = icmp sgt i32 %19, 0, !dbg !14283
  br i1 %20, label %21, label %23, !dbg !14284

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14285
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %17, %struct._dnode* noundef %22) #25, !dbg !14287
  br label %28, !dbg !14288

23:                                               ; preds = %16
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %17) #25, !dbg !14277
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14266, metadata !DIExpression()) #23, !dbg !14267
  %25 = icmp eq %struct._dnode* %24, null, !dbg !14277
  br i1 %25, label %26, label %16, !dbg !14275, !llvm.loop !14289

26:                                               ; preds = %23, %13
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14291
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %27) #25, !dbg !14292
  br label %28, !dbg !14293

28:                                               ; preds = %21, %26
  %29 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14294
  %30 = icmp eq %struct.k_thread* %29, %0, !dbg !14295
  %31 = zext i1 %30 to i32, !dbg !14295
  tail call fastcc void @update_cache(i32 noundef %31) #24, !dbg !14296
  ret void, !dbg !14297
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14298 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14300, metadata !DIExpression()), !dbg !14301
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0, i32 noundef 128) #24, !dbg !14302
  ret i1 %2, !dbg !14303
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14304 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !14306, metadata !DIExpression()), !dbg !14308
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14307, metadata !DIExpression()), !dbg !14308
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !14309
  br i1 %3, label %4, label %5, !dbg !14312

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.270, i32 0, i32 0), i32 noundef 1139) #25, !dbg !14313
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.270, i32 0, i32 0), i32 noundef 1139) #25, !dbg !14313
  unreachable, !dbg !14313

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !14315
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %6) #24, !dbg !14316
  ret void, !dbg !14317
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #3 !dbg !14318 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14320, metadata !DIExpression()), !dbg !14321
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !14322
  ret i1 %2, !dbg !14323
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.271(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !14324 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14328, metadata !DIExpression()), !dbg !14329
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.274(%struct._dnode* noundef %0) #24, !dbg !14330
  br i1 %2, label %6, label %3, !dbg !14330

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14331
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14331
  br label %6, !dbg !14330

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14330
  ret %struct._dnode* %7, !dbg !14332
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !14333 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14337, metadata !DIExpression()), !dbg !14341
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14338, metadata !DIExpression()), !dbg !14341
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14342
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14342
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14339, metadata !DIExpression()), !dbg !14341
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14343
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14344
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14345
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14346
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14347
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14348
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14349
  ret void, !dbg !14350
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !14351 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14355, metadata !DIExpression()), !dbg !14357
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14356, metadata !DIExpression()), !dbg !14357
  %3 = icmp eq %struct._dnode* %1, null, !dbg !14358
  br i1 %3, label %6, label %4, !dbg !14359

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #24, !dbg !14360
  br label %6, !dbg !14359

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !14359
  ret %struct._dnode* %7, !dbg !14361
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !14362 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14366, metadata !DIExpression()), !dbg !14369
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14367, metadata !DIExpression()), !dbg !14369
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14370
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14370
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14368, metadata !DIExpression()), !dbg !14369
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14371
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !14372
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14373
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !14374
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14375
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14376
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14377
  ret void, !dbg !14378
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !14379 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14381, metadata !DIExpression()), !dbg !14383
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14384
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14391, metadata !DIExpression()) #23, !dbg !14393
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14394
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !14395
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !14395
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14382, metadata !DIExpression()), !dbg !14383
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14396, metadata !DIExpression()) #23, !dbg !14402
  call void @llvm.dbg.value(metadata i32 %0, metadata !14401, metadata !DIExpression()) #23, !dbg !14402
  %6 = icmp eq i32 %0, 0, !dbg !14405
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14407
  br i1 %6, label %8, label %18, !dbg !14408

8:                                                ; preds = %1
  %9 = icmp eq %struct.k_thread* %7, null, !dbg !14409
  br i1 %9, label %10, label %11, !dbg !14412

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.270, i32 0, i32 0), i32 noundef 137) #25, !dbg !14413
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.273, i32 0, i32 0)) #25, !dbg !14413
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.270, i32 0, i32 0), i32 noundef 137) #25, !dbg !14413
  unreachable, !dbg !14413

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %7) #25, !dbg !14415
  br i1 %12, label %18, label %13, !dbg !14417

13:                                               ; preds = %11
  %14 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #25, !dbg !14418
  br i1 %14, label %18, label %15, !dbg !14420

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef nonnull %7) #25, !dbg !14421
  %17 = icmp eq i32 %16, 0, !dbg !14421
  br i1 %17, label %21, label %18, !dbg !14423

18:                                               ; preds = %1, %13, %11, %15
  %19 = icmp eq %struct.k_thread* %5, %7, !dbg !14424
  br i1 %19, label %21, label %20, !dbg !14427

20:                                               ; preds = %18
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14428
  br label %21, !dbg !14430

21:                                               ; preds = %15, %18, %20
  %22 = phi %struct.k_thread* [ %5, %20 ], [ %5, %18 ], [ %7, %15 ], !dbg !14407
  store %struct.k_thread* %22, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14407
  ret void, !dbg !14431
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #8 !dbg !14432 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14436, metadata !DIExpression()), !dbg !14439
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14437, metadata !DIExpression()), !dbg !14439
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.271(%struct._dnode* noundef %0) #24, !dbg !14440
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !14438, metadata !DIExpression()), !dbg !14439
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14437, metadata !DIExpression()), !dbg !14439
  ret %struct.k_thread* %3, !dbg !14441
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14442 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14444, metadata !DIExpression()), !dbg !14445
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14446
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !14447
  %4 = xor i1 %3, true, !dbg !14448
  ret i1 %4, !dbg !14449
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14450 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14452, metadata !DIExpression()), !dbg !14453
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !14454
  %3 = load i16, i16* %2, align 2, !dbg !14454
  %4 = icmp ult i16 %3, 128, !dbg !14455
  %5 = zext i1 %4 to i32, !dbg !14455
  ret i32 %5, !dbg !14456
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14457 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14463, metadata !DIExpression()), !dbg !14464
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14465
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #24, !dbg !14466
  %4 = xor i1 %3, true, !dbg !14467
  ret i1 %4, !dbg !14468
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14469 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14475, metadata !DIExpression()), !dbg !14476
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14477
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14477
  %4 = icmp ne %struct._dnode* %3, null, !dbg !14478
  ret i1 %4, !dbg !14479
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !14480 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14482, metadata !DIExpression()), !dbg !14484
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14483, metadata !DIExpression()), !dbg !14484
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14485
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14485
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !14486
  br i1 %5, label %9, label %6, !dbg !14487

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14488
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !14488
  br label %9, !dbg !14487

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !14487
  ret %struct._dnode* %10, !dbg !14489
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.274(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !14490 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14494, metadata !DIExpression()), !dbg !14495
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14496
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14496
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !14497
  ret i1 %4, !dbg !14498
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !14499 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14503, metadata !DIExpression()), !dbg !14506
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14507
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14507
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14504, metadata !DIExpression()), !dbg !14506
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14508
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14508
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !14505, metadata !DIExpression()), !dbg !14506
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !14509
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !14510
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !14511
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !14512
  tail call fastcc void @sys_dnode_init.275(%struct._dnode* noundef %0) #24, !dbg !14513
  ret void, !dbg !14514
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.275(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14515 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14517, metadata !DIExpression()), !dbg !14518
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14519
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14520
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14521
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14522
  ret void, !dbg !14523
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #8 !dbg !14524 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14528, metadata !DIExpression()), !dbg !14530
  call void @llvm.dbg.value(metadata i32 %1, metadata !14529, metadata !DIExpression()), !dbg !14530
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14531
  %4 = load i8, i8* %3, align 1, !dbg !14531
  %5 = zext i8 %4 to i32, !dbg !14532
  %6 = and i32 %5, %1, !dbg !14533
  %7 = icmp ne i32 %6, 0, !dbg !14534
  ret i1 %7, !dbg !14535
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher.276(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !14536 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14538, metadata !DIExpression()), !dbg !14540
  call void @llvm.dbg.value(metadata i32 %1, metadata !14539, metadata !DIExpression()), !dbg !14540
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2.277(i32 noundef %0, i32 noundef %1) #24, !dbg !14541
  ret i1 %3, !dbg !14542
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2.277(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !14543 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14545, metadata !DIExpression()), !dbg !14547
  call void @llvm.dbg.value(metadata i32 %1, metadata !14546, metadata !DIExpression()), !dbg !14547
  %3 = icmp slt i32 %0, %1, !dbg !14548
  ret i1 %3, !dbg !14549
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14550 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14552, metadata !DIExpression()), !dbg !14556
  call void @llvm.dbg.value(metadata i32 0, metadata !14553, metadata !DIExpression()), !dbg !14557
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14036, metadata !DIExpression()) #23, !dbg !14558
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14560, !srcloc !14051
  call void @llvm.dbg.value(metadata i32 undef, metadata !14048, metadata !DIExpression()) #23, !dbg !14562
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !14562
  call void @llvm.dbg.value(metadata i32 undef, metadata !14042, metadata !DIExpression()) #23, !dbg !14558
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14563
  br i1 %3, label %5, label %4, !dbg !14564

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 148) #25, !dbg !14565
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.266, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14565
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 148) #25, !dbg !14565
  unreachable, !dbg !14565

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14048, metadata !DIExpression()) #23, !dbg !14562
  call void @llvm.dbg.value(metadata i32 undef, metadata !14042, metadata !DIExpression()) #23, !dbg !14558
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14566
  call void @llvm.dbg.value(metadata i32 undef, metadata !14555, metadata !DIExpression()), !dbg !14557
  call void @llvm.dbg.value(metadata i32 undef, metadata !14553, metadata !DIExpression()), !dbg !14557
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !14567
  call void @llvm.dbg.value(metadata i32 undef, metadata !14070, metadata !DIExpression()) #23, !dbg !14572
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14075, metadata !DIExpression()) #23, !dbg !14572
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14574
  br i1 %6, label %8, label %7, !dbg !14575

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 194) #25, !dbg !14576
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.268, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14576
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 194) #25, !dbg !14576
  unreachable, !dbg !14576

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14560
  call void @llvm.dbg.value(metadata i32 %9, metadata !14048, metadata !DIExpression()) #23, !dbg !14562
  call void @llvm.dbg.value(metadata i32 %9, metadata !14042, metadata !DIExpression()) #23, !dbg !14558
  call void @llvm.dbg.value(metadata i32 %9, metadata !14555, metadata !DIExpression()), !dbg !14557
  call void @llvm.dbg.value(metadata i32 undef, metadata !14070, metadata !DIExpression()) #23, !dbg !14572
  call void @llvm.dbg.value(metadata i32 undef, metadata !14084, metadata !DIExpression()) #23, !dbg !14577
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14579, !srcloc !14090
  call void @llvm.dbg.value(metadata i32 1, metadata !14553, metadata !DIExpression()), !dbg !14557
  call void @llvm.dbg.value(metadata i32 undef, metadata !14553, metadata !DIExpression()), !dbg !14557
  ret void, !dbg !14580
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14581 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14583, metadata !DIExpression()), !dbg !14584
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14585
  br i1 %2, label %27, label %3, !dbg !14587

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !14588
  br i1 %4, label %5, label %27, !dbg !14589

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14245, metadata !DIExpression()) #23, !dbg !14590
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14593
  %7 = load i8, i8* %6, align 1, !dbg !14594
  %8 = or i8 %7, -128, !dbg !14594
  store i8 %8, i8* %6, align 1, !dbg !14594
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14252, metadata !DIExpression()) #23, !dbg !14595
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14259, metadata !DIExpression()) #23, !dbg !14597
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14265, metadata !DIExpression()) #23, !dbg !14597
  %9 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !14599
  br i1 %9, label %10, label %11, !dbg !14600

10:                                               ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.270, i32 0, i32 0), i32 noundef 186) #25, !dbg !14601
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.270, i32 0, i32 0), i32 noundef 186) #25, !dbg !14601
  unreachable, !dbg !14601

11:                                               ; preds = %5
  %12 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.271(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14602
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !14266, metadata !DIExpression()) #23, !dbg !14597
  %13 = icmp eq %struct._dnode* %12, null, !dbg !14603
  br i1 %13, label %24, label %14, !dbg !14602

14:                                               ; preds = %11, %21
  %15 = phi %struct._dnode* [ %22, %21 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !14266, metadata !DIExpression()) #23, !dbg !14597
  %16 = bitcast %struct._dnode* %15 to %struct.k_thread*, !dbg !14604
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !14266, metadata !DIExpression()) #23, !dbg !14597
  %17 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %16) #25, !dbg !14605
  %18 = icmp sgt i32 %17, 0, !dbg !14606
  br i1 %18, label %19, label %21, !dbg !14607

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14608
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %15, %struct._dnode* noundef %20) #25, !dbg !14609
  br label %26, !dbg !14610

21:                                               ; preds = %14
  %22 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %15) #25, !dbg !14603
  call void @llvm.dbg.value(metadata %struct._dnode* %22, metadata !14266, metadata !DIExpression()) #23, !dbg !14597
  %23 = icmp eq %struct._dnode* %22, null, !dbg !14603
  br i1 %23, label %24, label %14, !dbg !14602, !llvm.loop !14611

24:                                               ; preds = %21, %11
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14613
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %25) #25, !dbg !14614
  br label %26, !dbg !14615

26:                                               ; preds = %19, %24
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !14616
  br label %27, !dbg !14617

27:                                               ; preds = %26, %3, %1
  ret void, !dbg !14618
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14619 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14621, metadata !DIExpression()), !dbg !14622
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !14623
  br i1 %2, label %6, label %3, !dbg !14624

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #24, !dbg !14625
  %5 = xor i1 %4, true, !dbg !14624
  br label %6, !dbg !14624

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !14626
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14627 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14629, metadata !DIExpression()), !dbg !14633
  call void @llvm.dbg.value(metadata i32 0, metadata !14630, metadata !DIExpression()), !dbg !14634
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14036, metadata !DIExpression()) #23, !dbg !14635
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14637, !srcloc !14051
  call void @llvm.dbg.value(metadata i32 undef, metadata !14048, metadata !DIExpression()) #23, !dbg !14639
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !14639
  call void @llvm.dbg.value(metadata i32 undef, metadata !14042, metadata !DIExpression()) #23, !dbg !14635
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14640
  br i1 %3, label %5, label %4, !dbg !14641

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 148) #25, !dbg !14642
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.266, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14642
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 148) #25, !dbg !14642
  unreachable, !dbg !14642

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14048, metadata !DIExpression()) #23, !dbg !14639
  call void @llvm.dbg.value(metadata i32 undef, metadata !14042, metadata !DIExpression()) #23, !dbg !14635
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14643
  call void @llvm.dbg.value(metadata i32 undef, metadata !14632, metadata !DIExpression()), !dbg !14634
  call void @llvm.dbg.value(metadata i32 undef, metadata !14630, metadata !DIExpression()), !dbg !14634
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #24, !dbg !14644
  call void @llvm.dbg.value(metadata i32 undef, metadata !14070, metadata !DIExpression()) #23, !dbg !14647
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14075, metadata !DIExpression()) #23, !dbg !14647
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14649
  br i1 %6, label %8, label %7, !dbg !14650

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 194) #25, !dbg !14651
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.268, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14651
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 194) #25, !dbg !14651
  unreachable, !dbg !14651

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14637
  call void @llvm.dbg.value(metadata i32 %9, metadata !14048, metadata !DIExpression()) #23, !dbg !14639
  call void @llvm.dbg.value(metadata i32 %9, metadata !14042, metadata !DIExpression()) #23, !dbg !14635
  call void @llvm.dbg.value(metadata i32 %9, metadata !14632, metadata !DIExpression()), !dbg !14634
  call void @llvm.dbg.value(metadata i32 undef, metadata !14070, metadata !DIExpression()) #23, !dbg !14647
  call void @llvm.dbg.value(metadata i32 undef, metadata !14084, metadata !DIExpression()) #23, !dbg !14652
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14654, !srcloc !14090
  call void @llvm.dbg.value(metadata i32 1, metadata !14630, metadata !DIExpression()), !dbg !14634
  call void @llvm.dbg.value(metadata i32 undef, metadata !14630, metadata !DIExpression()), !dbg !14634
  ret void, !dbg !14655
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14656 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14658, metadata !DIExpression()), !dbg !14660
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14036, metadata !DIExpression()) #23, !dbg !14661
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14663, !srcloc !14051
  call void @llvm.dbg.value(metadata i32 undef, metadata !14048, metadata !DIExpression()) #23, !dbg !14665
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !14665
  call void @llvm.dbg.value(metadata i32 undef, metadata !14042, metadata !DIExpression()) #23, !dbg !14661
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14666
  br i1 %3, label %5, label %4, !dbg !14667

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 148) #25, !dbg !14668
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.266, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14668
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 148) #25, !dbg !14668
  unreachable, !dbg !14668

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14663
  call void @llvm.dbg.value(metadata i32 %6, metadata !14048, metadata !DIExpression()) #23, !dbg !14665
  call void @llvm.dbg.value(metadata i32 %6, metadata !14042, metadata !DIExpression()) #23, !dbg !14661
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14669
  call void @llvm.dbg.value(metadata i32 %6, metadata !14659, metadata !DIExpression()), !dbg !14660
  %7 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #24, !dbg !14670
  br i1 %7, label %8, label %12, !dbg !14672

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14070, metadata !DIExpression()) #23, !dbg !14673
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14075, metadata !DIExpression()) #23, !dbg !14673
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14676
  br i1 %9, label %11, label %10, !dbg !14677

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 194) #25, !dbg !14678
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.268, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14678
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 194) #25, !dbg !14678
  unreachable, !dbg !14678

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !14070, metadata !DIExpression()) #23, !dbg !14673
  call void @llvm.dbg.value(metadata i32 %6, metadata !14084, metadata !DIExpression()) #23, !dbg !14679
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14681, !srcloc !14090
  br label %14, !dbg !14682

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_started.282(%struct.k_thread* noundef %0) #24, !dbg !14683
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !14684
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14685
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #24, !dbg !14685
  br label %14, !dbg !14686

14:                                               ; preds = %12, %11
  ret void, !dbg !14686
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14687 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14689, metadata !DIExpression()), !dbg !14690
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14691
  %3 = load i8, i8* %2, align 1, !dbg !14691
  %4 = and i8 %3, 4, !dbg !14692
  %5 = icmp eq i8 %4, 0, !dbg !14693
  ret i1 %5, !dbg !14694
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.282(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !14695 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14697, metadata !DIExpression()), !dbg !14698
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14699
  %3 = load i8, i8* %2, align 1, !dbg !14700
  %4 = and i8 %3, -5, !dbg !14700
  store i8 %4, i8* %2, align 1, !dbg !14700
  ret void, !dbg !14701
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !14702 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !14705, metadata !DIExpression()), !dbg !14706
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14704, metadata !DIExpression()), !dbg !14706
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #24, !dbg !14707
  br i1 %4, label %5, label %12, !dbg !14709

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #24, !dbg !14710
  br i1 %6, label %7, label %12, !dbg !14711

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14712, metadata !DIExpression()) #23, !dbg !14718
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14717, metadata !DIExpression()) #23, !dbg !14718
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14721, metadata !DIExpression()) #23, !dbg !14726
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !14728
  br i1 %8, label %10, label %9, !dbg !14731

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 225) #25, !dbg !14732
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.268, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !14732
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 225) #25, !dbg !14732
  unreachable, !dbg !14732

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %3, metadata !14712, metadata !DIExpression()) #23, !dbg !14718
  %11 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !14734
  br label %16, !dbg !14735

12:                                               ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14070, metadata !DIExpression()) #23, !dbg !14736
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14075, metadata !DIExpression()) #23, !dbg !14736
  %13 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !14739
  br i1 %13, label %15, label %14, !dbg !14740

14:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 194) #25, !dbg !14741
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.268, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !14741
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 194) #25, !dbg !14741
  unreachable, !dbg !14741

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 %3, metadata !14070, metadata !DIExpression()) #23, !dbg !14736
  call void @llvm.dbg.value(metadata i32 %3, metadata !14084, metadata !DIExpression()) #23, !dbg !14742
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14744, !srcloc !14090
  br label %16

16:                                               ; preds = %15, %10
  ret void, !dbg !14745
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !14746 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14750, metadata !DIExpression()), !dbg !14751
  call void @llvm.dbg.value(metadata i32 %0, metadata !14752, metadata !DIExpression()), !dbg !14757
  %2 = icmp eq i32 %0, 0, !dbg !14759
  br i1 %2, label %3, label %6, !dbg !14760

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14761, !srcloc !14768
  call void @llvm.dbg.value(metadata i32 %4, metadata !14764, metadata !DIExpression()) #23, !dbg !14769
  %5 = icmp eq i32 %4, 0, !dbg !14770
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !14751
  ret i1 %7, !dbg !14771
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #8 !dbg !14772 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14775
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14774, metadata !DIExpression()), !dbg !14776
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14777
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !14778
  ret i1 %3, !dbg !14779
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !14780 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14782, metadata !DIExpression()), !dbg !14784
  %2 = tail call i32 @arch_swap(i32 noundef %0) #25, !dbg !14785
  call void @llvm.dbg.value(metadata i32 %2, metadata !14783, metadata !DIExpression()), !dbg !14784
  ret i32 %2, !dbg !14786
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14787 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14789, metadata !DIExpression()), !dbg !14793
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !14794
  call void @llvm.dbg.value(metadata i32 0, metadata !14790, metadata !DIExpression()), !dbg !14795
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14036, metadata !DIExpression()) #23, !dbg !14796
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14798, !srcloc !14051
  call void @llvm.dbg.value(metadata i32 undef, metadata !14048, metadata !DIExpression()) #23, !dbg !14800
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !14800
  call void @llvm.dbg.value(metadata i32 undef, metadata !14042, metadata !DIExpression()) #23, !dbg !14796
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14801
  br i1 %4, label %6, label %5, !dbg !14802

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 148) #25, !dbg !14803
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.266, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14803
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 148) #25, !dbg !14803
  unreachable, !dbg !14803

6:                                                ; preds = %1
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !14798
  call void @llvm.dbg.value(metadata i32 %7, metadata !14048, metadata !DIExpression()) #23, !dbg !14800
  call void @llvm.dbg.value(metadata i32 %7, metadata !14042, metadata !DIExpression()) #23, !dbg !14796
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14804
  call void @llvm.dbg.value(metadata i32 %7, metadata !14792, metadata !DIExpression()), !dbg !14795
  call void @llvm.dbg.value(metadata i32 undef, metadata !14790, metadata !DIExpression()), !dbg !14795
  %8 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14805
  br i1 %8, label %9, label %13, !dbg !14809

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14228, metadata !DIExpression()) #23, !dbg !14810
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14813
  %11 = load i8, i8* %10, align 1, !dbg !14814
  %12 = and i8 %11, 127, !dbg !14814
  store i8 %12, i8* %10, align 1, !dbg !14814
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14236, metadata !DIExpression()) #23, !dbg !14815
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14817
  br label %13, !dbg !14818

13:                                               ; preds = %9, %6
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #24, !dbg !14819
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14820
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !14821
  %16 = zext i1 %15 to i32, !dbg !14821
  tail call fastcc void @update_cache(i32 noundef %16) #24, !dbg !14822
  call void @llvm.dbg.value(metadata i32 undef, metadata !14070, metadata !DIExpression()) #23, !dbg !14823
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14075, metadata !DIExpression()) #23, !dbg !14823
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14825
  br i1 %17, label %19, label %18, !dbg !14826

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 194) #25, !dbg !14827
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.268, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14827
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 194) #25, !dbg !14827
  unreachable, !dbg !14827

19:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %7, metadata !14070, metadata !DIExpression()) #23, !dbg !14823
  call void @llvm.dbg.value(metadata i32 %7, metadata !14084, metadata !DIExpression()) #23, !dbg !14828
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !14830, !srcloc !14090
  call void @llvm.dbg.value(metadata i32 1, metadata !14790, metadata !DIExpression()), !dbg !14795
  call void @llvm.dbg.value(metadata i32 undef, metadata !14790, metadata !DIExpression()), !dbg !14795
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14831
  %21 = icmp eq %struct.k_thread* %20, %0, !dbg !14833
  br i1 %21, label %22, label %23, !dbg !14834

22:                                               ; preds = %19
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !14835
  br label %23, !dbg !14837

23:                                               ; preds = %22, %19
  ret void, !dbg !14838
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14839 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14841, metadata !DIExpression()), !dbg !14842
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14843
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !14844
  ret i32 %3, !dbg !14845
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !14846 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14848, metadata !DIExpression()), !dbg !14849
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14850
  %3 = load i8, i8* %2, align 1, !dbg !14851
  %4 = or i8 %3, 16, !dbg !14851
  store i8 %4, i8* %2, align 1, !dbg !14851
  ret void, !dbg !14852
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !14853 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14854, !srcloc !14051
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14854
  call void @llvm.dbg.value(metadata i32 %2, metadata !14048, metadata !DIExpression()) #23, !dbg !14856
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !14856
  tail call void @z_reschedule_irqlock(i32 noundef %2) #24, !dbg !14857
  ret void, !dbg !14858
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !14859 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14861, metadata !DIExpression()), !dbg !14862
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #24, !dbg !14863
  br i1 %2, label %3, label %5, !dbg !14865

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !14866
  br label %6, !dbg !14868

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !14084, metadata !DIExpression()) #23, !dbg !14869
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !14872, !srcloc !14090
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !14873
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14874 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14876, metadata !DIExpression()), !dbg !14878
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14036, metadata !DIExpression()) #23, !dbg !14879
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14881, !srcloc !14051
  call void @llvm.dbg.value(metadata i32 undef, metadata !14048, metadata !DIExpression()) #23, !dbg !14883
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !14883
  call void @llvm.dbg.value(metadata i32 undef, metadata !14042, metadata !DIExpression()) #23, !dbg !14879
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14884
  br i1 %3, label %5, label %4, !dbg !14885

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 148) #25, !dbg !14886
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.266, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14886
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 148) #25, !dbg !14886
  unreachable, !dbg !14886

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14881
  call void @llvm.dbg.value(metadata i32 %6, metadata !14048, metadata !DIExpression()) #23, !dbg !14883
  call void @llvm.dbg.value(metadata i32 %6, metadata !14042, metadata !DIExpression()) #23, !dbg !14879
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14887
  call void @llvm.dbg.value(metadata i32 %6, metadata !14877, metadata !DIExpression()), !dbg !14878
  %7 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #24, !dbg !14888
  br i1 %7, label %12, label %8, !dbg !14890

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14070, metadata !DIExpression()) #23, !dbg !14891
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14075, metadata !DIExpression()) #23, !dbg !14891
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14894
  br i1 %9, label %11, label %10, !dbg !14895

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 194) #25, !dbg !14896
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.268, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14896
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 194) #25, !dbg !14896
  unreachable, !dbg !14896

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !14070, metadata !DIExpression()) #23, !dbg !14891
  call void @llvm.dbg.value(metadata i32 %6, metadata !14084, metadata !DIExpression()) #23, !dbg !14897
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14899, !srcloc !14090
  br label %14, !dbg !14900

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !14901
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !14902
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14903
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #24, !dbg !14903
  br label %14, !dbg !14904

14:                                               ; preds = %12, %11
  ret void, !dbg !14904
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14905 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14907, metadata !DIExpression()), !dbg !14908
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14909
  %3 = load i8, i8* %2, align 1, !dbg !14909
  %4 = and i8 %3, 16, !dbg !14910
  %5 = icmp ne i8 %4, 0, !dbg !14911
  ret i1 %5, !dbg !14912
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !14913 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14915, metadata !DIExpression()), !dbg !14916
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14917
  %3 = load i8, i8* %2, align 1, !dbg !14918
  %4 = and i8 %3, -17, !dbg !14918
  store i8 %4, i8* %2, align 1, !dbg !14918
  ret void, !dbg !14919
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14920 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14930, metadata !DIExpression()), !dbg !14934
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14928, metadata !DIExpression()), !dbg !14934
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14929, metadata !DIExpression()), !dbg !14934
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14935
  %5 = icmp eq %struct.k_thread* %4, %0, !dbg !14935
  br i1 %5, label %9, label %6, !dbg !14935

6:                                                ; preds = %3
  %7 = tail call fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* noundef %0) #24, !dbg !14935
  br i1 %7, label %9, label %8, !dbg !14938

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.270, i32 0, i32 0), i32 noundef 773) #25, !dbg !14939
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.270, i32 0, i32 0), i32 noundef 773) #25, !dbg !14939
  unreachable, !dbg !14939

9:                                                ; preds = %3, %6
  call void @llvm.dbg.value(metadata i32 0, metadata !14931, metadata !DIExpression()), !dbg !14941
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14036, metadata !DIExpression()) #23, !dbg !14942
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14944, !srcloc !14051
  call void @llvm.dbg.value(metadata i32 undef, metadata !14048, metadata !DIExpression()) #23, !dbg !14946
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !14946
  call void @llvm.dbg.value(metadata i32 undef, metadata !14042, metadata !DIExpression()) #23, !dbg !14942
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14947
  br i1 %11, label %13, label %12, !dbg !14948

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 148) #25, !dbg !14949
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.266, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14949
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 148) #25, !dbg !14949
  unreachable, !dbg !14949

13:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14048, metadata !DIExpression()) #23, !dbg !14946
  call void @llvm.dbg.value(metadata i32 undef, metadata !14042, metadata !DIExpression()) #23, !dbg !14942
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14950
  call void @llvm.dbg.value(metadata i32 undef, metadata !14933, metadata !DIExpression()), !dbg !14941
  call void @llvm.dbg.value(metadata i32 undef, metadata !14931, metadata !DIExpression()), !dbg !14941
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) #24, !dbg !14951
  call void @llvm.dbg.value(metadata i32 undef, metadata !14070, metadata !DIExpression()) #23, !dbg !14954
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14075, metadata !DIExpression()) #23, !dbg !14954
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14956
  br i1 %14, label %16, label %15, !dbg !14957

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 194) #25, !dbg !14958
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.268, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14958
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 194) #25, !dbg !14958
  unreachable, !dbg !14958

16:                                               ; preds = %13
  %17 = extractvalue { i32, i32 } %10, 0, !dbg !14944
  call void @llvm.dbg.value(metadata i32 %17, metadata !14048, metadata !DIExpression()) #23, !dbg !14946
  call void @llvm.dbg.value(metadata i32 %17, metadata !14042, metadata !DIExpression()) #23, !dbg !14942
  call void @llvm.dbg.value(metadata i32 %17, metadata !14933, metadata !DIExpression()), !dbg !14941
  call void @llvm.dbg.value(metadata i32 undef, metadata !14070, metadata !DIExpression()) #23, !dbg !14954
  call void @llvm.dbg.value(metadata i32 undef, metadata !14084, metadata !DIExpression()) #23, !dbg !14959
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %17) #23, !dbg !14961, !srcloc !14090
  call void @llvm.dbg.value(metadata i32 1, metadata !14931, metadata !DIExpression()), !dbg !14941
  call void @llvm.dbg.value(metadata i32 undef, metadata !14931, metadata !DIExpression()), !dbg !14941
  ret void, !dbg !14962
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14963 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14965, metadata !DIExpression()), !dbg !14966
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14967
  %3 = load i8, i8* %2, align 1, !dbg !14967
  %4 = and i8 %3, 1, !dbg !14968
  %5 = icmp ne i8 %4, 0, !dbg !14969
  ret i1 %5, !dbg !14970
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !14971 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14975, metadata !DIExpression()), !dbg !14976
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14973, metadata !DIExpression()), !dbg !14976
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14974, metadata !DIExpression()), !dbg !14976
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) #24, !dbg !14977
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #24, !dbg !14978
  ret void, !dbg !14979
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) unnamed_addr #1 !dbg !14980 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14984, metadata !DIExpression()), !dbg !14986
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14985, metadata !DIExpression()), !dbg !14986
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #24, !dbg !14987
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #24, !dbg !14988
  %3 = icmp eq %struct._wait_q_t* %1, null, !dbg !14989
  br i1 %3, label %24, label %4, !dbg !14991

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14992
  store %struct._wait_q_t* %1, %struct._wait_q_t** %5, align 8, !dbg !14994
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %1, i32 0, i32 0, !dbg !14995
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !14259, metadata !DIExpression()) #23, !dbg !14996
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14265, metadata !DIExpression()) #23, !dbg !14996
  %7 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !14998
  br i1 %7, label %8, label %9, !dbg !14999

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.270, i32 0, i32 0), i32 noundef 186) #25, !dbg !15000
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.270, i32 0, i32 0), i32 noundef 186) #25, !dbg !15000
  unreachable, !dbg !15000

9:                                                ; preds = %4
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.271(%struct._dnode* noundef nonnull %6) #25, !dbg !15001
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14266, metadata !DIExpression()) #23, !dbg !14996
  %11 = icmp eq %struct._dnode* %10, null, !dbg !15002
  br i1 %11, label %22, label %12, !dbg !15001

12:                                               ; preds = %9, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !14266, metadata !DIExpression()) #23, !dbg !14996
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !15003
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14266, metadata !DIExpression()) #23, !dbg !14996
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %14) #25, !dbg !15004
  %16 = icmp sgt i32 %15, 0, !dbg !15005
  br i1 %16, label %17, label %19, !dbg !15006

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15007
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #25, !dbg !15008
  br label %24, !dbg !15009

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %13) #25, !dbg !15002
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14266, metadata !DIExpression()) #23, !dbg !14996
  %21 = icmp eq %struct._dnode* %20, null, !dbg !15002
  br i1 %21, label %22, label %12, !dbg !15001, !llvm.loop !15010

22:                                               ; preds = %19, %9
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15012
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %23) #25, !dbg !15013
  br label %24, !dbg !15014

24:                                               ; preds = %22, %17, %2
  ret void, !dbg !15015
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15016 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15021, metadata !DIExpression()), !dbg !15022
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15020, metadata !DIExpression()), !dbg !15022
  %4 = icmp eq i64 %3, -1, !dbg !15023
  br i1 %4, label %6, label %5, !dbg !15025

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.286(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !15026
  br label %6, !dbg !15028

6:                                                ; preds = %5, %2
  ret void, !dbg !15029
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.286(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15030 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15033, metadata !DIExpression()), !dbg !15034
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15032, metadata !DIExpression()), !dbg !15034
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15035
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !15036
  ret void, !dbg !15037
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !15038 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15040, metadata !DIExpression()), !dbg !15048
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !15049
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !15049
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15041, metadata !DIExpression()), !dbg !15048
  call void @llvm.dbg.value(metadata i32 0, metadata !15042, metadata !DIExpression()), !dbg !15050
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14036, metadata !DIExpression()) #23, !dbg !15051
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15053, !srcloc !14051
  call void @llvm.dbg.value(metadata i32 undef, metadata !14048, metadata !DIExpression()) #23, !dbg !15055
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !15055
  call void @llvm.dbg.value(metadata i32 undef, metadata !14042, metadata !DIExpression()) #23, !dbg !15051
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15056
  br i1 %5, label %7, label %6, !dbg !15057

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 148) #25, !dbg !15058
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.266, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15058
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 148) #25, !dbg !15058
  unreachable, !dbg !15058

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14048, metadata !DIExpression()) #23, !dbg !15055
  call void @llvm.dbg.value(metadata i32 undef, metadata !14042, metadata !DIExpression()) #23, !dbg !15051
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15059
  call void @llvm.dbg.value(metadata i32 undef, metadata !15044, metadata !DIExpression()), !dbg !15050
  call void @llvm.dbg.value(metadata i32 undef, metadata !15042, metadata !DIExpression()), !dbg !15050
  %8 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !15060
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %8, i32 0, i32 3, !dbg !15061
  %10 = load i8, i8* %9, align 1, !dbg !15061
  %11 = and i8 %10, 40, !dbg !15062
  %12 = icmp eq i8 %11, 0, !dbg !15062
  call void @llvm.dbg.value(metadata i1 %12, metadata !15045, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15063
  br i1 %12, label %13, label %20, !dbg !15064

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !15065
  %15 = bitcast void (%struct._timeout*)** %14 to %struct._wait_q_t**, !dbg !15065
  %16 = load %struct._wait_q_t*, %struct._wait_q_t** %15, align 8, !dbg !15065
  %17 = icmp eq %struct._wait_q_t* %16, null, !dbg !15069
  br i1 %17, label %19, label %18, !dbg !15070

18:                                               ; preds = %13
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #24, !dbg !15071
  br label %19, !dbg !15073

19:                                               ; preds = %18, %13
  tail call fastcc void @z_mark_thread_as_started.282(%struct.k_thread* noundef nonnull %3) #24, !dbg !15074
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #24, !dbg !15075
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #24, !dbg !15076
  br label %20, !dbg !15077

20:                                               ; preds = %19, %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !14070, metadata !DIExpression()) #23, !dbg !15078
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14075, metadata !DIExpression()) #23, !dbg !15078
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15080
  br i1 %21, label %23, label %22, !dbg !15081

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 194) #25, !dbg !15082
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.268, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15082
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 194) #25, !dbg !15082
  unreachable, !dbg !15082

23:                                               ; preds = %20
  %24 = extractvalue { i32, i32 } %4, 0, !dbg !15053
  call void @llvm.dbg.value(metadata i32 %24, metadata !14048, metadata !DIExpression()) #23, !dbg !15055
  call void @llvm.dbg.value(metadata i32 %24, metadata !14042, metadata !DIExpression()) #23, !dbg !15051
  call void @llvm.dbg.value(metadata i32 %24, metadata !15044, metadata !DIExpression()), !dbg !15050
  call void @llvm.dbg.value(metadata i32 undef, metadata !14070, metadata !DIExpression()) #23, !dbg !15078
  call void @llvm.dbg.value(metadata i32 undef, metadata !14084, metadata !DIExpression()) #23, !dbg !15083
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !15085, !srcloc !14090
  call void @llvm.dbg.value(metadata i32 1, metadata !15042, metadata !DIExpression()), !dbg !15050
  call void @llvm.dbg.value(metadata i32 undef, metadata !15042, metadata !DIExpression()), !dbg !15050
  ret void, !dbg !15086
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15087 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15089, metadata !DIExpression()), !dbg !15090
  %2 = tail call fastcc %struct._wait_q_t* @pended_on_thread(%struct.k_thread* noundef %0) #24, !dbg !15091
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !15092
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #24, !dbg !15093
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15094
  store %struct._wait_q_t* null, %struct._wait_q_t** %3, align 8, !dbg !15095
  ret void, !dbg !15096
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct._wait_q_t* @pended_on_thread(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #1 !dbg !15097 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15101, metadata !DIExpression()), !dbg !15102
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15103
  %3 = load %struct._wait_q_t*, %struct._wait_q_t** %2, align 8, !dbg !15103
  %4 = icmp eq %struct._wait_q_t* %3, null, !dbg !15103
  br i1 %4, label %5, label %6, !dbg !15106

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.270, i32 0, i32 0), i32 noundef 726) #25, !dbg !15107
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.270, i32 0, i32 0), i32 noundef 726) #25, !dbg !15107
  unreachable, !dbg !15107

6:                                                ; preds = %1
  ret %struct._wait_q_t* %3, !dbg !15109
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15110 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15112, metadata !DIExpression()), !dbg !15113
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15114
  %3 = load i8, i8* %2, align 1, !dbg !15115
  %4 = and i8 %3, -3, !dbg !15115
  store i8 %4, i8* %2, align 1, !dbg !15115
  ret void, !dbg !15116
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15117 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15119, metadata !DIExpression()), !dbg !15120
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15121
  br i1 %2, label %3, label %7, !dbg !15123

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14228, metadata !DIExpression()) #23, !dbg !15124
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15127
  %5 = load i8, i8* %4, align 1, !dbg !15128
  %6 = and i8 %5, 127, !dbg !15128
  store i8 %6, i8* %4, align 1, !dbg !15128
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14236, metadata !DIExpression()) #23, !dbg !15129
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15131
  br label %7, !dbg !15132

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15133
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !15134
  %10 = zext i1 %9 to i32, !dbg !15134
  tail call fastcc void @update_cache(i32 noundef %10) #24, !dbg !15135
  ret void, !dbg !15136
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15137 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15139, metadata !DIExpression()), !dbg !15140
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15141
  %3 = load i8, i8* %2, align 1, !dbg !15142
  %4 = or i8 %3, 2, !dbg !15142
  store i8 %4, i8* %2, align 1, !dbg !15142
  ret void, !dbg !15143
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* noundef %0) local_unnamed_addr #22 !dbg !15144 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15146, metadata !DIExpression()), !dbg !15150
  call void @llvm.dbg.value(metadata i32 0, metadata !15147, metadata !DIExpression()), !dbg !15151
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14036, metadata !DIExpression()) #23, !dbg !15152
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15154, !srcloc !14051
  call void @llvm.dbg.value(metadata i32 undef, metadata !14048, metadata !DIExpression()) #23, !dbg !15156
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !15156
  call void @llvm.dbg.value(metadata i32 undef, metadata !14042, metadata !DIExpression()) #23, !dbg !15152
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15157
  br i1 %3, label %5, label %4, !dbg !15158

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 148) #25, !dbg !15159
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.266, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15159
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 148) #25, !dbg !15159
  unreachable, !dbg !15159

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14048, metadata !DIExpression()) #23, !dbg !15156
  call void @llvm.dbg.value(metadata i32 undef, metadata !14042, metadata !DIExpression()) #23, !dbg !15152
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15160
  call void @llvm.dbg.value(metadata i32 undef, metadata !15149, metadata !DIExpression()), !dbg !15151
  call void @llvm.dbg.value(metadata i32 undef, metadata !15147, metadata !DIExpression()), !dbg !15151
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !15161
  call void @llvm.dbg.value(metadata i32 undef, metadata !14070, metadata !DIExpression()) #23, !dbg !15164
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14075, metadata !DIExpression()) #23, !dbg !15164
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15166
  br i1 %6, label %8, label %7, !dbg !15167

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 194) #25, !dbg !15168
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.268, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15168
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 194) #25, !dbg !15168
  unreachable, !dbg !15168

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15154
  call void @llvm.dbg.value(metadata i32 %9, metadata !14048, metadata !DIExpression()) #23, !dbg !15156
  call void @llvm.dbg.value(metadata i32 %9, metadata !14042, metadata !DIExpression()) #23, !dbg !15152
  call void @llvm.dbg.value(metadata i32 %9, metadata !15149, metadata !DIExpression()), !dbg !15151
  call void @llvm.dbg.value(metadata i32 undef, metadata !14070, metadata !DIExpression()) #23, !dbg !15164
  call void @llvm.dbg.value(metadata i32 undef, metadata !14084, metadata !DIExpression()) #23, !dbg !15169
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15171, !srcloc !14090
  call void @llvm.dbg.value(metadata i32 1, metadata !15147, metadata !DIExpression()), !dbg !15151
  call void @llvm.dbg.value(metadata i32 undef, metadata !15147, metadata !DIExpression()), !dbg !15151
  ret void, !dbg !15172
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15173 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15179, metadata !DIExpression()), !dbg !15184
  call void @llvm.dbg.value(metadata i32 %0, metadata !15177, metadata !DIExpression()), !dbg !15184
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15178, metadata !DIExpression()), !dbg !15184
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15185
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %struct._wait_q_t* noundef %1, [1 x i64] %2) #24, !dbg !15186
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15187
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15188
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !15189
  call void @llvm.dbg.value(metadata i32 %6, metadata !15180, metadata !DIExpression()), !dbg !15184
  call void @llvm.dbg.value(metadata i32 0, metadata !15181, metadata !DIExpression()), !dbg !15190
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14036, metadata !DIExpression()) #23, !dbg !15191
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15193, !srcloc !14051
  call void @llvm.dbg.value(metadata i32 undef, metadata !14048, metadata !DIExpression()) #23, !dbg !15195
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !15195
  call void @llvm.dbg.value(metadata i32 undef, metadata !14042, metadata !DIExpression()) #23, !dbg !15191
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15196
  br i1 %8, label %10, label %9, !dbg !15197

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 148) #25, !dbg !15198
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.266, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15198
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 148) #25, !dbg !15198
  unreachable, !dbg !15198

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !14048, metadata !DIExpression()) #23, !dbg !15195
  call void @llvm.dbg.value(metadata i32 undef, metadata !14042, metadata !DIExpression()) #23, !dbg !15191
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15199
  call void @llvm.dbg.value(metadata i32 undef, metadata !15183, metadata !DIExpression()), !dbg !15190
  call void @llvm.dbg.value(metadata i32 undef, metadata !15181, metadata !DIExpression()), !dbg !15190
  %11 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15200
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15204
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !15205
  br i1 %13, label %14, label %15, !dbg !15206

14:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15207
  br label %15, !dbg !15209

15:                                               ; preds = %10, %14
  call void @llvm.dbg.value(metadata i32 undef, metadata !14070, metadata !DIExpression()) #23, !dbg !15210
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14075, metadata !DIExpression()) #23, !dbg !15210
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15212
  br i1 %16, label %18, label %17, !dbg !15213

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 194) #25, !dbg !15214
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.268, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15214
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 194) #25, !dbg !15214
  unreachable, !dbg !15214

18:                                               ; preds = %15
  %19 = extractvalue { i32, i32 } %7, 0, !dbg !15193
  call void @llvm.dbg.value(metadata i32 %19, metadata !14048, metadata !DIExpression()) #23, !dbg !15195
  call void @llvm.dbg.value(metadata i32 %19, metadata !14042, metadata !DIExpression()) #23, !dbg !15191
  call void @llvm.dbg.value(metadata i32 %19, metadata !15183, metadata !DIExpression()), !dbg !15190
  call void @llvm.dbg.value(metadata i32 undef, metadata !14070, metadata !DIExpression()) #23, !dbg !15210
  call void @llvm.dbg.value(metadata i32 undef, metadata !14084, metadata !DIExpression()) #23, !dbg !15215
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #23, !dbg !15217, !srcloc !14090
  call void @llvm.dbg.value(metadata i32 1, metadata !15181, metadata !DIExpression()), !dbg !15190
  call void @llvm.dbg.value(metadata i32 undef, metadata !15181, metadata !DIExpression()), !dbg !15190
  ret i32 %6, !dbg !15218
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !15219 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15224, metadata !DIExpression()), !dbg !15227
  call void @llvm.dbg.value(metadata i64 undef, metadata !15226, metadata !DIExpression()), !dbg !15227
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15223, metadata !DIExpression()), !dbg !15227
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !15225, metadata !DIExpression()), !dbg !15227
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15228
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15229
  %6 = icmp eq %struct.k_spinlock* %0, @sched_spinlock, !dbg !15230
  br i1 %6, label %7, label %8, !dbg !15233

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.270, i32 0, i32 0), i32 noundef 846) #25, !dbg !15234
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.270, i32 0, i32 0), i32 noundef 846) #25, !dbg !15234
  unreachable, !dbg !15234

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14036, metadata !DIExpression()) #23, !dbg !15236
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15238, !srcloc !14051
  call void @llvm.dbg.value(metadata i32 undef, metadata !14048, metadata !DIExpression()) #23, !dbg !15240
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !15240
  call void @llvm.dbg.value(metadata i32 undef, metadata !14042, metadata !DIExpression()) #23, !dbg !15236
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15241
  br i1 %10, label %12, label %11, !dbg !15242

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 148) #25, !dbg !15243
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.266, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15243
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 148) #25, !dbg !15243
  unreachable, !dbg !15243

12:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !14048, metadata !DIExpression()) #23, !dbg !15240
  call void @llvm.dbg.value(metadata i32 undef, metadata !14042, metadata !DIExpression()) #23, !dbg !15236
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15244
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15245
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %13, %struct._wait_q_t* noundef %2, [1 x i64] %3) #24, !dbg !15246
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14721, metadata !DIExpression()) #23, !dbg !15247
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !15249
  br i1 %14, label %16, label %15, !dbg !15250

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 225) #25, !dbg !15251
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.268, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !15251
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 225) #25, !dbg !15251
  unreachable, !dbg !15251

16:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !14712, metadata !DIExpression()) #23, !dbg !15252
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14717, metadata !DIExpression()) #23, !dbg !15252
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14721, metadata !DIExpression()) #23, !dbg !15254
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15256
  br i1 %17, label %19, label %18, !dbg !15257

18:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 225) #25, !dbg !15258
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.268, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15258
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 225) #25, !dbg !15258
  unreachable, !dbg !15258

19:                                               ; preds = %16
  %20 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %20, metadata !14712, metadata !DIExpression()) #23, !dbg !15252
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #25, !dbg !15259
  ret i32 %21, !dbg !15260
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15261 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15265, metadata !DIExpression()), !dbg !15270
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15266, metadata !DIExpression()), !dbg !15270
  call void @llvm.dbg.value(metadata i32 0, metadata !15267, metadata !DIExpression()), !dbg !15271
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14036, metadata !DIExpression()) #23, !dbg !15272
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15274, !srcloc !14051
  call void @llvm.dbg.value(metadata i32 undef, metadata !14048, metadata !DIExpression()) #23, !dbg !15276
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !15276
  call void @llvm.dbg.value(metadata i32 undef, metadata !14042, metadata !DIExpression()) #23, !dbg !15272
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15277
  br i1 %3, label %5, label %4, !dbg !15278

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 148) #25, !dbg !15279
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.266, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15279
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 148) #25, !dbg !15279
  unreachable, !dbg !15279

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14048, metadata !DIExpression()) #23, !dbg !15276
  call void @llvm.dbg.value(metadata i32 undef, metadata !14042, metadata !DIExpression()) #23, !dbg !15272
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15280
  call void @llvm.dbg.value(metadata i32 undef, metadata !15269, metadata !DIExpression()), !dbg !15271
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15266, metadata !DIExpression()), !dbg !15270
  call void @llvm.dbg.value(metadata i32 undef, metadata !15267, metadata !DIExpression()), !dbg !15271
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #24, !dbg !15281
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15266, metadata !DIExpression()), !dbg !15270
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15284
  br i1 %8, label %10, label %9, !dbg !15286

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15287
  br label %10, !dbg !15289

10:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14070, metadata !DIExpression()) #23, !dbg !15290
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14075, metadata !DIExpression()) #23, !dbg !15290
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15292
  br i1 %11, label %13, label %12, !dbg !15293

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 194) #25, !dbg !15294
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.268, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15294
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 194) #25, !dbg !15294
  unreachable, !dbg !15294

13:                                               ; preds = %10
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !15274
  call void @llvm.dbg.value(metadata i32 %14, metadata !14048, metadata !DIExpression()) #23, !dbg !15276
  call void @llvm.dbg.value(metadata i32 %14, metadata !14042, metadata !DIExpression()) #23, !dbg !15272
  call void @llvm.dbg.value(metadata i32 %14, metadata !15269, metadata !DIExpression()), !dbg !15271
  call void @llvm.dbg.value(metadata i32 undef, metadata !14070, metadata !DIExpression()) #23, !dbg !15290
  call void @llvm.dbg.value(metadata i32 undef, metadata !14084, metadata !DIExpression()) #23, !dbg !15295
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !15297, !srcloc !14090
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15266, metadata !DIExpression()), !dbg !15270
  call void @llvm.dbg.value(metadata i32 undef, metadata !15267, metadata !DIExpression()), !dbg !15271
  ret %struct.k_thread* %7, !dbg !15298
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15299 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15301, metadata !DIExpression()), !dbg !15306
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15302, metadata !DIExpression()), !dbg !15306
  call void @llvm.dbg.value(metadata i32 0, metadata !15303, metadata !DIExpression()), !dbg !15307
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14036, metadata !DIExpression()) #23, !dbg !15308
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15310, !srcloc !14051
  call void @llvm.dbg.value(metadata i32 undef, metadata !14048, metadata !DIExpression()) #23, !dbg !15312
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !15312
  call void @llvm.dbg.value(metadata i32 undef, metadata !14042, metadata !DIExpression()) #23, !dbg !15308
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15313
  br i1 %3, label %5, label %4, !dbg !15314

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 148) #25, !dbg !15315
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.266, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15315
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 148) #25, !dbg !15315
  unreachable, !dbg !15315

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14048, metadata !DIExpression()) #23, !dbg !15312
  call void @llvm.dbg.value(metadata i32 undef, metadata !14042, metadata !DIExpression()) #23, !dbg !15308
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15316
  call void @llvm.dbg.value(metadata i32 undef, metadata !15305, metadata !DIExpression()), !dbg !15307
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15302, metadata !DIExpression()), !dbg !15306
  call void @llvm.dbg.value(metadata i32 undef, metadata !15303, metadata !DIExpression()), !dbg !15307
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #24, !dbg !15317
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15302, metadata !DIExpression()), !dbg !15306
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15320
  br i1 %8, label %11, label %9, !dbg !15322

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15323
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15325
  br label %11, !dbg !15326

11:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14070, metadata !DIExpression()) #23, !dbg !15327
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14075, metadata !DIExpression()) #23, !dbg !15327
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15329
  br i1 %12, label %14, label %13, !dbg !15330

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 194) #25, !dbg !15331
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.268, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15331
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 194) #25, !dbg !15331
  unreachable, !dbg !15331

14:                                               ; preds = %11
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !15310
  call void @llvm.dbg.value(metadata i32 %15, metadata !14048, metadata !DIExpression()) #23, !dbg !15312
  call void @llvm.dbg.value(metadata i32 %15, metadata !14042, metadata !DIExpression()) #23, !dbg !15308
  call void @llvm.dbg.value(metadata i32 %15, metadata !15305, metadata !DIExpression()), !dbg !15307
  call void @llvm.dbg.value(metadata i32 undef, metadata !14070, metadata !DIExpression()) #23, !dbg !15327
  call void @llvm.dbg.value(metadata i32 undef, metadata !14084, metadata !DIExpression()) #23, !dbg !15332
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !15334, !srcloc !14090
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15302, metadata !DIExpression()), !dbg !15306
  call void @llvm.dbg.value(metadata i32 undef, metadata !15303, metadata !DIExpression()), !dbg !15307
  ret %struct.k_thread* %7, !dbg !15335
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15336 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15338, metadata !DIExpression()), !dbg !15339
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15146, metadata !DIExpression()) #23, !dbg !15340
  call void @llvm.dbg.value(metadata i32 0, metadata !15147, metadata !DIExpression()) #23, !dbg !15342
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14036, metadata !DIExpression()) #23, !dbg !15343
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15345, !srcloc !14051
  call void @llvm.dbg.value(metadata i32 undef, metadata !14048, metadata !DIExpression()) #23, !dbg !15347
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !15347
  call void @llvm.dbg.value(metadata i32 undef, metadata !14042, metadata !DIExpression()) #23, !dbg !15343
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15348
  br i1 %3, label %5, label %4, !dbg !15349

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 148) #25, !dbg !15350
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.266, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15350
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 148) #25, !dbg !15350
  unreachable, !dbg !15350

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14048, metadata !DIExpression()) #23, !dbg !15347
  call void @llvm.dbg.value(metadata i32 undef, metadata !14042, metadata !DIExpression()) #23, !dbg !15343
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15351
  call void @llvm.dbg.value(metadata i32 undef, metadata !15149, metadata !DIExpression()) #23, !dbg !15342
  call void @llvm.dbg.value(metadata i32 undef, metadata !15147, metadata !DIExpression()) #23, !dbg !15342
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !15352
  call void @llvm.dbg.value(metadata i32 undef, metadata !14070, metadata !DIExpression()) #23, !dbg !15353
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14075, metadata !DIExpression()) #23, !dbg !15353
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15355
  br i1 %6, label %8, label %7, !dbg !15356

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 194) #25, !dbg !15357
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.268, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15357
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 194) #25, !dbg !15357
  unreachable, !dbg !15357

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15345
  call void @llvm.dbg.value(metadata i32 %9, metadata !14048, metadata !DIExpression()) #23, !dbg !15347
  call void @llvm.dbg.value(metadata i32 %9, metadata !14042, metadata !DIExpression()) #23, !dbg !15343
  call void @llvm.dbg.value(metadata i32 %9, metadata !15149, metadata !DIExpression()) #23, !dbg !15342
  call void @llvm.dbg.value(metadata i32 undef, metadata !14070, metadata !DIExpression()) #23, !dbg !15353
  call void @llvm.dbg.value(metadata i32 undef, metadata !14084, metadata !DIExpression()) #23, !dbg !15358
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15360, !srcloc !14090
  call void @llvm.dbg.value(metadata i32 1, metadata !15147, metadata !DIExpression()) #23, !dbg !15342
  call void @llvm.dbg.value(metadata i32 undef, metadata !15147, metadata !DIExpression()) #23, !dbg !15342
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !15361
  ret void, !dbg !15362
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15363 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15365, metadata !DIExpression()), !dbg !15371
  call void @llvm.dbg.value(metadata i32 %1, metadata !15366, metadata !DIExpression()), !dbg !15371
  call void @llvm.dbg.value(metadata i8 0, metadata !15367, metadata !DIExpression()), !dbg !15371
  call void @llvm.dbg.value(metadata i32 0, metadata !15368, metadata !DIExpression()), !dbg !15372
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14036, metadata !DIExpression()) #23, !dbg !15373
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15375, !srcloc !14051
  call void @llvm.dbg.value(metadata i32 undef, metadata !14048, metadata !DIExpression()) #23, !dbg !15377
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !15377
  call void @llvm.dbg.value(metadata i32 undef, metadata !14042, metadata !DIExpression()) #23, !dbg !15373
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15378
  br i1 %4, label %6, label %5, !dbg !15379

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 148) #25, !dbg !15380
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.266, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15380
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 148) #25, !dbg !15380
  unreachable, !dbg !15380

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14048, metadata !DIExpression()) #23, !dbg !15377
  call void @llvm.dbg.value(metadata i32 undef, metadata !14042, metadata !DIExpression()) #23, !dbg !15373
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15381
  call void @llvm.dbg.value(metadata i32 undef, metadata !15370, metadata !DIExpression()), !dbg !15372
  call void @llvm.dbg.value(metadata i8 poison, metadata !15367, metadata !DIExpression()), !dbg !15371
  call void @llvm.dbg.value(metadata i32 undef, metadata !15368, metadata !DIExpression()), !dbg !15372
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !15382
  call void @llvm.dbg.value(metadata i1 %9, metadata !15367, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15371
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %11 = bitcast %union.anon.2* %10 to i8*
  %12 = trunc i32 %1 to i8
  br i1 %9, label %13, label %34, !dbg !15385

13:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14228, metadata !DIExpression()) #23, !dbg !15386
  %14 = load i8, i8* %7, align 1, !dbg !15392
  %15 = and i8 %14, 127, !dbg !15392
  store i8 %15, i8* %7, align 1, !dbg !15392
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14236, metadata !DIExpression()) #23, !dbg !15393
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15395
  store i8 %12, i8* %11, align 2, !dbg !15396
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14245, metadata !DIExpression()) #23, !dbg !15397
  %16 = load i8, i8* %7, align 1, !dbg !15399
  %17 = or i8 %16, -128, !dbg !15399
  store i8 %17, i8* %7, align 1, !dbg !15399
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14252, metadata !DIExpression()) #23, !dbg !15400
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14259, metadata !DIExpression()) #23, !dbg !15402
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14265, metadata !DIExpression()) #23, !dbg !15402
  %18 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !15404
  br i1 %18, label %19, label %20, !dbg !15405

19:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.270, i32 0, i32 0), i32 noundef 186) #25, !dbg !15406
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.270, i32 0, i32 0), i32 noundef 186) #25, !dbg !15406
  unreachable, !dbg !15406

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.271(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15407
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !14266, metadata !DIExpression()) #23, !dbg !15402
  %22 = icmp eq %struct._dnode* %21, null, !dbg !15408
  br i1 %22, label %32, label %23, !dbg !15407

23:                                               ; preds = %20, %29
  %24 = phi %struct._dnode* [ %30, %29 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14266, metadata !DIExpression()) #23, !dbg !15402
  %25 = bitcast %struct._dnode* %24 to %struct.k_thread*, !dbg !15409
  call void @llvm.dbg.value(metadata %struct.k_thread* %25, metadata !14266, metadata !DIExpression()) #23, !dbg !15402
  %26 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %25) #25, !dbg !15410
  %27 = icmp sgt i32 %26, 0, !dbg !15411
  br i1 %27, label %28, label %29, !dbg !15412

28:                                               ; preds = %23
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %24, %struct._dnode* noundef %8) #25, !dbg !15413
  br label %33, !dbg !15414

29:                                               ; preds = %23
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %24) #25, !dbg !15408
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !14266, metadata !DIExpression()) #23, !dbg !15402
  %31 = icmp eq %struct._dnode* %30, null, !dbg !15408
  br i1 %31, label %32, label %23, !dbg !15407, !llvm.loop !15415

32:                                               ; preds = %29, %20
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %8) #25, !dbg !15417
  br label %33, !dbg !15418

33:                                               ; preds = %28, %32
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !15419
  br label %35, !dbg !15420

34:                                               ; preds = %6
  store i8 %12, i8* %11, align 2, !dbg !15421
  br label %35

35:                                               ; preds = %33, %34
  call void @llvm.dbg.value(metadata i32 undef, metadata !14070, metadata !DIExpression()) #23, !dbg !15423
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14075, metadata !DIExpression()) #23, !dbg !15423
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15425
  br i1 %36, label %38, label %37, !dbg !15426

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 194) #25, !dbg !15427
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.268, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15427
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 194) #25, !dbg !15427
  unreachable, !dbg !15427

38:                                               ; preds = %35
  %39 = extractvalue { i32, i32 } %3, 0, !dbg !15375
  call void @llvm.dbg.value(metadata i32 %39, metadata !14048, metadata !DIExpression()) #23, !dbg !15377
  call void @llvm.dbg.value(metadata i32 %39, metadata !14042, metadata !DIExpression()) #23, !dbg !15373
  call void @llvm.dbg.value(metadata i32 %39, metadata !15370, metadata !DIExpression()), !dbg !15372
  call void @llvm.dbg.value(metadata i32 undef, metadata !14070, metadata !DIExpression()) #23, !dbg !15423
  call void @llvm.dbg.value(metadata i32 undef, metadata !14084, metadata !DIExpression()) #23, !dbg !15428
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %39) #23, !dbg !15430, !srcloc !14090
  call void @llvm.dbg.value(metadata i8 poison, metadata !15367, metadata !DIExpression()), !dbg !15371
  call void @llvm.dbg.value(metadata i32 undef, metadata !15368, metadata !DIExpression()), !dbg !15372
  ret i1 %9, !dbg !15431
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15432 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15436, metadata !DIExpression()), !dbg !15439
  call void @llvm.dbg.value(metadata i32 %1, metadata !15437, metadata !DIExpression()), !dbg !15439
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !15440
  call void @llvm.dbg.value(metadata i1 %3, metadata !15438, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15439
  br i1 %3, label %4, label %12, !dbg !15441

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15443
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15444
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15444
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15444
  %9 = load i8, i8* %8, align 1, !dbg !15444
  %10 = icmp eq i8 %9, 0, !dbg !15445
  br i1 %10, label %11, label %12, !dbg !15446

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15447
  br label %12, !dbg !15449

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !15450
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !15451 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15453, metadata !DIExpression()), !dbg !15456
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14036, metadata !DIExpression()) #23, !dbg !15457
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15459, !srcloc !14051
  call void @llvm.dbg.value(metadata i32 undef, metadata !14048, metadata !DIExpression()) #23, !dbg !15461
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !15461
  call void @llvm.dbg.value(metadata i32 undef, metadata !14042, metadata !DIExpression()) #23, !dbg !15457
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15462
  br i1 %2, label %4, label %3, !dbg !15463

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 148) #25, !dbg !15464
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.266, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15464
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 148) #25, !dbg !15464
  unreachable, !dbg !15464

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14048, metadata !DIExpression()) #23, !dbg !15461
  call void @llvm.dbg.value(metadata i32 undef, metadata !14042, metadata !DIExpression()) #23, !dbg !15457
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15465
  call void @llvm.dbg.value(metadata i32 undef, metadata !15455, metadata !DIExpression()), !dbg !15456
  call void @llvm.dbg.value(metadata i32 undef, metadata !15453, metadata !DIExpression()), !dbg !15456
  tail call fastcc void @z_sched_lock() #24, !dbg !15466
  call void @llvm.dbg.value(metadata i32 undef, metadata !14070, metadata !DIExpression()) #23, !dbg !15469
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14075, metadata !DIExpression()) #23, !dbg !15469
  %5 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15471
  br i1 %5, label %7, label %6, !dbg !15472

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 194) #25, !dbg !15473
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.268, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15473
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 194) #25, !dbg !15473
  unreachable, !dbg !15473

7:                                                ; preds = %4
  %8 = extractvalue { i32, i32 } %1, 0, !dbg !15459
  call void @llvm.dbg.value(metadata i32 %8, metadata !14048, metadata !DIExpression()) #23, !dbg !15461
  call void @llvm.dbg.value(metadata i32 %8, metadata !14042, metadata !DIExpression()) #23, !dbg !15457
  call void @llvm.dbg.value(metadata i32 %8, metadata !15455, metadata !DIExpression()), !dbg !15456
  call void @llvm.dbg.value(metadata i32 undef, metadata !14070, metadata !DIExpression()) #23, !dbg !15469
  call void @llvm.dbg.value(metadata i32 undef, metadata !14084, metadata !DIExpression()) #23, !dbg !15474
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !15476, !srcloc !14090
  call void @llvm.dbg.value(metadata i32 1, metadata !15453, metadata !DIExpression()), !dbg !15456
  call void @llvm.dbg.value(metadata i32 undef, metadata !15453, metadata !DIExpression()), !dbg !15456
  ret void, !dbg !15477
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !15478 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15479, !srcloc !14768
  call void @llvm.dbg.value(metadata i32 %1, metadata !14764, metadata !DIExpression()) #23, !dbg !15484
  %2 = icmp eq i32 %1, 0, !dbg !15485
  br i1 %2, label %4, label %3, !dbg !15486

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.300, i32 0, i32 0), i32 noundef 253) #25, !dbg !15487
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.273, i32 0, i32 0)) #25, !dbg !15487
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.300, i32 0, i32 0), i32 noundef 253) #25, !dbg !15487
  unreachable, !dbg !15487

4:                                                ; preds = %0
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15489
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15489
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15489
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15489
  %9 = load i8, i8* %8, align 1, !dbg !15489
  %10 = icmp eq i8 %9, 1, !dbg !15489
  br i1 %10, label %11, label %12, !dbg !15492

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.300, i32 0, i32 0), i32 noundef 254) #25, !dbg !15493
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.273, i32 0, i32 0)) #25, !dbg !15493
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.300, i32 0, i32 0), i32 noundef 254) #25, !dbg !15493
  unreachable, !dbg !15493

12:                                               ; preds = %4
  %13 = add i8 %9, -1, !dbg !15495
  store i8 %13, i8* %8, align 1, !dbg !15495
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15496, !srcloc !15498
  ret void, !dbg !15499
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !15500 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15502, metadata !DIExpression()), !dbg !15505
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14036, metadata !DIExpression()) #23, !dbg !15506
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15508, !srcloc !14051
  call void @llvm.dbg.value(metadata i32 undef, metadata !14048, metadata !DIExpression()) #23, !dbg !15510
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !15510
  call void @llvm.dbg.value(metadata i32 undef, metadata !14042, metadata !DIExpression()) #23, !dbg !15506
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15511
  br i1 %2, label %4, label %3, !dbg !15512

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 148) #25, !dbg !15513
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.266, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15513
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 148) #25, !dbg !15513
  unreachable, !dbg !15513

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14048, metadata !DIExpression()) #23, !dbg !15510
  call void @llvm.dbg.value(metadata i32 undef, metadata !14042, metadata !DIExpression()) #23, !dbg !15506
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15514
  call void @llvm.dbg.value(metadata i32 undef, metadata !15504, metadata !DIExpression()), !dbg !15505
  call void @llvm.dbg.value(metadata i32 undef, metadata !15502, metadata !DIExpression()), !dbg !15505
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15515
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15515
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15515
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15515
  %9 = load i8, i8* %8, align 1, !dbg !15515
  %10 = icmp eq i8 %9, 0, !dbg !15515
  br i1 %10, label %11, label %12, !dbg !15520

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.270, i32 0, i32 0), i32 noundef 999) #25, !dbg !15521
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.273, i32 0, i32 0)) #25, !dbg !15521
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.270, i32 0, i32 0), i32 noundef 999) #25, !dbg !15521
  unreachable, !dbg !15521

12:                                               ; preds = %4
  %13 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15523, !srcloc !14768
  call void @llvm.dbg.value(metadata i32 %13, metadata !14764, metadata !DIExpression()) #23, !dbg !15528
  %14 = icmp eq i32 %13, 0, !dbg !15529
  br i1 %14, label %16, label %15, !dbg !15530

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.270, i32 0, i32 0), i32 noundef 1000) #25, !dbg !15531
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.273, i32 0, i32 0)) #25, !dbg !15531
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.270, i32 0, i32 0), i32 noundef 1000) #25, !dbg !15531
  unreachable, !dbg !15531

16:                                               ; preds = %12
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15533
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %17, i32 0, i32 0, i32 4, !dbg !15534
  %19 = bitcast %union.anon.2* %18 to %struct.device_state*, !dbg !15534
  %20 = getelementptr inbounds %struct.device_state, %struct.device_state* %19, i32 0, i32 1, !dbg !15534
  %21 = load i8, i8* %20, align 1, !dbg !15535
  %22 = add i8 %21, 1, !dbg !15535
  store i8 %22, i8* %20, align 1, !dbg !15535
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !15536
  call void @llvm.dbg.value(metadata i32 undef, metadata !14070, metadata !DIExpression()) #23, !dbg !15537
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14075, metadata !DIExpression()) #23, !dbg !15537
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15539
  br i1 %23, label %25, label %24, !dbg !15540

24:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 194) #25, !dbg !15541
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.268, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15541
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 194) #25, !dbg !15541
  unreachable, !dbg !15541

25:                                               ; preds = %16
  %26 = extractvalue { i32, i32 } %1, 0, !dbg !15508
  call void @llvm.dbg.value(metadata i32 %26, metadata !14048, metadata !DIExpression()) #23, !dbg !15510
  call void @llvm.dbg.value(metadata i32 %26, metadata !14042, metadata !DIExpression()) #23, !dbg !15506
  call void @llvm.dbg.value(metadata i32 %26, metadata !15504, metadata !DIExpression()), !dbg !15505
  call void @llvm.dbg.value(metadata i32 undef, metadata !14070, metadata !DIExpression()) #23, !dbg !15537
  call void @llvm.dbg.value(metadata i32 undef, metadata !14084, metadata !DIExpression()) #23, !dbg !15542
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #23, !dbg !15544, !srcloc !14090
  call void @llvm.dbg.value(metadata i32 1, metadata !15502, metadata !DIExpression()), !dbg !15505
  call void @llvm.dbg.value(metadata i32 undef, metadata !15502, metadata !DIExpression()), !dbg !15505
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15545
  ret void, !dbg !15546
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #8 !dbg !15547 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15548
  ret %struct.k_thread* %1, !dbg !15549
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !15550 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !15554, metadata !DIExpression()), !dbg !15559
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !15555, metadata !DIExpression()), !dbg !15559
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !15560
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15556, metadata !DIExpression()), !dbg !15559
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !15561
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15557, metadata !DIExpression()), !dbg !15559
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #24, !dbg !15562
  call void @llvm.dbg.value(metadata i32 %5, metadata !15558, metadata !DIExpression()), !dbg !15559
  %6 = icmp sgt i32 %5, 0, !dbg !15563
  br i1 %6, label %17, label %7, !dbg !15565

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !15566
  br i1 %8, label %17, label %9, !dbg !15568

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !15569
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !15569
  %12 = load i32, i32* %11, align 8, !dbg !15569
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !15571
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !15571
  %15 = load i32, i32* %14, align 8, !dbg !15571
  %16 = icmp ult i32 %12, %15, !dbg !15572
  br label %17, !dbg !15573

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !15574
  ret i1 %18, !dbg !15575
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15576 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15593, metadata !DIExpression()), !dbg !15608
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15594, metadata !DIExpression()), !dbg !15608
  %4 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !15609
  br i1 %4, label %5, label %6, !dbg !15612

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.270, i32 0, i32 0), i32 noundef 1179) #25, !dbg !15613
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.270, i32 0, i32 0), i32 noundef 1179) #25, !dbg !15613
  unreachable, !dbg !15613

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15615
  %8 = load i32, i32* %7, align 4, !dbg !15616
  %9 = add nsw i32 %8, 1, !dbg !15616
  store i32 %9, i32* %7, align 4, !dbg !15616
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !15617
  store i32 %8, i32* %10, align 8, !dbg !15618
  %11 = load i32, i32* %7, align 4, !dbg !15619
  %12 = icmp eq i32 %11, 0, !dbg !15620
  br i1 %12, label %13, label %35, !dbg !15621

13:                                               ; preds = %6
  %14 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !15622
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #23, !dbg !15622
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !15596, metadata !DIExpression()), !dbg !15622
  %15 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15622
  %16 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !15622
  %17 = load i32, i32* %16, align 4, !dbg !15622
  %18 = shl i32 %17, 2, !dbg !15622
  %19 = alloca i8, i32 %18, align 8, !dbg !15622
  %20 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !15622
  store i8* %19, i8** %20, align 4, !dbg !15622
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !15622
  %22 = alloca i8, i32 %17, align 8, !dbg !15622
  store i8* %22, i8** %21, align 4, !dbg !15622
  %23 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !15622
  store i32 -1, i32* %23, align 4, !dbg !15622
  %24 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !15623
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !15605, metadata !DIExpression()), !dbg !15624
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !15595, metadata !DIExpression()), !dbg !15608
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !15625
  br i1 %25, label %26, label %27, !dbg !15622

26:                                               ; preds = %27, %13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #23, !dbg !15625
  br label %35, !dbg !15626

27:                                               ; preds = %13, %27
  %28 = phi %struct.rbnode* [ %33, %27 ], [ %24, %13 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !15595, metadata !DIExpression()), !dbg !15608
  %29 = load i32, i32* %7, align 4, !dbg !15627
  %30 = add nsw i32 %29, 1, !dbg !15627
  store i32 %30, i32* %7, align 4, !dbg !15627
  %31 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %28, i32 2, !dbg !15629
  %32 = bitcast %struct.rbnode* %31 to i32*, !dbg !15629
  store i32 %29, i32* %32, align 8, !dbg !15630
  %33 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !15623
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !15605, metadata !DIExpression()), !dbg !15624
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !15595, metadata !DIExpression()), !dbg !15608
  %34 = icmp eq %struct.rbnode* %33, null, !dbg !15625
  br i1 %34, label %26, label %27, !dbg !15622, !llvm.loop !15631

35:                                               ; preds = %26, %6
  %36 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15633
  %37 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15634
  call void @rb_insert(%struct.rbtree* noundef %36, %struct.rbnode* noundef %37) #25, !dbg !15635
  ret void, !dbg !15636
}

; Function Attrs: optsize
declare !dbg !15637 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !15642 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15645 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15647, metadata !DIExpression()), !dbg !15649
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15648, metadata !DIExpression()), !dbg !15649
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !15650
  br i1 %3, label %4, label %5, !dbg !15653

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.270, i32 0, i32 0), i32 noundef 1200) #25, !dbg !15654
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.270, i32 0, i32 0), i32 noundef 1200) #25, !dbg !15654
  unreachable, !dbg !15654

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15656
  %7 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15657
  tail call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %7) #25, !dbg !15658
  %8 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !15659
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !15659
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !15661
  br i1 %10, label %11, label %13, !dbg !15662

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15663
  store i32 0, i32* %12, align 4, !dbg !15665
  br label %13, !dbg !15666

13:                                               ; preds = %11, %5
  ret void, !dbg !15667
}

; Function Attrs: optsize
declare !dbg !15668 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !15669 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15673, metadata !DIExpression()), !dbg !15676
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15674, metadata !DIExpression()), !dbg !15676
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15677
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #24, !dbg !15678
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !15675, metadata !DIExpression()), !dbg !15676
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15674, metadata !DIExpression()), !dbg !15676
  ret %struct.k_thread* %4, !dbg !15679
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !15680 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !15684, metadata !DIExpression()), !dbg !15685
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #25, !dbg !15686
  ret %struct.rbnode* %2, !dbg !15687
}

; Function Attrs: optsize
declare !dbg !15688 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #16 !dbg !15691 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !15701, metadata !DIExpression()), !dbg !15705
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !15706
  %3 = load i32, i32* %2, align 4, !dbg !15706
  %4 = icmp eq i32 %3, 0, !dbg !15708
  br i1 %4, label %10, label %5, !dbg !15709

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15702, metadata !DIExpression()), !dbg !15705
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !15710, !range !7618
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !15711
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !15703, metadata !DIExpression()), !dbg !15705
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.271(%struct._dnode* noundef %7) #24, !dbg !15712
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !15704, metadata !DIExpression()), !dbg !15705
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15702, metadata !DIExpression()), !dbg !15705
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !15705
  ret %struct.k_thread* %11, !dbg !15713
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15714 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15718, metadata !DIExpression()), !dbg !15721
  call void @llvm.dbg.value(metadata i32 0, metadata !15719, metadata !DIExpression()), !dbg !15721
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.305(%struct._wait_q_t* noundef %0) #24, !dbg !15722
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15720, metadata !DIExpression()), !dbg !15721
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15723
  br i1 %3, label %8, label %4, !dbg !15724

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !15725
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !15727
  call void @llvm.dbg.value(metadata i32 1, metadata !15719, metadata !DIExpression()), !dbg !15721
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head.305(%struct._wait_q_t* noundef %0) #24, !dbg !15722
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15720, metadata !DIExpression()), !dbg !15721
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !15723
  br i1 %7, label %8, label %4, !dbg !15724, !llvm.loop !15728

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !15721
  ret i32 %9, !dbg !15730
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.305(%struct._wait_q_t* noundef readonly %0) unnamed_addr #8 !dbg !15731 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15733, metadata !DIExpression()), !dbg !15734
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !15735
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.271(%struct._dnode* noundef %2) #24, !dbg !15736
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !15737
  ret %struct.k_thread* %4, !dbg !15738
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #7 !dbg !15739 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !15748, metadata !DIExpression()), !dbg !15749
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !15750
  tail call fastcc void @sys_dlist_init.306(%struct._dnode* noundef nonnull %2) #24, !dbg !15751
  ret void, !dbg !15752
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.306(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !15753 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15757, metadata !DIExpression()), !dbg !15758
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15759
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15760
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15761
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15762
  ret void, !dbg !15763
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !15764 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #24, !dbg !15765
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #24, !dbg !15766
  ret void, !dbg !15767
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !15768 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15773, metadata !DIExpression()), !dbg !15774
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15775
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !15775
  %4 = load i8, i8* %3, align 2, !dbg !15775
  %5 = sext i8 %4 to i32, !dbg !15776
  ret i32 %5, !dbg !15777
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15778 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15782, metadata !DIExpression()), !dbg !15785
  call void @llvm.dbg.value(metadata i32 %1, metadata !15783, metadata !DIExpression()), !dbg !15785
  %3 = add i32 %1, 16, !dbg !15786
  %4 = icmp ult i32 %3, 31, !dbg !15786
  br i1 %4, label %6, label %5, !dbg !15786

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([134 x i8], [134 x i8]* @.str.8.309, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.270, i32 0, i32 0), i32 noundef 1331) #25, !dbg !15790
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.310, i32 0, i32 0), i32 noundef %1, i32 noundef 14, i32 noundef -16) #25, !dbg !15790
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.270, i32 0, i32 0), i32 noundef 1331) #25, !dbg !15790
  unreachable, !dbg !15790

6:                                                ; preds = %2
  %7 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15792, !srcloc !14768
  call void @llvm.dbg.value(metadata i32 %7, metadata !14764, metadata !DIExpression()) #23, !dbg !15797
  %8 = icmp eq i32 %7, 0, !dbg !15798
  br i1 %8, label %10, label %9, !dbg !15799

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.270, i32 0, i32 0), i32 noundef 1332) #25, !dbg !15800
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.273, i32 0, i32 0)) #25, !dbg !15800
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.270, i32 0, i32 0), i32 noundef 1332) #25, !dbg !15800
  unreachable, !dbg !15800

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15784, metadata !DIExpression()), !dbg !15785
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !15802
  ret void, !dbg !15803
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !15804 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #24, !dbg !15805
  br i1 %1, label %8, label %2, !dbg !15806

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !15807
  br i1 %3, label %8, label %4, !dbg !15808

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15809
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #24, !dbg !15810
  %7 = xor i1 %6, true, !dbg !15808
  br label %8, !dbg !15808

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !15811
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #8 !dbg !15812 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !15813, !range !6781
  %2 = icmp eq i8 %1, 0, !dbg !15813
  ret i1 %2, !dbg !15814
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !15815 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15818, !srcloc !14768
  call void @llvm.dbg.value(metadata i32 %1, metadata !14764, metadata !DIExpression()) #23, !dbg !15823
  %2 = icmp eq i32 %1, 0, !dbg !15824
  br i1 %2, label %4, label %3, !dbg !15825

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.270, i32 0, i32 0), i32 noundef 1392) #25, !dbg !15826
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.273, i32 0, i32 0)) #25, !dbg !15826
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.270, i32 0, i32 0), i32 noundef 1392) #25, !dbg !15826
  unreachable, !dbg !15826

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14036, metadata !DIExpression()) #23, !dbg !15828
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15830, !srcloc !14051
  call void @llvm.dbg.value(metadata i32 undef, metadata !14048, metadata !DIExpression()) #23, !dbg !15832
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !15832
  call void @llvm.dbg.value(metadata i32 undef, metadata !14042, metadata !DIExpression()) #23, !dbg !15828
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15833
  br i1 %6, label %8, label %7, !dbg !15834

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 148) #25, !dbg !15835
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.266, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15835
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 148) #25, !dbg !15835
  unreachable, !dbg !15835

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !14048, metadata !DIExpression()) #23, !dbg !15832
  call void @llvm.dbg.value(metadata i32 undef, metadata !14042, metadata !DIExpression()) #23, !dbg !15828
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15836
  call void @llvm.dbg.value(metadata i32 undef, metadata !15817, metadata !DIExpression()), !dbg !15837
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15838
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14228, metadata !DIExpression()) #23, !dbg !15841
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 3, !dbg !15843
  %11 = load i8, i8* %10, align 1, !dbg !15844
  %12 = and i8 %11, 127, !dbg !15844
  store i8 %12, i8* %10, align 1, !dbg !15844
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14236, metadata !DIExpression()) #23, !dbg !15845
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %9) #25, !dbg !15847
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15848
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14245, metadata !DIExpression()) #23, !dbg !15849
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 3, !dbg !15851
  %15 = load i8, i8* %14, align 1, !dbg !15852
  %16 = or i8 %15, -128, !dbg !15852
  store i8 %16, i8* %14, align 1, !dbg !15852
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14252, metadata !DIExpression()) #23, !dbg !15853
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14259, metadata !DIExpression()) #23, !dbg !15855
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14265, metadata !DIExpression()) #23, !dbg !15855
  %17 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %13) #25, !dbg !15857
  br i1 %17, label %18, label %19, !dbg !15858

18:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.270, i32 0, i32 0), i32 noundef 186) #25, !dbg !15859
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.270, i32 0, i32 0), i32 noundef 186) #25, !dbg !15859
  unreachable, !dbg !15859

19:                                               ; preds = %8
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.271(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15860
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14266, metadata !DIExpression()) #23, !dbg !15855
  %21 = icmp eq %struct._dnode* %20, null, !dbg !15861
  br i1 %21, label %32, label %22, !dbg !15860

22:                                               ; preds = %19, %29
  %23 = phi %struct._dnode* [ %30, %29 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %23, metadata !14266, metadata !DIExpression()) #23, !dbg !15855
  %24 = bitcast %struct._dnode* %23 to %struct.k_thread*, !dbg !15862
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !14266, metadata !DIExpression()) #23, !dbg !15855
  %25 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %13, %struct.k_thread* noundef nonnull %24) #25, !dbg !15863
  %26 = icmp sgt i32 %25, 0, !dbg !15864
  br i1 %26, label %27, label %29, !dbg !15865

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !15866
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %23, %struct._dnode* noundef %28) #25, !dbg !15867
  br label %34, !dbg !15868

29:                                               ; preds = %22
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %23) #25, !dbg !15861
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !14266, metadata !DIExpression()) #23, !dbg !15855
  %31 = icmp eq %struct._dnode* %30, null, !dbg !15861
  br i1 %31, label %32, label %22, !dbg !15860, !llvm.loop !15869

32:                                               ; preds = %29, %19
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !15871
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %33) #25, !dbg !15872
  br label %34, !dbg !15873

34:                                               ; preds = %27, %32
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !15874
  call void @llvm.dbg.value(metadata i32 undef, metadata !14712, metadata !DIExpression()) #23, !dbg !15875
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14717, metadata !DIExpression()) #23, !dbg !15875
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14721, metadata !DIExpression()) #23, !dbg !15877
  %35 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15879
  br i1 %35, label %37, label %36, !dbg !15880

36:                                               ; preds = %34
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 225) #25, !dbg !15881
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.268, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15881
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 225) #25, !dbg !15881
  unreachable, !dbg !15881

37:                                               ; preds = %34
  %38 = extractvalue { i32, i32 } %5, 0, !dbg !15830
  call void @llvm.dbg.value(metadata i32 %38, metadata !14048, metadata !DIExpression()) #23, !dbg !15832
  call void @llvm.dbg.value(metadata i32 %38, metadata !14042, metadata !DIExpression()) #23, !dbg !15828
  call void @llvm.dbg.value(metadata i32 %38, metadata !15817, metadata !DIExpression()), !dbg !15837
  call void @llvm.dbg.value(metadata i32 undef, metadata !14712, metadata !DIExpression()) #23, !dbg !15875
  %39 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %38) #25, !dbg !15882
  ret void, !dbg !15883
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !15884 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !15888, metadata !DIExpression()), !dbg !15891
  %3 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15892, !srcloc !14768
  call void @llvm.dbg.value(metadata i32 %3, metadata !14764, metadata !DIExpression()) #23, !dbg !15897
  %4 = icmp eq i32 %3, 0, !dbg !15898
  br i1 %4, label %6, label %5, !dbg !15899

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.270, i32 0, i32 0), i32 noundef 1463) #25, !dbg !15900
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.273, i32 0, i32 0)) #25, !dbg !15900
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.270, i32 0, i32 0), i32 noundef 1463) #25, !dbg !15900
  unreachable, !dbg !15900

6:                                                ; preds = %1
  %7 = icmp eq i64 %2, -1, !dbg !15902
  br i1 %7, label %8, label %10, !dbg !15904

8:                                                ; preds = %6
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15905
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %9) #24, !dbg !15907
  br label %15, !dbg !15908

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i64 %2, metadata !15889, metadata !DIExpression()), !dbg !15891
  %11 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #24, !dbg !15909
  %12 = sext i32 %11 to i64, !dbg !15909
  call void @llvm.dbg.value(metadata i64 %12, metadata !15889, metadata !DIExpression()), !dbg !15891
  %13 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %12) #24, !dbg !15910
  %14 = trunc i64 %13 to i32, !dbg !15910
  call void @llvm.dbg.value(metadata i32 %14, metadata !15890, metadata !DIExpression()), !dbg !15891
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi i32 [ -1, %8 ], [ %14, %10 ], !dbg !15891
  ret i32 %16, !dbg !15911
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15912 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15916, metadata !DIExpression()), !dbg !15917
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15918, !srcloc !15920
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #24, !dbg !15921
  ret void, !dbg !15922
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !15923 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15927, metadata !DIExpression()), !dbg !15931
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15932, !srcloc !14768
  call void @llvm.dbg.value(metadata i32 %2, metadata !14764, metadata !DIExpression()) #23, !dbg !15937
  %3 = icmp eq i32 %2, 0, !dbg !15938
  br i1 %3, label %5, label %4, !dbg !15939

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.270, i32 0, i32 0), i32 noundef 1420) #25, !dbg !15940
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.273, i32 0, i32 0)) #25, !dbg !15940
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.270, i32 0, i32 0), i32 noundef 1420) #25, !dbg !15940
  unreachable, !dbg !15940

5:                                                ; preds = %1
  %6 = icmp eq i64 %0, 0, !dbg !15942
  br i1 %6, label %7, label %8, !dbg !15944

7:                                                ; preds = %5
  tail call fastcc void @k_yield() #24, !dbg !15945
  br label %43, !dbg !15947

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i64 %0, metadata !15929, metadata !DIExpression()), !dbg !15931
  %9 = icmp sgt i64 %0, -3, !dbg !15948
  br i1 %9, label %10, label %14, !dbg !15950

10:                                               ; preds = %8
  %11 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !15951
  %12 = trunc i64 %0 to i32, !dbg !15953
  %13 = add i32 %11, %12, !dbg !15953
  call void @llvm.dbg.value(metadata i32 %13, metadata !15928, metadata !DIExpression()), !dbg !15931
  br label %17, !dbg !15954

14:                                               ; preds = %8
  %15 = trunc i64 %0 to i32, !dbg !15955
  %16 = sub i32 -2, %15, !dbg !15955
  call void @llvm.dbg.value(metadata i32 %16, metadata !15928, metadata !DIExpression()), !dbg !15931
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i32 [ %13, %10 ], [ %16, %14 ], !dbg !15957
  call void @llvm.dbg.value(metadata i32 %18, metadata !15928, metadata !DIExpression()), !dbg !15931
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14036, metadata !DIExpression()) #23, !dbg !15958
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15960, !srcloc !14051
  call void @llvm.dbg.value(metadata i32 undef, metadata !14048, metadata !DIExpression()) #23, !dbg !15962
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !15962
  call void @llvm.dbg.value(metadata i32 undef, metadata !14042, metadata !DIExpression()) #23, !dbg !15958
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15963
  br i1 %20, label %22, label %21, !dbg !15964

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 148) #25, !dbg !15965
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.266, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15965
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 148) #25, !dbg !15965
  unreachable, !dbg !15965

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !14048, metadata !DIExpression()) #23, !dbg !15962
  call void @llvm.dbg.value(metadata i32 undef, metadata !14042, metadata !DIExpression()) #23, !dbg !15958
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15966
  call void @llvm.dbg.value(metadata i32 undef, metadata !15930, metadata !DIExpression()), !dbg !15931
  %23 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15967
  store %struct.k_thread* %23, %struct.k_thread** @pending_current, align 4, !dbg !15968
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %23) #24, !dbg !15969
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15970
  %25 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !15971
  tail call fastcc void @z_add_thread_timeout.286(%struct.k_thread* noundef %24, [1 x i64] %25) #24, !dbg !15971
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15972
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %26) #24, !dbg !15973
  call void @llvm.dbg.value(metadata i32 undef, metadata !14712, metadata !DIExpression()) #23, !dbg !15974
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14717, metadata !DIExpression()) #23, !dbg !15974
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14721, metadata !DIExpression()) #23, !dbg !15976
  %27 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15978
  br i1 %27, label %29, label %28, !dbg !15979

28:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 225) #25, !dbg !15980
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.268, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15980
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 225) #25, !dbg !15980
  unreachable, !dbg !15980

29:                                               ; preds = %22
  %30 = extractvalue { i32, i32 } %19, 0, !dbg !15960
  call void @llvm.dbg.value(metadata i32 %30, metadata !14048, metadata !DIExpression()) #23, !dbg !15962
  call void @llvm.dbg.value(metadata i32 %30, metadata !14042, metadata !DIExpression()) #23, !dbg !15958
  call void @llvm.dbg.value(metadata i32 %30, metadata !15930, metadata !DIExpression()), !dbg !15931
  call void @llvm.dbg.value(metadata i32 undef, metadata !14712, metadata !DIExpression()) #23, !dbg !15974
  %31 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %30) #25, !dbg !15981
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15982
  %33 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %32, i32 noundef 16) #24, !dbg !15982
  br i1 %33, label %34, label %35, !dbg !15985

34:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23.313, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.270, i32 0, i32 0), i32 noundef 1448) #25, !dbg !15986
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.273, i32 0, i32 0)) #25, !dbg !15986
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.270, i32 0, i32 0), i32 noundef 1448) #25, !dbg !15986
  unreachable, !dbg !15986

35:                                               ; preds = %29
  %36 = zext i32 %18 to i64, !dbg !15988
  %37 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !15989
  %38 = zext i32 %37 to i64, !dbg !15989
  %39 = sub nsw i64 %36, %38, !dbg !15990
  call void @llvm.dbg.value(metadata i64 %39, metadata !15927, metadata !DIExpression()), !dbg !15931
  %40 = icmp sgt i64 %39, 0, !dbg !15991
  %41 = select i1 %40, i64 %39, i64 0, !dbg !15991
  %42 = trunc i64 %41 to i32, !dbg !15991
  br label %43

43:                                               ; preds = %35, %7
  %44 = phi i32 [ 0, %7 ], [ %42, %35 ], !dbg !15931
  ret i32 %44, !dbg !15992
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #3 !dbg !15993 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15995, metadata !DIExpression()), !dbg !15996
  call void @llvm.dbg.value(metadata i64 %0, metadata !14096, metadata !DIExpression()), !dbg !15997
  call void @llvm.dbg.value(metadata i32 10000, metadata !14099, metadata !DIExpression()), !dbg !15997
  call void @llvm.dbg.value(metadata i32 1000, metadata !14100, metadata !DIExpression()), !dbg !15997
  call void @llvm.dbg.value(metadata i8 1, metadata !14101, metadata !DIExpression()), !dbg !15997
  call void @llvm.dbg.value(metadata i1 false, metadata !14102, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15997
  call void @llvm.dbg.value(metadata i1 false, metadata !14103, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15997
  call void @llvm.dbg.value(metadata i8 0, metadata !14104, metadata !DIExpression()), !dbg !15997
  call void @llvm.dbg.value(metadata i1 false, metadata !14105, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15997
  call void @llvm.dbg.value(metadata i1 true, metadata !14106, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15997
  call void @llvm.dbg.value(metadata i64 0, metadata !14107, metadata !DIExpression()), !dbg !15997
  call void @llvm.dbg.value(metadata i64 0, metadata !14107, metadata !DIExpression()), !dbg !15997
  call void @llvm.dbg.value(metadata i64 %0, metadata !14096, metadata !DIExpression()), !dbg !15997
  %2 = udiv i64 %0, 10, !dbg !15999
  ret i64 %2, !dbg !16003
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !16004 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16005, !srcloc !16007
  tail call void @z_impl_k_yield() #24, !dbg !16008
  ret void, !dbg !16009
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !16010 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16014, metadata !DIExpression()), !dbg !16016
  %2 = sext i32 %0 to i64, !dbg !16017
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #24, !dbg !16018
  call void @llvm.dbg.value(metadata i64 %3, metadata !16015, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16016
  %4 = shl i64 %3, 32, !dbg !16019
  %5 = ashr exact i64 %4, 32, !dbg !16019
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #24, !dbg !16020
  call void @llvm.dbg.value(metadata i32 %6, metadata !16015, metadata !DIExpression()), !dbg !16016
  %7 = sext i32 %6 to i64, !dbg !16021
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #24, !dbg !16022
  %9 = trunc i64 %8 to i32, !dbg !16022
  ret i32 %9, !dbg !16023
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #3 !dbg !16024 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16026, metadata !DIExpression()), !dbg !16027
  call void @llvm.dbg.value(metadata i64 %0, metadata !14096, metadata !DIExpression()), !dbg !16028
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14099, metadata !DIExpression()), !dbg !16028
  call void @llvm.dbg.value(metadata i32 10000, metadata !14100, metadata !DIExpression()), !dbg !16028
  call void @llvm.dbg.value(metadata i8 1, metadata !14101, metadata !DIExpression()), !dbg !16028
  call void @llvm.dbg.value(metadata i1 false, metadata !14102, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16028
  call void @llvm.dbg.value(metadata i1 true, metadata !14103, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16028
  call void @llvm.dbg.value(metadata i8 0, metadata !14104, metadata !DIExpression()), !dbg !16028
  call void @llvm.dbg.value(metadata i1 false, metadata !14105, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16028
  call void @llvm.dbg.value(metadata i1 true, metadata !14106, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16028
  call void @llvm.dbg.value(metadata i64 0, metadata !14107, metadata !DIExpression()), !dbg !16028
  call void @llvm.dbg.value(metadata i64 0, metadata !14107, metadata !DIExpression()), !dbg !16028
  %2 = add i64 %0, 99, !dbg !16030
  call void @llvm.dbg.value(metadata i64 %2, metadata !14096, metadata !DIExpression()), !dbg !16028
  %3 = udiv i64 %2, 100, !dbg !16031
  ret i64 %3, !dbg !16032
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #3 !dbg !16033 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16035, metadata !DIExpression()), !dbg !16036
  call void @llvm.dbg.value(metadata i64 %0, metadata !14096, metadata !DIExpression()), !dbg !16037
  call void @llvm.dbg.value(metadata i32 10000, metadata !14099, metadata !DIExpression()), !dbg !16037
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14100, metadata !DIExpression()), !dbg !16037
  call void @llvm.dbg.value(metadata i8 1, metadata !14101, metadata !DIExpression()), !dbg !16037
  call void @llvm.dbg.value(metadata i1 false, metadata !14102, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16037
  call void @llvm.dbg.value(metadata i1 false, metadata !14103, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16037
  call void @llvm.dbg.value(metadata i8 0, metadata !14104, metadata !DIExpression()), !dbg !16037
  call void @llvm.dbg.value(metadata i1 true, metadata !14105, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16037
  call void @llvm.dbg.value(metadata i1 false, metadata !14106, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16037
  call void @llvm.dbg.value(metadata i64 0, metadata !14107, metadata !DIExpression()), !dbg !16037
  call void @llvm.dbg.value(metadata i64 0, metadata !14107, metadata !DIExpression()), !dbg !16037
  %2 = mul i64 %0, 100, !dbg !16039
  ret i64 %2, !dbg !16041
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16042 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16044, metadata !DIExpression()), !dbg !16045
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #24, !dbg !16046
  br i1 %2, label %14, label %3, !dbg !16048

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !16049
  %5 = icmp slt i32 %4, 0, !dbg !16051
  br i1 %5, label %6, label %10, !dbg !16052

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16053
  %8 = load i8, i8* %7, align 1, !dbg !16053
  %9 = icmp eq i8 %8, 16, !dbg !16056
  br i1 %9, label %10, label %14, !dbg !16057

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !16058
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #24, !dbg !16059
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16060, !srcloc !14768
  call void @llvm.dbg.value(metadata i32 %11, metadata !14764, metadata !DIExpression()) #23, !dbg !16064
  %12 = icmp eq i32 %11, 0, !dbg !16065
  br i1 %12, label %13, label %14, !dbg !16066

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !16067
  br label %14, !dbg !16069

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !16070
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16071 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16073, metadata !DIExpression()), !dbg !16074
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16075
  %3 = load i8, i8* %2, align 1, !dbg !16075
  %4 = and i8 %3, 2, !dbg !16076
  %5 = icmp ne i8 %4, 0, !dbg !16077
  ret i1 %5, !dbg !16078
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #8 !dbg !16079 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16084
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16083, metadata !DIExpression()), !dbg !16085
  ret %struct.k_thread* %1, !dbg !16086
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !16087 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16088, !srcloc !14768
  call void @llvm.dbg.value(metadata i32 %1, metadata !14764, metadata !DIExpression()) #23, !dbg !16091
  %2 = icmp eq i32 %1, 0, !dbg !16092
  br i1 %2, label %3, label %8, !dbg !16093

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16094
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #24, !dbg !16095
  %6 = icmp ne i32 %5, 0, !dbg !16093
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !16096
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16097 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16099, metadata !DIExpression()), !dbg !16101
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14036, metadata !DIExpression()) #23, !dbg !16102
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16104, !srcloc !14051
  call void @llvm.dbg.value(metadata i32 undef, metadata !14048, metadata !DIExpression()) #23, !dbg !16106
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !16106
  call void @llvm.dbg.value(metadata i32 undef, metadata !14042, metadata !DIExpression()) #23, !dbg !16102
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16107
  br i1 %3, label %5, label %4, !dbg !16108

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 148) #25, !dbg !16109
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.266, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16109
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 148) #25, !dbg !16109
  unreachable, !dbg !16109

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !16104
  call void @llvm.dbg.value(metadata i32 %6, metadata !14048, metadata !DIExpression()) #23, !dbg !16106
  call void @llvm.dbg.value(metadata i32 %6, metadata !14042, metadata !DIExpression()) #23, !dbg !16102
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16110
  call void @llvm.dbg.value(metadata i32 %6, metadata !16100, metadata !DIExpression()), !dbg !16101
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !16111
  %8 = load i8, i8* %7, align 4, !dbg !16111
  %9 = and i8 %8, 1, !dbg !16113
  %10 = icmp eq i8 %9, 0, !dbg !16114
  br i1 %10, label %15, label %11, !dbg !16115

11:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14070, metadata !DIExpression()) #23, !dbg !16116
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14075, metadata !DIExpression()) #23, !dbg !16116
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16119
  br i1 %12, label %14, label %13, !dbg !16120

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 194) #25, !dbg !16121
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.268, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16121
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 194) #25, !dbg !16121
  unreachable, !dbg !16121

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %6, metadata !14070, metadata !DIExpression()) #23, !dbg !16116
  call void @llvm.dbg.value(metadata i32 %6, metadata !14084, metadata !DIExpression()) #23, !dbg !16122
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16124, !srcloc !14090
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.318, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.270, i32 0, i32 0), i32 noundef 1731) #25, !dbg !16125
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.319, i32 0, i32 0), %struct.k_thread* noundef nonnull %0) #25, !dbg !16125
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.270, i32 0, i32 0), i32 noundef 1731) #25, !dbg !16125
  unreachable, !dbg !16125

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16129
  %17 = load i8, i8* %16, align 1, !dbg !16129
  %18 = and i8 %17, 8, !dbg !16131
  %19 = icmp eq i8 %18, 0, !dbg !16132
  br i1 %19, label %24, label %20, !dbg !16133

20:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 undef, metadata !14070, metadata !DIExpression()) #23, !dbg !16134
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14075, metadata !DIExpression()) #23, !dbg !16134
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16137
  br i1 %21, label %23, label %22, !dbg !16138

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 194) #25, !dbg !16139
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.268, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16139
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 194) #25, !dbg !16139
  unreachable, !dbg !16139

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %6, metadata !14070, metadata !DIExpression()) #23, !dbg !16134
  call void @llvm.dbg.value(metadata i32 %6, metadata !14084, metadata !DIExpression()) #23, !dbg !16140
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16142, !srcloc !14090
  br label %39, !dbg !16143

24:                                               ; preds = %15
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #24, !dbg !16144
  %25 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16145
  %26 = icmp eq %struct.k_thread* %25, %0, !dbg !16147
  br i1 %26, label %27, label %35, !dbg !16148

27:                                               ; preds = %24
  %28 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16149, !srcloc !14768
  call void @llvm.dbg.value(metadata i32 %28, metadata !14764, metadata !DIExpression()) #23, !dbg !16152
  %29 = icmp eq i32 %28, 0, !dbg !16153
  br i1 %29, label %30, label %35, !dbg !16154

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !14712, metadata !DIExpression()) #23, !dbg !16155
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14717, metadata !DIExpression()) #23, !dbg !16155
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14721, metadata !DIExpression()) #23, !dbg !16158
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16160
  br i1 %31, label %33, label %32, !dbg !16161

32:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 225) #25, !dbg !16162
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.268, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16162
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 225) #25, !dbg !16162
  unreachable, !dbg !16162

33:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %6, metadata !14712, metadata !DIExpression()) #23, !dbg !16155
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %6) #25, !dbg !16163
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.318, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.270, i32 0, i32 0), i32 noundef 1778) #25, !dbg !16164
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.320, i32 0, i32 0)) #25, !dbg !16164
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.270, i32 0, i32 0), i32 noundef 1778) #25, !dbg !16164
  unreachable, !dbg !16164

35:                                               ; preds = %27, %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !14070, metadata !DIExpression()) #23, !dbg !16168
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14075, metadata !DIExpression()) #23, !dbg !16168
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16170
  br i1 %36, label %38, label %37, !dbg !16171

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 194) #25, !dbg !16172
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.268, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16172
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 194) #25, !dbg !16172
  unreachable, !dbg !16172

38:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %6, metadata !14070, metadata !DIExpression()) #23, !dbg !16168
  call void @llvm.dbg.value(metadata i32 %6, metadata !14084, metadata !DIExpression()) #23, !dbg !16173
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16175, !srcloc !14090
  br label %39, !dbg !16176

39:                                               ; preds = %38, %23
  ret void, !dbg !16176
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16177 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16179, metadata !DIExpression()), !dbg !16180
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16181
  %3 = load i8, i8* %2, align 1, !dbg !16181
  %4 = and i8 %3, 8, !dbg !16183
  %5 = icmp eq i8 %4, 0, !dbg !16184
  br i1 %5, label %6, label %20, !dbg !16185

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !16186
  %8 = or i8 %7, 8, !dbg !16186
  store i8 %8, i8* %2, align 1, !dbg !16186
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #24, !dbg !16188
  br i1 %9, label %10, label %12, !dbg !16190

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14228, metadata !DIExpression()) #23, !dbg !16191
  %11 = and i8 %8, 95, !dbg !16194
  store i8 %11, i8* %2, align 1, !dbg !16194
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14236, metadata !DIExpression()) #23, !dbg !16195
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #25, !dbg !16197
  br label %12, !dbg !16198

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16199
  %14 = load %struct._wait_q_t*, %struct._wait_q_t** %13, align 8, !dbg !16199
  %15 = icmp eq %struct._wait_q_t* %14, null, !dbg !16201
  br i1 %15, label %17, label %16, !dbg !16202

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !16203
  br label %17, !dbg !16205

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !16206
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16207
  tail call fastcc void @unpend_all(%struct._wait_q_t* noundef nonnull %19) #24, !dbg !16208
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16209
  br label %20, !dbg !16210

20:                                               ; preds = %17, %1
  ret void, !dbg !16211
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%struct._wait_q_t* noundef %0) unnamed_addr #1 !dbg !16212 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16216, metadata !DIExpression()), !dbg !16218
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.305(%struct._wait_q_t* noundef %0) #24, !dbg !16219
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16217, metadata !DIExpression()), !dbg !16218
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16220
  br i1 %3, label %10, label %4, !dbg !16221

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !16222
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !16224
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16225, metadata !DIExpression()), !dbg !16231
  call void @llvm.dbg.value(metadata i32 0, metadata !16230, metadata !DIExpression()), !dbg !16231
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 8, i32 1, !dbg !16233
  store i32 0, i32* %7, align 4, !dbg !16234
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16235
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head.305(%struct._wait_q_t* noundef %0) #24, !dbg !16219
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16217, metadata !DIExpression()), !dbg !16218
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16220
  br i1 %9, label %10, label %4, !dbg !16221, !llvm.loop !16236

10:                                               ; preds = %4, %1
  ret void, !dbg !16238
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16239 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16244, metadata !DIExpression()), !dbg !16247
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16243, metadata !DIExpression()), !dbg !16247
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14036, metadata !DIExpression()) #23, !dbg !16248
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16250, !srcloc !14051
  call void @llvm.dbg.value(metadata i32 undef, metadata !14048, metadata !DIExpression()) #23, !dbg !16252
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !16252
  call void @llvm.dbg.value(metadata i32 undef, metadata !14042, metadata !DIExpression()) #23, !dbg !16248
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16253
  br i1 %4, label %6, label %5, !dbg !16254

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 148) #25, !dbg !16255
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.266, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16255
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 148) #25, !dbg !16255
  unreachable, !dbg !16255

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !16250
  call void @llvm.dbg.value(metadata i32 %7, metadata !14048, metadata !DIExpression()) #23, !dbg !16252
  call void @llvm.dbg.value(metadata i32 %7, metadata !14042, metadata !DIExpression()) #23, !dbg !16248
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16256
  call void @llvm.dbg.value(metadata i32 %7, metadata !16245, metadata !DIExpression()), !dbg !16247
  call void @llvm.dbg.value(metadata i32 0, metadata !16246, metadata !DIExpression()), !dbg !16247
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16257
  %9 = load i8, i8* %8, align 1, !dbg !16257
  %10 = and i8 %9, 8, !dbg !16259
  %11 = icmp eq i8 %10, 0, !dbg !16260
  br i1 %11, label %12, label %35, !dbg !16261

12:                                               ; preds = %6
  %13 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %13, metadata !16244, metadata !DIExpression()), !dbg !16247
  %14 = icmp eq i64 %13, 0, !dbg !16262
  br i1 %14, label %35, label %15, !dbg !16264

15:                                               ; preds = %12
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16265
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !16267
  br i1 %17, label %35, label %18, !dbg !16268

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16269
  %20 = load %struct._wait_q_t*, %struct._wait_q_t** %19, align 8, !dbg !16269
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %16, i32 0, i32 3, !dbg !16270
  %22 = icmp eq %struct._wait_q_t* %20, %21, !dbg !16271
  br i1 %22, label %35, label %23, !dbg !16272

23:                                               ; preds = %18
  %24 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16273, !srcloc !14768
  call void @llvm.dbg.value(metadata i32 %24, metadata !14764, metadata !DIExpression()) #23, !dbg !16279
  %25 = icmp eq i32 %24, 0, !dbg !16280
  br i1 %25, label %27, label %26, !dbg !16281

26:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.270, i32 0, i32 0), i32 noundef 1809) #25, !dbg !16282
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.321, i32 0, i32 0)) #25, !dbg !16282
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.270, i32 0, i32 0), i32 noundef 1809) #25, !dbg !16282
  unreachable, !dbg !16282

27:                                               ; preds = %23
  %28 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16284
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16285
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %28, %struct._wait_q_t* noundef nonnull %29) #24, !dbg !16286
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16287
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %30, [1 x i64] %1) #24, !dbg !16288
  call void @llvm.dbg.value(metadata i32 undef, metadata !14712, metadata !DIExpression()) #23, !dbg !16289
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14717, metadata !DIExpression()) #23, !dbg !16289
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14721, metadata !DIExpression()) #23, !dbg !16291
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16293
  br i1 %31, label %33, label %32, !dbg !16294

32:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 225) #25, !dbg !16295
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.268, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16295
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 225) #25, !dbg !16295
  unreachable, !dbg !16295

33:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %7, metadata !14712, metadata !DIExpression()) #23, !dbg !16289
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %7) #25, !dbg !16296
  call void @llvm.dbg.value(metadata i32 %34, metadata !16246, metadata !DIExpression()), !dbg !16247
  br label %40, !dbg !16297

35:                                               ; preds = %15, %18, %12, %6
  %36 = phi i32 [ 0, %6 ], [ -16, %12 ], [ -45, %18 ], [ -45, %15 ], !dbg !16298
  call void @llvm.dbg.value(metadata i32 %36, metadata !16246, metadata !DIExpression()), !dbg !16247
  call void @llvm.dbg.value(metadata i32 undef, metadata !14070, metadata !DIExpression()) #23, !dbg !16299
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14075, metadata !DIExpression()) #23, !dbg !16299
  %37 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16301
  br i1 %37, label %39, label %38, !dbg !16302

38:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 194) #25, !dbg !16303
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.268, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16303
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 194) #25, !dbg !16303
  unreachable, !dbg !16303

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %7, metadata !14070, metadata !DIExpression()) #23, !dbg !16299
  call void @llvm.dbg.value(metadata i32 %7, metadata !14084, metadata !DIExpression()) #23, !dbg !16304
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !16306, !srcloc !14090
  br label %40, !dbg !16307

40:                                               ; preds = %39, %33
  %41 = phi i32 [ %36, %39 ], [ %34, %33 ], !dbg !16247
  ret i32 %41, !dbg !16308
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%struct._wait_q_t* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !16309 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16313, metadata !DIExpression()), !dbg !16321
  call void @llvm.dbg.value(metadata i32 %1, metadata !16314, metadata !DIExpression()), !dbg !16321
  call void @llvm.dbg.value(metadata i8* %2, metadata !16315, metadata !DIExpression()), !dbg !16321
  call void @llvm.dbg.value(metadata i8 0, metadata !16317, metadata !DIExpression()), !dbg !16321
  call void @llvm.dbg.value(metadata i32 0, metadata !16318, metadata !DIExpression()), !dbg !16322
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14036, metadata !DIExpression()) #23, !dbg !16323
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16325, !srcloc !14051
  call void @llvm.dbg.value(metadata i32 undef, metadata !14048, metadata !DIExpression()) #23, !dbg !16327
  call void @llvm.dbg.value(metadata i32 undef, metadata !14049, metadata !DIExpression()) #23, !dbg !16327
  call void @llvm.dbg.value(metadata i32 undef, metadata !14042, metadata !DIExpression()) #23, !dbg !16323
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16328
  br i1 %5, label %7, label %6, !dbg !16329

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 148) #25, !dbg !16330
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.266, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16330
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 148) #25, !dbg !16330
  unreachable, !dbg !16330

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !14048, metadata !DIExpression()) #23, !dbg !16327
  call void @llvm.dbg.value(metadata i32 undef, metadata !14042, metadata !DIExpression()) #23, !dbg !16323
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16331
  call void @llvm.dbg.value(metadata i32 undef, metadata !16320, metadata !DIExpression()), !dbg !16322
  call void @llvm.dbg.value(metadata i8 poison, metadata !16317, metadata !DIExpression()), !dbg !16321
  call void @llvm.dbg.value(metadata i32 undef, metadata !16318, metadata !DIExpression()), !dbg !16322
  %8 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %9 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %8) #24, !dbg !16332
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16316, metadata !DIExpression()), !dbg !16321
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !16335
  br i1 %10, label %15, label %11, !dbg !16337

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16338, metadata !DIExpression()), !dbg !16346
  call void @llvm.dbg.value(metadata i32 %1, metadata !16344, metadata !DIExpression()), !dbg !16346
  call void @llvm.dbg.value(metadata i8* %2, metadata !16345, metadata !DIExpression()), !dbg !16346
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16225, metadata !DIExpression()), !dbg !16349
  call void @llvm.dbg.value(metadata i32 %1, metadata !16230, metadata !DIExpression()), !dbg !16349
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 8, i32 1, !dbg !16351
  store i32 %1, i32* %12, align 4, !dbg !16352
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16353
  store i8* %2, i8** %13, align 4, !dbg !16354
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %9) #24, !dbg !16355
  %14 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %9) #24, !dbg !16356
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %9) #24, !dbg !16357
  call void @llvm.dbg.value(metadata i8 1, metadata !16317, metadata !DIExpression()), !dbg !16321
  br label %15, !dbg !16358

15:                                               ; preds = %7, %11
  call void @llvm.dbg.value(metadata i8 poison, metadata !16317, metadata !DIExpression()), !dbg !16321
  call void @llvm.dbg.value(metadata i32 undef, metadata !14070, metadata !DIExpression()) #23, !dbg !16359
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14075, metadata !DIExpression()) #23, !dbg !16359
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16361
  br i1 %16, label %18, label %17, !dbg !16362

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 194) #25, !dbg !16363
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.268, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16363
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.265, i32 0, i32 0), i32 noundef 194) #25, !dbg !16363
  unreachable, !dbg !16363

18:                                               ; preds = %15
  %19 = xor i1 %10, true, !dbg !16321
  %20 = extractvalue { i32, i32 } %4, 0, !dbg !16325
  call void @llvm.dbg.value(metadata i32 %20, metadata !14048, metadata !DIExpression()) #23, !dbg !16327
  call void @llvm.dbg.value(metadata i32 %20, metadata !14042, metadata !DIExpression()) #23, !dbg !16323
  call void @llvm.dbg.value(metadata i32 %20, metadata !16320, metadata !DIExpression()), !dbg !16322
  call void @llvm.dbg.value(metadata i32 undef, metadata !14070, metadata !DIExpression()) #23, !dbg !16359
  call void @llvm.dbg.value(metadata i32 undef, metadata !14084, metadata !DIExpression()) #23, !dbg !16364
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !16366, !srcloc !14090
  call void @llvm.dbg.value(metadata i8 poison, metadata !16317, metadata !DIExpression()), !dbg !16321
  call void @llvm.dbg.value(metadata i32 undef, metadata !16318, metadata !DIExpression()), !dbg !16322
  ret i1 %19, !dbg !16367
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !16368 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16374, metadata !DIExpression()), !dbg !16379
  call void @llvm.dbg.value(metadata i64 undef, metadata !16376, metadata !DIExpression()), !dbg !16379
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16373, metadata !DIExpression()), !dbg !16379
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !16375, metadata !DIExpression()), !dbg !16379
  call void @llvm.dbg.value(metadata i8** %4, metadata !16377, metadata !DIExpression()), !dbg !16379
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) #24, !dbg !16380
  call void @llvm.dbg.value(metadata i32 %6, metadata !16378, metadata !DIExpression()), !dbg !16379
  %7 = icmp eq i8** %4, null, !dbg !16381
  br i1 %7, label %12, label %8, !dbg !16383

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16384
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16386
  %11 = load i8*, i8** %10, align 4, !dbg !16386
  store i8* %11, i8** %4, align 4, !dbg !16387
  br label %12, !dbg !16388

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !16389
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_condvar_init(%struct.k_condvar* noundef %0) local_unnamed_addr #7 !dbg !16390 {
  call void @llvm.dbg.value(metadata %struct.k_condvar* %0, metadata !16403, metadata !DIExpression()), !dbg !16404
  %2 = getelementptr inbounds %struct.k_condvar, %struct.k_condvar* %0, i32 0, i32 0, !dbg !16405
  tail call fastcc void @z_waitq_init.322(%struct._wait_q_t* noundef %2) #24, !dbg !16406
  ret i32 0, !dbg !16407
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.322(%struct._wait_q_t* noundef %0) unnamed_addr #7 !dbg !16408 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16413, metadata !DIExpression()), !dbg !16414
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !16415
  tail call fastcc void @sys_dlist_init.323(%struct._dnode* noundef %2) #24, !dbg !16416
  ret void, !dbg !16417
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.323(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !16418 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16423, metadata !DIExpression()), !dbg !16424
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16425
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16426
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16427
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16428
  ret void, !dbg !16429
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_condvar_signal(%struct.k_condvar* noundef %0) local_unnamed_addr #1 !dbg !16430 {
  call void @llvm.dbg.value(metadata %struct.k_condvar* %0, metadata !16432, metadata !DIExpression()), !dbg !16519
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.326, metadata !16520, metadata !DIExpression()) #23, !dbg !16527
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16529, !srcloc !16535
  call void @llvm.dbg.value(metadata i32 undef, metadata !16532, metadata !DIExpression()) #23, !dbg !16536
  call void @llvm.dbg.value(metadata i32 undef, metadata !16533, metadata !DIExpression()) #23, !dbg !16536
  call void @llvm.dbg.value(metadata i32 undef, metadata !16526, metadata !DIExpression()) #23, !dbg !16527
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.326) #25, !dbg !16537
  br i1 %3, label %5, label %4, !dbg !16540

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.328, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.329, i32 0, i32 0), i32 noundef 148) #25, !dbg !16541
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.330, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.326) #25, !dbg !16541
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.329, i32 0, i32 0), i32 noundef 148) #25, !dbg !16541
  unreachable, !dbg !16541

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !16529
  call void @llvm.dbg.value(metadata i32 %6, metadata !16532, metadata !DIExpression()) #23, !dbg !16536
  call void @llvm.dbg.value(metadata i32 %6, metadata !16526, metadata !DIExpression()) #23, !dbg !16527
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.326) #25, !dbg !16543
  call void @llvm.dbg.value(metadata i32 %6, metadata !16433, metadata !DIExpression()), !dbg !16519
  %7 = getelementptr inbounds %struct.k_condvar, %struct.k_condvar* %0, i32 0, i32 0, !dbg !16544
  %8 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %7) #25, !dbg !16545
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16438, metadata !DIExpression()), !dbg !16519
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16546
  br i1 %9, label %13, label %10, !dbg !16548

10:                                               ; preds = %5
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16549, metadata !DIExpression()), !dbg !16555
  call void @llvm.dbg.value(metadata i32 0, metadata !16554, metadata !DIExpression()), !dbg !16555
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 8, i32 1, !dbg !16558
  store i32 0, i32* %11, align 4, !dbg !16559
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %8) #25, !dbg !16560
  %12 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !16561
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.326, [1 x i32] %12) #25, !dbg !16561
  br label %17, !dbg !16562

13:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !16563, metadata !DIExpression()) #23, !dbg !16569
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.326, metadata !16568, metadata !DIExpression()) #23, !dbg !16569
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.326) #25, !dbg !16572
  br i1 %14, label %16, label %15, !dbg !16575

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.331, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.329, i32 0, i32 0), i32 noundef 194) #25, !dbg !16576
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.332, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.326) #25, !dbg !16576
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.329, i32 0, i32 0), i32 noundef 194) #25, !dbg !16576
  unreachable, !dbg !16576

16:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %6, metadata !16563, metadata !DIExpression()) #23, !dbg !16569
  call void @llvm.dbg.value(metadata i32 %6, metadata !16578, metadata !DIExpression()) #23, !dbg !16581
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16583, !srcloc !16584
  br label %17

17:                                               ; preds = %10, %16
  ret i32 0, !dbg !16585
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_condvar_broadcast(%struct.k_condvar* noundef %0) local_unnamed_addr #1 !dbg !16586 {
  call void @llvm.dbg.value(metadata %struct.k_condvar* %0, metadata !16588, metadata !DIExpression()), !dbg !16592
  call void @llvm.dbg.value(metadata i32 0, metadata !16591, metadata !DIExpression()), !dbg !16592
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.326, metadata !16520, metadata !DIExpression()) #23, !dbg !16593
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16595, !srcloc !16535
  call void @llvm.dbg.value(metadata i32 undef, metadata !16532, metadata !DIExpression()) #23, !dbg !16597
  call void @llvm.dbg.value(metadata i32 undef, metadata !16533, metadata !DIExpression()) #23, !dbg !16597
  call void @llvm.dbg.value(metadata i32 undef, metadata !16526, metadata !DIExpression()) #23, !dbg !16593
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.326) #25, !dbg !16598
  br i1 %3, label %5, label %4, !dbg !16599

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.328, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.329, i32 0, i32 0), i32 noundef 148) #25, !dbg !16600
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.330, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.326) #25, !dbg !16600
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.329, i32 0, i32 0), i32 noundef 148) #25, !dbg !16600
  unreachable, !dbg !16600

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16532, metadata !DIExpression()) #23, !dbg !16597
  call void @llvm.dbg.value(metadata i32 undef, metadata !16526, metadata !DIExpression()) #23, !dbg !16593
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.326) #25, !dbg !16601
  call void @llvm.dbg.value(metadata i32 undef, metadata !16590, metadata !DIExpression()), !dbg !16592
  %6 = getelementptr inbounds %struct.k_condvar, %struct.k_condvar* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 0, metadata !16591, metadata !DIExpression()), !dbg !16592
  %7 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %6) #25, !dbg !16602
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !16589, metadata !DIExpression()), !dbg !16592
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !16603
  br i1 %8, label %16, label %9, !dbg !16604

9:                                                ; preds = %5, %9
  %10 = phi %struct.k_thread* [ %14, %9 ], [ %7, %5 ]
  %11 = phi i32 [ %12, %9 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !16591, metadata !DIExpression()), !dbg !16592
  %12 = add nuw nsw i32 %11, 1, !dbg !16605
  call void @llvm.dbg.value(metadata i32 %12, metadata !16591, metadata !DIExpression()), !dbg !16592
  call void @llvm.dbg.value(metadata %struct.k_thread* %10, metadata !16549, metadata !DIExpression()), !dbg !16607
  call void @llvm.dbg.value(metadata i32 0, metadata !16554, metadata !DIExpression()), !dbg !16607
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %10, i32 0, i32 8, i32 1, !dbg !16609
  store i32 0, i32* %13, align 4, !dbg !16610
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %10) #25, !dbg !16611
  %14 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %6) #25, !dbg !16602
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !16589, metadata !DIExpression()), !dbg !16592
  %15 = icmp eq %struct.k_thread* %14, null, !dbg !16603
  br i1 %15, label %16, label %9, !dbg !16604, !llvm.loop !16612

16:                                               ; preds = %9, %5
  %17 = phi i32 [ 0, %5 ], [ %12, %9 ], !dbg !16592
  %18 = extractvalue { i32, i32 } %2, 0, !dbg !16595
  call void @llvm.dbg.value(metadata i32 %18, metadata !16532, metadata !DIExpression()) #23, !dbg !16597
  call void @llvm.dbg.value(metadata i32 %18, metadata !16526, metadata !DIExpression()) #23, !dbg !16593
  call void @llvm.dbg.value(metadata i32 %18, metadata !16590, metadata !DIExpression()), !dbg !16592
  %19 = insertvalue [1 x i32] poison, i32 %18, 0, !dbg !16614
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.326, [1 x i32] %19) #25, !dbg !16614
  ret i32 %17, !dbg !16615
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_condvar_wait(%struct.k_condvar* noundef %0, %struct.k_mutex* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16616 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16633, metadata !DIExpression()), !dbg !16636
  call void @llvm.dbg.value(metadata %struct.k_condvar* %0, metadata !16631, metadata !DIExpression()), !dbg !16636
  call void @llvm.dbg.value(metadata %struct.k_mutex* %1, metadata !16632, metadata !DIExpression()), !dbg !16636
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.326, metadata !16520, metadata !DIExpression()) #23, !dbg !16637
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16639, !srcloc !16535
  call void @llvm.dbg.value(metadata i32 undef, metadata !16532, metadata !DIExpression()) #23, !dbg !16641
  call void @llvm.dbg.value(metadata i32 undef, metadata !16533, metadata !DIExpression()) #23, !dbg !16641
  call void @llvm.dbg.value(metadata i32 undef, metadata !16526, metadata !DIExpression()) #23, !dbg !16637
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.326) #25, !dbg !16642
  br i1 %5, label %7, label %6, !dbg !16643

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.328, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.329, i32 0, i32 0), i32 noundef 148) #25, !dbg !16644
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.330, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.326) #25, !dbg !16644
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.329, i32 0, i32 0), i32 noundef 148) #25, !dbg !16644
  unreachable, !dbg !16644

7:                                                ; preds = %3
  %8 = extractvalue { i32, i32 } %4, 0, !dbg !16639
  call void @llvm.dbg.value(metadata i32 %8, metadata !16532, metadata !DIExpression()) #23, !dbg !16641
  call void @llvm.dbg.value(metadata i32 %8, metadata !16526, metadata !DIExpression()) #23, !dbg !16637
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.326) #25, !dbg !16645
  call void @llvm.dbg.value(metadata i32 %8, metadata !16634, metadata !DIExpression()), !dbg !16636
  tail call fastcc void @k_mutex_unlock.335(%struct.k_mutex* noundef %1) #24, !dbg !16646
  %9 = getelementptr inbounds %struct.k_condvar, %struct.k_condvar* %0, i32 0, i32 0, !dbg !16647
  %10 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !16648
  %11 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock.326, [1 x i32] %10, %struct._wait_q_t* noundef %9, [1 x i64] %2) #25, !dbg !16648
  call void @llvm.dbg.value(metadata i32 %11, metadata !16635, metadata !DIExpression()), !dbg !16636
  tail call fastcc void @k_mutex_lock.336(%struct.k_mutex* noundef %1) #24, !dbg !16649
  ret i32 %11, !dbg !16650
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_unlock.335(%struct.k_mutex* noundef %0) unnamed_addr #1 !dbg !16651 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !16655, metadata !DIExpression()), !dbg !16656
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16657, !srcloc !16659
  %2 = tail call i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) #25, !dbg !16660
  ret void, !dbg !16661
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_lock.336(%struct.k_mutex* noundef %0) unnamed_addr #1 !dbg !16662 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16667, metadata !DIExpression()), !dbg !16668
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !16666, metadata !DIExpression()), !dbg !16668
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16669, !srcloc !16671
  %2 = tail call i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] [i64 -1]) #25, !dbg !16672
  ret void, !dbg !16673
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !16674 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #25, !dbg !16676
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #25, !dbg !16677
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_data_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_data_rom_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__ccm_data_end to i32), i32 ptrtoint ([0 x i8]* @__ccm_data_start to i32))) #25, !dbg !16678
  ret void, !dbg !16679
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16680 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !16690, metadata !DIExpression()), !dbg !16707
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16688, metadata !DIExpression()), !dbg !16707
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !16689, metadata !DIExpression()), !dbg !16707
  %5 = icmp eq i64 %4, -1, !dbg !16708
  br i1 %5, label %63, label %6, !dbg !16710

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16711
  %8 = tail call fastcc zeroext i1 @sys_dnode_is_linked.341(%struct._dnode* noundef %7) #24, !dbg !16711
  br i1 %8, label %9, label %10, !dbg !16714

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.343, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.344, i32 0, i32 0), i32 noundef 99) #25, !dbg !16715
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.345, i32 0, i32 0)) #25, !dbg !16715
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.344, i32 0, i32 0), i32 noundef 99) #25, !dbg !16715
  unreachable, !dbg !16715

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !16717
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %11, align 8, !dbg !16718
  call void @llvm.dbg.value(metadata i32 0, metadata !16691, metadata !DIExpression()), !dbg !16719
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16720, metadata !DIExpression()) #23, !dbg !16727
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16729, !srcloc !16735
  call void @llvm.dbg.value(metadata i32 undef, metadata !16732, metadata !DIExpression()) #23, !dbg !16736
  call void @llvm.dbg.value(metadata i32 undef, metadata !16733, metadata !DIExpression()) #23, !dbg !16736
  call void @llvm.dbg.value(metadata i32 undef, metadata !16726, metadata !DIExpression()) #23, !dbg !16727
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16737
  br i1 %13, label %15, label %14, !dbg !16740

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !16741
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.348, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16741
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !16741
  unreachable, !dbg !16741

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !16729
  call void @llvm.dbg.value(metadata i32 %16, metadata !16732, metadata !DIExpression()) #23, !dbg !16736
  call void @llvm.dbg.value(metadata i32 %16, metadata !16726, metadata !DIExpression()) #23, !dbg !16727
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16743
  call void @llvm.dbg.value(metadata i32 %16, metadata !16697, metadata !DIExpression()), !dbg !16719
  call void @llvm.dbg.value(metadata i32 undef, metadata !16691, metadata !DIExpression()), !dbg !16719
  %17 = icmp slt i64 %4, -1, !dbg !16744
  br i1 %17, label %18, label %24, !dbg !16745

18:                                               ; preds = %15
  %19 = load i64, i64* @curr_tick, align 8, !dbg !16746
  %20 = add i64 %4, %19, !dbg !16747
  %21 = sub i64 -2, %20, !dbg !16747
  call void @llvm.dbg.value(metadata i64 %21, metadata !16701, metadata !DIExpression()), !dbg !16748
  %22 = icmp sgt i64 %21, 1, !dbg !16749
  %23 = select i1 %22, i64 %21, i64 1, !dbg !16749
  br label %29, !dbg !16750

24:                                               ; preds = %15
  %25 = add nuw nsw i64 %4, 1, !dbg !16751
  %26 = tail call fastcc i32 @elapsed.349() #24, !dbg !16753
  %27 = sext i32 %26 to i64, !dbg !16753
  %28 = add nsw i64 %25, %27, !dbg !16754
  br label %29

29:                                               ; preds = %24, %18
  %30 = phi i64 [ %23, %18 ], [ %28, %24 ], !dbg !16755
  %31 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16756
  store i64 %30, i64* %31, align 8, !dbg !16757
  %32 = tail call fastcc %struct._timeout* @first() #24, !dbg !16758
  call void @llvm.dbg.value(metadata %struct._timeout* %32, metadata !16698, metadata !DIExpression()), !dbg !16760
  %33 = icmp eq %struct._timeout* %32, null, !dbg !16761
  br i1 %33, label %48, label %34, !dbg !16761

34:                                               ; preds = %29, %44
  %35 = phi i64 [ %45, %44 ], [ %30, %29 ], !dbg !16762
  %36 = phi %struct._timeout* [ %46, %44 ], [ %32, %29 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %36, metadata !16698, metadata !DIExpression()), !dbg !16760
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !16766
  %38 = load i64, i64* %37, align 8, !dbg !16766
  %39 = icmp slt i64 %35, %38, !dbg !16767
  br i1 %39, label %40, label %44, !dbg !16768

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !16766
  %42 = sub nsw i64 %38, %35, !dbg !16769
  store i64 %42, i64* %41, align 8, !dbg !16769
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 0, !dbg !16771
  tail call fastcc void @sys_dlist_insert.350(%struct._dnode* noundef nonnull %43, %struct._dnode* noundef nonnull %7) #24, !dbg !16772
  br label %49, !dbg !16773

44:                                               ; preds = %34
  %45 = sub nsw i64 %35, %38, !dbg !16774
  store i64 %45, i64* %31, align 8, !dbg !16774
  %46 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %36) #24, !dbg !16775
  call void @llvm.dbg.value(metadata %struct._timeout* %46, metadata !16698, metadata !DIExpression()), !dbg !16760
  %47 = icmp eq %struct._timeout* %46, null, !dbg !16761
  br i1 %47, label %48, label %34, !dbg !16761, !llvm.loop !16776

48:                                               ; preds = %44, %29
  tail call fastcc void @sys_dlist_append.351(%struct._dnode* noundef nonnull %7) #24, !dbg !16778
  br label %49, !dbg !16781

49:                                               ; preds = %40, %48
  %50 = tail call fastcc %struct._timeout* @first() #24, !dbg !16782
  %51 = icmp eq %struct._timeout* %50, %0, !dbg !16783
  br i1 %51, label %52, label %59, !dbg !16784

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @next_timeout() #24, !dbg !16785
  call void @llvm.dbg.value(metadata i32 %53, metadata !16704, metadata !DIExpression()), !dbg !16786
  %54 = icmp ne i32 %53, 0, !dbg !16787
  %55 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %56 = icmp eq i32 %55, %53
  %57 = select i1 %54, i1 %56, i1 false, !dbg !16789
  br i1 %57, label %59, label %58, !dbg !16789

58:                                               ; preds = %52
  tail call void @sys_clock_set_timeout(i32 noundef %53, i1 noundef zeroext false) #25, !dbg !16790
  br label %59, !dbg !16792

59:                                               ; preds = %58, %52, %49
  call void @llvm.dbg.value(metadata i32 undef, metadata !16793, metadata !DIExpression()) #23, !dbg !16799
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16798, metadata !DIExpression()) #23, !dbg !16799
  %60 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16801
  br i1 %60, label %62, label %61, !dbg !16804

61:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !16805
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16805
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !16805
  unreachable, !dbg !16805

62:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !16793, metadata !DIExpression()) #23, !dbg !16799
  call void @llvm.dbg.value(metadata i32 %16, metadata !16807, metadata !DIExpression()) #23, !dbg !16810
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !16812, !srcloc !16813
  call void @llvm.dbg.value(metadata i32 undef, metadata !16691, metadata !DIExpression()), !dbg !16719
  br label %63

63:                                               ; preds = %3, %62
  ret void, !dbg !16814
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.341(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16815 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16821, metadata !DIExpression()), !dbg !16822
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16823
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16823
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16824
  ret i1 %4, !dbg !16825
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.349() unnamed_addr #1 !dbg !16826 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !16829
  %2 = icmp eq i32 %1, 0, !dbg !16830
  br i1 %2, label %3, label %5, !dbg !16829

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #25, !dbg !16831
  br label %5, !dbg !16829

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !16829
  ret i32 %6, !dbg !16832
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #8 !dbg !16833 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.356() #24, !dbg !16839
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16837, metadata !DIExpression()), !dbg !16840
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !16841
  ret %struct._timeout* %2, !dbg !16842
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.350(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !16843 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16847, metadata !DIExpression()), !dbg !16851
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16848, metadata !DIExpression()), !dbg !16851
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16852
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16852
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16849, metadata !DIExpression()), !dbg !16851
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16853
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16854
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16855
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16856
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16857
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16858
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16859
  ret void, !dbg !16860
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #8 !dbg !16861 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16865, metadata !DIExpression()), !dbg !16867
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16868
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.354(%struct._dnode* noundef %2) #24, !dbg !16869
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16866, metadata !DIExpression()), !dbg !16867
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !16870
  ret %struct._timeout* %4, !dbg !16871
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.351(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !16872 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16877, metadata !DIExpression()), !dbg !16880
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16878, metadata !DIExpression()), !dbg !16880
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16881
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16879, metadata !DIExpression()), !dbg !16880
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16882
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !16883
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16884
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !16885
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !16886
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !16887
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16888
  ret void, !dbg !16889
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !16890 {
  %1 = tail call fastcc %struct._timeout* @first() #24, !dbg !16895
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !16892, metadata !DIExpression()), !dbg !16896
  %2 = tail call fastcc i32 @elapsed.349() #24, !dbg !16897
  call void @llvm.dbg.value(metadata i32 %2, metadata !16893, metadata !DIExpression()), !dbg !16896
  %3 = icmp eq %struct._timeout* %1, null, !dbg !16898
  br i1 %3, label %14, label %4, !dbg !16900

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !16901
  %6 = load i64, i64* %5, align 8, !dbg !16901
  %7 = sext i32 %2 to i64, !dbg !16902
  %8 = sub nsw i64 %6, %7, !dbg !16903
  %9 = icmp sgt i64 %8, 2147483647, !dbg !16904
  br i1 %9, label %14, label %10, !dbg !16905

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !16906
  %12 = select i1 %11, i64 %8, i64 0, !dbg !16906
  %13 = trunc i64 %12 to i32, !dbg !16906
  call void @llvm.dbg.value(metadata i32 %13, metadata !16894, metadata !DIExpression()), !dbg !16896
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !16908
  call void @llvm.dbg.value(metadata i32 %15, metadata !16894, metadata !DIExpression()), !dbg !16896
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16909
  %17 = icmp ne i32 %16, 0, !dbg !16911
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !16912
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !16912
  call void @llvm.dbg.value(metadata i32 %20, metadata !16894, metadata !DIExpression()), !dbg !16896
  ret i32 %20, !dbg !16913
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.354(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !16914 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16918, metadata !DIExpression()), !dbg !16920
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16919, metadata !DIExpression()), !dbg !16920
  %2 = icmp eq %struct._dnode* %0, null, !dbg !16921
  br i1 %2, label %5, label %3, !dbg !16922

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.355(%struct._dnode* noundef nonnull %0) #24, !dbg !16923
  br label %5, !dbg !16922

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !16922
  ret %struct._dnode* %6, !dbg !16924
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.355(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !16925 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16927, metadata !DIExpression()), !dbg !16929
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16928, metadata !DIExpression()), !dbg !16929
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16930
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !16931
  br i1 %3, label %7, label %4, !dbg !16932

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16933
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !16933
  br label %7, !dbg !16932

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !16932
  ret %struct._dnode* %8, !dbg !16934
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.356() unnamed_addr #8 !dbg !16935 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16939, metadata !DIExpression()), !dbg !16940
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.357() #24, !dbg !16941
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !16941
  ret %struct._dnode* %3, !dbg !16942
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.357() unnamed_addr #8 !dbg !16943 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16947, metadata !DIExpression()), !dbg !16948
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !16949
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !16950
  ret i1 %2, !dbg !16951
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16952 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16956, metadata !DIExpression()), !dbg !16961
  call void @llvm.dbg.value(metadata i32 -22, metadata !16957, metadata !DIExpression()), !dbg !16961
  call void @llvm.dbg.value(metadata i32 0, metadata !16958, metadata !DIExpression()), !dbg !16962
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16720, metadata !DIExpression()) #23, !dbg !16963
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16965, !srcloc !16735
  call void @llvm.dbg.value(metadata i32 undef, metadata !16732, metadata !DIExpression()) #23, !dbg !16967
  call void @llvm.dbg.value(metadata i32 undef, metadata !16733, metadata !DIExpression()) #23, !dbg !16967
  call void @llvm.dbg.value(metadata i32 undef, metadata !16726, metadata !DIExpression()) #23, !dbg !16963
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16968
  br i1 %3, label %5, label %4, !dbg !16969

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !16970
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.348, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16970
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !16970
  unreachable, !dbg !16970

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16732, metadata !DIExpression()) #23, !dbg !16967
  call void @llvm.dbg.value(metadata i32 undef, metadata !16726, metadata !DIExpression()) #23, !dbg !16963
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16971
  call void @llvm.dbg.value(metadata i32 undef, metadata !16960, metadata !DIExpression()), !dbg !16962
  call void @llvm.dbg.value(metadata i32 -22, metadata !16957, metadata !DIExpression()), !dbg !16961
  call void @llvm.dbg.value(metadata i32 undef, metadata !16958, metadata !DIExpression()), !dbg !16962
  %6 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !16957, metadata !DIExpression()), !dbg !16961
  %7 = tail call fastcc zeroext i1 @sys_dnode_is_linked.341(%struct._dnode* noundef %6) #24, !dbg !16972
  br i1 %7, label %8, label %9, !dbg !16976

8:                                                ; preds = %5
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #24, !dbg !16977
  call void @llvm.dbg.value(metadata i32 0, metadata !16957, metadata !DIExpression()), !dbg !16961
  br label %9, !dbg !16979

9:                                                ; preds = %5, %8
  %10 = phi i32 [ 0, %8 ], [ -22, %5 ], !dbg !16961
  call void @llvm.dbg.value(metadata i32 %10, metadata !16957, metadata !DIExpression()), !dbg !16961
  call void @llvm.dbg.value(metadata i32 undef, metadata !16793, metadata !DIExpression()) #23, !dbg !16980
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16798, metadata !DIExpression()) #23, !dbg !16980
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16982
  br i1 %11, label %13, label %12, !dbg !16983

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !16984
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16984
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !16984
  unreachable, !dbg !16984

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !16965
  call void @llvm.dbg.value(metadata i32 %14, metadata !16732, metadata !DIExpression()) #23, !dbg !16967
  call void @llvm.dbg.value(metadata i32 %14, metadata !16726, metadata !DIExpression()) #23, !dbg !16963
  call void @llvm.dbg.value(metadata i32 %14, metadata !16960, metadata !DIExpression()), !dbg !16962
  call void @llvm.dbg.value(metadata i32 undef, metadata !16793, metadata !DIExpression()) #23, !dbg !16980
  call void @llvm.dbg.value(metadata i32 undef, metadata !16807, metadata !DIExpression()) #23, !dbg !16985
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !16987, !srcloc !16813
  call void @llvm.dbg.value(metadata i32 %10, metadata !16957, metadata !DIExpression()), !dbg !16961
  call void @llvm.dbg.value(metadata i32 undef, metadata !16958, metadata !DIExpression()), !dbg !16962
  ret i32 %10, !dbg !16988
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #9 !dbg !16989 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16991, metadata !DIExpression()), !dbg !16992
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #24, !dbg !16993
  %3 = icmp eq %struct._timeout* %2, null, !dbg !16995
  br i1 %3, label %10, label %4, !dbg !16996

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16997
  %6 = load i64, i64* %5, align 8, !dbg !16997
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !16999
  %8 = load i64, i64* %7, align 8, !dbg !17000
  %9 = add nsw i64 %8, %6, !dbg !17000
  store i64 %9, i64* %7, align 8, !dbg !17000
  br label %10, !dbg !17001

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17002
  tail call fastcc void @sys_dlist_remove.360(%struct._dnode* noundef %11) #24, !dbg !17003
  ret void, !dbg !17004
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.360(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !17005 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17009, metadata !DIExpression()), !dbg !17012
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17013
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17013
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17010, metadata !DIExpression()), !dbg !17012
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17014
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17014
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !17011, metadata !DIExpression()), !dbg !17012
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !17015
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !17016
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !17017
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !17018
  tail call fastcc void @sys_dnode_init.361(%struct._dnode* noundef %0) #24, !dbg !17019
  ret void, !dbg !17020
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.361(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !17021 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17023, metadata !DIExpression()), !dbg !17024
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17025
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !17026
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17027
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !17028
  ret void, !dbg !17029
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17030 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17036, metadata !DIExpression()), !dbg !17041
  call void @llvm.dbg.value(metadata i64 0, metadata !17037, metadata !DIExpression()), !dbg !17041
  call void @llvm.dbg.value(metadata i32 0, metadata !17038, metadata !DIExpression()), !dbg !17042
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16720, metadata !DIExpression()) #23, !dbg !17043
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17045, !srcloc !16735
  call void @llvm.dbg.value(metadata i32 undef, metadata !16732, metadata !DIExpression()) #23, !dbg !17047
  call void @llvm.dbg.value(metadata i32 undef, metadata !16733, metadata !DIExpression()) #23, !dbg !17047
  call void @llvm.dbg.value(metadata i32 undef, metadata !16726, metadata !DIExpression()) #23, !dbg !17043
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17048
  br i1 %3, label %5, label %4, !dbg !17049

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !17050
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.348, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17050
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !17050
  unreachable, !dbg !17050

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16732, metadata !DIExpression()) #23, !dbg !17047
  call void @llvm.dbg.value(metadata i32 undef, metadata !16726, metadata !DIExpression()) #23, !dbg !17043
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17051
  call void @llvm.dbg.value(metadata i32 undef, metadata !17040, metadata !DIExpression()), !dbg !17042
  call void @llvm.dbg.value(metadata i64 0, metadata !17037, metadata !DIExpression()), !dbg !17041
  call void @llvm.dbg.value(metadata i32 undef, metadata !17038, metadata !DIExpression()), !dbg !17042
  %6 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17052
  call void @llvm.dbg.value(metadata i64 %6, metadata !17037, metadata !DIExpression()), !dbg !17041
  call void @llvm.dbg.value(metadata i32 undef, metadata !16793, metadata !DIExpression()) #23, !dbg !17055
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16798, metadata !DIExpression()) #23, !dbg !17055
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17057
  br i1 %7, label %9, label %8, !dbg !17058

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !17059
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17059
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !17059
  unreachable, !dbg !17059

9:                                                ; preds = %5
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !17045
  call void @llvm.dbg.value(metadata i32 %10, metadata !16732, metadata !DIExpression()) #23, !dbg !17047
  call void @llvm.dbg.value(metadata i32 %10, metadata !16726, metadata !DIExpression()) #23, !dbg !17043
  call void @llvm.dbg.value(metadata i32 %10, metadata !17040, metadata !DIExpression()), !dbg !17042
  call void @llvm.dbg.value(metadata i32 undef, metadata !16793, metadata !DIExpression()) #23, !dbg !17055
  call void @llvm.dbg.value(metadata i32 undef, metadata !16807, metadata !DIExpression()) #23, !dbg !17060
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !17062, !srcloc !16813
  call void @llvm.dbg.value(metadata i64 %6, metadata !17037, metadata !DIExpression()), !dbg !17041
  call void @llvm.dbg.value(metadata i32 undef, metadata !17038, metadata !DIExpression()), !dbg !17042
  ret i64 %6, !dbg !17063
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !17064 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17066, metadata !DIExpression()), !dbg !17070
  call void @llvm.dbg.value(metadata i64 0, metadata !17067, metadata !DIExpression()), !dbg !17070
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.362(%struct._timeout* noundef %0) #24, !dbg !17071
  br i1 %2, label %21, label %3, !dbg !17073

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #24, !dbg !17074
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !17068, metadata !DIExpression()), !dbg !17075
  call void @llvm.dbg.value(metadata i64 0, metadata !17067, metadata !DIExpression()), !dbg !17070
  %5 = icmp eq %struct._timeout* %4, null, !dbg !17076
  br i1 %5, label %16, label %6, !dbg !17078

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !17068, metadata !DIExpression()), !dbg !17075
  call void @llvm.dbg.value(metadata i64 %8, metadata !17067, metadata !DIExpression()), !dbg !17070
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !17079
  %10 = load i64, i64* %9, align 8, !dbg !17079
  %11 = add nsw i64 %10, %8, !dbg !17081
  call void @llvm.dbg.value(metadata i64 %11, metadata !17067, metadata !DIExpression()), !dbg !17070
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !17082
  br i1 %12, label %16, label %13, !dbg !17084

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #24, !dbg !17085
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !17068, metadata !DIExpression()), !dbg !17075
  call void @llvm.dbg.value(metadata i64 %11, metadata !17067, metadata !DIExpression()), !dbg !17070
  %15 = icmp eq %struct._timeout* %14, null, !dbg !17076
  br i1 %15, label %16, label %6, !dbg !17078, !llvm.loop !17086

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !17070
  call void @llvm.dbg.value(metadata i64 %17, metadata !17067, metadata !DIExpression()), !dbg !17070
  %18 = tail call fastcc i32 @elapsed.349() #24, !dbg !17088
  %19 = sext i32 %18 to i64, !dbg !17088
  %20 = sub nsw i64 %17, %19, !dbg !17089
  br label %21, !dbg !17090

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !17070
  ret i64 %22, !dbg !17091
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.362(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !17092 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17096, metadata !DIExpression()), !dbg !17097
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17098
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.341(%struct._dnode* noundef %2) #24, !dbg !17099
  %4 = xor i1 %3, true, !dbg !17100
  ret i1 %4, !dbg !17101
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17102 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17104, metadata !DIExpression()), !dbg !17109
  call void @llvm.dbg.value(metadata i64 0, metadata !17105, metadata !DIExpression()), !dbg !17109
  call void @llvm.dbg.value(metadata i32 0, metadata !17106, metadata !DIExpression()), !dbg !17110
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16720, metadata !DIExpression()) #23, !dbg !17111
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17113, !srcloc !16735
  call void @llvm.dbg.value(metadata i32 undef, metadata !16732, metadata !DIExpression()) #23, !dbg !17115
  call void @llvm.dbg.value(metadata i32 undef, metadata !16733, metadata !DIExpression()) #23, !dbg !17115
  call void @llvm.dbg.value(metadata i32 undef, metadata !16726, metadata !DIExpression()) #23, !dbg !17111
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17116
  br i1 %3, label %5, label %4, !dbg !17117

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !17118
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.348, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17118
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !17118
  unreachable, !dbg !17118

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16732, metadata !DIExpression()) #23, !dbg !17115
  call void @llvm.dbg.value(metadata i32 undef, metadata !16726, metadata !DIExpression()) #23, !dbg !17111
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17119
  call void @llvm.dbg.value(metadata i32 undef, metadata !17108, metadata !DIExpression()), !dbg !17110
  call void @llvm.dbg.value(metadata i64 0, metadata !17105, metadata !DIExpression()), !dbg !17109
  call void @llvm.dbg.value(metadata i32 undef, metadata !17106, metadata !DIExpression()), !dbg !17110
  %6 = load i64, i64* @curr_tick, align 8, !dbg !17120
  %7 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17123
  call void @llvm.dbg.value(metadata !DIArgList(i64 %6, i64 %7), metadata !17105, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17109
  call void @llvm.dbg.value(metadata i32 undef, metadata !16793, metadata !DIExpression()) #23, !dbg !17124
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16798, metadata !DIExpression()) #23, !dbg !17124
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17126
  br i1 %8, label %10, label %9, !dbg !17127

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !17128
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17128
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !17128
  unreachable, !dbg !17128

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %2, 0, !dbg !17113
  call void @llvm.dbg.value(metadata i32 %11, metadata !16732, metadata !DIExpression()) #23, !dbg !17115
  call void @llvm.dbg.value(metadata i32 %11, metadata !16726, metadata !DIExpression()) #23, !dbg !17111
  call void @llvm.dbg.value(metadata i32 %11, metadata !17108, metadata !DIExpression()), !dbg !17110
  call void @llvm.dbg.value(metadata !DIArgList(i64 %7, i64 %6), metadata !17105, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17109
  call void @llvm.dbg.value(metadata i32 undef, metadata !16793, metadata !DIExpression()) #23, !dbg !17124
  call void @llvm.dbg.value(metadata i32 undef, metadata !16807, metadata !DIExpression()) #23, !dbg !17129
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !17131, !srcloc !16813
  call void @llvm.dbg.value(metadata i32 undef, metadata !17106, metadata !DIExpression()), !dbg !17110
  %12 = add i64 %7, %6, !dbg !17132
  ret i64 %12, !dbg !17133
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !17134 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !17136, metadata !DIExpression()), !dbg !17140
  call void @llvm.dbg.value(metadata i32 0, metadata !17137, metadata !DIExpression()), !dbg !17141
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16720, metadata !DIExpression()) #23, !dbg !17142
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17144, !srcloc !16735
  call void @llvm.dbg.value(metadata i32 undef, metadata !16732, metadata !DIExpression()) #23, !dbg !17146
  call void @llvm.dbg.value(metadata i32 undef, metadata !16733, metadata !DIExpression()) #23, !dbg !17146
  call void @llvm.dbg.value(metadata i32 undef, metadata !16726, metadata !DIExpression()) #23, !dbg !17142
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17147
  br i1 %2, label %4, label %3, !dbg !17148

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !17149
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.348, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17149
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !17149
  unreachable, !dbg !17149

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16732, metadata !DIExpression()) #23, !dbg !17146
  call void @llvm.dbg.value(metadata i32 undef, metadata !16726, metadata !DIExpression()) #23, !dbg !17142
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17150
  call void @llvm.dbg.value(metadata i32 undef, metadata !17139, metadata !DIExpression()), !dbg !17141
  call void @llvm.dbg.value(metadata i32 -1, metadata !17136, metadata !DIExpression()), !dbg !17140
  call void @llvm.dbg.value(metadata i32 undef, metadata !17137, metadata !DIExpression()), !dbg !17141
  %5 = tail call fastcc i32 @next_timeout() #24, !dbg !17151
  call void @llvm.dbg.value(metadata i32 %5, metadata !17136, metadata !DIExpression()), !dbg !17140
  call void @llvm.dbg.value(metadata i32 undef, metadata !16793, metadata !DIExpression()) #23, !dbg !17154
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16798, metadata !DIExpression()) #23, !dbg !17154
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17156
  br i1 %6, label %8, label %7, !dbg !17157

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !17158
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17158
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !17158
  unreachable, !dbg !17158

8:                                                ; preds = %4
  %9 = extractvalue { i32, i32 } %1, 0, !dbg !17144
  call void @llvm.dbg.value(metadata i32 %9, metadata !16732, metadata !DIExpression()) #23, !dbg !17146
  call void @llvm.dbg.value(metadata i32 %9, metadata !16726, metadata !DIExpression()) #23, !dbg !17142
  call void @llvm.dbg.value(metadata i32 %9, metadata !17139, metadata !DIExpression()), !dbg !17141
  call void @llvm.dbg.value(metadata i32 undef, metadata !16793, metadata !DIExpression()) #23, !dbg !17154
  call void @llvm.dbg.value(metadata i32 undef, metadata !16807, metadata !DIExpression()) #23, !dbg !17159
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !17161, !srcloc !16813
  call void @llvm.dbg.value(metadata i32 %5, metadata !17136, metadata !DIExpression()), !dbg !17140
  call void @llvm.dbg.value(metadata i32 undef, metadata !17137, metadata !DIExpression()), !dbg !17141
  ret i32 %5, !dbg !17162
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !17163 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17165, metadata !DIExpression()), !dbg !17175
  call void @llvm.dbg.value(metadata i1 %1, metadata !17166, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17175
  call void @llvm.dbg.value(metadata i32 0, metadata !17167, metadata !DIExpression()), !dbg !17176
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16720, metadata !DIExpression()) #23, !dbg !17177
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17179, !srcloc !16735
  call void @llvm.dbg.value(metadata i32 undef, metadata !16732, metadata !DIExpression()) #23, !dbg !17181
  call void @llvm.dbg.value(metadata i32 undef, metadata !16733, metadata !DIExpression()) #23, !dbg !17181
  call void @llvm.dbg.value(metadata i32 undef, metadata !16726, metadata !DIExpression()) #23, !dbg !17177
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17182
  br i1 %4, label %6, label %5, !dbg !17183

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !17184
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.348, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17184
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !17184
  unreachable, !dbg !17184

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !16732, metadata !DIExpression()) #23, !dbg !17181
  call void @llvm.dbg.value(metadata i32 undef, metadata !16726, metadata !DIExpression()) #23, !dbg !17177
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17185
  call void @llvm.dbg.value(metadata i32 undef, metadata !17169, metadata !DIExpression()), !dbg !17176
  call void @llvm.dbg.value(metadata i32 undef, metadata !17167, metadata !DIExpression()), !dbg !17176
  %7 = tail call fastcc i32 @next_timeout() #24, !dbg !17186
  call void @llvm.dbg.value(metadata i32 %7, metadata !17170, metadata !DIExpression()), !dbg !17187
  call void @llvm.dbg.value(metadata i1 undef, metadata !17173, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17187
  %8 = icmp slt i32 %7, 2, !dbg !17188
  call void @llvm.dbg.value(metadata i1 %8, metadata !17174, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17187
  %9 = icmp slt i32 %7, %0
  %10 = or i1 %8, %9, !dbg !17189
  call void @llvm.dbg.value(metadata i1 %9, metadata !17173, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17187
  br i1 %10, label %14, label %11, !dbg !17189

11:                                               ; preds = %6
  %12 = icmp sgt i32 %7, %0, !dbg !17191
  %13 = select i1 %12, i32 %0, i32 %7, !dbg !17191
  tail call void @sys_clock_set_timeout(i32 noundef %13, i1 noundef zeroext %1) #25, !dbg !17193
  br label %14, !dbg !17194

14:                                               ; preds = %11, %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !16793, metadata !DIExpression()) #23, !dbg !17195
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16798, metadata !DIExpression()) #23, !dbg !17195
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17197
  br i1 %15, label %17, label %16, !dbg !17198

16:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !17199
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17199
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !17199
  unreachable, !dbg !17199

17:                                               ; preds = %14
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !17179
  call void @llvm.dbg.value(metadata i32 %18, metadata !16732, metadata !DIExpression()) #23, !dbg !17181
  call void @llvm.dbg.value(metadata i32 %18, metadata !16726, metadata !DIExpression()) #23, !dbg !17177
  call void @llvm.dbg.value(metadata i32 %18, metadata !17169, metadata !DIExpression()), !dbg !17176
  call void @llvm.dbg.value(metadata i32 undef, metadata !16793, metadata !DIExpression()) #23, !dbg !17195
  call void @llvm.dbg.value(metadata i32 undef, metadata !16807, metadata !DIExpression()) #23, !dbg !17200
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !17202, !srcloc !16813
  call void @llvm.dbg.value(metadata i32 1, metadata !17167, metadata !DIExpression()), !dbg !17176
  call void @llvm.dbg.value(metadata i32 undef, metadata !17167, metadata !DIExpression()), !dbg !17176
  ret void, !dbg !17203
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !17204 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17208, metadata !DIExpression()), !dbg !17213
  tail call void @z_time_slice(i32 noundef %0) #25, !dbg !17214
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16720, metadata !DIExpression()) #23, !dbg !17215
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17217, !srcloc !16735
  call void @llvm.dbg.value(metadata i32 undef, metadata !16732, metadata !DIExpression()) #23, !dbg !17219
  call void @llvm.dbg.value(metadata i32 undef, metadata !16733, metadata !DIExpression()) #23, !dbg !17219
  call void @llvm.dbg.value(metadata i32 undef, metadata !16726, metadata !DIExpression()) #23, !dbg !17215
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17220
  br i1 %3, label %5, label %4, !dbg !17221

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !17222
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.348, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17222
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !17222
  unreachable, !dbg !17222

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16732, metadata !DIExpression()) #23, !dbg !17219
  call void @llvm.dbg.value(metadata i32 undef, metadata !16726, metadata !DIExpression()) #23, !dbg !17215
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17223
  call void @llvm.dbg.value(metadata i32 undef, metadata !17209, metadata !DIExpression()), !dbg !17213
  store i32 %0, i32* @announce_remaining, align 4, !dbg !17213
  call void @llvm.dbg.value(metadata i32 undef, metadata !17209, metadata !DIExpression()), !dbg !17213
  %6 = tail call fastcc %struct._timeout* @first() #24, !dbg !17224
  %7 = icmp eq %struct._timeout* %6, null, !dbg !17225
  br i1 %7, label %37, label %8, !dbg !17226

8:                                                ; preds = %5, %30
  %9 = phi %struct._timeout* [ %33, %30 ], [ %6, %5 ]
  %10 = phi { i32, i32 } [ %27, %30 ], [ %2, %5 ]
  %11 = phi i32 [ %32, %30 ], [ %0, %5 ]
  %12 = extractvalue { i32, i32 } %10, 0, !dbg !17213
  %13 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 2, !dbg !17227
  %14 = load i64, i64* %13, align 8, !dbg !17227
  %15 = sext i32 %11 to i64, !dbg !17228
  %16 = icmp sgt i64 %14, %15, !dbg !17229
  br i1 %16, label %35, label %17, !dbg !17230

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct._timeout* %9, metadata !17210, metadata !DIExpression()), !dbg !17231
  %18 = trunc i64 %14 to i32, !dbg !17232
  call void @llvm.dbg.value(metadata i32 %18, metadata !17212, metadata !DIExpression()), !dbg !17231
  %19 = sext i32 %18 to i64, !dbg !17233
  %20 = load i64, i64* @curr_tick, align 8, !dbg !17234
  %21 = add i64 %20, %19, !dbg !17234
  store i64 %21, i64* @curr_tick, align 8, !dbg !17234
  store i64 0, i64* %13, align 8, !dbg !17235
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %9) #24, !dbg !17236
  call void @llvm.dbg.value(metadata i32 undef, metadata !16793, metadata !DIExpression()) #23, !dbg !17237
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16798, metadata !DIExpression()) #23, !dbg !17237
  %22 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17239
  br i1 %22, label %24, label %23, !dbg !17240

23:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !17241
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17241
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !17241
  unreachable, !dbg !17241

24:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %12, metadata !16793, metadata !DIExpression()) #23, !dbg !17237
  call void @llvm.dbg.value(metadata i32 %12, metadata !16807, metadata !DIExpression()) #23, !dbg !17242
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !17244, !srcloc !16813
  %25 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 1, !dbg !17245
  %26 = load void (%struct._timeout*)*, void (%struct._timeout*)** %25, align 8, !dbg !17245
  tail call void %26(%struct._timeout* noundef nonnull %9) #25, !dbg !17246
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16720, metadata !DIExpression()) #23, !dbg !17247
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17249, !srcloc !16735
  call void @llvm.dbg.value(metadata i32 undef, metadata !16732, metadata !DIExpression()) #23, !dbg !17251
  call void @llvm.dbg.value(metadata i32 undef, metadata !16733, metadata !DIExpression()) #23, !dbg !17251
  call void @llvm.dbg.value(metadata i32 undef, metadata !16726, metadata !DIExpression()) #23, !dbg !17247
  %28 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17252
  br i1 %28, label %30, label %29, !dbg !17253

29:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !17254
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.348, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17254
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !17254
  unreachable, !dbg !17254

30:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !16732, metadata !DIExpression()) #23, !dbg !17251
  call void @llvm.dbg.value(metadata i32 undef, metadata !16726, metadata !DIExpression()) #23, !dbg !17247
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17255
  call void @llvm.dbg.value(metadata i32 undef, metadata !17209, metadata !DIExpression()), !dbg !17213
  %31 = load i32, i32* @announce_remaining, align 4, !dbg !17256
  %32 = sub nsw i32 %31, %18, !dbg !17256
  store i32 %32, i32* @announce_remaining, align 4, !dbg !17213
  call void @llvm.dbg.value(metadata i32 undef, metadata !17209, metadata !DIExpression()), !dbg !17213
  %33 = tail call fastcc %struct._timeout* @first() #24, !dbg !17224
  %34 = icmp eq %struct._timeout* %33, null, !dbg !17225
  br i1 %34, label %37, label %8, !dbg !17226, !llvm.loop !17257

35:                                               ; preds = %8
  %36 = sub nsw i64 %14, %15, !dbg !17259
  store i64 %36, i64* %13, align 8, !dbg !17259
  br label %41, !dbg !17262

37:                                               ; preds = %30, %5
  %38 = phi { i32, i32 } [ %2, %5 ], [ %27, %30 ]
  %39 = phi i32 [ %0, %5 ], [ %32, %30 ], !dbg !17213
  %40 = sext i32 %39 to i64, !dbg !17263
  br label %41, !dbg !17263

41:                                               ; preds = %37, %35
  %42 = phi i64 [ %40, %37 ], [ %15, %35 ], !dbg !17263
  %43 = phi { i32, i32 } [ %38, %37 ], [ %10, %35 ]
  %44 = load i64, i64* @curr_tick, align 8, !dbg !17264
  %45 = add i64 %44, %42, !dbg !17264
  store i64 %45, i64* @curr_tick, align 8, !dbg !17264
  store i32 0, i32* @announce_remaining, align 4, !dbg !17265
  %46 = tail call fastcc i32 @next_timeout() #24, !dbg !17266
  tail call void @sys_clock_set_timeout(i32 noundef %46, i1 noundef zeroext false) #25, !dbg !17267
  call void @llvm.dbg.value(metadata i32 undef, metadata !16793, metadata !DIExpression()) #23, !dbg !17268
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16798, metadata !DIExpression()) #23, !dbg !17268
  %47 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17270
  br i1 %47, label %49, label %48, !dbg !17271

48:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !17272
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17272
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !17272
  unreachable, !dbg !17272

49:                                               ; preds = %41
  %50 = extractvalue { i32, i32 } %43, 0, !dbg !17213
  call void @llvm.dbg.value(metadata i32 %50, metadata !16793, metadata !DIExpression()) #23, !dbg !17268
  call void @llvm.dbg.value(metadata i32 %50, metadata !16807, metadata !DIExpression()) #23, !dbg !17273
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %50) #23, !dbg !17275, !srcloc !16813
  ret void, !dbg !17276
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !17277 {
  call void @llvm.dbg.value(metadata i64 0, metadata !17281, metadata !DIExpression()), !dbg !17285
  call void @llvm.dbg.value(metadata i32 0, metadata !17282, metadata !DIExpression()), !dbg !17286
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16720, metadata !DIExpression()) #23, !dbg !17287
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17289, !srcloc !16735
  call void @llvm.dbg.value(metadata i32 undef, metadata !16732, metadata !DIExpression()) #23, !dbg !17291
  call void @llvm.dbg.value(metadata i32 undef, metadata !16733, metadata !DIExpression()) #23, !dbg !17291
  call void @llvm.dbg.value(metadata i32 undef, metadata !16726, metadata !DIExpression()) #23, !dbg !17287
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17292
  br i1 %2, label %4, label %3, !dbg !17293

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !17294
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.348, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17294
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !17294
  unreachable, !dbg !17294

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16732, metadata !DIExpression()) #23, !dbg !17291
  call void @llvm.dbg.value(metadata i32 undef, metadata !16726, metadata !DIExpression()) #23, !dbg !17287
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17295
  call void @llvm.dbg.value(metadata i32 undef, metadata !17284, metadata !DIExpression()), !dbg !17286
  call void @llvm.dbg.value(metadata i64 0, metadata !17281, metadata !DIExpression()), !dbg !17285
  call void @llvm.dbg.value(metadata i32 undef, metadata !17282, metadata !DIExpression()), !dbg !17286
  %5 = load i64, i64* @curr_tick, align 8, !dbg !17296
  %6 = tail call fastcc i32 @elapsed.349() #24, !dbg !17299
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !17281, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !17285
  call void @llvm.dbg.value(metadata i32 undef, metadata !16793, metadata !DIExpression()) #23, !dbg !17300
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16798, metadata !DIExpression()) #23, !dbg !17300
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17302
  br i1 %7, label %9, label %8, !dbg !17303

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !17304
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17304
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !17304
  unreachable, !dbg !17304

9:                                                ; preds = %4
  %10 = extractvalue { i32, i32 } %1, 0, !dbg !17289
  call void @llvm.dbg.value(metadata i32 %10, metadata !16732, metadata !DIExpression()) #23, !dbg !17291
  call void @llvm.dbg.value(metadata i32 %10, metadata !16726, metadata !DIExpression()) #23, !dbg !17287
  call void @llvm.dbg.value(metadata i32 %10, metadata !17284, metadata !DIExpression()), !dbg !17286
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !17281, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !17285
  call void @llvm.dbg.value(metadata !DIArgList(i32 %6, i64 %5), metadata !17281, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17285
  call void @llvm.dbg.value(metadata i32 undef, metadata !16793, metadata !DIExpression()) #23, !dbg !17300
  call void @llvm.dbg.value(metadata i32 undef, metadata !16807, metadata !DIExpression()) #23, !dbg !17305
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !17307, !srcloc !16813
  call void @llvm.dbg.value(metadata i32 undef, metadata !17282, metadata !DIExpression()), !dbg !17286
  %11 = sext i32 %6 to i64, !dbg !17299
  %12 = add i64 %5, %11, !dbg !17308
  ret i64 %12, !dbg !17309
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !17310 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !17311
  %2 = trunc i64 %1 to i32, !dbg !17312
  ret i32 %2, !dbg !17313
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !17314 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !17315
  ret i64 %1, !dbg !17316
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !17317 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17319, metadata !DIExpression()), !dbg !17326
  %2 = icmp eq i32 %0, 0, !dbg !17327
  br i1 %2, label %10, label %3, !dbg !17329

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !17330
  call void @llvm.dbg.value(metadata i32 %4, metadata !17320, metadata !DIExpression()), !dbg !17326
  %5 = mul i32 %0, 168, !dbg !17331
  call void @llvm.dbg.value(metadata i32 %5, metadata !17321, metadata !DIExpression()), !dbg !17326
  br label %6, !dbg !17332

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !17333
  call void @llvm.dbg.value(metadata i32 %7, metadata !17322, metadata !DIExpression()), !dbg !17334
  %8 = sub i32 %7, %4, !dbg !17335
  %9 = icmp ult i32 %8, %5, !dbg !17337
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !17338
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !17339 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #24, !dbg !17340
  ret i32 %1, !dbg !17341
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !17342 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !17344
  ret i32 %1, !dbg !17345
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !17346 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17350, metadata !DIExpression()), !dbg !17352
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !17353

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #24, !dbg !17354
  br label %14, !dbg !17358

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !17351, metadata !DIExpression()), !dbg !17352
  %6 = icmp slt i64 %2, -1, !dbg !17359
  br i1 %6, label %7, label %9, !dbg !17362

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !17363
  br label %14, !dbg !17364

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #24, !dbg !17366
  %11 = icmp ugt i64 %2, 1, !dbg !17367
  %12 = select i1 %11, i64 %2, i64 1, !dbg !17367
  %13 = add nsw i64 %10, %12, !dbg !17368
  br label %14, !dbg !17369

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !17370
  ret i64 %15, !dbg !17371
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !17372 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.371, i32 0, i32 0)) #25, !dbg !17374
  ret void, !dbg !17375
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { argmemonly nofree nosync nounwind willreturn }
attributes #5 = { nofree nosync nounwind willreturn }
attributes #6 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { argmemonly nofree nounwind willreturn writeonly }
attributes #13 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin optsize "no-builtins" }
attributes #25 = { nobuiltin nounwind optsize "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nounwind readnone }
attributes #29 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!795, !2, !2517, !27, !271, !297, !2519, !2521, !2555, !2557, !307, !358, !2559, !2562, !2573, !2619, !2621, !2649, !2677, !2720, !2792, !2837, !387, !530, !2865, !566, !576, !601, !829, !2870, !964, !1030, !1345, !1569, !2907, !1684, !1774, !2909, !2993, !3056, !1824, !3059, !1831, !2204, !3077, !2224, !2335, !2453, !3079, !2478, !3082}
!llvm.ident = !{!3084, !3084, !3084, !3084, !3084, !3084, !3084, !3084, !3084, !3084, !3084, !3084, !3084, !3084, !3084, !3084, !3084, !3084, !3084, !3084, !3084, !3084, !3084, !3084, !3084, !3084, !3084, !3084, !3084, !3084, !3084, !3084, !3084, !3084, !3084, !3084, !3084, !3084, !3084, !3084, !3084, !3084, !3084, !3084, !3084, !3084, !3084, !3084, !3084, !3084, !3084}
!llvm.module.flags = !{!3085, !3086, !3087, !3088, !3089, !3090, !3091, !3092, !3093}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 94, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 5248, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 82)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 2624, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "mutex", scope: !27, file: !116, line: 18, type: !262, isLocal: false, isDefinition: true, align: 32)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !113, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/kernel/condition_variables/simple/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103, !107, !108, !109, !110, !111}
!102 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!103 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !104, line: 46, baseType: !105)
!104 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!105 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !106)
!106 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!108 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !23, line: 104, baseType: !102)
!109 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!110 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!111 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !112)
!112 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!113 = !{!25, !114, !141, !152, !260}
!114 = !DIGlobalVariableExpression(var: !115, expr: !DIExpression())
!115 = distinct !DIGlobalVariable(name: "condvar", scope: !27, file: !116, line: 19, type: !117, isLocal: false, isDefinition: true, align: 32)
!116 = !DIFile(filename: "zephyr/samples/kernel/condition_variables/simple/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_condvar", file: !118, line: 2828, size: 64, elements: !119)
!118 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!119 = !{!120}
!120 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !117, file: !118, line: 2829, baseType: !121, size: 64)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !123)
!122 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!123 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !124)
!124 = !{!125}
!125 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !123, file: !122, line: 232, baseType: !126, size: 64)
!126 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !128)
!127 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !129)
!129 = !{!130, !136}
!130 = !DIDerivedType(tag: DW_TAG_member, scope: !128, file: !127, line: 38, baseType: !131, size: 32)
!131 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !128, file: !127, line: 38, size: 32, elements: !132)
!132 = !{!133, !135}
!133 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !131, file: !127, line: 39, baseType: !134, size: 32)
!134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !128, size: 32)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !131, file: !127, line: 40, baseType: !134, size: 32)
!136 = !DIDerivedType(tag: DW_TAG_member, scope: !128, file: !127, line: 42, baseType: !137, size: 32, offset: 32)
!137 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !128, file: !127, line: 42, size: 32, elements: !138)
!138 = !{!139, !140}
!139 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !137, file: !127, line: 43, baseType: !134, size: 32)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !137, file: !127, line: 44, baseType: !134, size: 32)
!141 = !DIGlobalVariableExpression(var: !142, expr: !DIExpression())
!142 = distinct !DIGlobalVariable(name: "tstacks", scope: !27, file: !116, line: 14, type: !143, isLocal: false, isDefinition: true, align: 512)
!143 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 174080, elements: !149)
!144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !145, line: 47, size: 8, elements: !146)
!145 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!146 = !{!147}
!147 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !144, file: !145, line: 48, baseType: !148, size: 8)
!148 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!149 = !{!150, !151}
!150 = !DISubrange(count: 20)
!151 = !DISubrange(count: 1088)
!152 = !DIGlobalVariableExpression(var: !153, expr: !DIExpression())
!153 = distinct !DIGlobalVariable(name: "t", scope: !27, file: !116, line: 16, type: !154, isLocal: true, isDefinition: true)
!154 = !DICompositeType(tag: DW_TAG_array_type, baseType: !155, size: 25600, elements: !259)
!155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1280, elements: !157)
!156 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!157 = !{!158, !207, !220, !221, !222, !226, !227, !235, !254}
!158 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !155, file: !156, line: 247, baseType: !159, size: 384)
!159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 384, elements: !160)
!160 = !{!161, !175, !177, !180, !181, !194, !195, !196}
!161 = !DIDerivedType(tag: DW_TAG_member, scope: !159, file: !156, line: 60, baseType: !162, size: 64)
!162 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !159, file: !156, line: 60, size: 64, elements: !163)
!163 = !{!164, !166}
!164 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !162, file: !156, line: 61, baseType: !165, size: 64)
!165 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !128)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !162, file: !156, line: 62, baseType: !167, size: 64)
!167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !169)
!168 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!169 = !{!170}
!170 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !167, file: !168, line: 50, baseType: !171, size: 64)
!171 = !DICompositeType(tag: DW_TAG_array_type, baseType: !172, size: 64, elements: !173)
!172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 32)
!173 = !{!174}
!174 = !DISubrange(count: 2)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !159, file: !156, line: 68, baseType: !176, size: 32, offset: 64)
!176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 32)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !159, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!178 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !179)
!179 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !159, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!181 = !DIDerivedType(tag: DW_TAG_member, scope: !159, file: !156, line: 90, baseType: !182, size: 16, offset: 112)
!182 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !159, file: !156, line: 90, size: 16, elements: !183)
!183 = !{!184, !191}
!184 = !DIDerivedType(tag: DW_TAG_member, scope: !182, file: !156, line: 91, baseType: !185, size: 16)
!185 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !182, file: !156, line: 91, size: 16, elements: !186)
!186 = !{!187, !190}
!187 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !185, file: !156, line: 96, baseType: !188, size: 8)
!188 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !189)
!189 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !185, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !182, file: !156, line: 100, baseType: !192, size: 16)
!192 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !193)
!193 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !159, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !159, file: !156, line: 127, baseType: !107, size: 32, offset: 160)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !159, file: !156, line: 131, baseType: !197, size: 192, offset: 192)
!197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !198)
!198 = !{!199, !200, !206}
!199 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !197, file: !122, line: 245, baseType: !165, size: 64)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !197, file: !122, line: 246, baseType: !201, size: 32, offset: 64)
!201 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !202)
!202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !203, size: 32)
!203 = !DISubroutineType(types: !204)
!204 = !{null, !205}
!205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !197, size: 32)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !197, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !155, file: !156, line: 250, baseType: !208, size: 288, offset: 384)
!208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !210)
!209 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!210 = !{!211, !212, !213, !214, !215, !216, !217, !218, !219}
!211 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !208, file: !209, line: 26, baseType: !110, size: 32)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !208, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !208, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !208, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !208, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !208, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !208, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !208, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !208, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !155, file: !156, line: 253, baseType: !107, size: 32, offset: 672)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !155, file: !156, line: 256, baseType: !121, size: 64, offset: 704)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !155, file: !156, line: 279, baseType: !223, size: 256, offset: 768)
!223 = !DICompositeType(tag: DW_TAG_array_type, baseType: !148, size: 256, elements: !224)
!224 = !{!225}
!225 = !DISubrange(count: 32)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !155, file: !156, line: 294, baseType: !109, size: 32, offset: 1024)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !155, file: !156, line: 300, baseType: !228, size: 96, offset: 1056)
!228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !229)
!229 = !{!230, !231, !234}
!230 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !228, file: !156, line: 153, baseType: !22, size: 32)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !228, file: !156, line: 162, baseType: !232, size: 32, offset: 32)
!232 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !233, line: 214, baseType: !32)
!233 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!234 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !228, file: !156, line: 168, baseType: !232, size: 32, offset: 64)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !155, file: !156, line: 325, baseType: !236, size: 32, offset: 1152)
!236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !237, size: 32)
!237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !238)
!238 = !{!239, !248, !249}
!239 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !237, file: !118, line: 5074, baseType: !240, size: 96)
!240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !241, line: 56, size: 96, elements: !242)
!241 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!242 = !{!243, !246, !247}
!243 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !240, file: !241, line: 57, baseType: !244, size: 32)
!244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !245, size: 32)
!245 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !241, line: 57, flags: DIFlagFwdDecl)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !240, file: !241, line: 58, baseType: !107, size: 32, offset: 32)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !240, file: !241, line: 59, baseType: !232, size: 32, offset: 64)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !237, file: !118, line: 5075, baseType: !121, size: 64, offset: 96)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !237, file: !118, line: 5076, baseType: !250, size: 32, offset: 160)
!250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !252)
!251 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!252 = !{!253}
!253 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !250, file: !251, line: 52, baseType: !22, size: 32)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !155, file: !156, line: 343, baseType: !255, size: 64, offset: 1184)
!255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !209, line: 60, size: 64, elements: !256)
!256 = !{!257, !258}
!257 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !255, file: !209, line: 63, baseType: !110, size: 32)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !255, file: !209, line: 66, baseType: !110, size: 32, offset: 32)
!259 = !{!150}
!260 = !DIGlobalVariableExpression(var: !261, expr: !DIExpression())
!261 = distinct !DIGlobalVariable(name: "done", scope: !27, file: !116, line: 21, type: !109, isLocal: true, isDefinition: true)
!262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !118, line: 2720, size: 160, elements: !263)
!263 = !{!264, !265, !267, !268}
!264 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !262, file: !118, line: 2722, baseType: !121, size: 64)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !262, file: !118, line: 2724, baseType: !266, size: 32, offset: 64)
!266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !155, size: 32)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !262, file: !118, line: 2727, baseType: !110, size: 32, offset: 96)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !262, file: !118, line: 2730, baseType: !109, size: 32, offset: 128)
!269 = !DIGlobalVariableExpression(var: !270, expr: !DIExpression())
!270 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !271, file: !288, line: 18, type: !289, isLocal: false, isDefinition: true)
!271 = distinct !DICompileUnit(language: DW_LANG_C99, file: !272, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !273, globals: !287, splitDebugInlining: false, nameTableKind: None)
!272 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple")
!273 = !{!22, !107, !24, !274, !276, !278, !232, !109, !281, !282, !283, !284, !285, !286, !192, !279}
!274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !275, size: 32)
!275 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 32)
!277 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !279, size: 32)
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 32)
!280 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !148)
!281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 32)
!282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 32)
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 32)
!285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !148, size: 32)
!286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !178, size: 32)
!287 = !{!269}
!288 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!289 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !290)
!290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !291, line: 16, size: 64, elements: !292)
!291 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!292 = !{!293, !294}
!293 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !290, file: !291, line: 17, baseType: !279, size: 32)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !290, file: !291, line: 18, baseType: !178, size: 8, offset: 32)
!295 = !DIGlobalVariableExpression(var: !296, expr: !DIExpression())
!296 = distinct !DIGlobalVariable(name: "_char_out", scope: !297, file: !301, line: 54, type: !302, isLocal: false, isDefinition: true)
!297 = distinct !DICompileUnit(language: DW_LANG_C99, file: !298, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, globals: !300, splitDebugInlining: false, nameTableKind: None)
!298 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple")
!299 = !{!107, !109}
!300 = !{!295}
!301 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !303, size: 32)
!303 = !DISubroutineType(types: !304)
!304 = !{!109, !109}
!305 = !DIGlobalVariableExpression(var: !306, expr: !DIExpression())
!306 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !307, file: !324, line: 56, type: !325, isLocal: true, isDefinition: true, align: 32)
!307 = distinct !DICompileUnit(language: DW_LANG_C99, file: !308, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !309, globals: !323, splitDebugInlining: false, nameTableKind: None)
!308 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple")
!309 = !{!310}
!310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !311, size: 32)
!311 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !312, line: 369, baseType: !313)
!312 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f405xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!313 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 360, size: 224, elements: !314)
!314 = !{!315, !317, !318, !319, !320, !321, !322}
!315 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !313, file: !312, line: 362, baseType: !316, size: 32)
!316 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !110)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !313, file: !312, line: 363, baseType: !316, size: 32, offset: 32)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !313, file: !312, line: 364, baseType: !316, size: 32, offset: 64)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !313, file: !312, line: 365, baseType: !316, size: 32, offset: 96)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !313, file: !312, line: 366, baseType: !316, size: 32, offset: 128)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !313, file: !312, line: 367, baseType: !316, size: 32, offset: 160)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !313, file: !312, line: 368, baseType: !316, size: 32, offset: 192)
!323 = !{!305}
!324 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!325 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !326)
!326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !328)
!327 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!328 = !{!329, !355}
!329 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !326, file: !327, line: 60, baseType: !330, size: 32)
!330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 32)
!331 = !DISubroutineType(types: !332)
!332 = !{!109, !333}
!333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !334, size: 32)
!334 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !335)
!335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !337)
!336 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!337 = !{!338, !339, !340, !341, !348, !349}
!338 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !335, file: !336, line: 380, baseType: !279, size: 32)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !335, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !335, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !335, file: !336, line: 386, baseType: !342, size: 32, offset: 96)
!342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !343, size: 32)
!343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !344)
!344 = !{!345, !346}
!345 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !343, file: !336, line: 359, baseType: !178, size: 8)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !343, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!347 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !335, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !335, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !351, size: 32)
!351 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !352)
!352 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !336, line: 43, baseType: !353)
!353 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !354)
!354 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !326, file: !327, line: 65, baseType: !333, size: 32, offset: 32)
!356 = !DIGlobalVariableExpression(var: !357, expr: !DIExpression())
!357 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !358, file: !361, line: 71, type: !362, isLocal: true, isDefinition: true, align: 32)
!358 = distinct !DICompileUnit(language: DW_LANG_C99, file: !359, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !360, splitDebugInlining: false, nameTableKind: None)
!359 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple")
!360 = !{!356}
!361 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!362 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !363)
!363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !364)
!364 = !{!365, !384}
!365 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !363, file: !327, line: 60, baseType: !366, size: 32)
!366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !367, size: 32)
!367 = !DISubroutineType(types: !368)
!368 = !{!109, !369}
!369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !370, size: 32)
!370 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !371)
!371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !372)
!372 = !{!373, !374, !375, !376, !382, !383}
!373 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !371, file: !336, line: 380, baseType: !279, size: 32)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !371, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !371, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !371, file: !336, line: 386, baseType: !377, size: 32, offset: 96)
!377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !378, size: 32)
!378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !379)
!379 = !{!380, !381}
!380 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !378, file: !336, line: 359, baseType: !178, size: 8)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !378, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !371, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !371, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !363, file: !327, line: 65, baseType: !369, size: 32, offset: 32)
!385 = !DIGlobalVariableExpression(var: !386, expr: !DIExpression())
!386 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !387, file: !394, line: 17, type: !523, isLocal: false, isDefinition: true)
!387 = distinct !DICompileUnit(language: DW_LANG_C99, file: !388, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !389, globals: !390, splitDebugInlining: false, nameTableKind: None)
!388 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple")
!389 = !{!232, !109, !110, !107}
!390 = !{!385, !391, !519}
!391 = !DIGlobalVariableExpression(var: !392, expr: !DIExpression())
!392 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !393, file: !394, line: 198, type: !505, isLocal: true, isDefinition: true)
!393 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !394, file: !394, line: 175, type: !395, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !500)
!394 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!395 = !DISubroutineType(types: !396)
!396 = !{null, !397}
!397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !398, size: 32)
!398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1280, elements: !399)
!399 = !{!400, !458, !470, !471, !472, !473, !474, !480, !495}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !398, file: !156, line: 247, baseType: !401, size: 384)
!401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 384, elements: !402)
!402 = !{!403, !427, !434, !435, !436, !445, !446, !447}
!403 = !DIDerivedType(tag: DW_TAG_member, scope: !401, file: !156, line: 60, baseType: !404, size: 64)
!404 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !401, file: !156, line: 60, size: 64, elements: !405)
!405 = !{!406, !421}
!406 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !404, file: !156, line: 61, baseType: !407, size: 64)
!407 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !408)
!408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !409)
!409 = !{!410, !416}
!410 = !DIDerivedType(tag: DW_TAG_member, scope: !408, file: !127, line: 38, baseType: !411, size: 32)
!411 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !408, file: !127, line: 38, size: 32, elements: !412)
!412 = !{!413, !415}
!413 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !411, file: !127, line: 39, baseType: !414, size: 32)
!414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !408, size: 32)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !411, file: !127, line: 40, baseType: !414, size: 32)
!416 = !DIDerivedType(tag: DW_TAG_member, scope: !408, file: !127, line: 42, baseType: !417, size: 32, offset: 32)
!417 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !408, file: !127, line: 42, size: 32, elements: !418)
!418 = !{!419, !420}
!419 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !417, file: !127, line: 43, baseType: !414, size: 32)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !417, file: !127, line: 44, baseType: !414, size: 32)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !404, file: !156, line: 62, baseType: !422, size: 64)
!422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !423)
!423 = !{!424}
!424 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !422, file: !168, line: 50, baseType: !425, size: 64)
!425 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 64, elements: !173)
!426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 32)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !401, file: !156, line: 68, baseType: !428, size: 32, offset: 64)
!428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !429, size: 32)
!429 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !430)
!430 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !431)
!431 = !{!432}
!432 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !430, file: !122, line: 232, baseType: !433, size: 64)
!433 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !408)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !401, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !401, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!436 = !DIDerivedType(tag: DW_TAG_member, scope: !401, file: !156, line: 90, baseType: !437, size: 16, offset: 112)
!437 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !401, file: !156, line: 90, size: 16, elements: !438)
!438 = !{!439, !444}
!439 = !DIDerivedType(tag: DW_TAG_member, scope: !437, file: !156, line: 91, baseType: !440, size: 16)
!440 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !437, file: !156, line: 91, size: 16, elements: !441)
!441 = !{!442, !443}
!442 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !440, file: !156, line: 96, baseType: !188, size: 8)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !440, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !437, file: !156, line: 100, baseType: !192, size: 16)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !401, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !401, file: !156, line: 127, baseType: !107, size: 32, offset: 160)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !401, file: !156, line: 131, baseType: !448, size: 192, offset: 192)
!448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !449)
!449 = !{!450, !451, !457}
!450 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !448, file: !122, line: 245, baseType: !407, size: 64)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !448, file: !122, line: 246, baseType: !452, size: 32, offset: 64)
!452 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !453)
!453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !454, size: 32)
!454 = !DISubroutineType(types: !455)
!455 = !{null, !456}
!456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !448, size: 32)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !448, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !398, file: !156, line: 250, baseType: !459, size: 288, offset: 384)
!459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !460)
!460 = !{!461, !462, !463, !464, !465, !466, !467, !468, !469}
!461 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !459, file: !209, line: 26, baseType: !110, size: 32)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !459, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !459, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !459, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !459, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !459, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !459, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !459, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !459, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !398, file: !156, line: 253, baseType: !107, size: 32, offset: 672)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !398, file: !156, line: 256, baseType: !429, size: 64, offset: 704)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !398, file: !156, line: 279, baseType: !223, size: 256, offset: 768)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !398, file: !156, line: 294, baseType: !109, size: 32, offset: 1024)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !398, file: !156, line: 300, baseType: !475, size: 96, offset: 1056)
!475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !476)
!476 = !{!477, !478, !479}
!477 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !475, file: !156, line: 153, baseType: !22, size: 32)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !475, file: !156, line: 162, baseType: !232, size: 32, offset: 32)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !475, file: !156, line: 168, baseType: !232, size: 32, offset: 64)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !398, file: !156, line: 325, baseType: !481, size: 32, offset: 1152)
!481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !482, size: 32)
!482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !483)
!483 = !{!484, !490, !491}
!484 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !482, file: !118, line: 5074, baseType: !485, size: 96)
!485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !241, line: 56, size: 96, elements: !486)
!486 = !{!487, !488, !489}
!487 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !485, file: !241, line: 57, baseType: !244, size: 32)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !485, file: !241, line: 58, baseType: !107, size: 32, offset: 32)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !485, file: !241, line: 59, baseType: !232, size: 32, offset: 64)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !482, file: !118, line: 5075, baseType: !429, size: 64, offset: 96)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !482, file: !118, line: 5076, baseType: !492, size: 32, offset: 160)
!492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !493)
!493 = !{!494}
!494 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !492, file: !251, line: 52, baseType: !22, size: 32)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !398, file: !156, line: 343, baseType: !496, size: 64, offset: 1184)
!496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !209, line: 60, size: 64, elements: !497)
!497 = !{!498, !499}
!498 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !496, file: !209, line: 63, baseType: !110, size: 32)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !496, file: !209, line: 66, baseType: !110, size: 32, offset: 32)
!500 = !{!501, !502, !503, !504}
!501 = !DILocalVariable(name: "thread", arg: 1, scope: !393, file: !394, line: 175, type: !397)
!502 = !DILocalVariable(name: "region_num", scope: !393, file: !394, line: 200, type: !178)
!503 = !DILocalVariable(name: "guard_start", scope: !393, file: !394, line: 265, type: !22)
!504 = !DILocalVariable(name: "guard_size", scope: !393, file: !394, line: 266, type: !232)
!505 = !DICompositeType(tag: DW_TAG_array_type, baseType: !506, size: 96, elements: !517)
!506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !507, line: 52, size: 96, elements: !508)
!507 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!508 = !{!509, !510, !511}
!509 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !506, file: !507, line: 53, baseType: !22, size: 32)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !506, file: !507, line: 54, baseType: !232, size: 32, offset: 32)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !506, file: !507, line: 55, baseType: !512, size: 32, offset: 64)
!512 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !513, line: 151, baseType: !514)
!513 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!514 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !513, line: 149, size: 32, elements: !515)
!515 = !{!516}
!516 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !514, file: !513, line: 150, baseType: !110, size: 32)
!517 = !{!518}
!518 = !DISubrange(count: 1)
!519 = !DIGlobalVariableExpression(var: !520, expr: !DIExpression())
!520 = distinct !DIGlobalVariable(name: "static_regions", scope: !387, file: !394, line: 62, type: !521, isLocal: true, isDefinition: true)
!521 = !DICompositeType(tag: DW_TAG_array_type, baseType: !522, size: 96, elements: !517)
!522 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !506)
!523 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !524)
!524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !291, line: 16, size: 64, elements: !525)
!525 = !{!526, !527}
!526 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !524, file: !291, line: 17, baseType: !279, size: 32)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !524, file: !291, line: 18, baseType: !178, size: 8, offset: 32)
!528 = !DIGlobalVariableExpression(var: !529, expr: !DIExpression())
!529 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !530, file: !563, line: 39, type: !178, isLocal: true, isDefinition: true)
!530 = distinct !DICompileUnit(language: DW_LANG_C99, file: !531, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !532, globals: !562, splitDebugInlining: false, nameTableKind: None)
!531 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple")
!532 = !{!533, !107, !109, !550, !178}
!533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !534, size: 32)
!534 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !535, line: 1226, baseType: !536)
!535 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!536 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 1213, size: 352, elements: !537)
!537 = !{!538, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549}
!538 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !536, file: !535, line: 1215, baseType: !539, size: 32)
!539 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !316)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !536, file: !535, line: 1216, baseType: !316, size: 32, offset: 32)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !536, file: !535, line: 1217, baseType: !316, size: 32, offset: 64)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !536, file: !535, line: 1218, baseType: !316, size: 32, offset: 96)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !536, file: !535, line: 1219, baseType: !316, size: 32, offset: 128)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !536, file: !535, line: 1220, baseType: !316, size: 32, offset: 160)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !536, file: !535, line: 1221, baseType: !316, size: 32, offset: 192)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !536, file: !535, line: 1222, baseType: !316, size: 32, offset: 224)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !536, file: !535, line: 1223, baseType: !316, size: 32, offset: 256)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !536, file: !535, line: 1224, baseType: !316, size: 32, offset: 288)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !536, file: !535, line: 1225, baseType: !316, size: 32, offset: 320)
!550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !551, size: 32)
!551 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !552)
!552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !553, line: 27, size: 96, elements: !554)
!553 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!554 = !{!555, !556, !557}
!555 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !552, file: !553, line: 29, baseType: !110, size: 32)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !552, file: !553, line: 31, baseType: !279, size: 32, offset: 32)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !552, file: !553, line: 37, baseType: !558, size: 32, offset: 64)
!558 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !513, line: 146, baseType: !559)
!559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !513, line: 141, size: 32, elements: !560)
!560 = !{!561}
!561 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !559, file: !513, line: 143, baseType: !110, size: 32)
!562 = !{!528}
!563 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!564 = !DIGlobalVariableExpression(var: !565, expr: !DIExpression())
!565 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !566, file: !573, line: 21, type: !302, isLocal: true, isDefinition: true)
!566 = distinct !DICompileUnit(language: DW_LANG_C99, file: !567, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !568, globals: !572, splitDebugInlining: false, nameTableKind: None)
!567 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple")
!568 = !{!569, !109, !107}
!569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !570, size: 32)
!570 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !571, line: 22, baseType: !109)
!571 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!572 = !{!564}
!573 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!574 = !DIGlobalVariableExpression(var: !575, expr: !DIExpression())
!575 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !576, file: !581, line: 13, type: !598, isLocal: true, isDefinition: true)
!576 = distinct !DICompileUnit(language: DW_LANG_C99, file: !577, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !578, splitDebugInlining: false, nameTableKind: None)
!577 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple")
!578 = !{!579, !574}
!579 = !DIGlobalVariableExpression(var: !580, expr: !DIExpression())
!580 = distinct !DIGlobalVariable(name: "mpu_config", scope: !576, file: !581, line: 37, type: !582, isLocal: false, isDefinition: true)
!581 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!582 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !583)
!583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !553, line: 41, size: 64, elements: !584)
!584 = !{!585, !586}
!585 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !583, file: !553, line: 43, baseType: !110, size: 32)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !583, file: !553, line: 45, baseType: !587, size: 32, offset: 32)
!587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !588, size: 32)
!588 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !589)
!589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !553, line: 27, size: 96, elements: !590)
!590 = !{!591, !592, !593}
!591 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !589, file: !553, line: 29, baseType: !110, size: 32)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !589, file: !553, line: 31, baseType: !279, size: 32, offset: 32)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !589, file: !553, line: 37, baseType: !594, size: 32, offset: 64)
!594 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !513, line: 146, baseType: !595)
!595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !513, line: 141, size: 32, elements: !596)
!596 = !{!597}
!597 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !595, file: !513, line: 143, baseType: !110, size: 32)
!598 = !DICompositeType(tag: DW_TAG_array_type, baseType: !588, size: 192, elements: !173)
!599 = !DIGlobalVariableExpression(var: !600, expr: !DIExpression())
!600 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !601, file: !706, line: 72, type: !790, isLocal: true, isDefinition: true)
!601 = distinct !DICompileUnit(language: DW_LANG_C99, file: !602, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !603, retainedTypes: !692, globals: !703, splitDebugInlining: false, nameTableKind: None)
!602 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple")
!603 = !{!30, !604}
!604 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !312, line: 65, baseType: !109, size: 32, elements: !605)
!605 = !{!606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691}
!606 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!607 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!608 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!609 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!610 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!611 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!612 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!613 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!614 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!615 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!616 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!617 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!618 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!619 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!620 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!621 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!622 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!623 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!624 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!625 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!626 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!627 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!628 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!629 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!630 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!631 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!632 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!633 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!634 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!635 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!636 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!637 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!638 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!639 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!640 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!641 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!642 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!643 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!644 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!645 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!646 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!647 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!648 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!649 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!650 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!651 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!652 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!653 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!654 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!655 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!656 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!657 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!658 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!659 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!660 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!661 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!662 = !DIEnumerator(name: "FSMC_IRQn", value: 48)
!663 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!664 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!665 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!666 = !DIEnumerator(name: "UART4_IRQn", value: 52)
!667 = !DIEnumerator(name: "UART5_IRQn", value: 53)
!668 = !DIEnumerator(name: "TIM6_DAC_IRQn", value: 54)
!669 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!670 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!671 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!672 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!673 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!674 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!675 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!676 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!677 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!678 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!679 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!680 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!681 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!682 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!683 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!684 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!685 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!686 = !DIEnumerator(name: "OTG_HS_EP1_OUT_IRQn", value: 74)
!687 = !DIEnumerator(name: "OTG_HS_EP1_IN_IRQn", value: 75)
!688 = !DIEnumerator(name: "OTG_HS_WKUP_IRQn", value: 76)
!689 = !DIEnumerator(name: "OTG_HS_IRQn", value: 77)
!690 = !DIEnumerator(name: "RNG_IRQn", value: 80)
!691 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!692 = !{!232, !109, !107, !693}
!693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !694, size: 32)
!694 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !312, line: 354, baseType: !695)
!695 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 346, size: 192, elements: !696)
!696 = !{!697, !698, !699, !700, !701, !702}
!697 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !695, file: !312, line: 348, baseType: !316, size: 32)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !695, file: !312, line: 349, baseType: !316, size: 32, offset: 32)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !695, file: !312, line: 350, baseType: !316, size: 32, offset: 64)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !695, file: !312, line: 351, baseType: !316, size: 32, offset: 96)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !695, file: !312, line: 352, baseType: !316, size: 32, offset: 128)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !695, file: !312, line: 353, baseType: !316, size: 32, offset: 160)
!703 = !{!704, !710, !726, !737, !754, !599, !756, !770, !772, !774, !776, !778, !780, !782, !784, !786, !788}
!704 = !DIGlobalVariableExpression(var: !705, expr: !DIExpression())
!705 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_37", scope: !601, file: !706, line: 424, type: !707, isLocal: false, isDefinition: true, align: 16)
!706 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!707 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 64, elements: !708)
!708 = !{!709}
!709 = !DISubrange(count: 4)
!710 = !DIGlobalVariableExpression(var: !711, expr: !DIExpression())
!711 = distinct !DIGlobalVariable(name: "__device_dts_ord_37", scope: !601, file: !706, line: 424, type: !712, isLocal: false, isDefinition: true, align: 32)
!712 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !713)
!713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !714)
!714 = !{!715, !716, !717, !718, !724, !725}
!715 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !713, file: !336, line: 380, baseType: !279, size: 32)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !713, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !713, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !713, file: !336, line: 386, baseType: !719, size: 32, offset: 96)
!719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !720, size: 32)
!720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !721)
!721 = !{!722, !723}
!722 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !720, file: !336, line: 359, baseType: !178, size: 8)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !720, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !713, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !713, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!726 = !DIGlobalVariableExpression(var: !727, expr: !DIExpression())
!727 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_37", scope: !601, file: !706, line: 424, type: !728, isLocal: true, isDefinition: true, align: 32)
!728 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !729)
!729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !730)
!730 = !{!731, !736}
!731 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !729, file: !327, line: 60, baseType: !732, size: 32)
!732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !733, size: 32)
!733 = !DISubroutineType(types: !734)
!734 = !{!109, !735}
!735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !712, size: 32)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !729, file: !327, line: 65, baseType: !735, size: 32, offset: 32)
!737 = !DIGlobalVariableExpression(var: !738, expr: !DIExpression())
!738 = distinct !DIGlobalVariable(name: "exti_data", scope: !601, file: !706, line: 423, type: !739, isLocal: true, isDefinition: true)
!739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !706, line: 107, size: 1472, elements: !740)
!740 = !{!741}
!741 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !739, file: !706, line: 109, baseType: !742, size: 1472)
!742 = !DICompositeType(tag: DW_TAG_array_type, baseType: !743, size: 1472, elements: !752)
!743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !706, line: 101, size: 64, elements: !744)
!744 = !{!745, !751}
!745 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !743, file: !706, line: 102, baseType: !746, size: 32)
!746 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !747, line: 63, baseType: !748)
!747 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !749, size: 32)
!749 = !DISubroutineType(types: !750)
!750 = !{null, !109, !107}
!751 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !743, file: !706, line: 103, baseType: !107, size: 32, offset: 32)
!752 = !{!753}
!753 = !DISubrange(count: 23)
!754 = !DIGlobalVariableExpression(var: !755, expr: !DIExpression())
!755 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_37", scope: !601, file: !706, line: 424, type: !720, isLocal: true, isDefinition: true, align: 8)
!756 = !DIGlobalVariableExpression(var: !757, expr: !DIExpression())
!757 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !758, file: !706, line: 493, type: !763, isLocal: true, isDefinition: true, align: 32)
!758 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !706, file: !706, line: 460, type: !759, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !761)
!759 = !DISubroutineType(types: !760)
!760 = !{null, !735}
!761 = !{!762}
!762 = !DILocalVariable(name: "dev", arg: 1, scope: !758, file: !706, line: 460, type: !735)
!763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !764)
!764 = !{!765, !767, !768, !769}
!765 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !763, file: !10, line: 55, baseType: !766, size: 32)
!766 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !109)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !763, file: !10, line: 57, baseType: !766, size: 32, offset: 32)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !763, file: !10, line: 59, baseType: !107, size: 32, offset: 64)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !763, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!770 = !DIGlobalVariableExpression(var: !771, expr: !DIExpression())
!771 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !758, file: !706, line: 497, type: !763, isLocal: true, isDefinition: true, align: 32)
!772 = !DIGlobalVariableExpression(var: !773, expr: !DIExpression())
!773 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !758, file: !706, line: 507, type: !763, isLocal: true, isDefinition: true, align: 32)
!774 = !DIGlobalVariableExpression(var: !775, expr: !DIExpression())
!775 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !758, file: !706, line: 512, type: !763, isLocal: true, isDefinition: true, align: 32)
!776 = !DIGlobalVariableExpression(var: !777, expr: !DIExpression())
!777 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !758, file: !706, line: 516, type: !763, isLocal: true, isDefinition: true, align: 32)
!778 = !DIGlobalVariableExpression(var: !779, expr: !DIExpression())
!779 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !758, file: !706, line: 523, type: !763, isLocal: true, isDefinition: true, align: 32)
!780 = !DIGlobalVariableExpression(var: !781, expr: !DIExpression())
!781 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !758, file: !706, line: 527, type: !763, isLocal: true, isDefinition: true, align: 32)
!782 = !DIGlobalVariableExpression(var: !783, expr: !DIExpression())
!783 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !758, file: !706, line: 581, type: !763, isLocal: true, isDefinition: true, align: 32)
!784 = !DIGlobalVariableExpression(var: !785, expr: !DIExpression())
!785 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !758, file: !706, line: 586, type: !763, isLocal: true, isDefinition: true, align: 32)
!786 = !DIGlobalVariableExpression(var: !787, expr: !DIExpression())
!787 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !758, file: !706, line: 591, type: !763, isLocal: true, isDefinition: true, align: 32)
!788 = !DIGlobalVariableExpression(var: !789, expr: !DIExpression())
!789 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !758, file: !706, line: 595, type: !763, isLocal: true, isDefinition: true, align: 32)
!790 = !DICompositeType(tag: DW_TAG_array_type, baseType: !791, size: 736, elements: !752)
!791 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !792)
!792 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !312, line: 155, baseType: !604)
!793 = !DIGlobalVariableExpression(var: !794, expr: !DIExpression())
!794 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_37", scope: !795, file: !800, line: 23, type: !824, isLocal: false, isDefinition: true, align: 16)
!795 = distinct !DICompileUnit(language: DW_LANG_C99, file: !796, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !797, splitDebugInlining: false, nameTableKind: None)
!796 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple")
!797 = !{!798, !793, !804, !806, !808, !810, !812, !814, !816, !818, !820, !822}
!798 = !DIGlobalVariableExpression(var: !799, expr: !DIExpression())
!799 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !795, file: !800, line: 18, type: !801, isLocal: false, isDefinition: true, align: 16)
!800 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple")
!801 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 208, elements: !802)
!802 = !{!803}
!803 = !DISubrange(count: 13)
!804 = !DIGlobalVariableExpression(var: !805, expr: !DIExpression())
!805 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !795, file: !800, line: 30, type: !707, isLocal: false, isDefinition: true, align: 16)
!806 = !DIGlobalVariableExpression(var: !807, expr: !DIExpression())
!807 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !795, file: !800, line: 37, type: !707, isLocal: false, isDefinition: true, align: 16)
!808 = !DIGlobalVariableExpression(var: !809, expr: !DIExpression())
!809 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !795, file: !800, line: 44, type: !707, isLocal: false, isDefinition: true, align: 16)
!810 = !DIGlobalVariableExpression(var: !811, expr: !DIExpression())
!811 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !795, file: !800, line: 51, type: !707, isLocal: false, isDefinition: true, align: 16)
!812 = !DIGlobalVariableExpression(var: !813, expr: !DIExpression())
!813 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !795, file: !800, line: 58, type: !707, isLocal: false, isDefinition: true, align: 16)
!814 = !DIGlobalVariableExpression(var: !815, expr: !DIExpression())
!815 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !795, file: !800, line: 65, type: !707, isLocal: false, isDefinition: true, align: 16)
!816 = !DIGlobalVariableExpression(var: !817, expr: !DIExpression())
!817 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_21", scope: !795, file: !800, line: 72, type: !707, isLocal: false, isDefinition: true, align: 16)
!818 = !DIGlobalVariableExpression(var: !819, expr: !DIExpression())
!819 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !795, file: !800, line: 79, type: !707, isLocal: false, isDefinition: true, align: 16)
!820 = !DIGlobalVariableExpression(var: !821, expr: !DIExpression())
!821 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_74", scope: !795, file: !800, line: 86, type: !707, isLocal: false, isDefinition: true, align: 16)
!822 = !DIGlobalVariableExpression(var: !823, expr: !DIExpression())
!823 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !795, file: !800, line: 93, type: !707, isLocal: false, isDefinition: true, align: 16)
!824 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 48, elements: !825)
!825 = !{!826}
!826 = !DISubrange(count: 3)
!827 = !DIGlobalVariableExpression(var: !828, expr: !DIExpression())
!828 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !829, file: !890, line: 398, type: !923, isLocal: true, isDefinition: true)
!829 = distinct !DICompileUnit(language: DW_LANG_C99, file: !830, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !831, retainedTypes: !844, globals: !887, splitDebugInlining: false, nameTableKind: None)
!830 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple")
!831 = !{!832, !30, !837}
!832 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !833, line: 197, baseType: !32, size: 32, elements: !834)
!833 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!834 = !{!835, !836}
!835 = !DIEnumerator(name: "SUCCESS", value: 0)
!836 = !DIEnumerator(name: "ERROR", value: 1)
!837 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !838, line: 44, baseType: !32, size: 32, elements: !839)
!838 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!839 = !{!840, !841, !842, !843}
!840 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!841 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!842 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!843 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!844 = !{!107, !109, !110, !845, !880, !886}
!845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !846, size: 32)
!846 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !312, line: 532, baseType: !847)
!847 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 500, size: 1088, elements: !848)
!848 = !{!849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879}
!849 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !847, file: !312, line: 502, baseType: !316, size: 32)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !847, file: !312, line: 503, baseType: !316, size: 32, offset: 32)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !847, file: !312, line: 504, baseType: !316, size: 32, offset: 64)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !847, file: !312, line: 505, baseType: !316, size: 32, offset: 96)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !847, file: !312, line: 506, baseType: !316, size: 32, offset: 128)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !847, file: !312, line: 507, baseType: !316, size: 32, offset: 160)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !847, file: !312, line: 508, baseType: !316, size: 32, offset: 192)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !847, file: !312, line: 509, baseType: !110, size: 32, offset: 224)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !847, file: !312, line: 510, baseType: !316, size: 32, offset: 256)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !847, file: !312, line: 511, baseType: !316, size: 32, offset: 288)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !847, file: !312, line: 512, baseType: !860, size: 64, offset: 320)
!860 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 64, elements: !173)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !847, file: !312, line: 513, baseType: !316, size: 32, offset: 384)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !847, file: !312, line: 514, baseType: !316, size: 32, offset: 416)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !847, file: !312, line: 515, baseType: !316, size: 32, offset: 448)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !847, file: !312, line: 516, baseType: !110, size: 32, offset: 480)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !847, file: !312, line: 517, baseType: !316, size: 32, offset: 512)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !847, file: !312, line: 518, baseType: !316, size: 32, offset: 544)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !847, file: !312, line: 519, baseType: !860, size: 64, offset: 576)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !847, file: !312, line: 520, baseType: !316, size: 32, offset: 640)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !847, file: !312, line: 521, baseType: !316, size: 32, offset: 672)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !847, file: !312, line: 522, baseType: !316, size: 32, offset: 704)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !847, file: !312, line: 523, baseType: !110, size: 32, offset: 736)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !847, file: !312, line: 524, baseType: !316, size: 32, offset: 768)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !847, file: !312, line: 525, baseType: !316, size: 32, offset: 800)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !847, file: !312, line: 526, baseType: !860, size: 64, offset: 832)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !847, file: !312, line: 527, baseType: !316, size: 32, offset: 896)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !847, file: !312, line: 528, baseType: !316, size: 32, offset: 928)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !847, file: !312, line: 529, baseType: !860, size: 64, offset: 960)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !847, file: !312, line: 530, baseType: !316, size: 32, offset: 1024)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !847, file: !312, line: 531, baseType: !316, size: 32, offset: 1056)
!880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !881, size: 32)
!881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !882, line: 343, size: 64, elements: !883)
!882 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!883 = !{!884, !885}
!884 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !881, file: !882, line: 344, baseType: !110, size: 32)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !881, file: !882, line: 345, baseType: !110, size: 32, offset: 32)
!886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !110, size: 32)
!887 = !{!888, !894, !910, !921, !827}
!888 = !DIGlobalVariableExpression(var: !889, expr: !DIExpression())
!889 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !829, file: !890, line: 752, type: !891, isLocal: false, isDefinition: true, align: 16)
!890 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!891 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 928, elements: !892)
!892 = !{!893}
!893 = !DISubrange(count: 58)
!894 = !DIGlobalVariableExpression(var: !895, expr: !DIExpression())
!895 = distinct !DIGlobalVariable(name: "__device_dts_ord_9", scope: !829, file: !890, line: 752, type: !896, isLocal: false, isDefinition: true, align: 32)
!896 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !897)
!897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !898)
!898 = !{!899, !900, !901, !902, !908, !909}
!899 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !897, file: !336, line: 380, baseType: !279, size: 32)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !897, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !897, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !897, file: !336, line: 386, baseType: !903, size: 32, offset: 96)
!903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !904, size: 32)
!904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !905)
!905 = !{!906, !907}
!906 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !904, file: !336, line: 359, baseType: !178, size: 8)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !904, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !897, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !897, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!910 = !DIGlobalVariableExpression(var: !911, expr: !DIExpression())
!911 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_9", scope: !829, file: !890, line: 752, type: !912, isLocal: true, isDefinition: true, align: 32)
!912 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !913)
!913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !914)
!914 = !{!915, !920}
!915 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !913, file: !327, line: 60, baseType: !916, size: 32)
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !917, size: 32)
!917 = !DISubroutineType(types: !918)
!918 = !{!109, !919}
!919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !896, size: 32)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !913, file: !327, line: 65, baseType: !919, size: 32, offset: 32)
!921 = !DIGlobalVariableExpression(var: !922, expr: !DIExpression())
!922 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_9", scope: !829, file: !890, line: 752, type: !904, isLocal: true, isDefinition: true, align: 8)
!923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !838, line: 100, size: 224, elements: !924)
!924 = !{!925, !931, !932, !941, !946, !951, !957}
!925 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !923, file: !838, line: 101, baseType: !926, size: 32)
!926 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !838, line: 76, baseType: !927)
!927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !928, size: 32)
!928 = !DISubroutineType(types: !929)
!929 = !{!109, !919, !930}
!930 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !838, line: 56, baseType: !107)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !923, file: !838, line: 102, baseType: !926, size: 32, offset: 32)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !923, file: !838, line: 103, baseType: !933, size: 32, offset: 64)
!933 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !838, line: 83, baseType: !934)
!934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !935, size: 32)
!935 = !DISubroutineType(types: !936)
!936 = !{!109, !919, !930, !937, !107}
!937 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !838, line: 72, baseType: !938)
!938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !939, size: 32)
!939 = !DISubroutineType(types: !940)
!940 = !{null, !919, !930, !107}
!941 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !923, file: !838, line: 104, baseType: !942, size: 32, offset: 96)
!942 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !838, line: 79, baseType: !943)
!943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !944, size: 32)
!944 = !DISubroutineType(types: !945)
!945 = !{!109, !919, !930, !886}
!946 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !923, file: !838, line: 105, baseType: !947, size: 32, offset: 128)
!947 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !838, line: 88, baseType: !948)
!948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !949, size: 32)
!949 = !DISubroutineType(types: !950)
!950 = !{!837, !919, !930}
!951 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !923, file: !838, line: 106, baseType: !952, size: 32, offset: 160)
!952 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !838, line: 92, baseType: !953)
!953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !954, size: 32)
!954 = !DISubroutineType(types: !955)
!955 = !{!109, !919, !930, !956}
!956 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !838, line: 64, baseType: !107)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !923, file: !838, line: 107, baseType: !958, size: 32, offset: 192)
!958 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !838, line: 96, baseType: !959)
!959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !960, size: 32)
!960 = !DISubroutineType(types: !961)
!961 = !{!109, !919, !930, !107}
!962 = !DIGlobalVariableExpression(var: !963, expr: !DIExpression())
!963 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !964, file: !1021, line: 603, type: !1023, isLocal: true, isDefinition: true, align: 32)
!964 = distinct !DICompileUnit(language: DW_LANG_C99, file: !965, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !966, globals: !1018, splitDebugInlining: false, nameTableKind: None)
!965 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple")
!966 = !{!107, !109, !967}
!967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !968, size: 32)
!968 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !969)
!969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !970, line: 336, size: 160, elements: !971)
!970 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!971 = !{!972, !992, !996, !1000, !1013}
!972 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !969, file: !970, line: 365, baseType: !973, size: 32)
!973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !974, size: 32)
!974 = !DISubroutineType(types: !975)
!975 = !{!109, !976, !991}
!976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !977, size: 32)
!977 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !978)
!978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !979)
!979 = !{!980, !981, !982, !983, !989, !990}
!980 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !978, file: !336, line: 380, baseType: !279, size: 32)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !978, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !978, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !978, file: !336, line: 386, baseType: !984, size: 32, offset: 96)
!984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !985, size: 32)
!985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !986)
!986 = !{!987, !988}
!987 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !985, file: !336, line: 359, baseType: !178, size: 8)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !985, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !978, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !978, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !179, size: 32)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !969, file: !970, line: 366, baseType: !993, size: 32, offset: 32)
!993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !994, size: 32)
!994 = !DISubroutineType(types: !995)
!995 = !{null, !976, !179}
!996 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !969, file: !970, line: 374, baseType: !997, size: 32, offset: 64)
!997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !998, size: 32)
!998 = !DISubroutineType(types: !999)
!999 = !{!109, !976}
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !969, file: !970, line: 377, baseType: !1001, size: 32, offset: 96)
!1001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1002, size: 32)
!1002 = !DISubroutineType(types: !1003)
!1003 = !{!109, !976, !1004}
!1004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1005, size: 32)
!1005 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1006)
!1006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !970, line: 122, size: 64, elements: !1007)
!1007 = !{!1008, !1009, !1010, !1011, !1012}
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1006, file: !970, line: 123, baseType: !110, size: 32)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1006, file: !970, line: 124, baseType: !178, size: 8, offset: 32)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1006, file: !970, line: 125, baseType: !178, size: 8, offset: 40)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1006, file: !970, line: 126, baseType: !178, size: 8, offset: 48)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1006, file: !970, line: 127, baseType: !178, size: 8, offset: 56)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !969, file: !970, line: 379, baseType: !1014, size: 32, offset: 128)
!1014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 32)
!1015 = !DISubroutineType(types: !1016)
!1016 = !{!109, !976, !1017}
!1017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1006, size: 32)
!1018 = !{!962, !1019}
!1019 = !DIGlobalVariableExpression(var: !1020, expr: !DIExpression())
!1020 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !964, file: !1021, line: 38, type: !1022, isLocal: true, isDefinition: true)
!1021 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1022 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !976)
!1023 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1024)
!1024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !1025)
!1025 = !{!1026, !1027}
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1024, file: !327, line: 60, baseType: !997, size: 32)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1024, file: !327, line: 65, baseType: !976, size: 32, offset: 32)
!1028 = !DIGlobalVariableExpression(var: !1029, expr: !DIExpression())
!1029 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1030, file: !1199, line: 762, type: !1318, isLocal: true, isDefinition: true)
!1030 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1031, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1032, retainedTypes: !1050, globals: !1196, splitDebugInlining: false, nameTableKind: None)
!1031 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple")
!1032 = !{!30, !1033, !1039, !1044, !837}
!1033 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1034, line: 506, baseType: !32, size: 32, elements: !1035)
!1034 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1035 = !{!1036, !1037, !1038}
!1036 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1037 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1038 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1039 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1034, line: 512, baseType: !32, size: 32, elements: !1040)
!1040 = !{!1041, !1042, !1043}
!1041 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1042 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1043 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1044 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !747, line: 43, baseType: !32, size: 32, elements: !1045)
!1045 = !{!1046, !1047, !1048, !1049}
!1046 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1047 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1048 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1049 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1050 = !{!107, !109, !1051, !1121, !1126, !1086, !1039, !1033, !1131, !1132, !110, !1146, !1101, !285, !1156, !1157}
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 32)
!1052 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1053)
!1053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1034, line: 523, size: 288, elements: !1054)
!1054 = !{!1055, !1076, !1082, !1087, !1091, !1092, !1093, !1097, !1117}
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1053, file: !1034, line: 524, baseType: !1056, size: 32)
!1056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1057, size: 32)
!1057 = !DISubroutineType(types: !1058)
!1058 = !{!109, !1059, !1074, !1075}
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 32)
!1060 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1061)
!1061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !1062)
!1062 = !{!1063, !1064, !1065, !1066, !1072, !1073}
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1061, file: !336, line: 380, baseType: !279, size: 32)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1061, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1061, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1061, file: !336, line: 386, baseType: !1067, size: 32, offset: 96)
!1067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1068, size: 32)
!1068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !1069)
!1069 = !{!1070, !1071}
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1068, file: !336, line: 359, baseType: !178, size: 8)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1068, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1061, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1061, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!1074 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1034, line: 237, baseType: !178)
!1075 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1034, line: 257, baseType: !110)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1053, file: !1034, line: 530, baseType: !1077, size: 32, offset: 32)
!1077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1078, size: 32)
!1078 = !DISubroutineType(types: !1079)
!1079 = !{!109, !1059, !1080}
!1080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1081, size: 32)
!1081 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1034, line: 229, baseType: !110)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1053, file: !1034, line: 532, baseType: !1083, size: 32, offset: 64)
!1083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1084, size: 32)
!1084 = !DISubroutineType(types: !1085)
!1085 = !{!109, !1059, !1086, !1081}
!1086 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1034, line: 216, baseType: !110)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1053, file: !1034, line: 535, baseType: !1088, size: 32, offset: 96)
!1088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1089, size: 32)
!1089 = !DISubroutineType(types: !1090)
!1090 = !{!109, !1059, !1086}
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1053, file: !1034, line: 537, baseType: !1088, size: 32, offset: 128)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1053, file: !1034, line: 539, baseType: !1088, size: 32, offset: 160)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1053, file: !1034, line: 541, baseType: !1094, size: 32, offset: 192)
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 32)
!1095 = !DISubroutineType(types: !1096)
!1096 = !{!109, !1059, !1074, !1033, !1039}
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1053, file: !1034, line: 544, baseType: !1098, size: 32, offset: 224)
!1098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1099, size: 32)
!1099 = !DISubroutineType(types: !1100)
!1100 = !{!109, !1059, !1101, !347}
!1101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1102, size: 32)
!1102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1034, line: 478, size: 96, elements: !1103)
!1103 = !{!1104, !1111, !1116}
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1102, file: !1034, line: 482, baseType: !1105, size: 32)
!1105 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1106, line: 33, baseType: !1107)
!1106 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1106, line: 29, size: 32, elements: !1108)
!1108 = !{!1109}
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1107, file: !1106, line: 30, baseType: !1110, size: 32)
!1110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1107, size: 32)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1102, file: !1034, line: 485, baseType: !1112, size: 32, offset: 32)
!1112 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1034, line: 464, baseType: !1113)
!1113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1114, size: 32)
!1114 = !DISubroutineType(types: !1115)
!1115 = !{null, !1059, !1101, !1086}
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1102, file: !1034, line: 493, baseType: !1086, size: 32, offset: 64)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1053, file: !1034, line: 547, baseType: !1118, size: 32, offset: 256)
!1118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1119, size: 32)
!1119 = !DISubroutineType(types: !1120)
!1120 = !{!110, !1059}
!1121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1122, size: 32)
!1122 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1123)
!1123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1034, line: 428, size: 32, elements: !1124)
!1124 = !{!1125}
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1123, file: !1034, line: 434, baseType: !1086, size: 32)
!1126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 32)
!1127 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1128)
!1128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1034, line: 441, size: 32, elements: !1129)
!1129 = !{!1130}
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1128, file: !1034, line: 447, baseType: !1086, size: 32)
!1131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 32)
!1132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1133, size: 32)
!1133 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !312, line: 441, baseType: !1134)
!1134 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 430, size: 320, elements: !1135)
!1135 = !{!1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144}
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1134, file: !312, line: 432, baseType: !316, size: 32)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1134, file: !312, line: 433, baseType: !316, size: 32, offset: 32)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1134, file: !312, line: 434, baseType: !316, size: 32, offset: 64)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1134, file: !312, line: 435, baseType: !316, size: 32, offset: 96)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1134, file: !312, line: 436, baseType: !316, size: 32, offset: 128)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1134, file: !312, line: 437, baseType: !316, size: 32, offset: 160)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1134, file: !312, line: 438, baseType: !316, size: 32, offset: 192)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1134, file: !312, line: 439, baseType: !316, size: 32, offset: 224)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1134, file: !312, line: 440, baseType: !1145, size: 64, offset: 256)
!1145 = !DICompositeType(tag: DW_TAG_array_type, baseType: !316, size: 64, elements: !173)
!1146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1147, size: 32)
!1147 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !312, line: 454, baseType: !1148)
!1148 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 447, size: 288, elements: !1149)
!1149 = !{!1150, !1151, !1152, !1154, !1155}
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1148, file: !312, line: 449, baseType: !316, size: 32)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1148, file: !312, line: 450, baseType: !316, size: 32, offset: 32)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1148, file: !312, line: 451, baseType: !1153, size: 128, offset: 64)
!1153 = !DICompositeType(tag: DW_TAG_array_type, baseType: !316, size: 128, elements: !708)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1148, file: !312, line: 452, baseType: !860, size: 64, offset: 192)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1148, file: !312, line: 453, baseType: !316, size: 32, offset: 256)
!1156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !930, size: 32)
!1157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1158, size: 32)
!1158 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1159)
!1159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !838, line: 100, size: 224, elements: !1160)
!1160 = !{!1161, !1166, !1167, !1176, !1181, !1186, !1191}
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1159, file: !838, line: 101, baseType: !1162, size: 32)
!1162 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !838, line: 76, baseType: !1163)
!1163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1164, size: 32)
!1164 = !DISubroutineType(types: !1165)
!1165 = !{!109, !1059, !930}
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1159, file: !838, line: 102, baseType: !1162, size: 32, offset: 32)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1159, file: !838, line: 103, baseType: !1168, size: 32, offset: 64)
!1168 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !838, line: 83, baseType: !1169)
!1169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1170, size: 32)
!1170 = !DISubroutineType(types: !1171)
!1171 = !{!109, !1059, !930, !1172, !107}
!1172 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !838, line: 72, baseType: !1173)
!1173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1174, size: 32)
!1174 = !DISubroutineType(types: !1175)
!1175 = !{null, !1059, !930, !107}
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1159, file: !838, line: 104, baseType: !1177, size: 32, offset: 96)
!1177 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !838, line: 79, baseType: !1178)
!1178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1179, size: 32)
!1179 = !DISubroutineType(types: !1180)
!1180 = !{!109, !1059, !930, !886}
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1159, file: !838, line: 105, baseType: !1182, size: 32, offset: 128)
!1182 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !838, line: 88, baseType: !1183)
!1183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1184, size: 32)
!1184 = !DISubroutineType(types: !1185)
!1185 = !{!837, !1059, !930}
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1159, file: !838, line: 106, baseType: !1187, size: 32, offset: 160)
!1187 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !838, line: 92, baseType: !1188)
!1188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1189, size: 32)
!1189 = !DISubroutineType(types: !1190)
!1190 = !{!109, !1059, !930, !956}
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1159, file: !838, line: 107, baseType: !1192, size: 32, offset: 192)
!1192 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !838, line: 96, baseType: !1193)
!1193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1194, size: 32)
!1194 = !DISubroutineType(types: !1195)
!1195 = !{!109, !1059, !930, !107}
!1196 = !{!1197, !1203, !1205, !1215, !1220, !1222, !1224, !1226, !1228, !1230, !1232, !1234, !1236, !1238, !1240, !1242, !1244, !1246, !1248, !1250, !1252, !1254, !1256, !1258, !1260, !1262, !1264, !1266, !1280, !1282, !1284, !1286, !1288, !1290, !1292, !1294, !1296, !1298, !1300, !1302, !1304, !1306, !1308, !1310, !1312, !1028, !1314, !1316, !1329, !1331, !1333, !1335, !1337, !1339, !1341}
!1197 = !DIGlobalVariableExpression(var: !1198, expr: !DIExpression())
!1198 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_74", scope: !1030, file: !1199, line: 762, type: !1200, isLocal: false, isDefinition: true, align: 16)
!1199 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1200 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 96, elements: !1201)
!1201 = !{!1202}
!1202 = !DISubrange(count: 6)
!1203 = !DIGlobalVariableExpression(var: !1204, expr: !DIExpression())
!1204 = distinct !DIGlobalVariable(name: "__device_dts_ord_74", scope: !1030, file: !1199, line: 762, type: !1060, isLocal: false, isDefinition: true, align: 32)
!1205 = !DIGlobalVariableExpression(var: !1206, expr: !DIExpression())
!1206 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_74", scope: !1030, file: !1199, line: 762, type: !1207, isLocal: true, isDefinition: true, align: 32)
!1207 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1208)
!1208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !1209)
!1209 = !{!1210, !1214}
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1208, file: !327, line: 60, baseType: !1211, size: 32)
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1212, size: 32)
!1212 = !DISubroutineType(types: !1213)
!1213 = !{!109, !1059}
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1208, file: !327, line: 65, baseType: !1059, size: 32, offset: 32)
!1215 = !DIGlobalVariableExpression(var: !1216, expr: !DIExpression())
!1216 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !1030, file: !1199, line: 766, type: !1217, isLocal: false, isDefinition: true, align: 16)
!1217 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 80, elements: !1218)
!1218 = !{!1219}
!1219 = !DISubrange(count: 5)
!1220 = !DIGlobalVariableExpression(var: !1221, expr: !DIExpression())
!1221 = distinct !DIGlobalVariable(name: "__device_dts_ord_67", scope: !1030, file: !1199, line: 766, type: !1060, isLocal: false, isDefinition: true, align: 32)
!1222 = !DIGlobalVariableExpression(var: !1223, expr: !DIExpression())
!1223 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_67", scope: !1030, file: !1199, line: 766, type: !1207, isLocal: true, isDefinition: true, align: 32)
!1224 = !DIGlobalVariableExpression(var: !1225, expr: !DIExpression())
!1225 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_21", scope: !1030, file: !1199, line: 770, type: !1200, isLocal: false, isDefinition: true, align: 16)
!1226 = !DIGlobalVariableExpression(var: !1227, expr: !DIExpression())
!1227 = distinct !DIGlobalVariable(name: "__device_dts_ord_21", scope: !1030, file: !1199, line: 770, type: !1060, isLocal: false, isDefinition: true, align: 32)
!1228 = !DIGlobalVariableExpression(var: !1229, expr: !DIExpression())
!1229 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_21", scope: !1030, file: !1199, line: 770, type: !1207, isLocal: true, isDefinition: true, align: 32)
!1230 = !DIGlobalVariableExpression(var: !1231, expr: !DIExpression())
!1231 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !1030, file: !1199, line: 774, type: !1217, isLocal: false, isDefinition: true, align: 16)
!1232 = !DIGlobalVariableExpression(var: !1233, expr: !DIExpression())
!1233 = distinct !DIGlobalVariable(name: "__device_dts_ord_68", scope: !1030, file: !1199, line: 774, type: !1060, isLocal: false, isDefinition: true, align: 32)
!1234 = !DIGlobalVariableExpression(var: !1235, expr: !DIExpression())
!1235 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_68", scope: !1030, file: !1199, line: 774, type: !1207, isLocal: true, isDefinition: true, align: 32)
!1236 = !DIGlobalVariableExpression(var: !1237, expr: !DIExpression())
!1237 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !1030, file: !1199, line: 778, type: !1217, isLocal: false, isDefinition: true, align: 16)
!1238 = !DIGlobalVariableExpression(var: !1239, expr: !DIExpression())
!1239 = distinct !DIGlobalVariable(name: "__device_dts_ord_69", scope: !1030, file: !1199, line: 778, type: !1060, isLocal: false, isDefinition: true, align: 32)
!1240 = !DIGlobalVariableExpression(var: !1241, expr: !DIExpression())
!1241 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_69", scope: !1030, file: !1199, line: 778, type: !1207, isLocal: true, isDefinition: true, align: 32)
!1242 = !DIGlobalVariableExpression(var: !1243, expr: !DIExpression())
!1243 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !1030, file: !1199, line: 782, type: !1217, isLocal: false, isDefinition: true, align: 16)
!1244 = !DIGlobalVariableExpression(var: !1245, expr: !DIExpression())
!1245 = distinct !DIGlobalVariable(name: "__device_dts_ord_70", scope: !1030, file: !1199, line: 782, type: !1060, isLocal: false, isDefinition: true, align: 32)
!1246 = !DIGlobalVariableExpression(var: !1247, expr: !DIExpression())
!1247 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_70", scope: !1030, file: !1199, line: 782, type: !1207, isLocal: true, isDefinition: true, align: 32)
!1248 = !DIGlobalVariableExpression(var: !1249, expr: !DIExpression())
!1249 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !1030, file: !1199, line: 786, type: !1217, isLocal: false, isDefinition: true, align: 16)
!1250 = !DIGlobalVariableExpression(var: !1251, expr: !DIExpression())
!1251 = distinct !DIGlobalVariable(name: "__device_dts_ord_71", scope: !1030, file: !1199, line: 786, type: !1060, isLocal: false, isDefinition: true, align: 32)
!1252 = !DIGlobalVariableExpression(var: !1253, expr: !DIExpression())
!1253 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_71", scope: !1030, file: !1199, line: 786, type: !1207, isLocal: true, isDefinition: true, align: 32)
!1254 = !DIGlobalVariableExpression(var: !1255, expr: !DIExpression())
!1255 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !1030, file: !1199, line: 790, type: !1217, isLocal: false, isDefinition: true, align: 16)
!1256 = !DIGlobalVariableExpression(var: !1257, expr: !DIExpression())
!1257 = distinct !DIGlobalVariable(name: "__device_dts_ord_72", scope: !1030, file: !1199, line: 790, type: !1060, isLocal: false, isDefinition: true, align: 32)
!1258 = !DIGlobalVariableExpression(var: !1259, expr: !DIExpression())
!1259 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_72", scope: !1030, file: !1199, line: 790, type: !1207, isLocal: true, isDefinition: true, align: 32)
!1260 = !DIGlobalVariableExpression(var: !1261, expr: !DIExpression())
!1261 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !1030, file: !1199, line: 794, type: !1217, isLocal: false, isDefinition: true, align: 16)
!1262 = !DIGlobalVariableExpression(var: !1263, expr: !DIExpression())
!1263 = distinct !DIGlobalVariable(name: "__device_dts_ord_73", scope: !1030, file: !1199, line: 794, type: !1060, isLocal: false, isDefinition: true, align: 32)
!1264 = !DIGlobalVariableExpression(var: !1265, expr: !DIExpression())
!1265 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_73", scope: !1030, file: !1199, line: 794, type: !1207, isLocal: true, isDefinition: true, align: 32)
!1266 = !DIGlobalVariableExpression(var: !1267, expr: !DIExpression())
!1267 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1030, file: !1199, line: 762, type: !1268, isLocal: true, isDefinition: true)
!1268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1269, line: 237, size: 128, elements: !1270)
!1269 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1270 = !{!1271, !1272, !1273}
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1268, file: !1269, line: 239, baseType: !1128, size: 32)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1268, file: !1269, line: 241, baseType: !1059, size: 32, offset: 32)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1268, file: !1269, line: 243, baseType: !1274, size: 64, offset: 64)
!1274 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1106, line: 40, baseType: !1275)
!1275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1106, line: 35, size: 64, elements: !1276)
!1276 = !{!1277, !1279}
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1275, file: !1106, line: 36, baseType: !1278, size: 32)
!1278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1105, size: 32)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1275, file: !1106, line: 37, baseType: !1278, size: 32, offset: 32)
!1280 = !DIGlobalVariableExpression(var: !1281, expr: !DIExpression())
!1281 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_74", scope: !1030, file: !1199, line: 762, type: !1068, isLocal: true, isDefinition: true, align: 8)
!1282 = !DIGlobalVariableExpression(var: !1283, expr: !DIExpression())
!1283 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1030, file: !1199, line: 766, type: !1268, isLocal: true, isDefinition: true)
!1284 = !DIGlobalVariableExpression(var: !1285, expr: !DIExpression())
!1285 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_67", scope: !1030, file: !1199, line: 766, type: !1068, isLocal: true, isDefinition: true, align: 8)
!1286 = !DIGlobalVariableExpression(var: !1287, expr: !DIExpression())
!1287 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1030, file: !1199, line: 770, type: !1268, isLocal: true, isDefinition: true)
!1288 = !DIGlobalVariableExpression(var: !1289, expr: !DIExpression())
!1289 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_21", scope: !1030, file: !1199, line: 770, type: !1068, isLocal: true, isDefinition: true, align: 8)
!1290 = !DIGlobalVariableExpression(var: !1291, expr: !DIExpression())
!1291 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1030, file: !1199, line: 774, type: !1268, isLocal: true, isDefinition: true)
!1292 = !DIGlobalVariableExpression(var: !1293, expr: !DIExpression())
!1293 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_68", scope: !1030, file: !1199, line: 774, type: !1068, isLocal: true, isDefinition: true, align: 8)
!1294 = !DIGlobalVariableExpression(var: !1295, expr: !DIExpression())
!1295 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1030, file: !1199, line: 778, type: !1268, isLocal: true, isDefinition: true)
!1296 = !DIGlobalVariableExpression(var: !1297, expr: !DIExpression())
!1297 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_69", scope: !1030, file: !1199, line: 778, type: !1068, isLocal: true, isDefinition: true, align: 8)
!1298 = !DIGlobalVariableExpression(var: !1299, expr: !DIExpression())
!1299 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1030, file: !1199, line: 782, type: !1268, isLocal: true, isDefinition: true)
!1300 = !DIGlobalVariableExpression(var: !1301, expr: !DIExpression())
!1301 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_70", scope: !1030, file: !1199, line: 782, type: !1068, isLocal: true, isDefinition: true, align: 8)
!1302 = !DIGlobalVariableExpression(var: !1303, expr: !DIExpression())
!1303 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1030, file: !1199, line: 786, type: !1268, isLocal: true, isDefinition: true)
!1304 = !DIGlobalVariableExpression(var: !1305, expr: !DIExpression())
!1305 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_71", scope: !1030, file: !1199, line: 786, type: !1068, isLocal: true, isDefinition: true, align: 8)
!1306 = !DIGlobalVariableExpression(var: !1307, expr: !DIExpression())
!1307 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1030, file: !1199, line: 790, type: !1268, isLocal: true, isDefinition: true)
!1308 = !DIGlobalVariableExpression(var: !1309, expr: !DIExpression())
!1309 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_72", scope: !1030, file: !1199, line: 790, type: !1068, isLocal: true, isDefinition: true, align: 8)
!1310 = !DIGlobalVariableExpression(var: !1311, expr: !DIExpression())
!1311 = distinct !DIGlobalVariable(name: "gpio_stm32_data_i", scope: !1030, file: !1199, line: 794, type: !1268, isLocal: true, isDefinition: true)
!1312 = !DIGlobalVariableExpression(var: !1313, expr: !DIExpression())
!1313 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_73", scope: !1030, file: !1199, line: 794, type: !1068, isLocal: true, isDefinition: true, align: 8)
!1314 = !DIGlobalVariableExpression(var: !1315, expr: !DIExpression())
!1315 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1030, file: !1199, line: 656, type: !1052, isLocal: true, isDefinition: true)
!1316 = !DIGlobalVariableExpression(var: !1317, expr: !DIExpression())
!1317 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1030, file: !1199, line: 766, type: !1318, isLocal: true, isDefinition: true)
!1318 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1319)
!1319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1269, line: 224, size: 160, elements: !1320)
!1320 = !{!1321, !1322, !1323, !1324}
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1319, file: !1269, line: 226, baseType: !1123, size: 32)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1319, file: !1269, line: 228, baseType: !886, size: 32, offset: 32)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1319, file: !1269, line: 230, baseType: !109, size: 32, offset: 64)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1319, file: !1269, line: 231, baseType: !1325, size: 64, offset: 96)
!1325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !882, line: 343, size: 64, elements: !1326)
!1326 = !{!1327, !1328}
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1325, file: !882, line: 344, baseType: !110, size: 32)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1325, file: !882, line: 345, baseType: !110, size: 32, offset: 32)
!1329 = !DIGlobalVariableExpression(var: !1330, expr: !DIExpression())
!1330 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1030, file: !1199, line: 770, type: !1318, isLocal: true, isDefinition: true)
!1331 = !DIGlobalVariableExpression(var: !1332, expr: !DIExpression())
!1332 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1030, file: !1199, line: 774, type: !1318, isLocal: true, isDefinition: true)
!1333 = !DIGlobalVariableExpression(var: !1334, expr: !DIExpression())
!1334 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1030, file: !1199, line: 778, type: !1318, isLocal: true, isDefinition: true)
!1335 = !DIGlobalVariableExpression(var: !1336, expr: !DIExpression())
!1336 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1030, file: !1199, line: 782, type: !1318, isLocal: true, isDefinition: true)
!1337 = !DIGlobalVariableExpression(var: !1338, expr: !DIExpression())
!1338 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1030, file: !1199, line: 786, type: !1318, isLocal: true, isDefinition: true)
!1339 = !DIGlobalVariableExpression(var: !1340, expr: !DIExpression())
!1340 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1030, file: !1199, line: 790, type: !1318, isLocal: true, isDefinition: true)
!1341 = !DIGlobalVariableExpression(var: !1342, expr: !DIExpression())
!1342 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_i", scope: !1030, file: !1199, line: 794, type: !1318, isLocal: true, isDefinition: true)
!1343 = !DIGlobalVariableExpression(var: !1344, expr: !DIExpression())
!1344 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1345, file: !1484, line: 44, type: !1562, isLocal: false, isDefinition: true)
!1345 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1346, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1347, retainedTypes: !1380, globals: !1481, splitDebugInlining: false, nameTableKind: None)
!1346 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple")
!1347 = !{!30, !1348, !1355, !1362, !1369, !1375, !837}
!1348 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !970, line: 47, baseType: !32, size: 32, elements: !1349)
!1349 = !{!1350, !1351, !1352, !1353, !1354}
!1350 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1351 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1352 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1353 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1354 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1355 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !970, line: 75, baseType: !32, size: 32, elements: !1356)
!1356 = !{!1357, !1358, !1359, !1360, !1361}
!1357 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1358 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1359 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1360 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1361 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1362 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !970, line: 92, baseType: !32, size: 32, elements: !1363)
!1363 = !{!1364, !1365, !1366, !1367, !1368}
!1364 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1365 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1366 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1367 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1368 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1369 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !970, line: 84, baseType: !32, size: 32, elements: !1370)
!1370 = !{!1371, !1372, !1373, !1374}
!1371 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1372 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1373 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1374 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1375 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !970, line: 107, baseType: !32, size: 32, elements: !1376)
!1376 = !{!1377, !1378, !1379}
!1377 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1378 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1379 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1380 = !{!107, !109, !1381, !179, !178, !1430, !110, !930, !1441, !192, !111, !1480}
!1381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1382, size: 32)
!1382 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1383)
!1383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !970, line: 336, size: 160, elements: !1384)
!1384 = !{!1385, !1404, !1408, !1412, !1425}
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1383, file: !970, line: 365, baseType: !1386, size: 32)
!1386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1387, size: 32)
!1387 = !DISubroutineType(types: !1388)
!1388 = !{!109, !1389, !991}
!1389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1390, size: 32)
!1390 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1391)
!1391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !1392)
!1392 = !{!1393, !1394, !1395, !1396, !1402, !1403}
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1391, file: !336, line: 380, baseType: !279, size: 32)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1391, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1391, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1391, file: !336, line: 386, baseType: !1397, size: 32, offset: 96)
!1397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1398, size: 32)
!1398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !1399)
!1399 = !{!1400, !1401}
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1398, file: !336, line: 359, baseType: !178, size: 8)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1398, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1391, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1391, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1383, file: !970, line: 366, baseType: !1405, size: 32, offset: 32)
!1405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1406, size: 32)
!1406 = !DISubroutineType(types: !1407)
!1407 = !{null, !1389, !179}
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1383, file: !970, line: 374, baseType: !1409, size: 32, offset: 64)
!1409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1410, size: 32)
!1410 = !DISubroutineType(types: !1411)
!1411 = !{!109, !1389}
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1383, file: !970, line: 377, baseType: !1413, size: 32, offset: 96)
!1413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1414, size: 32)
!1414 = !DISubroutineType(types: !1415)
!1415 = !{!109, !1389, !1416}
!1416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1417, size: 32)
!1417 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1418)
!1418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !970, line: 122, size: 64, elements: !1419)
!1419 = !{!1420, !1421, !1422, !1423, !1424}
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1418, file: !970, line: 123, baseType: !110, size: 32)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1418, file: !970, line: 124, baseType: !178, size: 8, offset: 32)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1418, file: !970, line: 125, baseType: !178, size: 8, offset: 40)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1418, file: !970, line: 126, baseType: !178, size: 8, offset: 48)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1418, file: !970, line: 127, baseType: !178, size: 8, offset: 56)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1383, file: !970, line: 379, baseType: !1426, size: 32, offset: 128)
!1426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1427, size: 32)
!1427 = !DISubroutineType(types: !1428)
!1428 = !{!109, !1389, !1429}
!1429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1418, size: 32)
!1430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1431, size: 32)
!1431 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !312, line: 670, baseType: !1432)
!1432 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 661, size: 224, elements: !1433)
!1433 = !{!1434, !1435, !1436, !1437, !1438, !1439, !1440}
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1432, file: !312, line: 663, baseType: !316, size: 32)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1432, file: !312, line: 664, baseType: !316, size: 32, offset: 32)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1432, file: !312, line: 665, baseType: !316, size: 32, offset: 64)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1432, file: !312, line: 666, baseType: !316, size: 32, offset: 96)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1432, file: !312, line: 667, baseType: !316, size: 32, offset: 128)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1432, file: !312, line: 668, baseType: !316, size: 32, offset: 160)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1432, file: !312, line: 669, baseType: !316, size: 32, offset: 192)
!1441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1442, size: 32)
!1442 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1443)
!1443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !838, line: 100, size: 224, elements: !1444)
!1444 = !{!1445, !1450, !1451, !1460, !1465, !1470, !1475}
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1443, file: !838, line: 101, baseType: !1446, size: 32)
!1446 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !838, line: 76, baseType: !1447)
!1447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1448, size: 32)
!1448 = !DISubroutineType(types: !1449)
!1449 = !{!109, !1389, !930}
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1443, file: !838, line: 102, baseType: !1446, size: 32, offset: 32)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1443, file: !838, line: 103, baseType: !1452, size: 32, offset: 64)
!1452 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !838, line: 83, baseType: !1453)
!1453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1454, size: 32)
!1454 = !DISubroutineType(types: !1455)
!1455 = !{!109, !1389, !930, !1456, !107}
!1456 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !838, line: 72, baseType: !1457)
!1457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1458, size: 32)
!1458 = !DISubroutineType(types: !1459)
!1459 = !{null, !1389, !930, !107}
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1443, file: !838, line: 104, baseType: !1461, size: 32, offset: 96)
!1461 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !838, line: 79, baseType: !1462)
!1462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1463, size: 32)
!1463 = !DISubroutineType(types: !1464)
!1464 = !{!109, !1389, !930, !886}
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1443, file: !838, line: 105, baseType: !1466, size: 32, offset: 128)
!1466 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !838, line: 88, baseType: !1467)
!1467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1468, size: 32)
!1468 = !DISubroutineType(types: !1469)
!1469 = !{!837, !1389, !930}
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1443, file: !838, line: 106, baseType: !1471, size: 32, offset: 160)
!1471 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !838, line: 92, baseType: !1472)
!1472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1473, size: 32)
!1473 = !DISubroutineType(types: !1474)
!1474 = !{!109, !1389, !930, !956}
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1443, file: !838, line: 107, baseType: !1476, size: 32, offset: 192)
!1476 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !838, line: 96, baseType: !1477)
!1477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1478, size: 32)
!1478 = !DISubroutineType(types: !1479)
!1479 = !{!109, !1389, !930, !107}
!1480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 32)
!1481 = !{!1343, !1482, !1488, !1490, !1497, !1499, !1543, !1546, !1548, !1551, !1554, !1556}
!1482 = !DIGlobalVariableExpression(var: !1483, expr: !DIExpression())
!1483 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1345, file: !1484, line: 1914, type: !1485, isLocal: false, isDefinition: true, align: 16)
!1484 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1485 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 128, elements: !1486)
!1486 = !{!1487}
!1487 = !DISubrange(count: 8)
!1488 = !DIGlobalVariableExpression(var: !1489, expr: !DIExpression())
!1489 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1345, file: !1484, line: 1914, type: !1390, isLocal: false, isDefinition: true, align: 32)
!1490 = !DIGlobalVariableExpression(var: !1491, expr: !DIExpression())
!1491 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1345, file: !1484, line: 1914, type: !1492, isLocal: true, isDefinition: true, align: 32)
!1492 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1493)
!1493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !1494)
!1494 = !{!1495, !1496}
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1493, file: !327, line: 60, baseType: !1409, size: 32)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1493, file: !327, line: 65, baseType: !1389, size: 32, offset: 32)
!1497 = !DIGlobalVariableExpression(var: !1498, expr: !DIExpression())
!1498 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1345, file: !1484, line: 1914, type: !1398, isLocal: true, isDefinition: true, align: 8)
!1499 = !DIGlobalVariableExpression(var: !1500, expr: !DIExpression())
!1500 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1345, file: !1484, line: 1914, type: !1501, isLocal: true, isDefinition: true)
!1501 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1502)
!1502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1503, line: 22, size: 224, elements: !1504)
!1503 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1504 = !{!1505, !1506, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520}
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1502, file: !1503, line: 24, baseType: !1430, size: 32)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1502, file: !1503, line: 26, baseType: !1507, size: 32, offset: 32)
!1507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1508, size: 32)
!1508 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1509)
!1509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !882, line: 343, size: 64, elements: !1510)
!1510 = !{!1511, !1512}
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1509, file: !882, line: 344, baseType: !110, size: 32)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1509, file: !882, line: 345, baseType: !110, size: 32, offset: 32)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1502, file: !1503, line: 28, baseType: !232, size: 32, offset: 64)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1502, file: !1503, line: 30, baseType: !347, size: 8, offset: 96)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1502, file: !1503, line: 32, baseType: !109, size: 32, offset: 128)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1502, file: !1503, line: 34, baseType: !347, size: 8, offset: 160)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1502, file: !1503, line: 36, baseType: !347, size: 8, offset: 168)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1502, file: !1503, line: 38, baseType: !347, size: 8, offset: 176)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1502, file: !1503, line: 40, baseType: !347, size: 8, offset: 184)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1502, file: !1503, line: 41, baseType: !1521, size: 32, offset: 192)
!1521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1522, size: 32)
!1522 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1523)
!1523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1524, line: 60, size: 64, elements: !1525)
!1524 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1525 = !{!1526, !1542}
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1523, file: !1524, line: 69, baseType: !1527, size: 32)
!1527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1528, size: 32)
!1528 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1529)
!1529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1524, line: 50, size: 64, elements: !1530)
!1530 = !{!1531, !1540, !1541}
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1529, file: !1524, line: 52, baseType: !1532, size: 32)
!1532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1533, size: 32)
!1533 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1534)
!1534 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1535, line: 37, baseType: !1536)
!1535 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1535, line: 32, size: 64, elements: !1537)
!1537 = !{!1538, !1539}
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1536, file: !1535, line: 34, baseType: !110, size: 32)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1536, file: !1535, line: 36, baseType: !110, size: 32, offset: 32)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1529, file: !1524, line: 54, baseType: !178, size: 8, offset: 32)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1529, file: !1524, line: 56, baseType: !178, size: 8, offset: 40)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1523, file: !1524, line: 71, baseType: !178, size: 8, offset: 32)
!1543 = !DIGlobalVariableExpression(var: !1544, expr: !DIExpression())
!1544 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1345, file: !1484, line: 1914, type: !1545, isLocal: true, isDefinition: true)
!1545 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1508, size: 64, elements: !517)
!1546 = !DIGlobalVariableExpression(var: !1547, expr: !DIExpression())
!1547 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1345, file: !1484, line: 1914, type: !1522, isLocal: true, isDefinition: true)
!1548 = !DIGlobalVariableExpression(var: !1549, expr: !DIExpression())
!1549 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1345, file: !1484, line: 1914, type: !1550, isLocal: true, isDefinition: true)
!1550 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1528, size: 64, elements: !517)
!1551 = !DIGlobalVariableExpression(var: !1552, expr: !DIExpression())
!1552 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1345, file: !1484, line: 1914, type: !1553, isLocal: true, isDefinition: true)
!1553 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1533, size: 128, elements: !173)
!1554 = !DIGlobalVariableExpression(var: !1555, expr: !DIExpression())
!1555 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1345, file: !1484, line: 1539, type: !1382, isLocal: true, isDefinition: true)
!1556 = !DIGlobalVariableExpression(var: !1557, expr: !DIExpression())
!1557 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1345, file: !1484, line: 1914, type: !1558, isLocal: true, isDefinition: true)
!1558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1503, line: 74, size: 64, elements: !1559)
!1559 = !{!1560, !1561}
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1558, file: !1503, line: 76, baseType: !110, size: 32)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1558, file: !1503, line: 78, baseType: !1389, size: 32, offset: 32)
!1562 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1563)
!1563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !291, line: 16, size: 64, elements: !1564)
!1564 = !{!1565, !1566}
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1563, file: !291, line: 17, baseType: !279, size: 32)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1563, file: !291, line: 18, baseType: !178, size: 8, offset: 32)
!1567 = !DIGlobalVariableExpression(var: !1568, expr: !DIExpression())
!1568 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1569, file: !1647, line: 65, type: !316, isLocal: true, isDefinition: true)
!1569 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1570, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1571, retainedTypes: !1572, globals: !1644, splitDebugInlining: false, nameTableKind: None)
!1570 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple")
!1571 = !{!604}
!1572 = !{!103, !1573, !766, !178, !110, !1581, !1612}
!1573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1574, size: 32)
!1574 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !535, line: 770, baseType: !1575)
!1575 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 764, size: 128, elements: !1576)
!1576 = !{!1577, !1578, !1579, !1580}
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1575, file: !535, line: 766, baseType: !316, size: 32)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1575, file: !535, line: 767, baseType: !316, size: 32, offset: 32)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1575, file: !535, line: 768, baseType: !316, size: 32, offset: 64)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1575, file: !535, line: 769, baseType: !539, size: 32, offset: 96)
!1581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1582, size: 32)
!1582 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !535, line: 426, baseType: !1583)
!1583 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 411, size: 28704, elements: !1584)
!1584 = !{!1585, !1587, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1602, !1607, !1611}
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1583, file: !535, line: 413, baseType: !1586, size: 256)
!1586 = !DICompositeType(tag: DW_TAG_array_type, baseType: !316, size: 256, elements: !1486)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1583, file: !535, line: 414, baseType: !1588, size: 768, offset: 256)
!1588 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 768, elements: !1589)
!1589 = !{!1590}
!1590 = !DISubrange(count: 24)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1583, file: !535, line: 415, baseType: !1586, size: 256, offset: 1024)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1583, file: !535, line: 416, baseType: !1588, size: 768, offset: 1280)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1583, file: !535, line: 417, baseType: !1586, size: 256, offset: 2048)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1583, file: !535, line: 418, baseType: !1588, size: 768, offset: 2304)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1583, file: !535, line: 419, baseType: !1586, size: 256, offset: 3072)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1583, file: !535, line: 420, baseType: !1588, size: 768, offset: 3328)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1583, file: !535, line: 421, baseType: !1586, size: 256, offset: 4096)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1583, file: !535, line: 422, baseType: !1599, size: 1792, offset: 4352)
!1599 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 1792, elements: !1600)
!1600 = !{!1601}
!1601 = !DISubrange(count: 56)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1583, file: !535, line: 423, baseType: !1603, size: 1920, offset: 6144)
!1603 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1604, size: 1920, elements: !1605)
!1604 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !178)
!1605 = !{!1606}
!1606 = !DISubrange(count: 240)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1583, file: !535, line: 424, baseType: !1608, size: 20608, offset: 8064)
!1608 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 20608, elements: !1609)
!1609 = !{!1610}
!1610 = !DISubrange(count: 644)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1583, file: !535, line: 425, baseType: !316, size: 32, offset: 28672)
!1612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1613, size: 32)
!1613 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !1614)
!1614 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !1615)
!1615 = !{!1616, !1617, !1618, !1619, !1620, !1621, !1622, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1635, !1636, !1637, !1639, !1641, !1643}
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1614, file: !535, line: 447, baseType: !539, size: 32)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1614, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1614, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1614, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1614, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1614, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1614, file: !535, line: 453, baseType: !1623, size: 96, offset: 192)
!1623 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1604, size: 96, elements: !1624)
!1624 = !{!1625}
!1625 = !DISubrange(count: 12)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1614, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1614, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1614, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1614, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1614, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1614, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1614, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1614, file: !535, line: 461, baseType: !1634, size: 64, offset: 512)
!1634 = !DICompositeType(tag: DW_TAG_array_type, baseType: !539, size: 64, elements: !173)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1614, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1614, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1614, file: !535, line: 464, baseType: !1638, size: 128, offset: 640)
!1638 = !DICompositeType(tag: DW_TAG_array_type, baseType: !539, size: 128, elements: !708)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1614, file: !535, line: 465, baseType: !1640, size: 160, offset: 768)
!1640 = !DICompositeType(tag: DW_TAG_array_type, baseType: !539, size: 160, elements: !1218)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1614, file: !535, line: 466, baseType: !1642, size: 160, offset: 928)
!1642 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 160, elements: !1218)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1614, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!1644 = !{!1645, !1671, !1676, !1678, !1680, !1567}
!1645 = !DIGlobalVariableExpression(var: !1646, expr: !DIExpression())
!1646 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1569, file: !1647, line: 285, type: !1648, isLocal: true, isDefinition: true, align: 32)
!1647 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1648 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1649)
!1649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !1650)
!1650 = !{!1651, !1670}
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1649, file: !327, line: 60, baseType: !1652, size: 32)
!1652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1653, size: 32)
!1653 = !DISubroutineType(types: !1654)
!1654 = !{!109, !1655}
!1655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1656, size: 32)
!1656 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1657)
!1657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !1658)
!1658 = !{!1659, !1660, !1661, !1662, !1668, !1669}
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1657, file: !336, line: 380, baseType: !279, size: 32)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1657, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1657, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1657, file: !336, line: 386, baseType: !1663, size: 32, offset: 96)
!1663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1664, size: 32)
!1664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !1665)
!1665 = !{!1666, !1667}
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1664, file: !336, line: 359, baseType: !178, size: 8)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1664, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1657, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1657, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1649, file: !327, line: 65, baseType: !1655, size: 32, offset: 32)
!1671 = !DIGlobalVariableExpression(var: !1672, expr: !DIExpression())
!1672 = distinct !DIGlobalVariable(name: "lock", scope: !1569, file: !1647, line: 34, type: !1673, isLocal: true, isDefinition: true)
!1673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !1674)
!1674 = !{!1675}
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1673, file: !251, line: 52, baseType: !22, size: 32)
!1676 = !DIGlobalVariableExpression(var: !1677, expr: !DIExpression())
!1677 = distinct !DIGlobalVariable(name: "last_load", scope: !1569, file: !1647, line: 36, type: !110, isLocal: true, isDefinition: true)
!1678 = !DIGlobalVariableExpression(var: !1679, expr: !DIExpression())
!1679 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1569, file: !1647, line: 48, type: !110, isLocal: true, isDefinition: true)
!1680 = !DIGlobalVariableExpression(var: !1681, expr: !DIExpression())
!1681 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1569, file: !1647, line: 54, type: !110, isLocal: true, isDefinition: true)
!1682 = !DIGlobalVariableExpression(var: !1683, expr: !DIExpression())
!1683 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1684, file: !1766, line: 22, type: !1768, isLocal: true, isDefinition: true)
!1684 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1685, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1686, retainedTypes: !1687, globals: !1763, splitDebugInlining: false, nameTableKind: None)
!1685 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple")
!1686 = !{!1033, !1039}
!1687 = !{!1688, !1752, !1757, !1086, !1039, !1033, !1762, !107}
!1688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1689, size: 32)
!1689 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1690)
!1690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1034, line: 523, size: 288, elements: !1691)
!1691 = !{!1692, !1711, !1715, !1719, !1723, !1724, !1725, !1729, !1748}
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1690, file: !1034, line: 524, baseType: !1693, size: 32)
!1693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1694, size: 32)
!1694 = !DISubroutineType(types: !1695)
!1695 = !{!109, !1696, !1074, !1075}
!1696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1697, size: 32)
!1697 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1698)
!1698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !1699)
!1699 = !{!1700, !1701, !1702, !1703, !1709, !1710}
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1698, file: !336, line: 380, baseType: !279, size: 32)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1698, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1698, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1698, file: !336, line: 386, baseType: !1704, size: 32, offset: 96)
!1704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1705, size: 32)
!1705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !1706)
!1706 = !{!1707, !1708}
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1705, file: !336, line: 359, baseType: !178, size: 8)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1705, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1698, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1698, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1690, file: !1034, line: 530, baseType: !1712, size: 32, offset: 32)
!1712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1713, size: 32)
!1713 = !DISubroutineType(types: !1714)
!1714 = !{!109, !1696, !1080}
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1690, file: !1034, line: 532, baseType: !1716, size: 32, offset: 64)
!1716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1717, size: 32)
!1717 = !DISubroutineType(types: !1718)
!1718 = !{!109, !1696, !1086, !1081}
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1690, file: !1034, line: 535, baseType: !1720, size: 32, offset: 96)
!1720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1721, size: 32)
!1721 = !DISubroutineType(types: !1722)
!1722 = !{!109, !1696, !1086}
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1690, file: !1034, line: 537, baseType: !1720, size: 32, offset: 128)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1690, file: !1034, line: 539, baseType: !1720, size: 32, offset: 160)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1690, file: !1034, line: 541, baseType: !1726, size: 32, offset: 192)
!1726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1727, size: 32)
!1727 = !DISubroutineType(types: !1728)
!1728 = !{!109, !1696, !1074, !1033, !1039}
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1690, file: !1034, line: 544, baseType: !1730, size: 32, offset: 224)
!1730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1731, size: 32)
!1731 = !DISubroutineType(types: !1732)
!1732 = !{!109, !1696, !1733, !347}
!1733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1734, size: 32)
!1734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1034, line: 478, size: 96, elements: !1735)
!1735 = !{!1736, !1742, !1747}
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1734, file: !1034, line: 482, baseType: !1737, size: 32)
!1737 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1106, line: 33, baseType: !1738)
!1738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1106, line: 29, size: 32, elements: !1739)
!1739 = !{!1740}
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1738, file: !1106, line: 30, baseType: !1741, size: 32)
!1741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1738, size: 32)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1734, file: !1034, line: 485, baseType: !1743, size: 32, offset: 32)
!1743 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1034, line: 464, baseType: !1744)
!1744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1745, size: 32)
!1745 = !DISubroutineType(types: !1746)
!1746 = !{null, !1696, !1733, !1086}
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1734, file: !1034, line: 493, baseType: !1086, size: 32, offset: 64)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1690, file: !1034, line: 547, baseType: !1749, size: 32, offset: 256)
!1749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1750, size: 32)
!1750 = !DISubroutineType(types: !1751)
!1751 = !{!110, !1696}
!1752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1753, size: 32)
!1753 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1754)
!1754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1034, line: 428, size: 32, elements: !1755)
!1755 = !{!1756}
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1754, file: !1034, line: 434, baseType: !1086, size: 32)
!1757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1758, size: 32)
!1758 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1759)
!1759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1034, line: 441, size: 32, elements: !1760)
!1760 = !{!1761}
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1759, file: !1034, line: 447, baseType: !1086, size: 32)
!1762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1759, size: 32)
!1763 = !{!1764, !1682}
!1764 = !DIGlobalVariableExpression(var: !1765, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1765 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1684, file: !1766, line: 37, type: !1767, isLocal: true, isDefinition: true)
!1766 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1767 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !232)
!1768 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1769, size: 352, elements: !1770)
!1769 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1696)
!1770 = !{!1771}
!1771 = !DISubrange(count: 11)
!1772 = !DIGlobalVariableExpression(var: !1773, expr: !DIExpression())
!1773 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1774, file: !1814, line: 139, type: !1821, isLocal: false, isDefinition: true)
!1774 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1775, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1776, globals: !1811, splitDebugInlining: false, nameTableKind: None)
!1775 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple")
!1776 = !{!1777}
!1777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1778, size: 32)
!1778 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !312, line: 532, baseType: !1779)
!1779 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 500, size: 1088, elements: !1780)
!1780 = !{!1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810}
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1779, file: !312, line: 502, baseType: !316, size: 32)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1779, file: !312, line: 503, baseType: !316, size: 32, offset: 32)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1779, file: !312, line: 504, baseType: !316, size: 32, offset: 64)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1779, file: !312, line: 505, baseType: !316, size: 32, offset: 96)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1779, file: !312, line: 506, baseType: !316, size: 32, offset: 128)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1779, file: !312, line: 507, baseType: !316, size: 32, offset: 160)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1779, file: !312, line: 508, baseType: !316, size: 32, offset: 192)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1779, file: !312, line: 509, baseType: !110, size: 32, offset: 224)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1779, file: !312, line: 510, baseType: !316, size: 32, offset: 256)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1779, file: !312, line: 511, baseType: !316, size: 32, offset: 288)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1779, file: !312, line: 512, baseType: !860, size: 64, offset: 320)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1779, file: !312, line: 513, baseType: !316, size: 32, offset: 384)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1779, file: !312, line: 514, baseType: !316, size: 32, offset: 416)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1779, file: !312, line: 515, baseType: !316, size: 32, offset: 448)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1779, file: !312, line: 516, baseType: !110, size: 32, offset: 480)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1779, file: !312, line: 517, baseType: !316, size: 32, offset: 512)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1779, file: !312, line: 518, baseType: !316, size: 32, offset: 544)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1779, file: !312, line: 519, baseType: !860, size: 64, offset: 576)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1779, file: !312, line: 520, baseType: !316, size: 32, offset: 640)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1779, file: !312, line: 521, baseType: !316, size: 32, offset: 672)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1779, file: !312, line: 522, baseType: !316, size: 32, offset: 704)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1779, file: !312, line: 523, baseType: !110, size: 32, offset: 736)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1779, file: !312, line: 524, baseType: !316, size: 32, offset: 768)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1779, file: !312, line: 525, baseType: !316, size: 32, offset: 800)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1779, file: !312, line: 526, baseType: !860, size: 64, offset: 832)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1779, file: !312, line: 527, baseType: !316, size: 32, offset: 896)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1779, file: !312, line: 528, baseType: !316, size: 32, offset: 928)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1779, file: !312, line: 529, baseType: !860, size: 64, offset: 960)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1779, file: !312, line: 530, baseType: !316, size: 32, offset: 1024)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1779, file: !312, line: 531, baseType: !316, size: 32, offset: 1056)
!1811 = !{!1812, !1815, !1772}
!1812 = !DIGlobalVariableExpression(var: !1813, expr: !DIExpression())
!1813 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1774, file: !1814, line: 137, type: !110, isLocal: false, isDefinition: true)
!1814 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1815 = !DIGlobalVariableExpression(var: !1816, expr: !DIExpression())
!1816 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1774, file: !1814, line: 138, type: !1817, isLocal: false, isDefinition: true)
!1817 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1818, size: 128, elements: !1819)
!1818 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !178)
!1819 = !{!1820}
!1820 = !DISubrange(count: 16)
!1821 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1818, size: 64, elements: !1486)
!1822 = !DIGlobalVariableExpression(var: !1823, expr: !DIExpression())
!1823 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1824, file: !1827, line: 23, type: !1828, isLocal: false, isDefinition: true)
!1824 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1825, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, globals: !1826, splitDebugInlining: false, nameTableKind: None)
!1825 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple")
!1826 = !{!1822}
!1827 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1828 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !109)
!1829 = !DIGlobalVariableExpression(var: !1830, expr: !DIExpression())
!1830 = distinct !DIGlobalVariable(name: "log_const_os", scope: !1831, file: !1835, line: 37, type: !2089, isLocal: false, isDefinition: true)
!1831 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1832, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1833, retainedTypes: !1842, globals: !1915, splitDebugInlining: false, nameTableKind: None)
!1832 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple")
!1833 = !{!1834, !30, !604}
!1834 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1835, line: 63, baseType: !32, size: 32, elements: !1836)
!1835 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1836 = !{!1837, !1838, !1839, !1840, !1841}
!1837 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1838 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1839 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1840 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1841 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1842 = !{!22, !232, !107, !109, !1843, !285, !110, !1873, !766, !178, !1898}
!1843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1844, size: 32)
!1844 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1845)
!1845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1846, line: 51, size: 64, elements: !1847)
!1846 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1847 = !{!1848, !1868}
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1845, file: !1846, line: 52, baseType: !1849, size: 32)
!1849 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1846, line: 38, baseType: !1850)
!1850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1851, size: 32)
!1851 = !DISubroutineType(types: !1852)
!1852 = !{!109, !1853, !286, !192}
!1853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1854, size: 32)
!1854 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1855)
!1855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !1856)
!1856 = !{!1857, !1858, !1859, !1860, !1866, !1867}
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1855, file: !336, line: 380, baseType: !279, size: 32)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1855, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1855, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1855, file: !336, line: 386, baseType: !1861, size: 32, offset: 96)
!1861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1862, size: 32)
!1862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !1863)
!1863 = !{!1864, !1865}
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1862, file: !336, line: 359, baseType: !178, size: 8)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1862, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1855, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1855, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1845, file: !1846, line: 53, baseType: !1869, size: 32, offset: 32)
!1869 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1846, line: 47, baseType: !1870)
!1870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1871, size: 32)
!1871 = !DISubroutineType(types: !1872)
!1872 = !{!109, !1853, !286, !192, !110}
!1873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1874, size: 32)
!1874 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !1875)
!1875 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !1876)
!1876 = !{!1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897}
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1875, file: !535, line: 447, baseType: !539, size: 32)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1875, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1875, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1875, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1875, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1875, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1875, file: !535, line: 453, baseType: !1623, size: 96, offset: 192)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1875, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1875, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1875, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1875, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1875, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1875, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1875, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1875, file: !535, line: 461, baseType: !1634, size: 64, offset: 512)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1875, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1875, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1875, file: !535, line: 464, baseType: !1638, size: 128, offset: 640)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1875, file: !535, line: 465, baseType: !1640, size: 160, offset: 768)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1875, file: !535, line: 466, baseType: !1642, size: 160, offset: 928)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1875, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!1898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1899, size: 32)
!1899 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !535, line: 426, baseType: !1900)
!1900 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 411, size: 28704, elements: !1901)
!1901 = !{!1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914}
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1900, file: !535, line: 413, baseType: !1586, size: 256)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1900, file: !535, line: 414, baseType: !1588, size: 768, offset: 256)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1900, file: !535, line: 415, baseType: !1586, size: 256, offset: 1024)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1900, file: !535, line: 416, baseType: !1588, size: 768, offset: 1280)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1900, file: !535, line: 417, baseType: !1586, size: 256, offset: 2048)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1900, file: !535, line: 418, baseType: !1588, size: 768, offset: 2304)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1900, file: !535, line: 419, baseType: !1586, size: 256, offset: 3072)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1900, file: !535, line: 420, baseType: !1588, size: 768, offset: 3328)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1900, file: !535, line: 421, baseType: !1586, size: 256, offset: 4096)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1900, file: !535, line: 422, baseType: !1599, size: 1792, offset: 4352)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1900, file: !535, line: 423, baseType: !1603, size: 1920, offset: 6144)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1900, file: !535, line: 424, baseType: !1608, size: 20608, offset: 8064)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1900, file: !535, line: 425, baseType: !316, size: 32, offset: 28672)
!1915 = !{!1829, !1916, !2042, !2049, !2051, !2054, !2059, !2061, !2066}
!1916 = !DIGlobalVariableExpression(var: !1917, expr: !DIExpression())
!1917 = distinct !DIGlobalVariable(name: "_kernel", scope: !1831, file: !1835, line: 40, type: !1918, isLocal: false, isDefinition: true)
!1918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !122, line: 158, size: 288, elements: !1919)
!1919 = !{!1920, !2037}
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1918, file: !122, line: 159, baseType: !1921, size: 192)
!1921 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1922, size: 192, elements: !517)
!1922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !122, line: 100, size: 192, elements: !1923)
!1923 = !{!1924, !1925, !1926, !2030, !2031, !2032, !2033}
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1922, file: !122, line: 102, baseType: !110, size: 32)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1922, file: !122, line: 105, baseType: !285, size: 32, offset: 32)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1922, file: !122, line: 108, baseType: !1927, size: 32, offset: 64)
!1927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1928, size: 32)
!1928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1280, elements: !1929)
!1929 = !{!1930, !1988, !2000, !2001, !2002, !2003, !2004, !2010, !2025}
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1928, file: !156, line: 247, baseType: !1931, size: 384)
!1931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 384, elements: !1932)
!1932 = !{!1933, !1957, !1964, !1965, !1966, !1975, !1976, !1977}
!1933 = !DIDerivedType(tag: DW_TAG_member, scope: !1931, file: !156, line: 60, baseType: !1934, size: 64)
!1934 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1931, file: !156, line: 60, size: 64, elements: !1935)
!1935 = !{!1936, !1951}
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1934, file: !156, line: 61, baseType: !1937, size: 64)
!1937 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !1938)
!1938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !1939)
!1939 = !{!1940, !1946}
!1940 = !DIDerivedType(tag: DW_TAG_member, scope: !1938, file: !127, line: 38, baseType: !1941, size: 32)
!1941 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1938, file: !127, line: 38, size: 32, elements: !1942)
!1942 = !{!1943, !1945}
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1941, file: !127, line: 39, baseType: !1944, size: 32)
!1944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1938, size: 32)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1941, file: !127, line: 40, baseType: !1944, size: 32)
!1946 = !DIDerivedType(tag: DW_TAG_member, scope: !1938, file: !127, line: 42, baseType: !1947, size: 32, offset: 32)
!1947 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1938, file: !127, line: 42, size: 32, elements: !1948)
!1948 = !{!1949, !1950}
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1947, file: !127, line: 43, baseType: !1944, size: 32)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1947, file: !127, line: 44, baseType: !1944, size: 32)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1934, file: !156, line: 62, baseType: !1952, size: 64)
!1952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !1953)
!1953 = !{!1954}
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1952, file: !168, line: 50, baseType: !1955, size: 64)
!1955 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1956, size: 64, elements: !173)
!1956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1952, size: 32)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1931, file: !156, line: 68, baseType: !1958, size: 32, offset: 64)
!1958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1959, size: 32)
!1959 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !1960)
!1960 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !1961)
!1961 = !{!1962}
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1960, file: !122, line: 232, baseType: !1963, size: 64)
!1963 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !1938)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1931, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1931, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!1966 = !DIDerivedType(tag: DW_TAG_member, scope: !1931, file: !156, line: 90, baseType: !1967, size: 16, offset: 112)
!1967 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1931, file: !156, line: 90, size: 16, elements: !1968)
!1968 = !{!1969, !1974}
!1969 = !DIDerivedType(tag: DW_TAG_member, scope: !1967, file: !156, line: 91, baseType: !1970, size: 16)
!1970 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1967, file: !156, line: 91, size: 16, elements: !1971)
!1971 = !{!1972, !1973}
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1970, file: !156, line: 96, baseType: !188, size: 8)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1970, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1967, file: !156, line: 100, baseType: !192, size: 16)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1931, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1931, file: !156, line: 127, baseType: !107, size: 32, offset: 160)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1931, file: !156, line: 131, baseType: !1978, size: 192, offset: 192)
!1978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !1979)
!1979 = !{!1980, !1981, !1987}
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1978, file: !122, line: 245, baseType: !1937, size: 64)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1978, file: !122, line: 246, baseType: !1982, size: 32, offset: 64)
!1982 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !1983)
!1983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1984, size: 32)
!1984 = !DISubroutineType(types: !1985)
!1985 = !{null, !1986}
!1986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1978, size: 32)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1978, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1928, file: !156, line: 250, baseType: !1989, size: 288, offset: 384)
!1989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !1990)
!1990 = !{!1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999}
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1989, file: !209, line: 26, baseType: !110, size: 32)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1989, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1989, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1989, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1989, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1989, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1989, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1989, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1989, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1928, file: !156, line: 253, baseType: !107, size: 32, offset: 672)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1928, file: !156, line: 256, baseType: !1959, size: 64, offset: 704)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1928, file: !156, line: 279, baseType: !223, size: 256, offset: 768)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1928, file: !156, line: 294, baseType: !109, size: 32, offset: 1024)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1928, file: !156, line: 300, baseType: !2005, size: 96, offset: 1056)
!2005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !2006)
!2006 = !{!2007, !2008, !2009}
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2005, file: !156, line: 153, baseType: !22, size: 32)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2005, file: !156, line: 162, baseType: !232, size: 32, offset: 32)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2005, file: !156, line: 168, baseType: !232, size: 32, offset: 64)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1928, file: !156, line: 325, baseType: !2011, size: 32, offset: 1152)
!2011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2012, size: 32)
!2012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !2013)
!2013 = !{!2014, !2020, !2021}
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2012, file: !118, line: 5074, baseType: !2015, size: 96)
!2015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !241, line: 56, size: 96, elements: !2016)
!2016 = !{!2017, !2018, !2019}
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2015, file: !241, line: 57, baseType: !244, size: 32)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2015, file: !241, line: 58, baseType: !107, size: 32, offset: 32)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2015, file: !241, line: 59, baseType: !232, size: 32, offset: 64)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2012, file: !118, line: 5075, baseType: !1959, size: 64, offset: 96)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2012, file: !118, line: 5076, baseType: !2022, size: 32, offset: 160)
!2022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !2023)
!2023 = !{!2024}
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2022, file: !251, line: 52, baseType: !22, size: 32)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1928, file: !156, line: 343, baseType: !2026, size: 64, offset: 1184)
!2026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !209, line: 60, size: 64, elements: !2027)
!2027 = !{!2028, !2029}
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2026, file: !209, line: 63, baseType: !110, size: 32)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2026, file: !209, line: 66, baseType: !110, size: 32, offset: 32)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1922, file: !122, line: 111, baseType: !1927, size: 32, offset: 96)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1922, file: !122, line: 124, baseType: !109, size: 32, offset: 128)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1922, file: !122, line: 127, baseType: !178, size: 8, offset: 160)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1922, file: !122, line: 153, baseType: !2034, offset: 168)
!2034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2035, line: 33, elements: !2036)
!2035 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2036 = !{}
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1918, file: !122, line: 170, baseType: !2038, size: 96, offset: 192)
!2038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !122, line: 83, size: 96, elements: !2039)
!2039 = !{!2040, !2041}
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2038, file: !122, line: 86, baseType: !1927, size: 32)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2038, file: !122, line: 90, baseType: !1963, size: 64, offset: 32)
!2042 = !DIGlobalVariableExpression(var: !2043, expr: !DIExpression())
!2043 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1831, file: !1835, line: 43, type: !2044, isLocal: false, isDefinition: true, align: 512)
!2044 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2045, size: 8704, elements: !2048)
!2045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !145, line: 47, size: 8, elements: !2046)
!2046 = !{!2047}
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2045, file: !145, line: 48, baseType: !148, size: 8)
!2048 = !{!151}
!2049 = !DIGlobalVariableExpression(var: !2050, expr: !DIExpression())
!2050 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1831, file: !1835, line: 44, type: !1928, isLocal: false, isDefinition: true)
!2051 = !DIGlobalVariableExpression(var: !2052, expr: !DIExpression())
!2052 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1831, file: !1835, line: 48, type: !2053, isLocal: false, isDefinition: true)
!2053 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1928, size: 1280, elements: !517)
!2054 = !DIGlobalVariableExpression(var: !2055, expr: !DIExpression())
!2055 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1831, file: !1835, line: 86, type: !2056, isLocal: false, isDefinition: true, align: 512)
!2056 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2045, size: 16896, elements: !2057)
!2057 = !{!518, !2058}
!2058 = !DISubrange(count: 2112)
!2059 = !DIGlobalVariableExpression(var: !2060, expr: !DIExpression())
!2060 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1831, file: !1835, line: 217, type: !347, isLocal: false, isDefinition: true)
!2061 = !DIGlobalVariableExpression(var: !2062, expr: !DIExpression())
!2062 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1831, file: !1835, line: 50, type: !2063, isLocal: true, isDefinition: true, align: 512)
!2063 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2045, size: 3072, elements: !2064)
!2064 = !{!518, !2065}
!2065 = !DISubrange(count: 384)
!2066 = !DIGlobalVariableExpression(var: !2067, expr: !DIExpression())
!2067 = distinct !DIGlobalVariable(name: "levels", scope: !2068, file: !1835, line: 232, type: !2088, isLocal: true, isDefinition: true)
!2068 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1835, file: !1835, line: 230, type: !2069, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1831, retainedNodes: !2071)
!2069 = !DISubroutineType(types: !2070)
!2070 = !{null, !1834}
!2071 = !{!2072, !2073, !2083, !2087}
!2072 = !DILocalVariable(name: "level", arg: 1, scope: !2068, file: !1835, line: 230, type: !1834)
!2073 = !DILocalVariable(name: "entry", scope: !2068, file: !1835, line: 244, type: !2074)
!2074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2075, size: 32)
!2075 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2076)
!2076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !2077)
!2077 = !{!2078, !2082}
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2076, file: !327, line: 60, baseType: !2079, size: 32)
!2079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2080, size: 32)
!2080 = !DISubroutineType(types: !2081)
!2081 = !{!109, !1853}
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2076, file: !327, line: 65, baseType: !1853, size: 32, offset: 32)
!2083 = !DILocalVariable(name: "dev", scope: !2084, file: !1835, line: 247, type: !1853)
!2084 = distinct !DILexicalBlock(scope: !2085, file: !1835, line: 246, column: 64)
!2085 = distinct !DILexicalBlock(scope: !2086, file: !1835, line: 246, column: 2)
!2086 = distinct !DILexicalBlock(scope: !2068, file: !1835, line: 246, column: 2)
!2087 = !DILocalVariable(name: "rc", scope: !2084, file: !1835, line: 248, type: !109)
!2088 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2074, size: 192, elements: !1201)
!2089 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2090)
!2090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !291, line: 16, size: 64, elements: !2091)
!2091 = !{!2092, !2093}
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2090, file: !291, line: 17, baseType: !279, size: 32)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2090, file: !291, line: 18, baseType: !178, size: 8, offset: 32)
!2094 = !DIGlobalVariableExpression(var: !2095, expr: !DIExpression())
!2095 = distinct !DIGlobalVariable(name: "states_str", scope: !2096, file: !2097, line: 276, type: !2221, isLocal: true, isDefinition: true)
!2096 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2097, file: !2097, line: 271, type: !2098, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2204, retainedNodes: !2212)
!2097 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2098 = !DISubroutineType(types: !2099)
!2099 = !{!279, !2100, !285, !232}
!2100 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !156, line: 347, baseType: !2101)
!2101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2102, size: 32)
!2102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1280, elements: !2103)
!2103 = !{!2104, !2162, !2174, !2175, !2176, !2177, !2178, !2184, !2199}
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2102, file: !156, line: 247, baseType: !2105, size: 384)
!2105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 384, elements: !2106)
!2106 = !{!2107, !2131, !2138, !2139, !2140, !2149, !2150, !2151}
!2107 = !DIDerivedType(tag: DW_TAG_member, scope: !2105, file: !156, line: 60, baseType: !2108, size: 64)
!2108 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2105, file: !156, line: 60, size: 64, elements: !2109)
!2109 = !{!2110, !2125}
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2108, file: !156, line: 61, baseType: !2111, size: 64)
!2111 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2112)
!2112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2113)
!2113 = !{!2114, !2120}
!2114 = !DIDerivedType(tag: DW_TAG_member, scope: !2112, file: !127, line: 38, baseType: !2115, size: 32)
!2115 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2112, file: !127, line: 38, size: 32, elements: !2116)
!2116 = !{!2117, !2119}
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2115, file: !127, line: 39, baseType: !2118, size: 32)
!2118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2112, size: 32)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2115, file: !127, line: 40, baseType: !2118, size: 32)
!2120 = !DIDerivedType(tag: DW_TAG_member, scope: !2112, file: !127, line: 42, baseType: !2121, size: 32, offset: 32)
!2121 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2112, file: !127, line: 42, size: 32, elements: !2122)
!2122 = !{!2123, !2124}
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2121, file: !127, line: 43, baseType: !2118, size: 32)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2121, file: !127, line: 44, baseType: !2118, size: 32)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2108, file: !156, line: 62, baseType: !2126, size: 64)
!2126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !2127)
!2127 = !{!2128}
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2126, file: !168, line: 50, baseType: !2129, size: 64)
!2129 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2130, size: 64, elements: !173)
!2130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2126, size: 32)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2105, file: !156, line: 68, baseType: !2132, size: 32, offset: 64)
!2132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2133, size: 32)
!2133 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !2134)
!2134 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !2135)
!2135 = !{!2136}
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2134, file: !122, line: 232, baseType: !2137, size: 64)
!2137 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2112)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2105, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2105, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!2140 = !DIDerivedType(tag: DW_TAG_member, scope: !2105, file: !156, line: 90, baseType: !2141, size: 16, offset: 112)
!2141 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2105, file: !156, line: 90, size: 16, elements: !2142)
!2142 = !{!2143, !2148}
!2143 = !DIDerivedType(tag: DW_TAG_member, scope: !2141, file: !156, line: 91, baseType: !2144, size: 16)
!2144 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2141, file: !156, line: 91, size: 16, elements: !2145)
!2145 = !{!2146, !2147}
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2144, file: !156, line: 96, baseType: !188, size: 8)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2144, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2141, file: !156, line: 100, baseType: !192, size: 16)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2105, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2105, file: !156, line: 127, baseType: !107, size: 32, offset: 160)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2105, file: !156, line: 131, baseType: !2152, size: 192, offset: 192)
!2152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !2153)
!2153 = !{!2154, !2155, !2161}
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2152, file: !122, line: 245, baseType: !2111, size: 64)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2152, file: !122, line: 246, baseType: !2156, size: 32, offset: 64)
!2156 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !2157)
!2157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2158, size: 32)
!2158 = !DISubroutineType(types: !2159)
!2159 = !{null, !2160}
!2160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2152, size: 32)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2152, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2102, file: !156, line: 250, baseType: !2163, size: 288, offset: 384)
!2163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !2164)
!2164 = !{!2165, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2173}
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2163, file: !209, line: 26, baseType: !110, size: 32)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2163, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2163, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2163, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2163, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2163, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2163, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2163, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2163, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2102, file: !156, line: 253, baseType: !107, size: 32, offset: 672)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2102, file: !156, line: 256, baseType: !2133, size: 64, offset: 704)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2102, file: !156, line: 279, baseType: !223, size: 256, offset: 768)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2102, file: !156, line: 294, baseType: !109, size: 32, offset: 1024)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2102, file: !156, line: 300, baseType: !2179, size: 96, offset: 1056)
!2179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !2180)
!2180 = !{!2181, !2182, !2183}
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2179, file: !156, line: 153, baseType: !22, size: 32)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2179, file: !156, line: 162, baseType: !232, size: 32, offset: 32)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2179, file: !156, line: 168, baseType: !232, size: 32, offset: 64)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2102, file: !156, line: 325, baseType: !2185, size: 32, offset: 1152)
!2185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2186, size: 32)
!2186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !2187)
!2187 = !{!2188, !2194, !2195}
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2186, file: !118, line: 5074, baseType: !2189, size: 96)
!2189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !241, line: 56, size: 96, elements: !2190)
!2190 = !{!2191, !2192, !2193}
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2189, file: !241, line: 57, baseType: !244, size: 32)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2189, file: !241, line: 58, baseType: !107, size: 32, offset: 32)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2189, file: !241, line: 59, baseType: !232, size: 32, offset: 64)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2186, file: !118, line: 5075, baseType: !2133, size: 64, offset: 96)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2186, file: !118, line: 5076, baseType: !2196, size: 32, offset: 160)
!2196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !2197)
!2197 = !{!2198}
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2196, file: !251, line: 52, baseType: !22, size: 32)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2102, file: !156, line: 343, baseType: !2200, size: 64, offset: 1184)
!2200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !209, line: 60, size: 64, elements: !2201)
!2201 = !{!2202, !2203}
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2200, file: !209, line: 63, baseType: !110, size: 32)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2200, file: !209, line: 66, baseType: !110, size: 32, offset: 32)
!2204 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2205, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2206, globals: !2208, splitDebugInlining: false, nameTableKind: None)
!2205 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple")
!2206 = !{!107, !279, !103, !178, !22, !109, !2207, !24, !232, !285, !110, !111}
!2207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2111, size: 32)
!2208 = !{!2094, !2209}
!2209 = !DIGlobalVariableExpression(var: !2210, expr: !DIExpression())
!2210 = distinct !DIGlobalVariable(name: "states_sz", scope: !2096, file: !2097, line: 279, type: !2211, isLocal: true, isDefinition: true)
!2211 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1767, size: 256, elements: !1486)
!2212 = !{!2213, !2214, !2215, !2216, !2217, !2218, !2219}
!2213 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2096, file: !2097, line: 271, type: !2100)
!2214 = !DILocalVariable(name: "buf", arg: 2, scope: !2096, file: !2097, line: 271, type: !285)
!2215 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2096, file: !2097, line: 271, type: !232)
!2216 = !DILocalVariable(name: "off", scope: !2096, file: !2097, line: 273, type: !232)
!2217 = !DILocalVariable(name: "bit", scope: !2096, file: !2097, line: 274, type: !178)
!2218 = !DILocalVariable(name: "thread_state", scope: !2096, file: !2097, line: 275, type: !178)
!2219 = !DILocalVariable(name: "index", scope: !2220, file: !2097, line: 293, type: !178)
!2220 = distinct !DILexicalBlock(scope: !2096, file: !2097, line: 293, column: 2)
!2221 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 256, elements: !1486)
!2222 = !DIGlobalVariableExpression(var: !2223, expr: !DIExpression())
!2223 = distinct !DIGlobalVariable(name: "lock", scope: !2224, file: !2332, line: 47, type: !2323, isLocal: true, isDefinition: true)
!2224 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2225, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2226, globals: !2331, splitDebugInlining: false, nameTableKind: None)
!2225 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple")
!2226 = !{!347, !107, !109, !2227, !2242}
!2227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2228, size: 32)
!2228 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2229)
!2229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2230)
!2230 = !{!2231, !2237}
!2231 = !DIDerivedType(tag: DW_TAG_member, scope: !2229, file: !127, line: 38, baseType: !2232, size: 32)
!2232 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2229, file: !127, line: 38, size: 32, elements: !2233)
!2233 = !{!2234, !2236}
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2232, file: !127, line: 39, baseType: !2235, size: 32)
!2235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2229, size: 32)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2232, file: !127, line: 40, baseType: !2235, size: 32)
!2237 = !DIDerivedType(tag: DW_TAG_member, scope: !2229, file: !127, line: 42, baseType: !2238, size: 32, offset: 32)
!2238 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2229, file: !127, line: 42, size: 32, elements: !2239)
!2239 = !{!2240, !2241}
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2238, file: !127, line: 43, baseType: !2235, size: 32)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2238, file: !127, line: 44, baseType: !2235, size: 32)
!2242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2243, size: 32)
!2243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1280, elements: !2244)
!2244 = !{!2245, !2289, !2301, !2302, !2303, !2304, !2305, !2311, !2326}
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2243, file: !156, line: 247, baseType: !2246, size: 384)
!2246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 384, elements: !2247)
!2247 = !{!2248, !2258, !2265, !2266, !2267, !2276, !2277, !2278}
!2248 = !DIDerivedType(tag: DW_TAG_member, scope: !2246, file: !156, line: 60, baseType: !2249, size: 64)
!2249 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2246, file: !156, line: 60, size: 64, elements: !2250)
!2250 = !{!2251, !2252}
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2249, file: !156, line: 61, baseType: !2228, size: 64)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2249, file: !156, line: 62, baseType: !2253, size: 64)
!2253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !2254)
!2254 = !{!2255}
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2253, file: !168, line: 50, baseType: !2256, size: 64)
!2256 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2257, size: 64, elements: !173)
!2257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2253, size: 32)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2246, file: !156, line: 68, baseType: !2259, size: 32, offset: 64)
!2259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2260, size: 32)
!2260 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !2261)
!2261 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !2262)
!2262 = !{!2263}
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2261, file: !122, line: 232, baseType: !2264, size: 64)
!2264 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2229)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2246, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2246, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!2267 = !DIDerivedType(tag: DW_TAG_member, scope: !2246, file: !156, line: 90, baseType: !2268, size: 16, offset: 112)
!2268 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2246, file: !156, line: 90, size: 16, elements: !2269)
!2269 = !{!2270, !2275}
!2270 = !DIDerivedType(tag: DW_TAG_member, scope: !2268, file: !156, line: 91, baseType: !2271, size: 16)
!2271 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2268, file: !156, line: 91, size: 16, elements: !2272)
!2272 = !{!2273, !2274}
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2271, file: !156, line: 96, baseType: !188, size: 8)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2271, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2268, file: !156, line: 100, baseType: !192, size: 16)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2246, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2246, file: !156, line: 127, baseType: !107, size: 32, offset: 160)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2246, file: !156, line: 131, baseType: !2279, size: 192, offset: 192)
!2279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !2280)
!2280 = !{!2281, !2282, !2288}
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2279, file: !122, line: 245, baseType: !2228, size: 64)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2279, file: !122, line: 246, baseType: !2283, size: 32, offset: 64)
!2283 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !2284)
!2284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2285, size: 32)
!2285 = !DISubroutineType(types: !2286)
!2286 = !{null, !2287}
!2287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2279, size: 32)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2279, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2243, file: !156, line: 250, baseType: !2290, size: 288, offset: 384)
!2290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !2291)
!2291 = !{!2292, !2293, !2294, !2295, !2296, !2297, !2298, !2299, !2300}
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2290, file: !209, line: 26, baseType: !110, size: 32)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2290, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2290, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2290, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2290, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2290, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2290, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2290, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2290, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2243, file: !156, line: 253, baseType: !107, size: 32, offset: 672)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2243, file: !156, line: 256, baseType: !2260, size: 64, offset: 704)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2243, file: !156, line: 279, baseType: !223, size: 256, offset: 768)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2243, file: !156, line: 294, baseType: !109, size: 32, offset: 1024)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2243, file: !156, line: 300, baseType: !2306, size: 96, offset: 1056)
!2306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !2307)
!2307 = !{!2308, !2309, !2310}
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2306, file: !156, line: 153, baseType: !22, size: 32)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2306, file: !156, line: 162, baseType: !232, size: 32, offset: 32)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2306, file: !156, line: 168, baseType: !232, size: 32, offset: 64)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2243, file: !156, line: 325, baseType: !2312, size: 32, offset: 1152)
!2312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2313, size: 32)
!2313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !2314)
!2314 = !{!2315, !2321, !2322}
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2313, file: !118, line: 5074, baseType: !2316, size: 96)
!2316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !241, line: 56, size: 96, elements: !2317)
!2317 = !{!2318, !2319, !2320}
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2316, file: !241, line: 57, baseType: !244, size: 32)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2316, file: !241, line: 58, baseType: !107, size: 32, offset: 32)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2316, file: !241, line: 59, baseType: !232, size: 32, offset: 64)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2313, file: !118, line: 5075, baseType: !2260, size: 64, offset: 96)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2313, file: !118, line: 5076, baseType: !2323, size: 32, offset: 160)
!2323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !2324)
!2324 = !{!2325}
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2323, file: !251, line: 52, baseType: !22, size: 32)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2243, file: !156, line: 343, baseType: !2327, size: 64, offset: 1184)
!2327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !209, line: 60, size: 64, elements: !2328)
!2328 = !{!2329, !2330}
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2327, file: !209, line: 63, baseType: !110, size: 32)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2327, file: !209, line: 66, baseType: !110, size: 32, offset: 32)
!2331 = !{!2222}
!2332 = !DIFile(filename: "zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2333 = !DIGlobalVariableExpression(var: !2334, expr: !DIExpression())
!2334 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2335, file: !2446, line: 56, type: !2433, isLocal: false, isDefinition: true)
!2335 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2336, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2337, globals: !2443, splitDebugInlining: false, nameTableKind: None)
!2336 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple")
!2337 = !{!2338, !285, !107, !2441, !286, !103, !766, !109, !110, !111, !2442}
!2338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2339, size: 32)
!2339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1280, elements: !2340)
!2340 = !{!2341, !2399, !2411, !2412, !2413, !2414, !2415, !2421, !2436}
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2339, file: !156, line: 247, baseType: !2342, size: 384)
!2342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 384, elements: !2343)
!2343 = !{!2344, !2368, !2375, !2376, !2377, !2386, !2387, !2388}
!2344 = !DIDerivedType(tag: DW_TAG_member, scope: !2342, file: !156, line: 60, baseType: !2345, size: 64)
!2345 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2342, file: !156, line: 60, size: 64, elements: !2346)
!2346 = !{!2347, !2362}
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2345, file: !156, line: 61, baseType: !2348, size: 64)
!2348 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2349)
!2349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2350)
!2350 = !{!2351, !2357}
!2351 = !DIDerivedType(tag: DW_TAG_member, scope: !2349, file: !127, line: 38, baseType: !2352, size: 32)
!2352 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2349, file: !127, line: 38, size: 32, elements: !2353)
!2353 = !{!2354, !2356}
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2352, file: !127, line: 39, baseType: !2355, size: 32)
!2355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2349, size: 32)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2352, file: !127, line: 40, baseType: !2355, size: 32)
!2357 = !DIDerivedType(tag: DW_TAG_member, scope: !2349, file: !127, line: 42, baseType: !2358, size: 32, offset: 32)
!2358 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2349, file: !127, line: 42, size: 32, elements: !2359)
!2359 = !{!2360, !2361}
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2358, file: !127, line: 43, baseType: !2355, size: 32)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2358, file: !127, line: 44, baseType: !2355, size: 32)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2345, file: !156, line: 62, baseType: !2363, size: 64)
!2363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !2364)
!2364 = !{!2365}
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2363, file: !168, line: 50, baseType: !2366, size: 64)
!2366 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2367, size: 64, elements: !173)
!2367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2363, size: 32)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2342, file: !156, line: 68, baseType: !2369, size: 32, offset: 64)
!2369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2370, size: 32)
!2370 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !2371)
!2371 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !2372)
!2372 = !{!2373}
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2371, file: !122, line: 232, baseType: !2374, size: 64)
!2374 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2349)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2342, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2342, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!2377 = !DIDerivedType(tag: DW_TAG_member, scope: !2342, file: !156, line: 90, baseType: !2378, size: 16, offset: 112)
!2378 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2342, file: !156, line: 90, size: 16, elements: !2379)
!2379 = !{!2380, !2385}
!2380 = !DIDerivedType(tag: DW_TAG_member, scope: !2378, file: !156, line: 91, baseType: !2381, size: 16)
!2381 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2378, file: !156, line: 91, size: 16, elements: !2382)
!2382 = !{!2383, !2384}
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2381, file: !156, line: 96, baseType: !188, size: 8)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2381, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2378, file: !156, line: 100, baseType: !192, size: 16)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2342, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2342, file: !156, line: 127, baseType: !107, size: 32, offset: 160)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2342, file: !156, line: 131, baseType: !2389, size: 192, offset: 192)
!2389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !2390)
!2390 = !{!2391, !2392, !2398}
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2389, file: !122, line: 245, baseType: !2348, size: 64)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2389, file: !122, line: 246, baseType: !2393, size: 32, offset: 64)
!2393 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !2394)
!2394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2395, size: 32)
!2395 = !DISubroutineType(types: !2396)
!2396 = !{null, !2397}
!2397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2389, size: 32)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2389, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2339, file: !156, line: 250, baseType: !2400, size: 288, offset: 384)
!2400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !2401)
!2401 = !{!2402, !2403, !2404, !2405, !2406, !2407, !2408, !2409, !2410}
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2400, file: !209, line: 26, baseType: !110, size: 32)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2400, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2400, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2400, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2400, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2400, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2400, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2400, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2400, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2339, file: !156, line: 253, baseType: !107, size: 32, offset: 672)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2339, file: !156, line: 256, baseType: !2370, size: 64, offset: 704)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2339, file: !156, line: 279, baseType: !223, size: 256, offset: 768)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2339, file: !156, line: 294, baseType: !109, size: 32, offset: 1024)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2339, file: !156, line: 300, baseType: !2416, size: 96, offset: 1056)
!2416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !2417)
!2417 = !{!2418, !2419, !2420}
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2416, file: !156, line: 153, baseType: !22, size: 32)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2416, file: !156, line: 162, baseType: !232, size: 32, offset: 32)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2416, file: !156, line: 168, baseType: !232, size: 32, offset: 64)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2339, file: !156, line: 325, baseType: !2422, size: 32, offset: 1152)
!2422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2423, size: 32)
!2423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !2424)
!2424 = !{!2425, !2431, !2432}
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2423, file: !118, line: 5074, baseType: !2426, size: 96)
!2426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !241, line: 56, size: 96, elements: !2427)
!2427 = !{!2428, !2429, !2430}
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2426, file: !241, line: 57, baseType: !244, size: 32)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2426, file: !241, line: 58, baseType: !107, size: 32, offset: 32)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2426, file: !241, line: 59, baseType: !232, size: 32, offset: 64)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2423, file: !118, line: 5075, baseType: !2370, size: 64, offset: 96)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2423, file: !118, line: 5076, baseType: !2433, size: 32, offset: 160)
!2433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !2434)
!2434 = !{!2435}
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2433, file: !251, line: 52, baseType: !22, size: 32)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2339, file: !156, line: 343, baseType: !2437, size: 64, offset: 1184)
!2437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !209, line: 60, size: 64, elements: !2438)
!2438 = !{!2439, !2440}
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2437, file: !209, line: 63, baseType: !110, size: 32)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2437, file: !209, line: 66, baseType: !110, size: 32, offset: 32)
!2441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2367, size: 32)
!2442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2348, size: 32)
!2443 = !{!2333, !2444, !2447, !2449}
!2444 = !DIGlobalVariableExpression(var: !2445, expr: !DIExpression())
!2445 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2335, file: !2446, line: 404, type: !109, isLocal: true, isDefinition: true)
!2446 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2447 = !DIGlobalVariableExpression(var: !2448, expr: !DIExpression())
!2448 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2335, file: !2446, line: 405, type: !109, isLocal: true, isDefinition: true)
!2449 = !DIGlobalVariableExpression(var: !2450, expr: !DIExpression())
!2450 = distinct !DIGlobalVariable(name: "pending_current", scope: !2335, file: !2446, line: 425, type: !2338, isLocal: true, isDefinition: true)
!2451 = !DIGlobalVariableExpression(var: !2452, expr: !DIExpression())
!2452 = distinct !DIGlobalVariable(name: "lock", scope: !2453, file: !2472, line: 14, type: !2473, isLocal: true, isDefinition: true)
!2453 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2454, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2455, globals: !2471, splitDebugInlining: false, nameTableKind: None)
!2454 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/condvar.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple")
!2455 = !{!107, !103, !109, !2456}
!2456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2457, size: 32)
!2457 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2458)
!2458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2459)
!2459 = !{!2460, !2466}
!2460 = !DIDerivedType(tag: DW_TAG_member, scope: !2458, file: !127, line: 38, baseType: !2461, size: 32)
!2461 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2458, file: !127, line: 38, size: 32, elements: !2462)
!2462 = !{!2463, !2465}
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2461, file: !127, line: 39, baseType: !2464, size: 32)
!2464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2458, size: 32)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2461, file: !127, line: 40, baseType: !2464, size: 32)
!2466 = !DIDerivedType(tag: DW_TAG_member, scope: !2458, file: !127, line: 42, baseType: !2467, size: 32, offset: 32)
!2467 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2458, file: !127, line: 42, size: 32, elements: !2468)
!2468 = !{!2469, !2470}
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2467, file: !127, line: 43, baseType: !2464, size: 32)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2467, file: !127, line: 44, baseType: !2464, size: 32)
!2471 = !{!2451}
!2472 = !DIFile(filename: "zephyr/kernel/condvar.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !2474)
!2474 = !{!2475}
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2473, file: !251, line: 52, baseType: !22, size: 32)
!2476 = !DIGlobalVariableExpression(var: !2477, expr: !DIExpression())
!2477 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2478, file: !2508, line: 19, type: !2514, isLocal: true, isDefinition: true)
!2478 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2479, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2480, globals: !2505, splitDebugInlining: false, nameTableKind: None)
!2479 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple")
!2480 = !{!103, !107, !766, !110, !111, !109, !2481, !285, !105}
!2481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2482, size: 32)
!2482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !2483)
!2483 = !{!2484, !2499, !2504}
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2482, file: !122, line: 245, baseType: !2485, size: 64)
!2485 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2486)
!2486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2487)
!2487 = !{!2488, !2494}
!2488 = !DIDerivedType(tag: DW_TAG_member, scope: !2486, file: !127, line: 38, baseType: !2489, size: 32)
!2489 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2486, file: !127, line: 38, size: 32, elements: !2490)
!2490 = !{!2491, !2493}
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2489, file: !127, line: 39, baseType: !2492, size: 32)
!2492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2486, size: 32)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2489, file: !127, line: 40, baseType: !2492, size: 32)
!2494 = !DIDerivedType(tag: DW_TAG_member, scope: !2486, file: !127, line: 42, baseType: !2495, size: 32, offset: 32)
!2495 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2486, file: !127, line: 42, size: 32, elements: !2496)
!2496 = !{!2497, !2498}
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2495, file: !127, line: 43, baseType: !2492, size: 32)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2495, file: !127, line: 44, baseType: !2492, size: 32)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2482, file: !122, line: 246, baseType: !2500, size: 32, offset: 64)
!2500 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !2501)
!2501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2502, size: 32)
!2502 = !DISubroutineType(types: !2503)
!2503 = !{null, !2481}
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2482, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!2505 = !{!2506, !2476, !2509, !2511}
!2506 = !DIGlobalVariableExpression(var: !2507, expr: !DIExpression())
!2507 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2478, file: !2508, line: 15, type: !111, isLocal: true, isDefinition: true)
!2508 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2509 = !DIGlobalVariableExpression(var: !2510, expr: !DIExpression())
!2510 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2478, file: !2508, line: 25, type: !109, isLocal: true, isDefinition: true)
!2511 = !DIGlobalVariableExpression(var: !2512, expr: !DIExpression())
!2512 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2478, file: !2508, line: 17, type: !2513, isLocal: true, isDefinition: true)
!2513 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2486)
!2514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !2515)
!2515 = !{!2516}
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2514, file: !251, line: 52, baseType: !22, size: 32)
!2517 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2518, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!2518 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple")
!2519 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2520, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!2520 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple")
!2521 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2522, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2523, retainedTypes: !2543, splitDebugInlining: false, nameTableKind: None)
!2522 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple")
!2523 = !{!2524, !2532}
!2524 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2525, line: 69, baseType: !32, size: 32, elements: !2526)
!2525 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2526 = !{!2527, !2528, !2529, !2530, !2531}
!2527 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2528 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2529 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2530 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2531 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2532 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2525, line: 56, baseType: !32, size: 32, elements: !2533)
!2533 = !{!2534, !2535, !2536, !2537, !2538, !2539, !2540, !2541, !2542}
!2534 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2535 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2536 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2537 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2538 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2539 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2540 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2541 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2542 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2543 = !{!109, !2524, !2532, !2544, !189, !354, !2546, !2547, !179, !193, !279, !232, !107, !22, !32, !281, !2549, !2550, !102, !282, !106, !283, !2545, !2551, !2552, !2553, !2554}
!2544 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2525, line: 31, baseType: !2545)
!2545 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !106)
!2546 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !233, line: 329, baseType: !32)
!2547 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2525, line: 32, baseType: !2548)
!2548 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !112)
!2549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 32)
!2550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !354, size: 32)
!2551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2545, size: 32)
!2552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !232, size: 32)
!2553 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !233, line: 145, baseType: !109)
!2554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2553, size: 32)
!2555 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2556, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!2556 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple")
!2557 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2558, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2558 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple")
!2559 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2560, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2561, splitDebugInlining: false, nameTableKind: None)
!2560 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple")
!2561 = !{!279, !179, !109, !32}
!2562 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2563, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2564, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!2563 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple")
!2564 = !{!2565, !30}
!2565 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2566, line: 27, baseType: !32, size: 32, elements: !2567)
!2566 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2567 = !{!2568, !2569, !2570, !2571, !2572}
!2568 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2569 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2570 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2571 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2572 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2573 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2574, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2575, retainedTypes: !2576, splitDebugInlining: false, nameTableKind: None)
!2574 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple")
!2575 = !{!604, !2565, !30}
!2576 = !{!792, !2577, !107, !109, !766, !110, !178, !2594}
!2577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2578, size: 32)
!2578 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !535, line: 426, baseType: !2579)
!2579 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 411, size: 28704, elements: !2580)
!2580 = !{!2581, !2582, !2583, !2584, !2585, !2586, !2587, !2588, !2589, !2590, !2591, !2592, !2593}
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2579, file: !535, line: 413, baseType: !1586, size: 256)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2579, file: !535, line: 414, baseType: !1588, size: 768, offset: 256)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2579, file: !535, line: 415, baseType: !1586, size: 256, offset: 1024)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2579, file: !535, line: 416, baseType: !1588, size: 768, offset: 1280)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2579, file: !535, line: 417, baseType: !1586, size: 256, offset: 2048)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2579, file: !535, line: 418, baseType: !1588, size: 768, offset: 2304)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2579, file: !535, line: 419, baseType: !1586, size: 256, offset: 3072)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2579, file: !535, line: 420, baseType: !1588, size: 768, offset: 3328)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2579, file: !535, line: 421, baseType: !1586, size: 256, offset: 4096)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2579, file: !535, line: 422, baseType: !1599, size: 1792, offset: 4352)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2579, file: !535, line: 423, baseType: !1603, size: 1920, offset: 6144)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2579, file: !535, line: 424, baseType: !1608, size: 20608, offset: 8064)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2579, file: !535, line: 425, baseType: !316, size: 32, offset: 28672)
!2594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2595, size: 32)
!2595 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !2596)
!2596 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !2597)
!2597 = !{!2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2609, !2610, !2611, !2612, !2613, !2614, !2615, !2616, !2617, !2618}
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2596, file: !535, line: 447, baseType: !539, size: 32)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2596, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2596, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2596, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2596, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2596, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2596, file: !535, line: 453, baseType: !1623, size: 96, offset: 192)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2596, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2596, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2596, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2596, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2596, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2596, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2596, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2596, file: !535, line: 461, baseType: !1634, size: 64, offset: 512)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2596, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2596, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2596, file: !535, line: 464, baseType: !1638, size: 128, offset: 640)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2596, file: !535, line: 465, baseType: !1640, size: 160, offset: 768)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2596, file: !535, line: 466, baseType: !1642, size: 160, offset: 928)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2596, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!2619 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2620, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!2620 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple")
!2621 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2622, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2623, splitDebugInlining: false, nameTableKind: None)
!2622 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple")
!2623 = !{!107, !109, !22, !2624}
!2624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2625, size: 32)
!2625 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !2626)
!2626 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !2627)
!2627 = !{!2628, !2629, !2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648}
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2626, file: !535, line: 447, baseType: !539, size: 32)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2626, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2626, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2626, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2626, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2626, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2626, file: !535, line: 453, baseType: !1623, size: 96, offset: 192)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2626, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2626, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2626, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2626, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2626, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2626, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2626, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2626, file: !535, line: 461, baseType: !1634, size: 64, offset: 512)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2626, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2626, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2626, file: !535, line: 464, baseType: !1638, size: 128, offset: 640)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2626, file: !535, line: 465, baseType: !1640, size: 160, offset: 768)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2626, file: !535, line: 466, baseType: !1642, size: 160, offset: 928)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2626, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!2649 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2650, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2651, splitDebugInlining: false, nameTableKind: None)
!2650 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple")
!2651 = !{!2652, !107, !109}
!2652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2653, size: 32)
!2653 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !2654)
!2654 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !2655)
!2655 = !{!2656, !2657, !2658, !2659, !2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676}
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2654, file: !535, line: 447, baseType: !539, size: 32)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2654, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2654, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2654, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2654, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2654, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2654, file: !535, line: 453, baseType: !1623, size: 96, offset: 192)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2654, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2654, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2654, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2654, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2654, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2654, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2654, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2654, file: !535, line: 461, baseType: !1634, size: 64, offset: 512)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2654, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2654, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2654, file: !535, line: 464, baseType: !1638, size: 128, offset: 640)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2654, file: !535, line: 465, baseType: !1640, size: 160, offset: 768)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2654, file: !535, line: 466, baseType: !1642, size: 160, offset: 928)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2654, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!2677 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2678, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2679, splitDebugInlining: false, nameTableKind: None)
!2678 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple")
!2679 = !{!2680, !110, !107, !109}
!2680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2681, size: 32)
!2681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2682, line: 98, size: 256, elements: !2683)
!2682 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2683 = !{!2684, !2689, !2694, !2699, !2704, !2709, !2714, !2719}
!2684 = !DIDerivedType(tag: DW_TAG_member, scope: !2681, file: !2682, line: 99, baseType: !2685, size: 32)
!2685 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2681, file: !2682, line: 99, size: 32, elements: !2686)
!2686 = !{!2687, !2688}
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2685, file: !2682, line: 99, baseType: !110, size: 32)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2685, file: !2682, line: 99, baseType: !110, size: 32)
!2689 = !DIDerivedType(tag: DW_TAG_member, scope: !2681, file: !2682, line: 100, baseType: !2690, size: 32, offset: 32)
!2690 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2681, file: !2682, line: 100, size: 32, elements: !2691)
!2691 = !{!2692, !2693}
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2690, file: !2682, line: 100, baseType: !110, size: 32)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2690, file: !2682, line: 100, baseType: !110, size: 32)
!2694 = !DIDerivedType(tag: DW_TAG_member, scope: !2681, file: !2682, line: 101, baseType: !2695, size: 32, offset: 64)
!2695 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2681, file: !2682, line: 101, size: 32, elements: !2696)
!2696 = !{!2697, !2698}
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2695, file: !2682, line: 101, baseType: !110, size: 32)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2695, file: !2682, line: 101, baseType: !110, size: 32)
!2699 = !DIDerivedType(tag: DW_TAG_member, scope: !2681, file: !2682, line: 102, baseType: !2700, size: 32, offset: 96)
!2700 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2681, file: !2682, line: 102, size: 32, elements: !2701)
!2701 = !{!2702, !2703}
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2700, file: !2682, line: 102, baseType: !110, size: 32)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2700, file: !2682, line: 102, baseType: !110, size: 32)
!2704 = !DIDerivedType(tag: DW_TAG_member, scope: !2681, file: !2682, line: 103, baseType: !2705, size: 32, offset: 128)
!2705 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2681, file: !2682, line: 103, size: 32, elements: !2706)
!2706 = !{!2707, !2708}
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2705, file: !2682, line: 103, baseType: !110, size: 32)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2705, file: !2682, line: 103, baseType: !110, size: 32)
!2709 = !DIDerivedType(tag: DW_TAG_member, scope: !2681, file: !2682, line: 104, baseType: !2710, size: 32, offset: 160)
!2710 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2681, file: !2682, line: 104, size: 32, elements: !2711)
!2711 = !{!2712, !2713}
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2710, file: !2682, line: 104, baseType: !110, size: 32)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2710, file: !2682, line: 104, baseType: !110, size: 32)
!2714 = !DIDerivedType(tag: DW_TAG_member, scope: !2681, file: !2682, line: 105, baseType: !2715, size: 32, offset: 192)
!2715 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2681, file: !2682, line: 105, size: 32, elements: !2716)
!2716 = !{!2717, !2718}
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2715, file: !2682, line: 105, baseType: !110, size: 32)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2715, file: !2682, line: 105, baseType: !110, size: 32)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2681, file: !2682, line: 106, baseType: !110, size: 32, offset: 224)
!2720 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2721, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2564, retainedTypes: !2722, splitDebugInlining: false, nameTableKind: None)
!2721 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple")
!2722 = !{!2723, !107, !109, !2748, !2791, !110}
!2723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2724, size: 32)
!2724 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !2725)
!2725 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !2726)
!2726 = !{!2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744, !2745, !2746, !2747}
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2725, file: !535, line: 447, baseType: !539, size: 32)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2725, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2725, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2725, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2725, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2725, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2725, file: !535, line: 453, baseType: !1623, size: 96, offset: 192)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2725, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2725, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2725, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2725, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2725, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2725, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2725, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2725, file: !535, line: 461, baseType: !1634, size: 64, offset: 512)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2725, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2725, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2725, file: !535, line: 464, baseType: !1638, size: 128, offset: 640)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2725, file: !535, line: 465, baseType: !1640, size: 160, offset: 768)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2725, file: !535, line: 466, baseType: !1642, size: 160, offset: 928)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2725, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!2748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2749, size: 32)
!2749 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2682, line: 141, baseType: !2750)
!2750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2682, line: 97, size: 256, elements: !2751)
!2751 = !{!2752}
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2750, file: !2682, line: 107, baseType: !2753, size: 256)
!2753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2682, line: 98, size: 256, elements: !2754)
!2754 = !{!2755, !2760, !2765, !2770, !2775, !2780, !2785, !2790}
!2755 = !DIDerivedType(tag: DW_TAG_member, scope: !2753, file: !2682, line: 99, baseType: !2756, size: 32)
!2756 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2753, file: !2682, line: 99, size: 32, elements: !2757)
!2757 = !{!2758, !2759}
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2756, file: !2682, line: 99, baseType: !110, size: 32)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2756, file: !2682, line: 99, baseType: !110, size: 32)
!2760 = !DIDerivedType(tag: DW_TAG_member, scope: !2753, file: !2682, line: 100, baseType: !2761, size: 32, offset: 32)
!2761 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2753, file: !2682, line: 100, size: 32, elements: !2762)
!2762 = !{!2763, !2764}
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2761, file: !2682, line: 100, baseType: !110, size: 32)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2761, file: !2682, line: 100, baseType: !110, size: 32)
!2765 = !DIDerivedType(tag: DW_TAG_member, scope: !2753, file: !2682, line: 101, baseType: !2766, size: 32, offset: 64)
!2766 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2753, file: !2682, line: 101, size: 32, elements: !2767)
!2767 = !{!2768, !2769}
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2766, file: !2682, line: 101, baseType: !110, size: 32)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2766, file: !2682, line: 101, baseType: !110, size: 32)
!2770 = !DIDerivedType(tag: DW_TAG_member, scope: !2753, file: !2682, line: 102, baseType: !2771, size: 32, offset: 96)
!2771 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2753, file: !2682, line: 102, size: 32, elements: !2772)
!2772 = !{!2773, !2774}
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2771, file: !2682, line: 102, baseType: !110, size: 32)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2771, file: !2682, line: 102, baseType: !110, size: 32)
!2775 = !DIDerivedType(tag: DW_TAG_member, scope: !2753, file: !2682, line: 103, baseType: !2776, size: 32, offset: 128)
!2776 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2753, file: !2682, line: 103, size: 32, elements: !2777)
!2777 = !{!2778, !2779}
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2776, file: !2682, line: 103, baseType: !110, size: 32)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2776, file: !2682, line: 103, baseType: !110, size: 32)
!2780 = !DIDerivedType(tag: DW_TAG_member, scope: !2753, file: !2682, line: 104, baseType: !2781, size: 32, offset: 160)
!2781 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2753, file: !2682, line: 104, size: 32, elements: !2782)
!2782 = !{!2783, !2784}
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2781, file: !2682, line: 104, baseType: !110, size: 32)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2781, file: !2682, line: 104, baseType: !110, size: 32)
!2785 = !DIDerivedType(tag: DW_TAG_member, scope: !2753, file: !2682, line: 105, baseType: !2786, size: 32, offset: 192)
!2786 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2753, file: !2682, line: 105, size: 32, elements: !2787)
!2787 = !{!2788, !2789}
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2786, file: !2682, line: 105, baseType: !110, size: 32)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2786, file: !2682, line: 105, baseType: !110, size: 32)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2753, file: !2682, line: 106, baseType: !110, size: 32, offset: 224)
!2791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !192, size: 32)
!2792 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2793, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1571, retainedTypes: !2794, splitDebugInlining: false, nameTableKind: None)
!2793 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple")
!2794 = !{!792, !766, !178, !110, !2795, !2812}
!2795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2796, size: 32)
!2796 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !535, line: 426, baseType: !2797)
!2797 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 411, size: 28704, elements: !2798)
!2798 = !{!2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806, !2807, !2808, !2809, !2810, !2811}
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2797, file: !535, line: 413, baseType: !1586, size: 256)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2797, file: !535, line: 414, baseType: !1588, size: 768, offset: 256)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2797, file: !535, line: 415, baseType: !1586, size: 256, offset: 1024)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2797, file: !535, line: 416, baseType: !1588, size: 768, offset: 1280)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2797, file: !535, line: 417, baseType: !1586, size: 256, offset: 2048)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2797, file: !535, line: 418, baseType: !1588, size: 768, offset: 2304)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2797, file: !535, line: 419, baseType: !1586, size: 256, offset: 3072)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2797, file: !535, line: 420, baseType: !1588, size: 768, offset: 3328)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2797, file: !535, line: 421, baseType: !1586, size: 256, offset: 4096)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2797, file: !535, line: 422, baseType: !1599, size: 1792, offset: 4352)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2797, file: !535, line: 423, baseType: !1603, size: 1920, offset: 6144)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2797, file: !535, line: 424, baseType: !1608, size: 20608, offset: 8064)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2797, file: !535, line: 425, baseType: !316, size: 32, offset: 28672)
!2812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2813, size: 32)
!2813 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !2814)
!2814 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !2815)
!2815 = !{!2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836}
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2814, file: !535, line: 447, baseType: !539, size: 32)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2814, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2814, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2814, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2814, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2814, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2814, file: !535, line: 453, baseType: !1623, size: 96, offset: 192)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2814, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2814, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2814, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2814, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2814, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2814, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2814, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2814, file: !535, line: 461, baseType: !1634, size: 64, offset: 512)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2814, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2814, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2814, file: !535, line: 464, baseType: !1638, size: 128, offset: 640)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2814, file: !535, line: 465, baseType: !1640, size: 160, offset: 768)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2814, file: !535, line: 466, baseType: !1642, size: 160, offset: 928)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2814, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!2837 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2838, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2839, splitDebugInlining: false, nameTableKind: None)
!2838 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple")
!2839 = !{!2840, !107, !109}
!2840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2841, size: 32)
!2841 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !2842)
!2842 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !2843)
!2843 = !{!2844, !2845, !2846, !2847, !2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861, !2862, !2863, !2864}
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2842, file: !535, line: 447, baseType: !539, size: 32)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2842, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2842, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2842, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2842, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2842, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2842, file: !535, line: 453, baseType: !1623, size: 96, offset: 192)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2842, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2842, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2842, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2842, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2842, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2842, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2842, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2842, file: !535, line: 461, baseType: !1634, size: 64, offset: 512)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2842, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2842, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2842, file: !535, line: 464, baseType: !1638, size: 128, offset: 640)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2842, file: !535, line: 465, baseType: !1640, size: 160, offset: 768)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2842, file: !535, line: 466, baseType: !1642, size: 160, offset: 928)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2842, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!2865 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2866, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2867, splitDebugInlining: false, nameTableKind: None)
!2866 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple")
!2867 = !{!148, !285, !232, !991, !2868, !179, !107}
!2868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2869, size: 32)
!2869 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !179)
!2870 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2871, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2872, splitDebugInlining: false, nameTableKind: None)
!2871 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple")
!2872 = !{!2873}
!2873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2874, size: 32)
!2874 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !312, line: 532, baseType: !2875)
!2875 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 500, size: 1088, elements: !2876)
!2876 = !{!2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905, !2906}
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2875, file: !312, line: 502, baseType: !316, size: 32)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2875, file: !312, line: 503, baseType: !316, size: 32, offset: 32)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2875, file: !312, line: 504, baseType: !316, size: 32, offset: 64)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2875, file: !312, line: 505, baseType: !316, size: 32, offset: 96)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2875, file: !312, line: 506, baseType: !316, size: 32, offset: 128)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2875, file: !312, line: 507, baseType: !316, size: 32, offset: 160)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2875, file: !312, line: 508, baseType: !316, size: 32, offset: 192)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2875, file: !312, line: 509, baseType: !110, size: 32, offset: 224)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2875, file: !312, line: 510, baseType: !316, size: 32, offset: 256)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2875, file: !312, line: 511, baseType: !316, size: 32, offset: 288)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2875, file: !312, line: 512, baseType: !860, size: 64, offset: 320)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2875, file: !312, line: 513, baseType: !316, size: 32, offset: 384)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2875, file: !312, line: 514, baseType: !316, size: 32, offset: 416)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2875, file: !312, line: 515, baseType: !316, size: 32, offset: 448)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2875, file: !312, line: 516, baseType: !110, size: 32, offset: 480)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2875, file: !312, line: 517, baseType: !316, size: 32, offset: 512)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2875, file: !312, line: 518, baseType: !316, size: 32, offset: 544)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2875, file: !312, line: 519, baseType: !860, size: 64, offset: 576)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2875, file: !312, line: 520, baseType: !316, size: 32, offset: 640)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2875, file: !312, line: 521, baseType: !316, size: 32, offset: 672)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2875, file: !312, line: 522, baseType: !316, size: 32, offset: 704)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2875, file: !312, line: 523, baseType: !110, size: 32, offset: 736)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2875, file: !312, line: 524, baseType: !316, size: 32, offset: 768)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2875, file: !312, line: 525, baseType: !316, size: 32, offset: 800)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2875, file: !312, line: 526, baseType: !860, size: 64, offset: 832)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2875, file: !312, line: 527, baseType: !316, size: 32, offset: 896)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2875, file: !312, line: 528, baseType: !316, size: 32, offset: 928)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2875, file: !312, line: 529, baseType: !860, size: 64, offset: 960)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2875, file: !312, line: 530, baseType: !316, size: 32, offset: 1024)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2875, file: !312, line: 531, baseType: !316, size: 32, offset: 1056)
!2907 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2908, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2908 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple")
!2909 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2910, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2911, retainedTypes: !2927, splitDebugInlining: false, nameTableKind: None)
!2910 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple")
!2911 = !{!2912, !2919, !2923}
!2912 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2913, line: 38, baseType: !32, size: 32, elements: !2914)
!2913 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2914 = !{!2915, !2916, !2917, !2918}
!2915 = !DIEnumerator(name: "HAL_OK", value: 0)
!2916 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2917 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2918 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2919 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !833, line: 184, baseType: !32, size: 32, elements: !2920)
!2920 = !{!2921, !2922}
!2921 = !DIEnumerator(name: "RESET", value: 0)
!2922 = !DIEnumerator(name: "SET", value: 1)
!2923 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !833, line: 190, baseType: !32, size: 32, elements: !2924)
!2924 = !{!2925, !2926}
!2925 = !DIEnumerator(name: "DISABLE", value: 0)
!2926 = !DIEnumerator(name: "ENABLE", value: 1)
!2927 = !{!107, !2928, !178, !110, !1480, !2962, !2968, !2979, !192, !2980, !111}
!2928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2929, size: 32)
!2929 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !312, line: 532, baseType: !2930)
!2930 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 500, size: 1088, elements: !2931)
!2931 = !{!2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2946, !2947, !2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961}
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2930, file: !312, line: 502, baseType: !316, size: 32)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2930, file: !312, line: 503, baseType: !316, size: 32, offset: 32)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2930, file: !312, line: 504, baseType: !316, size: 32, offset: 64)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2930, file: !312, line: 505, baseType: !316, size: 32, offset: 96)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2930, file: !312, line: 506, baseType: !316, size: 32, offset: 128)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2930, file: !312, line: 507, baseType: !316, size: 32, offset: 160)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2930, file: !312, line: 508, baseType: !316, size: 32, offset: 192)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2930, file: !312, line: 509, baseType: !110, size: 32, offset: 224)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2930, file: !312, line: 510, baseType: !316, size: 32, offset: 256)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2930, file: !312, line: 511, baseType: !316, size: 32, offset: 288)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2930, file: !312, line: 512, baseType: !860, size: 64, offset: 320)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2930, file: !312, line: 513, baseType: !316, size: 32, offset: 384)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2930, file: !312, line: 514, baseType: !316, size: 32, offset: 416)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2930, file: !312, line: 515, baseType: !316, size: 32, offset: 448)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2930, file: !312, line: 516, baseType: !110, size: 32, offset: 480)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2930, file: !312, line: 517, baseType: !316, size: 32, offset: 512)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2930, file: !312, line: 518, baseType: !316, size: 32, offset: 544)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2930, file: !312, line: 519, baseType: !860, size: 64, offset: 576)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2930, file: !312, line: 520, baseType: !316, size: 32, offset: 640)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2930, file: !312, line: 521, baseType: !316, size: 32, offset: 672)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2930, file: !312, line: 522, baseType: !316, size: 32, offset: 704)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2930, file: !312, line: 523, baseType: !110, size: 32, offset: 736)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2930, file: !312, line: 524, baseType: !316, size: 32, offset: 768)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2930, file: !312, line: 525, baseType: !316, size: 32, offset: 800)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2930, file: !312, line: 526, baseType: !860, size: 64, offset: 832)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2930, file: !312, line: 527, baseType: !316, size: 32, offset: 896)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2930, file: !312, line: 528, baseType: !316, size: 32, offset: 928)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2930, file: !312, line: 529, baseType: !860, size: 64, offset: 960)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2930, file: !312, line: 530, baseType: !316, size: 32, offset: 1024)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2930, file: !312, line: 531, baseType: !316, size: 32, offset: 1056)
!2962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2963, size: 32)
!2963 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !312, line: 494, baseType: !2964)
!2964 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 490, size: 64, elements: !2965)
!2965 = !{!2966, !2967}
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2964, file: !312, line: 492, baseType: !316, size: 32)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2964, file: !312, line: 493, baseType: !316, size: 32, offset: 32)
!2968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2969, size: 32)
!2969 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !312, line: 369, baseType: !2970)
!2970 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 360, size: 224, elements: !2971)
!2971 = !{!2972, !2973, !2974, !2975, !2976, !2977, !2978}
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2970, file: !312, line: 362, baseType: !316, size: 32)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2970, file: !312, line: 363, baseType: !316, size: 32, offset: 32)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2970, file: !312, line: 364, baseType: !316, size: 32, offset: 64)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2970, file: !312, line: 365, baseType: !316, size: 32, offset: 96)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2970, file: !312, line: 366, baseType: !316, size: 32, offset: 128)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2970, file: !312, line: 367, baseType: !316, size: 32, offset: 160)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2970, file: !312, line: 368, baseType: !316, size: 32, offset: 192)
!2979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1604, size: 32)
!2980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2981, size: 32)
!2981 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !312, line: 441, baseType: !2982)
!2982 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 430, size: 320, elements: !2983)
!2983 = !{!2984, !2985, !2986, !2987, !2988, !2989, !2990, !2991, !2992}
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !2982, file: !312, line: 432, baseType: !316, size: 32)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !2982, file: !312, line: 433, baseType: !316, size: 32, offset: 32)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !2982, file: !312, line: 434, baseType: !316, size: 32, offset: 64)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !2982, file: !312, line: 435, baseType: !316, size: 32, offset: 96)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !2982, file: !312, line: 436, baseType: !316, size: 32, offset: 128)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !2982, file: !312, line: 437, baseType: !316, size: 32, offset: 160)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !2982, file: !312, line: 438, baseType: !316, size: 32, offset: 192)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !2982, file: !312, line: 439, baseType: !316, size: 32, offset: 224)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !2982, file: !312, line: 440, baseType: !1145, size: 64, offset: 256)
!2993 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2994, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2995, retainedTypes: !2996, splitDebugInlining: false, nameTableKind: None)
!2994 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple")
!2995 = !{!832}
!2996 = !{!2997, !110, !3005, !3011, !3022}
!2997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2998, size: 32)
!2998 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !535, line: 770, baseType: !2999)
!2999 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 764, size: 128, elements: !3000)
!3000 = !{!3001, !3002, !3003, !3004}
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2999, file: !535, line: 766, baseType: !316, size: 32)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2999, file: !535, line: 767, baseType: !316, size: 32, offset: 32)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2999, file: !535, line: 768, baseType: !316, size: 32, offset: 64)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2999, file: !535, line: 769, baseType: !539, size: 32, offset: 96)
!3005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3006, size: 32)
!3006 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !312, line: 494, baseType: !3007)
!3007 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 490, size: 64, elements: !3008)
!3008 = !{!3009, !3010}
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3007, file: !312, line: 492, baseType: !316, size: 32)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3007, file: !312, line: 493, baseType: !316, size: 32, offset: 32)
!3011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3012, size: 32)
!3012 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !312, line: 369, baseType: !3013)
!3013 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 360, size: 224, elements: !3014)
!3014 = !{!3015, !3016, !3017, !3018, !3019, !3020, !3021}
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3013, file: !312, line: 362, baseType: !316, size: 32)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3013, file: !312, line: 363, baseType: !316, size: 32, offset: 32)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3013, file: !312, line: 364, baseType: !316, size: 32, offset: 64)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3013, file: !312, line: 365, baseType: !316, size: 32, offset: 96)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3013, file: !312, line: 366, baseType: !316, size: 32, offset: 128)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3013, file: !312, line: 367, baseType: !316, size: 32, offset: 160)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3013, file: !312, line: 368, baseType: !316, size: 32, offset: 192)
!3022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3023, size: 32)
!3023 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !312, line: 532, baseType: !3024)
!3024 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 500, size: 1088, elements: !3025)
!3025 = !{!3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3038, !3039, !3040, !3041, !3042, !3043, !3044, !3045, !3046, !3047, !3048, !3049, !3050, !3051, !3052, !3053, !3054, !3055}
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3024, file: !312, line: 502, baseType: !316, size: 32)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3024, file: !312, line: 503, baseType: !316, size: 32, offset: 32)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3024, file: !312, line: 504, baseType: !316, size: 32, offset: 64)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3024, file: !312, line: 505, baseType: !316, size: 32, offset: 96)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3024, file: !312, line: 506, baseType: !316, size: 32, offset: 128)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3024, file: !312, line: 507, baseType: !316, size: 32, offset: 160)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3024, file: !312, line: 508, baseType: !316, size: 32, offset: 192)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3024, file: !312, line: 509, baseType: !110, size: 32, offset: 224)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3024, file: !312, line: 510, baseType: !316, size: 32, offset: 256)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3024, file: !312, line: 511, baseType: !316, size: 32, offset: 288)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3024, file: !312, line: 512, baseType: !860, size: 64, offset: 320)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3024, file: !312, line: 513, baseType: !316, size: 32, offset: 384)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3024, file: !312, line: 514, baseType: !316, size: 32, offset: 416)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3024, file: !312, line: 515, baseType: !316, size: 32, offset: 448)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3024, file: !312, line: 516, baseType: !110, size: 32, offset: 480)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3024, file: !312, line: 517, baseType: !316, size: 32, offset: 512)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3024, file: !312, line: 518, baseType: !316, size: 32, offset: 544)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3024, file: !312, line: 519, baseType: !860, size: 64, offset: 576)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3024, file: !312, line: 520, baseType: !316, size: 32, offset: 640)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3024, file: !312, line: 521, baseType: !316, size: 32, offset: 672)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3024, file: !312, line: 522, baseType: !316, size: 32, offset: 704)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3024, file: !312, line: 523, baseType: !110, size: 32, offset: 736)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3024, file: !312, line: 524, baseType: !316, size: 32, offset: 768)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3024, file: !312, line: 525, baseType: !316, size: 32, offset: 800)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3024, file: !312, line: 526, baseType: !860, size: 64, offset: 832)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3024, file: !312, line: 527, baseType: !316, size: 32, offset: 896)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3024, file: !312, line: 528, baseType: !316, size: 32, offset: 928)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3024, file: !312, line: 529, baseType: !860, size: 64, offset: 960)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3024, file: !312, line: 530, baseType: !316, size: 32, offset: 1024)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3024, file: !312, line: 531, baseType: !316, size: 32, offset: 1056)
!3056 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3057, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3058, splitDebugInlining: false, nameTableKind: None)
!3057 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple")
!3058 = !{!107, !232}
!3059 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3060, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3061, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!3060 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple")
!3061 = !{!3062, !3069, !2565, !30}
!3062 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3063, line: 14, baseType: !32, size: 32, elements: !3064)
!3063 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3064 = !{!3065, !3066, !3067, !3068}
!3065 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3066 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3067 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3068 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3069 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3063, line: 42, baseType: !32, size: 32, elements: !3070)
!3070 = !{!3071, !3072, !3073, !3074, !3075, !3076}
!3071 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3072 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3073 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3074 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3075 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3076 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3077 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3078, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!3078 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple")
!3079 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3080, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3081, splitDebugInlining: false, nameTableKind: None)
!3080 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple")
!3081 = !{!22, !107, !109}
!3082 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3083, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!3083 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple")
!3084 = !{!"Ubuntu clang version 14.0.6"}
!3085 = !{i32 7, !"Dwarf Version", i32 4}
!3086 = !{i32 2, !"Debug Info Version", i32 3}
!3087 = !{i32 1, !"wchar_size", i32 4}
!3088 = !{i32 1, !"min_enum_size", i32 4}
!3089 = !{i32 1, !"branch-target-enforcement", i32 0}
!3090 = !{i32 1, !"sign-return-address", i32 0}
!3091 = !{i32 1, !"sign-return-address-all", i32 0}
!3092 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3093 = !{i32 7, !"frame-pointer", i32 2}
!3094 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3095, file: !3095, line: 26, type: !3096, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !2036)
!3095 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3096 = !DISubroutineType(types: !3097)
!3097 = !{null}
!3098 = !DILocation(line: 28, column: 1, scope: !3094)
!3099 = !{i64 2155129036, i64 2155129056, i64 2155129119}
!3100 = !DILocation(line: 29, column: 1, scope: !3094)
!3101 = !{i64 2155129451, i64 2155129471, i64 2155129534}
!3102 = !DILocation(line: 30, column: 1, scope: !3094)
!3103 = !{i64 2155129870, i64 2155129890, i64 2155129953}
!3104 = !DILocation(line: 31, column: 1, scope: !3094)
!3105 = !{i64 2155130289, i64 2155130309, i64 2155130372}
!3106 = !DILocation(line: 33, column: 1, scope: !3094)
!3107 = !{i64 2155130581, i64 2155130601, i64 2155130664}
!3108 = !DILocation(line: 35, column: 1, scope: !3094)
!3109 = !{i64 2155130906, i64 2155130926, i64 2155130989}
!3110 = !DILocation(line: 50, column: 1, scope: !3094)
!3111 = !{i64 2155131333, i64 2155131353, i64 2155131416}
!3112 = !DILocation(line: 54, column: 1, scope: !3094)
!3113 = !{i64 2155131772, i64 2155131792, i64 2155131855}
!3114 = !DILocation(line: 61, column: 1, scope: !3094)
!3115 = !{i64 2155132089, i64 2155132109, i64 2155132172}
!3116 = !DILocation(line: 63, column: 1, scope: !3094)
!3117 = !{i64 2155132469, i64 2155132489, i64 2155132552}
!3118 = !DILocation(line: 64, column: 1, scope: !3094)
!3119 = !{i64 2155132991, i64 2155133011, i64 2155133074}
!3120 = !DILocation(line: 65, column: 1, scope: !3094)
!3121 = !{i64 2155133489, i64 2155133509, i64 2155133572}
!3122 = !DILocation(line: 66, column: 1, scope: !3094)
!3123 = !{i64 2155133971, i64 2155133991, i64 2155134054}
!3124 = !DILocation(line: 67, column: 1, scope: !3094)
!3125 = !{i64 2155134478, i64 2155134498, i64 2155134561}
!3126 = !DILocation(line: 68, column: 1, scope: !3094)
!3127 = !{i64 2155134966, i64 2155134986, i64 2155135049}
!3128 = !DILocation(line: 70, column: 1, scope: !3094)
!3129 = !{i64 2155139495, i64 2155139515, i64 2155139578}
!3130 = !DILocation(line: 71, column: 1, scope: !3094)
!3131 = !{i64 2155139937, i64 2155139957, i64 2155140020}
!3132 = !DILocation(line: 72, column: 1, scope: !3094)
!3133 = !{i64 2155140395, i64 2155140415, i64 2155140478}
!3134 = !DILocation(line: 79, column: 1, scope: !3094)
!3135 = !{i64 2155140849, i64 2155140869, i64 2155140932}
!3136 = !DILocation(line: 80, column: 1, scope: !3094)
!3137 = !{i64 2155141360, i64 2155141380, i64 2155141443}
!3138 = !DILocation(line: 82, column: 1, scope: !3094)
!3139 = !{i64 2155141851, i64 2155141871, i64 2155141934}
!3140 = !DILocation(line: 97, column: 1, scope: !3094)
!3141 = !{i64 2155142188, i64 2155142208, i64 2155142271}
!3142 = !DILocation(line: 99, column: 1, scope: !3094)
!3143 = !{i64 2155142406, i64 2155142426, i64 2155142489}
!3144 = !DILocation(line: 102, column: 1, scope: !3094)
!3145 = !{i64 2155142663, i64 2155142683, i64 2155142746}
!3146 = !DILocation(line: 105, column: 1, scope: !3094)
!3147 = !{i64 2155142903, i64 2155142923, i64 2155142986}
!3148 = !DILocation(line: 115, column: 1, scope: !3094)
!3149 = !{i64 2155143242, i64 2155143262, i64 2155143325}
!3150 = !DILocation(line: 118, column: 1, scope: !3094)
!3151 = !{i64 2155143586, i64 2155143606, i64 2155143669}
!3152 = !DILocation(line: 32, column: 1, scope: !3153)
!3153 = !DILexicalBlockFile(scope: !3094, file: !3154, discriminator: 0)
!3154 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3155 = !{i64 2155143942, i64 2155143962, i64 2155144025}
!3156 = !DILocation(line: 33, column: 1, scope: !3153)
!3157 = !{i64 2155144454, i64 2155144474, i64 2155144537}
!3158 = !DILocation(line: 53, column: 1, scope: !3153)
!3159 = !{i64 2155144962, i64 2155144982, i64 2155145045}
!3160 = !DILocation(line: 54, column: 1, scope: !3153)
!3161 = !{i64 2155145380, i64 2155145400, i64 2155145463}
!3162 = !DILocation(line: 55, column: 1, scope: !3153)
!3163 = !{i64 2155145798, i64 2155145818, i64 2155145881}
!3164 = !DILocation(line: 56, column: 1, scope: !3153)
!3165 = !{i64 2155146216, i64 2155146236, i64 2155146299}
!3166 = !DILocation(line: 57, column: 1, scope: !3153)
!3167 = !{i64 2155146634, i64 2155146654, i64 2155146717}
!3168 = !DILocation(line: 58, column: 1, scope: !3153)
!3169 = !{i64 2155147052, i64 2155147072, i64 2155147135}
!3170 = !DILocation(line: 59, column: 1, scope: !3153)
!3171 = !{i64 2155147470, i64 2155147490, i64 2155147553}
!3172 = !DILocation(line: 60, column: 1, scope: !3153)
!3173 = !{i64 2155147894, i64 2155147914, i64 2155147977}
!3174 = !DILocation(line: 61, column: 1, scope: !3153)
!3175 = !{i64 2155148211, i64 2155148231, i64 2155148294}
!3176 = !DILocation(line: 70, column: 1, scope: !3153)
!3177 = !{i64 2155148440, i64 2155148460, i64 2155148523}
!3178 = !DILocation(line: 72, column: 1, scope: !3153)
!3179 = !{i64 2155148772, i64 2155148792, i64 2155148855}
!3180 = !DILocation(line: 73, column: 1, scope: !3153)
!3181 = !{i64 2155153283, i64 2155153303, i64 2155153366}
!3182 = !DILocation(line: 74, column: 1, scope: !3153)
!3183 = !{i64 2155153733, i64 2155153753, i64 2155153816}
!3184 = !DILocation(line: 75, column: 1, scope: !3153)
!3185 = !{i64 2155154183, i64 2155154203, i64 2155154266}
!3186 = !DILocation(line: 76, column: 1, scope: !3153)
!3187 = !{i64 2155154633, i64 2155154653, i64 2155154716}
!3188 = !DILocation(line: 77, column: 1, scope: !3153)
!3189 = !{i64 2155155083, i64 2155155103, i64 2155155166}
!3190 = !DILocation(line: 78, column: 1, scope: !3153)
!3191 = !{i64 2155155533, i64 2155155553, i64 2155155616}
!3192 = !DILocation(line: 79, column: 1, scope: !3153)
!3193 = !{i64 2155155983, i64 2155156003, i64 2155156066}
!3194 = !DILocation(line: 80, column: 1, scope: !3153)
!3195 = !{i64 2155156436, i64 2155156456, i64 2155156519}
!3196 = !DILocation(line: 84, column: 1, scope: !3153)
!3197 = !{i64 2155156768, i64 2155156788, i64 2155156851}
!3198 = !DILocation(line: 91, column: 1, scope: !3153)
!3199 = !{i64 2155157165, i64 2155157185, i64 2155157248}
!3200 = !DILocation(line: 93, column: 1, scope: !3153)
!3201 = !{i64 2155157532, i64 2155157552, i64 2155157615}
!3202 = !DILocation(line: 106, column: 1, scope: !3153)
!3203 = !{i64 2155157802, i64 2155157822, i64 2155157885}
!3204 = !DILocation(line: 11, column: 1, scope: !3205)
!3205 = !DILexicalBlockFile(scope: !3094, file: !3206, discriminator: 0)
!3206 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3207 = distinct !DISubprogram(name: "worker_thread", scope: !116, file: !116, line: 23, type: !3208, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3210)
!3208 = !DISubroutineType(types: !3209)
!3209 = !{null, !107, !107, !107}
!3210 = !{!3211, !3212, !3213, !3214, !3215, !3216}
!3211 = !DILocalVariable(name: "p1", arg: 1, scope: !3207, file: !116, line: 23, type: !107)
!3212 = !DILocalVariable(name: "p2", arg: 2, scope: !3207, file: !116, line: 23, type: !107)
!3213 = !DILocalVariable(name: "p3", arg: 3, scope: !3207, file: !116, line: 23, type: !107)
!3214 = !DILocalVariable(name: "myid", scope: !3207, file: !116, line: 25, type: !1828)
!3215 = !DILocalVariable(name: "workloops", scope: !3207, file: !116, line: 26, type: !1828)
!3216 = !DILocalVariable(name: "i", scope: !3217, file: !116, line: 28, type: !109)
!3217 = distinct !DILexicalBlock(scope: !3207, file: !116, line: 28, column: 2)
!3218 = !DILocation(line: 0, scope: !3207)
!3219 = !DILocation(line: 25, column: 19, scope: !3207)
!3220 = !DILocation(line: 0, scope: !3217)
!3221 = !DILocation(line: 28, column: 2, scope: !3217)
!3222 = !DILocation(line: 36, column: 2, scope: !3207)
!3223 = !DILocation(line: 41, column: 6, scope: !3207)
!3224 = !DILocation(line: 42, column: 2, scope: !3207)
!3225 = !DILocation(line: 44, column: 2, scope: !3207)
!3226 = !DILocation(line: 45, column: 2, scope: !3207)
!3227 = !DILocation(line: 46, column: 1, scope: !3207)
!3228 = !DILocation(line: 29, column: 3, scope: !3229)
!3229 = distinct !DILexicalBlock(scope: !3230, file: !116, line: 28, column: 38)
!3230 = distinct !DILexicalBlock(scope: !3217, file: !116, line: 28, column: 2)
!3231 = !DILocation(line: 30, column: 11, scope: !3229)
!3232 = !DILocation(line: 30, column: 3, scope: !3229)
!3233 = !DILocation(line: 28, column: 34, scope: !3230)
!3234 = !DILocation(line: 28, column: 20, scope: !3230)
!3235 = distinct !{!3235, !3221, !3236}
!3236 = !DILocation(line: 31, column: 2, scope: !3217)
!3237 = distinct !DISubprogram(name: "k_mutex_lock", scope: !3238, file: !3238, line: 927, type: !3239, scopeLine: 928, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3246)
!3238 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple")
!3239 = !DISubroutineType(types: !3240)
!3240 = !{!109, !3241, !3242}
!3241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 32)
!3242 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !3243)
!3243 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !3244)
!3244 = !{!3245}
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3243, file: !104, line: 66, baseType: !103, size: 64)
!3246 = !{!3247, !3248}
!3247 = !DILocalVariable(name: "mutex", arg: 1, scope: !3237, file: !3238, line: 927, type: !3241)
!3248 = !DILocalVariable(name: "timeout", arg: 2, scope: !3237, file: !3238, line: 927, type: !3242)
!3249 = !DILocation(line: 0, scope: !3237)
!3250 = !DILocation(line: 936, column: 2, scope: !3251)
!3251 = distinct !DILexicalBlock(scope: !3237, file: !3238, line: 936, column: 2)
!3252 = !{i64 2154850251}
!3253 = !DILocation(line: 937, column: 9, scope: !3237)
!3254 = !DILocation(line: 937, column: 2, scope: !3237)
!3255 = distinct !DISubprogram(name: "k_condvar_signal", scope: !3238, file: !3238, line: 976, type: !3256, scopeLine: 977, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3259)
!3256 = !DISubroutineType(types: !3257)
!3257 = !{!109, !3258}
!3258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 32)
!3259 = !{!3260}
!3260 = !DILocalVariable(name: "condvar", arg: 1, scope: !3255, file: !3238, line: 976, type: !3258)
!3261 = !DILocation(line: 0, scope: !3255)
!3262 = !DILocation(line: 984, column: 2, scope: !3263)
!3263 = distinct !DILexicalBlock(scope: !3255, file: !3238, line: 984, column: 2)
!3264 = !{i64 2154850455}
!3265 = !DILocation(line: 985, column: 9, scope: !3255)
!3266 = !DILocation(line: 985, column: 2, scope: !3255)
!3267 = distinct !DISubprogram(name: "k_mutex_unlock", scope: !3238, file: !3238, line: 944, type: !3268, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3270)
!3268 = !DISubroutineType(types: !3269)
!3269 = !{!109, !3241}
!3270 = !{!3271}
!3271 = !DILocalVariable(name: "mutex", arg: 1, scope: !3267, file: !3238, line: 944, type: !3241)
!3272 = !DILocation(line: 0, scope: !3267)
!3273 = !DILocation(line: 952, column: 2, scope: !3274)
!3274 = distinct !DILexicalBlock(scope: !3267, file: !3238, line: 952, column: 2)
!3275 = !{i64 2154850319}
!3276 = !DILocation(line: 953, column: 9, scope: !3267)
!3277 = !DILocation(line: 953, column: 2, scope: !3267)
!3278 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3279, file: !3279, line: 403, type: !3280, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3282)
!3279 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3280 = !DISubroutineType(types: !3281)
!3281 = !{!111, !111}
!3282 = !{!3283}
!3283 = !DILocalVariable(name: "t", arg: 1, scope: !3278, file: !3279, line: 403, type: !111)
!3284 = !DILocation(line: 0, scope: !3278)
!3285 = !DILocalVariable(name: "t", arg: 1, scope: !3286, file: !3279, line: 102, type: !111)
!3286 = distinct !DISubprogram(name: "z_tmcvt", scope: !3279, file: !3279, line: 102, type: !3287, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3289)
!3287 = !DISubroutineType(types: !3288)
!3288 = !{!111, !111, !110, !110, !347, !347, !347, !347}
!3289 = !{!3285, !3290, !3291, !3292, !3293, !3294, !3295, !3296, !3297, !3298, !3299}
!3290 = !DILocalVariable(name: "from_hz", arg: 2, scope: !3286, file: !3279, line: 102, type: !110)
!3291 = !DILocalVariable(name: "to_hz", arg: 3, scope: !3286, file: !3279, line: 103, type: !110)
!3292 = !DILocalVariable(name: "const_hz", arg: 4, scope: !3286, file: !3279, line: 103, type: !347)
!3293 = !DILocalVariable(name: "result32", arg: 5, scope: !3286, file: !3279, line: 104, type: !347)
!3294 = !DILocalVariable(name: "round_up", arg: 6, scope: !3286, file: !3279, line: 104, type: !347)
!3295 = !DILocalVariable(name: "round_off", arg: 7, scope: !3286, file: !3279, line: 105, type: !347)
!3296 = !DILocalVariable(name: "mul_ratio", scope: !3286, file: !3279, line: 107, type: !347)
!3297 = !DILocalVariable(name: "div_ratio", scope: !3286, file: !3279, line: 109, type: !347)
!3298 = !DILocalVariable(name: "off", scope: !3286, file: !3279, line: 116, type: !111)
!3299 = !DILocalVariable(name: "rdivisor", scope: !3300, file: !3279, line: 119, type: !110)
!3300 = distinct !DILexicalBlock(scope: !3301, file: !3279, line: 118, column: 18)
!3301 = distinct !DILexicalBlock(scope: !3286, file: !3279, line: 118, column: 6)
!3302 = !DILocation(line: 0, scope: !3286, inlinedAt: !3303)
!3303 = distinct !DILocation(line: 406, column: 9, scope: !3278)
!3304 = !DILocation(line: 145, column: 13, scope: !3305, inlinedAt: !3303)
!3305 = distinct !DILexicalBlock(scope: !3306, file: !3279, line: 144, column: 10)
!3306 = distinct !DILexicalBlock(scope: !3307, file: !3279, line: 142, column: 7)
!3307 = distinct !DILexicalBlock(scope: !3308, file: !3279, line: 141, column: 24)
!3308 = distinct !DILexicalBlock(scope: !3309, file: !3279, line: 141, column: 13)
!3309 = distinct !DILexicalBlock(scope: !3286, file: !3279, line: 134, column: 6)
!3310 = !DILocation(line: 406, column: 2, scope: !3278)
!3311 = distinct !DISubprogram(name: "k_sleep", scope: !3238, file: !3238, line: 91, type: !3312, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3314)
!3312 = !DISubroutineType(types: !3313)
!3313 = !{!766, !3242}
!3314 = !{!3315}
!3315 = !DILocalVariable(name: "timeout", arg: 1, scope: !3311, file: !3238, line: 91, type: !3242)
!3316 = !DILocation(line: 0, scope: !3311)
!3317 = !DILocation(line: 99, column: 2, scope: !3318)
!3318 = distinct !DILexicalBlock(scope: !3311, file: !3238, line: 99, column: 2)
!3319 = !{i64 2154846883}
!3320 = !DILocation(line: 100, column: 9, scope: !3311)
!3321 = !DILocation(line: 100, column: 2, scope: !3311)
!3322 = distinct !DISubprogram(name: "main", scope: !116, file: !116, line: 48, type: !3096, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3323)
!3323 = !{!3324, !3327}
!3324 = !DILocalVariable(name: "tid", scope: !3322, file: !116, line: 50, type: !3325)
!3325 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3326, size: 640, elements: !259)
!3326 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !156, line: 347, baseType: !266)
!3327 = !DILocalVariable(name: "i", scope: !3328, file: !116, line: 54, type: !109)
!3328 = distinct !DILexicalBlock(scope: !3322, file: !116, line: 54, column: 2)
!3329 = !DILocation(line: 52, column: 7, scope: !3322)
!3330 = !DILocation(line: 0, scope: !3328)
!3331 = !DILocation(line: 54, column: 2, scope: !3328)
!3332 = !DILocation(line: 60, column: 10, scope: !3322)
!3333 = !DILocation(line: 60, column: 2, scope: !3322)
!3334 = !DILocation(line: 62, column: 2, scope: !3322)
!3335 = !DILocation(line: 67, column: 9, scope: !3322)
!3336 = !DILocation(line: 67, column: 14, scope: !3322)
!3337 = !DILocation(line: 67, column: 2, scope: !3322)
!3338 = !DILocation(line: 56, column: 21, scope: !3339)
!3339 = distinct !DILexicalBlock(scope: !3340, file: !116, line: 54, column: 40)
!3340 = distinct !DILexicalBlock(scope: !3328, file: !116, line: 54, column: 2)
!3341 = !DILocation(line: 56, column: 27, scope: !3339)
!3342 = !DILocation(line: 57, column: 21, scope: !3339)
!3343 = !DILocation(line: 56, column: 4, scope: !3339)
!3344 = !DILocation(line: 0, scope: !3322)
!3345 = !DILocation(line: 54, column: 36, scope: !3340)
!3346 = !DILocation(line: 54, column: 20, scope: !3340)
!3347 = distinct !{!3347, !3331, !3348}
!3348 = !DILocation(line: 59, column: 2, scope: !3328)
!3349 = !DILocation(line: 68, column: 3, scope: !3350)
!3350 = distinct !DILexicalBlock(scope: !3322, file: !116, line: 67, column: 29)
!3351 = !DILocation(line: 75, column: 3, scope: !3350)
!3352 = !DILocation(line: 77, column: 3, scope: !3350)
!3353 = distinct !{!3353, !3337, !3354}
!3354 = !DILocation(line: 80, column: 2, scope: !3322)
!3355 = !DILocation(line: 82, column: 2, scope: !3322)
!3356 = !DILocation(line: 85, column: 2, scope: !3322)
!3357 = !DILocation(line: 86, column: 1, scope: !3322)
!3358 = distinct !DISubprogram(name: "k_thread_create", scope: !3238, file: !3238, line: 24, type: !3359, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3366)
!3359 = !DISubroutineType(types: !3360)
!3360 = !{!3326, !266, !3361, !232, !3364, !107, !107, !107, !109, !110, !3242}
!3361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3362, size: 32)
!3362 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3363, line: 44, baseType: !144)
!3363 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3364 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !3363, line: 46, baseType: !3365)
!3365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3208, size: 32)
!3366 = !{!3367, !3368, !3369, !3370, !3371, !3372, !3373, !3374, !3375, !3376}
!3367 = !DILocalVariable(name: "new_thread", arg: 1, scope: !3358, file: !3238, line: 24, type: !266)
!3368 = !DILocalVariable(name: "stack", arg: 2, scope: !3358, file: !3238, line: 24, type: !3361)
!3369 = !DILocalVariable(name: "stack_size", arg: 3, scope: !3358, file: !3238, line: 24, type: !232)
!3370 = !DILocalVariable(name: "entry", arg: 4, scope: !3358, file: !3238, line: 24, type: !3364)
!3371 = !DILocalVariable(name: "p1", arg: 5, scope: !3358, file: !3238, line: 24, type: !107)
!3372 = !DILocalVariable(name: "p2", arg: 6, scope: !3358, file: !3238, line: 24, type: !107)
!3373 = !DILocalVariable(name: "p3", arg: 7, scope: !3358, file: !3238, line: 24, type: !107)
!3374 = !DILocalVariable(name: "prio", arg: 8, scope: !3358, file: !3238, line: 24, type: !109)
!3375 = !DILocalVariable(name: "options", arg: 9, scope: !3358, file: !3238, line: 24, type: !110)
!3376 = !DILocalVariable(name: "delay", arg: 10, scope: !3358, file: !3238, line: 24, type: !3242)
!3377 = !DILocation(line: 0, scope: !3358)
!3378 = !DILocation(line: 49, column: 2, scope: !3379)
!3379 = distinct !DILexicalBlock(scope: !3358, file: !3238, line: 49, column: 2)
!3380 = !{i64 2154846679}
!3381 = !DILocation(line: 50, column: 9, scope: !3358)
!3382 = !DILocation(line: 50, column: 2, scope: !3358)
!3383 = distinct !DISubprogram(name: "k_condvar_wait", scope: !3238, file: !3238, line: 1008, type: !3384, scopeLine: 1009, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3386)
!3384 = !DISubroutineType(types: !3385)
!3385 = !{!109, !3258, !3241, !3242}
!3386 = !{!3387, !3388, !3389}
!3387 = !DILocalVariable(name: "condvar", arg: 1, scope: !3383, file: !3238, line: 1008, type: !3258)
!3388 = !DILocalVariable(name: "mutex", arg: 2, scope: !3383, file: !3238, line: 1008, type: !3241)
!3389 = !DILocalVariable(name: "timeout", arg: 3, scope: !3383, file: !3238, line: 1008, type: !3242)
!3390 = !DILocation(line: 0, scope: !3383)
!3391 = !DILocation(line: 1018, column: 2, scope: !3392)
!3392 = distinct !DILexicalBlock(scope: !3383, file: !3238, line: 1018, column: 2)
!3393 = !{i64 2154850591}
!3394 = !DILocation(line: 1019, column: 9, scope: !3383)
!3395 = !DILocation(line: 1019, column: 2, scope: !3383)
!3396 = distinct !DISubprogram(name: "cbvprintf_package", scope: !288, file: !288, line: 233, type: !3397, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3406)
!3397 = !DISubroutineType(types: !3398)
!3398 = !{!109, !107, !232, !110, !279, !3399}
!3399 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3400, line: 99, baseType: !3401)
!3400 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3401 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3400, line: 40, baseType: !3402)
!3402 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !288, baseType: !3403)
!3403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3404)
!3404 = !{!3405}
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3403, file: !288, line: 18, baseType: !107, size: 32)
!3406 = !{!3407, !3408, !3409, !3410, !3411, !3412, !3413, !3414, !3415, !3416, !3418, !3419, !3420, !3421, !3422, !3423, !3424, !3425, !3426, !3427, !3428, !3429, !3442, !3451, !3454, !3455, !3458, !3461, !3464, !3467, !3473}
!3407 = !DILocalVariable(name: "packaged", arg: 1, scope: !3396, file: !288, line: 233, type: !107)
!3408 = !DILocalVariable(name: "len", arg: 2, scope: !3396, file: !288, line: 233, type: !232)
!3409 = !DILocalVariable(name: "flags", arg: 3, scope: !3396, file: !288, line: 233, type: !110)
!3410 = !DILocalVariable(name: "fmt", arg: 4, scope: !3396, file: !288, line: 234, type: !279)
!3411 = !DILocalVariable(name: "ap", arg: 5, scope: !3396, file: !288, line: 234, type: !3399)
!3412 = !DILocalVariable(name: "buf0", scope: !3396, file: !288, line: 247, type: !286)
!3413 = !DILocalVariable(name: "buf", scope: !3396, file: !288, line: 248, type: !286)
!3414 = !DILocalVariable(name: "size", scope: !3396, file: !288, line: 249, type: !32)
!3415 = !DILocalVariable(name: "align", scope: !3396, file: !288, line: 250, type: !32)
!3416 = !DILocalVariable(name: "str_ptr_pos", scope: !3396, file: !288, line: 251, type: !3417)
!3417 = !DICompositeType(tag: DW_TAG_array_type, baseType: !178, size: 128, elements: !1819)
!3418 = !DILocalVariable(name: "str_ptr_arg", scope: !3396, file: !288, line: 252, type: !3417)
!3419 = !DILocalVariable(name: "s_idx", scope: !3396, file: !288, line: 253, type: !32)
!3420 = !DILocalVariable(name: "s_rw_cnt", scope: !3396, file: !288, line: 254, type: !32)
!3421 = !DILocalVariable(name: "s_ro_cnt", scope: !3396, file: !288, line: 255, type: !32)
!3422 = !DILocalVariable(name: "arg_idx", scope: !3396, file: !288, line: 256, type: !109)
!3423 = !DILocalVariable(name: "i", scope: !3396, file: !288, line: 257, type: !32)
!3424 = !DILocalVariable(name: "s", scope: !3396, file: !288, line: 258, type: !279)
!3425 = !DILocalVariable(name: "parsing", scope: !3396, file: !288, line: 259, type: !347)
!3426 = !DILocalVariable(name: "rws_pos_en", scope: !3396, file: !288, line: 263, type: !347)
!3427 = !DILocalVariable(name: "fros_cnt", scope: !3396, file: !288, line: 268, type: !109)
!3428 = !DILocalVariable(name: "is_str_arg", scope: !3396, file: !288, line: 269, type: !347)
!3429 = !DILocalVariable(name: "pkg_hdr", scope: !3396, file: !288, line: 270, type: !3430)
!3430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3431, size: 32)
!3431 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !3432, line: 78, size: 32, elements: !3433)
!3432 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3433 = !{!3434, !3441}
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !3431, file: !3432, line: 80, baseType: !3435, size: 32)
!3435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !3432, line: 45, size: 32, elements: !3436)
!3436 = !{!3437, !3438, !3439, !3440}
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3435, file: !3432, line: 47, baseType: !178, size: 8)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !3435, file: !3432, line: 50, baseType: !178, size: 8, offset: 8)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !3435, file: !3432, line: 53, baseType: !178, size: 8, offset: 16)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !3435, file: !3432, line: 56, baseType: !178, size: 8, offset: 24)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !3431, file: !3432, line: 82, baseType: !107, size: 32)
!3442 = !DILocalVariable(name: "v", scope: !3443, file: !288, line: 567, type: !3447)
!3443 = distinct !DILexicalBlock(scope: !3444, file: !288, line: 562, column: 14)
!3444 = distinct !DILexicalBlock(scope: !3445, file: !288, line: 481, column: 18)
!3445 = distinct !DILexicalBlock(scope: !3446, file: !288, line: 466, column: 3)
!3446 = distinct !DILexicalBlock(scope: !3396, file: !288, line: 343, column: 15)
!3447 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3396, file: !288, line: 567, size: 64, elements: !3448)
!3448 = !{!3449, !3450}
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3447, file: !288, line: 567, baseType: !277, size: 64)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !3447, file: !288, line: 567, baseType: !275, size: 64)
!3451 = !DILocalVariable(name: "is_ro", scope: !3452, file: !288, line: 620, type: !347)
!3452 = distinct !DILexicalBlock(scope: !3453, file: !288, line: 613, column: 19)
!3453 = distinct !DILexicalBlock(scope: !3446, file: !288, line: 613, column: 7)
!3454 = !DILocalVariable(name: "do_ro", scope: !3452, file: !288, line: 621, type: !347)
!3455 = !DILocalVariable(name: "s_ptr_idx", scope: !3456, file: !288, line: 626, type: !110)
!3456 = distinct !DILexicalBlock(scope: !3457, file: !288, line: 625, column: 11)
!3457 = distinct !DILexicalBlock(scope: !3452, file: !288, line: 623, column: 8)
!3458 = !DILocalVariable(name: "v", scope: !3459, file: !288, line: 684, type: !109)
!3459 = distinct !DILexicalBlock(scope: !3460, file: !288, line: 683, column: 35)
!3460 = distinct !DILexicalBlock(scope: !3453, file: !288, line: 683, column: 14)
!3461 = !DILocalVariable(name: "v", scope: !3462, file: !288, line: 691, type: !102)
!3462 = distinct !DILexicalBlock(scope: !3463, file: !288, line: 690, column: 36)
!3463 = distinct !DILexicalBlock(scope: !3460, file: !288, line: 690, column: 14)
!3464 = !DILocalVariable(name: "v", scope: !3465, file: !288, line: 698, type: !106)
!3465 = distinct !DILexicalBlock(scope: !3466, file: !288, line: 697, column: 41)
!3466 = distinct !DILexicalBlock(scope: !3463, file: !288, line: 697, column: 14)
!3467 = !DILocalVariable(name: "pos", scope: !3468, file: !288, line: 762, type: !178)
!3468 = distinct !DILexicalBlock(scope: !3469, file: !288, line: 757, column: 31)
!3469 = distinct !DILexicalBlock(scope: !3470, file: !288, line: 757, column: 3)
!3470 = distinct !DILexicalBlock(scope: !3471, file: !288, line: 757, column: 3)
!3471 = distinct !DILexicalBlock(scope: !3472, file: !288, line: 756, column: 16)
!3472 = distinct !DILexicalBlock(scope: !3396, file: !288, line: 756, column: 6)
!3473 = !DILabel(scope: !3452, name: "process_string", file: !288, line: 615)
!3474 = !DILocation(line: 0, scope: !3396)
!3475 = !DILocation(line: 251, column: 2, scope: !3396)
!3476 = !DILocation(line: 251, column: 10, scope: !3396)
!3477 = !DILocation(line: 252, column: 2, scope: !3396)
!3478 = !DILocation(line: 252, column: 10, scope: !3396)
!3479 = !DILocation(line: 263, column: 29, scope: !3396)
!3480 = !DILocation(line: 263, column: 21, scope: !3396)
!3481 = !DILocation(line: 268, column: 21, scope: !3396)
!3482 = !DILocation(line: 268, column: 19, scope: !3396)
!3483 = !DILocation(line: 273, column: 6, scope: !3484)
!3484 = distinct !DILexicalBlock(scope: !3396, file: !288, line: 273, column: 6)
!3485 = !DILocation(line: 273, column: 26, scope: !3484)
!3486 = !DILocation(line: 273, column: 6, scope: !3396)
!3487 = !DILocation(line: 297, column: 6, scope: !3396)
!3488 = !DILocation(line: 305, column: 11, scope: !3489)
!3489 = distinct !DILexicalBlock(scope: !3396, file: !288, line: 305, column: 6)
!3490 = !DILocation(line: 305, column: 6, scope: !3396)
!3491 = !DILocation(line: 327, column: 19, scope: !3492)
!3492 = distinct !DILexicalBlock(scope: !3396, file: !288, line: 327, column: 6)
!3493 = !DILocation(line: 327, column: 22, scope: !3492)
!3494 = !DILocation(line: 327, column: 33, scope: !3492)
!3495 = !DILocation(line: 327, column: 50, scope: !3492)
!3496 = !DILocation(line: 327, column: 6, scope: !3396)
!3497 = !DILocation(line: 338, column: 9, scope: !3396)
!3498 = !DILocation(line: 341, column: 2, scope: !3396)
!3499 = !DILocation(line: 472, column: 8, scope: !3445)
!3500 = !DILocation(line: 473, column: 14, scope: !3501)
!3501 = distinct !DILexicalBlock(scope: !3502, file: !288, line: 473, column: 9)
!3502 = distinct !DILexicalBlock(scope: !3503, file: !288, line: 472, column: 18)
!3503 = distinct !DILexicalBlock(scope: !3445, file: !288, line: 472, column: 8)
!3504 = !DILocation(line: 473, column: 9, scope: !3502)
!3505 = !DILocation(line: 479, column: 5, scope: !3502)
!3506 = !DILocation(line: 468, column: 9, scope: !3507)
!3507 = distinct !DILexicalBlock(scope: !3445, file: !288, line: 468, column: 8)
!3508 = !DILocation(line: 468, column: 8, scope: !3507)
!3509 = !DILocation(line: 468, column: 15, scope: !3507)
!3510 = !DILocation(line: 468, column: 8, scope: !3445)
!3511 = distinct !{!3511, !3512, !3513}
!3512 = !DILocation(line: 343, column: 2, scope: !3396)
!3513 = !DILocation(line: 712, column: 2, scope: !3396)
!3514 = !DILocation(line: 481, column: 4, scope: !3445)
!3515 = !DILocation(line: 484, column: 12, scope: !3444)
!3516 = !DILocation(line: 485, column: 5, scope: !3444)
!3517 = !DILocation(line: 505, column: 5, scope: !3444)
!3518 = !DILocation(line: 518, column: 5, scope: !3444)
!3519 = !DILocation(line: 523, column: 5, scope: !3444)
!3520 = !DILocation(line: 532, column: 9, scope: !3521)
!3521 = distinct !DILexicalBlock(scope: !3444, file: !288, line: 532, column: 9)
!3522 = !DILocation(line: 532, column: 17, scope: !3521)
!3523 = !DILocation(line: 532, column: 9, scope: !3444)
!3524 = !DILocation(line: 533, column: 10, scope: !3525)
!3525 = distinct !DILexicalBlock(scope: !3526, file: !288, line: 533, column: 10)
!3526 = distinct !DILexicalBlock(scope: !3521, file: !288, line: 532, column: 25)
!3527 = !DILocation(line: 533, column: 18, scope: !3525)
!3528 = !DILocation(line: 0, scope: !3529)
!3529 = distinct !DILexicalBlock(scope: !3443, file: !288, line: 569, column: 9)
!3530 = !DILocation(line: 0, scope: !3443)
!3531 = !DILocation(line: 579, column: 20, scope: !3443)
!3532 = !DILocation(line: 579, column: 11, scope: !3443)
!3533 = !DILocation(line: 580, column: 9, scope: !3443)
!3534 = !DILocation(line: 582, column: 21, scope: !3535)
!3535 = distinct !DILexicalBlock(scope: !3536, file: !288, line: 582, column: 10)
!3536 = distinct !DILexicalBlock(scope: !3537, file: !288, line: 580, column: 23)
!3537 = distinct !DILexicalBlock(scope: !3443, file: !288, line: 580, column: 9)
!3538 = !DILocation(line: 582, column: 28, scope: !3535)
!3539 = !DILocation(line: 582, column: 10, scope: !3536)
!3540 = !DILocation(line: 0, scope: !3541)
!3541 = distinct !DILexicalBlock(scope: !3542, file: !288, line: 587, column: 17)
!3542 = distinct !DILexicalBlock(scope: !3536, file: !288, line: 585, column: 10)
!3543 = !DILocation(line: 593, column: 9, scope: !3443)
!3544 = !DILocation(line: 600, column: 5, scope: !3444)
!3545 = !DILocation(line: 605, column: 18, scope: !3446)
!3546 = !DILocation(line: 605, column: 9, scope: !3446)
!3547 = !DILocation(line: 608, column: 20, scope: !3548)
!3548 = distinct !DILexicalBlock(scope: !3446, file: !288, line: 608, column: 7)
!3549 = !DILocation(line: 608, column: 23, scope: !3548)
!3550 = !DILocation(line: 608, column: 34, scope: !3548)
!3551 = !DILocation(line: 608, column: 41, scope: !3548)
!3552 = !DILocation(line: 608, column: 7, scope: !3446)
!3553 = !DILocation(line: 613, column: 7, scope: !3446)
!3554 = !DILocation(line: 614, column: 8, scope: !3452)
!3555 = !DILocation(line: 614, column: 4, scope: !3452)
!3556 = !DILocation(line: 256, column: 6, scope: !3396)
!3557 = !DILocation(line: 254, column: 15, scope: !3396)
!3558 = !DILocation(line: 320, column: 7, scope: !3559)
!3559 = distinct !DILexicalBlock(scope: !3489, file: !288, line: 305, column: 20)
!3560 = !DILocation(line: 615, column: 1, scope: !3452)
!3561 = !DILocation(line: 616, column: 8, scope: !3452)
!3562 = !DILocation(line: 617, column: 5, scope: !3563)
!3563 = distinct !DILexicalBlock(scope: !3564, file: !288, line: 616, column: 22)
!3564 = distinct !DILexicalBlock(scope: !3452, file: !288, line: 616, column: 8)
!3565 = !DILocation(line: 617, column: 25, scope: !3563)
!3566 = !DILocation(line: 618, column: 4, scope: !3563)
!3567 = !DILocation(line: 620, column: 26, scope: !3452)
!3568 = !DILocation(line: 620, column: 29, scope: !3452)
!3569 = !DILocation(line: 620, column: 17, scope: !3452)
!3570 = !DILocation(line: 620, column: 43, scope: !3452)
!3571 = !DILocation(line: 0, scope: !3452)
!3572 = !DILocation(line: 623, column: 14, scope: !3457)
!3573 = !DILocation(line: 626, column: 26, scope: !3456)
!3574 = !DILocation(line: 626, column: 37, scope: !3456)
!3575 = !DILocation(line: 0, scope: !3456)
!3576 = !DILocation(line: 634, column: 15, scope: !3577)
!3577 = distinct !DILexicalBlock(scope: !3456, file: !288, line: 634, column: 9)
!3578 = !DILocation(line: 635, column: 6, scope: !3579)
!3579 = distinct !DILexicalBlock(scope: !3580, file: !288, line: 635, column: 6)
!3580 = distinct !DILexicalBlock(scope: !3581, file: !288, line: 635, column: 6)
!3581 = distinct !DILexicalBlock(scope: !3582, file: !288, line: 635, column: 6)
!3582 = distinct !DILexicalBlock(scope: !3577, file: !288, line: 634, column: 44)
!3583 = !DILocation(line: 639, column: 15, scope: !3584)
!3584 = distinct !DILexicalBlock(scope: !3456, file: !288, line: 639, column: 9)
!3585 = !DILocation(line: 639, column: 9, scope: !3456)
!3586 = !DILocation(line: 640, column: 6, scope: !3587)
!3587 = distinct !DILexicalBlock(scope: !3588, file: !288, line: 640, column: 6)
!3588 = distinct !DILexicalBlock(scope: !3589, file: !288, line: 640, column: 6)
!3589 = distinct !DILexicalBlock(scope: !3590, file: !288, line: 640, column: 6)
!3590 = distinct !DILexicalBlock(scope: !3584, file: !288, line: 639, column: 43)
!3591 = !DILocation(line: 644, column: 9, scope: !3456)
!3592 = !DILocation(line: 649, column: 27, scope: !3593)
!3593 = distinct !DILexicalBlock(scope: !3594, file: !288, line: 644, column: 23)
!3594 = distinct !DILexicalBlock(scope: !3456, file: !288, line: 644, column: 9)
!3595 = !DILocation(line: 649, column: 6, scope: !3593)
!3596 = !DILocation(line: 649, column: 25, scope: !3593)
!3597 = !DILocation(line: 650, column: 27, scope: !3593)
!3598 = !DILocation(line: 650, column: 6, scope: !3593)
!3599 = !DILocation(line: 650, column: 25, scope: !3593)
!3600 = !DILocation(line: 651, column: 10, scope: !3593)
!3601 = !DILocation(line: 653, column: 26, scope: !3602)
!3602 = distinct !DILexicalBlock(scope: !3603, file: !288, line: 651, column: 17)
!3603 = distinct !DILexicalBlock(scope: !3593, file: !288, line: 651, column: 10)
!3604 = !DILocation(line: 654, column: 15, scope: !3602)
!3605 = !DILocation(line: 655, column: 6, scope: !3602)
!3606 = !DILocation(line: 656, column: 15, scope: !3607)
!3607 = distinct !DILexicalBlock(scope: !3603, file: !288, line: 655, column: 13)
!3608 = !DILocation(line: 658, column: 16, scope: !3594)
!3609 = !DILocation(line: 663, column: 10, scope: !3610)
!3610 = distinct !DILexicalBlock(scope: !3611, file: !288, line: 658, column: 23)
!3611 = distinct !DILexicalBlock(scope: !3594, file: !288, line: 658, column: 16)
!3612 = !DILocation(line: 664, column: 5, scope: !3610)
!3613 = !DILocation(line: 664, column: 16, scope: !3611)
!3614 = !DILocation(line: 669, column: 10, scope: !3615)
!3615 = distinct !DILexicalBlock(scope: !3616, file: !288, line: 664, column: 28)
!3616 = distinct !DILexicalBlock(scope: !3611, file: !288, line: 664, column: 16)
!3617 = !DILocation(line: 670, column: 5, scope: !3615)
!3618 = !DILocation(line: 675, column: 13, scope: !3619)
!3619 = distinct !DILexicalBlock(scope: !3616, file: !288, line: 670, column: 12)
!3620 = !DILocation(line: 675, column: 27, scope: !3619)
!3621 = !DILocation(line: 675, column: 10, scope: !3619)
!3622 = !DILocation(line: 678, column: 10, scope: !3456)
!3623 = !DILocation(line: 680, column: 8, scope: !3452)
!3624 = !DILocation(line: 683, column: 14, scope: !3453)
!3625 = !DILocation(line: 684, column: 12, scope: !3459)
!3626 = !DILocation(line: 0, scope: !3459)
!3627 = !DILocation(line: 686, column: 8, scope: !3459)
!3628 = !DILocation(line: 687, column: 5, scope: !3629)
!3629 = distinct !DILexicalBlock(scope: !3630, file: !288, line: 686, column: 22)
!3630 = distinct !DILexicalBlock(scope: !3459, file: !288, line: 686, column: 8)
!3631 = !DILocation(line: 687, column: 17, scope: !3629)
!3632 = !DILocation(line: 688, column: 4, scope: !3629)
!3633 = !DILocation(line: 698, column: 18, scope: !3465)
!3634 = !DILocation(line: 0, scope: !3465)
!3635 = !DILocation(line: 700, column: 8, scope: !3465)
!3636 = !DILocation(line: 704, column: 6, scope: !3637)
!3637 = distinct !DILexicalBlock(scope: !3638, file: !288, line: 703, column: 12)
!3638 = distinct !DILexicalBlock(scope: !3639, file: !288, line: 701, column: 9)
!3639 = distinct !DILexicalBlock(scope: !3640, file: !288, line: 700, column: 22)
!3640 = distinct !DILexicalBlock(scope: !3465, file: !288, line: 700, column: 8)
!3641 = !DILocation(line: 704, column: 24, scope: !3637)
!3642 = !DILocation(line: 706, column: 4, scope: !3639)
!3643 = !DILocation(line: 709, column: 4, scope: !3644)
!3644 = distinct !DILexicalBlock(scope: !3645, file: !288, line: 709, column: 4)
!3645 = distinct !DILexicalBlock(scope: !3646, file: !288, line: 709, column: 4)
!3646 = distinct !DILexicalBlock(scope: !3647, file: !288, line: 709, column: 4)
!3647 = distinct !DILexicalBlock(scope: !3466, file: !288, line: 708, column: 10)
!3648 = !DILocation(line: 0, scope: !3460)
!3649 = !DILocation(line: 0, scope: !3446)
!3650 = !DILocation(line: 720, column: 6, scope: !3651)
!3651 = distinct !DILexicalBlock(scope: !3396, file: !288, line: 720, column: 6)
!3652 = !DILocation(line: 720, column: 17, scope: !3651)
!3653 = !DILocation(line: 720, column: 31, scope: !3651)
!3654 = !DILocation(line: 720, column: 6, scope: !3396)
!3655 = !DILocation(line: 721, column: 3, scope: !3656)
!3656 = distinct !DILexicalBlock(scope: !3657, file: !288, line: 721, column: 3)
!3657 = distinct !DILexicalBlock(scope: !3658, file: !288, line: 721, column: 3)
!3658 = distinct !DILexicalBlock(scope: !3659, file: !288, line: 721, column: 3)
!3659 = distinct !DILexicalBlock(scope: !3651, file: !288, line: 720, column: 38)
!3660 = !DILocation(line: 729, column: 6, scope: !3396)
!3661 = !DILocation(line: 730, column: 21, scope: !3662)
!3662 = distinct !DILexicalBlock(scope: !3663, file: !288, line: 729, column: 20)
!3663 = distinct !DILexicalBlock(scope: !3396, file: !288, line: 729, column: 6)
!3664 = !DILocation(line: 730, column: 27, scope: !3662)
!3665 = !DILocation(line: 730, column: 3, scope: !3662)
!3666 = !DILocation(line: 737, column: 22, scope: !3396)
!3667 = !DILocation(line: 737, column: 20, scope: !3396)
!3668 = !DILocation(line: 0, scope: !3669)
!3669 = distinct !DILexicalBlock(scope: !3396, file: !288, line: 739, column: 6)
!3670 = !DILocation(line: 745, column: 17, scope: !3671)
!3671 = distinct !DILexicalBlock(scope: !3669, file: !288, line: 743, column: 9)
!3672 = !DILocation(line: 745, column: 25, scope: !3671)
!3673 = !DILocation(line: 746, column: 17, scope: !3671)
!3674 = !DILocation(line: 746, column: 28, scope: !3671)
!3675 = !DILocation(line: 749, column: 29, scope: !3396)
!3676 = !DILocation(line: 749, column: 16, scope: !3396)
!3677 = !DILocation(line: 749, column: 27, scope: !3396)
!3678 = !DILocation(line: 756, column: 6, scope: !3472)
!3679 = !DILocation(line: 756, column: 6, scope: !3396)
!3680 = !DILocation(line: 757, column: 3, scope: !3470)
!3681 = !DILocation(line: 758, column: 10, scope: !3682)
!3682 = distinct !DILexicalBlock(scope: !3468, file: !288, line: 758, column: 8)
!3683 = !DILocation(line: 758, column: 25, scope: !3682)
!3684 = !DILocation(line: 758, column: 8, scope: !3468)
!3685 = !DILocation(line: 0, scope: !3468)
!3686 = !DILocation(line: 765, column: 8, scope: !3687)
!3687 = distinct !DILexicalBlock(scope: !3468, file: !288, line: 765, column: 8)
!3688 = !DILocation(line: 765, column: 19, scope: !3687)
!3689 = !DILocation(line: 765, column: 23, scope: !3687)
!3690 = !DILocation(line: 765, column: 8, scope: !3468)
!3691 = !DILocation(line: 762, column: 33, scope: !3468)
!3692 = !DILocation(line: 769, column: 8, scope: !3468)
!3693 = !DILocation(line: 769, column: 11, scope: !3468)
!3694 = !DILocation(line: 757, column: 27, scope: !3469)
!3695 = !DILocation(line: 757, column: 17, scope: !3469)
!3696 = distinct !{!3696, !3680, !3697}
!3697 = !DILocation(line: 770, column: 3, scope: !3470)
!3698 = !DILocation(line: 774, column: 16, scope: !3699)
!3699 = distinct !DILexicalBlock(scope: !3700, file: !288, line: 774, column: 2)
!3700 = distinct !DILexicalBlock(scope: !3396, file: !288, line: 774, column: 2)
!3701 = !DILocation(line: 774, column: 2, scope: !3700)
!3702 = !DILocation(line: 776, column: 16, scope: !3703)
!3703 = distinct !DILexicalBlock(scope: !3704, file: !288, line: 776, column: 7)
!3704 = distinct !DILexicalBlock(scope: !3699, file: !288, line: 774, column: 30)
!3705 = !DILocation(line: 776, column: 19, scope: !3703)
!3706 = !DILocation(line: 776, column: 34, scope: !3703)
!3707 = !DILocation(line: 776, column: 7, scope: !3704)
!3708 = !DILocation(line: 780, column: 7, scope: !3704)
!3709 = !DILocation(line: 782, column: 13, scope: !3710)
!3710 = distinct !DILexicalBlock(scope: !3711, file: !288, line: 780, column: 19)
!3711 = distinct !DILexicalBlock(scope: !3704, file: !288, line: 780, column: 7)
!3712 = !DILocation(line: 782, column: 8, scope: !3710)
!3713 = !DILocation(line: 782, column: 11, scope: !3710)
!3714 = !DILocation(line: 783, column: 3, scope: !3710)
!3715 = !DILocation(line: 785, column: 26, scope: !3716)
!3716 = distinct !DILexicalBlock(scope: !3711, file: !288, line: 783, column: 10)
!3717 = !DILocation(line: 785, column: 41, scope: !3716)
!3718 = !DILocation(line: 785, column: 24, scope: !3716)
!3719 = !DILocation(line: 785, column: 8, scope: !3716)
!3720 = !DILocation(line: 787, column: 52, scope: !3716)
!3721 = !DILocation(line: 789, column: 11, scope: !3716)
!3722 = !DILocation(line: 789, column: 21, scope: !3716)
!3723 = !DILocation(line: 0, scope: !3711)
!3724 = !DILocation(line: 793, column: 7, scope: !3725)
!3725 = distinct !DILexicalBlock(scope: !3704, file: !288, line: 793, column: 7)
!3726 = !DILocation(line: 793, column: 18, scope: !3725)
!3727 = !DILocation(line: 793, column: 22, scope: !3725)
!3728 = !DILocation(line: 793, column: 29, scope: !3725)
!3729 = !DILocation(line: 793, column: 7, scope: !3704)
!3730 = !DILocation(line: 797, column: 12, scope: !3704)
!3731 = !DILocation(line: 797, column: 7, scope: !3704)
!3732 = !DILocation(line: 797, column: 10, scope: !3704)
!3733 = !DILocation(line: 799, column: 3, scope: !3704)
!3734 = !DILocation(line: 800, column: 7, scope: !3704)
!3735 = !DILocation(line: 801, column: 2, scope: !3704)
!3736 = !DILocation(line: 338, column: 4, scope: !3396)
!3737 = !DILocation(line: 774, column: 26, scope: !3699)
!3738 = distinct !{!3738, !3701, !3739}
!3739 = !DILocation(line: 801, column: 2, scope: !3700)
!3740 = !DILocation(line: 808, column: 9, scope: !3396)
!3741 = !DILocation(line: 808, column: 2, scope: !3396)
!3742 = !DILocation(line: 813, column: 1, scope: !3396)
!3743 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !288, file: !288, line: 33, type: !3744, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3746)
!3744 = !DISubroutineType(types: !3745)
!3745 = !{!347, !279}
!3746 = !{!3747}
!3747 = !DILocalVariable(name: "addr", arg: 1, scope: !3743, file: !288, line: 33, type: !279)
!3748 = !DILocation(line: 0, scope: !3743)
!3749 = !DILocation(line: 41, column: 9, scope: !3743)
!3750 = !DILocation(line: 41, column: 2, scope: !3743)
!3751 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !3752, file: !3752, line: 24, type: !3753, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3755)
!3752 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3753 = !DISubroutineType(types: !3754)
!3754 = !{!347, !13}
!3755 = !{!3756}
!3756 = !DILocalVariable(name: "addr", arg: 1, scope: !3751, file: !3752, line: 24, type: !13)
!3757 = !DILocation(line: 0, scope: !3751)
!3758 = !DILocation(line: 49, column: 30, scope: !3751)
!3759 = !DILocation(line: 49, column: 57, scope: !3751)
!3760 = !DILocation(line: 49, column: 2, scope: !3751)
!3761 = distinct !DISubprogram(name: "cbprintf_package", scope: !288, file: !288, line: 815, type: !3762, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3764)
!3762 = !DISubroutineType(types: !3763)
!3763 = !{!109, !107, !232, !110, !279, null}
!3764 = !{!3765, !3766, !3767, !3768, !3769, !3770}
!3765 = !DILocalVariable(name: "packaged", arg: 1, scope: !3761, file: !288, line: 815, type: !107)
!3766 = !DILocalVariable(name: "len", arg: 2, scope: !3761, file: !288, line: 815, type: !232)
!3767 = !DILocalVariable(name: "flags", arg: 3, scope: !3761, file: !288, line: 815, type: !110)
!3768 = !DILocalVariable(name: "format", arg: 4, scope: !3761, file: !288, line: 816, type: !279)
!3769 = !DILocalVariable(name: "ap", scope: !3761, file: !288, line: 818, type: !3399)
!3770 = !DILocalVariable(name: "ret", scope: !3761, file: !288, line: 819, type: !109)
!3771 = !DILocation(line: 0, scope: !3761)
!3772 = !DILocation(line: 818, column: 2, scope: !3761)
!3773 = !DILocation(line: 818, column: 10, scope: !3761)
!3774 = !DILocation(line: 821, column: 2, scope: !3761)
!3775 = !DILocation(line: 822, column: 8, scope: !3761)
!3776 = !DILocation(line: 823, column: 2, scope: !3761)
!3777 = !DILocation(line: 825, column: 1, scope: !3761)
!3778 = !DILocation(line: 824, column: 2, scope: !3761)
!3779 = distinct !DISubprogram(name: "cbpprintf_external", scope: !288, file: !288, line: 827, type: !3780, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3790)
!3780 = !DISubroutineType(types: !3781)
!3781 = !{!109, !3782, !3786, !107, !107}
!3782 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3432, line: 297, baseType: !3783)
!3783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3784, size: 32)
!3784 = !DISubroutineType(types: !3785)
!3785 = !{!109, null}
!3786 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !3432, line: 328, baseType: !3787)
!3787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3788, size: 32)
!3788 = !DISubroutineType(types: !3789)
!3789 = !{!109, !3782, !107, !279, !3399}
!3790 = !{!3791, !3792, !3793, !3794, !3795, !3796, !3802, !3803, !3804, !3805, !3806, !3807, !3808, !3809}
!3791 = !DILocalVariable(name: "out", arg: 1, scope: !3779, file: !288, line: 827, type: !3782)
!3792 = !DILocalVariable(name: "formatter", arg: 2, scope: !3779, file: !288, line: 828, type: !3786)
!3793 = !DILocalVariable(name: "ctx", arg: 3, scope: !3779, file: !288, line: 829, type: !107)
!3794 = !DILocalVariable(name: "packaged", arg: 4, scope: !3779, file: !288, line: 829, type: !107)
!3795 = !DILocalVariable(name: "buf", scope: !3779, file: !288, line: 831, type: !286)
!3796 = !DILocalVariable(name: "hdr", scope: !3779, file: !288, line: 832, type: !3797)
!3797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3798, size: 32)
!3798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !3432, line: 96, size: 64, elements: !3799)
!3799 = !{!3800, !3801}
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !3798, file: !3432, line: 98, baseType: !3431, size: 32)
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !3798, file: !3432, line: 101, baseType: !285, size: 32, offset: 32)
!3802 = !DILocalVariable(name: "s", scope: !3779, file: !288, line: 833, type: !285)
!3803 = !DILocalVariable(name: "ps", scope: !3779, file: !288, line: 833, type: !284)
!3804 = !DILocalVariable(name: "i", scope: !3779, file: !288, line: 834, type: !32)
!3805 = !DILocalVariable(name: "args_size", scope: !3779, file: !288, line: 834, type: !32)
!3806 = !DILocalVariable(name: "s_nbr", scope: !3779, file: !288, line: 834, type: !32)
!3807 = !DILocalVariable(name: "ros_nbr", scope: !3779, file: !288, line: 834, type: !32)
!3808 = !DILocalVariable(name: "rws_nbr", scope: !3779, file: !288, line: 834, type: !32)
!3809 = !DILocalVariable(name: "s_idx", scope: !3779, file: !288, line: 834, type: !32)
!3810 = !DILocation(line: 0, scope: !3779)
!3811 = !DILocation(line: 836, column: 10, scope: !3812)
!3812 = distinct !DILexicalBlock(scope: !3779, file: !288, line: 836, column: 6)
!3813 = !DILocation(line: 836, column: 6, scope: !3779)
!3814 = !DILocation(line: 842, column: 28, scope: !3779)
!3815 = !DILocation(line: 842, column: 14, scope: !3779)
!3816 = !DILocation(line: 852, column: 16, scope: !3817)
!3817 = distinct !DILexicalBlock(scope: !3818, file: !288, line: 852, column: 2)
!3818 = distinct !DILexicalBlock(scope: !3779, file: !288, line: 852, column: 2)
!3819 = !DILocation(line: 852, column: 2, scope: !3818)
!3820 = !DILocation(line: 841, column: 28, scope: !3779)
!3821 = !DILocation(line: 841, column: 14, scope: !3779)
!3822 = !DILocation(line: 841, column: 32, scope: !3779)
!3823 = !DILocation(line: 847, column: 19, scope: !3779)
!3824 = !DILocation(line: 843, column: 28, scope: !3779)
!3825 = !DILocation(line: 843, column: 14, scope: !3779)
!3826 = !DILocation(line: 847, column: 31, scope: !3779)
!3827 = !DILocation(line: 844, column: 28, scope: !3779)
!3828 = !DILocation(line: 844, column: 14, scope: !3779)
!3829 = !DILocation(line: 847, column: 45, scope: !3779)
!3830 = !DILocation(line: 847, column: 41, scope: !3779)
!3831 = !DILocation(line: 854, column: 24, scope: !3832)
!3832 = distinct !DILexicalBlock(scope: !3817, file: !288, line: 852, column: 30)
!3833 = !DILocation(line: 854, column: 11, scope: !3832)
!3834 = !DILocation(line: 855, column: 30, scope: !3832)
!3835 = !DILocation(line: 855, column: 22, scope: !3832)
!3836 = !DILocation(line: 855, column: 8, scope: !3832)
!3837 = !DILocation(line: 857, column: 7, scope: !3832)
!3838 = !DILocation(line: 859, column: 8, scope: !3832)
!3839 = !DILocation(line: 859, column: 18, scope: !3832)
!3840 = !DILocation(line: 859, column: 5, scope: !3832)
!3841 = !DILocation(line: 852, column: 26, scope: !3817)
!3842 = distinct !{!3842, !3819, !3843}
!3843 = !DILocation(line: 860, column: 2, scope: !3818)
!3844 = !DILocation(line: 863, column: 6, scope: !3779)
!3845 = !DILocation(line: 866, column: 56, scope: !3779)
!3846 = !DILocation(line: 866, column: 9, scope: !3779)
!3847 = !DILocation(line: 866, column: 2, scope: !3779)
!3848 = !DILocation(line: 867, column: 1, scope: !3779)
!3849 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !288, file: !288, line: 179, type: !3850, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3852)
!3850 = !DISubroutineType(types: !3851)
!3851 = !{!109, !3782, !3786, !107, !279, !107}
!3852 = !{!3853, !3854, !3855, !3856, !3857, !3858}
!3853 = !DILocalVariable(name: "out", arg: 1, scope: !3849, file: !288, line: 179, type: !3782)
!3854 = !DILocalVariable(name: "formatter", arg: 2, scope: !3849, file: !288, line: 180, type: !3786)
!3855 = !DILocalVariable(name: "ctx", arg: 3, scope: !3849, file: !288, line: 181, type: !107)
!3856 = !DILocalVariable(name: "fmt", arg: 4, scope: !3849, file: !288, line: 182, type: !279)
!3857 = !DILocalVariable(name: "buf", arg: 5, scope: !3849, file: !288, line: 182, type: !107)
!3858 = !DILocalVariable(name: "u", scope: !3849, file: !288, line: 187, type: !3859)
!3859 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3849, file: !288, line: 184, size: 32, elements: !3860)
!3860 = !{!3861, !3862}
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !3859, file: !288, line: 185, baseType: !3399, size: 32)
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3859, file: !288, line: 186, baseType: !107, size: 32)
!3863 = !DILocation(line: 0, scope: !3849)
!3864 = !DILocation(line: 191, column: 9, scope: !3849)
!3865 = !DILocation(line: 191, column: 2, scope: !3849)
!3866 = distinct !DISubprogram(name: "is_ptr", scope: !288, file: !288, line: 881, type: !3867, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3869)
!3867 = !DISubroutineType(types: !3868)
!3868 = !{!347, !279, !109}
!3869 = !{!3870, !3871, !3872, !3873, !3874}
!3870 = !DILocalVariable(name: "fmt", arg: 1, scope: !3866, file: !288, line: 881, type: !279)
!3871 = !DILocalVariable(name: "n", arg: 2, scope: !3866, file: !288, line: 881, type: !109)
!3872 = !DILocalVariable(name: "c", scope: !3866, file: !288, line: 883, type: !148)
!3873 = !DILocalVariable(name: "mod", scope: !3866, file: !288, line: 884, type: !347)
!3874 = !DILocalVariable(name: "cnt", scope: !3866, file: !288, line: 885, type: !109)
!3875 = !DILocation(line: 0, scope: !3866)
!3876 = !DILocation(line: 887, column: 14, scope: !3866)
!3877 = !DILocation(line: 887, column: 22, scope: !3866)
!3878 = !DILocation(line: 887, column: 2, scope: !3866)
!3879 = !DILocation(line: 887, column: 18, scope: !3866)
!3880 = !DILocation(line: 888, column: 7, scope: !3881)
!3881 = distinct !DILexicalBlock(scope: !3866, file: !288, line: 887, column: 31)
!3882 = !DILocation(line: 889, column: 12, scope: !3883)
!3883 = distinct !DILexicalBlock(scope: !3884, file: !288, line: 889, column: 8)
!3884 = distinct !DILexicalBlock(scope: !3885, file: !288, line: 888, column: 12)
!3885 = distinct !DILexicalBlock(scope: !3881, file: !288, line: 888, column: 7)
!3886 = !DILocation(line: 889, column: 8, scope: !3884)
!3887 = !DILocation(line: 890, column: 11, scope: !3888)
!3888 = distinct !DILexicalBlock(scope: !3889, file: !288, line: 890, column: 9)
!3889 = distinct !DILexicalBlock(scope: !3883, file: !288, line: 889, column: 18)
!3890 = !DILocation(line: 890, column: 9, scope: !3889)
!3891 = !DILocation(line: 892, column: 16, scope: !3892)
!3892 = distinct !DILexicalBlock(scope: !3888, file: !288, line: 892, column: 16)
!3893 = !DILocation(line: 892, column: 16, scope: !3888)
!3894 = !DILocation(line: 895, column: 15, scope: !3895)
!3895 = distinct !DILexicalBlock(scope: !3883, file: !288, line: 895, column: 15)
!3896 = !DILocation(line: 895, column: 15, scope: !3883)
!3897 = !DILocation(line: 900, column: 9, scope: !3898)
!3898 = distinct !DILexicalBlock(scope: !3881, file: !288, line: 900, column: 7)
!3899 = !DILocation(line: 900, column: 7, scope: !3881)
!3900 = distinct !{!3900, !3878, !3901}
!3901 = !DILocation(line: 903, column: 2, scope: !3866)
!3902 = !DILocation(line: 906, column: 1, scope: !3866)
!3903 = distinct !DISubprogram(name: "is_fmt_spec", scope: !288, file: !288, line: 873, type: !3904, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3906)
!3904 = !DISubroutineType(types: !3905)
!3905 = !{!347, !148}
!3906 = !{!3907}
!3907 = !DILocalVariable(name: "c", arg: 1, scope: !3903, file: !288, line: 873, type: !148)
!3908 = !DILocation(line: 0, scope: !3903)
!3909 = !DILocation(line: 875, column: 19, scope: !3903)
!3910 = !DILocation(line: 875, column: 2, scope: !3903)
!3911 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !288, file: !288, line: 908, type: !3912, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3918)
!3912 = !DISubroutineType(types: !3913)
!3913 = !{!109, !107, !232, !3914, !107, !110, !2791, !232}
!3914 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !3432, line: 308, baseType: !3915)
!3915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3916, size: 32)
!3916 = !DISubroutineType(types: !3917)
!3917 = !{!109, !13, !232, !107}
!3918 = !{!3919, !3920, !3921, !3922, !3923, !3924, !3925, !3926, !3927, !3928, !3929, !3930, !3931, !3932, !3933, !3934, !3936, !3937, !3938, !3939, !3940, !3946, !3949, !3950, !3951, !3953, !3956, !3957, !3958, !3959, !3960, !3961, !3962, !3963, !3964, !3965, !3966, !3967, !3969, !3972, !3973, !3974, !3975, !3976, !3977, !3979, !3982, !3983, !3984}
!3919 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !3911, file: !288, line: 908, type: !107)
!3920 = !DILocalVariable(name: "in_len", arg: 2, scope: !3911, file: !288, line: 909, type: !232)
!3921 = !DILocalVariable(name: "cb", arg: 3, scope: !3911, file: !288, line: 910, type: !3914)
!3922 = !DILocalVariable(name: "ctx", arg: 4, scope: !3911, file: !288, line: 911, type: !107)
!3923 = !DILocalVariable(name: "flags", arg: 5, scope: !3911, file: !288, line: 912, type: !110)
!3924 = !DILocalVariable(name: "strl", arg: 6, scope: !3911, file: !288, line: 913, type: !2791)
!3925 = !DILocalVariable(name: "strl_len", arg: 7, scope: !3911, file: !288, line: 914, type: !232)
!3926 = !DILocalVariable(name: "buf", scope: !3911, file: !288, line: 918, type: !286)
!3927 = !DILocalVariable(name: "buf32", scope: !3911, file: !288, line: 919, type: !886)
!3928 = !DILocalVariable(name: "args_size", scope: !3911, file: !288, line: 920, type: !32)
!3929 = !DILocalVariable(name: "ros_nbr", scope: !3911, file: !288, line: 920, type: !32)
!3930 = !DILocalVariable(name: "rws_nbr", scope: !3911, file: !288, line: 920, type: !32)
!3931 = !DILocalVariable(name: "fmt_present", scope: !3911, file: !288, line: 921, type: !347)
!3932 = !DILocalVariable(name: "rw_cpy", scope: !3911, file: !288, line: 922, type: !347)
!3933 = !DILocalVariable(name: "ro_cpy", scope: !3911, file: !288, line: 923, type: !347)
!3934 = !DILocalVariable(name: "in_desc", scope: !3911, file: !288, line: 924, type: !3935)
!3935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3435, size: 32)
!3936 = !DILocalVariable(name: "out_len", scope: !3911, file: !288, line: 960, type: !109)
!3937 = !DILocalVariable(name: "fmt", scope: !3911, file: !288, line: 965, type: !279)
!3938 = !DILocalVariable(name: "str_pos", scope: !3911, file: !288, line: 966, type: !286)
!3939 = !DILocalVariable(name: "strl_cnt", scope: !3911, file: !288, line: 967, type: !232)
!3940 = !DILocalVariable(name: "i", scope: !3941, file: !288, line: 973, type: !109)
!3941 = distinct !DILexicalBlock(scope: !3942, file: !288, line: 973, column: 4)
!3942 = distinct !DILexicalBlock(scope: !3943, file: !288, line: 972, column: 15)
!3943 = distinct !DILexicalBlock(scope: !3944, file: !288, line: 972, column: 7)
!3944 = distinct !DILexicalBlock(scope: !3945, file: !288, line: 970, column: 18)
!3945 = distinct !DILexicalBlock(scope: !3911, file: !288, line: 970, column: 6)
!3946 = !DILocalVariable(name: "str", scope: !3947, file: !288, line: 974, type: !279)
!3947 = distinct !DILexicalBlock(scope: !3948, file: !288, line: 973, column: 38)
!3948 = distinct !DILexicalBlock(scope: !3941, file: !288, line: 973, column: 4)
!3949 = !DILocalVariable(name: "len", scope: !3947, file: !288, line: 975, type: !109)
!3950 = !DILocalVariable(name: "drop_ro_str_pos", scope: !3944, file: !288, line: 990, type: !347)
!3951 = !DILocalVariable(name: "i", scope: !3952, file: !288, line: 995, type: !109)
!3952 = distinct !DILexicalBlock(scope: !3944, file: !288, line: 995, column: 3)
!3953 = !DILocalVariable(name: "arg_idx", scope: !3954, file: !288, line: 996, type: !178)
!3954 = distinct !DILexicalBlock(scope: !3955, file: !288, line: 995, column: 37)
!3955 = distinct !DILexicalBlock(scope: !3952, file: !288, line: 995, column: 3)
!3956 = !DILocalVariable(name: "arg_pos", scope: !3954, file: !288, line: 997, type: !178)
!3957 = !DILocalVariable(name: "str", scope: !3954, file: !288, line: 998, type: !279)
!3958 = !DILocalVariable(name: "is_ro", scope: !3954, file: !288, line: 999, type: !347)
!3959 = !DILocalVariable(name: "len", scope: !3954, file: !288, line: 1000, type: !109)
!3960 = !DILocalVariable(name: "out_desc", scope: !3911, file: !288, line: 1038, type: !3435)
!3961 = !DILocalVariable(name: "cpy_str_pos", scope: !3911, file: !288, line: 1040, type: !3417)
!3962 = !DILocalVariable(name: "keep_str_pos", scope: !3911, file: !288, line: 1042, type: !3417)
!3963 = !DILocalVariable(name: "scpy_cnt", scope: !3911, file: !288, line: 1043, type: !178)
!3964 = !DILocalVariable(name: "keep_cnt", scope: !3911, file: !288, line: 1044, type: !178)
!3965 = !DILocalVariable(name: "dst", scope: !3911, file: !288, line: 1045, type: !286)
!3966 = !DILocalVariable(name: "rv", scope: !3911, file: !288, line: 1046, type: !109)
!3967 = !DILocalVariable(name: "i", scope: !3968, file: !288, line: 1074, type: !109)
!3968 = distinct !DILexicalBlock(scope: !3911, file: !288, line: 1074, column: 2)
!3969 = !DILocalVariable(name: "arg_idx", scope: !3970, file: !288, line: 1075, type: !178)
!3970 = distinct !DILexicalBlock(scope: !3971, file: !288, line: 1074, column: 36)
!3971 = distinct !DILexicalBlock(scope: !3968, file: !288, line: 1074, column: 2)
!3972 = !DILocalVariable(name: "arg_pos", scope: !3970, file: !288, line: 1076, type: !178)
!3973 = !DILocalVariable(name: "str", scope: !3970, file: !288, line: 1077, type: !279)
!3974 = !DILocalVariable(name: "is_ro", scope: !3970, file: !288, line: 1078, type: !347)
!3975 = !DILocalVariable(name: "in_desc_backup", scope: !3911, file: !288, line: 1114, type: !3435)
!3976 = !DILocalVariable(name: "strs_len", scope: !3911, file: !288, line: 1134, type: !232)
!3977 = !DILocalVariable(name: "i", scope: !3978, file: !288, line: 1143, type: !109)
!3978 = distinct !DILexicalBlock(scope: !3911, file: !288, line: 1143, column: 2)
!3979 = !DILocalVariable(name: "loc", scope: !3980, file: !288, line: 1144, type: !178)
!3980 = distinct !DILexicalBlock(scope: !3981, file: !288, line: 1143, column: 37)
!3981 = distinct !DILexicalBlock(scope: !3978, file: !288, line: 1143, column: 2)
!3982 = !DILocalVariable(name: "str", scope: !3980, file: !288, line: 1145, type: !279)
!3983 = !DILocalVariable(name: "str_len", scope: !3980, file: !288, line: 1146, type: !192)
!3984 = !DILabel(scope: !3985, name: "calculate_string_length", file: !288, line: 1021)
!3985 = distinct !DILexicalBlock(scope: !3986, file: !288, line: 1020, column: 56)
!3986 = distinct !DILexicalBlock(scope: !3987, file: !288, line: 1020, column: 15)
!3987 = distinct !DILexicalBlock(scope: !3954, file: !288, line: 1014, column: 8)
!3988 = !DILocation(line: 0, scope: !3911)
!3989 = !DILocation(line: 916, column: 2, scope: !3990)
!3990 = distinct !DILexicalBlock(scope: !3991, file: !288, line: 916, column: 2)
!3991 = distinct !DILexicalBlock(scope: !3911, file: !288, line: 916, column: 2)
!3992 = !DILocation(line: 916, column: 2, scope: !3991)
!3993 = !DILocation(line: 916, column: 2, scope: !3994)
!3994 = distinct !DILexicalBlock(scope: !3990, file: !288, line: 916, column: 2)
!3995 = !DILocation(line: 919, column: 20, scope: !3911)
!3996 = !DILocation(line: 921, column: 27, scope: !3911)
!3997 = !DILocation(line: 921, column: 21, scope: !3911)
!3998 = !DILocation(line: 926, column: 18, scope: !3911)
!3999 = !DILocation(line: 926, column: 11, scope: !3911)
!4000 = !DILocation(line: 926, column: 34, scope: !3911)
!4001 = !DILocation(line: 931, column: 21, scope: !3911)
!4002 = !DILocation(line: 931, column: 12, scope: !3911)
!4003 = !DILocation(line: 932, column: 11, scope: !3911)
!4004 = !DILocation(line: 932, column: 19, scope: !3911)
!4005 = !DILocation(line: 938, column: 21, scope: !3911)
!4006 = !DILocation(line: 938, column: 12, scope: !3911)
!4007 = !DILocation(line: 939, column: 19, scope: !3911)
!4008 = !DILocation(line: 939, column: 23, scope: !3911)
!4009 = !DILocation(line: 946, column: 14, scope: !4010)
!4010 = distinct !DILexicalBlock(scope: !3911, file: !288, line: 946, column: 6)
!4011 = !DILocation(line: 947, column: 7, scope: !4012)
!4012 = distinct !DILexicalBlock(scope: !4013, file: !288, line: 947, column: 7)
!4013 = distinct !DILexicalBlock(scope: !4010, file: !288, line: 946, column: 26)
!4014 = !DILocation(line: 947, column: 7, scope: !4013)
!4015 = !DILocation(line: 948, column: 4, scope: !4016)
!4016 = distinct !DILexicalBlock(scope: !4012, file: !288, line: 947, column: 11)
!4017 = !DILocation(line: 949, column: 3, scope: !4016)
!4018 = !DILocation(line: 958, column: 23, scope: !3911)
!4019 = !DILocation(line: 958, column: 14, scope: !3911)
!4020 = !DILocation(line: 958, column: 27, scope: !3911)
!4021 = !DILocation(line: 965, column: 41, scope: !3911)
!4022 = !DILocation(line: 965, column: 20, scope: !3911)
!4023 = !DILocation(line: 966, column: 22, scope: !3911)
!4024 = !DILocation(line: 970, column: 9, scope: !3945)
!4025 = !DILocation(line: 970, column: 6, scope: !3911)
!4026 = !DILocation(line: 972, column: 7, scope: !3944)
!4027 = !DILocation(line: 0, scope: !3941)
!4028 = !DILocation(line: 973, column: 4, scope: !3941)
!4029 = !DILocation(line: 974, column: 46, scope: !3947)
!4030 = !DILocation(line: 974, column: 40, scope: !3947)
!4031 = !DILocation(line: 974, column: 23, scope: !3947)
!4032 = !DILocation(line: 0, scope: !3947)
!4033 = !DILocation(line: 975, column: 15, scope: !3947)
!4034 = !DILocation(line: 978, column: 14, scope: !4035)
!4035 = distinct !DILexicalBlock(scope: !3947, file: !288, line: 978, column: 9)
!4036 = !DILocation(line: 979, column: 25, scope: !4037)
!4037 = distinct !DILexicalBlock(scope: !4035, file: !288, line: 978, column: 38)
!4038 = !DILocation(line: 979, column: 19, scope: !4037)
!4039 = !DILocation(line: 979, column: 6, scope: !4037)
!4040 = !DILocation(line: 979, column: 23, scope: !4037)
!4041 = !DILocation(line: 980, column: 5, scope: !4037)
!4042 = !DILocation(line: 981, column: 13, scope: !3947)
!4043 = !DILocation(line: 982, column: 12, scope: !3947)
!4044 = !DILocation(line: 973, column: 34, scope: !3948)
!4045 = !DILocation(line: 973, column: 22, scope: !3948)
!4046 = distinct !{!4046, !4028, !4047}
!4047 = !DILocation(line: 983, column: 4, scope: !3941)
!4048 = !DILocation(line: 985, column: 16, scope: !4049)
!4049 = distinct !DILexicalBlock(scope: !4050, file: !288, line: 985, column: 8)
!4050 = distinct !DILexicalBlock(scope: !3943, file: !288, line: 984, column: 10)
!4051 = !DILocation(line: 967, column: 9, scope: !3911)
!4052 = !DILocation(line: 971, column: 11, scope: !3944)
!4053 = !DILocation(line: 0, scope: !3944)
!4054 = !DILocation(line: 0, scope: !3952)
!4055 = !DILocation(line: 995, column: 21, scope: !3955)
!4056 = !DILocation(line: 995, column: 3, scope: !3952)
!4057 = !DILocation(line: 990, column: 34, scope: !3944)
!4058 = !DILocation(line: 990, column: 26, scope: !3944)
!4059 = !DILocation(line: 996, column: 30, scope: !3954)
!4060 = !DILocation(line: 0, scope: !3954)
!4061 = !DILocation(line: 997, column: 30, scope: !3954)
!4062 = !DILocation(line: 997, column: 22, scope: !3954)
!4063 = !DILocation(line: 998, column: 39, scope: !3954)
!4064 = !DILocation(line: 998, column: 22, scope: !3954)
!4065 = !DILocation(line: 999, column: 17, scope: !3954)
!4066 = !DILocation(line: 1002, column: 20, scope: !4067)
!4067 = distinct !DILexicalBlock(scope: !3954, file: !288, line: 1002, column: 8)
!4068 = !DILocation(line: 996, column: 22, scope: !3954)
!4069 = !DILocation(line: 1002, column: 35, scope: !4067)
!4070 = !DILocation(line: 1002, column: 23, scope: !4067)
!4071 = !DILocation(line: 1002, column: 8, scope: !3954)
!4072 = !DILocation(line: 1003, column: 5, scope: !4073)
!4073 = distinct !DILexicalBlock(scope: !4074, file: !288, line: 1003, column: 5)
!4074 = distinct !DILexicalBlock(scope: !4075, file: !288, line: 1003, column: 5)
!4075 = distinct !DILexicalBlock(scope: !4076, file: !288, line: 1003, column: 5)
!4076 = distinct !DILexicalBlock(scope: !4077, file: !288, line: 1003, column: 5)
!4077 = distinct !DILexicalBlock(scope: !4067, file: !288, line: 1002, column: 45)
!4078 = !DILocation(line: 1010, column: 13, scope: !4077)
!4079 = !DILocation(line: 1011, column: 5, scope: !4077)
!4080 = !DILocation(line: 1014, column: 8, scope: !3954)
!4081 = !DILocation(line: 1015, column: 9, scope: !4082)
!4082 = distinct !DILexicalBlock(scope: !3987, file: !288, line: 1014, column: 15)
!4083 = !DILocation(line: 1018, column: 14, scope: !4084)
!4084 = distinct !DILexicalBlock(scope: !4085, file: !288, line: 1017, column: 12)
!4085 = distinct !DILexicalBlock(scope: !4082, file: !288, line: 1015, column: 9)
!4086 = !DILocation(line: 1020, column: 4, scope: !4082)
!4087 = !DILocation(line: 1020, column: 15, scope: !3987)
!4088 = !DILocation(line: 1021, column: 1, scope: !3985)
!4089 = !DILocation(line: 1022, column: 11, scope: !3985)
!4090 = !DILocation(line: 1025, column: 14, scope: !4091)
!4091 = distinct !DILexicalBlock(scope: !3985, file: !288, line: 1025, column: 9)
!4092 = !DILocation(line: 1026, column: 25, scope: !4093)
!4093 = distinct !DILexicalBlock(scope: !4091, file: !288, line: 1025, column: 38)
!4094 = !DILocation(line: 1026, column: 19, scope: !4093)
!4095 = !DILocation(line: 1026, column: 6, scope: !4093)
!4096 = !DILocation(line: 1026, column: 23, scope: !4093)
!4097 = !DILocation(line: 1027, column: 5, scope: !4093)
!4098 = !DILocation(line: 1031, column: 21, scope: !3985)
!4099 = !DILocation(line: 1031, column: 13, scope: !3985)
!4100 = !DILocation(line: 1032, column: 4, scope: !3985)
!4101 = !DILocation(line: 995, column: 33, scope: !3955)
!4102 = distinct !{!4102, !4056, !4103}
!4103 = !DILocation(line: 1033, column: 3, scope: !3952)
!4104 = !DILocation(line: 1040, column: 10, scope: !3911)
!4105 = !DILocation(line: 1042, column: 10, scope: !3911)
!4106 = !DILocation(line: 1052, column: 6, scope: !3911)
!4107 = !DILocation(line: 1055, column: 9, scope: !4108)
!4108 = distinct !DILexicalBlock(scope: !4109, file: !288, line: 1052, column: 14)
!4109 = distinct !DILexicalBlock(scope: !3911, file: !288, line: 1052, column: 6)
!4110 = !DILocation(line: 1056, column: 2, scope: !4108)
!4111 = !DILocation(line: 1056, column: 21, scope: !4112)
!4112 = distinct !DILexicalBlock(scope: !4109, file: !288, line: 1056, column: 13)
!4113 = !DILocation(line: 1066, column: 3, scope: !4114)
!4114 = distinct !DILexicalBlock(scope: !4115, file: !288, line: 1065, column: 11)
!4115 = distinct !DILexicalBlock(scope: !3911, file: !288, line: 1065, column: 6)
!4116 = !DILocation(line: 1067, column: 2, scope: !4114)
!4117 = !DILocation(line: 1068, column: 10, scope: !3911)
!4118 = !DILocation(line: 0, scope: !3968)
!4119 = !DILocation(line: 1074, column: 20, scope: !3971)
!4120 = !DILocation(line: 1074, column: 2, scope: !3968)
!4121 = !DILocation(line: 1110, column: 24, scope: !3911)
!4122 = !DILocation(line: 1053, column: 12, scope: !4108)
!4123 = !DILocation(line: 1054, column: 12, scope: !4108)
!4124 = !DILocation(line: 1108, column: 30, scope: !3911)
!4125 = !DILocation(line: 1108, column: 40, scope: !3911)
!4126 = !DILocation(line: 1108, column: 38, scope: !3911)
!4127 = !DILocation(line: 1109, column: 31, scope: !3911)
!4128 = !DILocation(line: 1109, column: 24, scope: !3911)
!4129 = !DILocation(line: 1110, column: 31, scope: !3911)
!4130 = !DILocation(line: 1114, column: 31, scope: !3911)
!4131 = !DILocation(line: 1114, column: 48, scope: !3911)
!4132 = !DILocation(line: 1115, column: 13, scope: !3911)
!4133 = !DILocation(line: 1118, column: 7, scope: !3911)
!4134 = !DILocation(line: 1119, column: 9, scope: !4135)
!4135 = distinct !DILexicalBlock(scope: !3911, file: !288, line: 1119, column: 6)
!4136 = !DILocation(line: 1119, column: 6, scope: !3911)
!4137 = !DILocation(line: 1075, column: 29, scope: !3970)
!4138 = !DILocation(line: 1075, column: 21, scope: !3970)
!4139 = !DILocation(line: 0, scope: !3970)
!4140 = !DILocation(line: 1076, column: 29, scope: !3970)
!4141 = !DILocation(line: 1076, column: 21, scope: !3970)
!4142 = !DILocation(line: 1077, column: 38, scope: !3970)
!4143 = !DILocation(line: 1077, column: 21, scope: !3970)
!4144 = !DILocation(line: 1078, column: 16, scope: !3970)
!4145 = !DILocation(line: 1080, column: 19, scope: !4146)
!4146 = distinct !DILexicalBlock(scope: !3970, file: !288, line: 1080, column: 7)
!4147 = !DILocation(line: 1080, column: 34, scope: !4146)
!4148 = !DILocation(line: 1080, column: 22, scope: !4146)
!4149 = !DILocation(line: 1080, column: 7, scope: !3970)
!4150 = !DILocation(line: 1084, column: 7, scope: !3970)
!4151 = !DILocation(line: 1085, column: 8, scope: !4152)
!4152 = distinct !DILexicalBlock(scope: !4153, file: !288, line: 1084, column: 14)
!4153 = distinct !DILexicalBlock(scope: !3970, file: !288, line: 1084, column: 7)
!4154 = !DILocation(line: 1086, column: 5, scope: !4155)
!4155 = distinct !DILexicalBlock(scope: !4156, file: !288, line: 1086, column: 5)
!4156 = distinct !DILexicalBlock(scope: !4157, file: !288, line: 1086, column: 5)
!4157 = distinct !DILexicalBlock(scope: !4158, file: !288, line: 1085, column: 49)
!4158 = distinct !DILexicalBlock(scope: !4152, file: !288, line: 1085, column: 8)
!4159 = !DILocation(line: 1086, column: 5, scope: !4156)
!4160 = !DILocation(line: 1086, column: 5, scope: !4161)
!4161 = distinct !DILexicalBlock(scope: !4155, file: !288, line: 1086, column: 5)
!4162 = !DILocation(line: 1087, column: 25, scope: !4157)
!4163 = !DILocation(line: 1087, column: 5, scope: !4157)
!4164 = !DILocation(line: 1088, column: 4, scope: !4157)
!4165 = !DILocation(line: 1088, column: 15, scope: !4158)
!4166 = !DILocation(line: 1089, column: 5, scope: !4167)
!4167 = distinct !DILexicalBlock(scope: !4168, file: !288, line: 1089, column: 5)
!4168 = distinct !DILexicalBlock(scope: !4169, file: !288, line: 1089, column: 5)
!4169 = distinct !DILexicalBlock(scope: !4170, file: !288, line: 1088, column: 61)
!4170 = distinct !DILexicalBlock(scope: !4158, file: !288, line: 1088, column: 15)
!4171 = !DILocation(line: 1089, column: 5, scope: !4168)
!4172 = !DILocation(line: 1089, column: 5, scope: !4173)
!4173 = distinct !DILexicalBlock(scope: !4167, file: !288, line: 1089, column: 5)
!4174 = !DILocation(line: 1090, column: 26, scope: !4169)
!4175 = !DILocation(line: 1090, column: 5, scope: !4169)
!4176 = !DILocation(line: 1091, column: 4, scope: !4169)
!4177 = !DILocation(line: 1095, column: 8, scope: !4178)
!4178 = distinct !DILexicalBlock(scope: !4153, file: !288, line: 1094, column: 10)
!4179 = !DILocation(line: 1096, column: 5, scope: !4180)
!4180 = distinct !DILexicalBlock(scope: !4181, file: !288, line: 1096, column: 5)
!4181 = distinct !DILexicalBlock(scope: !4182, file: !288, line: 1096, column: 5)
!4182 = distinct !DILexicalBlock(scope: !4183, file: !288, line: 1095, column: 49)
!4183 = distinct !DILexicalBlock(scope: !4178, file: !288, line: 1095, column: 8)
!4184 = !DILocation(line: 1096, column: 5, scope: !4181)
!4185 = !DILocation(line: 1096, column: 5, scope: !4186)
!4186 = distinct !DILexicalBlock(scope: !4180, file: !288, line: 1096, column: 5)
!4187 = !DILocation(line: 1097, column: 25, scope: !4182)
!4188 = !DILocation(line: 1097, column: 5, scope: !4182)
!4189 = !DILocation(line: 1098, column: 4, scope: !4182)
!4190 = !DILocation(line: 1099, column: 5, scope: !4191)
!4191 = distinct !DILexicalBlock(scope: !4192, file: !288, line: 1099, column: 5)
!4192 = distinct !DILexicalBlock(scope: !4193, file: !288, line: 1099, column: 5)
!4193 = distinct !DILexicalBlock(scope: !4183, file: !288, line: 1098, column: 11)
!4194 = !DILocation(line: 1099, column: 5, scope: !4192)
!4195 = !DILocation(line: 1099, column: 5, scope: !4196)
!4196 = distinct !DILexicalBlock(scope: !4191, file: !288, line: 1099, column: 5)
!4197 = !DILocation(line: 1100, column: 26, scope: !4193)
!4198 = !DILocation(line: 1100, column: 5, scope: !4193)
!4199 = !DILocation(line: 1100, column: 30, scope: !4193)
!4200 = !DILocation(line: 1101, column: 26, scope: !4193)
!4201 = !DILocation(line: 1101, column: 5, scope: !4193)
!4202 = !DILocation(line: 0, scope: !4153)
!4203 = !DILocation(line: 1074, column: 32, scope: !3971)
!4204 = distinct !{!4204, !4120, !4205}
!4205 = !DILocation(line: 1104, column: 2, scope: !3968)
!4206 = !DILocation(line: 1124, column: 13, scope: !3911)
!4207 = !DILocation(line: 1127, column: 10, scope: !3911)
!4208 = !DILocation(line: 1127, column: 7, scope: !3911)
!4209 = !DILocation(line: 1128, column: 9, scope: !4210)
!4210 = distinct !DILexicalBlock(scope: !3911, file: !288, line: 1128, column: 6)
!4211 = !DILocation(line: 1128, column: 6, scope: !3911)
!4212 = !DILocation(line: 1134, column: 27, scope: !3911)
!4213 = !DILocation(line: 1136, column: 7, scope: !3911)
!4214 = !DILocation(line: 1137, column: 9, scope: !4215)
!4215 = distinct !DILexicalBlock(scope: !3911, file: !288, line: 1137, column: 6)
!4216 = !DILocation(line: 1137, column: 6, scope: !3911)
!4217 = !DILocation(line: 1131, column: 10, scope: !3911)
!4218 = !DILocation(line: 1140, column: 10, scope: !3911)
!4219 = !DILocation(line: 0, scope: !3978)
!4220 = !DILocation(line: 1143, column: 20, scope: !3981)
!4221 = !DILocation(line: 1143, column: 2, scope: !3978)
!4222 = !DILocation(line: 1144, column: 3, scope: !3980)
!4223 = !DILocation(line: 1144, column: 17, scope: !3980)
!4224 = !DILocation(line: 0, scope: !3980)
!4225 = !DILocation(line: 1144, column: 11, scope: !3980)
!4226 = !DILocation(line: 1145, column: 38, scope: !3980)
!4227 = !DILocation(line: 1145, column: 21, scope: !3980)
!4228 = !DILocation(line: 1146, column: 22, scope: !3980)
!4229 = !DILocation(line: 1146, column: 29, scope: !3980)
!4230 = !DILocation(line: 1148, column: 8, scope: !3980)
!4231 = !DILocation(line: 1149, column: 10, scope: !4232)
!4232 = distinct !DILexicalBlock(scope: !3980, file: !288, line: 1149, column: 7)
!4233 = !DILocation(line: 1149, column: 7, scope: !3980)
!4234 = !DILocation(line: 1154, column: 8, scope: !3980)
!4235 = !DILocation(line: 1155, column: 10, scope: !4236)
!4236 = distinct !DILexicalBlock(scope: !3980, file: !288, line: 1155, column: 7)
!4237 = !DILocation(line: 1155, column: 7, scope: !3980)
!4238 = !DILocation(line: 1159, column: 2, scope: !3981)
!4239 = !DILocation(line: 1152, column: 11, scope: !3980)
!4240 = !DILocation(line: 1158, column: 11, scope: !3980)
!4241 = !DILocation(line: 1143, column: 33, scope: !3981)
!4242 = distinct !{!4242, !4221, !4243}
!4243 = !DILocation(line: 1159, column: 2, scope: !3978)
!4244 = !DILocation(line: 1162, column: 8, scope: !3911)
!4245 = !DILocation(line: 1164, column: 2, scope: !3911)
!4246 = !DILocation(line: 1165, column: 1, scope: !3911)
!4247 = distinct !DISubprogram(name: "get_package_len", scope: !288, file: !288, line: 196, type: !4248, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !4250)
!4248 = !DISubroutineType(types: !4249)
!4249 = !{!232, !107}
!4250 = !{!4251, !4252, !4253, !4254, !4255, !4256, !4257}
!4251 = !DILocalVariable(name: "packaged", arg: 1, scope: !4247, file: !288, line: 196, type: !107)
!4252 = !DILocalVariable(name: "buf", scope: !4247, file: !288, line: 200, type: !286)
!4253 = !DILocalVariable(name: "start", scope: !4247, file: !288, line: 201, type: !286)
!4254 = !DILocalVariable(name: "args_size", scope: !4247, file: !288, line: 202, type: !32)
!4255 = !DILocalVariable(name: "s_nbr", scope: !4247, file: !288, line: 202, type: !32)
!4256 = !DILocalVariable(name: "ros_nbr", scope: !4247, file: !288, line: 202, type: !32)
!4257 = !DILocalVariable(name: "i", scope: !4258, file: !288, line: 215, type: !109)
!4258 = distinct !DILexicalBlock(scope: !4247, file: !288, line: 215, column: 2)
!4259 = !DILocation(line: 0, scope: !4247)
!4260 = !DILocation(line: 198, column: 2, scope: !4261)
!4261 = distinct !DILexicalBlock(scope: !4262, file: !288, line: 198, column: 2)
!4262 = distinct !DILexicalBlock(scope: !4247, file: !288, line: 198, column: 2)
!4263 = !DILocation(line: 198, column: 2, scope: !4262)
!4264 = !DILocation(line: 198, column: 2, scope: !4265)
!4265 = distinct !DILexicalBlock(scope: !4261, file: !288, line: 198, column: 2)
!4266 = !DILocation(line: 204, column: 14, scope: !4247)
!4267 = !DILocation(line: 204, column: 21, scope: !4247)
!4268 = !DILocation(line: 205, column: 14, scope: !4247)
!4269 = !DILocation(line: 206, column: 14, scope: !4247)
!4270 = !DILocation(line: 209, column: 6, scope: !4247)
!4271 = !DILocation(line: 212, column: 6, scope: !4247)
!4272 = !DILocation(line: 0, scope: !4258)
!4273 = !DILocation(line: 215, column: 20, scope: !4274)
!4274 = distinct !DILexicalBlock(scope: !4258, file: !288, line: 215, column: 2)
!4275 = !DILocation(line: 215, column: 2, scope: !4258)
!4276 = !DILocation(line: 220, column: 33, scope: !4247)
!4277 = !DILocation(line: 220, column: 2, scope: !4247)
!4278 = !DILocation(line: 216, column: 6, scope: !4279)
!4279 = distinct !DILexicalBlock(scope: !4274, file: !288, line: 215, column: 34)
!4280 = !DILocation(line: 217, column: 10, scope: !4279)
!4281 = !DILocation(line: 217, column: 36, scope: !4279)
!4282 = !DILocation(line: 217, column: 7, scope: !4279)
!4283 = !DILocation(line: 215, column: 30, scope: !4274)
!4284 = distinct !{!4284, !4275, !4285}
!4285 = !DILocation(line: 218, column: 2, scope: !4258)
!4286 = distinct !DISubprogram(name: "append_string", scope: !288, file: !288, line: 223, type: !4287, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !4289)
!4287 = !DISubroutineType(types: !4288)
!4288 = !{!109, !3914, !107, !279, !192}
!4289 = !{!4290, !4291, !4292, !4293}
!4290 = !DILocalVariable(name: "cb", arg: 1, scope: !4286, file: !288, line: 223, type: !3914)
!4291 = !DILocalVariable(name: "ctx", arg: 2, scope: !4286, file: !288, line: 223, type: !107)
!4292 = !DILocalVariable(name: "str", arg: 3, scope: !4286, file: !288, line: 223, type: !279)
!4293 = !DILocalVariable(name: "strl", arg: 4, scope: !4286, file: !288, line: 223, type: !192)
!4294 = !DILocation(line: 0, scope: !4286)
!4295 = !DILocation(line: 225, column: 9, scope: !4296)
!4296 = distinct !DILexicalBlock(scope: !4286, file: !288, line: 225, column: 6)
!4297 = !DILocation(line: 225, column: 6, scope: !4286)
!4298 = !DILocation(line: 226, column: 14, scope: !4299)
!4299 = distinct !DILexicalBlock(scope: !4296, file: !288, line: 225, column: 18)
!4300 = !DILocation(line: 226, column: 12, scope: !4299)
!4301 = !DILocation(line: 226, column: 3, scope: !4299)
!4302 = !DILocation(line: 229, column: 14, scope: !4286)
!4303 = !DILocation(line: 229, column: 9, scope: !4286)
!4304 = !DILocation(line: 229, column: 27, scope: !4286)
!4305 = !DILocation(line: 229, column: 39, scope: !4286)
!4306 = !DILocation(line: 230, column: 17, scope: !4286)
!4307 = !DILocation(line: 230, column: 9, scope: !4286)
!4308 = !DILocation(line: 230, column: 2, scope: !4286)
!4309 = !DILocation(line: 231, column: 1, scope: !4286)
!4310 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !301, file: !301, line: 45, type: !303, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4311)
!4311 = !{!4312}
!4312 = !DILocalVariable(name: "c", arg: 1, scope: !4310, file: !301, line: 45, type: !109)
!4313 = !DILocation(line: 0, scope: !4310)
!4314 = !DILocation(line: 50, column: 2, scope: !4310)
!4315 = distinct !DISubprogram(name: "__printk_hook_install", scope: !301, file: !301, line: 63, type: !4316, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4318)
!4316 = !DISubroutineType(types: !4317)
!4317 = !{null, !302}
!4318 = !{!4319}
!4319 = !DILocalVariable(name: "fn", arg: 1, scope: !4315, file: !301, line: 63, type: !302)
!4320 = !DILocation(line: 0, scope: !4315)
!4321 = !DILocation(line: 65, column: 12, scope: !4315)
!4322 = !DILocation(line: 66, column: 1, scope: !4315)
!4323 = distinct !DISubprogram(name: "__printk_get_hook", scope: !301, file: !301, line: 76, type: !4324, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !2036)
!4324 = !DISubroutineType(types: !4325)
!4325 = !{!107}
!4326 = !DILocation(line: 78, column: 9, scope: !4323)
!4327 = !DILocation(line: 78, column: 2, scope: !4323)
!4328 = distinct !DISubprogram(name: "vprintk", scope: !301, file: !301, line: 113, type: !4329, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4337)
!4329 = !DISubroutineType(types: !4330)
!4330 = !{null, !279, !4331}
!4331 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3400, line: 99, baseType: !4332)
!4332 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3400, line: 40, baseType: !4333)
!4333 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !301, baseType: !4334)
!4334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4335)
!4335 = !{!4336}
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4334, file: !301, line: 79, baseType: !107, size: 32)
!4337 = !{!4338, !4339, !4340}
!4338 = !DILocalVariable(name: "fmt", arg: 1, scope: !4328, file: !301, line: 113, type: !279)
!4339 = !DILocalVariable(name: "ap", arg: 2, scope: !4328, file: !301, line: 113, type: !4331)
!4340 = !DILocalVariable(name: "ctx", scope: !4341, file: !301, line: 121, type: !4343)
!4341 = distinct !DILexicalBlock(scope: !4342, file: !301, line: 120, column: 27)
!4342 = distinct !DILexicalBlock(scope: !4328, file: !301, line: 120, column: 6)
!4343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !301, line: 81, size: 32, elements: !4344)
!4344 = !{!4345, !4346}
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !4343, file: !301, line: 85, baseType: !32, size: 32)
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4343, file: !301, line: 86, baseType: !4347, offset: 32)
!4347 = !DICompositeType(tag: DW_TAG_array_type, baseType: !148, elements: !4348)
!4348 = !{!4349}
!4349 = !DISubrange(count: 0)
!4350 = !DILocation(line: 0, scope: !4328)
!4351 = !DILocation(line: 148, column: 3, scope: !4352)
!4352 = distinct !DILexicalBlock(scope: !4342, file: !301, line: 138, column: 9)
!4353 = !DILocation(line: 155, column: 1, scope: !4328)
!4354 = distinct !DISubprogram(name: "char_out", scope: !301, file: !301, line: 107, type: !4355, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4357)
!4355 = !DISubroutineType(types: !4356)
!4356 = !{!109, !109, !107}
!4357 = !{!4358, !4359}
!4358 = !DILocalVariable(name: "c", arg: 1, scope: !4354, file: !301, line: 107, type: !109)
!4359 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !4354, file: !301, line: 107, type: !107)
!4360 = !DILocation(line: 0, scope: !4354)
!4361 = !DILocation(line: 110, column: 9, scope: !4354)
!4362 = !DILocation(line: 110, column: 2, scope: !4354)
!4363 = distinct !DISubprogram(name: "cbvprintf", scope: !3432, file: !3432, line: 739, type: !4364, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4366)
!4364 = !DISubroutineType(types: !4365)
!4365 = !{!109, !3782, !107, !279, !4331}
!4366 = !{!4367, !4368, !4369, !4370}
!4367 = !DILocalVariable(name: "out", arg: 1, scope: !4363, file: !3432, line: 739, type: !3782)
!4368 = !DILocalVariable(name: "ctx", arg: 2, scope: !4363, file: !3432, line: 739, type: !107)
!4369 = !DILocalVariable(name: "format", arg: 3, scope: !4363, file: !3432, line: 739, type: !279)
!4370 = !DILocalVariable(name: "ap", arg: 4, scope: !4363, file: !3432, line: 739, type: !4331)
!4371 = !DILocation(line: 0, scope: !4363)
!4372 = !DILocation(line: 741, column: 9, scope: !4363)
!4373 = !DILocation(line: 741, column: 2, scope: !4363)
!4374 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !301, file: !301, line: 157, type: !4375, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4377)
!4375 = !DISubroutineType(types: !4376)
!4376 = !{null, !285, !232}
!4377 = !{!4378, !4379, !4380}
!4378 = !DILocalVariable(name: "c", arg: 1, scope: !4374, file: !301, line: 157, type: !285)
!4379 = !DILocalVariable(name: "n", arg: 2, scope: !4374, file: !301, line: 157, type: !232)
!4380 = !DILocalVariable(name: "i", scope: !4374, file: !301, line: 159, type: !232)
!4381 = !DILocation(line: 0, scope: !4374)
!4382 = !DILocation(line: 164, column: 16, scope: !4383)
!4383 = distinct !DILexicalBlock(scope: !4384, file: !301, line: 164, column: 2)
!4384 = distinct !DILexicalBlock(scope: !4374, file: !301, line: 164, column: 2)
!4385 = !DILocation(line: 164, column: 2, scope: !4384)
!4386 = !DILocation(line: 165, column: 3, scope: !4387)
!4387 = distinct !DILexicalBlock(scope: !4383, file: !301, line: 164, column: 26)
!4388 = !DILocation(line: 165, column: 13, scope: !4387)
!4389 = !DILocation(line: 164, column: 22, scope: !4383)
!4390 = distinct !{!4390, !4385, !4391}
!4391 = !DILocation(line: 166, column: 2, scope: !4384)
!4392 = !DILocation(line: 171, column: 1, scope: !4374)
!4393 = distinct !DISubprogram(name: "printk", scope: !301, file: !301, line: 203, type: !4394, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4396)
!4394 = !DISubroutineType(types: !4395)
!4395 = !{null, !279, null}
!4396 = !{!4397, !4398}
!4397 = !DILocalVariable(name: "fmt", arg: 1, scope: !4393, file: !301, line: 203, type: !279)
!4398 = !DILocalVariable(name: "ap", scope: !4393, file: !301, line: 205, type: !4331)
!4399 = !DILocation(line: 0, scope: !4393)
!4400 = !DILocation(line: 205, column: 2, scope: !4393)
!4401 = !DILocation(line: 205, column: 10, scope: !4393)
!4402 = !DILocation(line: 207, column: 2, scope: !4393)
!4403 = !DILocation(line: 209, column: 2, scope: !4393)
!4404 = !DILocation(line: 211, column: 2, scope: !4393)
!4405 = !DILocation(line: 212, column: 1, scope: !4393)
!4406 = distinct !DISubprogram(name: "snprintk", scope: !301, file: !301, line: 239, type: !4407, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4409)
!4407 = !DISubroutineType(types: !4408)
!4408 = !{!109, !285, !232, !279, null}
!4409 = !{!4410, !4411, !4412, !4413, !4414}
!4410 = !DILocalVariable(name: "str", arg: 1, scope: !4406, file: !301, line: 239, type: !285)
!4411 = !DILocalVariable(name: "size", arg: 2, scope: !4406, file: !301, line: 239, type: !232)
!4412 = !DILocalVariable(name: "fmt", arg: 3, scope: !4406, file: !301, line: 239, type: !279)
!4413 = !DILocalVariable(name: "ap", scope: !4406, file: !301, line: 241, type: !4331)
!4414 = !DILocalVariable(name: "ret", scope: !4406, file: !301, line: 242, type: !109)
!4415 = !DILocation(line: 0, scope: !4406)
!4416 = !DILocation(line: 241, column: 2, scope: !4406)
!4417 = !DILocation(line: 241, column: 10, scope: !4406)
!4418 = !DILocation(line: 244, column: 2, scope: !4406)
!4419 = !DILocation(line: 245, column: 8, scope: !4406)
!4420 = !DILocation(line: 246, column: 2, scope: !4406)
!4421 = !DILocation(line: 249, column: 1, scope: !4406)
!4422 = !DILocation(line: 248, column: 2, scope: !4406)
!4423 = distinct !DISubprogram(name: "vsnprintk", scope: !301, file: !301, line: 251, type: !4424, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4426)
!4424 = !DISubroutineType(types: !4425)
!4425 = !{!109, !285, !232, !279, !4331}
!4426 = !{!4427, !4428, !4429, !4430, !4431}
!4427 = !DILocalVariable(name: "str", arg: 1, scope: !4423, file: !301, line: 251, type: !285)
!4428 = !DILocalVariable(name: "size", arg: 2, scope: !4423, file: !301, line: 251, type: !232)
!4429 = !DILocalVariable(name: "fmt", arg: 3, scope: !4423, file: !301, line: 251, type: !279)
!4430 = !DILocalVariable(name: "ap", arg: 4, scope: !4423, file: !301, line: 251, type: !4331)
!4431 = !DILocalVariable(name: "ctx", scope: !4423, file: !301, line: 253, type: !4432)
!4432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !301, line: 217, size: 96, elements: !4433)
!4433 = !{!4434, !4435, !4436}
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4432, file: !301, line: 218, baseType: !285, size: 32)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4432, file: !301, line: 219, baseType: !109, size: 32, offset: 32)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4432, file: !301, line: 220, baseType: !109, size: 32, offset: 64)
!4437 = !DILocation(line: 0, scope: !4423)
!4438 = !DILocation(line: 253, column: 2, scope: !4423)
!4439 = !DILocation(line: 253, column: 21, scope: !4423)
!4440 = !DILocation(line: 253, column: 27, scope: !4423)
!4441 = !DILocation(line: 255, column: 2, scope: !4423)
!4442 = !DILocation(line: 257, column: 10, scope: !4443)
!4443 = distinct !DILexicalBlock(scope: !4423, file: !301, line: 257, column: 6)
!4444 = !DILocation(line: 257, column: 22, scope: !4443)
!4445 = !DILocation(line: 257, column: 16, scope: !4443)
!4446 = !DILocation(line: 257, column: 6, scope: !4423)
!4447 = !DILocation(line: 258, column: 3, scope: !4448)
!4448 = distinct !DILexicalBlock(scope: !4443, file: !301, line: 257, column: 27)
!4449 = !DILocation(line: 258, column: 18, scope: !4448)
!4450 = !DILocation(line: 259, column: 2, scope: !4448)
!4451 = !DILocation(line: 262, column: 1, scope: !4423)
!4452 = !DILocation(line: 261, column: 2, scope: !4423)
!4453 = distinct !DISubprogram(name: "str_out", scope: !301, file: !301, line: 223, type: !4454, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4457)
!4454 = !DISubroutineType(types: !4455)
!4455 = !{!109, !109, !4456}
!4456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4432, size: 32)
!4457 = !{!4458, !4459}
!4458 = !DILocalVariable(name: "c", arg: 1, scope: !4453, file: !301, line: 223, type: !109)
!4459 = !DILocalVariable(name: "ctx", arg: 2, scope: !4453, file: !301, line: 223, type: !4456)
!4460 = !DILocation(line: 0, scope: !4453)
!4461 = !DILocation(line: 225, column: 11, scope: !4462)
!4462 = distinct !DILexicalBlock(scope: !4453, file: !301, line: 225, column: 6)
!4463 = !DILocation(line: 225, column: 15, scope: !4462)
!4464 = !DILocation(line: 0, scope: !4462)
!4465 = !DILocation(line: 225, column: 23, scope: !4462)
!4466 = !DILocation(line: 225, column: 45, scope: !4462)
!4467 = !DILocation(line: 225, column: 37, scope: !4462)
!4468 = !DILocation(line: 225, column: 6, scope: !4453)
!4469 = !DILocation(line: 226, column: 8, scope: !4470)
!4470 = distinct !DILexicalBlock(scope: !4462, file: !301, line: 225, column: 50)
!4471 = !DILocation(line: 226, column: 13, scope: !4470)
!4472 = !DILocation(line: 227, column: 3, scope: !4470)
!4473 = !DILocation(line: 230, column: 29, scope: !4474)
!4474 = distinct !DILexicalBlock(scope: !4453, file: !301, line: 230, column: 6)
!4475 = !DILocation(line: 230, column: 17, scope: !4474)
!4476 = !DILocation(line: 230, column: 6, scope: !4453)
!4477 = !DILocation(line: 231, column: 22, scope: !4478)
!4478 = distinct !DILexicalBlock(scope: !4474, file: !301, line: 230, column: 34)
!4479 = !DILocation(line: 231, column: 3, scope: !4478)
!4480 = !DILocation(line: 231, column: 26, scope: !4478)
!4481 = !DILocation(line: 232, column: 2, scope: !4478)
!4482 = !DILocation(line: 233, column: 28, scope: !4483)
!4483 = distinct !DILexicalBlock(scope: !4474, file: !301, line: 232, column: 9)
!4484 = !DILocation(line: 233, column: 22, scope: !4483)
!4485 = !DILocation(line: 233, column: 3, scope: !4483)
!4486 = !DILocation(line: 233, column: 26, scope: !4483)
!4487 = !DILocation(line: 237, column: 1, scope: !4453)
!4488 = distinct !DISubprogram(name: "z_thread_entry", scope: !4489, file: !4489, line: 30, type: !4490, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2519, retainedNodes: !4492)
!4489 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4490 = !DISubroutineType(types: !4491)
!4491 = !{null, !3364, !107, !107, !107}
!4492 = !{!4493, !4494, !4495, !4496}
!4493 = !DILocalVariable(name: "entry", arg: 1, scope: !4488, file: !4489, line: 30, type: !3364)
!4494 = !DILocalVariable(name: "p1", arg: 2, scope: !4488, file: !4489, line: 31, type: !107)
!4495 = !DILocalVariable(name: "p2", arg: 3, scope: !4488, file: !4489, line: 31, type: !107)
!4496 = !DILocalVariable(name: "p3", arg: 4, scope: !4488, file: !4489, line: 31, type: !107)
!4497 = !DILocation(line: 0, scope: !4488)
!4498 = !DILocation(line: 36, column: 2, scope: !4488)
!4499 = !DILocation(line: 38, column: 17, scope: !4488)
!4500 = !DILocation(line: 38, column: 2, scope: !4488)
!4501 = !DILocation(line: 45, column: 2, scope: !4488)
!4502 = distinct !DISubprogram(name: "k_current_get", scope: !118, file: !118, line: 530, type: !4503, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2519, retainedNodes: !2036)
!4503 = !DISubroutineType(types: !4504)
!4504 = !{!4505}
!4505 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !156, line: 347, baseType: !4506)
!4506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4507, size: 32)
!4507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1280, elements: !4508)
!4508 = !{!4509, !4567, !4579, !4580, !4581, !4582, !4583, !4589, !4604}
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4507, file: !156, line: 247, baseType: !4510, size: 384)
!4510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 384, elements: !4511)
!4511 = !{!4512, !4536, !4543, !4544, !4545, !4554, !4555, !4556}
!4512 = !DIDerivedType(tag: DW_TAG_member, scope: !4510, file: !156, line: 60, baseType: !4513, size: 64)
!4513 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4510, file: !156, line: 60, size: 64, elements: !4514)
!4514 = !{!4515, !4530}
!4515 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !4513, file: !156, line: 61, baseType: !4516, size: 64)
!4516 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !4517)
!4517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !4518)
!4518 = !{!4519, !4525}
!4519 = !DIDerivedType(tag: DW_TAG_member, scope: !4517, file: !127, line: 38, baseType: !4520, size: 32)
!4520 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4517, file: !127, line: 38, size: 32, elements: !4521)
!4521 = !{!4522, !4524}
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4520, file: !127, line: 39, baseType: !4523, size: 32)
!4523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4517, size: 32)
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4520, file: !127, line: 40, baseType: !4523, size: 32)
!4525 = !DIDerivedType(tag: DW_TAG_member, scope: !4517, file: !127, line: 42, baseType: !4526, size: 32, offset: 32)
!4526 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4517, file: !127, line: 42, size: 32, elements: !4527)
!4527 = !{!4528, !4529}
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4526, file: !127, line: 43, baseType: !4523, size: 32)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4526, file: !127, line: 44, baseType: !4523, size: 32)
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !4513, file: !156, line: 62, baseType: !4531, size: 64)
!4531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !4532)
!4532 = !{!4533}
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4531, file: !168, line: 50, baseType: !4534, size: 64)
!4534 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4535, size: 64, elements: !173)
!4535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4531, size: 32)
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !4510, file: !156, line: 68, baseType: !4537, size: 32, offset: 64)
!4537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4538, size: 32)
!4538 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !4539)
!4539 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !4540)
!4540 = !{!4541}
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4539, file: !122, line: 232, baseType: !4542, size: 64)
!4542 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !4517)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !4510, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !4510, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!4545 = !DIDerivedType(tag: DW_TAG_member, scope: !4510, file: !156, line: 90, baseType: !4546, size: 16, offset: 112)
!4546 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4510, file: !156, line: 90, size: 16, elements: !4547)
!4547 = !{!4548, !4553}
!4548 = !DIDerivedType(tag: DW_TAG_member, scope: !4546, file: !156, line: 91, baseType: !4549, size: 16)
!4549 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4546, file: !156, line: 91, size: 16, elements: !4550)
!4550 = !{!4551, !4552}
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4549, file: !156, line: 96, baseType: !188, size: 8)
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4549, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4546, file: !156, line: 100, baseType: !192, size: 16)
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !4510, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !4510, file: !156, line: 127, baseType: !107, size: 32, offset: 160)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4510, file: !156, line: 131, baseType: !4557, size: 192, offset: 192)
!4557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !4558)
!4558 = !{!4559, !4560, !4566}
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4557, file: !122, line: 245, baseType: !4516, size: 64)
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4557, file: !122, line: 246, baseType: !4561, size: 32, offset: 64)
!4561 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !4562)
!4562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4563, size: 32)
!4563 = !DISubroutineType(types: !4564)
!4564 = !{null, !4565}
!4565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4557, size: 32)
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !4557, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !4507, file: !156, line: 250, baseType: !4568, size: 288, offset: 384)
!4568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !4569)
!4569 = !{!4570, !4571, !4572, !4573, !4574, !4575, !4576, !4577, !4578}
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4568, file: !209, line: 26, baseType: !110, size: 32)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4568, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4568, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4568, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4568, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4568, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4568, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4568, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4568, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !4507, file: !156, line: 253, baseType: !107, size: 32, offset: 672)
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !4507, file: !156, line: 256, baseType: !4538, size: 64, offset: 704)
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4507, file: !156, line: 279, baseType: !223, size: 256, offset: 768)
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !4507, file: !156, line: 294, baseType: !109, size: 32, offset: 1024)
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !4507, file: !156, line: 300, baseType: !4584, size: 96, offset: 1056)
!4584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !4585)
!4585 = !{!4586, !4587, !4588}
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4584, file: !156, line: 153, baseType: !22, size: 32)
!4587 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4584, file: !156, line: 162, baseType: !232, size: 32, offset: 32)
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !4584, file: !156, line: 168, baseType: !232, size: 32, offset: 64)
!4589 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !4507, file: !156, line: 325, baseType: !4590, size: 32, offset: 1152)
!4590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4591, size: 32)
!4591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !4592)
!4592 = !{!4593, !4599, !4600}
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4591, file: !118, line: 5074, baseType: !4594, size: 96)
!4594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !241, line: 56, size: 96, elements: !4595)
!4595 = !{!4596, !4597, !4598}
!4596 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4594, file: !241, line: 57, baseType: !244, size: 32)
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4594, file: !241, line: 58, baseType: !107, size: 32, offset: 32)
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4594, file: !241, line: 59, baseType: !232, size: 32, offset: 64)
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4591, file: !118, line: 5075, baseType: !4538, size: 64, offset: 96)
!4600 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4591, file: !118, line: 5076, baseType: !4601, size: 32, offset: 160)
!4601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !4602)
!4602 = !{!4603}
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !4601, file: !251, line: 52, baseType: !22, size: 32)
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4507, file: !156, line: 343, baseType: !4605, size: 64, offset: 1184)
!4605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !209, line: 60, size: 64, elements: !4606)
!4606 = !{!4607, !4608}
!4607 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !4605, file: !209, line: 63, baseType: !110, size: 32)
!4608 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !4605, file: !209, line: 66, baseType: !110, size: 32, offset: 32)
!4609 = !DILocation(line: 535, column: 9, scope: !4502)
!4610 = !DILocation(line: 535, column: 2, scope: !4502)
!4611 = distinct !DISubprogram(name: "k_thread_abort", scope: !3238, file: !3238, line: 188, type: !4612, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2519, retainedNodes: !4614)
!4612 = !DISubroutineType(types: !4613)
!4613 = !{null, !4505}
!4614 = !{!4615}
!4615 = !DILocalVariable(name: "thread", arg: 1, scope: !4611, file: !3238, line: 188, type: !4505)
!4616 = !DILocation(line: 0, scope: !4611)
!4617 = !DILocation(line: 197, column: 2, scope: !4618)
!4618 = distinct !DILexicalBlock(scope: !4611, file: !3238, line: 197, column: 2)
!4619 = !{i64 2154846476}
!4620 = !DILocation(line: 198, column: 2, scope: !4611)
!4621 = !DILocation(line: 199, column: 1, scope: !4611)
!4622 = distinct !DISubprogram(name: "z_current_get", scope: !3238, file: !3238, line: 173, type: !4503, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2519, retainedNodes: !2036)
!4623 = !DILocation(line: 180, column: 2, scope: !4624)
!4624 = distinct !DILexicalBlock(scope: !4622, file: !3238, line: 180, column: 2)
!4625 = !{i64 2154846408}
!4626 = !DILocation(line: 181, column: 9, scope: !4622)
!4627 = !DILocation(line: 181, column: 2, scope: !4622)
!4628 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2525, file: !2525, line: 1338, type: !4629, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2521, retainedNodes: !4637)
!4629 = !DISubroutineType(types: !4630)
!4630 = !{!109, !3782, !107, !279, !4631, !110}
!4631 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3400, line: 99, baseType: !4632)
!4632 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3400, line: 40, baseType: !4633)
!4633 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2525, baseType: !4634)
!4634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4635)
!4635 = !{!4636}
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4634, file: !2525, baseType: !107, size: 32)
!4637 = !{!4638, !4639, !4640, !4641, !4642, !4643, !4647, !4648, !4649, !4651, !4656, !4699, !4702, !4705, !4706, !4707, !4708, !4709, !4710, !4711, !4714, !4715, !4716, !4720, !4723, !4725, !4728, !4729, !4730, !4735, !4741, !4744, !4748, !4754, !4758, !4761, !4763, !4766}
!4638 = !DILocalVariable(name: "out", arg: 1, scope: !4628, file: !2525, line: 1338, type: !3782)
!4639 = !DILocalVariable(name: "ctx", arg: 2, scope: !4628, file: !2525, line: 1338, type: !107)
!4640 = !DILocalVariable(name: "fp", arg: 3, scope: !4628, file: !2525, line: 1338, type: !279)
!4641 = !DILocalVariable(name: "ap", arg: 4, scope: !4628, file: !2525, line: 1339, type: !4631)
!4642 = !DILocalVariable(name: "flags", arg: 5, scope: !4628, file: !2525, line: 1339, type: !110)
!4643 = !DILocalVariable(name: "buf", scope: !4628, file: !2525, line: 1341, type: !4644)
!4644 = !DICompositeType(tag: DW_TAG_array_type, baseType: !148, size: 176, elements: !4645)
!4645 = !{!4646}
!4646 = !DISubrange(count: 22)
!4647 = !DILocalVariable(name: "count", scope: !4628, file: !2525, line: 1342, type: !232)
!4648 = !DILocalVariable(name: "sint", scope: !4628, file: !2525, line: 1343, type: !2544)
!4649 = !DILocalVariable(name: "tagged_ap", scope: !4628, file: !2525, line: 1345, type: !4650)
!4650 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !347)
!4651 = !DILocalVariable(name: "rc", scope: !4652, file: !2525, line: 1377, type: !109)
!4652 = distinct !DILexicalBlock(scope: !4653, file: !2525, line: 1377, column: 4)
!4653 = distinct !DILexicalBlock(scope: !4654, file: !2525, line: 1376, column: 19)
!4654 = distinct !DILexicalBlock(scope: !4655, file: !2525, line: 1376, column: 7)
!4655 = distinct !DILexicalBlock(scope: !4628, file: !2525, line: 1375, column: 19)
!4656 = !DILocalVariable(name: "state", scope: !4655, file: !2525, line: 1395, type: !4657)
!4657 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4628, file: !2525, line: 1392, size: 192, elements: !4658)
!4658 = !{!4659, !4667}
!4659 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4657, file: !2525, line: 1393, baseType: !4660, size: 64)
!4660 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2525, line: 166, size: 64, elements: !4661)
!4661 = !{!4662, !4663, !4664, !4665, !4666}
!4662 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4660, file: !2525, line: 168, baseType: !2544, size: 64)
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4660, file: !2525, line: 171, baseType: !2547, size: 64)
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4660, file: !2525, line: 174, baseType: !277, size: 64)
!4665 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4660, file: !2525, line: 177, baseType: !275, size: 64)
!4666 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4660, file: !2525, line: 180, baseType: !107, size: 32)
!4667 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4657, file: !2525, line: 1394, baseType: !4668, size: 96, offset: 64)
!4668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2525, line: 189, size: 96, elements: !4669)
!4669 = !{!4670, !4671, !4672, !4673, !4674, !4675, !4676, !4677, !4678, !4679, !4680, !4681, !4682, !4683, !4684, !4685, !4686, !4687, !4688, !4689, !4694}
!4670 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4668, file: !2525, line: 191, baseType: !347, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4671 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4668, file: !2525, line: 194, baseType: !347, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4672 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4668, file: !2525, line: 197, baseType: !347, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4673 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4668, file: !2525, line: 200, baseType: !347, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4674 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4668, file: !2525, line: 203, baseType: !347, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4675 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4668, file: !2525, line: 206, baseType: !347, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4676 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4668, file: !2525, line: 209, baseType: !347, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4677 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4668, file: !2525, line: 212, baseType: !347, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4678 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4668, file: !2525, line: 219, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4679 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4668, file: !2525, line: 222, baseType: !347, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4680 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4668, file: !2525, line: 229, baseType: !347, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4681 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4668, file: !2525, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4682 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4668, file: !2525, line: 238, baseType: !347, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4683 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4668, file: !2525, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4684 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4668, file: !2525, line: 244, baseType: !347, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4685 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4668, file: !2525, line: 247, baseType: !347, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4686 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4668, file: !2525, line: 252, baseType: !347, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4687 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4668, file: !2525, line: 257, baseType: !347, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4688 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4668, file: !2525, line: 260, baseType: !179, size: 8, offset: 24)
!4689 = !DIDerivedType(tag: DW_TAG_member, scope: !4668, file: !2525, line: 262, baseType: !4690, size: 32, offset: 32)
!4690 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4668, file: !2525, line: 262, size: 32, elements: !4691)
!4691 = !{!4692, !4693}
!4692 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4690, file: !2525, line: 267, baseType: !109, size: 32)
!4693 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4690, file: !2525, line: 289, baseType: !109, size: 32)
!4694 = !DIDerivedType(tag: DW_TAG_member, scope: !4668, file: !2525, line: 292, baseType: !4695, size: 32, offset: 64)
!4695 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4668, file: !2525, line: 292, size: 32, elements: !4696)
!4696 = !{!4697, !4698}
!4697 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4695, file: !2525, line: 297, baseType: !109, size: 32)
!4698 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4695, file: !2525, line: 306, baseType: !109, size: 32)
!4699 = !DILocalVariable(name: "conv", scope: !4655, file: !2525, line: 1400, type: !4700)
!4700 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4701)
!4701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4668, size: 32)
!4702 = !DILocalVariable(name: "value", scope: !4655, file: !2525, line: 1401, type: !4703)
!4703 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4704)
!4704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4660, size: 32)
!4705 = !DILocalVariable(name: "sp", scope: !4655, file: !2525, line: 1402, type: !279)
!4706 = !DILocalVariable(name: "width", scope: !4655, file: !2525, line: 1403, type: !109)
!4707 = !DILocalVariable(name: "precision", scope: !4655, file: !2525, line: 1404, type: !109)
!4708 = !DILocalVariable(name: "bps", scope: !4655, file: !2525, line: 1405, type: !279)
!4709 = !DILocalVariable(name: "bpe", scope: !4655, file: !2525, line: 1406, type: !279)
!4710 = !DILocalVariable(name: "sign", scope: !4655, file: !2525, line: 1407, type: !148)
!4711 = !DILocalVariable(name: "arg", scope: !4712, file: !2525, line: 1432, type: !109)
!4712 = distinct !DILexicalBlock(scope: !4713, file: !2525, line: 1431, column: 24)
!4713 = distinct !DILexicalBlock(scope: !4655, file: !2525, line: 1431, column: 7)
!4714 = !DILocalVariable(name: "specifier_cat", scope: !4655, file: !2525, line: 1468, type: !2524)
!4715 = !DILocalVariable(name: "length_mod", scope: !4655, file: !2525, line: 1470, type: !2532)
!4716 = !DILocalVariable(name: "rc", scope: !4717, file: !2525, line: 1575, type: !109)
!4717 = distinct !DILexicalBlock(scope: !4718, file: !2525, line: 1575, column: 4)
!4718 = distinct !DILexicalBlock(scope: !4719, file: !2525, line: 1574, column: 43)
!4719 = distinct !DILexicalBlock(scope: !4655, file: !2525, line: 1574, column: 7)
!4720 = !DILocalVariable(name: "rc", scope: !4721, file: !2525, line: 1584, type: !109)
!4721 = distinct !DILexicalBlock(scope: !4722, file: !2525, line: 1584, column: 4)
!4722 = distinct !DILexicalBlock(scope: !4655, file: !2525, line: 1582, column: 28)
!4723 = !DILocalVariable(name: "len", scope: !4724, file: !2525, line: 1589, type: !232)
!4724 = distinct !DILexicalBlock(scope: !4722, file: !2525, line: 1586, column: 13)
!4725 = !DILocalVariable(name: "len", scope: !4726, file: !2525, line: 1641, type: !232)
!4726 = distinct !DILexicalBlock(scope: !4727, file: !2525, line: 1640, column: 24)
!4727 = distinct !DILexicalBlock(scope: !4722, file: !2525, line: 1640, column: 8)
!4728 = !DILocalVariable(name: "nj_len", scope: !4655, file: !2525, line: 1722, type: !232)
!4729 = !DILocalVariable(name: "pad_len", scope: !4655, file: !2525, line: 1723, type: !109)
!4730 = !DILocalVariable(name: "pad", scope: !4731, file: !2525, line: 1751, type: !148)
!4731 = distinct !DILexicalBlock(scope: !4732, file: !2525, line: 1750, column: 26)
!4732 = distinct !DILexicalBlock(scope: !4733, file: !2525, line: 1750, column: 8)
!4733 = distinct !DILexicalBlock(scope: !4734, file: !2525, line: 1747, column: 18)
!4734 = distinct !DILexicalBlock(scope: !4655, file: !2525, line: 1747, column: 7)
!4735 = !DILocalVariable(name: "rc", scope: !4736, file: !2525, line: 1758, type: !109)
!4736 = distinct !DILexicalBlock(scope: !4737, file: !2525, line: 1758, column: 7)
!4737 = distinct !DILexicalBlock(scope: !4738, file: !2525, line: 1757, column: 21)
!4738 = distinct !DILexicalBlock(scope: !4739, file: !2525, line: 1757, column: 10)
!4739 = distinct !DILexicalBlock(scope: !4740, file: !2525, line: 1756, column: 26)
!4740 = distinct !DILexicalBlock(scope: !4731, file: !2525, line: 1756, column: 9)
!4741 = !DILocalVariable(name: "rc", scope: !4742, file: !2525, line: 1765, type: !109)
!4742 = distinct !DILexicalBlock(scope: !4743, file: !2525, line: 1765, column: 6)
!4743 = distinct !DILexicalBlock(scope: !4731, file: !2525, line: 1764, column: 25)
!4744 = !DILocalVariable(name: "rc", scope: !4745, file: !2525, line: 1774, type: !109)
!4745 = distinct !DILexicalBlock(scope: !4746, file: !2525, line: 1774, column: 4)
!4746 = distinct !DILexicalBlock(scope: !4747, file: !2525, line: 1773, column: 18)
!4747 = distinct !DILexicalBlock(scope: !4655, file: !2525, line: 1773, column: 7)
!4748 = !DILocalVariable(name: "rc", scope: !4749, file: !2525, line: 1819, type: !109)
!4749 = distinct !DILexicalBlock(scope: !4750, file: !2525, line: 1819, column: 5)
!4750 = distinct !DILexicalBlock(scope: !4751, file: !2525, line: 1818, column: 44)
!4751 = distinct !DILexicalBlock(scope: !4752, file: !2525, line: 1818, column: 8)
!4752 = distinct !DILexicalBlock(scope: !4753, file: !2525, line: 1817, column: 10)
!4753 = distinct !DILexicalBlock(scope: !4655, file: !2525, line: 1777, column: 7)
!4754 = !DILocalVariable(name: "rc", scope: !4755, file: !2525, line: 1823, type: !109)
!4755 = distinct !DILexicalBlock(scope: !4756, file: !2525, line: 1823, column: 5)
!4756 = distinct !DILexicalBlock(scope: !4757, file: !2525, line: 1822, column: 26)
!4757 = distinct !DILexicalBlock(scope: !4752, file: !2525, line: 1822, column: 8)
!4758 = !DILocalVariable(name: "rc", scope: !4759, file: !2525, line: 1828, type: !109)
!4759 = distinct !DILexicalBlock(scope: !4760, file: !2525, line: 1828, column: 5)
!4760 = distinct !DILexicalBlock(scope: !4752, file: !2525, line: 1827, column: 26)
!4761 = !DILocalVariable(name: "rc", scope: !4762, file: !2525, line: 1831, type: !109)
!4762 = distinct !DILexicalBlock(scope: !4752, file: !2525, line: 1831, column: 4)
!4763 = !DILocalVariable(name: "rc", scope: !4764, file: !2525, line: 1836, type: !109)
!4764 = distinct !DILexicalBlock(scope: !4765, file: !2525, line: 1836, column: 4)
!4765 = distinct !DILexicalBlock(scope: !4655, file: !2525, line: 1835, column: 21)
!4766 = !DILabel(scope: !4722, name: "prec_int_pad0", file: !2525, line: 1634)
!4767 = !DILocation(line: 0, scope: !4628)
!4768 = !DILocation(line: 1341, column: 2, scope: !4628)
!4769 = !DILocation(line: 1341, column: 7, scope: !4628)
!4770 = !DILocation(line: 1375, column: 2, scope: !4628)
!4771 = !DILocation(line: 1342, column: 9, scope: !4628)
!4772 = !DILocation(line: 1375, column: 9, scope: !4628)
!4773 = !DILocation(line: 1377, column: 4, scope: !4652)
!4774 = !DILocation(line: 0, scope: !4652)
!4775 = !DILocation(line: 1377, column: 4, scope: !4776)
!4776 = distinct !DILexicalBlock(scope: !4652, file: !2525, line: 1377, column: 4)
!4777 = distinct !{!4777, !4770, !4778}
!4778 = !DILocation(line: 1839, column: 2, scope: !4628)
!4779 = !DILocation(line: 1392, column: 3, scope: !4655)
!4780 = !DILocation(line: 1395, column: 5, scope: !4655)
!4781 = !DILocation(line: 0, scope: !4655)
!4782 = !DILocation(line: 1409, column: 8, scope: !4655)
!4783 = !DILocation(line: 1414, column: 13, scope: !4784)
!4784 = distinct !DILexicalBlock(scope: !4655, file: !2525, line: 1414, column: 7)
!4785 = !DILocation(line: 1414, column: 7, scope: !4655)
!4786 = !DILocation(line: 1415, column: 12, scope: !4787)
!4787 = distinct !DILexicalBlock(scope: !4784, file: !2525, line: 1414, column: 25)
!4788 = !DILocation(line: 1417, column: 14, scope: !4789)
!4789 = distinct !DILexicalBlock(scope: !4787, file: !2525, line: 1417, column: 8)
!4790 = !DILocation(line: 1417, column: 8, scope: !4787)
!4791 = !DILocation(line: 1418, column: 21, scope: !4792)
!4792 = distinct !DILexicalBlock(scope: !4789, file: !2525, line: 1417, column: 19)
!4793 = !DILocation(line: 1419, column: 13, scope: !4792)
!4794 = !DILocation(line: 1420, column: 4, scope: !4792)
!4795 = !DILocation(line: 1421, column: 20, scope: !4796)
!4796 = distinct !DILexicalBlock(scope: !4784, file: !2525, line: 1421, column: 14)
!4797 = !DILocation(line: 1421, column: 14, scope: !4784)
!4798 = !DILocation(line: 1431, column: 13, scope: !4713)
!4799 = !DILocation(line: 1431, column: 7, scope: !4655)
!4800 = !DILocation(line: 1432, column: 14, scope: !4712)
!4801 = !DILocation(line: 0, scope: !4712)
!4802 = !DILocation(line: 1434, column: 12, scope: !4803)
!4803 = distinct !DILexicalBlock(scope: !4712, file: !2525, line: 1434, column: 8)
!4804 = !DILocation(line: 1434, column: 8, scope: !4712)
!4805 = !DILocation(line: 1435, column: 24, scope: !4806)
!4806 = distinct !DILexicalBlock(scope: !4803, file: !2525, line: 1434, column: 17)
!4807 = !DILocation(line: 1436, column: 4, scope: !4806)
!4808 = !DILocation(line: 1439, column: 20, scope: !4809)
!4809 = distinct !DILexicalBlock(scope: !4713, file: !2525, line: 1439, column: 14)
!4810 = !DILocation(line: 1439, column: 14, scope: !4713)
!4811 = !DILocation(line: 1469, column: 37, scope: !4655)
!4812 = !DILocation(line: 1448, column: 20, scope: !4655)
!4813 = !DILocation(line: 1449, column: 22, scope: !4655)
!4814 = !DILocation(line: 1471, column: 34, scope: !4655)
!4815 = !DILocation(line: 1478, column: 7, scope: !4655)
!4816 = !DILocation(line: 1479, column: 4, scope: !4817)
!4817 = distinct !DILexicalBlock(scope: !4818, file: !2525, line: 1478, column: 40)
!4818 = distinct !DILexicalBlock(scope: !4655, file: !2525, line: 1478, column: 7)
!4819 = !DILocation(line: 1484, column: 19, scope: !4820)
!4820 = distinct !DILexicalBlock(scope: !4817, file: !2525, line: 1479, column: 24)
!4821 = !DILocation(line: 1484, column: 17, scope: !4820)
!4822 = !DILocation(line: 1485, column: 5, scope: !4820)
!4823 = !DILocation(line: 1492, column: 20, scope: !4824)
!4824 = distinct !DILexicalBlock(scope: !4825, file: !2525, line: 1491, column: 12)
!4825 = distinct !DILexicalBlock(scope: !4820, file: !2525, line: 1487, column: 9)
!4826 = !DILocation(line: 1492, column: 18, scope: !4824)
!4827 = !DILocation(line: 1494, column: 5, scope: !4820)
!4828 = !DILocation(line: 1497, column: 23, scope: !4820)
!4829 = !DILocation(line: 1496, column: 17, scope: !4820)
!4830 = !DILocation(line: 1498, column: 5, scope: !4820)
!4831 = !DILocation(line: 1501, column: 23, scope: !4820)
!4832 = !DILocation(line: 1500, column: 17, scope: !4820)
!4833 = !DILocation(line: 1502, column: 5, scope: !4820)
!4834 = !DILocation(line: 1513, column: 23, scope: !4820)
!4835 = !DILocation(line: 1513, column: 6, scope: !4820)
!4836 = !DILocation(line: 1512, column: 17, scope: !4820)
!4837 = !DILocation(line: 1514, column: 5, scope: !4820)
!4838 = !DILocation(line: 0, scope: !4820)
!4839 = !DILocation(line: 1516, column: 8, scope: !4817)
!4840 = !DILocation(line: 1517, column: 19, scope: !4841)
!4841 = distinct !DILexicalBlock(scope: !4842, file: !2525, line: 1516, column: 33)
!4842 = distinct !DILexicalBlock(scope: !4817, file: !2525, line: 1516, column: 8)
!4843 = !DILocation(line: 1517, column: 17, scope: !4841)
!4844 = !DILocation(line: 1518, column: 4, scope: !4841)
!4845 = !DILocation(line: 1519, column: 19, scope: !4846)
!4846 = distinct !DILexicalBlock(scope: !4847, file: !2525, line: 1518, column: 39)
!4847 = distinct !DILexicalBlock(scope: !4842, file: !2525, line: 1518, column: 15)
!4848 = !DILocation(line: 1519, column: 17, scope: !4846)
!4849 = !DILocation(line: 1520, column: 4, scope: !4846)
!4850 = !DILocation(line: 1522, column: 4, scope: !4851)
!4851 = distinct !DILexicalBlock(scope: !4852, file: !2525, line: 1521, column: 47)
!4852 = distinct !DILexicalBlock(scope: !4818, file: !2525, line: 1521, column: 14)
!4853 = !DILocation(line: 1527, column: 19, scope: !4854)
!4854 = distinct !DILexicalBlock(scope: !4851, file: !2525, line: 1522, column: 24)
!4855 = !DILocation(line: 1527, column: 17, scope: !4854)
!4856 = !DILocation(line: 1528, column: 5, scope: !4854)
!4857 = !DILocation(line: 0, scope: !4858)
!4858 = distinct !DILexicalBlock(scope: !4854, file: !2525, line: 1530, column: 9)
!4859 = !DILocation(line: 1540, column: 23, scope: !4854)
!4860 = !DILocation(line: 1539, column: 17, scope: !4854)
!4861 = !DILocation(line: 1542, column: 5, scope: !4854)
!4862 = !DILocation(line: 1545, column: 23, scope: !4854)
!4863 = !DILocation(line: 1544, column: 17, scope: !4854)
!4864 = !DILocation(line: 1547, column: 5, scope: !4854)
!4865 = !DILocation(line: 1551, column: 23, scope: !4854)
!4866 = !DILocation(line: 1551, column: 6, scope: !4854)
!4867 = !DILocation(line: 1550, column: 17, scope: !4854)
!4868 = !DILocation(line: 1552, column: 5, scope: !4854)
!4869 = !DILocation(line: 0, scope: !4854)
!4870 = !DILocation(line: 1554, column: 8, scope: !4851)
!4871 = !DILocation(line: 1555, column: 19, scope: !4872)
!4872 = distinct !DILexicalBlock(scope: !4873, file: !2525, line: 1554, column: 33)
!4873 = distinct !DILexicalBlock(scope: !4851, file: !2525, line: 1554, column: 8)
!4874 = !DILocation(line: 1555, column: 17, scope: !4872)
!4875 = !DILocation(line: 1556, column: 4, scope: !4872)
!4876 = !DILocation(line: 1557, column: 19, scope: !4877)
!4877 = distinct !DILexicalBlock(scope: !4878, file: !2525, line: 1556, column: 39)
!4878 = distinct !DILexicalBlock(scope: !4873, file: !2525, line: 1556, column: 15)
!4879 = !DILocation(line: 1557, column: 17, scope: !4877)
!4880 = !DILocation(line: 1558, column: 4, scope: !4877)
!4881 = !DILocation(line: 0, scope: !4882)
!4882 = distinct !DILexicalBlock(scope: !4883, file: !2525, line: 1560, column: 8)
!4883 = distinct !DILexicalBlock(scope: !4884, file: !2525, line: 1559, column: 45)
!4884 = distinct !DILexicalBlock(scope: !4852, file: !2525, line: 1559, column: 14)
!4885 = !DILocation(line: 1566, column: 17, scope: !4886)
!4886 = distinct !DILexicalBlock(scope: !4887, file: !2525, line: 1565, column: 46)
!4887 = distinct !DILexicalBlock(scope: !4884, file: !2525, line: 1565, column: 14)
!4888 = !DILocation(line: 1566, column: 15, scope: !4886)
!4889 = !DILocation(line: 1567, column: 3, scope: !4886)
!4890 = !DILocation(line: 1574, column: 21, scope: !4719)
!4891 = !DILocation(line: 1575, column: 4, scope: !4717)
!4892 = !DILocation(line: 0, scope: !4717)
!4893 = !DILocation(line: 1575, column: 4, scope: !4894)
!4894 = distinct !DILexicalBlock(scope: !4717, file: !2525, line: 1575, column: 4)
!4895 = !DILocation(line: 1582, column: 17, scope: !4655)
!4896 = !DILocation(line: 1582, column: 3, scope: !4655)
!4897 = !DILocation(line: 1584, column: 4, scope: !4721)
!4898 = !DILocation(line: 0, scope: !4721)
!4899 = !DILocation(line: 1584, column: 4, scope: !4900)
!4900 = distinct !DILexicalBlock(scope: !4721, file: !2525, line: 1584, column: 4)
!4901 = !DILocation(line: 1587, column: 31, scope: !4724)
!4902 = !DILocation(line: 1591, column: 18, scope: !4903)
!4903 = distinct !DILexicalBlock(scope: !4724, file: !2525, line: 1591, column: 8)
!4904 = !DILocation(line: 1591, column: 8, scope: !4724)
!4905 = !DILocation(line: 1592, column: 11, scope: !4906)
!4906 = distinct !DILexicalBlock(scope: !4903, file: !2525, line: 1591, column: 24)
!4907 = !DILocation(line: 0, scope: !4724)
!4908 = !DILocation(line: 1593, column: 4, scope: !4906)
!4909 = !DILocation(line: 1594, column: 11, scope: !4910)
!4910 = distinct !DILexicalBlock(scope: !4903, file: !2525, line: 1593, column: 11)
!4911 = !DILocation(line: 1604, column: 51, scope: !4722)
!4912 = !DILocation(line: 1604, column: 13, scope: !4722)
!4913 = !DILocation(line: 1604, column: 11, scope: !4722)
!4914 = !DILocation(line: 1606, column: 4, scope: !4722)
!4915 = !DILocation(line: 1609, column: 14, scope: !4916)
!4916 = distinct !DILexicalBlock(scope: !4722, file: !2525, line: 1609, column: 8)
!4917 = !DILocation(line: 1609, column: 8, scope: !4722)
!4918 = !DILocation(line: 1619, column: 18, scope: !4722)
!4919 = !DILocation(line: 1620, column: 13, scope: !4920)
!4920 = distinct !DILexicalBlock(scope: !4722, file: !2525, line: 1620, column: 8)
!4921 = !DILocation(line: 1620, column: 8, scope: !4722)
!4922 = !DILocation(line: 1622, column: 36, scope: !4923)
!4923 = distinct !DILexicalBlock(scope: !4920, file: !2525, line: 1620, column: 18)
!4924 = !DILocation(line: 1622, column: 17, scope: !4923)
!4925 = !DILocation(line: 1623, column: 4, scope: !4923)
!4926 = !DILocation(line: 1632, column: 29, scope: !4722)
!4927 = !DILocation(line: 1632, column: 10, scope: !4722)
!4928 = !DILocation(line: 1632, column: 4, scope: !4722)
!4929 = !DILocation(line: 1407, column: 8, scope: !4655)
!4930 = !DILocation(line: 0, scope: !4722)
!4931 = !DILocation(line: 1634, column: 3, scope: !4722)
!4932 = !DILocation(line: 1640, column: 18, scope: !4727)
!4933 = !DILocation(line: 1640, column: 8, scope: !4722)
!4934 = !DILocation(line: 1729, column: 13, scope: !4935)
!4935 = distinct !DILexicalBlock(scope: !4655, file: !2525, line: 1729, column: 7)
!4936 = !DILocation(line: 1641, column: 22, scope: !4726)
!4937 = !DILocation(line: 0, scope: !4726)
!4938 = !DILocation(line: 1646, column: 21, scope: !4726)
!4939 = !DILocation(line: 1649, column: 13, scope: !4940)
!4940 = distinct !DILexicalBlock(scope: !4726, file: !2525, line: 1649, column: 9)
!4941 = !DILocation(line: 1649, column: 9, scope: !4726)
!4942 = !DILocation(line: 1650, column: 35, scope: !4943)
!4943 = distinct !DILexicalBlock(scope: !4940, file: !2525, line: 1649, column: 34)
!4944 = !DILocation(line: 1650, column: 23, scope: !4943)
!4945 = !DILocation(line: 1651, column: 5, scope: !4943)
!4946 = !DILocation(line: 1660, column: 15, scope: !4947)
!4947 = distinct !DILexicalBlock(scope: !4722, file: !2525, line: 1660, column: 8)
!4948 = !DILocation(line: 1660, column: 19, scope: !4947)
!4949 = !DILocation(line: 1660, column: 8, scope: !4722)
!4950 = !DILocation(line: 1661, column: 23, scope: !4951)
!4951 = distinct !DILexicalBlock(scope: !4947, file: !2525, line: 1660, column: 28)
!4952 = !DILocation(line: 1661, column: 11, scope: !4951)
!4953 = !DILocation(line: 1665, column: 22, scope: !4951)
!4954 = !DILocation(line: 1666, column: 21, scope: !4951)
!4955 = !DILocation(line: 1668, column: 5, scope: !4951)
!4956 = !DILocation(line: 1677, column: 30, scope: !4957)
!4957 = distinct !DILexicalBlock(scope: !4958, file: !2525, line: 1676, column: 49)
!4958 = distinct !DILexicalBlock(scope: !4722, file: !2525, line: 1676, column: 8)
!4959 = !DILocation(line: 1677, column: 5, scope: !4957)
!4960 = !DILocation(line: 1680, column: 4, scope: !4722)
!4961 = !DILocation(line: 0, scope: !4903)
!4962 = !DILocation(line: 1597, column: 14, scope: !4724)
!4963 = !DILocation(line: 1699, column: 11, scope: !4964)
!4964 = distinct !DILexicalBlock(scope: !4655, file: !2525, line: 1699, column: 7)
!4965 = !DILocation(line: 1699, column: 7, scope: !4655)
!4966 = !DILocation(line: 1725, column: 7, scope: !4967)
!4967 = distinct !DILexicalBlock(scope: !4655, file: !2525, line: 1725, column: 7)
!4968 = !DILocation(line: 1725, column: 12, scope: !4967)
!4969 = !DILocation(line: 1747, column: 13, scope: !4734)
!4970 = !DILocation(line: 1747, column: 7, scope: !4655)
!4971 = !DILocation(line: 1722, column: 24, scope: !4655)
!4972 = !DILocation(line: 1725, column: 7, scope: !4655)
!4973 = !DILocation(line: 1729, column: 7, scope: !4655)
!4974 = !DILocation(line: 1736, column: 13, scope: !4975)
!4975 = distinct !DILexicalBlock(scope: !4655, file: !2525, line: 1736, column: 7)
!4976 = !DILocation(line: 1735, column: 19, scope: !4655)
!4977 = !DILocation(line: 1736, column: 7, scope: !4655)
!4978 = !DILocation(line: 1748, column: 10, scope: !4733)
!4979 = !DILocation(line: 1750, column: 15, scope: !4732)
!4980 = !DILocation(line: 1750, column: 8, scope: !4733)
!4981 = !DILocation(line: 0, scope: !4731)
!4982 = !DILocation(line: 1756, column: 15, scope: !4740)
!4983 = !DILocation(line: 1756, column: 9, scope: !4731)
!4984 = !DILocation(line: 1758, column: 7, scope: !4736)
!4985 = !DILocation(line: 0, scope: !4736)
!4986 = !DILocation(line: 1758, column: 7, scope: !4987)
!4987 = distinct !DILexicalBlock(scope: !4736, file: !2525, line: 1758, column: 7)
!4988 = !DILocation(line: 1764, column: 5, scope: !4731)
!4989 = !DILocation(line: 0, scope: !4733)
!4990 = !DILocation(line: 1764, column: 20, scope: !4731)
!4991 = !DILocation(line: 1764, column: 17, scope: !4731)
!4992 = !DILocation(line: 1765, column: 6, scope: !4742)
!4993 = !DILocation(line: 0, scope: !4742)
!4994 = !DILocation(line: 1765, column: 6, scope: !4995)
!4995 = distinct !DILexicalBlock(scope: !4742, file: !2525, line: 1765, column: 6)
!4996 = distinct !{!4996, !4988, !4997}
!4997 = !DILocation(line: 1766, column: 5, scope: !4731)
!4998 = !DILocation(line: 1773, column: 12, scope: !4747)
!4999 = !DILocation(line: 1773, column: 7, scope: !4655)
!5000 = !DILocation(line: 1773, column: 7, scope: !4747)
!5001 = !DILocation(line: 1774, column: 4, scope: !4745)
!5002 = !DILocation(line: 0, scope: !4745)
!5003 = !DILocation(line: 1774, column: 4, scope: !5004)
!5004 = distinct !DILexicalBlock(scope: !4745, file: !2525, line: 1774, column: 4)
!5005 = !DILocation(line: 1818, column: 8, scope: !4751)
!5006 = !DILocation(line: 1818, column: 27, scope: !4751)
!5007 = !DILocation(line: 1818, column: 25, scope: !4751)
!5008 = !DILocation(line: 1818, column: 8, scope: !4752)
!5009 = !DILocation(line: 1819, column: 5, scope: !4749)
!5010 = !DILocation(line: 0, scope: !4749)
!5011 = !DILocation(line: 1819, column: 5, scope: !5012)
!5012 = distinct !DILexicalBlock(scope: !4749, file: !2525, line: 1819, column: 5)
!5013 = !DILocation(line: 1822, column: 14, scope: !4757)
!5014 = !DILocation(line: 1822, column: 8, scope: !4752)
!5015 = !DILocation(line: 1823, column: 5, scope: !4755)
!5016 = !DILocation(line: 0, scope: !4755)
!5017 = !DILocation(line: 1823, column: 5, scope: !5018)
!5018 = distinct !DILexicalBlock(scope: !4755, file: !2525, line: 1823, column: 5)
!5019 = !DILocation(line: 1826, column: 20, scope: !4752)
!5020 = !DILocation(line: 1827, column: 4, scope: !4752)
!5021 = !DILocation(line: 0, scope: !4752)
!5022 = !DILocation(line: 1827, column: 21, scope: !4752)
!5023 = !DILocation(line: 1827, column: 18, scope: !4752)
!5024 = !DILocation(line: 1828, column: 5, scope: !4759)
!5025 = !DILocation(line: 0, scope: !4759)
!5026 = !DILocation(line: 1828, column: 5, scope: !5027)
!5027 = distinct !DILexicalBlock(scope: !4759, file: !2525, line: 1828, column: 5)
!5028 = distinct !{!5028, !5020, !5029}
!5029 = !DILocation(line: 1829, column: 4, scope: !4752)
!5030 = !DILocation(line: 1831, column: 4, scope: !4762)
!5031 = !DILocation(line: 0, scope: !4762)
!5032 = !DILocation(line: 1831, column: 4, scope: !5033)
!5033 = distinct !DILexicalBlock(scope: !4762, file: !2525, line: 1831, column: 4)
!5034 = !DILocation(line: 1835, column: 16, scope: !4655)
!5035 = !DILocation(line: 1835, column: 3, scope: !4655)
!5036 = !DILocation(line: 1836, column: 4, scope: !4764)
!5037 = !DILocation(line: 0, scope: !4764)
!5038 = !DILocation(line: 1836, column: 4, scope: !5039)
!5039 = distinct !DILexicalBlock(scope: !4764, file: !2525, line: 1836, column: 4)
!5040 = !DILocation(line: 1837, column: 4, scope: !4765)
!5041 = distinct !{!5041, !5035, !5042}
!5042 = !DILocation(line: 1838, column: 3, scope: !4655)
!5043 = !DILocation(line: 1844, column: 1, scope: !4628)
!5044 = distinct !DISubprogram(name: "extract_conversion", scope: !2525, file: !2525, line: 642, type: !5045, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2521, retainedNodes: !5047)
!5045 = !DISubroutineType(types: !5046)
!5046 = !{!279, !4701, !279}
!5047 = !{!5048, !5049}
!5048 = !DILocalVariable(name: "conv", arg: 1, scope: !5044, file: !2525, line: 642, type: !4701)
!5049 = !DILocalVariable(name: "sp", arg: 2, scope: !5044, file: !2525, line: 643, type: !279)
!5050 = !DILocation(line: 0, scope: !5044)
!5051 = !DILocation(line: 645, column: 10, scope: !5044)
!5052 = !DILocation(line: 653, column: 2, scope: !5044)
!5053 = !DILocation(line: 654, column: 6, scope: !5054)
!5054 = distinct !DILexicalBlock(scope: !5044, file: !2525, line: 654, column: 6)
!5055 = !DILocation(line: 654, column: 10, scope: !5054)
!5056 = !DILocation(line: 654, column: 6, scope: !5044)
!5057 = !DILocation(line: 655, column: 24, scope: !5058)
!5058 = distinct !DILexicalBlock(scope: !5054, file: !2525, line: 654, column: 18)
!5059 = !DILocation(line: 655, column: 19, scope: !5058)
!5060 = !DILocation(line: 656, column: 3, scope: !5058)
!5061 = !DILocation(line: 659, column: 7, scope: !5044)
!5062 = !DILocation(line: 660, column: 7, scope: !5044)
!5063 = !DILocation(line: 661, column: 7, scope: !5044)
!5064 = !DILocation(line: 662, column: 7, scope: !5044)
!5065 = !DILocation(line: 663, column: 7, scope: !5044)
!5066 = !DILocation(line: 665, column: 2, scope: !5044)
!5067 = !DILocation(line: 666, column: 1, scope: !5044)
!5068 = distinct !DISubprogram(name: "outs", scope: !2525, file: !2525, line: 1319, type: !5069, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2521, retainedNodes: !5071)
!5069 = !DISubroutineType(types: !5070)
!5070 = !{!109, !3782, !107, !279, !279}
!5071 = !{!5072, !5073, !5074, !5075, !5076, !5077}
!5072 = !DILocalVariable(name: "out", arg: 1, scope: !5068, file: !2525, line: 1319, type: !3782)
!5073 = !DILocalVariable(name: "ctx", arg: 2, scope: !5068, file: !2525, line: 1320, type: !107)
!5074 = !DILocalVariable(name: "sp", arg: 3, scope: !5068, file: !2525, line: 1321, type: !279)
!5075 = !DILocalVariable(name: "ep", arg: 4, scope: !5068, file: !2525, line: 1322, type: !279)
!5076 = !DILocalVariable(name: "count", scope: !5068, file: !2525, line: 1324, type: !232)
!5077 = !DILocalVariable(name: "rc", scope: !5078, file: !2525, line: 1327, type: !109)
!5078 = distinct !DILexicalBlock(scope: !5068, file: !2525, line: 1326, column: 45)
!5079 = !DILocation(line: 0, scope: !5068)
!5080 = !DILocation(line: 1326, column: 2, scope: !5068)
!5081 = !DILocation(line: 1324, column: 9, scope: !5068)
!5082 = !DILocation(line: 1326, column: 13, scope: !5068)
!5083 = !DILocation(line: 1326, column: 19, scope: !5068)
!5084 = !DILocation(line: 1327, column: 21, scope: !5078)
!5085 = !DILocation(line: 1326, column: 36, scope: !5068)
!5086 = !DILocation(line: 1326, column: 39, scope: !5068)
!5087 = !DILocation(line: 1327, column: 24, scope: !5078)
!5088 = !DILocation(line: 1327, column: 16, scope: !5078)
!5089 = !DILocation(line: 1327, column: 12, scope: !5078)
!5090 = !DILocation(line: 0, scope: !5078)
!5091 = !DILocation(line: 1329, column: 10, scope: !5092)
!5092 = distinct !DILexicalBlock(scope: !5078, file: !2525, line: 1329, column: 7)
!5093 = !DILocation(line: 1329, column: 7, scope: !5078)
!5094 = distinct !{!5094, !5080, !5095}
!5095 = !DILocation(line: 1333, column: 2, scope: !5068)
!5096 = !DILocation(line: 1336, column: 1, scope: !5068)
!5097 = distinct !DISubprogram(name: "encode_uint", scope: !2525, file: !2525, line: 788, type: !5098, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2521, retainedNodes: !5100)
!5098 = !DISubroutineType(types: !5099)
!5099 = !{!285, !2547, !4701, !285, !279}
!5100 = !{!5101, !5102, !5103, !5104, !5105, !5106, !5108, !5109}
!5101 = !DILocalVariable(name: "value", arg: 1, scope: !5097, file: !2525, line: 788, type: !2547)
!5102 = !DILocalVariable(name: "conv", arg: 2, scope: !5097, file: !2525, line: 789, type: !4701)
!5103 = !DILocalVariable(name: "bps", arg: 3, scope: !5097, file: !2525, line: 790, type: !285)
!5104 = !DILocalVariable(name: "bpe", arg: 4, scope: !5097, file: !2525, line: 791, type: !279)
!5105 = !DILocalVariable(name: "upcase", scope: !5097, file: !2525, line: 793, type: !347)
!5106 = !DILocalVariable(name: "radix", scope: !5097, file: !2525, line: 794, type: !5107)
!5107 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!5108 = !DILocalVariable(name: "bp", scope: !5097, file: !2525, line: 795, type: !285)
!5109 = !DILocalVariable(name: "lsv", scope: !5110, file: !2525, line: 798, type: !32)
!5110 = distinct !DILexicalBlock(scope: !5097, file: !2525, line: 797, column: 5)
!5111 = !DILocation(line: 0, scope: !5097)
!5112 = !DILocation(line: 793, column: 35, scope: !5097)
!5113 = !DILocation(line: 793, column: 24, scope: !5097)
!5114 = !DILocation(line: 793, column: 16, scope: !5097)
!5115 = !DILocation(line: 794, column: 29, scope: !5097)
!5116 = !DILocation(line: 795, column: 24, scope: !5097)
!5117 = !DILocation(line: 795, column: 17, scope: !5097)
!5118 = !DILocation(line: 797, column: 2, scope: !5097)
!5119 = !DILocation(line: 802, column: 9, scope: !5110)
!5120 = !DILocation(line: 798, column: 22, scope: !5110)
!5121 = !DILocation(line: 0, scope: !5110)
!5122 = !DILocation(line: 800, column: 16, scope: !5110)
!5123 = !DILocation(line: 800, column: 11, scope: !5110)
!5124 = !DILocation(line: 800, column: 4, scope: !5110)
!5125 = !DILocation(line: 800, column: 9, scope: !5110)
!5126 = !DILocation(line: 803, column: 18, scope: !5097)
!5127 = !DILocation(line: 803, column: 24, scope: !5097)
!5128 = !DILocation(line: 803, column: 2, scope: !5110)
!5129 = distinct !{!5129, !5118, !5130}
!5130 = !DILocation(line: 803, column: 37, scope: !5097)
!5131 = !DILocation(line: 808, column: 12, scope: !5132)
!5132 = distinct !DILexicalBlock(scope: !5097, file: !2525, line: 808, column: 6)
!5133 = !DILocation(line: 808, column: 6, scope: !5097)
!5134 = !DILocation(line: 809, column: 7, scope: !5135)
!5135 = distinct !DILexicalBlock(scope: !5132, file: !2525, line: 808, column: 23)
!5136 = !DILocation(line: 813, column: 3, scope: !5137)
!5137 = distinct !DILexicalBlock(scope: !5138, file: !2525, line: 811, column: 27)
!5138 = distinct !DILexicalBlock(scope: !5139, file: !2525, line: 811, column: 14)
!5139 = distinct !DILexicalBlock(scope: !5135, file: !2525, line: 809, column: 7)
!5140 = !DILocation(line: 0, scope: !5139)
!5141 = !DILocation(line: 818, column: 2, scope: !5097)
!5142 = distinct !DISubprogram(name: "store_count", scope: !2525, file: !2525, line: 1280, type: !5143, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2521, retainedNodes: !5147)
!5143 = !DISubroutineType(types: !5144)
!5144 = !{null, !5145, !107, !109}
!5145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5146, size: 32)
!5146 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4668)
!5147 = !{!5148, !5149, !5150}
!5148 = !DILocalVariable(name: "conv", arg: 1, scope: !5142, file: !2525, line: 1280, type: !5145)
!5149 = !DILocalVariable(name: "dp", arg: 2, scope: !5142, file: !2525, line: 1281, type: !107)
!5150 = !DILocalVariable(name: "count", arg: 3, scope: !5142, file: !2525, line: 1282, type: !109)
!5151 = !DILocation(line: 0, scope: !5142)
!5152 = !DILocation(line: 1284, column: 38, scope: !5142)
!5153 = !DILocation(line: 1284, column: 2, scope: !5142)
!5154 = !DILocation(line: 1286, column: 4, scope: !5155)
!5155 = distinct !DILexicalBlock(scope: !5142, file: !2525, line: 1284, column: 50)
!5156 = !DILocation(line: 1286, column: 14, scope: !5155)
!5157 = !DILocation(line: 1287, column: 3, scope: !5155)
!5158 = !DILocation(line: 1289, column: 24, scope: !5155)
!5159 = !DILocation(line: 1289, column: 22, scope: !5155)
!5160 = !DILocation(line: 1290, column: 3, scope: !5155)
!5161 = !DILocation(line: 1292, column: 18, scope: !5155)
!5162 = !DILocation(line: 1292, column: 4, scope: !5155)
!5163 = !DILocation(line: 1292, column: 16, scope: !5155)
!5164 = !DILocation(line: 1293, column: 3, scope: !5155)
!5165 = !DILocation(line: 1295, column: 4, scope: !5155)
!5166 = !DILocation(line: 1295, column: 15, scope: !5155)
!5167 = !DILocation(line: 1296, column: 3, scope: !5155)
!5168 = !DILocation(line: 1298, column: 22, scope: !5155)
!5169 = !DILocation(line: 1298, column: 4, scope: !5155)
!5170 = !DILocation(line: 1298, column: 20, scope: !5155)
!5171 = !DILocation(line: 1299, column: 3, scope: !5155)
!5172 = !DILocation(line: 1301, column: 21, scope: !5155)
!5173 = !DILocation(line: 1301, column: 4, scope: !5155)
!5174 = !DILocation(line: 1301, column: 19, scope: !5155)
!5175 = !DILocation(line: 1302, column: 3, scope: !5155)
!5176 = !DILocation(line: 1304, column: 4, scope: !5155)
!5177 = !DILocation(line: 1304, column: 17, scope: !5155)
!5178 = !DILocation(line: 1305, column: 3, scope: !5155)
!5179 = !DILocation(line: 1307, column: 4, scope: !5155)
!5180 = !DILocation(line: 1307, column: 20, scope: !5155)
!5181 = !DILocation(line: 1308, column: 3, scope: !5155)
!5182 = !DILocation(line: 1316, column: 1, scope: !5142)
!5183 = distinct !DISubprogram(name: "isupper", scope: !5184, file: !5184, line: 16, type: !303, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2521, retainedNodes: !5185)
!5184 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5185 = !{!5186}
!5186 = !DILocalVariable(name: "a", arg: 1, scope: !5183, file: !5184, line: 16, type: !109)
!5187 = !DILocation(line: 0, scope: !5183)
!5188 = !DILocation(line: 18, column: 29, scope: !5183)
!5189 = !DILocation(line: 18, column: 45, scope: !5183)
!5190 = !DILocation(line: 18, column: 2, scope: !5183)
!5191 = distinct !DISubprogram(name: "conversion_radix", scope: !2525, file: !2525, line: 761, type: !5192, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2521, retainedNodes: !5194)
!5192 = !DISubroutineType(types: !5193)
!5193 = !{!232, !148}
!5194 = !{!5195}
!5195 = !DILocalVariable(name: "specifier", arg: 1, scope: !5191, file: !2525, line: 761, type: !148)
!5196 = !DILocation(line: 0, scope: !5191)
!5197 = !DILocation(line: 763, column: 2, scope: !5191)
!5198 = !DILocation(line: 770, column: 3, scope: !5199)
!5199 = distinct !DILexicalBlock(scope: !5191, file: !2525, line: 763, column: 21)
!5200 = !DILocation(line: 774, column: 3, scope: !5199)
!5201 = !DILocation(line: 0, scope: !5199)
!5202 = !DILocation(line: 776, column: 1, scope: !5191)
!5203 = distinct !DISubprogram(name: "extract_flags", scope: !2525, file: !2525, line: 339, type: !5045, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2521, retainedNodes: !5204)
!5204 = !{!5205, !5206, !5207}
!5205 = !DILocalVariable(name: "conv", arg: 1, scope: !5203, file: !2525, line: 339, type: !4701)
!5206 = !DILocalVariable(name: "sp", arg: 2, scope: !5203, file: !2525, line: 340, type: !279)
!5207 = !DILocalVariable(name: "loop", scope: !5203, file: !2525, line: 342, type: !347)
!5208 = !DILocation(line: 0, scope: !5203)
!5209 = !DILocation(line: 344, column: 2, scope: !5203)
!5210 = !DILocation(line: 345, column: 11, scope: !5211)
!5211 = distinct !DILexicalBlock(scope: !5203, file: !2525, line: 344, column: 5)
!5212 = !DILocation(line: 345, column: 3, scope: !5211)
!5213 = !DILocation(line: 351, column: 4, scope: !5214)
!5214 = distinct !DILexicalBlock(scope: !5211, file: !2525, line: 345, column: 16)
!5215 = !DILocation(line: 354, column: 4, scope: !5214)
!5216 = !DILocation(line: 357, column: 4, scope: !5214)
!5217 = !DILocation(line: 360, column: 4, scope: !5214)
!5218 = !DILocation(line: 0, scope: !5214)
!5219 = !DILocation(line: 370, column: 12, scope: !5220)
!5220 = distinct !DILexicalBlock(scope: !5203, file: !2525, line: 370, column: 6)
!5221 = !DILocation(line: 370, column: 22, scope: !5220)
!5222 = !DILocation(line: 371, column: 19, scope: !5223)
!5223 = distinct !DILexicalBlock(scope: !5220, file: !2525, line: 370, column: 42)
!5224 = !DILocation(line: 372, column: 2, scope: !5223)
!5225 = !DILocation(line: 376, column: 2, scope: !5203)
!5226 = distinct !DISubprogram(name: "extract_width", scope: !2525, file: !2525, line: 388, type: !5045, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2521, retainedNodes: !5227)
!5227 = !{!5228, !5229, !5230, !5231}
!5228 = !DILocalVariable(name: "conv", arg: 1, scope: !5226, file: !2525, line: 388, type: !4701)
!5229 = !DILocalVariable(name: "sp", arg: 2, scope: !5226, file: !2525, line: 389, type: !279)
!5230 = !DILocalVariable(name: "wp", scope: !5226, file: !2525, line: 398, type: !279)
!5231 = !DILocalVariable(name: "width", scope: !5226, file: !2525, line: 399, type: !232)
!5232 = !DILocation(line: 0, scope: !5226)
!5233 = !DILocation(line: 391, column: 8, scope: !5226)
!5234 = !DILocation(line: 391, column: 22, scope: !5226)
!5235 = !DILocation(line: 393, column: 6, scope: !5236)
!5236 = distinct !DILexicalBlock(scope: !5226, file: !2525, line: 393, column: 6)
!5237 = !DILocation(line: 393, column: 10, scope: !5236)
!5238 = !DILocation(line: 393, column: 6, scope: !5226)
!5239 = !DILocation(line: 394, column: 20, scope: !5240)
!5240 = distinct !DILexicalBlock(scope: !5236, file: !2525, line: 393, column: 18)
!5241 = !DILocation(line: 395, column: 10, scope: !5240)
!5242 = !DILocation(line: 395, column: 3, scope: !5240)
!5243 = !DILocation(line: 399, column: 17, scope: !5226)
!5244 = !DILocation(line: 401, column: 6, scope: !5245)
!5245 = distinct !DILexicalBlock(scope: !5226, file: !2525, line: 401, column: 6)
!5246 = !DILocation(line: 401, column: 9, scope: !5245)
!5247 = !DILocation(line: 401, column: 6, scope: !5226)
!5248 = !DILocation(line: 402, column: 23, scope: !5249)
!5249 = distinct !DILexicalBlock(scope: !5245, file: !2525, line: 401, column: 16)
!5250 = !DILocation(line: 403, column: 9, scope: !5249)
!5251 = !DILocation(line: 403, column: 21, scope: !5249)
!5252 = !DILocation(line: 405, column: 11, scope: !5249)
!5253 = !DILocation(line: 404, column: 21, scope: !5249)
!5254 = !DILocation(line: 406, column: 2, scope: !5249)
!5255 = !DILocation(line: 409, column: 1, scope: !5226)
!5256 = distinct !DISubprogram(name: "extract_prec", scope: !2525, file: !2525, line: 420, type: !5045, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2521, retainedNodes: !5257)
!5257 = !{!5258, !5259, !5260}
!5258 = !DILocalVariable(name: "conv", arg: 1, scope: !5256, file: !2525, line: 420, type: !4701)
!5259 = !DILocalVariable(name: "sp", arg: 2, scope: !5256, file: !2525, line: 421, type: !279)
!5260 = !DILocalVariable(name: "prec", scope: !5256, file: !2525, line: 435, type: !232)
!5261 = !DILocation(line: 0, scope: !5256)
!5262 = !DILocation(line: 423, column: 24, scope: !5256)
!5263 = !DILocation(line: 423, column: 28, scope: !5256)
!5264 = !DILocation(line: 423, column: 8, scope: !5256)
!5265 = !DILocation(line: 423, column: 21, scope: !5256)
!5266 = !DILocation(line: 425, column: 6, scope: !5256)
!5267 = !DILocation(line: 428, column: 2, scope: !5256)
!5268 = !DILocation(line: 430, column: 6, scope: !5269)
!5269 = distinct !DILexicalBlock(scope: !5256, file: !2525, line: 430, column: 6)
!5270 = !DILocation(line: 430, column: 10, scope: !5269)
!5271 = !DILocation(line: 430, column: 6, scope: !5256)
!5272 = !DILocation(line: 431, column: 19, scope: !5273)
!5273 = distinct !DILexicalBlock(scope: !5269, file: !2525, line: 430, column: 18)
!5274 = !DILocation(line: 432, column: 10, scope: !5273)
!5275 = !DILocation(line: 432, column: 3, scope: !5273)
!5276 = !DILocation(line: 435, column: 16, scope: !5256)
!5277 = !DILocation(line: 437, column: 8, scope: !5256)
!5278 = !DILocation(line: 437, column: 19, scope: !5256)
!5279 = !DILocation(line: 439, column: 10, scope: !5256)
!5280 = !DILocation(line: 438, column: 20, scope: !5256)
!5281 = !DILocation(line: 441, column: 9, scope: !5256)
!5282 = !DILocation(line: 442, column: 1, scope: !5256)
!5283 = distinct !DISubprogram(name: "extract_length", scope: !2525, file: !2525, line: 453, type: !5045, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2521, retainedNodes: !5284)
!5284 = !{!5285, !5286}
!5285 = !DILocalVariable(name: "conv", arg: 1, scope: !5283, file: !2525, line: 453, type: !4701)
!5286 = !DILocalVariable(name: "sp", arg: 2, scope: !5283, file: !2525, line: 454, type: !279)
!5287 = !DILocation(line: 0, scope: !5283)
!5288 = !DILocation(line: 456, column: 10, scope: !5283)
!5289 = !DILocation(line: 456, column: 2, scope: !5283)
!5290 = !DILocation(line: 458, column: 8, scope: !5291)
!5291 = distinct !DILexicalBlock(scope: !5292, file: !2525, line: 458, column: 7)
!5292 = distinct !DILexicalBlock(scope: !5283, file: !2525, line: 456, column: 15)
!5293 = !DILocation(line: 458, column: 7, scope: !5291)
!5294 = !DILocation(line: 458, column: 13, scope: !5291)
!5295 = !DILocation(line: 0, scope: !5291)
!5296 = !DILocation(line: 458, column: 7, scope: !5292)
!5297 = !DILocation(line: 459, column: 21, scope: !5298)
!5298 = distinct !DILexicalBlock(scope: !5291, file: !2525, line: 458, column: 21)
!5299 = !DILocation(line: 460, column: 4, scope: !5298)
!5300 = !DILocation(line: 461, column: 3, scope: !5298)
!5301 = !DILocation(line: 462, column: 21, scope: !5302)
!5302 = distinct !DILexicalBlock(scope: !5291, file: !2525, line: 461, column: 10)
!5303 = !DILocation(line: 466, column: 8, scope: !5304)
!5304 = distinct !DILexicalBlock(scope: !5292, file: !2525, line: 466, column: 7)
!5305 = !DILocation(line: 466, column: 7, scope: !5304)
!5306 = !DILocation(line: 466, column: 13, scope: !5304)
!5307 = !DILocation(line: 0, scope: !5304)
!5308 = !DILocation(line: 466, column: 7, scope: !5292)
!5309 = !DILocation(line: 467, column: 21, scope: !5310)
!5310 = distinct !DILexicalBlock(scope: !5304, file: !2525, line: 466, column: 21)
!5311 = !DILocation(line: 468, column: 4, scope: !5310)
!5312 = !DILocation(line: 469, column: 3, scope: !5310)
!5313 = !DILocation(line: 470, column: 21, scope: !5314)
!5314 = distinct !DILexicalBlock(scope: !5304, file: !2525, line: 469, column: 10)
!5315 = !DILocation(line: 474, column: 9, scope: !5292)
!5316 = !DILocation(line: 474, column: 20, scope: !5292)
!5317 = !DILocation(line: 475, column: 3, scope: !5292)
!5318 = !DILocation(line: 476, column: 3, scope: !5292)
!5319 = !DILocation(line: 478, column: 9, scope: !5292)
!5320 = !DILocation(line: 478, column: 20, scope: !5292)
!5321 = !DILocation(line: 479, column: 3, scope: !5292)
!5322 = !DILocation(line: 480, column: 3, scope: !5292)
!5323 = !DILocation(line: 482, column: 9, scope: !5292)
!5324 = !DILocation(line: 482, column: 20, scope: !5292)
!5325 = !DILocation(line: 483, column: 3, scope: !5292)
!5326 = !DILocation(line: 484, column: 3, scope: !5292)
!5327 = !DILocation(line: 486, column: 9, scope: !5292)
!5328 = !DILocation(line: 486, column: 20, scope: !5292)
!5329 = !DILocation(line: 487, column: 3, scope: !5292)
!5330 = !DILocation(line: 492, column: 21, scope: !5292)
!5331 = !DILocation(line: 493, column: 3, scope: !5292)
!5332 = !DILocation(line: 495, column: 9, scope: !5292)
!5333 = !DILocation(line: 495, column: 20, scope: !5292)
!5334 = !DILocation(line: 496, column: 3, scope: !5292)
!5335 = !DILocation(line: 498, column: 2, scope: !5283)
!5336 = distinct !DISubprogram(name: "extract_specifier", scope: !2525, file: !2525, line: 513, type: !5045, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2521, retainedNodes: !5337)
!5337 = !{!5338, !5339, !5340, !5341}
!5338 = !DILocalVariable(name: "conv", arg: 1, scope: !5336, file: !2525, line: 513, type: !4701)
!5339 = !DILocalVariable(name: "sp", arg: 2, scope: !5336, file: !2525, line: 514, type: !279)
!5340 = !DILocalVariable(name: "unsupported", scope: !5336, file: !2525, line: 516, type: !347)
!5341 = !DILabel(scope: !5342, name: "int_conv", file: !2525, line: 526)
!5342 = distinct !DILexicalBlock(scope: !5336, file: !2525, line: 520, column: 27)
!5343 = !DILocation(line: 0, scope: !5336)
!5344 = !DILocation(line: 518, column: 20, scope: !5336)
!5345 = !DILocation(line: 518, column: 8, scope: !5336)
!5346 = !DILocation(line: 518, column: 18, scope: !5336)
!5347 = !DILocation(line: 520, column: 2, scope: !5336)
!5348 = !DILocation(line: 525, column: 3, scope: !5342)
!5349 = !DILocation(line: 0, scope: !5342)
!5350 = !DILocation(line: 526, column: 1, scope: !5342)
!5351 = !DILocation(line: 528, column: 24, scope: !5352)
!5352 = distinct !DILexicalBlock(scope: !5342, file: !2525, line: 528, column: 7)
!5353 = !DILocation(line: 528, column: 7, scope: !5342)
!5354 = !DILocation(line: 535, column: 23, scope: !5355)
!5355 = distinct !DILexicalBlock(scope: !5342, file: !2525, line: 535, column: 7)
!5356 = !DILocation(line: 535, column: 7, scope: !5342)
!5357 = !DILocation(line: 536, column: 36, scope: !5358)
!5358 = distinct !DILexicalBlock(scope: !5355, file: !2525, line: 535, column: 31)
!5359 = !DILocation(line: 537, column: 3, scope: !5358)
!5360 = !DILocation(line: 570, column: 9, scope: !5342)
!5361 = !DILocation(line: 570, column: 23, scope: !5342)
!5362 = !DILocation(line: 575, column: 4, scope: !5363)
!5363 = distinct !DILexicalBlock(scope: !5364, file: !2525, line: 573, column: 48)
!5364 = distinct !DILexicalBlock(scope: !5342, file: !2525, line: 573, column: 7)
!5365 = !DILocation(line: 603, column: 9, scope: !5342)
!5366 = !DILocation(line: 603, column: 23, scope: !5342)
!5367 = !DILocation(line: 605, column: 24, scope: !5368)
!5368 = distinct !DILexicalBlock(scope: !5342, file: !2525, line: 605, column: 7)
!5369 = !DILocation(line: 605, column: 7, scope: !5342)
!5370 = !DILocation(line: 612, column: 9, scope: !5342)
!5371 = !DILocation(line: 612, column: 23, scope: !5342)
!5372 = !DILocation(line: 619, column: 24, scope: !5373)
!5373 = distinct !DILexicalBlock(scope: !5342, file: !2525, line: 619, column: 7)
!5374 = !DILocation(line: 619, column: 7, scope: !5342)
!5375 = !DILocation(line: 625, column: 9, scope: !5342)
!5376 = !DILocation(line: 625, column: 17, scope: !5342)
!5377 = !DILocation(line: 626, column: 3, scope: !5342)
!5378 = !DILocation(line: 629, column: 20, scope: !5336)
!5379 = !DILocation(line: 629, column: 8, scope: !5336)
!5380 = !DILocation(line: 518, column: 23, scope: !5336)
!5381 = !DILocation(line: 631, column: 2, scope: !5336)
!5382 = distinct !DISubprogram(name: "extract_decimal", scope: !2525, file: !2525, line: 318, type: !5383, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2521, retainedNodes: !5385)
!5383 = !DISubroutineType(types: !5384)
!5384 = !{!232, !278}
!5385 = !{!5386, !5387, !5388}
!5386 = !DILocalVariable(name: "str", arg: 1, scope: !5382, file: !2525, line: 318, type: !278)
!5387 = !DILocalVariable(name: "sp", scope: !5382, file: !2525, line: 320, type: !279)
!5388 = !DILocalVariable(name: "val", scope: !5382, file: !2525, line: 321, type: !232)
!5389 = !DILocation(line: 0, scope: !5382)
!5390 = !DILocation(line: 320, column: 19, scope: !5382)
!5391 = !DILocation(line: 323, column: 37, scope: !5382)
!5392 = !DILocation(line: 323, column: 17, scope: !5382)
!5393 = !DILocation(line: 323, column: 9, scope: !5382)
!5394 = !DILocation(line: 323, column: 2, scope: !5382)
!5395 = !DILocation(line: 324, column: 13, scope: !5396)
!5396 = distinct !DILexicalBlock(scope: !5382, file: !2525, line: 323, column: 43)
!5397 = !DILocation(line: 324, column: 24, scope: !5396)
!5398 = !DILocation(line: 324, column: 19, scope: !5396)
!5399 = !DILocation(line: 324, column: 27, scope: !5396)
!5400 = distinct !{!5400, !5394, !5401}
!5401 = !DILocation(line: 325, column: 2, scope: !5382)
!5402 = !DILocation(line: 326, column: 7, scope: !5382)
!5403 = !DILocation(line: 327, column: 2, scope: !5382)
!5404 = distinct !DISubprogram(name: "isdigit", scope: !5184, file: !5184, line: 43, type: !303, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2521, retainedNodes: !5405)
!5405 = !{!5406}
!5406 = !DILocalVariable(name: "a", arg: 1, scope: !5404, file: !5184, line: 43, type: !109)
!5407 = !DILocation(line: 0, scope: !5404)
!5408 = !DILocation(line: 45, column: 29, scope: !5404)
!5409 = !DILocation(line: 45, column: 45, scope: !5404)
!5410 = !DILocation(line: 45, column: 2, scope: !5404)
!5411 = distinct !DISubprogram(name: "assert_post_action", scope: !5412, file: !5412, line: 26, type: !5413, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !5415)
!5412 = !DIFile(filename: "zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5413 = !DISubroutineType(types: !5414)
!5414 = !{null, !279, !32}
!5415 = !{!5416, !5417}
!5416 = !DILocalVariable(name: "file", arg: 1, scope: !5411, file: !5412, line: 26, type: !279)
!5417 = !DILocalVariable(name: "line", arg: 2, scope: !5411, file: !5412, line: 26, type: !32)
!5418 = !DILocation(line: 0, scope: !5411)
!5419 = !DILocation(line: 43, column: 2, scope: !5420)
!5420 = distinct !DILexicalBlock(scope: !5411, file: !5412, line: 43, column: 2)
!5421 = !{i64 2154851820, i64 2154851836, i64 2154851862, i64 2154851890, i64 2154851910}
!5422 = !DILocation(line: 44, column: 1, scope: !5411)
!5423 = distinct !DISubprogram(name: "assert_print", scope: !5412, file: !5412, line: 46, type: !4394, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !5424)
!5424 = !{!5425, !5426}
!5425 = !DILocalVariable(name: "fmt", arg: 1, scope: !5423, file: !5412, line: 46, type: !279)
!5426 = !DILocalVariable(name: "ap", scope: !5423, file: !5412, line: 48, type: !5427)
!5427 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3400, line: 99, baseType: !5428)
!5428 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3400, line: 40, baseType: !5429)
!5429 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !5412, baseType: !5430)
!5430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5431)
!5431 = !{!5432}
!5432 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5430, file: !5412, line: 48, baseType: !107, size: 32)
!5433 = !DILocation(line: 0, scope: !5423)
!5434 = !DILocation(line: 48, column: 2, scope: !5423)
!5435 = !DILocation(line: 48, column: 10, scope: !5423)
!5436 = !DILocation(line: 50, column: 2, scope: !5423)
!5437 = !DILocation(line: 52, column: 2, scope: !5423)
!5438 = !DILocation(line: 54, column: 2, scope: !5423)
!5439 = !DILocation(line: 55, column: 1, scope: !5423)
!5440 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5441, file: !5441, line: 9, type: !3096, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !2036)
!5441 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple")
!5442 = !DILocation(line: 11, column: 1, scope: !5440)
!5443 = !{i64 2147565474, i64 2147565517, i64 2147565557}
!5444 = !DILocation(line: 12, column: 1, scope: !5440)
!5445 = !{i64 2147569701, i64 2147569744, i64 2147569784}
!5446 = !DILocation(line: 13, column: 1, scope: !5440)
!5447 = !{i64 2147569910, i64 2147569953, i64 2147569993}
!5448 = !DILocation(line: 14, column: 1, scope: !5440)
!5449 = !{i64 2147570079, i64 2147570122, i64 2147570162}
!5450 = !DILocation(line: 15, column: 1, scope: !5440)
!5451 = !{i64 2147570242, i64 2147570285, i64 2147570325}
!5452 = !DILocation(line: 16, column: 1, scope: !5440)
!5453 = !{i64 2147570426, i64 2147570469, i64 2147570509}
!5454 = !DILocation(line: 17, column: 1, scope: !5440)
!5455 = !{i64 2147570605, i64 2147570648, i64 2147570688}
!5456 = !DILocation(line: 18, column: 1, scope: !5440)
!5457 = !{i64 2147570848, i64 2147570891, i64 2147570931}
!5458 = !DILocation(line: 19, column: 1, scope: !5440)
!5459 = !{i64 2147571083, i64 2147571126, i64 2147571166}
!5460 = !DILocation(line: 20, column: 1, scope: !5440)
!5461 = !{i64 2147571270, i64 2147571313, i64 2147571353}
!5462 = !DILocation(line: 21, column: 1, scope: !5440)
!5463 = !{i64 2147571486, i64 2147571529, i64 2147571569}
!5464 = !DILocation(line: 22, column: 1, scope: !5440)
!5465 = !{i64 2147571689, i64 2147571732, i64 2147571772}
!5466 = !DILocation(line: 23, column: 1, scope: !5440)
!5467 = !{i64 2147571892, i64 2147571935, i64 2147571975}
!5468 = !DILocation(line: 24, column: 1, scope: !5440)
!5469 = !{i64 2147572067, i64 2147572110, i64 2147572150}
!5470 = !DILocation(line: 25, column: 1, scope: !5440)
!5471 = !{i64 2147572275, i64 2147572318, i64 2147572358}
!5472 = !DILocation(line: 26, column: 1, scope: !5440)
!5473 = !{i64 2147572479, i64 2147572522, i64 2147572562}
!5474 = !DILocation(line: 27, column: 1, scope: !5440)
!5475 = !{i64 2147572672, i64 2147572715, i64 2147572755}
!5476 = !DILocation(line: 28, column: 1, scope: !5440)
!5477 = !{i64 2147572874, i64 2147572917, i64 2147572957}
!5478 = !DILocation(line: 29, column: 1, scope: !5440)
!5479 = !{i64 2147573073, i64 2147573116, i64 2147573156}
!5480 = !DILocation(line: 30, column: 1, scope: !5440)
!5481 = !{i64 2147573300, i64 2147573343, i64 2147573383}
!5482 = !DILocation(line: 31, column: 1, scope: !5440)
!5483 = !{i64 2147573502, i64 2147573545, i64 2147573585}
!5484 = !DILocation(line: 32, column: 1, scope: !5440)
!5485 = !{i64 2147573717, i64 2147573760, i64 2147573800}
!5486 = !DILocation(line: 33, column: 1, scope: !5440)
!5487 = !{i64 2147573934, i64 2147573977, i64 2147574017}
!5488 = !DILocation(line: 34, column: 1, scope: !5440)
!5489 = !{i64 2147574106, i64 2147574149, i64 2147574189}
!5490 = !DILocation(line: 35, column: 1, scope: !5440)
!5491 = !{i64 2147574308, i64 2147574351, i64 2147574391}
!5492 = !DILocation(line: 36, column: 1, scope: !5440)
!5493 = !{i64 2147574534, i64 2147574577, i64 2147574617}
!5494 = !DILocation(line: 37, column: 1, scope: !5440)
!5495 = !{i64 2147574733, i64 2147574776, i64 2147574816}
!5496 = !DILocation(line: 38, column: 1, scope: !5440)
!5497 = !{i64 2147574908, i64 2147574951, i64 2147574991}
!5498 = !DILocation(line: 39, column: 1, scope: !5440)
!5499 = !{i64 2147575176, i64 2147575219, i64 2147575259}
!5500 = !DILocation(line: 40, column: 1, scope: !5440)
!5501 = !{i64 2147575429, i64 2147575472, i64 2147575512}
!5502 = !DILocation(line: 41, column: 1, scope: !5440)
!5503 = !{i64 2147575670, i64 2147575713, i64 2147575753}
!5504 = !DILocation(line: 42, column: 1, scope: !5440)
!5505 = !{i64 2147575905, i64 2147575948, i64 2147575988}
!5506 = !DILocation(line: 43, column: 1, scope: !5440)
!5507 = !{i64 2147576137, i64 2147576180, i64 2147576220}
!5508 = !DILocation(line: 44, column: 1, scope: !5440)
!5509 = !{i64 2147576363, i64 2147576406, i64 2147576446}
!5510 = !DILocation(line: 45, column: 1, scope: !5440)
!5511 = !{i64 2147576601, i64 2147576644, i64 2147576684}
!5512 = !DILocation(line: 46, column: 1, scope: !5440)
!5513 = !{i64 2147576827, i64 2147576870, i64 2147576910}
!5514 = !DILocation(line: 47, column: 1, scope: !5440)
!5515 = !{i64 2147577062, i64 2147577105, i64 2147577145}
!5516 = !DILocation(line: 48, column: 1, scope: !5440)
!5517 = !{i64 2147577297, i64 2147577340, i64 2147577380}
!5518 = !DILocation(line: 49, column: 1, scope: !5440)
!5519 = !{i64 2147577535, i64 2147577578, i64 2147577618}
!5520 = !DILocation(line: 50, column: 1, scope: !5440)
!5521 = !{i64 2147577809, i64 2147577852, i64 2147577892}
!5522 = !DILocation(line: 51, column: 1, scope: !5440)
!5523 = !{i64 2147578047, i64 2147578090, i64 2147578130}
!5524 = !DILocation(line: 52, column: 1, scope: !5440)
!5525 = !{i64 2147578300, i64 2147578343, i64 2147578383}
!5526 = !DILocation(line: 53, column: 1, scope: !5440)
!5527 = !{i64 2147582605, i64 2147582648, i64 2147582688}
!5528 = !DILocation(line: 54, column: 1, scope: !5440)
!5529 = !{i64 2147582855, i64 2147582898, i64 2147582938}
!5530 = !DILocation(line: 55, column: 1, scope: !5440)
!5531 = !{i64 2147583096, i64 2147583139, i64 2147583179}
!5532 = !DILocation(line: 56, column: 1, scope: !5440)
!5533 = !{i64 2147583343, i64 2147583386, i64 2147583426}
!5534 = !DILocation(line: 57, column: 1, scope: !5440)
!5535 = !{i64 2147583578, i64 2147583621, i64 2147583661}
!5536 = !DILocation(line: 58, column: 1, scope: !5440)
!5537 = !{i64 2147583813, i64 2147583856, i64 2147583896}
!5538 = !DILocation(line: 59, column: 1, scope: !5440)
!5539 = !{i64 2147584048, i64 2147584091, i64 2147584131}
!5540 = !DILocation(line: 60, column: 1, scope: !5440)
!5541 = !{i64 2147584286, i64 2147584329, i64 2147584369}
!5542 = !DILocation(line: 61, column: 1, scope: !5440)
!5543 = !{i64 2147584527, i64 2147584570, i64 2147584610}
!5544 = !DILocation(line: 62, column: 1, scope: !5440)
!5545 = !{i64 2147584807, i64 2147584850, i64 2147584890}
!5546 = !DILocation(line: 63, column: 1, scope: !5440)
!5547 = !{i64 2147585066, i64 2147585109, i64 2147585149}
!5548 = !DILocation(line: 64, column: 1, scope: !5440)
!5549 = !{i64 2147585304, i64 2147585347, i64 2147585387}
!5550 = !DILocation(line: 65, column: 1, scope: !5440)
!5551 = !{i64 2147585563, i64 2147585606, i64 2147585646}
!5552 = !DILocation(line: 66, column: 1, scope: !5440)
!5553 = !{i64 2147585792, i64 2147585835, i64 2147585875}
!5554 = !DILocation(line: 67, column: 1, scope: !5440)
!5555 = !{i64 2147586000, i64 2147586043, i64 2147586083}
!5556 = !DILocation(line: 68, column: 1, scope: !5440)
!5557 = !{i64 2147586211, i64 2147586254, i64 2147586294}
!5558 = !DILocation(line: 69, column: 1, scope: !5440)
!5559 = !{i64 2147586446, i64 2147586489, i64 2147586529}
!5560 = !DILocation(line: 70, column: 1, scope: !5440)
!5561 = !{i64 2147586675, i64 2147586718, i64 2147586758}
!5562 = !DILocation(line: 71, column: 1, scope: !5440)
!5563 = !{i64 2147586892, i64 2147586935, i64 2147586975}
!5564 = !DILocation(line: 72, column: 1, scope: !5440)
!5565 = !{i64 2147587121, i64 2147587164, i64 2147587204}
!5566 = !DILocation(line: 73, column: 1, scope: !5440)
!5567 = !{i64 2147587359, i64 2147587402, i64 2147587442}
!5568 = !DILocation(line: 74, column: 1, scope: !5440)
!5569 = !{i64 2147587591, i64 2147587634, i64 2147587674}
!5570 = !DILocation(line: 75, column: 1, scope: !5440)
!5571 = !{i64 2147587817, i64 2147587860, i64 2147587900}
!5572 = !DILocation(line: 76, column: 1, scope: !5440)
!5573 = !{i64 2147588034, i64 2147588077, i64 2147588117}
!5574 = !DILocation(line: 77, column: 1, scope: !5440)
!5575 = !{i64 2147588266, i64 2147588309, i64 2147588349}
!5576 = !DILocation(line: 78, column: 1, scope: !5440)
!5577 = !{i64 2147588492, i64 2147588535, i64 2147588575}
!5578 = !DILocation(line: 79, column: 1, scope: !5440)
!5579 = !{i64 2147588706, i64 2147588749, i64 2147588789}
!5580 = !DILocation(line: 80, column: 1, scope: !5440)
!5581 = !{i64 2147588926, i64 2147588969, i64 2147589009}
!5582 = !DILocation(line: 81, column: 1, scope: !5440)
!5583 = !{i64 2147589158, i64 2147589201, i64 2147589241}
!5584 = !DILocation(line: 82, column: 1, scope: !5440)
!5585 = !{i64 2147589366, i64 2147589409, i64 2147589449}
!5586 = !DILocation(line: 83, column: 1, scope: !5440)
!5587 = !{i64 2147589571, i64 2147589614, i64 2147589654}
!5588 = !DILocation(line: 84, column: 1, scope: !5440)
!5589 = !{i64 2147589788, i64 2147589831, i64 2147589871}
!5590 = !DILocation(line: 85, column: 1, scope: !5440)
!5591 = !{i64 2147590002, i64 2147590045, i64 2147590085}
!5592 = !DILocation(line: 86, column: 1, scope: !5440)
!5593 = !{i64 2147590228, i64 2147590271, i64 2147590311}
!5594 = !DILocation(line: 87, column: 1, scope: !5440)
!5595 = !{i64 2147590448, i64 2147590491, i64 2147590531}
!5596 = !DILocation(line: 88, column: 1, scope: !5440)
!5597 = !{i64 2147594714, i64 2147594757, i64 2147594797}
!5598 = !DILocation(line: 89, column: 1, scope: !5440)
!5599 = !{i64 2147594946, i64 2147594989, i64 2147595029}
!5600 = !DILocation(line: 90, column: 1, scope: !5440)
!5601 = !{i64 2147595181, i64 2147595224, i64 2147595264}
!5602 = !DILocation(line: 91, column: 1, scope: !5440)
!5603 = !{i64 2147595431, i64 2147595474, i64 2147595514}
!5604 = !DILocation(line: 92, column: 1, scope: !5440)
!5605 = !{i64 2147595681, i64 2147595724, i64 2147595764}
!5606 = !DILocation(line: 93, column: 1, scope: !5440)
!5607 = !{i64 2147595919, i64 2147595962, i64 2147596002}
!5608 = !DILocation(line: 94, column: 1, scope: !5440)
!5609 = !{i64 2147596130, i64 2147596173, i64 2147596213}
!5610 = !DILocation(line: 95, column: 1, scope: !5440)
!5611 = !{i64 2147596347, i64 2147596390, i64 2147596430}
!5612 = !DILocation(line: 96, column: 1, scope: !5440)
!5613 = !{i64 2147596543, i64 2147596586, i64 2147596626}
!5614 = !DILocation(line: 97, column: 1, scope: !5440)
!5615 = !{i64 2147596745, i64 2147596788, i64 2147596828}
!5616 = !DILocation(line: 98, column: 1, scope: !5440)
!5617 = !{i64 2147596938, i64 2147596981, i64 2147597021}
!5618 = !DILocation(line: 99, column: 1, scope: !5440)
!5619 = !{i64 2147597146, i64 2147597189, i64 2147597229}
!5620 = !DILocation(line: 100, column: 1, scope: !5440)
!5621 = !{i64 2147597342, i64 2147597385, i64 2147597425}
!5622 = !DILocation(line: 101, column: 1, scope: !5440)
!5623 = !{i64 2147597592, i64 2147597635, i64 2147597675}
!5624 = !DILocation(line: 102, column: 1, scope: !5440)
!5625 = !{i64 2147597803, i64 2147597846, i64 2147597886}
!5626 = !DILocation(line: 103, column: 1, scope: !5440)
!5627 = !{i64 2147598002, i64 2147598045, i64 2147598085}
!5628 = !DILocation(line: 104, column: 1, scope: !5440)
!5629 = !{i64 2147598177, i64 2147598220, i64 2147598260}
!5630 = !DILocation(line: 105, column: 1, scope: !5440)
!5631 = !{i64 2147598361, i64 2147598404, i64 2147598444}
!5632 = !DILocation(line: 106, column: 1, scope: !5440)
!5633 = !{i64 2147598563, i64 2147598606, i64 2147598646}
!5634 = !DILocation(line: 107, column: 1, scope: !5440)
!5635 = !{i64 2147598744, i64 2147598787, i64 2147598827}
!5636 = !DILocation(line: 108, column: 1, scope: !5440)
!5637 = !{i64 2147598943, i64 2147598986, i64 2147599026}
!5638 = !DILocation(line: 109, column: 1, scope: !5440)
!5639 = !{i64 2147599148, i64 2147599191, i64 2147599231}
!5640 = !DILocation(line: 110, column: 1, scope: !5440)
!5641 = !{i64 2147599341, i64 2147599384, i64 2147599424}
!5642 = !DILocation(line: 111, column: 1, scope: !5440)
!5643 = !{i64 2147599507, i64 2147599550, i64 2147599590}
!5644 = !DILocation(line: 112, column: 1, scope: !5440)
!5645 = !{i64 2147599691, i64 2147599734, i64 2147599774}
!5646 = !DILocation(line: 113, column: 1, scope: !5440)
!5647 = !{i64 2147599881, i64 2147599924, i64 2147599964}
!5648 = !DILocation(line: 114, column: 1, scope: !5440)
!5649 = !{i64 2147600065, i64 2147600108, i64 2147600148}
!5650 = !DILocation(line: 115, column: 1, scope: !5440)
!5651 = !{i64 2147600279, i64 2147600322, i64 2147600362}
!5652 = !DILocation(line: 116, column: 1, scope: !5440)
!5653 = !{i64 2147600490, i64 2147600533, i64 2147600573}
!5654 = !DILocation(line: 117, column: 1, scope: !5440)
!5655 = !{i64 2147600713, i64 2147600756, i64 2147600796}
!5656 = !DILocation(line: 118, column: 1, scope: !5440)
!5657 = !{i64 2147600897, i64 2147600940, i64 2147600980}
!5658 = !DILocation(line: 119, column: 1, scope: !5440)
!5659 = !{i64 2147601111, i64 2147601154, i64 2147601194}
!5660 = !DILocation(line: 120, column: 1, scope: !5440)
!5661 = !{i64 2147601277, i64 2147601320, i64 2147601360}
!5662 = !DILocation(line: 121, column: 1, scope: !5440)
!5663 = !{i64 2147601458, i64 2147601501, i64 2147601541}
!5664 = !DILocation(line: 122, column: 1, scope: !5440)
!5665 = !{i64 2147601651, i64 2147601694, i64 2147601734}
!5666 = !DILocation(line: 123, column: 1, scope: !5440)
!5667 = !{i64 2147601877, i64 2147601920, i64 2147601960}
!5668 = !DILocation(line: 124, column: 1, scope: !5440)
!5669 = !{i64 2147602091, i64 2147602134, i64 2147602174}
!5670 = !DILocation(line: 125, column: 1, scope: !5440)
!5671 = !{i64 2147602317, i64 2147602360, i64 2147602400}
!5672 = !DILocation(line: 126, column: 1, scope: !5440)
!5673 = !{i64 2147602534, i64 2147602577, i64 2147602617}
!5674 = !DILocation(line: 127, column: 1, scope: !5440)
!5675 = !{i64 2147602811, i64 2147602854, i64 2147602894}
!5676 = !DILocation(line: 128, column: 1, scope: !5440)
!5677 = !{i64 2147603037, i64 2147603080, i64 2147603120}
!5678 = !DILocation(line: 129, column: 1, scope: !5440)
!5679 = !{i64 2147603245, i64 2147603288, i64 2147603328}
!5680 = !DILocation(line: 130, column: 1, scope: !5440)
!5681 = !{i64 2147603441, i64 2147603484, i64 2147603524}
!5682 = !DILocation(line: 131, column: 1, scope: !5440)
!5683 = !{i64 2147603706, i64 2147603749, i64 2147603789}
!5684 = !DILocation(line: 132, column: 1, scope: !5440)
!5685 = !{i64 2147607981, i64 2147608024, i64 2147608064}
!5686 = !DILocation(line: 133, column: 1, scope: !5440)
!5687 = !{i64 2147608156, i64 2147608199, i64 2147608239}
!5688 = !DILocation(line: 134, column: 1, scope: !5440)
!5689 = !{i64 2147608410, i64 2147608453, i64 2147608493}
!5690 = !DILocation(line: 135, column: 1, scope: !5440)
!5691 = !{i64 2147608609, i64 2147608652, i64 2147608692}
!5692 = !DILocation(line: 136, column: 1, scope: !5440)
!5693 = !{i64 2147608851, i64 2147608894, i64 2147608934}
!5694 = !DILocation(line: 137, column: 1, scope: !5440)
!5695 = !{i64 2147609014, i64 2147609057, i64 2147609097}
!5696 = !DILocation(line: 138, column: 1, scope: !5440)
!5697 = !{i64 2147609201, i64 2147609244, i64 2147609284}
!5698 = !DILocation(line: 139, column: 1, scope: !5440)
!5699 = !{i64 2147609409, i64 2147609452, i64 2147609492}
!5700 = !DILocation(line: 140, column: 1, scope: !5440)
!5701 = !{i64 2147609605, i64 2147609648, i64 2147609688}
!5702 = !DILocation(line: 141, column: 1, scope: !5440)
!5703 = !{i64 2147609798, i64 2147609841, i64 2147609881}
!5704 = !DILocation(line: 142, column: 1, scope: !5440)
!5705 = !{i64 2147609981, i64 2147610024, i64 2147610064}
!5706 = !DILocation(line: 143, column: 1, scope: !5440)
!5707 = !{i64 2147610195, i64 2147610238, i64 2147610278}
!5708 = !DILocation(line: 144, column: 1, scope: !5440)
!5709 = !{i64 2147610406, i64 2147610449, i64 2147610489}
!5710 = !DILocation(line: 145, column: 1, scope: !5440)
!5711 = !{i64 2147610626, i64 2147610669, i64 2147610709}
!5712 = !DILocation(line: 146, column: 1, scope: !5440)
!5713 = !{i64 2147610833, i64 2147610876, i64 2147610916}
!5714 = !DILocation(line: 147, column: 1, scope: !5440)
!5715 = !{i64 2147611106, i64 2147611149, i64 2147611189}
!5716 = !DILocation(line: 148, column: 1, scope: !5440)
!5717 = !{i64 2147611354, i64 2147611397, i64 2147611437}
!5718 = !DILocation(line: 149, column: 1, scope: !5440)
!5719 = !{i64 2147611553, i64 2147611596, i64 2147611636}
!5720 = !DILocation(line: 150, column: 1, scope: !5440)
!5721 = !{i64 2147611788, i64 2147611831, i64 2147611871}
!5722 = !DILocation(line: 151, column: 1, scope: !5440)
!5723 = !{i64 2147612038, i64 2147612081, i64 2147612121}
!5724 = !DILocation(line: 152, column: 1, scope: !5440)
!5725 = !{i64 2147612240, i64 2147612283, i64 2147612323}
!5726 = !DILocation(line: 153, column: 1, scope: !5440)
!5727 = !{i64 2147612463, i64 2147612506, i64 2147612546}
!5728 = !DILocation(line: 154, column: 1, scope: !5440)
!5729 = !{i64 2147612677, i64 2147612720, i64 2147612760}
!5730 = !DILocation(line: 155, column: 1, scope: !5440)
!5731 = !{i64 2147612921, i64 2147612964, i64 2147613004}
!5732 = !DILocation(line: 156, column: 1, scope: !5440)
!5733 = !{i64 2147613150, i64 2147613193, i64 2147613233}
!5734 = !DILocation(line: 157, column: 1, scope: !5440)
!5735 = !{i64 2147613379, i64 2147613422, i64 2147613462}
!5736 = !DILocation(line: 158, column: 1, scope: !5440)
!5737 = !{i64 2147613587, i64 2147613630, i64 2147613670}
!5738 = !DILocation(line: 159, column: 1, scope: !5440)
!5739 = !{i64 2147613825, i64 2147613868, i64 2147613908}
!5740 = !DILocation(line: 160, column: 1, scope: !5440)
!5741 = !{i64 2147614051, i64 2147614094, i64 2147614134}
!5742 = !DILocation(line: 161, column: 1, scope: !5440)
!5743 = !{i64 2147614310, i64 2147614353, i64 2147614393}
!5744 = !DILocation(line: 162, column: 1, scope: !5440)
!5745 = !{i64 2147614530, i64 2147614573, i64 2147614613}
!5746 = !DILocation(line: 163, column: 1, scope: !5440)
!5747 = !{i64 2147614762, i64 2147614805, i64 2147614845}
!5748 = !DILocation(line: 164, column: 1, scope: !5440)
!5749 = !{i64 2147615003, i64 2147615046, i64 2147615086}
!5750 = !DILocation(line: 165, column: 1, scope: !5440)
!5751 = !{i64 2147615244, i64 2147615287, i64 2147615327}
!5752 = !DILocation(line: 166, column: 1, scope: !5440)
!5753 = !{i64 2147615467, i64 2147615510, i64 2147615550}
!5754 = !DILocation(line: 167, column: 1, scope: !5440)
!5755 = !{i64 2147615684, i64 2147615727, i64 2147615767}
!5756 = !DILocation(line: 168, column: 1, scope: !5440)
!5757 = !{i64 2147615925, i64 2147615968, i64 2147616008}
!5758 = !DILocation(line: 169, column: 1, scope: !5440)
!5759 = !{i64 2147616112, i64 2147616155, i64 2147616195}
!5760 = !DILocation(line: 170, column: 1, scope: !5440)
!5761 = !{i64 2147616299, i64 2147616342, i64 2147616382}
!5762 = !DILocation(line: 171, column: 1, scope: !5440)
!5763 = !{i64 2147616462, i64 2147616505, i64 2147616545}
!5764 = !DILocation(line: 172, column: 1, scope: !5440)
!5765 = !{i64 2147620728, i64 2147620771, i64 2147620811}
!5766 = !DILocation(line: 173, column: 1, scope: !5440)
!5767 = !{i64 2147620921, i64 2147620964, i64 2147621004}
!5768 = !DILocation(line: 174, column: 1, scope: !5440)
!5769 = !{i64 2147621180, i64 2147621223, i64 2147621263}
!5770 = !DILocation(line: 175, column: 1, scope: !5440)
!5771 = !{i64 2147621403, i64 2147621446, i64 2147621486}
!5772 = !DILocation(line: 176, column: 1, scope: !5440)
!5773 = !{i64 2147621632, i64 2147621675, i64 2147621715}
!5774 = !DILocation(line: 177, column: 1, scope: !5440)
!5775 = !{i64 2147621846, i64 2147621889, i64 2147621929}
!5776 = !DILocation(line: 178, column: 1, scope: !5440)
!5777 = !{i64 2147622048, i64 2147622091, i64 2147622131}
!5778 = !DILocation(line: 179, column: 1, scope: !5440)
!5779 = !{i64 2147622244, i64 2147622287, i64 2147622327}
!5780 = !DILocation(line: 180, column: 1, scope: !5440)
!5781 = !{i64 2147622456, i64 2147622499, i64 2147622539}
!5782 = !DILocation(line: 181, column: 1, scope: !5440)
!5783 = !{i64 2147622677, i64 2147622720, i64 2147622760}
!5784 = !DILocation(line: 182, column: 1, scope: !5440)
!5785 = !{i64 2147622891, i64 2147622934, i64 2147622974}
!5786 = !DILocation(line: 183, column: 1, scope: !5440)
!5787 = !{i64 2147623081, i64 2147623124, i64 2147623164}
!5788 = !DILocation(line: 184, column: 1, scope: !5440)
!5789 = !{i64 2147623280, i64 2147623323, i64 2147623363}
!5790 = !DILocation(line: 185, column: 1, scope: !5440)
!5791 = !{i64 2147623485, i64 2147623528, i64 2147623568}
!5792 = !DILocation(line: 186, column: 1, scope: !5440)
!5793 = !{i64 2147623705, i64 2147623748, i64 2147623788}
!5794 = !DILocation(line: 187, column: 1, scope: !5440)
!5795 = !{i64 2147623906, i64 2147623949, i64 2147623989}
!5796 = !DILocation(line: 188, column: 1, scope: !5440)
!5797 = !{i64 2147624105, i64 2147624148, i64 2147624188}
!5798 = !DILocation(line: 189, column: 1, scope: !5440)
!5799 = !{i64 2147624310, i64 2147624353, i64 2147624393}
!5800 = !DILocation(line: 190, column: 1, scope: !5440)
!5801 = !{i64 2147624479, i64 2147624522, i64 2147624562}
!5802 = !DILocation(line: 191, column: 1, scope: !5440)
!5803 = !{i64 2147624663, i64 2147624706, i64 2147624746}
!5804 = !DILocation(line: 192, column: 1, scope: !5440)
!5805 = !{i64 2147624847, i64 2147624890, i64 2147624930}
!5806 = !DILocation(line: 193, column: 1, scope: !5440)
!5807 = !{i64 2147625034, i64 2147625077, i64 2147625117}
!5808 = !DILocation(line: 194, column: 1, scope: !5440)
!5809 = !{i64 2147625218, i64 2147625261, i64 2147625301}
!5810 = !DILocation(line: 195, column: 1, scope: !5440)
!5811 = !{i64 2147625405, i64 2147625448, i64 2147625488}
!5812 = !DILocation(line: 196, column: 1, scope: !5440)
!5813 = !{i64 2147625617, i64 2147625660, i64 2147625700}
!5814 = !DILocation(line: 197, column: 1, scope: !5440)
!5815 = !{i64 2147625855, i64 2147625898, i64 2147625938}
!5816 = !DILocation(line: 198, column: 1, scope: !5440)
!5817 = !{i64 2147626085, i64 2147626128, i64 2147626168}
!5818 = !DILocation(line: 199, column: 1, scope: !5440)
!5819 = !{i64 2147626314, i64 2147626357, i64 2147626397}
!5820 = !DILocation(line: 200, column: 1, scope: !5440)
!5821 = !{i64 2147626501, i64 2147626544, i64 2147626584}
!5822 = !DILocation(line: 201, column: 1, scope: !5440)
!5823 = !{i64 2147626697, i64 2147626740, i64 2147626780}
!5824 = !DILocation(line: 202, column: 1, scope: !5440)
!5825 = !{i64 2147626905, i64 2147626948, i64 2147626988}
!5826 = !DILocation(line: 203, column: 1, scope: !5440)
!5827 = !{i64 2147627117, i64 2147627160, i64 2147627200}
!5828 = !DILocation(line: 204, column: 1, scope: !5440)
!5829 = !{i64 2147627316, i64 2147627359, i64 2147627399}
!5830 = !DILocation(line: 205, column: 1, scope: !5440)
!5831 = !{i64 2147627554, i64 2147627597, i64 2147627637}
!5832 = !DILocation(line: 206, column: 1, scope: !5440)
!5833 = !{i64 2147627750, i64 2147627793, i64 2147627833}
!5834 = !DILocation(line: 207, column: 1, scope: !5440)
!5835 = !{i64 2147627952, i64 2147627995, i64 2147628035}
!5836 = !DILocation(line: 208, column: 1, scope: !5440)
!5837 = !{i64 2147628145, i64 2147628188, i64 2147628228}
!5838 = !DILocation(line: 209, column: 1, scope: !5440)
!5839 = !{i64 2147628379, i64 2147628422, i64 2147628462}
!5840 = !DILocation(line: 210, column: 1, scope: !5440)
!5841 = !{i64 2147628542, i64 2147628585, i64 2147628625}
!5842 = !DILocation(line: 211, column: 1, scope: !5440)
!5843 = !{i64 2147628781, i64 2147628824, i64 2147628864}
!5844 = !DILocation(line: 212, column: 1, scope: !5440)
!5845 = !{i64 2147629020, i64 2147629063, i64 2147629103}
!5846 = !DILocation(line: 213, column: 1, scope: !5440)
!5847 = !{i64 2147629256, i64 2147629299, i64 2147629339}
!5848 = !DILocation(line: 214, column: 1, scope: !5440)
!5849 = !{i64 2147629486, i64 2147629529, i64 2147629569}
!5850 = !DILocation(line: 215, column: 1, scope: !5440)
!5851 = !{i64 2147629673, i64 2147629716, i64 2147629756}
!5852 = !DILocation(line: 216, column: 1, scope: !5440)
!5853 = !{i64 2147633933, i64 2147633976, i64 2147634016}
!5854 = !DILocation(line: 217, column: 1, scope: !5440)
!5855 = !{i64 2147634204, i64 2147634247, i64 2147634287}
!5856 = !DILocation(line: 218, column: 1, scope: !5440)
!5857 = !{i64 2147634379, i64 2147634422, i64 2147634462}
!5858 = !DILocation(line: 219, column: 1, scope: !5440)
!5859 = !{i64 2147634613, i64 2147634656, i64 2147634696}
!5860 = !DILocation(line: 220, column: 1, scope: !5440)
!5861 = !{i64 2147634821, i64 2147634864, i64 2147634904}
!5862 = !DILocation(line: 221, column: 1, scope: !5440)
!5863 = !{i64 2147635039, i64 2147635082, i64 2147635122}
!5864 = !DILocation(line: 222, column: 1, scope: !5440)
!5865 = !{i64 2147635229, i64 2147635272, i64 2147635312}
!5866 = !DILocation(line: 223, column: 1, scope: !5440)
!5867 = !{i64 2147635461, i64 2147635504, i64 2147635544}
!5868 = !DILocation(line: 224, column: 1, scope: !5440)
!5869 = !{i64 2147635681, i64 2147635724, i64 2147635764}
!5870 = !DILocation(line: 225, column: 1, scope: !5440)
!5871 = !{i64 2147635877, i64 2147635920, i64 2147635960}
!5872 = !DILocation(line: 226, column: 1, scope: !5440)
!5873 = !{i64 2147636083, i64 2147636126, i64 2147636166}
!5874 = !DILocation(line: 227, column: 1, scope: !5440)
!5875 = !{i64 2147636288, i64 2147636331, i64 2147636371}
!5876 = !DILocation(line: 228, column: 1, scope: !5440)
!5877 = !{i64 2147636514, i64 2147636557, i64 2147636597}
!5878 = !DILocation(line: 229, column: 1, scope: !5440)
!5879 = !{i64 2147636722, i64 2147636765, i64 2147636805}
!5880 = !DILocation(line: 230, column: 1, scope: !5440)
!5881 = !{i64 2147636918, i64 2147636961, i64 2147637001}
!5882 = !DILocation(line: 231, column: 1, scope: !5440)
!5883 = !{i64 2147637150, i64 2147637193, i64 2147637233}
!5884 = !DILocation(line: 232, column: 1, scope: !5440)
!5885 = !{i64 2147637334, i64 2147637377, i64 2147637417}
!5886 = !DILocation(line: 233, column: 1, scope: !5440)
!5887 = !{i64 2147637543, i64 2147637586, i64 2147637626}
!5888 = !DILocation(line: 234, column: 1, scope: !5440)
!5889 = !{i64 2147637751, i64 2147637794, i64 2147637834}
!5890 = !DILocation(line: 235, column: 1, scope: !5440)
!5891 = !{i64 2147637947, i64 2147637990, i64 2147638030}
!5892 = !DILocation(line: 236, column: 1, scope: !5440)
!5893 = !{i64 2147638131, i64 2147638174, i64 2147638214}
!5894 = !DILocation(line: 237, column: 1, scope: !5440)
!5895 = !{i64 2147638357, i64 2147638400, i64 2147638440}
!5896 = !DILocation(line: 238, column: 1, scope: !5440)
!5897 = !{i64 2147638583, i64 2147638626, i64 2147638666}
!5898 = !DILocation(line: 239, column: 1, scope: !5440)
!5899 = !{i64 2147638809, i64 2147638852, i64 2147638892}
!5900 = !DILocation(line: 240, column: 1, scope: !5440)
!5901 = !{i64 2147639035, i64 2147639078, i64 2147639118}
!5902 = !DILocation(line: 241, column: 1, scope: !5440)
!5903 = !{i64 2147639261, i64 2147639304, i64 2147639344}
!5904 = !DILocation(line: 242, column: 1, scope: !5440)
!5905 = !{i64 2147639493, i64 2147639536, i64 2147639576}
!5906 = !DILocation(line: 243, column: 1, scope: !5440)
!5907 = !{i64 2147639731, i64 2147639774, i64 2147639814}
!5908 = !DILocation(line: 244, column: 1, scope: !5440)
!5909 = !{i64 2147639951, i64 2147639994, i64 2147640034}
!5910 = !DILocation(line: 245, column: 1, scope: !5440)
!5911 = !{i64 2147640195, i64 2147640238, i64 2147640278}
!5912 = !DILocation(line: 246, column: 1, scope: !5440)
!5913 = !{i64 2147640436, i64 2147640479, i64 2147640519}
!5914 = !DILocation(line: 247, column: 1, scope: !5440)
!5915 = !{i64 2147640671, i64 2147640714, i64 2147640754}
!5916 = !DILocation(line: 248, column: 1, scope: !5440)
!5917 = !{i64 2147640903, i64 2147640946, i64 2147640986}
!5918 = !DILocation(line: 249, column: 1, scope: !5440)
!5919 = !{i64 2147641105, i64 2147641148, i64 2147641188}
!5920 = !DILocation(line: 250, column: 1, scope: !5440)
!5921 = !{i64 2147641355, i64 2147641398, i64 2147641438}
!5922 = !DILocation(line: 251, column: 1, scope: !5440)
!5923 = !{i64 2147641593, i64 2147641636, i64 2147641676}
!5924 = !DILocation(line: 252, column: 1, scope: !5440)
!5925 = !{i64 2147641801, i64 2147641844, i64 2147641884}
!5926 = !DILocation(line: 253, column: 1, scope: !5440)
!5927 = !{i64 2147641997, i64 2147642040, i64 2147642080}
!5928 = !DILocation(line: 254, column: 1, scope: !5440)
!5929 = !{i64 2147642181, i64 2147642224, i64 2147642264}
!5930 = !DILocation(line: 255, column: 1, scope: !5440)
!5931 = !{i64 2147642398, i64 2147642441, i64 2147642481}
!5932 = !DILocation(line: 256, column: 1, scope: !5440)
!5933 = !{i64 2147646664, i64 2147646707, i64 2147646747}
!5934 = !DILocation(line: 257, column: 1, scope: !5440)
!5935 = !{i64 2147646899, i64 2147646942, i64 2147646982}
!5936 = !DILocation(line: 258, column: 1, scope: !5440)
!5937 = !{i64 2147647122, i64 2147647165, i64 2147647205}
!5938 = !DILocation(line: 259, column: 1, scope: !5440)
!5939 = !{i64 2147647346, i64 2147647389, i64 2147647429}
!5940 = !DILocation(line: 260, column: 1, scope: !5440)
!5941 = !{i64 2147647584, i64 2147647627, i64 2147647667}
!5942 = !DILocation(line: 261, column: 1, scope: !5440)
!5943 = !{i64 2147647822, i64 2147647865, i64 2147647905}
!5944 = !DILocation(line: 262, column: 1, scope: !5440)
!5945 = !{i64 2147648039, i64 2147648082, i64 2147648122}
!5946 = !DILocation(line: 263, column: 1, scope: !5440)
!5947 = !{i64 2147648244, i64 2147648287, i64 2147648327}
!5948 = !DILocation(line: 264, column: 1, scope: !5440)
!5949 = !{i64 2147648437, i64 2147648480, i64 2147648520}
!5950 = !DILocation(line: 265, column: 1, scope: !5440)
!5951 = !{i64 2147648690, i64 2147648733, i64 2147648773}
!5952 = !DILocation(line: 266, column: 1, scope: !5440)
!5953 = !{i64 2147648898, i64 2147648941, i64 2147648981}
!5954 = !DILocation(line: 267, column: 1, scope: !5440)
!5955 = !{i64 2147649094, i64 2147649137, i64 2147649177}
!5956 = !DILocation(line: 268, column: 1, scope: !5440)
!5957 = !{i64 2147649308, i64 2147649351, i64 2147649391}
!5958 = !DILocation(line: 269, column: 1, scope: !5440)
!5959 = !{i64 2147649516, i64 2147649559, i64 2147649599}
!5960 = !DILocation(line: 270, column: 1, scope: !5440)
!5961 = !{i64 2147649706, i64 2147649749, i64 2147649789}
!5962 = !DILocation(line: 271, column: 1, scope: !5440)
!5963 = !{i64 2147649920, i64 2147649963, i64 2147650003}
!5964 = !DILocation(line: 272, column: 1, scope: !5440)
!5965 = !{i64 2147650182, i64 2147650225, i64 2147650265}
!5966 = !DILocation(line: 273, column: 1, scope: !5440)
!5967 = !{i64 2147650393, i64 2147650436, i64 2147650476}
!5968 = !DILocation(line: 274, column: 1, scope: !5440)
!5969 = !{i64 2147650637, i64 2147650680, i64 2147650720}
!5970 = !DILocation(line: 275, column: 1, scope: !5440)
!5971 = !{i64 2147650848, i64 2147650891, i64 2147650931}
!5972 = !DILocation(line: 276, column: 1, scope: !5440)
!5973 = !{i64 2147651077, i64 2147651120, i64 2147651160}
!5974 = !DILocation(line: 277, column: 1, scope: !5440)
!5975 = !{i64 2147651342, i64 2147651385, i64 2147651425}
!5976 = !DILocation(line: 278, column: 1, scope: !5440)
!5977 = !{i64 2147651547, i64 2147651590, i64 2147651630}
!5978 = !DILocation(line: 279, column: 1, scope: !5440)
!5979 = !{i64 2147651743, i64 2147651786, i64 2147651826}
!5980 = !DILocation(line: 280, column: 1, scope: !5440)
!5981 = !{i64 2147651966, i64 2147652009, i64 2147652049}
!5982 = !DILocation(line: 281, column: 1, scope: !5440)
!5983 = !{i64 2147652129, i64 2147652172, i64 2147652212}
!5984 = !DILocation(line: 282, column: 1, scope: !5440)
!5985 = !{i64 2147652334, i64 2147652377, i64 2147652417}
!5986 = !DILocation(line: 283, column: 1, scope: !5440)
!5987 = !{i64 2147652554, i64 2147652597, i64 2147652637}
!5988 = !DILocation(line: 284, column: 1, scope: !5440)
!5989 = !{i64 2147652768, i64 2147652811, i64 2147652851}
!5990 = !DILocation(line: 285, column: 1, scope: !5440)
!5991 = !{i64 2147653012, i64 2147653055, i64 2147653095}
!5992 = !DILocation(line: 286, column: 1, scope: !5440)
!5993 = !{i64 2147653244, i64 2147653287, i64 2147653327}
!5994 = !DILocation(line: 287, column: 1, scope: !5440)
!5995 = !{i64 2147653458, i64 2147653501, i64 2147653541}
!5996 = !DILocation(line: 288, column: 1, scope: !5440)
!5997 = !{i64 2147653669, i64 2147653712, i64 2147653752}
!5998 = !DILocation(line: 289, column: 1, scope: !5440)
!5999 = !{i64 2147653862, i64 2147653905, i64 2147653945}
!6000 = !DILocation(line: 290, column: 1, scope: !5440)
!6001 = !{i64 2147654061, i64 2147654104, i64 2147654144}
!6002 = !DILocation(line: 291, column: 1, scope: !5440)
!6003 = !{i64 2147654233, i64 2147654276, i64 2147654316}
!6004 = !DILocation(line: 292, column: 1, scope: !5440)
!6005 = !{i64 2147654426, i64 2147654469, i64 2147654509}
!6006 = !DILocation(line: 293, column: 1, scope: !5440)
!6007 = !{i64 2147654598, i64 2147654641, i64 2147654681}
!6008 = !DILocation(line: 294, column: 1, scope: !5440)
!6009 = !{i64 2147654788, i64 2147654831, i64 2147654871}
!6010 = !DILocation(line: 295, column: 1, scope: !5440)
!6011 = !{i64 2147654981, i64 2147655024, i64 2147655064}
!6012 = !DILocation(line: 296, column: 1, scope: !5440)
!6013 = !{i64 2147655177, i64 2147655220, i64 2147655260}
!6014 = !DILocation(line: 297, column: 1, scope: !5440)
!6015 = !{i64 2147655340, i64 2147655383, i64 2147655423}
!6016 = !DILocation(line: 298, column: 1, scope: !5440)
!6017 = !{i64 2147659603, i64 2147659646, i64 2147659686}
!6018 = !DILocation(line: 299, column: 1, scope: !5440)
!6019 = !{i64 2147659814, i64 2147659857, i64 2147659897}
!6020 = !DILocation(line: 300, column: 1, scope: !5440)
!6021 = !{i64 2147660019, i64 2147660062, i64 2147660102}
!6022 = !DILocation(line: 301, column: 1, scope: !5440)
!6023 = !{i64 2147660227, i64 2147660270, i64 2147660310}
!6024 = !DILocation(line: 302, column: 1, scope: !5440)
!6025 = !{i64 2147660420, i64 2147660463, i64 2147660503}
!6026 = !DILocation(line: 303, column: 1, scope: !5440)
!6027 = !{i64 2147660607, i64 2147660650, i64 2147660690}
!6028 = !DILocation(line: 304, column: 1, scope: !5440)
!6029 = !{i64 2147660773, i64 2147660816, i64 2147660856}
!6030 = !DILocation(line: 305, column: 1, scope: !5440)
!6031 = !{i64 2147661000, i64 2147661043, i64 2147661083}
!6032 = !DILocation(line: 306, column: 1, scope: !5440)
!6033 = !{i64 2147661217, i64 2147661260, i64 2147661300}
!6034 = !DILocation(line: 307, column: 1, scope: !5440)
!6035 = !{i64 2147661443, i64 2147661486, i64 2147661526}
!6036 = !DILocation(line: 308, column: 1, scope: !5440)
!6037 = !{i64 2147661648, i64 2147661691, i64 2147661731}
!6038 = !DILocation(line: 309, column: 1, scope: !5440)
!6039 = !{i64 2147661865, i64 2147661908, i64 2147661948}
!6040 = !DILocation(line: 310, column: 1, scope: !5440)
!6041 = !{i64 2147662157, i64 2147662200, i64 2147662240}
!6042 = !DILocation(line: 311, column: 1, scope: !5440)
!6043 = !{i64 2147662389, i64 2147662432, i64 2147662472}
!6044 = !DILocation(line: 312, column: 1, scope: !5440)
!6045 = !{i64 2147662606, i64 2147662649, i64 2147662689}
!6046 = !DILocation(line: 313, column: 1, scope: !5440)
!6047 = !{i64 2147662813, i64 2147662856, i64 2147662896}
!6048 = !DILocation(line: 314, column: 1, scope: !5440)
!6049 = !{i64 2147663014, i64 2147663057, i64 2147663097}
!6050 = !DILocation(line: 315, column: 1, scope: !5440)
!6051 = !{i64 2147663246, i64 2147663289, i64 2147663329}
!6052 = !DILocation(line: 316, column: 1, scope: !5440)
!6053 = !{i64 2147663454, i64 2147663497, i64 2147663537}
!6054 = !DILocation(line: 317, column: 1, scope: !5440)
!6055 = !{i64 2147663644, i64 2147663687, i64 2147663727}
!6056 = !DILocation(line: 318, column: 1, scope: !5440)
!6057 = !{i64 2147663870, i64 2147663913, i64 2147663953}
!6058 = !DILocation(line: 319, column: 1, scope: !5440)
!6059 = !{i64 2147664059, i64 2147664102, i64 2147664142}
!6060 = !DILocation(line: 320, column: 1, scope: !5440)
!6061 = !{i64 2147664330, i64 2147664373, i64 2147664413}
!6062 = !DILocation(line: 321, column: 1, scope: !5440)
!6063 = !{i64 2147664550, i64 2147664593, i64 2147664633}
!6064 = !DILocation(line: 322, column: 1, scope: !5440)
!6065 = !{i64 2147664803, i64 2147664846, i64 2147664886}
!6066 = !DILocation(line: 323, column: 1, scope: !5440)
!6067 = !{i64 2147665011, i64 2147665054, i64 2147665094}
!6068 = !DILocation(line: 324, column: 1, scope: !5440)
!6069 = !{i64 2147665243, i64 2147665286, i64 2147665326}
!6070 = !DILocation(line: 325, column: 1, scope: !5440)
!6071 = !{i64 2147665454, i64 2147665497, i64 2147665537}
!6072 = !DILocation(line: 326, column: 1, scope: !5440)
!6073 = !{i64 2147665644, i64 2147665687, i64 2147665727}
!6074 = !DILocation(line: 327, column: 1, scope: !5440)
!6075 = !{i64 2147665858, i64 2147665901, i64 2147665941}
!6076 = !DILocation(line: 328, column: 1, scope: !5440)
!6077 = !{i64 2147666057, i64 2147666100, i64 2147666140}
!6078 = !DILocation(line: 329, column: 1, scope: !5440)
!6079 = !{i64 2147666244, i64 2147666287, i64 2147666327}
!6080 = !DILocation(line: 330, column: 1, scope: !5440)
!6081 = !{i64 2147666452, i64 2147666495, i64 2147666535}
!6082 = !DILocation(line: 331, column: 1, scope: !5440)
!6083 = !{i64 2147666681, i64 2147666724, i64 2147666764}
!6084 = !DILocation(line: 332, column: 1, scope: !5440)
!6085 = !{i64 2147666883, i64 2147666926, i64 2147666966}
!6086 = !DILocation(line: 333, column: 1, scope: !5440)
!6087 = !{i64 2147667082, i64 2147667125, i64 2147667165}
!6088 = !DILocation(line: 334, column: 1, scope: !5440)
!6089 = !{i64 2147667299, i64 2147667342, i64 2147667382}
!6090 = !DILocation(line: 336, column: 1, scope: !5440)
!6091 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !324, file: !324, line: 30, type: !331, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !307, retainedNodes: !6092)
!6092 = !{!6093, !6094}
!6093 = !DILocalVariable(name: "arg", arg: 1, scope: !6091, file: !324, line: 30, type: !333)
!6094 = !DILocalVariable(name: "key", scope: !6091, file: !324, line: 32, type: !110)
!6095 = !DILocation(line: 0, scope: !6091)
!6096 = !DILocation(line: 37, column: 2, scope: !6091)
!6097 = !DILocation(line: 38, column: 2, scope: !6091)
!6098 = !DILocation(line: 55, column: 2, scope: !6099, inlinedAt: !6106)
!6099 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6100, file: !6100, line: 42, type: !6101, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !307, retainedNodes: !6103)
!6100 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6101 = !DISubroutineType(types: !6102)
!6102 = !{!32}
!6103 = !{!6104, !6105}
!6104 = !DILocalVariable(name: "key", scope: !6099, file: !6100, line: 44, type: !32)
!6105 = !DILocalVariable(name: "tmp", scope: !6099, file: !6100, line: 53, type: !32)
!6106 = distinct !DILocation(line: 40, column: 8, scope: !6091)
!6107 = !{i64 2110171}
!6108 = !DILocation(line: 0, scope: !6099, inlinedAt: !6106)
!6109 = !DILocalVariable(name: "key", arg: 1, scope: !6110, file: !6100, line: 84, type: !32)
!6110 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6100, file: !6100, line: 84, type: !6111, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !307, retainedNodes: !6113)
!6111 = !DISubroutineType(types: !6112)
!6112 = !{null, !32}
!6113 = !{!6109}
!6114 = !DILocation(line: 0, scope: !6110, inlinedAt: !6115)
!6115 = distinct !DILocation(line: 47, column: 2, scope: !6091)
!6116 = !DILocation(line: 95, column: 2, scope: !6110, inlinedAt: !6115)
!6117 = !{i64 2110988}
!6118 = !DILocation(line: 51, column: 18, scope: !6091)
!6119 = !DILocation(line: 53, column: 2, scope: !6091)
!6120 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !6121, file: !6121, line: 1609, type: !3096, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !307, retainedNodes: !2036)
!6121 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6122 = !DILocation(line: 1611, column: 3, scope: !6120)
!6123 = !DILocation(line: 1612, column: 1, scope: !6120)
!6124 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !6121, file: !6121, line: 1629, type: !3096, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !307, retainedNodes: !2036)
!6125 = !DILocation(line: 1631, column: 3, scope: !6124)
!6126 = !DILocation(line: 1632, column: 1, scope: !6124)
!6127 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !361, file: !361, line: 26, type: !367, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !358, retainedNodes: !6128)
!6128 = !{!6129}
!6129 = !DILocalVariable(name: "dev", arg: 1, scope: !6127, file: !361, line: 26, type: !369)
!6130 = !DILocation(line: 0, scope: !6127)
!6131 = !DILocation(line: 68, column: 2, scope: !6127)
!6132 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !6133, file: !6133, line: 14, type: !4394, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !6134)
!6133 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6134 = !{!6135, !6136}
!6135 = !DILocalVariable(name: "fmt", arg: 1, scope: !6132, file: !6133, line: 14, type: !279)
!6136 = !DILocalVariable(name: "ap", scope: !6132, file: !6133, line: 16, type: !6137)
!6137 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3400, line: 99, baseType: !6138)
!6138 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3400, line: 40, baseType: !6139)
!6139 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !6133, baseType: !6140)
!6140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6141)
!6141 = !{!6142}
!6142 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !6140, file: !6133, line: 16, baseType: !107, size: 32)
!6143 = !DILocation(line: 0, scope: !6132)
!6144 = !DILocation(line: 16, column: 2, scope: !6132)
!6145 = !DILocation(line: 16, column: 10, scope: !6132)
!6146 = !DILocation(line: 18, column: 2, scope: !6132)
!6147 = !DILocation(line: 19, column: 2, scope: !6132)
!6148 = !DILocation(line: 20, column: 2, scope: !6132)
!6149 = !DILocation(line: 21, column: 1, scope: !6132)
!6150 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !6133, file: !6133, line: 23, type: !6151, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !6153)
!6151 = !DISubroutineType(types: !6152)
!6152 = !{null, !279, !6137}
!6153 = !{!6154, !6155}
!6154 = !DILocalVariable(name: "fmt", arg: 1, scope: !6150, file: !6133, line: 23, type: !279)
!6155 = !DILocalVariable(name: "ap", arg: 2, scope: !6150, file: !6133, line: 23, type: !6137)
!6156 = !DILocation(line: 0, scope: !6150)
!6157 = !DILocation(line: 25, column: 2, scope: !6150)
!6158 = !DILocation(line: 26, column: 1, scope: !6150)
!6159 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !6133, file: !6133, line: 52, type: !6160, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !6162)
!6160 = !DISubroutineType(types: !6161)
!6161 = !{null, !109, !13, !232}
!6162 = !{!6163, !6164, !6165, !6166}
!6163 = !DILocalVariable(name: "level", arg: 1, scope: !6159, file: !6133, line: 52, type: !109)
!6164 = !DILocalVariable(name: "data", arg: 2, scope: !6159, file: !6133, line: 52, type: !13)
!6165 = !DILocalVariable(name: "size", arg: 3, scope: !6159, file: !6133, line: 52, type: !232)
!6166 = !DILocalVariable(name: "data_buffer", scope: !6159, file: !6133, line: 54, type: !279)
!6167 = !DILocation(line: 0, scope: !6159)
!6168 = !DILocation(line: 55, column: 14, scope: !6159)
!6169 = !DILocation(line: 55, column: 2, scope: !6159)
!6170 = !DILocation(line: 56, column: 3, scope: !6171)
!6171 = distinct !DILexicalBlock(scope: !6159, file: !6133, line: 55, column: 20)
!6172 = !DILocation(line: 57, column: 3, scope: !6171)
!6173 = !DILocation(line: 59, column: 7, scope: !6171)
!6174 = distinct !{!6174, !6169, !6175}
!6175 = !DILocation(line: 65, column: 2, scope: !6159)
!6176 = !DILocation(line: 66, column: 1, scope: !6159)
!6177 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !6178, file: !6178, line: 175, type: !6179, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !6181)
!6178 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6179 = !DISubroutineType(types: !6180)
!6180 = !{!148, !109}
!6181 = !{!6182}
!6182 = !DILocalVariable(name: "level", arg: 1, scope: !6177, file: !6178, line: 175, type: !109)
!6183 = !DILocation(line: 0, scope: !6177)
!6184 = !DILocation(line: 177, column: 2, scope: !6177)
!6185 = !DILocation(line: 189, column: 1, scope: !6177)
!6186 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !6133, file: !6133, line: 28, type: !6187, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !6189)
!6187 = !DISubroutineType(types: !6188)
!6188 = !{null, !279, !232}
!6189 = !{!6190, !6191, !6192, !6194, !6196}
!6190 = !DILocalVariable(name: "data", arg: 1, scope: !6186, file: !6133, line: 28, type: !279)
!6191 = !DILocalVariable(name: "length", arg: 2, scope: !6186, file: !6133, line: 28, type: !232)
!6192 = !DILocalVariable(name: "i", scope: !6193, file: !6133, line: 30, type: !232)
!6193 = distinct !DILexicalBlock(scope: !6186, file: !6133, line: 30, column: 2)
!6194 = !DILocalVariable(name: "i", scope: !6195, file: !6133, line: 40, type: !232)
!6195 = distinct !DILexicalBlock(scope: !6186, file: !6133, line: 40, column: 2)
!6196 = !DILocalVariable(name: "c", scope: !6197, file: !6133, line: 42, type: !179)
!6197 = distinct !DILexicalBlock(scope: !6198, file: !6133, line: 41, column: 19)
!6198 = distinct !DILexicalBlock(scope: !6199, file: !6133, line: 41, column: 7)
!6199 = distinct !DILexicalBlock(scope: !6200, file: !6133, line: 40, column: 54)
!6200 = distinct !DILexicalBlock(scope: !6195, file: !6133, line: 40, column: 2)
!6201 = !DILocation(line: 0, scope: !6186)
!6202 = !DILocation(line: 0, scope: !6193)
!6203 = !DILocation(line: 30, column: 2, scope: !6193)
!6204 = !DILocation(line: 38, column: 2, scope: !6186)
!6205 = !DILocation(line: 0, scope: !6195)
!6206 = !DILocation(line: 40, column: 2, scope: !6195)
!6207 = !DILocation(line: 31, column: 9, scope: !6208)
!6208 = distinct !DILexicalBlock(scope: !6209, file: !6133, line: 31, column: 7)
!6209 = distinct !DILexicalBlock(scope: !6210, file: !6133, line: 30, column: 54)
!6210 = distinct !DILexicalBlock(scope: !6193, file: !6133, line: 30, column: 2)
!6211 = !DILocation(line: 31, column: 7, scope: !6209)
!6212 = !DILocation(line: 32, column: 35, scope: !6213)
!6213 = distinct !DILexicalBlock(scope: !6208, file: !6133, line: 31, column: 19)
!6214 = !DILocation(line: 32, column: 20, scope: !6213)
!6215 = !DILocation(line: 32, column: 4, scope: !6213)
!6216 = !DILocation(line: 33, column: 3, scope: !6213)
!6217 = !DILocation(line: 34, column: 4, scope: !6218)
!6218 = distinct !DILexicalBlock(scope: !6208, file: !6133, line: 33, column: 10)
!6219 = !DILocation(line: 30, column: 50, scope: !6210)
!6220 = !DILocation(line: 30, column: 24, scope: !6210)
!6221 = distinct !{!6221, !6203, !6222}
!6222 = !DILocation(line: 36, column: 2, scope: !6193)
!6223 = !DILocation(line: 49, column: 2, scope: !6186)
!6224 = !DILocation(line: 50, column: 1, scope: !6186)
!6225 = !DILocation(line: 41, column: 9, scope: !6198)
!6226 = !DILocation(line: 41, column: 7, scope: !6199)
!6227 = !DILocation(line: 42, column: 22, scope: !6197)
!6228 = !DILocation(line: 0, scope: !6197)
!6229 = !DILocation(line: 44, column: 25, scope: !6197)
!6230 = !DILocation(line: 44, column: 17, scope: !6197)
!6231 = !DILocation(line: 44, column: 33, scope: !6197)
!6232 = !DILocation(line: 44, column: 4, scope: !6197)
!6233 = !DILocation(line: 45, column: 3, scope: !6197)
!6234 = !DILocation(line: 46, column: 4, scope: !6235)
!6235 = distinct !DILexicalBlock(scope: !6198, file: !6133, line: 45, column: 10)
!6236 = !DILocation(line: 40, column: 50, scope: !6200)
!6237 = !DILocation(line: 40, column: 24, scope: !6200)
!6238 = distinct !{!6238, !6206, !6239}
!6239 = !DILocation(line: 48, column: 2, scope: !6195)
!6240 = distinct !DISubprogram(name: "isprint", scope: !5184, file: !5184, line: 37, type: !303, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !6241)
!6241 = !{!6242}
!6242 = !DILocalVariable(name: "c", arg: 1, scope: !6240, file: !5184, line: 37, type: !109)
!6243 = !DILocation(line: 0, scope: !6240)
!6244 = !DILocation(line: 39, column: 38, scope: !6240)
!6245 = !DILocation(line: 39, column: 2, scope: !6240)
!6246 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6247, file: !6247, line: 57, type: !6248, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2562, retainedNodes: !6294)
!6247 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6248 = !DISubroutineType(types: !6249)
!6249 = !{null, !32, !6250}
!6250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6251, size: 32)
!6251 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6252)
!6252 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2682, line: 141, baseType: !6253)
!6253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2682, line: 97, size: 256, elements: !6254)
!6254 = !{!6255}
!6255 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6253, file: !2682, line: 107, baseType: !6256, size: 256)
!6256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2682, line: 98, size: 256, elements: !6257)
!6257 = !{!6258, !6263, !6268, !6273, !6278, !6283, !6288, !6293}
!6258 = !DIDerivedType(tag: DW_TAG_member, scope: !6256, file: !2682, line: 99, baseType: !6259, size: 32)
!6259 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6256, file: !2682, line: 99, size: 32, elements: !6260)
!6260 = !{!6261, !6262}
!6261 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6259, file: !2682, line: 99, baseType: !110, size: 32)
!6262 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6259, file: !2682, line: 99, baseType: !110, size: 32)
!6263 = !DIDerivedType(tag: DW_TAG_member, scope: !6256, file: !2682, line: 100, baseType: !6264, size: 32, offset: 32)
!6264 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6256, file: !2682, line: 100, size: 32, elements: !6265)
!6265 = !{!6266, !6267}
!6266 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6264, file: !2682, line: 100, baseType: !110, size: 32)
!6267 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6264, file: !2682, line: 100, baseType: !110, size: 32)
!6268 = !DIDerivedType(tag: DW_TAG_member, scope: !6256, file: !2682, line: 101, baseType: !6269, size: 32, offset: 64)
!6269 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6256, file: !2682, line: 101, size: 32, elements: !6270)
!6270 = !{!6271, !6272}
!6271 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6269, file: !2682, line: 101, baseType: !110, size: 32)
!6272 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6269, file: !2682, line: 101, baseType: !110, size: 32)
!6273 = !DIDerivedType(tag: DW_TAG_member, scope: !6256, file: !2682, line: 102, baseType: !6274, size: 32, offset: 96)
!6274 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6256, file: !2682, line: 102, size: 32, elements: !6275)
!6275 = !{!6276, !6277}
!6276 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6274, file: !2682, line: 102, baseType: !110, size: 32)
!6277 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6274, file: !2682, line: 102, baseType: !110, size: 32)
!6278 = !DIDerivedType(tag: DW_TAG_member, scope: !6256, file: !2682, line: 103, baseType: !6279, size: 32, offset: 128)
!6279 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6256, file: !2682, line: 103, size: 32, elements: !6280)
!6280 = !{!6281, !6282}
!6281 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6279, file: !2682, line: 103, baseType: !110, size: 32)
!6282 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6279, file: !2682, line: 103, baseType: !110, size: 32)
!6283 = !DIDerivedType(tag: DW_TAG_member, scope: !6256, file: !2682, line: 104, baseType: !6284, size: 32, offset: 160)
!6284 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6256, file: !2682, line: 104, size: 32, elements: !6285)
!6285 = !{!6286, !6287}
!6286 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6284, file: !2682, line: 104, baseType: !110, size: 32)
!6287 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6284, file: !2682, line: 104, baseType: !110, size: 32)
!6288 = !DIDerivedType(tag: DW_TAG_member, scope: !6256, file: !2682, line: 105, baseType: !6289, size: 32, offset: 192)
!6289 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6256, file: !2682, line: 105, size: 32, elements: !6290)
!6290 = !{!6291, !6292}
!6291 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6289, file: !2682, line: 105, baseType: !110, size: 32)
!6292 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6289, file: !2682, line: 105, baseType: !110, size: 32)
!6293 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6256, file: !2682, line: 106, baseType: !110, size: 32, offset: 224)
!6294 = !{!6295, !6296}
!6295 = !DILocalVariable(name: "reason", arg: 1, scope: !6246, file: !6247, line: 57, type: !32)
!6296 = !DILocalVariable(name: "esf", arg: 2, scope: !6246, file: !6247, line: 57, type: !6250)
!6297 = !DILocation(line: 0, scope: !6246)
!6298 = !DILocation(line: 60, column: 10, scope: !6299)
!6299 = distinct !DILexicalBlock(scope: !6246, file: !6247, line: 60, column: 6)
!6300 = !DILocation(line: 60, column: 6, scope: !6246)
!6301 = !DILocation(line: 61, column: 3, scope: !6302)
!6302 = distinct !DILexicalBlock(scope: !6299, file: !6247, line: 60, column: 19)
!6303 = !DILocation(line: 62, column: 2, scope: !6302)
!6304 = !DILocation(line: 63, column: 2, scope: !6246)
!6305 = !DILocation(line: 64, column: 1, scope: !6246)
!6306 = distinct !DISubprogram(name: "esf_dump", scope: !6247, file: !6247, line: 20, type: !6307, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2562, retainedNodes: !6309)
!6307 = !DISubroutineType(types: !6308)
!6308 = !{null, !6250}
!6309 = !{!6310}
!6310 = !DILocalVariable(name: "esf", arg: 1, scope: !6306, file: !6247, line: 20, type: !6250)
!6311 = !DILocation(line: 0, scope: !6306)
!6312 = !DILocation(line: 22, column: 2, scope: !6313)
!6313 = distinct !DILexicalBlock(scope: !6314, file: !6247, line: 22, column: 2)
!6314 = distinct !DILexicalBlock(scope: !6315, file: !6247, line: 22, column: 2)
!6315 = distinct !DILexicalBlock(scope: !6316, file: !6247, line: 22, column: 2)
!6316 = distinct !DILexicalBlock(scope: !6306, file: !6247, line: 22, column: 2)
!6317 = !DILocation(line: 24, column: 2, scope: !6318)
!6318 = distinct !DILexicalBlock(scope: !6319, file: !6247, line: 24, column: 2)
!6319 = distinct !DILexicalBlock(scope: !6320, file: !6247, line: 24, column: 2)
!6320 = distinct !DILexicalBlock(scope: !6321, file: !6247, line: 24, column: 2)
!6321 = distinct !DILexicalBlock(scope: !6306, file: !6247, line: 24, column: 2)
!6322 = !DILocation(line: 26, column: 2, scope: !6323)
!6323 = distinct !DILexicalBlock(scope: !6324, file: !6247, line: 26, column: 2)
!6324 = distinct !DILexicalBlock(scope: !6325, file: !6247, line: 26, column: 2)
!6325 = distinct !DILexicalBlock(scope: !6326, file: !6247, line: 26, column: 2)
!6326 = distinct !DILexicalBlock(scope: !6306, file: !6247, line: 26, column: 2)
!6327 = !DILocation(line: 53, column: 2, scope: !6328)
!6328 = distinct !DILexicalBlock(scope: !6329, file: !6247, line: 53, column: 2)
!6329 = distinct !DILexicalBlock(scope: !6330, file: !6247, line: 53, column: 2)
!6330 = distinct !DILexicalBlock(scope: !6331, file: !6247, line: 53, column: 2)
!6331 = distinct !DILexicalBlock(scope: !6306, file: !6247, line: 53, column: 2)
!6332 = !DILocation(line: 55, column: 1, scope: !6306)
!6333 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6247, file: !6247, line: 82, type: !6334, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2562, retainedNodes: !6349)
!6334 = !DISubroutineType(types: !6335)
!6335 = !{null, !6250, !6336}
!6336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6337, size: 32)
!6337 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !209, line: 37, baseType: !6338)
!6338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !6339)
!6339 = !{!6340, !6341, !6342, !6343, !6344, !6345, !6346, !6347, !6348}
!6340 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6338, file: !209, line: 26, baseType: !110, size: 32)
!6341 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6338, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!6342 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6338, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!6343 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6338, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!6344 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6338, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!6345 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6338, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!6346 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6338, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!6347 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6338, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!6348 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6338, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!6349 = !{!6350, !6351, !6352}
!6350 = !DILocalVariable(name: "esf", arg: 1, scope: !6333, file: !6247, line: 82, type: !6250)
!6351 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6333, file: !6247, line: 82, type: !6336)
!6352 = !DILocalVariable(name: "reason", scope: !6333, file: !6247, line: 88, type: !32)
!6353 = !DILocation(line: 0, scope: !6333)
!6354 = !DILocation(line: 88, column: 35, scope: !6333)
!6355 = !DILocation(line: 108, column: 2, scope: !6333)
!6356 = !DILocation(line: 131, column: 1, scope: !6333)
!6357 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6247, file: !6247, line: 133, type: !6358, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2562, retainedNodes: !6360)
!6358 = !DISubroutineType(types: !6359)
!6359 = !{null, !107}
!6360 = !{!6361, !6362, !6363}
!6361 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6357, file: !6247, line: 133, type: !107)
!6362 = !DILocalVariable(name: "ssf_contents", scope: !6357, file: !6247, line: 135, type: !886)
!6363 = !DILocalVariable(name: "oops_esf", scope: !6357, file: !6247, line: 136, type: !6252)
!6364 = !DILocation(line: 0, scope: !6357)
!6365 = !DILocation(line: 136, column: 2, scope: !6357)
!6366 = !DILocation(line: 136, column: 15, scope: !6357)
!6367 = !DILocation(line: 139, column: 22, scope: !6357)
!6368 = !DILocation(line: 139, column: 17, scope: !6357)
!6369 = !DILocation(line: 139, column: 20, scope: !6357)
!6370 = !DILocation(line: 141, column: 2, scope: !6357)
!6371 = !DILocation(line: 142, column: 2, scope: !6357)
!6372 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6373, file: !6373, line: 40, type: !6111, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !6374)
!6373 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6374 = !{!6375}
!6375 = !DILocalVariable(name: "irq", arg: 1, scope: !6372, file: !6373, line: 40, type: !32)
!6376 = !DILocation(line: 0, scope: !6372)
!6377 = !DILocation(line: 42, column: 2, scope: !6372)
!6378 = !DILocation(line: 43, column: 1, scope: !6372)
!6379 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !535, file: !535, line: 1684, type: !6380, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !6382)
!6380 = !DISubroutineType(types: !6381)
!6381 = !{null, !792}
!6382 = !{!6383}
!6383 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6379, file: !535, line: 1684, type: !792)
!6384 = !DILocation(line: 0, scope: !6379)
!6385 = !DILocation(line: 1686, column: 23, scope: !6386)
!6386 = distinct !DILexicalBlock(scope: !6379, file: !535, line: 1686, column: 7)
!6387 = !DILocation(line: 1686, column: 7, scope: !6379)
!6388 = !DILocation(line: 1688, column: 5, scope: !6389)
!6389 = distinct !DILexicalBlock(scope: !6386, file: !535, line: 1687, column: 3)
!6390 = !{i64 2151073289}
!6391 = !DILocation(line: 1689, column: 81, scope: !6389)
!6392 = !DILocation(line: 1689, column: 60, scope: !6389)
!6393 = !DILocation(line: 1689, column: 34, scope: !6389)
!6394 = !DILocation(line: 1689, column: 5, scope: !6389)
!6395 = !DILocation(line: 1689, column: 43, scope: !6389)
!6396 = !DILocation(line: 1690, column: 5, scope: !6389)
!6397 = !{i64 2151073403}
!6398 = !DILocation(line: 1691, column: 3, scope: !6389)
!6399 = !DILocation(line: 1692, column: 1, scope: !6379)
!6400 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6373, file: !6373, line: 45, type: !6111, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !6401)
!6401 = !{!6402}
!6402 = !DILocalVariable(name: "irq", arg: 1, scope: !6400, file: !6373, line: 45, type: !32)
!6403 = !DILocation(line: 0, scope: !6400)
!6404 = !DILocation(line: 47, column: 2, scope: !6400)
!6405 = !DILocation(line: 48, column: 1, scope: !6400)
!6406 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !535, file: !535, line: 1722, type: !6380, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !6407)
!6407 = !{!6408}
!6408 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6406, file: !535, line: 1722, type: !792)
!6409 = !DILocation(line: 0, scope: !6406)
!6410 = !DILocation(line: 1724, column: 23, scope: !6411)
!6411 = distinct !DILexicalBlock(scope: !6406, file: !535, line: 1724, column: 7)
!6412 = !DILocation(line: 1724, column: 7, scope: !6406)
!6413 = !DILocation(line: 1726, column: 81, scope: !6414)
!6414 = distinct !DILexicalBlock(scope: !6411, file: !535, line: 1725, column: 3)
!6415 = !DILocation(line: 1726, column: 60, scope: !6414)
!6416 = !DILocation(line: 1726, column: 34, scope: !6414)
!6417 = !DILocation(line: 1726, column: 5, scope: !6414)
!6418 = !DILocation(line: 1726, column: 43, scope: !6414)
!6419 = !DILocation(line: 271, column: 3, scope: !6420, inlinedAt: !6422)
!6420 = distinct !DISubprogram(name: "__DSB", scope: !6421, file: !6421, line: 269, type: !3096, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !2036)
!6421 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6422 = distinct !DILocation(line: 1727, column: 5, scope: !6414)
!6423 = !{i64 3527672}
!6424 = !DILocation(line: 260, column: 3, scope: !6425, inlinedAt: !6426)
!6425 = distinct !DISubprogram(name: "__ISB", scope: !6421, file: !6421, line: 258, type: !3096, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !2036)
!6426 = distinct !DILocation(line: 1728, column: 5, scope: !6414)
!6427 = !{i64 3527389}
!6428 = !DILocation(line: 1729, column: 3, scope: !6414)
!6429 = !DILocation(line: 1730, column: 1, scope: !6406)
!6430 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6373, file: !6373, line: 50, type: !6431, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !6433)
!6431 = !DISubroutineType(types: !6432)
!6432 = !{!109, !32}
!6433 = !{!6434}
!6434 = !DILocalVariable(name: "irq", arg: 1, scope: !6430, file: !6373, line: 50, type: !32)
!6435 = !DILocation(line: 0, scope: !6430)
!6436 = !DILocation(line: 52, column: 20, scope: !6430)
!6437 = !DILocation(line: 52, column: 9, scope: !6430)
!6438 = !DILocation(line: 52, column: 41, scope: !6430)
!6439 = !DILocation(line: 52, column: 39, scope: !6430)
!6440 = !DILocation(line: 52, column: 2, scope: !6430)
!6441 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6373, file: !6373, line: 64, type: !6442, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !6444)
!6442 = !DISubroutineType(types: !6443)
!6443 = !{null, !32, !32, !110}
!6444 = !{!6445, !6446, !6447}
!6445 = !DILocalVariable(name: "irq", arg: 1, scope: !6441, file: !6373, line: 64, type: !32)
!6446 = !DILocalVariable(name: "prio", arg: 2, scope: !6441, file: !6373, line: 64, type: !32)
!6447 = !DILocalVariable(name: "flags", arg: 3, scope: !6441, file: !6373, line: 64, type: !110)
!6448 = !DILocation(line: 0, scope: !6441)
!6449 = !DILocation(line: 83, column: 8, scope: !6450)
!6450 = distinct !DILexicalBlock(scope: !6451, file: !6373, line: 82, column: 9)
!6451 = distinct !DILexicalBlock(scope: !6441, file: !6373, line: 76, column: 6)
!6452 = !DILocation(line: 91, column: 2, scope: !6453)
!6453 = distinct !DILexicalBlock(scope: !6454, file: !6373, line: 91, column: 2)
!6454 = distinct !DILexicalBlock(scope: !6441, file: !6373, line: 91, column: 2)
!6455 = !DILocation(line: 91, column: 2, scope: !6454)
!6456 = !DILocation(line: 91, column: 2, scope: !6457)
!6457 = distinct !DILexicalBlock(scope: !6453, file: !6373, line: 91, column: 2)
!6458 = !DILocation(line: 95, column: 2, scope: !6441)
!6459 = !DILocation(line: 96, column: 1, scope: !6441)
!6460 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !535, file: !535, line: 1814, type: !6461, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !6463)
!6461 = !DISubroutineType(types: !6462)
!6462 = !{null, !792, !110}
!6463 = !{!6464, !6465}
!6464 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6460, file: !535, line: 1814, type: !792)
!6465 = !DILocalVariable(name: "priority", arg: 2, scope: !6460, file: !535, line: 1814, type: !110)
!6466 = !DILocation(line: 0, scope: !6460)
!6467 = !DILocation(line: 0, scope: !6468)
!6468 = distinct !DILexicalBlock(scope: !6460, file: !535, line: 1816, column: 7)
!6469 = !DILocation(line: 1816, column: 7, scope: !6460)
!6470 = !DILocation(line: 1824, column: 1, scope: !6460)
!6471 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6373, file: !6373, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !6472)
!6472 = !{!6473}
!6473 = !DILocalVariable(name: "unused", arg: 1, scope: !6471, file: !6373, line: 155, type: !13)
!6474 = !DILocation(line: 0, scope: !6471)
!6475 = !DILocation(line: 159, column: 2, scope: !6471)
!6476 = !DILocation(line: 160, column: 1, scope: !6471)
!6477 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6478, file: !6478, line: 87, type: !3096, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !2036)
!6478 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6479 = !DILocation(line: 89, column: 2, scope: !6477)
!6480 = !DILocation(line: 90, column: 2, scope: !6477)
!6481 = !DILocation(line: 91, column: 1, scope: !6477)
!6482 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6478, file: !6478, line: 23, type: !3096, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2036)
!6483 = !DISubprogram(name: "z_arm_int_exit", scope: !6484, file: !6484, line: 153, type: !3096, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2036)
!6484 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6485 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6486, file: !6486, line: 256, type: !3096, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2621, retainedNodes: !2036)
!6486 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6487 = !DILocation(line: 258, column: 2, scope: !6485)
!6488 = !DILocation(line: 260, column: 2, scope: !6485)
!6489 = !DILocation(line: 262, column: 2, scope: !6485)
!6490 = !DILocation(line: 263, column: 2, scope: !6485)
!6491 = !DILocation(line: 267, column: 2, scope: !6485)
!6492 = !DILocation(line: 268, column: 2, scope: !6485)
!6493 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6486, file: !6486, line: 53, type: !3096, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2621, retainedNodes: !2036)
!6494 = !DILocation(line: 55, column: 12, scope: !6493)
!6495 = !DILocation(line: 271, column: 3, scope: !6496, inlinedAt: !6497)
!6496 = distinct !DISubprogram(name: "__DSB", scope: !6421, file: !6421, line: 269, type: !3096, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2621, retainedNodes: !2036)
!6497 = distinct !DILocation(line: 56, column: 2, scope: !6493)
!6498 = !{i64 3526343}
!6499 = !DILocation(line: 260, column: 3, scope: !6500, inlinedAt: !6501)
!6500 = distinct !DISubprogram(name: "__ISB", scope: !6421, file: !6421, line: 258, type: !3096, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2621, retainedNodes: !2036)
!6501 = distinct !DILocation(line: 57, column: 2, scope: !6493)
!6502 = !{i64 3526060}
!6503 = !DILocation(line: 58, column: 1, scope: !6493)
!6504 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6486, file: !6486, line: 96, type: !3096, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2621, retainedNodes: !2036)
!6505 = !DILocation(line: 103, column: 13, scope: !6504)
!6506 = !DILocation(line: 975, column: 3, scope: !6507, inlinedAt: !6512)
!6507 = distinct !DISubprogram(name: "__get_CONTROL", scope: !6421, file: !6421, line: 971, type: !6508, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2621, retainedNodes: !6510)
!6508 = !DISubroutineType(types: !6509)
!6509 = !{!110}
!6510 = !{!6511}
!6511 = !DILocalVariable(name: "result", scope: !6507, file: !6421, line: 973, type: !110)
!6512 = distinct !DILocation(line: 189, column: 16, scope: !6504)
!6513 = !{i64 3547173}
!6514 = !DILocation(line: 0, scope: !6507, inlinedAt: !6512)
!6515 = !DILocation(line: 189, column: 32, scope: !6504)
!6516 = !DILocalVariable(name: "control", arg: 1, scope: !6517, file: !6421, line: 1001, type: !110)
!6517 = distinct !DISubprogram(name: "__set_CONTROL", scope: !6421, file: !6421, line: 1001, type: !6518, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2621, retainedNodes: !6520)
!6518 = !DISubroutineType(types: !6519)
!6519 = !{null, !110}
!6520 = !{!6516}
!6521 = !DILocation(line: 0, scope: !6517, inlinedAt: !6522)
!6522 = distinct !DILocation(line: 189, column: 2, scope: !6504)
!6523 = !DILocation(line: 1003, column: 3, scope: !6517, inlinedAt: !6522)
!6524 = !{i64 3547893}
!6525 = !DILocation(line: 260, column: 3, scope: !6500, inlinedAt: !6526)
!6526 = distinct !DILocation(line: 1004, column: 3, scope: !6517, inlinedAt: !6522)
!6527 = !DILocation(line: 191, column: 1, scope: !6504)
!6528 = distinct !DISubprogram(name: "arch_swap", scope: !6529, file: !6529, line: 33, type: !6431, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2649, retainedNodes: !6530)
!6529 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6530 = !{!6531}
!6531 = !DILocalVariable(name: "key", arg: 1, scope: !6528, file: !6529, line: 33, type: !32)
!6532 = !DILocation(line: 0, scope: !6528)
!6533 = !DILocation(line: 36, column: 2, scope: !6528)
!6534 = !DILocation(line: 36, column: 17, scope: !6528)
!6535 = !DILocation(line: 36, column: 25, scope: !6528)
!6536 = !DILocation(line: 37, column: 37, scope: !6528)
!6537 = !DILocation(line: 37, column: 17, scope: !6528)
!6538 = !DILocation(line: 37, column: 35, scope: !6528)
!6539 = !DILocation(line: 41, column: 12, scope: !6528)
!6540 = !DILocalVariable(name: "key", arg: 1, scope: !6541, file: !6100, line: 84, type: !32)
!6541 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6100, file: !6100, line: 84, type: !6111, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2649, retainedNodes: !6542)
!6542 = !{!6540}
!6543 = !DILocation(line: 0, scope: !6541, inlinedAt: !6544)
!6544 = distinct !DILocation(line: 44, column: 2, scope: !6528)
!6545 = !DILocation(line: 95, column: 2, scope: !6541, inlinedAt: !6544)
!6546 = !{i64 2225665}
!6547 = !DILocation(line: 53, column: 9, scope: !6528)
!6548 = !DILocation(line: 53, column: 24, scope: !6528)
!6549 = !DILocation(line: 53, column: 2, scope: !6528)
!6550 = distinct !DISubprogram(name: "arch_new_thread", scope: !6551, file: !6551, line: 56, type: !6552, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2677, retainedNodes: !6662)
!6551 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6552 = !DISubroutineType(types: !6553)
!6553 = !{null, !6554, !6657, !285, !3364, !107, !107, !107}
!6554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6555, size: 32)
!6555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1280, elements: !6556)
!6556 = !{!6557, !6615, !6627, !6628, !6629, !6630, !6631, !6637, !6652}
!6557 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6555, file: !156, line: 247, baseType: !6558, size: 384)
!6558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 384, elements: !6559)
!6559 = !{!6560, !6584, !6591, !6592, !6593, !6602, !6603, !6604}
!6560 = !DIDerivedType(tag: DW_TAG_member, scope: !6558, file: !156, line: 60, baseType: !6561, size: 64)
!6561 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6558, file: !156, line: 60, size: 64, elements: !6562)
!6562 = !{!6563, !6578}
!6563 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6561, file: !156, line: 61, baseType: !6564, size: 64)
!6564 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !6565)
!6565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !6566)
!6566 = !{!6567, !6573}
!6567 = !DIDerivedType(tag: DW_TAG_member, scope: !6565, file: !127, line: 38, baseType: !6568, size: 32)
!6568 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6565, file: !127, line: 38, size: 32, elements: !6569)
!6569 = !{!6570, !6572}
!6570 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6568, file: !127, line: 39, baseType: !6571, size: 32)
!6571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6565, size: 32)
!6572 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6568, file: !127, line: 40, baseType: !6571, size: 32)
!6573 = !DIDerivedType(tag: DW_TAG_member, scope: !6565, file: !127, line: 42, baseType: !6574, size: 32, offset: 32)
!6574 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6565, file: !127, line: 42, size: 32, elements: !6575)
!6575 = !{!6576, !6577}
!6576 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6574, file: !127, line: 43, baseType: !6571, size: 32)
!6577 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6574, file: !127, line: 44, baseType: !6571, size: 32)
!6578 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6561, file: !156, line: 62, baseType: !6579, size: 64)
!6579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !6580)
!6580 = !{!6581}
!6581 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6579, file: !168, line: 50, baseType: !6582, size: 64)
!6582 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6583, size: 64, elements: !173)
!6583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6579, size: 32)
!6584 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6558, file: !156, line: 68, baseType: !6585, size: 32, offset: 64)
!6585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6586, size: 32)
!6586 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !6587)
!6587 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !6588)
!6588 = !{!6589}
!6589 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6587, file: !122, line: 232, baseType: !6590, size: 64)
!6590 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !6565)
!6591 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6558, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!6592 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6558, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!6593 = !DIDerivedType(tag: DW_TAG_member, scope: !6558, file: !156, line: 90, baseType: !6594, size: 16, offset: 112)
!6594 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6558, file: !156, line: 90, size: 16, elements: !6595)
!6595 = !{!6596, !6601}
!6596 = !DIDerivedType(tag: DW_TAG_member, scope: !6594, file: !156, line: 91, baseType: !6597, size: 16)
!6597 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6594, file: !156, line: 91, size: 16, elements: !6598)
!6598 = !{!6599, !6600}
!6599 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6597, file: !156, line: 96, baseType: !188, size: 8)
!6600 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6597, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!6601 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6594, file: !156, line: 100, baseType: !192, size: 16)
!6602 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6558, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!6603 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6558, file: !156, line: 127, baseType: !107, size: 32, offset: 160)
!6604 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6558, file: !156, line: 131, baseType: !6605, size: 192, offset: 192)
!6605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !6606)
!6606 = !{!6607, !6608, !6614}
!6607 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6605, file: !122, line: 245, baseType: !6564, size: 64)
!6608 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6605, file: !122, line: 246, baseType: !6609, size: 32, offset: 64)
!6609 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !6610)
!6610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6611, size: 32)
!6611 = !DISubroutineType(types: !6612)
!6612 = !{null, !6613}
!6613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6605, size: 32)
!6614 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6605, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!6615 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6555, file: !156, line: 250, baseType: !6616, size: 288, offset: 384)
!6616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !6617)
!6617 = !{!6618, !6619, !6620, !6621, !6622, !6623, !6624, !6625, !6626}
!6618 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6616, file: !209, line: 26, baseType: !110, size: 32)
!6619 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6616, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!6620 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6616, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!6621 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6616, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!6622 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6616, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!6623 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6616, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!6624 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6616, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!6625 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6616, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!6626 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6616, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!6627 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6555, file: !156, line: 253, baseType: !107, size: 32, offset: 672)
!6628 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6555, file: !156, line: 256, baseType: !6586, size: 64, offset: 704)
!6629 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6555, file: !156, line: 279, baseType: !223, size: 256, offset: 768)
!6630 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6555, file: !156, line: 294, baseType: !109, size: 32, offset: 1024)
!6631 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6555, file: !156, line: 300, baseType: !6632, size: 96, offset: 1056)
!6632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !6633)
!6633 = !{!6634, !6635, !6636}
!6634 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6632, file: !156, line: 153, baseType: !22, size: 32)
!6635 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6632, file: !156, line: 162, baseType: !232, size: 32, offset: 32)
!6636 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6632, file: !156, line: 168, baseType: !232, size: 32, offset: 64)
!6637 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6555, file: !156, line: 325, baseType: !6638, size: 32, offset: 1152)
!6638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6639, size: 32)
!6639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !6640)
!6640 = !{!6641, !6647, !6648}
!6641 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6639, file: !118, line: 5074, baseType: !6642, size: 96)
!6642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !241, line: 56, size: 96, elements: !6643)
!6643 = !{!6644, !6645, !6646}
!6644 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6642, file: !241, line: 57, baseType: !244, size: 32)
!6645 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6642, file: !241, line: 58, baseType: !107, size: 32, offset: 32)
!6646 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6642, file: !241, line: 59, baseType: !232, size: 32, offset: 64)
!6647 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6639, file: !118, line: 5075, baseType: !6586, size: 64, offset: 96)
!6648 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6639, file: !118, line: 5076, baseType: !6649, size: 32, offset: 160)
!6649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !6650)
!6650 = !{!6651}
!6651 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !6649, file: !251, line: 52, baseType: !22, size: 32)
!6652 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6555, file: !156, line: 343, baseType: !6653, size: 64, offset: 1184)
!6653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !209, line: 60, size: 64, elements: !6654)
!6654 = !{!6655, !6656}
!6655 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6653, file: !209, line: 63, baseType: !110, size: 32)
!6656 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6653, file: !209, line: 66, baseType: !110, size: 32, offset: 32)
!6657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6658, size: 32)
!6658 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3363, line: 44, baseType: !6659)
!6659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !145, line: 47, size: 8, elements: !6660)
!6660 = !{!6661}
!6661 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6659, file: !145, line: 48, baseType: !148, size: 8)
!6662 = !{!6663, !6664, !6665, !6666, !6667, !6668, !6669, !6670}
!6663 = !DILocalVariable(name: "thread", arg: 1, scope: !6550, file: !6551, line: 56, type: !6554)
!6664 = !DILocalVariable(name: "stack", arg: 2, scope: !6550, file: !6551, line: 56, type: !6657)
!6665 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6550, file: !6551, line: 57, type: !285)
!6666 = !DILocalVariable(name: "entry", arg: 4, scope: !6550, file: !6551, line: 57, type: !3364)
!6667 = !DILocalVariable(name: "p1", arg: 5, scope: !6550, file: !6551, line: 58, type: !107)
!6668 = !DILocalVariable(name: "p2", arg: 6, scope: !6550, file: !6551, line: 58, type: !107)
!6669 = !DILocalVariable(name: "p3", arg: 7, scope: !6550, file: !6551, line: 58, type: !107)
!6670 = !DILocalVariable(name: "iframe", scope: !6550, file: !6551, line: 60, type: !2680)
!6671 = !DILocation(line: 0, scope: !6550)
!6672 = !DILocation(line: 85, column: 11, scope: !6550)
!6673 = !DILocation(line: 93, column: 10, scope: !6550)
!6674 = !DILocation(line: 98, column: 13, scope: !6550)
!6675 = !DILocation(line: 100, column: 15, scope: !6550)
!6676 = !DILocation(line: 100, column: 10, scope: !6550)
!6677 = !DILocation(line: 100, column: 13, scope: !6550)
!6678 = !DILocation(line: 101, column: 15, scope: !6550)
!6679 = !DILocation(line: 101, column: 10, scope: !6550)
!6680 = !DILocation(line: 101, column: 13, scope: !6550)
!6681 = !DILocation(line: 102, column: 15, scope: !6550)
!6682 = !DILocation(line: 102, column: 10, scope: !6550)
!6683 = !DILocation(line: 102, column: 13, scope: !6550)
!6684 = !DILocation(line: 103, column: 15, scope: !6550)
!6685 = !DILocation(line: 103, column: 10, scope: !6550)
!6686 = !DILocation(line: 103, column: 13, scope: !6550)
!6687 = !DILocation(line: 106, column: 10, scope: !6550)
!6688 = !DILocation(line: 106, column: 15, scope: !6550)
!6689 = !DILocation(line: 122, column: 29, scope: !6550)
!6690 = !DILocation(line: 122, column: 23, scope: !6550)
!6691 = !DILocation(line: 122, column: 27, scope: !6550)
!6692 = !DILocation(line: 123, column: 15, scope: !6550)
!6693 = !DILocation(line: 123, column: 23, scope: !6550)
!6694 = !DILocation(line: 143, column: 1, scope: !6550)
!6695 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6551, file: !6551, line: 385, type: !6696, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2677, retainedNodes: !6699)
!6696 = !DISubroutineType(types: !6697)
!6697 = !{!110, !6698, !6698}
!6698 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !110)
!6699 = !{!6700, !6701, !6702, !6705}
!6700 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !6695, file: !6551, line: 385, type: !6698)
!6701 = !DILocalVariable(name: "psp", arg: 2, scope: !6695, file: !6551, line: 385, type: !6698)
!6702 = !DILocalVariable(name: "thread", scope: !6695, file: !6551, line: 388, type: !6703)
!6703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6704, size: 32)
!6704 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6555)
!6705 = !DILocalVariable(name: "guard_len", scope: !6695, file: !6551, line: 405, type: !110)
!6706 = !DILocation(line: 0, scope: !6695)
!6707 = !DILocation(line: 388, column: 34, scope: !6695)
!6708 = !DILocation(line: 390, column: 13, scope: !6709)
!6709 = distinct !DILexicalBlock(scope: !6695, file: !6551, line: 390, column: 6)
!6710 = !DILocation(line: 390, column: 6, scope: !6695)
!6711 = !DILocation(line: 438, column: 6, scope: !6712)
!6712 = distinct !DILexicalBlock(scope: !6695, file: !6551, line: 438, column: 6)
!6713 = !DILocation(line: 438, column: 6, scope: !6695)
!6714 = !DILocation(line: 442, column: 3, scope: !6715)
!6715 = distinct !DILexicalBlock(scope: !6712, file: !6551, line: 440, column: 22)
!6716 = !DILocation(line: 455, column: 1, scope: !6695)
!6717 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6551, file: !6551, line: 530, type: !6718, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2677, retainedNodes: !6720)
!6718 = !DISubroutineType(types: !6719)
!6719 = !{null, !6554, !285, !3364}
!6720 = !{!6721, !6722, !6723}
!6721 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6717, file: !6551, line: 530, type: !6554)
!6722 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6717, file: !6551, line: 530, type: !285)
!6723 = !DILocalVariable(name: "_main", arg: 3, scope: !6717, file: !6551, line: 531, type: !3364)
!6724 = !DILocation(line: 0, scope: !6717)
!6725 = !DILocation(line: 535, column: 11, scope: !6717)
!6726 = !DILocation(line: 560, column: 2, scope: !6717)
!6727 = !DILocation(line: 576, column: 2, scope: !6717)
!6728 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6729 = !DILocation(line: 603, column: 2, scope: !6717)
!6730 = distinct !DISubprogram(name: "z_arm_fault", scope: !6731, file: !6731, line: 1036, type: !6732, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2720, retainedNodes: !6747)
!6731 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6732 = !DISubroutineType(types: !6733)
!6733 = !{null, !110, !110, !110, !6734}
!6734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6735, size: 32)
!6735 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !209, line: 37, baseType: !6736)
!6736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !6737)
!6737 = !{!6738, !6739, !6740, !6741, !6742, !6743, !6744, !6745, !6746}
!6738 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6736, file: !209, line: 26, baseType: !110, size: 32)
!6739 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6736, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!6740 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6736, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!6741 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6736, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!6742 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6736, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!6743 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6736, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!6744 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6736, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!6745 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6736, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!6746 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6736, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!6747 = !{!6748, !6749, !6750, !6751, !6752, !6753, !6754, !6755, !6756, !6757}
!6748 = !DILocalVariable(name: "msp", arg: 1, scope: !6730, file: !6731, line: 1036, type: !110)
!6749 = !DILocalVariable(name: "psp", arg: 2, scope: !6730, file: !6731, line: 1036, type: !110)
!6750 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6730, file: !6731, line: 1036, type: !110)
!6751 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6730, file: !6731, line: 1037, type: !6734)
!6752 = !DILocalVariable(name: "reason", scope: !6730, file: !6731, line: 1039, type: !110)
!6753 = !DILocalVariable(name: "fault", scope: !6730, file: !6731, line: 1040, type: !109)
!6754 = !DILocalVariable(name: "recoverable", scope: !6730, file: !6731, line: 1041, type: !347)
!6755 = !DILocalVariable(name: "nested_exc", scope: !6730, file: !6731, line: 1041, type: !347)
!6756 = !DILocalVariable(name: "esf", scope: !6730, file: !6731, line: 1042, type: !2748)
!6757 = !DILocalVariable(name: "esf_copy", scope: !6730, file: !6731, line: 1047, type: !2749)
!6758 = !DILocation(line: 0, scope: !6730)
!6759 = !DILocation(line: 1040, column: 19, scope: !6730)
!6760 = !DILocation(line: 1041, column: 2, scope: !6730)
!6761 = !DILocation(line: 1047, column: 2, scope: !6730)
!6762 = !DILocation(line: 1047, column: 15, scope: !6730)
!6763 = !DILocalVariable(name: "key", arg: 1, scope: !6764, file: !6100, line: 84, type: !32)
!6764 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6100, file: !6100, line: 84, type: !6111, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2720, retainedNodes: !6765)
!6765 = !{!6763}
!6766 = !DILocation(line: 0, scope: !6764, inlinedAt: !6767)
!6767 = distinct !DILocation(line: 1050, column: 2, scope: !6730)
!6768 = !DILocation(line: 95, column: 2, scope: !6764, inlinedAt: !6767)
!6769 = !{i64 2258909}
!6770 = !DILocation(line: 1055, column: 9, scope: !6730)
!6771 = !DILocation(line: 1056, column: 2, scope: !6772)
!6772 = distinct !DILexicalBlock(scope: !6773, file: !6731, line: 1056, column: 2)
!6773 = distinct !DILexicalBlock(scope: !6730, file: !6731, line: 1056, column: 2)
!6774 = !DILocation(line: 1056, column: 2, scope: !6773)
!6775 = !DILocation(line: 1056, column: 2, scope: !6776)
!6776 = distinct !DILexicalBlock(scope: !6772, file: !6731, line: 1056, column: 2)
!6777 = !DILocation(line: 1040, column: 24, scope: !6730)
!6778 = !DILocation(line: 1063, column: 11, scope: !6730)
!6779 = !DILocation(line: 1064, column: 6, scope: !6780)
!6780 = distinct !DILexicalBlock(scope: !6730, file: !6731, line: 1064, column: 6)
!6781 = !{i8 0, i8 2}
!6782 = !DILocation(line: 1064, column: 6, scope: !6730)
!6783 = !DILocation(line: 1070, column: 20, scope: !6730)
!6784 = !DILocation(line: 1070, column: 2, scope: !6730)
!6785 = !DILocation(line: 1089, column: 6, scope: !6786)
!6786 = distinct !DILexicalBlock(scope: !6730, file: !6731, line: 1089, column: 6)
!6787 = !DILocation(line: 0, scope: !6786)
!6788 = !DILocation(line: 1089, column: 6, scope: !6730)
!6789 = !DILocation(line: 1090, column: 28, scope: !6790)
!6790 = distinct !DILexicalBlock(scope: !6791, file: !6731, line: 1090, column: 7)
!6791 = distinct !DILexicalBlock(scope: !6786, file: !6731, line: 1089, column: 18)
!6792 = !DILocation(line: 1090, column: 44, scope: !6790)
!6793 = !DILocation(line: 1090, column: 7, scope: !6791)
!6794 = !DILocation(line: 1091, column: 24, scope: !6795)
!6795 = distinct !DILexicalBlock(scope: !6790, file: !6731, line: 1090, column: 50)
!6796 = !DILocation(line: 1092, column: 3, scope: !6795)
!6797 = !DILocation(line: 1094, column: 23, scope: !6798)
!6798 = distinct !DILexicalBlock(scope: !6786, file: !6731, line: 1093, column: 9)
!6799 = !DILocation(line: 1097, column: 2, scope: !6730)
!6800 = !DILocation(line: 1098, column: 1, scope: !6730)
!6801 = distinct !DISubprogram(name: "get_esf", scope: !6731, file: !6731, line: 894, type: !6802, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2720, retainedNodes: !6805)
!6802 = !DISubroutineType(types: !6803)
!6803 = !{!2748, !110, !110, !110, !6804}
!6804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !347, size: 32)
!6805 = !{!6806, !6807, !6808, !6809, !6810, !6811}
!6806 = !DILocalVariable(name: "msp", arg: 1, scope: !6801, file: !6731, line: 894, type: !110)
!6807 = !DILocalVariable(name: "psp", arg: 2, scope: !6801, file: !6731, line: 894, type: !110)
!6808 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6801, file: !6731, line: 894, type: !110)
!6809 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6801, file: !6731, line: 895, type: !6804)
!6810 = !DILocalVariable(name: "alternative_state_exc", scope: !6801, file: !6731, line: 897, type: !347)
!6811 = !DILocalVariable(name: "ptr_esf", scope: !6801, file: !6731, line: 898, type: !2748)
!6812 = !DILocation(line: 0, scope: !6801)
!6813 = !DILocation(line: 900, column: 14, scope: !6801)
!6814 = !DILocation(line: 902, column: 49, scope: !6815)
!6815 = distinct !DILexicalBlock(scope: !6801, file: !6731, line: 902, column: 6)
!6816 = !DILocation(line: 902, column: 6, scope: !6801)
!6817 = !DILocation(line: 983, column: 44, scope: !6818)
!6818 = distinct !DILexicalBlock(scope: !6801, file: !6731, line: 983, column: 6)
!6819 = !DILocation(line: 985, column: 3, scope: !6820)
!6820 = distinct !DILexicalBlock(scope: !6821, file: !6731, line: 985, column: 3)
!6821 = distinct !DILexicalBlock(scope: !6822, file: !6731, line: 985, column: 3)
!6822 = distinct !DILexicalBlock(scope: !6823, file: !6731, line: 985, column: 3)
!6823 = distinct !DILexicalBlock(scope: !6824, file: !6731, line: 985, column: 3)
!6824 = distinct !DILexicalBlock(scope: !6818, file: !6731, line: 984, column: 47)
!6825 = !DILocation(line: 986, column: 3, scope: !6824)
!6826 = !DILocation(line: 983, column: 18, scope: !6818)
!6827 = !DILocation(line: 991, column: 7, scope: !6828)
!6828 = distinct !DILexicalBlock(scope: !6829, file: !6731, line: 990, column: 30)
!6829 = distinct !DILexicalBlock(scope: !6801, file: !6731, line: 990, column: 6)
!6830 = !DILocation(line: 998, column: 16, scope: !6831)
!6831 = distinct !DILexicalBlock(scope: !6832, file: !6731, line: 995, column: 10)
!6832 = distinct !DILexicalBlock(scope: !6828, file: !6731, line: 991, column: 7)
!6833 = !DILocation(line: 1002, column: 2, scope: !6801)
!6834 = !DILocation(line: 1003, column: 1, scope: !6801)
!6835 = distinct !DISubprogram(name: "fault_handle", scope: !6731, file: !6731, line: 786, type: !6836, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2720, retainedNodes: !6838)
!6836 = !DISubroutineType(types: !6837)
!6837 = !{!110, !2748, !109, !6804}
!6838 = !{!6839, !6840, !6841, !6842}
!6839 = !DILocalVariable(name: "esf", arg: 1, scope: !6835, file: !6731, line: 786, type: !2748)
!6840 = !DILocalVariable(name: "fault", arg: 2, scope: !6835, file: !6731, line: 786, type: !109)
!6841 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6835, file: !6731, line: 786, type: !6804)
!6842 = !DILocalVariable(name: "reason", scope: !6835, file: !6731, line: 788, type: !110)
!6843 = !DILocation(line: 0, scope: !6835)
!6844 = !DILocation(line: 790, column: 15, scope: !6835)
!6845 = !DILocation(line: 792, column: 2, scope: !6835)
!6846 = !DILocation(line: 794, column: 12, scope: !6847)
!6847 = distinct !DILexicalBlock(scope: !6835, file: !6731, line: 792, column: 17)
!6848 = !DILocation(line: 795, column: 3, scope: !6847)
!6849 = !DILocation(line: 800, column: 12, scope: !6847)
!6850 = !DILocation(line: 801, column: 3, scope: !6847)
!6851 = !DILocation(line: 803, column: 12, scope: !6847)
!6852 = !DILocation(line: 804, column: 3, scope: !6847)
!6853 = !DILocation(line: 806, column: 12, scope: !6847)
!6854 = !DILocation(line: 807, column: 3, scope: !6847)
!6855 = !DILocation(line: 814, column: 3, scope: !6847)
!6856 = !DILocation(line: 815, column: 3, scope: !6847)
!6857 = !DILocation(line: 820, column: 3, scope: !6847)
!6858 = !DILocation(line: 821, column: 3, scope: !6847)
!6859 = !DILocation(line: 829, column: 2, scope: !6835)
!6860 = distinct !DISubprogram(name: "hard_fault", scope: !6731, file: !6731, line: 709, type: !6861, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2720, retainedNodes: !6863)
!6861 = !DISubroutineType(types: !6862)
!6862 = !{!110, !2748, !6804}
!6863 = !{!6864, !6865, !6866}
!6864 = !DILocalVariable(name: "esf", arg: 1, scope: !6860, file: !6731, line: 709, type: !2748)
!6865 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6860, file: !6731, line: 709, type: !6804)
!6866 = !DILocalVariable(name: "reason", scope: !6860, file: !6731, line: 711, type: !110)
!6867 = !DILocation(line: 0, scope: !6860)
!6868 = !DILocation(line: 713, column: 2, scope: !6869)
!6869 = distinct !DILexicalBlock(scope: !6870, file: !6731, line: 713, column: 2)
!6870 = distinct !DILexicalBlock(scope: !6871, file: !6731, line: 713, column: 2)
!6871 = distinct !DILexicalBlock(scope: !6872, file: !6731, line: 713, column: 2)
!6872 = distinct !DILexicalBlock(scope: !6860, file: !6731, line: 713, column: 2)
!6873 = !DILocation(line: 732, column: 15, scope: !6860)
!6874 = !DILocation(line: 734, column: 12, scope: !6875)
!6875 = distinct !DILexicalBlock(scope: !6860, file: !6731, line: 734, column: 6)
!6876 = !DILocation(line: 734, column: 17, scope: !6875)
!6877 = !DILocation(line: 734, column: 41, scope: !6875)
!6878 = !DILocation(line: 734, column: 6, scope: !6860)
!6879 = !DILocation(line: 735, column: 3, scope: !6880)
!6880 = distinct !DILexicalBlock(scope: !6881, file: !6731, line: 735, column: 3)
!6881 = distinct !DILexicalBlock(scope: !6882, file: !6731, line: 735, column: 3)
!6882 = distinct !DILexicalBlock(scope: !6883, file: !6731, line: 735, column: 3)
!6883 = distinct !DILexicalBlock(scope: !6884, file: !6731, line: 735, column: 3)
!6884 = distinct !DILexicalBlock(scope: !6875, file: !6731, line: 734, column: 47)
!6885 = !DILocation(line: 736, column: 2, scope: !6884)
!6886 = !DILocation(line: 736, column: 19, scope: !6887)
!6887 = distinct !DILexicalBlock(scope: !6875, file: !6731, line: 736, column: 13)
!6888 = !DILocation(line: 736, column: 49, scope: !6887)
!6889 = !DILocation(line: 736, column: 13, scope: !6875)
!6890 = !DILocation(line: 737, column: 3, scope: !6891)
!6891 = distinct !DILexicalBlock(scope: !6892, file: !6731, line: 737, column: 3)
!6892 = distinct !DILexicalBlock(scope: !6893, file: !6731, line: 737, column: 3)
!6893 = distinct !DILexicalBlock(scope: !6894, file: !6731, line: 737, column: 3)
!6894 = distinct !DILexicalBlock(scope: !6895, file: !6731, line: 737, column: 3)
!6895 = distinct !DILexicalBlock(scope: !6887, file: !6731, line: 736, column: 55)
!6896 = !DILocation(line: 738, column: 2, scope: !6895)
!6897 = !DILocation(line: 738, column: 19, scope: !6898)
!6898 = distinct !DILexicalBlock(scope: !6887, file: !6731, line: 738, column: 13)
!6899 = !DILocation(line: 738, column: 24, scope: !6898)
!6900 = !DILocation(line: 738, column: 47, scope: !6898)
!6901 = !DILocation(line: 738, column: 13, scope: !6887)
!6902 = !DILocation(line: 739, column: 3, scope: !6903)
!6903 = distinct !DILexicalBlock(scope: !6904, file: !6731, line: 739, column: 3)
!6904 = distinct !DILexicalBlock(scope: !6905, file: !6731, line: 739, column: 3)
!6905 = distinct !DILexicalBlock(scope: !6906, file: !6731, line: 739, column: 3)
!6906 = distinct !DILexicalBlock(scope: !6907, file: !6731, line: 739, column: 3)
!6907 = distinct !DILexicalBlock(scope: !6898, file: !6731, line: 738, column: 53)
!6908 = !DILocation(line: 740, column: 7, scope: !6909)
!6909 = distinct !DILexicalBlock(scope: !6907, file: !6731, line: 740, column: 7)
!6910 = !DILocation(line: 740, column: 7, scope: !6907)
!6911 = !DILocation(line: 741, column: 4, scope: !6912)
!6912 = distinct !DILexicalBlock(scope: !6913, file: !6731, line: 741, column: 4)
!6913 = distinct !DILexicalBlock(scope: !6914, file: !6731, line: 741, column: 4)
!6914 = distinct !DILexicalBlock(scope: !6915, file: !6731, line: 741, column: 4)
!6915 = distinct !DILexicalBlock(scope: !6916, file: !6731, line: 741, column: 4)
!6916 = distinct !DILexicalBlock(scope: !6909, file: !6731, line: 740, column: 38)
!6917 = !DILocation(line: 742, column: 24, scope: !6916)
!6918 = !DILocation(line: 743, column: 3, scope: !6916)
!6919 = !DILocation(line: 743, column: 20, scope: !6920)
!6920 = distinct !DILexicalBlock(scope: !6909, file: !6731, line: 743, column: 14)
!6921 = !DILocation(line: 743, column: 25, scope: !6920)
!6922 = !DILocation(line: 743, column: 52, scope: !6920)
!6923 = !DILocation(line: 743, column: 14, scope: !6909)
!6924 = !DILocation(line: 744, column: 13, scope: !6925)
!6925 = distinct !DILexicalBlock(scope: !6920, file: !6731, line: 743, column: 58)
!6926 = !DILocation(line: 745, column: 3, scope: !6925)
!6927 = !DILocation(line: 745, column: 20, scope: !6928)
!6928 = distinct !DILexicalBlock(scope: !6920, file: !6731, line: 745, column: 14)
!6929 = !DILocation(line: 745, column: 25, scope: !6928)
!6930 = !DILocation(line: 745, column: 52, scope: !6928)
!6931 = !DILocation(line: 745, column: 14, scope: !6920)
!6932 = !DILocation(line: 746, column: 13, scope: !6933)
!6933 = distinct !DILexicalBlock(scope: !6928, file: !6731, line: 745, column: 58)
!6934 = !DILocation(line: 747, column: 3, scope: !6933)
!6935 = !DILocation(line: 747, column: 20, scope: !6936)
!6936 = distinct !DILexicalBlock(scope: !6928, file: !6731, line: 747, column: 14)
!6937 = !DILocation(line: 747, column: 52, scope: !6936)
!6938 = !DILocation(line: 747, column: 14, scope: !6928)
!6939 = !DILocation(line: 748, column: 13, scope: !6940)
!6940 = distinct !DILexicalBlock(scope: !6936, file: !6731, line: 747, column: 58)
!6941 = !DILocation(line: 754, column: 4, scope: !6942)
!6942 = distinct !DILexicalBlock(scope: !6943, file: !6731, line: 754, column: 4)
!6943 = distinct !DILexicalBlock(scope: !6944, file: !6731, line: 754, column: 4)
!6944 = distinct !DILexicalBlock(scope: !6945, file: !6731, line: 754, column: 4)
!6945 = distinct !DILexicalBlock(scope: !6936, file: !6731, line: 753, column: 10)
!6946 = !DILocation(line: 758, column: 3, scope: !6947)
!6947 = distinct !DILexicalBlock(scope: !6948, file: !6731, line: 758, column: 3)
!6948 = distinct !DILexicalBlock(scope: !6949, file: !6731, line: 758, column: 3)
!6949 = distinct !DILexicalBlock(scope: !6950, file: !6731, line: 758, column: 3)
!6950 = distinct !DILexicalBlock(scope: !6898, file: !6731, line: 757, column: 9)
!6951 = !DILocation(line: 766, column: 2, scope: !6860)
!6952 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6731, file: !6731, line: 229, type: !6836, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2720, retainedNodes: !6953)
!6953 = !{!6954, !6955, !6956, !6957, !6958, !6959, !6962}
!6954 = !DILocalVariable(name: "esf", arg: 1, scope: !6952, file: !6731, line: 229, type: !2748)
!6955 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6952, file: !6731, line: 229, type: !109)
!6956 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6952, file: !6731, line: 230, type: !6804)
!6957 = !DILocalVariable(name: "reason", scope: !6952, file: !6731, line: 232, type: !110)
!6958 = !DILocalVariable(name: "mmfar", scope: !6952, file: !6731, line: 233, type: !110)
!6959 = !DILocalVariable(name: "temp", scope: !6960, file: !6731, line: 254, type: !110)
!6960 = distinct !DILexicalBlock(scope: !6961, file: !6731, line: 244, column: 48)
!6961 = distinct !DILexicalBlock(scope: !6952, file: !6731, line: 244, column: 6)
!6962 = !DILocalVariable(name: "min_stack_ptr", scope: !6963, file: !6731, line: 309, type: !110)
!6963 = distinct !DILexicalBlock(scope: !6964, file: !6731, line: 308, column: 43)
!6964 = distinct !DILexicalBlock(scope: !6965, file: !6731, line: 308, column: 7)
!6965 = distinct !DILexicalBlock(scope: !6966, file: !6731, line: 289, column: 40)
!6966 = distinct !DILexicalBlock(scope: !6952, file: !6731, line: 288, column: 6)
!6967 = !DILocation(line: 0, scope: !6952)
!6968 = !DILocation(line: 235, column: 2, scope: !6969)
!6969 = distinct !DILexicalBlock(scope: !6970, file: !6731, line: 235, column: 2)
!6970 = distinct !DILexicalBlock(scope: !6971, file: !6731, line: 235, column: 2)
!6971 = distinct !DILexicalBlock(scope: !6972, file: !6731, line: 235, column: 2)
!6972 = distinct !DILexicalBlock(scope: !6952, file: !6731, line: 235, column: 2)
!6973 = !DILocation(line: 237, column: 12, scope: !6974)
!6974 = distinct !DILexicalBlock(scope: !6952, file: !6731, line: 237, column: 6)
!6975 = !DILocation(line: 237, column: 17, scope: !6974)
!6976 = !DILocation(line: 237, column: 41, scope: !6974)
!6977 = !DILocation(line: 237, column: 6, scope: !6952)
!6978 = !DILocation(line: 238, column: 3, scope: !6979)
!6979 = distinct !DILexicalBlock(scope: !6980, file: !6731, line: 238, column: 3)
!6980 = distinct !DILexicalBlock(scope: !6981, file: !6731, line: 238, column: 3)
!6981 = distinct !DILexicalBlock(scope: !6982, file: !6731, line: 238, column: 3)
!6982 = distinct !DILexicalBlock(scope: !6983, file: !6731, line: 238, column: 3)
!6983 = distinct !DILexicalBlock(scope: !6974, file: !6731, line: 237, column: 47)
!6984 = !DILocation(line: 240, column: 2, scope: !6983)
!6985 = !DILocation(line: 241, column: 12, scope: !6986)
!6986 = distinct !DILexicalBlock(scope: !6952, file: !6731, line: 241, column: 6)
!6987 = !DILocation(line: 241, column: 17, scope: !6986)
!6988 = !DILocation(line: 241, column: 43, scope: !6986)
!6989 = !DILocation(line: 241, column: 6, scope: !6952)
!6990 = !DILocation(line: 242, column: 3, scope: !6991)
!6991 = distinct !DILexicalBlock(scope: !6992, file: !6731, line: 242, column: 3)
!6992 = distinct !DILexicalBlock(scope: !6993, file: !6731, line: 242, column: 3)
!6993 = distinct !DILexicalBlock(scope: !6994, file: !6731, line: 242, column: 3)
!6994 = distinct !DILexicalBlock(scope: !6995, file: !6731, line: 242, column: 3)
!6995 = distinct !DILexicalBlock(scope: !6986, file: !6731, line: 241, column: 49)
!6996 = !DILocation(line: 243, column: 2, scope: !6995)
!6997 = !DILocation(line: 244, column: 12, scope: !6961)
!6998 = !DILocation(line: 244, column: 17, scope: !6961)
!6999 = !DILocation(line: 244, column: 42, scope: !6961)
!7000 = !DILocation(line: 244, column: 6, scope: !6952)
!7001 = !DILocation(line: 245, column: 3, scope: !7002)
!7002 = distinct !DILexicalBlock(scope: !7003, file: !6731, line: 245, column: 3)
!7003 = distinct !DILexicalBlock(scope: !7004, file: !6731, line: 245, column: 3)
!7004 = distinct !DILexicalBlock(scope: !7005, file: !6731, line: 245, column: 3)
!7005 = distinct !DILexicalBlock(scope: !6960, file: !6731, line: 245, column: 3)
!7006 = !DILocation(line: 254, column: 24, scope: !6960)
!7007 = !DILocation(line: 0, scope: !6960)
!7008 = !DILocation(line: 256, column: 13, scope: !7009)
!7009 = distinct !DILexicalBlock(scope: !6960, file: !6731, line: 256, column: 7)
!7010 = !DILocation(line: 256, column: 18, scope: !7009)
!7011 = !DILocation(line: 256, column: 44, scope: !7009)
!7012 = !DILocation(line: 256, column: 7, scope: !6960)
!7013 = !DILocation(line: 258, column: 4, scope: !7014)
!7014 = distinct !DILexicalBlock(scope: !7015, file: !6731, line: 258, column: 4)
!7015 = distinct !DILexicalBlock(scope: !7016, file: !6731, line: 258, column: 4)
!7016 = distinct !DILexicalBlock(scope: !7017, file: !6731, line: 258, column: 4)
!7017 = distinct !DILexicalBlock(scope: !7018, file: !6731, line: 258, column: 4)
!7018 = distinct !DILexicalBlock(scope: !7009, file: !6731, line: 256, column: 50)
!7019 = !DILocation(line: 259, column: 24, scope: !7020)
!7020 = distinct !DILexicalBlock(scope: !7018, file: !6731, line: 259, column: 8)
!7021 = !DILocation(line: 259, column: 8, scope: !7018)
!7022 = !DILocation(line: 261, column: 15, scope: !7023)
!7023 = distinct !DILexicalBlock(scope: !7020, file: !6731, line: 259, column: 30)
!7024 = !DILocation(line: 262, column: 4, scope: !7023)
!7025 = !DILocation(line: 265, column: 12, scope: !7026)
!7026 = distinct !DILexicalBlock(scope: !6952, file: !6731, line: 265, column: 6)
!7027 = !DILocation(line: 265, column: 17, scope: !7026)
!7028 = !DILocation(line: 265, column: 42, scope: !7026)
!7029 = !DILocation(line: 265, column: 6, scope: !6952)
!7030 = !DILocation(line: 266, column: 3, scope: !7031)
!7031 = distinct !DILexicalBlock(scope: !7032, file: !6731, line: 266, column: 3)
!7032 = distinct !DILexicalBlock(scope: !7033, file: !6731, line: 266, column: 3)
!7033 = distinct !DILexicalBlock(scope: !7034, file: !6731, line: 266, column: 3)
!7034 = distinct !DILexicalBlock(scope: !7035, file: !6731, line: 266, column: 3)
!7035 = distinct !DILexicalBlock(scope: !7026, file: !6731, line: 265, column: 48)
!7036 = !DILocation(line: 267, column: 2, scope: !7035)
!7037 = !DILocation(line: 269, column: 12, scope: !7038)
!7038 = distinct !DILexicalBlock(scope: !6952, file: !6731, line: 269, column: 6)
!7039 = !DILocation(line: 269, column: 17, scope: !7038)
!7040 = !DILocation(line: 269, column: 41, scope: !7038)
!7041 = !DILocation(line: 269, column: 6, scope: !6952)
!7042 = !DILocation(line: 270, column: 3, scope: !7043)
!7043 = distinct !DILexicalBlock(scope: !7044, file: !6731, line: 270, column: 3)
!7044 = distinct !DILexicalBlock(scope: !7045, file: !6731, line: 270, column: 3)
!7045 = distinct !DILexicalBlock(scope: !7046, file: !6731, line: 270, column: 3)
!7046 = distinct !DILexicalBlock(scope: !7047, file: !6731, line: 270, column: 3)
!7047 = distinct !DILexicalBlock(scope: !7038, file: !6731, line: 269, column: 47)
!7048 = !DILocation(line: 272, column: 2, scope: !7047)
!7049 = !DILocation(line: 288, column: 12, scope: !6966)
!7050 = !DILocation(line: 288, column: 17, scope: !6966)
!7051 = !DILocation(line: 288, column: 41, scope: !6966)
!7052 = !DILocation(line: 289, column: 9, scope: !6966)
!7053 = !DILocation(line: 289, column: 14, scope: !6966)
!7054 = !DILocation(line: 288, column: 6, scope: !6952)
!7055 = !DILocation(line: 308, column: 12, scope: !6964)
!7056 = !DILocation(line: 308, column: 17, scope: !6964)
!7057 = !DILocation(line: 308, column: 7, scope: !6965)
!7058 = !DILocation(line: 310, column: 6, scope: !6963)
!7059 = !DILocation(line: 309, column: 29, scope: !6963)
!7060 = !DILocation(line: 0, scope: !6963)
!7061 = !DILocation(line: 312, column: 8, scope: !7062)
!7062 = distinct !DILexicalBlock(scope: !6963, file: !6731, line: 312, column: 8)
!7063 = !DILocation(line: 312, column: 8, scope: !6963)
!7064 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !7065, file: !6421, line: 1099, type: !110)
!7065 = distinct !DISubprogram(name: "__set_PSP", scope: !6421, file: !6421, line: 1099, type: !6518, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2720, retainedNodes: !7066)
!7066 = !{!7064}
!7067 = !DILocation(line: 0, scope: !7065, inlinedAt: !7068)
!7068 = distinct !DILocation(line: 338, column: 5, scope: !7069)
!7069 = distinct !DILexicalBlock(scope: !7062, file: !6731, line: 312, column: 23)
!7070 = !DILocation(line: 1101, column: 3, scope: !7065, inlinedAt: !7068)
!7071 = !{i64 3577312}
!7072 = !DILocation(line: 341, column: 4, scope: !7069)
!7073 = !DILocation(line: 342, column: 5, scope: !7074)
!7074 = distinct !DILexicalBlock(scope: !7075, file: !6731, line: 342, column: 5)
!7075 = distinct !DILexicalBlock(scope: !7076, file: !6731, line: 342, column: 5)
!7076 = distinct !DILexicalBlock(scope: !7062, file: !6731, line: 341, column: 11)
!7077 = !DILocation(line: 342, column: 5, scope: !7075)
!7078 = !DILocation(line: 342, column: 5, scope: !7079)
!7079 = distinct !DILexicalBlock(scope: !7074, file: !6731, line: 342, column: 5)
!7080 = !DILocation(line: 360, column: 12, scope: !7081)
!7081 = distinct !DILexicalBlock(scope: !6952, file: !6731, line: 360, column: 6)
!7082 = !DILocation(line: 360, column: 17, scope: !7081)
!7083 = !DILocation(line: 360, column: 41, scope: !7081)
!7084 = !DILocation(line: 360, column: 6, scope: !6952)
!7085 = !DILocation(line: 361, column: 14, scope: !7086)
!7086 = distinct !DILexicalBlock(scope: !7081, file: !6731, line: 360, column: 47)
!7087 = !DILocation(line: 362, column: 2, scope: !7086)
!7088 = !DILocation(line: 366, column: 12, scope: !6952)
!7089 = !DILocation(line: 369, column: 15, scope: !6952)
!7090 = !DILocation(line: 371, column: 2, scope: !6952)
!7091 = distinct !DISubprogram(name: "bus_fault", scope: !6731, file: !6731, line: 383, type: !7092, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2720, retainedNodes: !7094)
!7092 = !DISubroutineType(types: !7093)
!7093 = !{!109, !2748, !109, !6804}
!7094 = !{!7095, !7096, !7097, !7098, !7099}
!7095 = !DILocalVariable(name: "esf", arg: 1, scope: !7091, file: !6731, line: 383, type: !2748)
!7096 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7091, file: !6731, line: 383, type: !109)
!7097 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7091, file: !6731, line: 383, type: !6804)
!7098 = !DILocalVariable(name: "reason", scope: !7091, file: !6731, line: 385, type: !110)
!7099 = !DILocalVariable(name: "bfar", scope: !7100, file: !6731, line: 405, type: !110)
!7100 = distinct !DILexicalBlock(scope: !7101, file: !6731, line: 395, column: 42)
!7101 = distinct !DILexicalBlock(scope: !7091, file: !6731, line: 395, column: 6)
!7102 = !DILocation(line: 0, scope: !7091)
!7103 = !DILocation(line: 387, column: 2, scope: !7104)
!7104 = distinct !DILexicalBlock(scope: !7105, file: !6731, line: 387, column: 2)
!7105 = distinct !DILexicalBlock(scope: !7106, file: !6731, line: 387, column: 2)
!7106 = distinct !DILexicalBlock(scope: !7107, file: !6731, line: 387, column: 2)
!7107 = distinct !DILexicalBlock(scope: !7091, file: !6731, line: 387, column: 2)
!7108 = !DILocation(line: 389, column: 11, scope: !7109)
!7109 = distinct !DILexicalBlock(scope: !7091, file: !6731, line: 389, column: 6)
!7110 = !DILocation(line: 389, column: 16, scope: !7109)
!7111 = !DILocation(line: 389, column: 6, scope: !7091)
!7112 = !DILocation(line: 390, column: 3, scope: !7113)
!7113 = distinct !DILexicalBlock(scope: !7114, file: !6731, line: 390, column: 3)
!7114 = distinct !DILexicalBlock(scope: !7115, file: !6731, line: 390, column: 3)
!7115 = distinct !DILexicalBlock(scope: !7116, file: !6731, line: 390, column: 3)
!7116 = distinct !DILexicalBlock(scope: !7117, file: !6731, line: 390, column: 3)
!7117 = distinct !DILexicalBlock(scope: !7109, file: !6731, line: 389, column: 39)
!7118 = !DILocation(line: 391, column: 2, scope: !7117)
!7119 = !DILocation(line: 392, column: 11, scope: !7120)
!7120 = distinct !DILexicalBlock(scope: !7091, file: !6731, line: 392, column: 6)
!7121 = !DILocation(line: 392, column: 16, scope: !7120)
!7122 = !DILocation(line: 392, column: 6, scope: !7091)
!7123 = !DILocation(line: 393, column: 3, scope: !7124)
!7124 = distinct !DILexicalBlock(scope: !7125, file: !6731, line: 393, column: 3)
!7125 = distinct !DILexicalBlock(scope: !7126, file: !6731, line: 393, column: 3)
!7126 = distinct !DILexicalBlock(scope: !7127, file: !6731, line: 393, column: 3)
!7127 = distinct !DILexicalBlock(scope: !7128, file: !6731, line: 393, column: 3)
!7128 = distinct !DILexicalBlock(scope: !7120, file: !6731, line: 392, column: 41)
!7129 = !DILocation(line: 394, column: 2, scope: !7128)
!7130 = !DILocation(line: 395, column: 11, scope: !7101)
!7131 = !DILocation(line: 395, column: 16, scope: !7101)
!7132 = !DILocation(line: 395, column: 6, scope: !7091)
!7133 = !DILocation(line: 396, column: 3, scope: !7134)
!7134 = distinct !DILexicalBlock(scope: !7135, file: !6731, line: 396, column: 3)
!7135 = distinct !DILexicalBlock(scope: !7136, file: !6731, line: 396, column: 3)
!7136 = distinct !DILexicalBlock(scope: !7137, file: !6731, line: 396, column: 3)
!7137 = distinct !DILexicalBlock(scope: !7100, file: !6731, line: 396, column: 3)
!7138 = !DILocation(line: 405, column: 3, scope: !7100)
!7139 = !DILocation(line: 0, scope: !7100)
!7140 = !DILocation(line: 407, column: 13, scope: !7141)
!7141 = distinct !DILexicalBlock(scope: !7100, file: !6731, line: 407, column: 7)
!7142 = !DILocation(line: 407, column: 18, scope: !7141)
!7143 = !DILocation(line: 407, column: 44, scope: !7141)
!7144 = !DILocation(line: 407, column: 7, scope: !7100)
!7145 = !DILocation(line: 408, column: 4, scope: !7146)
!7146 = distinct !DILexicalBlock(scope: !7147, file: !6731, line: 408, column: 4)
!7147 = distinct !DILexicalBlock(scope: !7148, file: !6731, line: 408, column: 4)
!7148 = distinct !DILexicalBlock(scope: !7149, file: !6731, line: 408, column: 4)
!7149 = distinct !DILexicalBlock(scope: !7150, file: !6731, line: 408, column: 4)
!7150 = distinct !DILexicalBlock(scope: !7141, file: !6731, line: 407, column: 50)
!7151 = !DILocation(line: 409, column: 24, scope: !7152)
!7152 = distinct !DILexicalBlock(scope: !7150, file: !6731, line: 409, column: 8)
!7153 = !DILocation(line: 409, column: 8, scope: !7150)
!7154 = !DILocation(line: 411, column: 15, scope: !7155)
!7155 = distinct !DILexicalBlock(scope: !7152, file: !6731, line: 409, column: 30)
!7156 = !DILocation(line: 412, column: 4, scope: !7155)
!7157 = !DILocation(line: 415, column: 11, scope: !7158)
!7158 = distinct !DILexicalBlock(scope: !7091, file: !6731, line: 415, column: 6)
!7159 = !DILocation(line: 415, column: 16, scope: !7158)
!7160 = !DILocation(line: 415, column: 6, scope: !7091)
!7161 = !DILocation(line: 416, column: 3, scope: !7162)
!7162 = distinct !DILexicalBlock(scope: !7163, file: !6731, line: 416, column: 3)
!7163 = distinct !DILexicalBlock(scope: !7164, file: !6731, line: 416, column: 3)
!7164 = distinct !DILexicalBlock(scope: !7165, file: !6731, line: 416, column: 3)
!7165 = distinct !DILexicalBlock(scope: !7166, file: !6731, line: 416, column: 3)
!7166 = distinct !DILexicalBlock(scope: !7158, file: !6731, line: 415, column: 44)
!7167 = !DILocation(line: 417, column: 2, scope: !7166)
!7168 = !DILocation(line: 418, column: 12, scope: !7169)
!7169 = distinct !DILexicalBlock(scope: !7091, file: !6731, line: 418, column: 6)
!7170 = !DILocation(line: 418, column: 17, scope: !7169)
!7171 = !DILocation(line: 418, column: 41, scope: !7169)
!7172 = !DILocation(line: 418, column: 6, scope: !7091)
!7173 = !DILocation(line: 423, column: 18, scope: !7174)
!7174 = distinct !DILexicalBlock(scope: !7169, file: !6731, line: 423, column: 13)
!7175 = !DILocation(line: 423, column: 23, scope: !7174)
!7176 = !DILocation(line: 423, column: 13, scope: !7169)
!7177 = !DILocation(line: 0, scope: !7169)
!7178 = !DILocation(line: 524, column: 12, scope: !7091)
!7179 = !DILocation(line: 526, column: 15, scope: !7091)
!7180 = !DILocation(line: 528, column: 2, scope: !7091)
!7181 = distinct !DISubprogram(name: "usage_fault", scope: !6731, file: !6731, line: 539, type: !7182, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2720, retainedNodes: !7186)
!7182 = !DISubroutineType(types: !7183)
!7183 = !{!110, !7184}
!7184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7185, size: 32)
!7185 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2749)
!7186 = !{!7187, !7188}
!7187 = !DILocalVariable(name: "esf", arg: 1, scope: !7181, file: !6731, line: 539, type: !7184)
!7188 = !DILocalVariable(name: "reason", scope: !7181, file: !6731, line: 541, type: !110)
!7189 = !DILocation(line: 0, scope: !7181)
!7190 = !DILocation(line: 543, column: 2, scope: !7191)
!7191 = distinct !DILexicalBlock(scope: !7192, file: !6731, line: 543, column: 2)
!7192 = distinct !DILexicalBlock(scope: !7193, file: !6731, line: 543, column: 2)
!7193 = distinct !DILexicalBlock(scope: !7194, file: !6731, line: 543, column: 2)
!7194 = distinct !DILexicalBlock(scope: !7181, file: !6731, line: 543, column: 2)
!7195 = !DILocation(line: 546, column: 12, scope: !7196)
!7196 = distinct !DILexicalBlock(scope: !7181, file: !6731, line: 546, column: 6)
!7197 = !DILocation(line: 546, column: 17, scope: !7196)
!7198 = !DILocation(line: 546, column: 43, scope: !7196)
!7199 = !DILocation(line: 546, column: 6, scope: !7181)
!7200 = !DILocation(line: 547, column: 3, scope: !7201)
!7201 = distinct !DILexicalBlock(scope: !7202, file: !6731, line: 547, column: 3)
!7202 = distinct !DILexicalBlock(scope: !7203, file: !6731, line: 547, column: 3)
!7203 = distinct !DILexicalBlock(scope: !7204, file: !6731, line: 547, column: 3)
!7204 = distinct !DILexicalBlock(scope: !7205, file: !6731, line: 547, column: 3)
!7205 = distinct !DILexicalBlock(scope: !7196, file: !6731, line: 546, column: 49)
!7206 = !DILocation(line: 548, column: 2, scope: !7205)
!7207 = !DILocation(line: 549, column: 12, scope: !7208)
!7208 = distinct !DILexicalBlock(scope: !7181, file: !6731, line: 549, column: 6)
!7209 = !DILocation(line: 549, column: 17, scope: !7208)
!7210 = !DILocation(line: 549, column: 43, scope: !7208)
!7211 = !DILocation(line: 549, column: 6, scope: !7181)
!7212 = !DILocation(line: 550, column: 3, scope: !7213)
!7213 = distinct !DILexicalBlock(scope: !7214, file: !6731, line: 550, column: 3)
!7214 = distinct !DILexicalBlock(scope: !7215, file: !6731, line: 550, column: 3)
!7215 = distinct !DILexicalBlock(scope: !7216, file: !6731, line: 550, column: 3)
!7216 = distinct !DILexicalBlock(scope: !7217, file: !6731, line: 550, column: 3)
!7217 = distinct !DILexicalBlock(scope: !7208, file: !6731, line: 549, column: 49)
!7218 = !DILocation(line: 551, column: 2, scope: !7217)
!7219 = !DILocation(line: 567, column: 12, scope: !7220)
!7220 = distinct !DILexicalBlock(scope: !7181, file: !6731, line: 567, column: 6)
!7221 = !DILocation(line: 567, column: 17, scope: !7220)
!7222 = !DILocation(line: 567, column: 38, scope: !7220)
!7223 = !DILocation(line: 567, column: 6, scope: !7181)
!7224 = !DILocation(line: 568, column: 3, scope: !7225)
!7225 = distinct !DILexicalBlock(scope: !7226, file: !6731, line: 568, column: 3)
!7226 = distinct !DILexicalBlock(scope: !7227, file: !6731, line: 568, column: 3)
!7227 = distinct !DILexicalBlock(scope: !7228, file: !6731, line: 568, column: 3)
!7228 = distinct !DILexicalBlock(scope: !7229, file: !6731, line: 568, column: 3)
!7229 = distinct !DILexicalBlock(scope: !7220, file: !6731, line: 567, column: 44)
!7230 = !DILocation(line: 569, column: 2, scope: !7229)
!7231 = !DILocation(line: 570, column: 12, scope: !7232)
!7232 = distinct !DILexicalBlock(scope: !7181, file: !6731, line: 570, column: 6)
!7233 = !DILocation(line: 570, column: 17, scope: !7232)
!7234 = !DILocation(line: 570, column: 39, scope: !7232)
!7235 = !DILocation(line: 570, column: 6, scope: !7181)
!7236 = !DILocation(line: 571, column: 3, scope: !7237)
!7237 = distinct !DILexicalBlock(scope: !7238, file: !6731, line: 571, column: 3)
!7238 = distinct !DILexicalBlock(scope: !7239, file: !6731, line: 571, column: 3)
!7239 = distinct !DILexicalBlock(scope: !7240, file: !6731, line: 571, column: 3)
!7240 = distinct !DILexicalBlock(scope: !7241, file: !6731, line: 571, column: 3)
!7241 = distinct !DILexicalBlock(scope: !7232, file: !6731, line: 570, column: 45)
!7242 = !DILocation(line: 572, column: 2, scope: !7241)
!7243 = !DILocation(line: 573, column: 12, scope: !7244)
!7244 = distinct !DILexicalBlock(scope: !7181, file: !6731, line: 573, column: 6)
!7245 = !DILocation(line: 573, column: 17, scope: !7244)
!7246 = !DILocation(line: 573, column: 42, scope: !7244)
!7247 = !DILocation(line: 573, column: 6, scope: !7181)
!7248 = !DILocation(line: 574, column: 3, scope: !7249)
!7249 = distinct !DILexicalBlock(scope: !7250, file: !6731, line: 574, column: 3)
!7250 = distinct !DILexicalBlock(scope: !7251, file: !6731, line: 574, column: 3)
!7251 = distinct !DILexicalBlock(scope: !7252, file: !6731, line: 574, column: 3)
!7252 = distinct !DILexicalBlock(scope: !7253, file: !6731, line: 574, column: 3)
!7253 = distinct !DILexicalBlock(scope: !7244, file: !6731, line: 573, column: 48)
!7254 = !DILocation(line: 575, column: 2, scope: !7253)
!7255 = !DILocation(line: 576, column: 12, scope: !7256)
!7256 = distinct !DILexicalBlock(scope: !7181, file: !6731, line: 576, column: 6)
!7257 = !DILocation(line: 576, column: 17, scope: !7256)
!7258 = !DILocation(line: 576, column: 44, scope: !7256)
!7259 = !DILocation(line: 576, column: 6, scope: !7181)
!7260 = !DILocation(line: 577, column: 3, scope: !7261)
!7261 = distinct !DILexicalBlock(scope: !7262, file: !6731, line: 577, column: 3)
!7262 = distinct !DILexicalBlock(scope: !7263, file: !6731, line: 577, column: 3)
!7263 = distinct !DILexicalBlock(scope: !7264, file: !6731, line: 577, column: 3)
!7264 = distinct !DILexicalBlock(scope: !7265, file: !6731, line: 577, column: 3)
!7265 = distinct !DILexicalBlock(scope: !7256, file: !6731, line: 576, column: 50)
!7266 = !DILocation(line: 578, column: 2, scope: !7265)
!7267 = !DILocation(line: 581, column: 12, scope: !7181)
!7268 = !DILocation(line: 583, column: 2, scope: !7181)
!7269 = distinct !DISubprogram(name: "debug_monitor", scope: !6731, file: !6731, line: 632, type: !7270, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2720, retainedNodes: !7272)
!7270 = !DISubroutineType(types: !7271)
!7271 = !{null, !2748, !6804}
!7272 = !{!7273, !7274}
!7273 = !DILocalVariable(name: "esf", arg: 1, scope: !7269, file: !6731, line: 632, type: !2748)
!7274 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7269, file: !6731, line: 632, type: !6804)
!7275 = !DILocation(line: 0, scope: !7269)
!7276 = !DILocation(line: 634, column: 15, scope: !7269)
!7277 = !DILocation(line: 636, column: 2, scope: !7278)
!7278 = distinct !DILexicalBlock(scope: !7279, file: !6731, line: 636, column: 2)
!7279 = distinct !DILexicalBlock(scope: !7280, file: !6731, line: 636, column: 2)
!7280 = distinct !DILexicalBlock(scope: !7281, file: !6731, line: 636, column: 2)
!7281 = distinct !DILexicalBlock(scope: !7269, file: !6731, line: 636, column: 2)
!7282 = !DILocation(line: 652, column: 1, scope: !7269)
!7283 = distinct !DISubprogram(name: "reserved_exception", scope: !6731, file: !6731, line: 776, type: !7284, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2720, retainedNodes: !7286)
!7284 = !DISubroutineType(types: !7285)
!7285 = !{null, !7184, !109}
!7286 = !{!7287, !7288}
!7287 = !DILocalVariable(name: "esf", arg: 1, scope: !7283, file: !6731, line: 776, type: !7184)
!7288 = !DILocalVariable(name: "fault", arg: 2, scope: !7283, file: !6731, line: 776, type: !109)
!7289 = !DILocation(line: 0, scope: !7283)
!7290 = !DILocation(line: 780, column: 2, scope: !7291)
!7291 = distinct !DILexicalBlock(scope: !7292, file: !6731, line: 780, column: 2)
!7292 = distinct !DILexicalBlock(scope: !7293, file: !6731, line: 780, column: 2)
!7293 = distinct !DILexicalBlock(scope: !7294, file: !6731, line: 780, column: 2)
!7294 = distinct !DILexicalBlock(scope: !7283, file: !6731, line: 780, column: 2)
!7295 = !DILocation(line: 783, column: 1, scope: !7283)
!7296 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6731, file: !6731, line: 658, type: !7297, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2720, retainedNodes: !7299)
!7297 = !DISubroutineType(types: !7298)
!7298 = !{!347, !2748}
!7299 = !{!7300, !7301, !7302}
!7300 = !DILocalVariable(name: "esf", arg: 1, scope: !7296, file: !6731, line: 658, type: !2748)
!7301 = !DILocalVariable(name: "ret_addr", scope: !7296, file: !6731, line: 660, type: !2791)
!7302 = !DILocalVariable(name: "fault_insn", scope: !7296, file: !6731, line: 686, type: !192)
!7303 = !DILocation(line: 0, scope: !7296)
!7304 = !DILocation(line: 660, column: 46, scope: !7296)
!7305 = !DILocation(line: 660, column: 23, scope: !7296)
!7306 = !DILocation(line: 682, column: 11, scope: !7296)
!7307 = !DILocation(line: 271, column: 3, scope: !7308, inlinedAt: !7309)
!7308 = distinct !DISubprogram(name: "__DSB", scope: !6421, file: !6421, line: 269, type: !3096, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2720, retainedNodes: !2036)
!7309 = distinct !DILocation(line: 683, column: 2, scope: !7296)
!7310 = !{i64 3553447}
!7311 = !DILocation(line: 260, column: 3, scope: !7312, inlinedAt: !7313)
!7312 = distinct !DISubprogram(name: "__ISB", scope: !6421, file: !6421, line: 258, type: !3096, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2720, retainedNodes: !2036)
!7313 = distinct !DILocation(line: 684, column: 2, scope: !7296)
!7314 = !{i64 3553164}
!7315 = !DILocation(line: 686, column: 35, scope: !7296)
!7316 = !DILocation(line: 686, column: 24, scope: !7296)
!7317 = !DILocation(line: 688, column: 11, scope: !7296)
!7318 = !DILocation(line: 271, column: 3, scope: !7308, inlinedAt: !7319)
!7319 = distinct !DILocation(line: 689, column: 2, scope: !7296)
!7320 = !DILocation(line: 260, column: 3, scope: !7312, inlinedAt: !7321)
!7321 = distinct !DILocation(line: 690, column: 2, scope: !7296)
!7322 = !DILocation(line: 693, column: 45, scope: !7323)
!7323 = distinct !DILexicalBlock(scope: !7296, file: !6731, line: 693, column: 6)
!7324 = !DILocation(line: 699, column: 1, scope: !7296)
!7325 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6731, file: !6731, line: 1107, type: !3096, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2720, retainedNodes: !2036)
!7326 = !DILocation(line: 1111, column: 11, scope: !7325)
!7327 = !DILocation(line: 1136, column: 1, scope: !7325)
!7328 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !7329, file: !7329, line: 26, type: !3096, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2792, retainedNodes: !7330)
!7329 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7330 = !{!7331}
!7331 = !DILocalVariable(name: "irq", scope: !7328, file: !7329, line: 28, type: !109)
!7332 = !DILocation(line: 0, scope: !7328)
!7333 = !DILocation(line: 30, column: 2, scope: !7334)
!7334 = distinct !DILexicalBlock(scope: !7328, file: !7329, line: 30, column: 2)
!7335 = !DILocation(line: 31, column: 3, scope: !7336)
!7336 = distinct !DILexicalBlock(scope: !7337, file: !7329, line: 30, column: 39)
!7337 = distinct !DILexicalBlock(scope: !7334, file: !7329, line: 30, column: 2)
!7338 = !DILocation(line: 30, column: 35, scope: !7337)
!7339 = !DILocation(line: 30, column: 13, scope: !7337)
!7340 = distinct !{!7340, !7333, !7341}
!7341 = !DILocation(line: 32, column: 2, scope: !7334)
!7342 = !DILocation(line: 33, column: 1, scope: !7328)
!7343 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !535, file: !535, line: 1814, type: !6461, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2792, retainedNodes: !7344)
!7344 = !{!7345, !7346}
!7345 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7343, file: !535, line: 1814, type: !792)
!7346 = !DILocalVariable(name: "priority", arg: 2, scope: !7343, file: !535, line: 1814, type: !110)
!7347 = !DILocation(line: 0, scope: !7343)
!7348 = !DILocation(line: 1816, column: 7, scope: !7343)
!7349 = !DILocation(line: 0, scope: !7350)
!7350 = distinct !DILexicalBlock(scope: !7343, file: !535, line: 1816, column: 7)
!7351 = !DILocation(line: 1824, column: 1, scope: !7343)
!7352 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !7353, file: !7353, line: 27, type: !7354, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2837, retainedNodes: !7460)
!7353 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7354 = !DISubroutineType(types: !7355)
!7355 = !{null, !7356}
!7356 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !156, line: 347, baseType: !7357)
!7357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7358, size: 32)
!7358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1280, elements: !7359)
!7359 = !{!7360, !7418, !7430, !7431, !7432, !7433, !7434, !7440, !7455}
!7360 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7358, file: !156, line: 247, baseType: !7361, size: 384)
!7361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 384, elements: !7362)
!7362 = !{!7363, !7387, !7394, !7395, !7396, !7405, !7406, !7407}
!7363 = !DIDerivedType(tag: DW_TAG_member, scope: !7361, file: !156, line: 60, baseType: !7364, size: 64)
!7364 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7361, file: !156, line: 60, size: 64, elements: !7365)
!7365 = !{!7366, !7381}
!7366 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7364, file: !156, line: 61, baseType: !7367, size: 64)
!7367 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !7368)
!7368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !7369)
!7369 = !{!7370, !7376}
!7370 = !DIDerivedType(tag: DW_TAG_member, scope: !7368, file: !127, line: 38, baseType: !7371, size: 32)
!7371 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7368, file: !127, line: 38, size: 32, elements: !7372)
!7372 = !{!7373, !7375}
!7373 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7371, file: !127, line: 39, baseType: !7374, size: 32)
!7374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7368, size: 32)
!7375 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7371, file: !127, line: 40, baseType: !7374, size: 32)
!7376 = !DIDerivedType(tag: DW_TAG_member, scope: !7368, file: !127, line: 42, baseType: !7377, size: 32, offset: 32)
!7377 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7368, file: !127, line: 42, size: 32, elements: !7378)
!7378 = !{!7379, !7380}
!7379 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7377, file: !127, line: 43, baseType: !7374, size: 32)
!7380 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7377, file: !127, line: 44, baseType: !7374, size: 32)
!7381 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7364, file: !156, line: 62, baseType: !7382, size: 64)
!7382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !7383)
!7383 = !{!7384}
!7384 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7382, file: !168, line: 50, baseType: !7385, size: 64)
!7385 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7386, size: 64, elements: !173)
!7386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7382, size: 32)
!7387 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7361, file: !156, line: 68, baseType: !7388, size: 32, offset: 64)
!7388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7389, size: 32)
!7389 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !7390)
!7390 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !7391)
!7391 = !{!7392}
!7392 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7390, file: !122, line: 232, baseType: !7393, size: 64)
!7393 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !7368)
!7394 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7361, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!7395 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7361, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!7396 = !DIDerivedType(tag: DW_TAG_member, scope: !7361, file: !156, line: 90, baseType: !7397, size: 16, offset: 112)
!7397 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7361, file: !156, line: 90, size: 16, elements: !7398)
!7398 = !{!7399, !7404}
!7399 = !DIDerivedType(tag: DW_TAG_member, scope: !7397, file: !156, line: 91, baseType: !7400, size: 16)
!7400 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7397, file: !156, line: 91, size: 16, elements: !7401)
!7401 = !{!7402, !7403}
!7402 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7400, file: !156, line: 96, baseType: !188, size: 8)
!7403 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7400, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!7404 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7397, file: !156, line: 100, baseType: !192, size: 16)
!7405 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7361, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!7406 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7361, file: !156, line: 127, baseType: !107, size: 32, offset: 160)
!7407 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7361, file: !156, line: 131, baseType: !7408, size: 192, offset: 192)
!7408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !7409)
!7409 = !{!7410, !7411, !7417}
!7410 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7408, file: !122, line: 245, baseType: !7367, size: 64)
!7411 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7408, file: !122, line: 246, baseType: !7412, size: 32, offset: 64)
!7412 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !7413)
!7413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7414, size: 32)
!7414 = !DISubroutineType(types: !7415)
!7415 = !{null, !7416}
!7416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7408, size: 32)
!7417 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7408, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!7418 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7358, file: !156, line: 250, baseType: !7419, size: 288, offset: 384)
!7419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !7420)
!7420 = !{!7421, !7422, !7423, !7424, !7425, !7426, !7427, !7428, !7429}
!7421 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7419, file: !209, line: 26, baseType: !110, size: 32)
!7422 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7419, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!7423 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7419, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!7424 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7419, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!7425 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7419, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!7426 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7419, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!7427 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7419, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!7428 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7419, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!7429 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7419, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!7430 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7358, file: !156, line: 253, baseType: !107, size: 32, offset: 672)
!7431 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7358, file: !156, line: 256, baseType: !7389, size: 64, offset: 704)
!7432 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7358, file: !156, line: 279, baseType: !223, size: 256, offset: 768)
!7433 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7358, file: !156, line: 294, baseType: !109, size: 32, offset: 1024)
!7434 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7358, file: !156, line: 300, baseType: !7435, size: 96, offset: 1056)
!7435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !7436)
!7436 = !{!7437, !7438, !7439}
!7437 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7435, file: !156, line: 153, baseType: !22, size: 32)
!7438 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7435, file: !156, line: 162, baseType: !232, size: 32, offset: 32)
!7439 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7435, file: !156, line: 168, baseType: !232, size: 32, offset: 64)
!7440 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7358, file: !156, line: 325, baseType: !7441, size: 32, offset: 1152)
!7441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7442, size: 32)
!7442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !7443)
!7443 = !{!7444, !7450, !7451}
!7444 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7442, file: !118, line: 5074, baseType: !7445, size: 96)
!7445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !241, line: 56, size: 96, elements: !7446)
!7446 = !{!7447, !7448, !7449}
!7447 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7445, file: !241, line: 57, baseType: !244, size: 32)
!7448 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7445, file: !241, line: 58, baseType: !107, size: 32, offset: 32)
!7449 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7445, file: !241, line: 59, baseType: !232, size: 32, offset: 64)
!7450 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7442, file: !118, line: 5075, baseType: !7389, size: 64, offset: 96)
!7451 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7442, file: !118, line: 5076, baseType: !7452, size: 32, offset: 160)
!7452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !7453)
!7453 = !{!7454}
!7454 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !7452, file: !251, line: 52, baseType: !22, size: 32)
!7455 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7358, file: !156, line: 343, baseType: !7456, size: 64, offset: 1184)
!7456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !209, line: 60, size: 64, elements: !7457)
!7457 = !{!7458, !7459}
!7458 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7456, file: !209, line: 63, baseType: !110, size: 32)
!7459 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7456, file: !209, line: 66, baseType: !110, size: 32, offset: 32)
!7460 = !{!7461}
!7461 = !DILocalVariable(name: "thread", arg: 1, scope: !7352, file: !7353, line: 27, type: !7356)
!7462 = !DILocation(line: 0, scope: !7352)
!7463 = !DILocation(line: 29, column: 6, scope: !7464)
!7464 = distinct !DILexicalBlock(scope: !7352, file: !7353, line: 29, column: 6)
!7465 = !DILocation(line: 29, column: 15, scope: !7464)
!7466 = !DILocation(line: 29, column: 6, scope: !7352)
!7467 = !DILocation(line: 1031, column: 3, scope: !7468, inlinedAt: !7471)
!7468 = distinct !DISubprogram(name: "__get_IPSR", scope: !6421, file: !6421, line: 1027, type: !6508, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2837, retainedNodes: !7469)
!7469 = !{!7470}
!7470 = !DILocalVariable(name: "result", scope: !7468, file: !6421, line: 1029, type: !110)
!7471 = distinct !DILocation(line: 48, column: 10, scope: !7472, inlinedAt: !7476)
!7472 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7473, file: !7473, line: 46, type: !7474, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2837, retainedNodes: !2036)
!7473 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7474 = !DISubroutineType(types: !7475)
!7475 = !{!347}
!7476 = distinct !DILocation(line: 30, column: 7, scope: !7477)
!7477 = distinct !DILexicalBlock(scope: !7478, file: !7353, line: 30, column: 7)
!7478 = distinct !DILexicalBlock(scope: !7464, file: !7353, line: 29, column: 26)
!7479 = !{i64 3542295}
!7480 = !DILocation(line: 0, scope: !7468, inlinedAt: !7471)
!7481 = !DILocation(line: 48, column: 9, scope: !7472, inlinedAt: !7476)
!7482 = !DILocation(line: 30, column: 7, scope: !7478)
!7483 = !DILocation(line: 42, column: 14, scope: !7484)
!7484 = distinct !DILexicalBlock(scope: !7477, file: !7353, line: 30, column: 25)
!7485 = !DILocation(line: 48, column: 15, scope: !7484)
!7486 = !DILocation(line: 49, column: 3, scope: !7484)
!7487 = !DILocation(line: 52, column: 2, scope: !7352)
!7488 = !DILocation(line: 53, column: 1, scope: !7352)
!7489 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !394, file: !394, line: 127, type: !3096, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !2036)
!7490 = !DILocation(line: 134, column: 2, scope: !7489)
!7491 = !DILocation(line: 156, column: 1, scope: !7489)
!7492 = !DILocation(line: 0, scope: !393)
!7493 = !DILocation(line: 289, column: 36, scope: !7494)
!7494 = distinct !DILexicalBlock(scope: !393, file: !394, line: 285, column: 2)
!7495 = !DILocation(line: 289, column: 42, scope: !7494)
!7496 = !DILocation(line: 300, column: 36, scope: !393)
!7497 = !DILocation(line: 301, column: 35, scope: !393)
!7498 = !DILocation(line: 302, column: 37, scope: !393)
!7499 = !DILocation(line: 311, column: 2, scope: !393)
!7500 = !DILocation(line: 316, column: 1, scope: !393)
!7501 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !563, file: !563, line: 180, type: !3096, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !2036)
!7502 = !DILocation(line: 188, column: 12, scope: !7501)
!7503 = !DILocation(line: 271, column: 3, scope: !7504, inlinedAt: !7505)
!7504 = distinct !DISubprogram(name: "__DSB", scope: !6421, file: !6421, line: 269, type: !3096, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !2036)
!7505 = distinct !DILocation(line: 192, column: 2, scope: !7501)
!7506 = !{i64 3705961}
!7507 = !DILocation(line: 260, column: 3, scope: !7508, inlinedAt: !7509)
!7508 = distinct !DISubprogram(name: "__ISB", scope: !6421, file: !6421, line: 258, type: !3096, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !2036)
!7509 = distinct !DILocation(line: 193, column: 2, scope: !7501)
!7510 = !{i64 3705678}
!7511 = !DILocation(line: 194, column: 1, scope: !7501)
!7512 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !563, file: !563, line: 199, type: !3096, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !2036)
!7513 = !DILocation(line: 282, column: 3, scope: !7514, inlinedAt: !7515)
!7514 = distinct !DISubprogram(name: "__DMB", scope: !6421, file: !6421, line: 280, type: !3096, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !2036)
!7515 = distinct !DILocation(line: 202, column: 2, scope: !7512)
!7516 = !{i64 3706237}
!7517 = !DILocation(line: 205, column: 12, scope: !7512)
!7518 = !DILocation(line: 206, column: 1, scope: !7512)
!7519 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !563, file: !563, line: 275, type: !7520, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7533)
!7520 = !DISubroutineType(types: !7521)
!7521 = !{null, !7522, !1818, !6698, !6698}
!7522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7523, size: 32)
!7523 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7524)
!7524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !507, line: 52, size: 96, elements: !7525)
!7525 = !{!7526, !7527, !7528}
!7526 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7524, file: !507, line: 53, baseType: !22, size: 32)
!7527 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7524, file: !507, line: 54, baseType: !232, size: 32, offset: 32)
!7528 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7524, file: !507, line: 55, baseType: !7529, size: 32, offset: 64)
!7529 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !513, line: 151, baseType: !7530)
!7530 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !513, line: 149, size: 32, elements: !7531)
!7531 = !{!7532}
!7532 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !7530, file: !513, line: 150, baseType: !110, size: 32)
!7533 = !{!7534, !7535, !7536, !7537}
!7534 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7519, file: !563, line: 276, type: !7522)
!7535 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7519, file: !563, line: 276, type: !1818)
!7536 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !7519, file: !563, line: 277, type: !6698)
!7537 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7519, file: !563, line: 277, type: !6698)
!7538 = !DILocation(line: 0, scope: !7519)
!7539 = !DILocation(line: 279, column: 6, scope: !7540)
!7540 = distinct !DILexicalBlock(scope: !7519, file: !563, line: 279, column: 6)
!7541 = !DILocation(line: 280, column: 57, scope: !7540)
!7542 = !DILocation(line: 279, column: 6, scope: !7519)
!7543 = !DILocation(line: 282, column: 3, scope: !7544)
!7544 = distinct !DILexicalBlock(scope: !7545, file: !563, line: 282, column: 3)
!7545 = distinct !DILexicalBlock(scope: !7546, file: !563, line: 282, column: 3)
!7546 = distinct !DILexicalBlock(scope: !7547, file: !563, line: 282, column: 3)
!7547 = distinct !DILexicalBlock(scope: !7540, file: !563, line: 280, column: 69)
!7548 = !DILocation(line: 285, column: 1, scope: !7519)
!7549 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !7550, file: !7550, line: 220, type: !7551, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7553)
!7550 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7551 = !DISubroutineType(types: !7552)
!7552 = !{!109, !7522, !1818, !6698, !6698}
!7553 = !{!7554, !7555, !7556, !7557, !7558}
!7554 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7549, file: !7550, line: 221, type: !7522)
!7555 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7549, file: !7550, line: 221, type: !1818)
!7556 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !7549, file: !7550, line: 222, type: !6698)
!7557 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7549, file: !7550, line: 223, type: !6698)
!7558 = !DILocalVariable(name: "mpu_reg_index", scope: !7549, file: !7550, line: 225, type: !109)
!7559 = !DILocation(line: 0, scope: !7549)
!7560 = !DILocation(line: 225, column: 22, scope: !7549)
!7561 = !DILocation(line: 233, column: 18, scope: !7549)
!7562 = !DILocation(line: 236, column: 23, scope: !7549)
!7563 = !DILocation(line: 236, column: 21, scope: !7549)
!7564 = !DILocation(line: 238, column: 2, scope: !7549)
!7565 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !563, file: !563, line: 105, type: !7566, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7568)
!7566 = !DISubroutineType(types: !7567)
!7567 = !{!109, !7522, !178, !178, !347}
!7568 = !{!7569, !7570, !7571, !7572, !7573, !7574}
!7569 = !DILocalVariable(name: "regions", arg: 1, scope: !7565, file: !563, line: 106, type: !7522)
!7570 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7565, file: !563, line: 106, type: !178)
!7571 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !7565, file: !563, line: 106, type: !178)
!7572 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !7565, file: !563, line: 107, type: !347)
!7573 = !DILocalVariable(name: "i", scope: !7565, file: !563, line: 109, type: !109)
!7574 = !DILocalVariable(name: "reg_index", scope: !7565, file: !563, line: 110, type: !109)
!7575 = !DILocation(line: 0, scope: !7565)
!7576 = !DILocation(line: 110, column: 18, scope: !7565)
!7577 = !DILocation(line: 112, column: 16, scope: !7578)
!7578 = distinct !DILexicalBlock(scope: !7579, file: !563, line: 112, column: 2)
!7579 = distinct !DILexicalBlock(scope: !7565, file: !563, line: 112, column: 2)
!7580 = !DILocation(line: 112, column: 2, scope: !7579)
!7581 = !DILocation(line: 113, column: 7, scope: !7582)
!7582 = distinct !DILexicalBlock(scope: !7583, file: !563, line: 113, column: 7)
!7583 = distinct !DILexicalBlock(scope: !7578, file: !563, line: 112, column: 36)
!7584 = !DILocation(line: 113, column: 18, scope: !7582)
!7585 = !DILocation(line: 113, column: 23, scope: !7582)
!7586 = !DILocation(line: 113, column: 7, scope: !7583)
!7587 = !DILocation(line: 118, column: 23, scope: !7588)
!7588 = distinct !DILexicalBlock(scope: !7583, file: !563, line: 118, column: 7)
!7589 = !DILocation(line: 119, column: 7, scope: !7588)
!7590 = !DILocation(line: 118, column: 7, scope: !7583)
!7591 = !DILocation(line: 120, column: 4, scope: !7592)
!7592 = distinct !DILexicalBlock(scope: !7593, file: !563, line: 120, column: 4)
!7593 = distinct !DILexicalBlock(scope: !7594, file: !563, line: 120, column: 4)
!7594 = distinct !DILexicalBlock(scope: !7595, file: !563, line: 120, column: 4)
!7595 = distinct !DILexicalBlock(scope: !7596, file: !563, line: 120, column: 4)
!7596 = distinct !DILexicalBlock(scope: !7588, file: !563, line: 119, column: 45)
!7597 = !DILocation(line: 121, column: 4, scope: !7596)
!7598 = !DILocation(line: 124, column: 36, scope: !7583)
!7599 = !DILocation(line: 124, column: 15, scope: !7583)
!7600 = !DILocation(line: 126, column: 17, scope: !7601)
!7601 = distinct !DILexicalBlock(scope: !7583, file: !563, line: 126, column: 7)
!7602 = !DILocation(line: 126, column: 7, scope: !7583)
!7603 = !DILocation(line: 131, column: 12, scope: !7583)
!7604 = !DILocation(line: 132, column: 2, scope: !7583)
!7605 = !DILocation(line: 112, column: 32, scope: !7578)
!7606 = distinct !{!7606, !7580, !7607}
!7607 = !DILocation(line: 132, column: 2, scope: !7579)
!7608 = !DILocation(line: 135, column: 1, scope: !7565)
!7609 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !7550, file: !7550, line: 63, type: !7610, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7612)
!7610 = !DISubroutineType(types: !7611)
!7611 = !{!109, !7522}
!7612 = !{!7613, !7614}
!7613 = !DILocalVariable(name: "part", arg: 1, scope: !7609, file: !7550, line: 63, type: !7522)
!7614 = !DILocalVariable(name: "partition_is_valid", scope: !7609, file: !7550, line: 70, type: !109)
!7615 = !DILocation(line: 0, scope: !7609)
!7616 = !DILocation(line: 71, column: 11, scope: !7609)
!7617 = !DILocation(line: 71, column: 37, scope: !7609)
!7618 = !{i32 0, i32 33}
!7619 = !DILocation(line: 72, column: 3, scope: !7609)
!7620 = !DILocation(line: 71, column: 30, scope: !7609)
!7621 = !DILocation(line: 75, column: 11, scope: !7609)
!7622 = !DILocation(line: 75, column: 17, scope: !7609)
!7623 = !DILocation(line: 75, column: 38, scope: !7609)
!7624 = !DILocation(line: 77, column: 2, scope: !7609)
!7625 = distinct !DISubprogram(name: "mpu_configure_region", scope: !563, file: !563, line: 79, type: !7626, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7628)
!7626 = !DISubroutineType(types: !7627)
!7627 = !{!109, !1818, !7522}
!7628 = !{!7629, !7630, !7631}
!7629 = !DILocalVariable(name: "index", arg: 1, scope: !7625, file: !563, line: 79, type: !1818)
!7630 = !DILocalVariable(name: "new_region", arg: 2, scope: !7625, file: !563, line: 80, type: !7522)
!7631 = !DILocalVariable(name: "region_conf", scope: !7625, file: !563, line: 82, type: !552)
!7632 = !DILocation(line: 0, scope: !7625)
!7633 = !DILocation(line: 82, column: 2, scope: !7625)
!7634 = !DILocation(line: 82, column: 24, scope: !7625)
!7635 = !DILocation(line: 87, column: 33, scope: !7625)
!7636 = !DILocation(line: 87, column: 14, scope: !7625)
!7637 = !DILocation(line: 87, column: 19, scope: !7625)
!7638 = !DILocation(line: 91, column: 55, scope: !7625)
!7639 = !DILocation(line: 92, column: 16, scope: !7625)
!7640 = !DILocation(line: 92, column: 53, scope: !7625)
!7641 = !DILocation(line: 91, column: 2, scope: !7625)
!7642 = !DILocation(line: 95, column: 9, scope: !7625)
!7643 = !DILocation(line: 97, column: 1, scope: !7625)
!7644 = !DILocation(line: 95, column: 2, scope: !7625)
!7645 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !7550, file: !7550, line: 113, type: !7646, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7651)
!7646 = !DISubroutineType(types: !7647)
!7647 = !{null, !7648, !7649, !110, !110}
!7648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !558, size: 32)
!7649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7650, size: 32)
!7650 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7529)
!7651 = !{!7652, !7653, !7654, !7655}
!7652 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7645, file: !7550, line: 114, type: !7648)
!7653 = !DILocalVariable(name: "attr", arg: 2, scope: !7645, file: !7550, line: 115, type: !7649)
!7654 = !DILocalVariable(name: "base", arg: 3, scope: !7645, file: !7550, line: 115, type: !110)
!7655 = !DILocalVariable(name: "size", arg: 4, scope: !7645, file: !7550, line: 115, type: !110)
!7656 = !DILocation(line: 0, scope: !7645)
!7657 = !DILocation(line: 127, column: 23, scope: !7645)
!7658 = !DILocation(line: 127, column: 35, scope: !7645)
!7659 = !DILocation(line: 127, column: 33, scope: !7645)
!7660 = !DILocation(line: 127, column: 10, scope: !7645)
!7661 = !DILocation(line: 127, column: 15, scope: !7645)
!7662 = !DILocation(line: 129, column: 1, scope: !7645)
!7663 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !563, file: !563, line: 57, type: !7664, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7666)
!7664 = !DISubroutineType(types: !7665)
!7665 = !{!109, !1818, !550}
!7666 = !{!7667, !7668}
!7667 = !DILocalVariable(name: "index", arg: 1, scope: !7663, file: !563, line: 57, type: !1818)
!7668 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7663, file: !563, line: 58, type: !550)
!7669 = !DILocation(line: 0, scope: !7663)
!7670 = !DILocation(line: 61, column: 6, scope: !7671)
!7671 = distinct !DILexicalBlock(scope: !7663, file: !563, line: 61, column: 6)
!7672 = !DILocation(line: 61, column: 12, scope: !7671)
!7673 = !DILocation(line: 61, column: 6, scope: !7663)
!7674 = !DILocation(line: 64, column: 3, scope: !7675)
!7675 = distinct !DILexicalBlock(scope: !7676, file: !563, line: 64, column: 3)
!7676 = distinct !DILexicalBlock(scope: !7677, file: !563, line: 64, column: 3)
!7677 = distinct !DILexicalBlock(scope: !7678, file: !563, line: 64, column: 3)
!7678 = distinct !DILexicalBlock(scope: !7679, file: !563, line: 64, column: 3)
!7679 = distinct !DILexicalBlock(scope: !7671, file: !563, line: 61, column: 40)
!7680 = !DILocation(line: 65, column: 3, scope: !7679)
!7681 = !DILocation(line: 71, column: 2, scope: !7663)
!7682 = !DILocation(line: 73, column: 2, scope: !7663)
!7683 = !DILocation(line: 74, column: 1, scope: !7663)
!7684 = distinct !DISubprogram(name: "region_init", scope: !7550, file: !7550, line: 29, type: !7685, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7687)
!7685 = !DISubroutineType(types: !7686)
!7686 = !{null, !6698, !550}
!7687 = !{!7688, !7689}
!7688 = !DILocalVariable(name: "index", arg: 1, scope: !7684, file: !7550, line: 29, type: !6698)
!7689 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7684, file: !7550, line: 30, type: !550)
!7690 = !DILocation(line: 0, scope: !7684)
!7691 = !DILocation(line: 33, column: 2, scope: !7684)
!7692 = !DILocation(line: 47, column: 28, scope: !7684)
!7693 = !DILocation(line: 47, column: 33, scope: !7684)
!7694 = !DILocation(line: 48, column: 26, scope: !7684)
!7695 = !DILocation(line: 47, column: 12, scope: !7684)
!7696 = !DILocation(line: 49, column: 32, scope: !7684)
!7697 = !DILocation(line: 49, column: 37, scope: !7684)
!7698 = !DILocation(line: 49, column: 12, scope: !7684)
!7699 = !DILocation(line: 53, column: 1, scope: !7684)
!7700 = distinct !DISubprogram(name: "set_region_number", scope: !7701, file: !7701, line: 32, type: !6518, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7702)
!7701 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7702 = !{!7703}
!7703 = !DILocalVariable(name: "index", arg: 1, scope: !7700, file: !7701, line: 32, type: !110)
!7704 = !DILocation(line: 0, scope: !7700)
!7705 = !DILocation(line: 34, column: 11, scope: !7700)
!7706 = !DILocation(line: 35, column: 1, scope: !7700)
!7707 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !7550, file: !7550, line: 88, type: !7708, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7710)
!7708 = !DISubroutineType(types: !7709)
!7709 = !{!110, !110}
!7710 = !{!7711}
!7711 = !DILocalVariable(name: "size", arg: 1, scope: !7707, file: !7550, line: 88, type: !110)
!7712 = !DILocation(line: 0, scope: !7707)
!7713 = !DILocation(line: 91, column: 11, scope: !7714)
!7714 = distinct !DILexicalBlock(scope: !7707, file: !7550, line: 91, column: 6)
!7715 = !DILocation(line: 91, column: 6, scope: !7707)
!7716 = !DILocation(line: 100, column: 11, scope: !7717)
!7717 = distinct !DILexicalBlock(scope: !7707, file: !7550, line: 100, column: 6)
!7718 = !DILocation(line: 100, column: 6, scope: !7707)
!7719 = !DILocation(line: 104, column: 35, scope: !7707)
!7720 = !DILocation(line: 104, column: 16, scope: !7707)
!7721 = !DILocation(line: 104, column: 50, scope: !7707)
!7722 = !DILocation(line: 104, column: 72, scope: !7707)
!7723 = !DILocation(line: 104, column: 2, scope: !7707)
!7724 = !DILocation(line: 106, column: 1, scope: !7707)
!7725 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !563, file: !563, line: 307, type: !7726, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7728)
!7726 = !DISubroutineType(types: !7727)
!7727 = !{null, !7522, !178}
!7728 = !{!7729, !7730}
!7729 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7725, file: !563, line: 308, type: !7522)
!7730 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7725, file: !563, line: 308, type: !178)
!7731 = !DILocation(line: 0, scope: !7725)
!7732 = !DILocation(line: 310, column: 6, scope: !7733)
!7733 = distinct !DILexicalBlock(scope: !7725, file: !563, line: 310, column: 6)
!7734 = !DILocation(line: 311, column: 3, scope: !7733)
!7735 = !DILocation(line: 310, column: 6, scope: !7725)
!7736 = !DILocation(line: 313, column: 3, scope: !7737)
!7737 = distinct !DILexicalBlock(scope: !7738, file: !563, line: 313, column: 3)
!7738 = distinct !DILexicalBlock(scope: !7739, file: !563, line: 313, column: 3)
!7739 = distinct !DILexicalBlock(scope: !7740, file: !563, line: 313, column: 3)
!7740 = distinct !DILexicalBlock(scope: !7733, file: !563, line: 311, column: 15)
!7741 = !DILocation(line: 316, column: 1, scope: !7725)
!7742 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !7550, file: !7550, line: 249, type: !7743, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7745)
!7743 = !DISubroutineType(types: !7744)
!7744 = !{!109, !7522, !178}
!7745 = !{!7746, !7747, !7748, !7749}
!7746 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7742, file: !7550, line: 250, type: !7522)
!7747 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7742, file: !7550, line: 250, type: !178)
!7748 = !DILocalVariable(name: "mpu_reg_index", scope: !7742, file: !7550, line: 252, type: !109)
!7749 = !DILocalVariable(name: "i", scope: !7750, file: !7550, line: 264, type: !109)
!7750 = distinct !DILexicalBlock(scope: !7751, file: !7550, line: 264, column: 3)
!7751 = distinct !DILexicalBlock(scope: !7752, file: !7550, line: 261, column: 32)
!7752 = distinct !DILexicalBlock(scope: !7742, file: !7550, line: 261, column: 6)
!7753 = !DILocation(line: 0, scope: !7742)
!7754 = !DILocation(line: 252, column: 22, scope: !7742)
!7755 = !DILocation(line: 258, column: 18, scope: !7742)
!7756 = !DILocation(line: 261, column: 20, scope: !7752)
!7757 = !DILocation(line: 261, column: 6, scope: !7742)
!7758 = !DILocation(line: 0, scope: !7750)
!7759 = !DILocation(line: 265, column: 4, scope: !7760)
!7760 = distinct !DILexicalBlock(scope: !7761, file: !7550, line: 264, column: 59)
!7761 = distinct !DILexicalBlock(scope: !7750, file: !7550, line: 264, column: 3)
!7762 = !DILocation(line: 264, column: 55, scope: !7761)
!7763 = !DILocation(line: 264, column: 33, scope: !7761)
!7764 = !DILocation(line: 264, column: 3, scope: !7750)
!7765 = distinct !{!7765, !7764, !7766}
!7766 = !DILocation(line: 266, column: 3, scope: !7750)
!7767 = !DILocation(line: 269, column: 2, scope: !7742)
!7768 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7769, file: !7769, line: 218, type: !6518, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7770)
!7769 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7770 = !{!7771}
!7771 = !DILocalVariable(name: "rnr", arg: 1, scope: !7768, file: !7769, line: 218, type: !110)
!7772 = !DILocation(line: 0, scope: !7768)
!7773 = !DILocation(line: 220, column: 12, scope: !7768)
!7774 = !DILocation(line: 221, column: 13, scope: !7768)
!7775 = !DILocation(line: 222, column: 1, scope: !7768)
!7776 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !563, file: !563, line: 326, type: !7777, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7779)
!7777 = !DISubroutineType(types: !7778)
!7778 = !{!109}
!7779 = !{!7780}
!7780 = !DILocalVariable(name: "r_index", scope: !7776, file: !563, line: 328, type: !110)
!7781 = !DILocation(line: 330, column: 17, scope: !7782)
!7782 = distinct !DILexicalBlock(scope: !7776, file: !563, line: 330, column: 6)
!7783 = !DILocation(line: 330, column: 29, scope: !7782)
!7784 = !DILocation(line: 330, column: 6, scope: !7776)
!7785 = !DILocation(line: 337, column: 3, scope: !7786)
!7786 = distinct !DILexicalBlock(scope: !7787, file: !563, line: 337, column: 3)
!7787 = distinct !DILexicalBlock(scope: !7788, file: !563, line: 337, column: 3)
!7788 = distinct !DILexicalBlock(scope: !7789, file: !563, line: 337, column: 3)
!7789 = distinct !DILexicalBlock(scope: !7782, file: !563, line: 330, column: 50)
!7790 = !DILocation(line: 347, column: 2, scope: !7776)
!7791 = !DILocation(line: 0, scope: !7776)
!7792 = !DILocation(line: 364, column: 29, scope: !7793)
!7793 = distinct !DILexicalBlock(scope: !7794, file: !563, line: 364, column: 2)
!7794 = distinct !DILexicalBlock(scope: !7776, file: !563, line: 364, column: 2)
!7795 = !DILocation(line: 364, column: 2, scope: !7794)
!7796 = !DILocation(line: 365, column: 25, scope: !7797)
!7797 = distinct !DILexicalBlock(scope: !7793, file: !563, line: 364, column: 66)
!7798 = !DILocation(line: 365, column: 3, scope: !7797)
!7799 = !DILocation(line: 364, column: 62, scope: !7793)
!7800 = distinct !{!7800, !7795, !7801}
!7801 = !DILocation(line: 366, column: 2, scope: !7794)
!7802 = !DILocation(line: 369, column: 23, scope: !7776)
!7803 = !DILocation(line: 369, column: 21, scope: !7776)
!7804 = !DILocation(line: 372, column: 2, scope: !7776)
!7805 = !DILocation(line: 433, column: 2, scope: !7806)
!7806 = distinct !DILexicalBlock(scope: !7807, file: !563, line: 433, column: 2)
!7807 = distinct !DILexicalBlock(scope: !7776, file: !563, line: 433, column: 2)
!7808 = !DILocation(line: 433, column: 2, scope: !7807)
!7809 = !DILocation(line: 433, column: 2, scope: !7810)
!7810 = distinct !DILexicalBlock(scope: !7806, file: !563, line: 433, column: 2)
!7811 = !DILocation(line: 444, column: 1, scope: !7776)
!7812 = distinct !DISubprogram(name: "strcpy", scope: !7813, file: !7813, line: 20, type: !7814, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2865, retainedNodes: !7818)
!7813 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7814 = !DISubroutineType(types: !7815)
!7815 = !{!285, !7816, !7817}
!7816 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !285)
!7817 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !279)
!7818 = !{!7819, !7820, !7821}
!7819 = !DILocalVariable(name: "d", arg: 1, scope: !7812, file: !7813, line: 20, type: !7816)
!7820 = !DILocalVariable(name: "s", arg: 2, scope: !7812, file: !7813, line: 20, type: !7817)
!7821 = !DILocalVariable(name: "dest", scope: !7812, file: !7813, line: 22, type: !285)
!7822 = !DILocation(line: 0, scope: !7812)
!7823 = !DILocation(line: 24, column: 9, scope: !7812)
!7824 = !DILocation(line: 24, column: 12, scope: !7812)
!7825 = !DILocation(line: 24, column: 2, scope: !7812)
!7826 = !DILocation(line: 25, column: 6, scope: !7827)
!7827 = distinct !DILexicalBlock(scope: !7812, file: !7813, line: 24, column: 21)
!7828 = !DILocation(line: 26, column: 4, scope: !7827)
!7829 = !DILocation(line: 27, column: 4, scope: !7827)
!7830 = distinct !{!7830, !7825, !7831}
!7831 = !DILocation(line: 28, column: 2, scope: !7812)
!7832 = !DILocation(line: 30, column: 5, scope: !7812)
!7833 = !DILocation(line: 32, column: 2, scope: !7812)
!7834 = distinct !DISubprogram(name: "strncpy", scope: !7813, file: !7813, line: 42, type: !7835, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2865, retainedNodes: !7837)
!7835 = !DISubroutineType(types: !7836)
!7836 = !{!285, !7816, !7817, !232}
!7837 = !{!7838, !7839, !7840, !7841}
!7838 = !DILocalVariable(name: "d", arg: 1, scope: !7834, file: !7813, line: 42, type: !7816)
!7839 = !DILocalVariable(name: "s", arg: 2, scope: !7834, file: !7813, line: 42, type: !7817)
!7840 = !DILocalVariable(name: "n", arg: 3, scope: !7834, file: !7813, line: 42, type: !232)
!7841 = !DILocalVariable(name: "dest", scope: !7834, file: !7813, line: 44, type: !285)
!7842 = !DILocation(line: 0, scope: !7834)
!7843 = !DILocation(line: 46, column: 12, scope: !7834)
!7844 = !DILocation(line: 46, column: 17, scope: !7834)
!7845 = !DILocation(line: 46, column: 20, scope: !7834)
!7846 = !DILocation(line: 46, column: 23, scope: !7834)
!7847 = !DILocation(line: 46, column: 2, scope: !7834)
!7848 = !DILocation(line: 47, column: 6, scope: !7849)
!7849 = distinct !DILexicalBlock(scope: !7834, file: !7813, line: 46, column: 32)
!7850 = !DILocation(line: 48, column: 4, scope: !7849)
!7851 = !DILocation(line: 49, column: 4, scope: !7849)
!7852 = !DILocation(line: 50, column: 4, scope: !7849)
!7853 = distinct !{!7853, !7847, !7854}
!7854 = !DILocation(line: 51, column: 2, scope: !7834)
!7855 = !DILocation(line: 54, column: 6, scope: !7856)
!7856 = distinct !DILexicalBlock(scope: !7834, file: !7813, line: 53, column: 16)
!7857 = !DILocation(line: 55, column: 4, scope: !7856)
!7858 = !DILocation(line: 56, column: 4, scope: !7856)
!7859 = !DILocation(line: 53, column: 11, scope: !7834)
!7860 = !DILocation(line: 53, column: 2, scope: !7834)
!7861 = distinct !{!7861, !7860, !7862}
!7862 = !DILocation(line: 57, column: 2, scope: !7834)
!7863 = !DILocation(line: 59, column: 2, scope: !7834)
!7864 = distinct !DISubprogram(name: "strchr", scope: !7813, file: !7813, line: 69, type: !7865, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2865, retainedNodes: !7867)
!7865 = !DISubroutineType(types: !7866)
!7866 = !{!285, !279, !109}
!7867 = !{!7868, !7869, !7870}
!7868 = !DILocalVariable(name: "s", arg: 1, scope: !7864, file: !7813, line: 69, type: !279)
!7869 = !DILocalVariable(name: "c", arg: 2, scope: !7864, file: !7813, line: 69, type: !109)
!7870 = !DILocalVariable(name: "tmp", scope: !7864, file: !7813, line: 71, type: !148)
!7871 = !DILocation(line: 0, scope: !7864)
!7872 = !DILocation(line: 73, column: 2, scope: !7864)
!7873 = !DILocation(line: 73, column: 10, scope: !7864)
!7874 = !DILocation(line: 73, column: 13, scope: !7864)
!7875 = !DILocation(line: 73, column: 21, scope: !7864)
!7876 = !DILocation(line: 74, column: 4, scope: !7877)
!7877 = distinct !DILexicalBlock(scope: !7864, file: !7813, line: 73, column: 38)
!7878 = distinct !{!7878, !7872, !7879}
!7879 = !DILocation(line: 75, column: 2, scope: !7864)
!7880 = !DILocation(line: 77, column: 9, scope: !7864)
!7881 = !DILocation(line: 77, column: 2, scope: !7864)
!7882 = distinct !DISubprogram(name: "strrchr", scope: !7813, file: !7813, line: 87, type: !7865, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2865, retainedNodes: !7883)
!7883 = !{!7884, !7885, !7886}
!7884 = !DILocalVariable(name: "s", arg: 1, scope: !7882, file: !7813, line: 87, type: !279)
!7885 = !DILocalVariable(name: "c", arg: 2, scope: !7882, file: !7813, line: 87, type: !109)
!7886 = !DILocalVariable(name: "match", scope: !7882, file: !7813, line: 89, type: !285)
!7887 = !DILocation(line: 0, scope: !7882)
!7888 = !DILocation(line: 91, column: 2, scope: !7882)
!7889 = !DILocation(line: 92, column: 7, scope: !7890)
!7890 = distinct !DILexicalBlock(scope: !7891, file: !7813, line: 92, column: 7)
!7891 = distinct !DILexicalBlock(scope: !7882, file: !7813, line: 91, column: 5)
!7892 = !DILocation(line: 92, column: 10, scope: !7890)
!7893 = !DILocation(line: 92, column: 7, scope: !7891)
!7894 = !DILocation(line: 95, column: 13, scope: !7882)
!7895 = !DILocation(line: 95, column: 2, scope: !7891)
!7896 = distinct !{!7896, !7888, !7897}
!7897 = !DILocation(line: 95, column: 15, scope: !7882)
!7898 = !DILocation(line: 97, column: 2, scope: !7882)
!7899 = distinct !DISubprogram(name: "strlen", scope: !7813, file: !7813, line: 107, type: !7900, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2865, retainedNodes: !7902)
!7900 = !DISubroutineType(types: !7901)
!7901 = !{!232, !279}
!7902 = !{!7903, !7904}
!7903 = !DILocalVariable(name: "s", arg: 1, scope: !7899, file: !7813, line: 107, type: !279)
!7904 = !DILocalVariable(name: "n", scope: !7899, file: !7813, line: 109, type: !232)
!7905 = !DILocation(line: 0, scope: !7899)
!7906 = !DILocation(line: 111, column: 9, scope: !7899)
!7907 = !DILocation(line: 111, column: 12, scope: !7899)
!7908 = !DILocation(line: 111, column: 2, scope: !7899)
!7909 = !DILocation(line: 112, column: 4, scope: !7910)
!7910 = distinct !DILexicalBlock(scope: !7899, file: !7813, line: 111, column: 21)
!7911 = !DILocation(line: 113, column: 4, scope: !7910)
!7912 = distinct !{!7912, !7908, !7913}
!7913 = !DILocation(line: 114, column: 2, scope: !7899)
!7914 = !DILocation(line: 116, column: 2, scope: !7899)
!7915 = distinct !DISubprogram(name: "strnlen", scope: !7813, file: !7813, line: 126, type: !7916, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2865, retainedNodes: !7918)
!7916 = !DISubroutineType(types: !7917)
!7917 = !{!232, !279, !232}
!7918 = !{!7919, !7920, !7921}
!7919 = !DILocalVariable(name: "s", arg: 1, scope: !7915, file: !7813, line: 126, type: !279)
!7920 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7915, file: !7813, line: 126, type: !232)
!7921 = !DILocalVariable(name: "n", scope: !7915, file: !7813, line: 128, type: !232)
!7922 = !DILocation(line: 0, scope: !7915)
!7923 = !DILocation(line: 130, column: 9, scope: !7915)
!7924 = !DILocation(line: 130, column: 12, scope: !7915)
!7925 = !DILocation(line: 130, column: 20, scope: !7915)
!7926 = !DILocation(line: 130, column: 2, scope: !7915)
!7927 = !DILocation(line: 131, column: 4, scope: !7928)
!7928 = distinct !DILexicalBlock(scope: !7915, file: !7813, line: 130, column: 35)
!7929 = !DILocation(line: 132, column: 4, scope: !7928)
!7930 = distinct !{!7930, !7926, !7931}
!7931 = !DILocation(line: 133, column: 2, scope: !7915)
!7932 = !DILocation(line: 135, column: 2, scope: !7915)
!7933 = distinct !DISubprogram(name: "strcmp", scope: !7813, file: !7813, line: 145, type: !7934, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2865, retainedNodes: !7936)
!7934 = !DISubroutineType(types: !7935)
!7935 = !{!109, !279, !279}
!7936 = !{!7937, !7938}
!7937 = !DILocalVariable(name: "s1", arg: 1, scope: !7933, file: !7813, line: 145, type: !279)
!7938 = !DILocalVariable(name: "s2", arg: 2, scope: !7933, file: !7813, line: 145, type: !279)
!7939 = !DILocation(line: 0, scope: !7933)
!7940 = !DILocation(line: 147, column: 10, scope: !7933)
!7941 = !DILocation(line: 147, column: 17, scope: !7933)
!7942 = !DILocation(line: 147, column: 14, scope: !7933)
!7943 = !DILocation(line: 147, column: 22, scope: !7933)
!7944 = !DILocation(line: 148, column: 5, scope: !7945)
!7945 = distinct !DILexicalBlock(scope: !7933, file: !7813, line: 147, column: 40)
!7946 = !DILocation(line: 149, column: 5, scope: !7945)
!7947 = distinct !{!7947, !7948, !7949}
!7948 = !DILocation(line: 147, column: 2, scope: !7933)
!7949 = !DILocation(line: 150, column: 2, scope: !7933)
!7950 = !DILocation(line: 152, column: 9, scope: !7933)
!7951 = !DILocation(line: 152, column: 15, scope: !7933)
!7952 = !DILocation(line: 152, column: 13, scope: !7933)
!7953 = !DILocation(line: 152, column: 2, scope: !7933)
!7954 = distinct !DISubprogram(name: "strncmp", scope: !7813, file: !7813, line: 162, type: !7955, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2865, retainedNodes: !7957)
!7955 = !DISubroutineType(types: !7956)
!7956 = !{!109, !279, !279, !232}
!7957 = !{!7958, !7959, !7960}
!7958 = !DILocalVariable(name: "s1", arg: 1, scope: !7954, file: !7813, line: 162, type: !279)
!7959 = !DILocalVariable(name: "s2", arg: 2, scope: !7954, file: !7813, line: 162, type: !279)
!7960 = !DILocalVariable(name: "n", arg: 3, scope: !7954, file: !7813, line: 162, type: !232)
!7961 = !DILocation(line: 0, scope: !7954)
!7962 = !DILocation(line: 164, column: 17, scope: !7954)
!7963 = !DILocation(line: 164, column: 21, scope: !7954)
!7964 = !DILocation(line: 164, column: 28, scope: !7954)
!7965 = !DILocation(line: 164, column: 25, scope: !7954)
!7966 = !DILocation(line: 164, column: 33, scope: !7954)
!7967 = !DILocation(line: 165, column: 5, scope: !7968)
!7968 = distinct !DILexicalBlock(scope: !7954, file: !7813, line: 164, column: 51)
!7969 = !DILocation(line: 166, column: 5, scope: !7968)
!7970 = !DILocation(line: 167, column: 4, scope: !7968)
!7971 = distinct !{!7971, !7972, !7973}
!7972 = !DILocation(line: 164, column: 2, scope: !7954)
!7973 = !DILocation(line: 168, column: 2, scope: !7954)
!7974 = !DILocation(line: 170, column: 25, scope: !7954)
!7975 = !DILocation(line: 170, column: 31, scope: !7954)
!7976 = !DILocation(line: 170, column: 29, scope: !7954)
!7977 = !DILocation(line: 170, column: 9, scope: !7954)
!7978 = !DILocation(line: 170, column: 2, scope: !7954)
!7979 = distinct !DISubprogram(name: "strtok_r", scope: !7813, file: !7813, line: 180, type: !7980, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2865, retainedNodes: !7982)
!7980 = !DISubroutineType(types: !7981)
!7981 = !{!285, !285, !279, !284}
!7982 = !{!7983, !7984, !7985, !7986, !7987}
!7983 = !DILocalVariable(name: "str", arg: 1, scope: !7979, file: !7813, line: 180, type: !285)
!7984 = !DILocalVariable(name: "sep", arg: 2, scope: !7979, file: !7813, line: 180, type: !279)
!7985 = !DILocalVariable(name: "state", arg: 3, scope: !7979, file: !7813, line: 180, type: !284)
!7986 = !DILocalVariable(name: "start", scope: !7979, file: !7813, line: 182, type: !285)
!7987 = !DILocalVariable(name: "end", scope: !7979, file: !7813, line: 182, type: !285)
!7988 = !DILocation(line: 0, scope: !7979)
!7989 = !DILocation(line: 184, column: 10, scope: !7979)
!7990 = !DILocation(line: 184, column: 22, scope: !7979)
!7991 = !DILocation(line: 187, column: 9, scope: !7979)
!7992 = !DILocation(line: 187, column: 16, scope: !7979)
!7993 = !DILocation(line: 187, column: 19, scope: !7979)
!7994 = !DILocation(line: 187, column: 2, scope: !7979)
!7995 = !DILocation(line: 188, column: 8, scope: !7996)
!7996 = distinct !DILexicalBlock(scope: !7979, file: !7813, line: 187, column: 40)
!7997 = distinct !{!7997, !7994, !7998}
!7998 = !DILocation(line: 189, column: 2, scope: !7979)
!7999 = !DILocation(line: 198, column: 9, scope: !7979)
!8000 = !DILocation(line: 198, column: 18, scope: !7979)
!8001 = !DILocation(line: 198, column: 17, scope: !7979)
!8002 = !DILocation(line: 198, column: 2, scope: !7979)
!8003 = !DILocation(line: 199, column: 6, scope: !8004)
!8004 = distinct !DILexicalBlock(scope: !7979, file: !7813, line: 198, column: 37)
!8005 = !DILocation(line: 198, column: 14, scope: !7979)
!8006 = distinct !{!8006, !8002, !8007}
!8007 = !DILocation(line: 200, column: 2, scope: !7979)
!8008 = !DILocation(line: 203, column: 8, scope: !8009)
!8009 = distinct !DILexicalBlock(scope: !8010, file: !7813, line: 202, column: 20)
!8010 = distinct !DILexicalBlock(scope: !7979, file: !7813, line: 202, column: 6)
!8011 = !DILocation(line: 204, column: 16, scope: !8009)
!8012 = !DILocation(line: 205, column: 2, scope: !8009)
!8013 = !DILocation(line: 210, column: 1, scope: !7979)
!8014 = distinct !DISubprogram(name: "strcat", scope: !7813, file: !7813, line: 212, type: !7814, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2865, retainedNodes: !8015)
!8015 = !{!8016, !8017}
!8016 = !DILocalVariable(name: "dest", arg: 1, scope: !8014, file: !7813, line: 212, type: !7816)
!8017 = !DILocalVariable(name: "src", arg: 2, scope: !8014, file: !7813, line: 212, type: !7817)
!8018 = !DILocation(line: 0, scope: !8014)
!8019 = !DILocation(line: 214, column: 16, scope: !8014)
!8020 = !DILocation(line: 214, column: 14, scope: !8014)
!8021 = !DILocation(line: 214, column: 2, scope: !8014)
!8022 = !DILocation(line: 215, column: 2, scope: !8014)
!8023 = distinct !DISubprogram(name: "strncat", scope: !7813, file: !7813, line: 218, type: !7835, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2865, retainedNodes: !8024)
!8024 = !{!8025, !8026, !8027, !8028, !8029}
!8025 = !DILocalVariable(name: "dest", arg: 1, scope: !8023, file: !7813, line: 218, type: !7816)
!8026 = !DILocalVariable(name: "src", arg: 2, scope: !8023, file: !7813, line: 218, type: !7817)
!8027 = !DILocalVariable(name: "n", arg: 3, scope: !8023, file: !7813, line: 219, type: !232)
!8028 = !DILocalVariable(name: "orig_dest", scope: !8023, file: !7813, line: 221, type: !285)
!8029 = !DILocalVariable(name: "len", scope: !8023, file: !7813, line: 222, type: !232)
!8030 = !DILocation(line: 0, scope: !8023)
!8031 = !DILocation(line: 222, column: 15, scope: !8023)
!8032 = !DILocation(line: 224, column: 7, scope: !8023)
!8033 = !DILocation(line: 225, column: 14, scope: !8023)
!8034 = !DILocation(line: 225, column: 19, scope: !8023)
!8035 = !DILocation(line: 225, column: 11, scope: !8023)
!8036 = !DILocation(line: 225, column: 23, scope: !8023)
!8037 = !DILocation(line: 225, column: 28, scope: !8023)
!8038 = !DILocation(line: 225, column: 2, scope: !8023)
!8039 = !DILocation(line: 226, column: 17, scope: !8040)
!8040 = distinct !DILexicalBlock(scope: !8023, file: !7813, line: 225, column: 38)
!8041 = !DILocation(line: 226, column: 8, scope: !8040)
!8042 = !DILocation(line: 226, column: 11, scope: !8040)
!8043 = distinct !{!8043, !8038, !8044}
!8044 = !DILocation(line: 227, column: 2, scope: !8023)
!8045 = !DILocation(line: 228, column: 8, scope: !8023)
!8046 = !DILocation(line: 230, column: 2, scope: !8023)
!8047 = distinct !DISubprogram(name: "memcmp", scope: !7813, file: !7813, line: 239, type: !8048, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2865, retainedNodes: !8050)
!8048 = !DISubroutineType(types: !8049)
!8049 = !{!109, !13, !13, !232}
!8050 = !{!8051, !8052, !8053, !8054, !8055}
!8051 = !DILocalVariable(name: "m1", arg: 1, scope: !8047, file: !7813, line: 239, type: !13)
!8052 = !DILocalVariable(name: "m2", arg: 2, scope: !8047, file: !7813, line: 239, type: !13)
!8053 = !DILocalVariable(name: "n", arg: 3, scope: !8047, file: !7813, line: 239, type: !232)
!8054 = !DILocalVariable(name: "c1", scope: !8047, file: !7813, line: 241, type: !279)
!8055 = !DILocalVariable(name: "c2", scope: !8047, file: !7813, line: 242, type: !279)
!8056 = !DILocation(line: 0, scope: !8047)
!8057 = !DILocation(line: 244, column: 7, scope: !8058)
!8058 = distinct !DILexicalBlock(scope: !8047, file: !7813, line: 244, column: 6)
!8059 = !DILocation(line: 244, column: 6, scope: !8047)
!8060 = !DILocation(line: 248, column: 10, scope: !8047)
!8061 = !DILocation(line: 248, column: 14, scope: !8047)
!8062 = !DILocation(line: 248, column: 19, scope: !8047)
!8063 = !DILocation(line: 248, column: 2, scope: !8047)
!8064 = !DILocation(line: 248, column: 23, scope: !8047)
!8065 = !DILocation(line: 248, column: 30, scope: !8047)
!8066 = !DILocation(line: 248, column: 27, scope: !8047)
!8067 = !DILocation(line: 249, column: 5, scope: !8068)
!8068 = distinct !DILexicalBlock(scope: !8047, file: !7813, line: 248, column: 36)
!8069 = !DILocation(line: 250, column: 5, scope: !8068)
!8070 = distinct !{!8070, !8063, !8071}
!8071 = !DILocation(line: 251, column: 2, scope: !8047)
!8072 = !DILocation(line: 253, column: 9, scope: !8047)
!8073 = !DILocation(line: 253, column: 15, scope: !8047)
!8074 = !DILocation(line: 253, column: 13, scope: !8047)
!8075 = !DILocation(line: 253, column: 2, scope: !8047)
!8076 = !DILocation(line: 254, column: 1, scope: !8047)
!8077 = distinct !DISubprogram(name: "memmove", scope: !7813, file: !7813, line: 263, type: !8078, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2865, retainedNodes: !8080)
!8078 = !DISubroutineType(types: !8079)
!8079 = !{!107, !107, !13, !232}
!8080 = !{!8081, !8082, !8083, !8084, !8085}
!8081 = !DILocalVariable(name: "d", arg: 1, scope: !8077, file: !7813, line: 263, type: !107)
!8082 = !DILocalVariable(name: "s", arg: 2, scope: !8077, file: !7813, line: 263, type: !13)
!8083 = !DILocalVariable(name: "n", arg: 3, scope: !8077, file: !7813, line: 263, type: !232)
!8084 = !DILocalVariable(name: "dest", scope: !8077, file: !7813, line: 265, type: !285)
!8085 = !DILocalVariable(name: "src", scope: !8077, file: !7813, line: 266, type: !279)
!8086 = !DILocation(line: 0, scope: !8077)
!8087 = !DILocation(line: 268, column: 21, scope: !8088)
!8088 = distinct !DILexicalBlock(scope: !8077, file: !7813, line: 268, column: 6)
!8089 = !DILocation(line: 268, column: 28, scope: !8088)
!8090 = !DILocation(line: 268, column: 6, scope: !8077)
!8091 = !DILocation(line: 280, column: 12, scope: !8092)
!8092 = distinct !DILexicalBlock(scope: !8088, file: !7813, line: 278, column: 9)
!8093 = !DILocation(line: 280, column: 3, scope: !8092)
!8094 = !DILocation(line: 275, column: 5, scope: !8095)
!8095 = distinct !DILexicalBlock(scope: !8096, file: !7813, line: 274, column: 17)
!8096 = distinct !DILexicalBlock(scope: !8088, file: !7813, line: 268, column: 33)
!8097 = !DILocation(line: 276, column: 14, scope: !8095)
!8098 = !DILocation(line: 276, column: 4, scope: !8095)
!8099 = !DILocation(line: 276, column: 12, scope: !8095)
!8100 = !DILocation(line: 274, column: 12, scope: !8096)
!8101 = !DILocation(line: 274, column: 3, scope: !8096)
!8102 = distinct !{!8102, !8101, !8103}
!8103 = !DILocation(line: 277, column: 3, scope: !8096)
!8104 = !DILocation(line: 281, column: 12, scope: !8105)
!8105 = distinct !DILexicalBlock(scope: !8092, file: !7813, line: 280, column: 17)
!8106 = !DILocation(line: 281, column: 10, scope: !8105)
!8107 = !DILocation(line: 282, column: 8, scope: !8105)
!8108 = !DILocation(line: 283, column: 7, scope: !8105)
!8109 = !DILocation(line: 284, column: 5, scope: !8105)
!8110 = distinct !{!8110, !8093, !8111}
!8111 = !DILocation(line: 285, column: 3, scope: !8092)
!8112 = !DILocation(line: 288, column: 2, scope: !8077)
!8113 = distinct !DISubprogram(name: "memcpy", scope: !7813, file: !7813, line: 298, type: !8114, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2865, retainedNodes: !8118)
!8114 = !DISubroutineType(types: !8115)
!8115 = !{!107, !8116, !8117, !232}
!8116 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !107)
!8117 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!8118 = !{!8119, !8120, !8121, !8122, !8123}
!8119 = !DILocalVariable(name: "d", arg: 1, scope: !8113, file: !7813, line: 298, type: !8116)
!8120 = !DILocalVariable(name: "s", arg: 2, scope: !8113, file: !7813, line: 298, type: !8117)
!8121 = !DILocalVariable(name: "n", arg: 3, scope: !8113, file: !7813, line: 298, type: !232)
!8122 = !DILocalVariable(name: "d_byte", scope: !8113, file: !7813, line: 302, type: !991)
!8123 = !DILocalVariable(name: "s_byte", scope: !8113, file: !7813, line: 303, type: !2868)
!8124 = !DILocation(line: 0, scope: !8113)
!8125 = !DILocation(line: 337, column: 11, scope: !8113)
!8126 = !DILocation(line: 337, column: 2, scope: !8113)
!8127 = !DILocation(line: 338, column: 25, scope: !8128)
!8128 = distinct !DILexicalBlock(scope: !8113, file: !7813, line: 337, column: 16)
!8129 = !DILocation(line: 338, column: 17, scope: !8128)
!8130 = !DILocation(line: 338, column: 11, scope: !8128)
!8131 = !DILocation(line: 338, column: 15, scope: !8128)
!8132 = !DILocation(line: 339, column: 4, scope: !8128)
!8133 = distinct !{!8133, !8126, !8134}
!8134 = !DILocation(line: 340, column: 2, scope: !8113)
!8135 = !DILocation(line: 342, column: 2, scope: !8113)
!8136 = distinct !DISubprogram(name: "memset", scope: !7813, file: !7813, line: 352, type: !8137, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2865, retainedNodes: !8139)
!8137 = !DISubroutineType(types: !8138)
!8138 = !{!107, !107, !109, !232}
!8139 = !{!8140, !8141, !8142, !8143, !8144}
!8140 = !DILocalVariable(name: "buf", arg: 1, scope: !8136, file: !7813, line: 352, type: !107)
!8141 = !DILocalVariable(name: "c", arg: 2, scope: !8136, file: !7813, line: 352, type: !109)
!8142 = !DILocalVariable(name: "n", arg: 3, scope: !8136, file: !7813, line: 352, type: !232)
!8143 = !DILocalVariable(name: "d_byte", scope: !8136, file: !7813, line: 356, type: !991)
!8144 = !DILocalVariable(name: "c_byte", scope: !8136, file: !7813, line: 357, type: !179)
!8145 = !DILocation(line: 0, scope: !8136)
!8146 = !DILocation(line: 357, column: 25, scope: !8136)
!8147 = !DILocation(line: 389, column: 11, scope: !8136)
!8148 = !DILocation(line: 389, column: 2, scope: !8136)
!8149 = !DILocation(line: 390, column: 11, scope: !8150)
!8150 = distinct !DILexicalBlock(scope: !8136, file: !7813, line: 389, column: 16)
!8151 = !DILocation(line: 390, column: 15, scope: !8150)
!8152 = !DILocation(line: 391, column: 4, scope: !8150)
!8153 = distinct !{!8153, !8148, !8154}
!8154 = !DILocation(line: 392, column: 2, scope: !8136)
!8155 = !DILocation(line: 394, column: 2, scope: !8136)
!8156 = distinct !DISubprogram(name: "memchr", scope: !7813, file: !7813, line: 404, type: !8157, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2865, retainedNodes: !8159)
!8157 = !DISubroutineType(types: !8158)
!8158 = !{!107, !13, !109, !232}
!8159 = !{!8160, !8161, !8162, !8163}
!8160 = !DILocalVariable(name: "s", arg: 1, scope: !8156, file: !7813, line: 404, type: !13)
!8161 = !DILocalVariable(name: "c", arg: 2, scope: !8156, file: !7813, line: 404, type: !109)
!8162 = !DILocalVariable(name: "n", arg: 3, scope: !8156, file: !7813, line: 404, type: !232)
!8163 = !DILocalVariable(name: "p", scope: !8164, file: !7813, line: 407, type: !2868)
!8164 = distinct !DILexicalBlock(scope: !8165, file: !7813, line: 406, column: 14)
!8165 = distinct !DILexicalBlock(scope: !8156, file: !7813, line: 406, column: 6)
!8166 = !DILocation(line: 0, scope: !8156)
!8167 = !DILocation(line: 406, column: 8, scope: !8165)
!8168 = !DILocation(line: 406, column: 6, scope: !8156)
!8169 = !DILocation(line: 409, column: 3, scope: !8164)
!8170 = !DILocation(line: 0, scope: !8164)
!8171 = !DILocation(line: 410, column: 8, scope: !8172)
!8172 = distinct !DILexicalBlock(scope: !8173, file: !7813, line: 410, column: 8)
!8173 = distinct !DILexicalBlock(scope: !8164, file: !7813, line: 409, column: 6)
!8174 = !DILocation(line: 410, column: 13, scope: !8172)
!8175 = !DILocation(line: 410, column: 8, scope: !8173)
!8176 = distinct !{!8176, !8169, !8177}
!8177 = !DILocation(line: 414, column: 20, scope: !8164)
!8178 = !DILocation(line: 417, column: 2, scope: !8156)
!8179 = !DILocation(line: 418, column: 1, scope: !8156)
!8180 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !573, file: !573, line: 23, type: !4316, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8181)
!8181 = !{!8182}
!8182 = !DILocalVariable(name: "hook", arg: 1, scope: !8180, file: !573, line: 23, type: !302)
!8183 = !DILocation(line: 0, scope: !8180)
!8184 = !DILocation(line: 25, column: 15, scope: !8180)
!8185 = !DILocation(line: 26, column: 1, scope: !8180)
!8186 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !573, file: !573, line: 14, type: !303, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8187)
!8187 = !{!8188}
!8188 = !DILocalVariable(name: "c", arg: 1, scope: !8186, file: !573, line: 14, type: !109)
!8189 = !DILocation(line: 0, scope: !8186)
!8190 = !DILocation(line: 18, column: 2, scope: !8186)
!8191 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !573, file: !573, line: 28, type: !8192, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8194)
!8192 = !DISubroutineType(types: !8193)
!8193 = !{!109, !109, !569}
!8194 = !{!8195, !8196}
!8195 = !DILocalVariable(name: "c", arg: 1, scope: !8191, file: !573, line: 28, type: !109)
!8196 = !DILocalVariable(name: "stream", arg: 2, scope: !8191, file: !573, line: 28, type: !569)
!8197 = !DILocation(line: 0, scope: !8191)
!8198 = !DILocation(line: 30, column: 27, scope: !8191)
!8199 = !DILocation(line: 30, column: 50, scope: !8191)
!8200 = !DILocation(line: 30, column: 9, scope: !8191)
!8201 = !DILocation(line: 30, column: 2, scope: !8191)
!8202 = distinct !DISubprogram(name: "fputc", scope: !573, file: !573, line: 41, type: !8192, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8203)
!8203 = !{!8204, !8205}
!8204 = !DILocalVariable(name: "c", arg: 1, scope: !8202, file: !573, line: 41, type: !109)
!8205 = !DILocalVariable(name: "stream", arg: 2, scope: !8202, file: !573, line: 41, type: !569)
!8206 = !DILocation(line: 0, scope: !8202)
!8207 = !DILocation(line: 43, column: 9, scope: !8202)
!8208 = !DILocation(line: 43, column: 2, scope: !8202)
!8209 = distinct !DISubprogram(name: "zephyr_fputc", scope: !8210, file: !8210, line: 72, type: !8192, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8211)
!8210 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple")
!8211 = !{!8212, !8213}
!8212 = !DILocalVariable(name: "c", arg: 1, scope: !8209, file: !8210, line: 72, type: !109)
!8213 = !DILocalVariable(name: "stream", arg: 2, scope: !8209, file: !8210, line: 72, type: !569)
!8214 = !DILocation(line: 0, scope: !8209)
!8215 = !DILocation(line: 81, column: 2, scope: !8216)
!8216 = distinct !DILexicalBlock(scope: !8209, file: !8210, line: 81, column: 2)
!8217 = !{i64 2154911941}
!8218 = !DILocation(line: 82, column: 9, scope: !8209)
!8219 = !DILocation(line: 82, column: 2, scope: !8209)
!8220 = distinct !DISubprogram(name: "fputs", scope: !573, file: !573, line: 46, type: !8221, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8224)
!8221 = !DISubroutineType(types: !8222)
!8222 = !{!109, !7817, !8223}
!8223 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !569)
!8224 = !{!8225, !8226, !8227, !8228}
!8225 = !DILocalVariable(name: "s", arg: 1, scope: !8220, file: !573, line: 46, type: !7817)
!8226 = !DILocalVariable(name: "stream", arg: 2, scope: !8220, file: !573, line: 46, type: !8223)
!8227 = !DILocalVariable(name: "len", scope: !8220, file: !573, line: 48, type: !109)
!8228 = !DILocalVariable(name: "ret", scope: !8220, file: !573, line: 49, type: !109)
!8229 = !DILocation(line: 0, scope: !8220)
!8230 = !DILocation(line: 48, column: 12, scope: !8220)
!8231 = !DILocation(line: 51, column: 8, scope: !8220)
!8232 = !DILocation(line: 53, column: 13, scope: !8220)
!8233 = !DILocation(line: 53, column: 9, scope: !8220)
!8234 = !DILocation(line: 53, column: 2, scope: !8220)
!8235 = distinct !DISubprogram(name: "fwrite", scope: !573, file: !573, line: 99, type: !8236, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8238)
!8236 = !DISubroutineType(types: !8237)
!8237 = !{!232, !8117, !232, !232, !8223}
!8238 = !{!8239, !8240, !8241, !8242}
!8239 = !DILocalVariable(name: "ptr", arg: 1, scope: !8235, file: !573, line: 99, type: !8117)
!8240 = !DILocalVariable(name: "size", arg: 2, scope: !8235, file: !573, line: 99, type: !232)
!8241 = !DILocalVariable(name: "nitems", arg: 3, scope: !8235, file: !573, line: 99, type: !232)
!8242 = !DILocalVariable(name: "stream", arg: 4, scope: !8235, file: !573, line: 100, type: !8223)
!8243 = !DILocation(line: 0, scope: !8235)
!8244 = !DILocation(line: 102, column: 9, scope: !8235)
!8245 = !DILocation(line: 102, column: 2, scope: !8235)
!8246 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !8210, file: !8210, line: 96, type: !8236, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8247)
!8247 = !{!8248, !8249, !8250, !8251}
!8248 = !DILocalVariable(name: "ptr", arg: 1, scope: !8246, file: !8210, line: 96, type: !8117)
!8249 = !DILocalVariable(name: "size", arg: 2, scope: !8246, file: !8210, line: 96, type: !232)
!8250 = !DILocalVariable(name: "nitems", arg: 3, scope: !8246, file: !8210, line: 96, type: !232)
!8251 = !DILocalVariable(name: "stream", arg: 4, scope: !8246, file: !8210, line: 96, type: !8223)
!8252 = !DILocation(line: 0, scope: !8246)
!8253 = !DILocation(line: 107, column: 2, scope: !8254)
!8254 = distinct !DILexicalBlock(scope: !8246, file: !8210, line: 107, column: 2)
!8255 = !{i64 2154912045}
!8256 = !DILocation(line: 108, column: 9, scope: !8246)
!8257 = !DILocation(line: 108, column: 2, scope: !8246)
!8258 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !573, file: !573, line: 56, type: !8236, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8259)
!8259 = !{!8260, !8261, !8262, !8263, !8264, !8265, !8266, !8267}
!8260 = !DILocalVariable(name: "ptr", arg: 1, scope: !8258, file: !573, line: 56, type: !8117)
!8261 = !DILocalVariable(name: "size", arg: 2, scope: !8258, file: !573, line: 56, type: !232)
!8262 = !DILocalVariable(name: "nitems", arg: 3, scope: !8258, file: !573, line: 57, type: !232)
!8263 = !DILocalVariable(name: "stream", arg: 4, scope: !8258, file: !573, line: 57, type: !8223)
!8264 = !DILocalVariable(name: "i", scope: !8258, file: !573, line: 59, type: !232)
!8265 = !DILocalVariable(name: "j", scope: !8258, file: !573, line: 60, type: !232)
!8266 = !DILocalVariable(name: "p", scope: !8258, file: !573, line: 61, type: !2868)
!8267 = !DILabel(scope: !8258, name: "done", file: !573, line: 82)
!8268 = !DILocation(line: 0, scope: !8258)
!8269 = !DILocation(line: 63, column: 14, scope: !8270)
!8270 = distinct !DILexicalBlock(scope: !8258, file: !573, line: 63, column: 6)
!8271 = !DILocation(line: 63, column: 24, scope: !8270)
!8272 = !DILocation(line: 72, column: 3, scope: !8273)
!8273 = distinct !DILexicalBlock(scope: !8258, file: !573, line: 70, column: 5)
!8274 = !DILocation(line: 0, scope: !8273)
!8275 = !DILocation(line: 73, column: 8, scope: !8276)
!8276 = distinct !DILexicalBlock(scope: !8277, file: !573, line: 73, column: 8)
!8277 = distinct !DILexicalBlock(scope: !8273, file: !573, line: 72, column: 6)
!8278 = !DILocation(line: 73, column: 29, scope: !8276)
!8279 = !DILocation(line: 73, column: 27, scope: !8276)
!8280 = !DILocation(line: 73, column: 21, scope: !8276)
!8281 = !DILocation(line: 73, column: 33, scope: !8276)
!8282 = !DILocation(line: 73, column: 8, scope: !8277)
!8283 = !DILocation(line: 76, column: 5, scope: !8277)
!8284 = !DILocation(line: 77, column: 14, scope: !8273)
!8285 = !DILocation(line: 77, column: 3, scope: !8277)
!8286 = distinct !{!8286, !8272, !8287}
!8287 = !DILocation(line: 77, column: 17, scope: !8273)
!8288 = !DILocation(line: 79, column: 4, scope: !8273)
!8289 = !DILocation(line: 80, column: 13, scope: !8258)
!8290 = !DILocation(line: 80, column: 2, scope: !8273)
!8291 = distinct !{!8291, !8292, !8293}
!8292 = !DILocation(line: 70, column: 2, scope: !8258)
!8293 = !DILocation(line: 80, column: 16, scope: !8258)
!8294 = !DILocation(line: 82, column: 1, scope: !8258)
!8295 = !DILocation(line: 83, column: 17, scope: !8258)
!8296 = !DILocation(line: 83, column: 2, scope: !8258)
!8297 = !DILocation(line: 84, column: 1, scope: !8258)
!8298 = distinct !DISubprogram(name: "puts", scope: !573, file: !573, line: 106, type: !8299, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8301)
!8299 = !DISubroutineType(types: !8300)
!8300 = !{!109, !279}
!8301 = !{!8302}
!8302 = !DILocalVariable(name: "s", arg: 1, scope: !8298, file: !573, line: 106, type: !279)
!8303 = !DILocation(line: 0, scope: !8298)
!8304 = !DILocation(line: 108, column: 6, scope: !8305)
!8305 = distinct !DILexicalBlock(scope: !8298, file: !573, line: 108, column: 6)
!8306 = !DILocation(line: 108, column: 23, scope: !8305)
!8307 = !DILocation(line: 108, column: 6, scope: !8298)
!8308 = !DILocation(line: 112, column: 9, scope: !8298)
!8309 = !DILocation(line: 112, column: 29, scope: !8298)
!8310 = !DILocation(line: 112, column: 2, scope: !8298)
!8311 = !DILocation(line: 113, column: 1, scope: !8298)
!8312 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !706, file: !706, line: 368, type: !759, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8313)
!8313 = !{!8314}
!8314 = !DILocalVariable(name: "dev", arg: 1, scope: !8312, file: !706, line: 368, type: !735)
!8315 = !DILocation(line: 0, scope: !8312)
!8316 = !DILocation(line: 370, column: 2, scope: !8312)
!8317 = !DILocation(line: 371, column: 1, scope: !8312)
!8318 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !706, file: !706, line: 243, type: !8319, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8321)
!8319 = !DISubroutineType(types: !8320)
!8320 = !{null, !109, !109, !735}
!8321 = !{!8322, !8323, !8324, !8325, !8327}
!8322 = !DILocalVariable(name: "min", arg: 1, scope: !8318, file: !706, line: 243, type: !109)
!8323 = !DILocalVariable(name: "max", arg: 2, scope: !8318, file: !706, line: 243, type: !109)
!8324 = !DILocalVariable(name: "dev", arg: 3, scope: !8318, file: !706, line: 243, type: !735)
!8325 = !DILocalVariable(name: "data", scope: !8318, file: !706, line: 245, type: !8326)
!8326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !739, size: 32)
!8327 = !DILocalVariable(name: "line", scope: !8318, file: !706, line: 246, type: !109)
!8328 = !DILocation(line: 0, scope: !8318)
!8329 = !DILocation(line: 245, column: 38, scope: !8318)
!8330 = !DILocation(line: 249, column: 24, scope: !8331)
!8331 = distinct !DILexicalBlock(scope: !8332, file: !706, line: 249, column: 2)
!8332 = distinct !DILexicalBlock(scope: !8318, file: !706, line: 249, column: 2)
!8333 = !DILocation(line: 249, column: 2, scope: !8332)
!8334 = !DILocation(line: 251, column: 7, scope: !8335)
!8335 = distinct !DILexicalBlock(scope: !8336, file: !706, line: 251, column: 7)
!8336 = distinct !DILexicalBlock(scope: !8331, file: !706, line: 249, column: 39)
!8337 = !DILocation(line: 251, column: 7, scope: !8336)
!8338 = !DILocation(line: 253, column: 4, scope: !8339)
!8339 = distinct !DILexicalBlock(scope: !8335, file: !706, line: 251, column: 36)
!8340 = !DILocation(line: 256, column: 24, scope: !8341)
!8341 = distinct !DILexicalBlock(scope: !8339, file: !706, line: 256, column: 8)
!8342 = !DILocation(line: 256, column: 9, scope: !8341)
!8343 = !DILocation(line: 256, column: 8, scope: !8339)
!8344 = !DILocation(line: 260, column: 43, scope: !8339)
!8345 = !DILocation(line: 260, column: 4, scope: !8339)
!8346 = !DILocation(line: 261, column: 3, scope: !8339)
!8347 = !DILocation(line: 249, column: 35, scope: !8331)
!8348 = distinct !{!8348, !8333, !8349}
!8349 = !DILocation(line: 262, column: 2, scope: !8332)
!8350 = !DILocation(line: 263, column: 1, scope: !8318)
!8351 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !706, file: !706, line: 158, type: !303, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8352)
!8352 = !{!8353}
!8353 = !DILocalVariable(name: "line", arg: 1, scope: !8351, file: !706, line: 158, type: !109)
!8354 = !DILocation(line: 0, scope: !8351)
!8355 = !DILocation(line: 170, column: 38, scope: !8356)
!8356 = distinct !DILexicalBlock(scope: !8357, file: !706, line: 160, column: 17)
!8357 = distinct !DILexicalBlock(scope: !8351, file: !706, line: 160, column: 6)
!8358 = !DILocation(line: 170, column: 10, scope: !8356)
!8359 = !DILocation(line: 176, column: 1, scope: !8351)
!8360 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !706, file: !706, line: 183, type: !8361, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8363)
!8361 = !DISubroutineType(types: !8362)
!8362 = !{null, !109}
!8363 = !{!8364}
!8364 = !DILocalVariable(name: "line", arg: 1, scope: !8360, file: !706, line: 183, type: !109)
!8365 = !DILocation(line: 0, scope: !8360)
!8366 = !DILocation(line: 195, column: 28, scope: !8367)
!8367 = distinct !DILexicalBlock(scope: !8368, file: !706, line: 185, column: 17)
!8368 = distinct !DILexicalBlock(scope: !8360, file: !706, line: 185, column: 6)
!8369 = !DILocation(line: 195, column: 3, scope: !8367)
!8370 = !DILocation(line: 200, column: 1, scope: !8360)
!8371 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !8372, file: !8372, line: 910, type: !6518, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8373)
!8372 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8373 = !{!8374}
!8374 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8371, file: !8372, line: 910, type: !110)
!8375 = !DILocation(line: 0, scope: !8371)
!8376 = !DILocation(line: 912, column: 3, scope: !8371)
!8377 = !DILocation(line: 913, column: 1, scope: !8371)
!8378 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !8372, file: !8372, line: 834, type: !7708, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8379)
!8379 = !{!8380}
!8380 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8378, file: !8372, line: 834, type: !110)
!8381 = !DILocation(line: 0, scope: !8378)
!8382 = !DILocation(line: 836, column: 11, scope: !8378)
!8383 = !DILocation(line: 836, column: 40, scope: !8378)
!8384 = !DILocation(line: 836, column: 3, scope: !8378)
!8385 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !706, file: !706, line: 304, type: !759, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8386)
!8386 = !{!8387}
!8387 = !DILocalVariable(name: "dev", arg: 1, scope: !8385, file: !706, line: 304, type: !735)
!8388 = !DILocation(line: 0, scope: !8385)
!8389 = !DILocation(line: 306, column: 2, scope: !8385)
!8390 = !DILocation(line: 307, column: 1, scope: !8385)
!8391 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !706, file: !706, line: 299, type: !759, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8392)
!8392 = !{!8393}
!8393 = !DILocalVariable(name: "dev", arg: 1, scope: !8391, file: !706, line: 299, type: !735)
!8394 = !DILocation(line: 0, scope: !8391)
!8395 = !DILocation(line: 301, column: 2, scope: !8391)
!8396 = !DILocation(line: 302, column: 1, scope: !8391)
!8397 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !706, file: !706, line: 294, type: !759, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8398)
!8398 = !{!8399}
!8399 = !DILocalVariable(name: "dev", arg: 1, scope: !8397, file: !706, line: 294, type: !735)
!8400 = !DILocation(line: 0, scope: !8397)
!8401 = !DILocation(line: 296, column: 2, scope: !8397)
!8402 = !DILocation(line: 297, column: 1, scope: !8397)
!8403 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !706, file: !706, line: 397, type: !759, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8404)
!8404 = !{!8405}
!8405 = !DILocalVariable(name: "dev", arg: 1, scope: !8403, file: !706, line: 397, type: !735)
!8406 = !DILocation(line: 0, scope: !8403)
!8407 = !DILocation(line: 399, column: 2, scope: !8403)
!8408 = !DILocation(line: 400, column: 1, scope: !8403)
!8409 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !706, file: !706, line: 392, type: !759, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8410)
!8410 = !{!8411}
!8411 = !DILocalVariable(name: "dev", arg: 1, scope: !8409, file: !706, line: 392, type: !735)
!8412 = !DILocation(line: 0, scope: !8409)
!8413 = !DILocation(line: 394, column: 2, scope: !8409)
!8414 = !DILocation(line: 395, column: 1, scope: !8409)
!8415 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !706, file: !706, line: 289, type: !759, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8416)
!8416 = !{!8417}
!8417 = !DILocalVariable(name: "dev", arg: 1, scope: !8415, file: !706, line: 289, type: !735)
!8418 = !DILocation(line: 0, scope: !8415)
!8419 = !DILocation(line: 291, column: 2, scope: !8415)
!8420 = !DILocation(line: 292, column: 1, scope: !8415)
!8421 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !706, file: !706, line: 387, type: !759, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8422)
!8422 = !{!8423}
!8423 = !DILocalVariable(name: "dev", arg: 1, scope: !8421, file: !706, line: 387, type: !735)
!8424 = !DILocation(line: 0, scope: !8421)
!8425 = !DILocation(line: 389, column: 2, scope: !8421)
!8426 = !DILocation(line: 390, column: 1, scope: !8421)
!8427 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !706, file: !706, line: 382, type: !759, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8428)
!8428 = !{!8429}
!8429 = !DILocalVariable(name: "dev", arg: 1, scope: !8427, file: !706, line: 382, type: !735)
!8430 = !DILocation(line: 0, scope: !8427)
!8431 = !DILocation(line: 384, column: 2, scope: !8427)
!8432 = !DILocation(line: 385, column: 1, scope: !8427)
!8433 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !706, file: !706, line: 373, type: !759, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8434)
!8434 = !{!8435}
!8435 = !DILocalVariable(name: "dev", arg: 1, scope: !8433, file: !706, line: 373, type: !735)
!8436 = !DILocation(line: 0, scope: !8433)
!8437 = !DILocation(line: 375, column: 2, scope: !8433)
!8438 = !DILocation(line: 376, column: 1, scope: !8433)
!8439 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !706, file: !706, line: 284, type: !759, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8440)
!8440 = !{!8441}
!8441 = !DILocalVariable(name: "dev", arg: 1, scope: !8439, file: !706, line: 284, type: !735)
!8442 = !DILocation(line: 0, scope: !8439)
!8443 = !DILocation(line: 286, column: 2, scope: !8439)
!8444 = !DILocation(line: 287, column: 1, scope: !8439)
!8445 = distinct !DISubprogram(name: "stm32_exti_init", scope: !706, file: !706, line: 416, type: !733, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8446)
!8446 = !{!8447}
!8447 = !DILocalVariable(name: "dev", arg: 1, scope: !8445, file: !706, line: 416, type: !735)
!8448 = !DILocation(line: 0, scope: !8445)
!8449 = !DILocation(line: 418, column: 2, scope: !8445)
!8450 = !DILocation(line: 420, column: 2, scope: !8445)
!8451 = !DILocation(line: 0, scope: !758)
!8452 = !DILocation(line: 493, column: 2, scope: !8453)
!8453 = distinct !DILexicalBlock(scope: !758, file: !706, line: 493, column: 2)
!8454 = !DILocation(line: 497, column: 2, scope: !8455)
!8455 = distinct !DILexicalBlock(scope: !758, file: !706, line: 497, column: 2)
!8456 = !DILocation(line: 507, column: 2, scope: !8457)
!8457 = distinct !DILexicalBlock(scope: !758, file: !706, line: 507, column: 2)
!8458 = !DILocation(line: 512, column: 2, scope: !8459)
!8459 = distinct !DILexicalBlock(scope: !758, file: !706, line: 512, column: 2)
!8460 = !DILocation(line: 516, column: 2, scope: !8461)
!8461 = distinct !DILexicalBlock(scope: !758, file: !706, line: 516, column: 2)
!8462 = !DILocation(line: 523, column: 2, scope: !8463)
!8463 = distinct !DILexicalBlock(scope: !758, file: !706, line: 523, column: 2)
!8464 = !DILocation(line: 527, column: 2, scope: !8465)
!8465 = distinct !DILexicalBlock(scope: !758, file: !706, line: 527, column: 2)
!8466 = !DILocation(line: 581, column: 2, scope: !8467)
!8467 = distinct !DILexicalBlock(scope: !758, file: !706, line: 581, column: 2)
!8468 = !DILocation(line: 586, column: 2, scope: !8469)
!8469 = distinct !DILexicalBlock(scope: !758, file: !706, line: 586, column: 2)
!8470 = !DILocation(line: 591, column: 2, scope: !8471)
!8471 = distinct !DILexicalBlock(scope: !758, file: !706, line: 591, column: 2)
!8472 = !DILocation(line: 595, column: 2, scope: !8473)
!8473 = distinct !DILexicalBlock(scope: !758, file: !706, line: 595, column: 2)
!8474 = !DILocation(line: 607, column: 1, scope: !758)
!8475 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !706, file: !706, line: 112, type: !8361, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8476)
!8476 = !{!8477, !8478}
!8477 = !DILocalVariable(name: "line", arg: 1, scope: !8475, file: !706, line: 112, type: !109)
!8478 = !DILocalVariable(name: "irqnum", scope: !8475, file: !706, line: 114, type: !109)
!8479 = !DILocation(line: 0, scope: !8475)
!8480 = !DILocation(line: 122, column: 13, scope: !8481)
!8481 = distinct !DILexicalBlock(scope: !8475, file: !706, line: 122, column: 6)
!8482 = !DILocation(line: 122, column: 6, scope: !8475)
!8483 = !DILocation(line: 123, column: 3, scope: !8484)
!8484 = distinct !DILexicalBlock(scope: !8485, file: !706, line: 123, column: 3)
!8485 = distinct !DILexicalBlock(scope: !8486, file: !706, line: 123, column: 3)
!8486 = distinct !DILexicalBlock(scope: !8487, file: !706, line: 123, column: 3)
!8487 = distinct !DILexicalBlock(scope: !8481, file: !706, line: 122, column: 22)
!8488 = !DILocation(line: 121, column: 11, scope: !8475)
!8489 = !DILocation(line: 130, column: 26, scope: !8475)
!8490 = !DILocation(line: 130, column: 2, scope: !8475)
!8491 = !DILocation(line: 134, column: 2, scope: !8475)
!8492 = !DILocation(line: 135, column: 1, scope: !8475)
!8493 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !8372, file: !8372, line: 268, type: !6518, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8494)
!8494 = !{!8495}
!8495 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8493, file: !8372, line: 268, type: !110)
!8496 = !DILocation(line: 0, scope: !8493)
!8497 = !DILocation(line: 270, column: 3, scope: !8493)
!8498 = !DILocation(line: 271, column: 1, scope: !8493)
!8499 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !706, file: !706, line: 137, type: !8361, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8500)
!8500 = !{!8501}
!8501 = !DILocalVariable(name: "line", arg: 1, scope: !8499, file: !706, line: 137, type: !109)
!8502 = !DILocation(line: 0, scope: !8499)
!8503 = !DILocation(line: 141, column: 11, scope: !8504)
!8504 = distinct !DILexicalBlock(scope: !8499, file: !706, line: 141, column: 6)
!8505 = !DILocation(line: 141, column: 6, scope: !8499)
!8506 = !DILocation(line: 145, column: 28, scope: !8507)
!8507 = distinct !DILexicalBlock(scope: !8504, file: !706, line: 141, column: 17)
!8508 = !DILocation(line: 145, column: 3, scope: !8507)
!8509 = !DILocation(line: 147, column: 2, scope: !8507)
!8510 = !DILocation(line: 151, column: 1, scope: !8499)
!8511 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !8372, file: !8372, line: 309, type: !6518, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8512)
!8512 = !{!8513}
!8513 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8511, file: !8372, line: 309, type: !110)
!8514 = !DILocation(line: 0, scope: !8511)
!8515 = !DILocation(line: 311, column: 3, scope: !8511)
!8516 = !DILocation(line: 312, column: 1, scope: !8511)
!8517 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !706, file: !706, line: 202, type: !8518, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8520)
!8518 = !DISubroutineType(types: !8519)
!8519 = !{null, !109, !109}
!8520 = !{!8521, !8522}
!8521 = !DILocalVariable(name: "line", arg: 1, scope: !8517, file: !706, line: 202, type: !109)
!8522 = !DILocalVariable(name: "trigger", arg: 2, scope: !8517, file: !706, line: 202, type: !109)
!8523 = !DILocation(line: 0, scope: !8517)
!8524 = !DILocation(line: 211, column: 2, scope: !8517)
!8525 = !DILocation(line: 213, column: 36, scope: !8526)
!8526 = distinct !DILexicalBlock(scope: !8517, file: !706, line: 211, column: 19)
!8527 = !DILocation(line: 213, column: 3, scope: !8526)
!8528 = !DILocation(line: 214, column: 3, scope: !8526)
!8529 = !DILocation(line: 215, column: 3, scope: !8526)
!8530 = !DILocation(line: 217, column: 35, scope: !8526)
!8531 = !DILocation(line: 217, column: 3, scope: !8526)
!8532 = !DILocation(line: 218, column: 3, scope: !8526)
!8533 = !DILocation(line: 219, column: 3, scope: !8526)
!8534 = !DILocation(line: 221, column: 36, scope: !8526)
!8535 = !DILocation(line: 221, column: 3, scope: !8526)
!8536 = !DILocation(line: 222, column: 3, scope: !8526)
!8537 = !DILocation(line: 223, column: 3, scope: !8526)
!8538 = !DILocation(line: 225, column: 35, scope: !8526)
!8539 = !DILocation(line: 225, column: 3, scope: !8526)
!8540 = !DILocation(line: 226, column: 3, scope: !8526)
!8541 = !DILocation(line: 227, column: 3, scope: !8526)
!8542 = !DILocation(line: 232, column: 1, scope: !8517)
!8543 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !8372, file: !8372, line: 573, type: !6518, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8544)
!8544 = !{!8545}
!8545 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8543, file: !8372, line: 573, type: !110)
!8546 = !DILocation(line: 0, scope: !8543)
!8547 = !DILocation(line: 575, column: 3, scope: !8543)
!8548 = !DILocation(line: 577, column: 1, scope: !8543)
!8549 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !8372, file: !8372, line: 703, type: !6518, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8550)
!8550 = !{!8551}
!8551 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8549, file: !8372, line: 703, type: !110)
!8552 = !DILocation(line: 0, scope: !8549)
!8553 = !DILocation(line: 705, column: 3, scope: !8549)
!8554 = !DILocation(line: 706, column: 1, scope: !8549)
!8555 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !8372, file: !8372, line: 529, type: !6518, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8556)
!8556 = !{!8557}
!8557 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8555, file: !8372, line: 529, type: !110)
!8558 = !DILocation(line: 0, scope: !8555)
!8559 = !DILocation(line: 531, column: 3, scope: !8555)
!8560 = !DILocation(line: 533, column: 1, scope: !8555)
!8561 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !8372, file: !8372, line: 661, type: !6518, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8562)
!8562 = !{!8563}
!8563 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8561, file: !8372, line: 661, type: !110)
!8564 = !DILocation(line: 0, scope: !8561)
!8565 = !DILocation(line: 663, column: 3, scope: !8561)
!8566 = !DILocation(line: 664, column: 1, scope: !8561)
!8567 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !706, file: !706, line: 433, type: !8568, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8570)
!8568 = !DISubroutineType(types: !8569)
!8569 = !{!109, !109, !746, !107}
!8570 = !{!8571, !8572, !8573, !8574, !8576}
!8571 = !DILocalVariable(name: "line", arg: 1, scope: !8567, file: !706, line: 433, type: !109)
!8572 = !DILocalVariable(name: "cb", arg: 2, scope: !8567, file: !706, line: 433, type: !746)
!8573 = !DILocalVariable(name: "arg", arg: 3, scope: !8567, file: !706, line: 433, type: !107)
!8574 = !DILocalVariable(name: "dev", scope: !8567, file: !706, line: 435, type: !8575)
!8575 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !735)
!8576 = !DILocalVariable(name: "data", scope: !8567, file: !706, line: 436, type: !8326)
!8577 = !DILocation(line: 0, scope: !8567)
!8578 = !DILocation(line: 438, column: 21, scope: !8579)
!8579 = distinct !DILexicalBlock(scope: !8567, file: !706, line: 438, column: 6)
!8580 = !DILocation(line: 438, column: 6, scope: !8579)
!8581 = !DILocation(line: 438, column: 6, scope: !8567)
!8582 = !DILocation(line: 442, column: 20, scope: !8567)
!8583 = !DILocation(line: 443, column: 17, scope: !8567)
!8584 = !DILocation(line: 443, column: 22, scope: !8567)
!8585 = !DILocation(line: 445, column: 2, scope: !8567)
!8586 = !DILocation(line: 446, column: 1, scope: !8567)
!8587 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !706, file: !706, line: 448, type: !8361, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8588)
!8588 = !{!8589, !8590, !8591}
!8589 = !DILocalVariable(name: "line", arg: 1, scope: !8587, file: !706, line: 448, type: !109)
!8590 = !DILocalVariable(name: "dev", scope: !8587, file: !706, line: 450, type: !8575)
!8591 = !DILocalVariable(name: "data", scope: !8587, file: !706, line: 451, type: !8326)
!8592 = !DILocation(line: 0, scope: !8587)
!8593 = !DILocation(line: 453, column: 17, scope: !8587)
!8594 = !DILocation(line: 453, column: 20, scope: !8587)
!8595 = !DILocation(line: 454, column: 17, scope: !8587)
!8596 = !DILocation(line: 454, column: 22, scope: !8587)
!8597 = !DILocation(line: 455, column: 1, scope: !8587)
!8598 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !890, file: !890, line: 183, type: !928, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !829, retainedNodes: !8599)
!8599 = !{!8600, !8601, !8602, !8603, !8604}
!8600 = !DILocalVariable(name: "dev", arg: 1, scope: !8598, file: !890, line: 183, type: !919)
!8601 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8598, file: !890, line: 184, type: !930)
!8602 = !DILocalVariable(name: "pclken", scope: !8598, file: !890, line: 186, type: !880)
!8603 = !DILocalVariable(name: "reg", scope: !8598, file: !890, line: 187, type: !1480)
!8604 = !DILocalVariable(name: "reg_val", scope: !8598, file: !890, line: 188, type: !110)
!8605 = !DILocation(line: 0, scope: !8598)
!8606 = !DILocation(line: 192, column: 6, scope: !8607)
!8607 = distinct !DILexicalBlock(scope: !8598, file: !890, line: 192, column: 6)
!8608 = !DILocation(line: 192, column: 6, scope: !8598)
!8609 = !DILocation(line: 197, column: 52, scope: !8598)
!8610 = !DILocation(line: 197, column: 8, scope: !8598)
!8611 = !DILocation(line: 198, column: 12, scope: !8598)
!8612 = !DILocation(line: 199, column: 21, scope: !8598)
!8613 = !DILocation(line: 199, column: 10, scope: !8598)
!8614 = !DILocation(line: 200, column: 7, scope: !8598)
!8615 = !DILocation(line: 202, column: 2, scope: !8598)
!8616 = !DILocation(line: 203, column: 1, scope: !8598)
!8617 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !890, file: !890, line: 205, type: !928, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !829, retainedNodes: !8618)
!8618 = !{!8619, !8620, !8621, !8622, !8623}
!8619 = !DILocalVariable(name: "dev", arg: 1, scope: !8617, file: !890, line: 205, type: !919)
!8620 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8617, file: !890, line: 206, type: !930)
!8621 = !DILocalVariable(name: "pclken", scope: !8617, file: !890, line: 208, type: !880)
!8622 = !DILocalVariable(name: "reg", scope: !8617, file: !890, line: 209, type: !1480)
!8623 = !DILocalVariable(name: "reg_val", scope: !8617, file: !890, line: 210, type: !110)
!8624 = !DILocation(line: 0, scope: !8617)
!8625 = !DILocation(line: 214, column: 6, scope: !8626)
!8626 = distinct !DILexicalBlock(scope: !8617, file: !890, line: 214, column: 6)
!8627 = !DILocation(line: 214, column: 6, scope: !8617)
!8628 = !DILocation(line: 219, column: 52, scope: !8617)
!8629 = !DILocation(line: 219, column: 8, scope: !8617)
!8630 = !DILocation(line: 220, column: 12, scope: !8617)
!8631 = !DILocation(line: 221, column: 22, scope: !8617)
!8632 = !DILocation(line: 221, column: 13, scope: !8617)
!8633 = !DILocation(line: 221, column: 10, scope: !8617)
!8634 = !DILocation(line: 222, column: 7, scope: !8617)
!8635 = !DILocation(line: 224, column: 2, scope: !8617)
!8636 = !DILocation(line: 225, column: 1, scope: !8617)
!8637 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !890, file: !890, line: 262, type: !944, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !829, retainedNodes: !8638)
!8638 = !{!8639, !8640, !8641, !8642, !8643, !8644, !8645, !8646}
!8639 = !DILocalVariable(name: "clock", arg: 1, scope: !8637, file: !890, line: 262, type: !919)
!8640 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8637, file: !890, line: 263, type: !930)
!8641 = !DILocalVariable(name: "rate", arg: 3, scope: !8637, file: !890, line: 264, type: !886)
!8642 = !DILocalVariable(name: "pclken", scope: !8637, file: !890, line: 266, type: !880)
!8643 = !DILocalVariable(name: "ahb_clock", scope: !8637, file: !890, line: 273, type: !110)
!8644 = !DILocalVariable(name: "apb1_clock", scope: !8637, file: !890, line: 274, type: !110)
!8645 = !DILocalVariable(name: "apb2_clock", scope: !8637, file: !890, line: 276, type: !110)
!8646 = !DILocalVariable(name: "ahb3_clock", scope: !8637, file: !890, line: 286, type: !110)
!8647 = !DILocation(line: 0, scope: !8637)
!8648 = !DILocation(line: 273, column: 23, scope: !8637)
!8649 = !DILocation(line: 299, column: 18, scope: !8637)
!8650 = !DILocation(line: 299, column: 2, scope: !8637)
!8651 = !DILocation(line: 274, column: 24, scope: !8637)
!8652 = !DILocation(line: 319, column: 3, scope: !8653)
!8653 = distinct !DILexicalBlock(scope: !8637, file: !890, line: 299, column: 23)
!8654 = !DILocation(line: 276, column: 24, scope: !8637)
!8655 = !DILocation(line: 323, column: 3, scope: !8653)
!8656 = !DILocation(line: 346, column: 33, scope: !8653)
!8657 = !DILocation(line: 346, column: 11, scope: !8653)
!8658 = !DILocation(line: 350, column: 3, scope: !8653)
!8659 = !DILocation(line: 354, column: 33, scope: !8653)
!8660 = !DILocation(line: 354, column: 11, scope: !8653)
!8661 = !DILocation(line: 358, column: 3, scope: !8653)
!8662 = !DILocation(line: 374, column: 3, scope: !8653)
!8663 = !DILocation(line: 379, column: 3, scope: !8653)
!8664 = !DILocation(line: 0, scope: !8653)
!8665 = !DILocation(line: 396, column: 1, scope: !8637)
!8666 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !890, file: !890, line: 227, type: !960, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !829, retainedNodes: !8667)
!8667 = !{!8668, !8669, !8670, !8671, !8672, !8673, !8674, !8675}
!8668 = !DILocalVariable(name: "dev", arg: 1, scope: !8666, file: !890, line: 227, type: !919)
!8669 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8666, file: !890, line: 228, type: !930)
!8670 = !DILocalVariable(name: "data", arg: 3, scope: !8666, file: !890, line: 229, type: !107)
!8671 = !DILocalVariable(name: "pclken", scope: !8666, file: !890, line: 233, type: !880)
!8672 = !DILocalVariable(name: "reg", scope: !8666, file: !890, line: 234, type: !1480)
!8673 = !DILocalVariable(name: "reg_val", scope: !8666, file: !890, line: 235, type: !110)
!8674 = !DILocalVariable(name: "dt_val", scope: !8666, file: !890, line: 235, type: !110)
!8675 = !DILocalVariable(name: "err", scope: !8666, file: !890, line: 236, type: !109)
!8676 = !DILocation(line: 0, scope: !8666)
!8677 = !DILocation(line: 241, column: 30, scope: !8666)
!8678 = !DILocation(line: 241, column: 8, scope: !8666)
!8679 = !DILocation(line: 242, column: 10, scope: !8680)
!8680 = distinct !DILexicalBlock(scope: !8666, file: !890, line: 242, column: 6)
!8681 = !DILocation(line: 242, column: 6, scope: !8666)
!8682 = !DILocation(line: 247, column: 11, scope: !8666)
!8683 = !DILocation(line: 248, column: 6, scope: !8666)
!8684 = !DILocation(line: 247, column: 44, scope: !8666)
!8685 = !DILocation(line: 250, column: 6, scope: !8666)
!8686 = !DILocation(line: 249, column: 52, scope: !8666)
!8687 = !DILocation(line: 249, column: 8, scope: !8666)
!8688 = !DILocation(line: 251, column: 12, scope: !8666)
!8689 = !DILocation(line: 252, column: 10, scope: !8666)
!8690 = !DILocation(line: 253, column: 7, scope: !8666)
!8691 = !DILocation(line: 255, column: 2, scope: !8666)
!8692 = !DILocation(line: 260, column: 1, scope: !8666)
!8693 = distinct !DISubprogram(name: "enabled_clock", scope: !890, file: !890, line: 100, type: !8694, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !829, retainedNodes: !8696)
!8694 = !DISubroutineType(types: !8695)
!8695 = !{!109, !110}
!8696 = !{!8697, !8698}
!8697 = !DILocalVariable(name: "src_clk", arg: 1, scope: !8693, file: !890, line: 100, type: !110)
!8698 = !DILocalVariable(name: "r", scope: !8693, file: !890, line: 102, type: !109)
!8699 = !DILocation(line: 0, scope: !8693)
!8700 = !DILocation(line: 104, column: 2, scope: !8693)
!8701 = !DILocation(line: 180, column: 2, scope: !8693)
!8702 = !DILocation(line: 181, column: 1, scope: !8693)
!8703 = distinct !DISubprogram(name: "get_bus_clock", scope: !890, file: !890, line: 79, type: !8704, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !829, retainedNodes: !8706)
!8704 = !DISubroutineType(types: !8705)
!8705 = !{!110, !110, !110}
!8706 = !{!8707, !8708}
!8707 = !DILocalVariable(name: "clock", arg: 1, scope: !8703, file: !890, line: 79, type: !110)
!8708 = !DILocalVariable(name: "prescaler", arg: 2, scope: !8703, file: !890, line: 79, type: !110)
!8709 = !DILocation(line: 0, scope: !8703)
!8710 = !DILocation(line: 81, column: 15, scope: !8703)
!8711 = !DILocation(line: 81, column: 2, scope: !8703)
!8712 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !890, file: !890, line: 68, type: !8713, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !829, retainedNodes: !8715)
!8713 = !DISubroutineType(types: !8714)
!8714 = !{!110, !110, !109, !109, !109}
!8715 = !{!8716, !8717, !8718, !8719}
!8716 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !8712, file: !890, line: 68, type: !110)
!8717 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !8712, file: !890, line: 69, type: !109)
!8718 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !8712, file: !890, line: 70, type: !109)
!8719 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !8712, file: !890, line: 71, type: !109)
!8720 = !DILocation(line: 0, scope: !8712)
!8721 = !DILocation(line: 75, column: 22, scope: !8712)
!8722 = !DILocation(line: 76, column: 13, scope: !8712)
!8723 = !DILocation(line: 75, column: 34, scope: !8712)
!8724 = !DILocation(line: 75, column: 2, scope: !8712)
!8725 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !890, file: !890, line: 641, type: !917, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !829, retainedNodes: !8726)
!8726 = !{!8727, !8728, !8729}
!8727 = !DILocalVariable(name: "dev", arg: 1, scope: !8725, file: !890, line: 641, type: !919)
!8728 = !DILocalVariable(name: "old_flash_freq", scope: !8725, file: !890, line: 664, type: !110)
!8729 = !DILocalVariable(name: "new_flash_freq", scope: !8725, file: !890, line: 665, type: !110)
!8730 = !DILocation(line: 0, scope: !8725)
!8731 = !DILocation(line: 646, column: 2, scope: !8725)
!8732 = !DILocation(line: 667, column: 19, scope: !8725)
!8733 = !DILocation(line: 674, column: 21, scope: !8734)
!8734 = distinct !DILexicalBlock(scope: !8725, file: !890, line: 674, column: 6)
!8735 = !DILocation(line: 674, column: 6, scope: !8725)
!8736 = !DILocation(line: 675, column: 3, scope: !8737)
!8737 = distinct !DILexicalBlock(scope: !8734, file: !890, line: 674, column: 59)
!8738 = !DILocation(line: 676, column: 2, scope: !8737)
!8739 = !DILocation(line: 680, column: 2, scope: !8725)
!8740 = !DILocation(line: 683, column: 2, scope: !8725)
!8741 = !DILocation(line: 690, column: 3, scope: !8742)
!8742 = distinct !DILexicalBlock(scope: !8743, file: !890, line: 689, column: 9)
!8743 = distinct !DILexicalBlock(scope: !8725, file: !890, line: 685, column: 6)
!8744 = !DILocation(line: 695, column: 2, scope: !8725)
!8745 = !DILocation(line: 696, column: 2, scope: !8725)
!8746 = !DILocation(line: 696, column: 9, scope: !8725)
!8747 = !DILocation(line: 696, column: 34, scope: !8725)
!8748 = distinct !{!8748, !8745, !8749}
!8749 = !DILocation(line: 697, column: 2, scope: !8725)
!8750 = !DILocation(line: 720, column: 21, scope: !8751)
!8751 = distinct !DILexicalBlock(scope: !8725, file: !890, line: 720, column: 6)
!8752 = !DILocation(line: 720, column: 6, scope: !8725)
!8753 = !DILocation(line: 721, column: 3, scope: !8754)
!8754 = distinct !DILexicalBlock(scope: !8751, file: !890, line: 720, column: 60)
!8755 = !DILocation(line: 722, column: 2, scope: !8754)
!8756 = !DILocation(line: 725, column: 18, scope: !8725)
!8757 = !DILocation(line: 728, column: 2, scope: !8725)
!8758 = !DILocation(line: 730, column: 2, scope: !8725)
!8759 = !DILocation(line: 745, column: 2, scope: !8725)
!8760 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !8761, file: !8761, line: 3275, type: !6508, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !829, retainedNodes: !2036)
!8761 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8762 = !DILocation(line: 3277, column: 21, scope: !8760)
!8763 = !DILocation(line: 3277, column: 3, scope: !8760)
!8764 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !890, file: !890, line: 507, type: !3096, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !829, retainedNodes: !2036)
!8765 = !DILocation(line: 516, column: 4, scope: !8766)
!8766 = distinct !DILexicalBlock(scope: !8767, file: !890, line: 515, column: 10)
!8767 = distinct !DILexicalBlock(scope: !8768, file: !890, line: 513, column: 7)
!8768 = distinct !DILexicalBlock(scope: !8769, file: !890, line: 510, column: 37)
!8769 = distinct !DILexicalBlock(scope: !8764, file: !890, line: 510, column: 6)
!8770 = !DILocation(line: 526, column: 3, scope: !8768)
!8771 = !DILocation(line: 527, column: 3, scope: !8768)
!8772 = !DILocation(line: 527, column: 10, scope: !8768)
!8773 = !DILocation(line: 527, column: 31, scope: !8768)
!8774 = distinct !{!8774, !8771, !8775}
!8775 = !DILocation(line: 529, column: 3, scope: !8768)
!8776 = !DILocation(line: 583, column: 3, scope: !8777)
!8777 = distinct !DILexicalBlock(scope: !8778, file: !890, line: 577, column: 37)
!8778 = distinct !DILexicalBlock(scope: !8764, file: !890, line: 577, column: 6)
!8779 = !DILocation(line: 584, column: 3, scope: !8777)
!8780 = !DILocation(line: 584, column: 10, scope: !8777)
!8781 = !DILocation(line: 584, column: 31, scope: !8777)
!8782 = distinct !{!8782, !8779, !8783}
!8783 = !DILocation(line: 585, column: 3, scope: !8777)
!8784 = !DILocation(line: 627, column: 1, scope: !8764)
!8785 = distinct !DISubprogram(name: "set_up_plls", scope: !890, file: !890, line: 448, type: !3096, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !829, retainedNodes: !2036)
!8786 = !DILocation(line: 460, column: 6, scope: !8787)
!8787 = distinct !DILexicalBlock(scope: !8785, file: !890, line: 460, column: 6)
!8788 = !DILocation(line: 460, column: 31, scope: !8787)
!8789 = !DILocation(line: 460, column: 6, scope: !8785)
!8790 = !DILocation(line: 461, column: 3, scope: !8791)
!8791 = distinct !DILexicalBlock(scope: !8787, file: !890, line: 460, column: 67)
!8792 = !DILocation(line: 462, column: 3, scope: !8791)
!8793 = !DILocation(line: 463, column: 2, scope: !8791)
!8794 = !DILocation(line: 464, column: 2, scope: !8785)
!8795 = !DILocation(line: 488, column: 2, scope: !8785)
!8796 = !DILocation(line: 492, column: 2, scope: !8785)
!8797 = !DILocation(line: 496, column: 2, scope: !8785)
!8798 = !DILocation(line: 499, column: 2, scope: !8785)
!8799 = !DILocation(line: 500, column: 2, scope: !8785)
!8800 = !DILocation(line: 500, column: 9, scope: !8785)
!8801 = !DILocation(line: 500, column: 30, scope: !8785)
!8802 = distinct !{!8802, !8799, !8803}
!8803 = !DILocation(line: 502, column: 2, scope: !8785)
!8804 = !DILocation(line: 505, column: 1, scope: !8785)
!8805 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8761, file: !8761, line: 3224, type: !6518, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !829, retainedNodes: !8806)
!8806 = !{!8807}
!8807 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8805, file: !8761, line: 3224, type: !110)
!8808 = !DILocation(line: 0, scope: !8805)
!8809 = !DILocation(line: 3226, column: 3, scope: !8805)
!8810 = !DILocation(line: 3227, column: 1, scope: !8805)
!8811 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8761, file: !8761, line: 3188, type: !6518, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !829, retainedNodes: !8812)
!8812 = !{!8813}
!8813 = !DILocalVariable(name: "Source", arg: 1, scope: !8811, file: !8761, line: 3188, type: !110)
!8814 = !DILocation(line: 0, scope: !8811)
!8815 = !DILocation(line: 3190, column: 3, scope: !8811)
!8816 = !DILocation(line: 3191, column: 1, scope: !8811)
!8817 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8761, file: !8761, line: 3204, type: !6508, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !829, retainedNodes: !2036)
!8818 = !DILocation(line: 3206, column: 21, scope: !8817)
!8819 = !DILocation(line: 3206, column: 3, scope: !8817)
!8820 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8761, file: !8761, line: 3240, type: !6518, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !829, retainedNodes: !8821)
!8821 = !{!8822}
!8822 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8820, file: !8761, line: 3240, type: !110)
!8823 = !DILocation(line: 0, scope: !8820)
!8824 = !DILocation(line: 3242, column: 3, scope: !8820)
!8825 = !DILocation(line: 3243, column: 1, scope: !8820)
!8826 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8761, file: !8761, line: 3256, type: !6518, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !829, retainedNodes: !8827)
!8827 = !{!8828}
!8828 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8826, file: !8761, line: 3256, type: !110)
!8829 = !DILocation(line: 0, scope: !8826)
!8830 = !DILocation(line: 3258, column: 3, scope: !8826)
!8831 = !DILocation(line: 3259, column: 1, scope: !8826)
!8832 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !890, file: !890, line: 409, type: !3096, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !829, retainedNodes: !2036)
!8833 = !DILocation(line: 412, column: 6, scope: !8834)
!8834 = distinct !DILexicalBlock(scope: !8832, file: !890, line: 412, column: 6)
!8835 = !DILocation(line: 412, column: 27, scope: !8834)
!8836 = !DILocation(line: 412, column: 6, scope: !8832)
!8837 = !DILocation(line: 414, column: 3, scope: !8838)
!8838 = distinct !DILexicalBlock(scope: !8834, file: !890, line: 412, column: 33)
!8839 = !DILocation(line: 415, column: 3, scope: !8838)
!8840 = !DILocation(line: 415, column: 10, scope: !8838)
!8841 = !DILocation(line: 415, column: 31, scope: !8838)
!8842 = distinct !{!8842, !8839, !8843}
!8843 = !DILocation(line: 417, column: 3, scope: !8838)
!8844 = !DILocation(line: 421, column: 2, scope: !8832)
!8845 = !DILocation(line: 422, column: 2, scope: !8832)
!8846 = !DILocation(line: 422, column: 9, scope: !8832)
!8847 = !DILocation(line: 422, column: 34, scope: !8832)
!8848 = distinct !{!8848, !8845, !8849}
!8849 = !DILocation(line: 423, column: 2, scope: !8832)
!8850 = !DILocation(line: 424, column: 1, scope: !8832)
!8851 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !8761, file: !8761, line: 4195, type: !3096, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !829, retainedNodes: !2036)
!8852 = !DILocation(line: 4197, column: 3, scope: !8851)
!8853 = !DILocation(line: 4198, column: 1, scope: !8851)
!8854 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8761, file: !8761, line: 4184, type: !3096, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !829, retainedNodes: !2036)
!8855 = !DILocation(line: 4186, column: 3, scope: !8854)
!8856 = !DILocation(line: 4187, column: 1, scope: !8854)
!8857 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8761, file: !8761, line: 4205, type: !6508, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !829, retainedNodes: !2036)
!8858 = !DILocation(line: 4207, column: 11, scope: !8857)
!8859 = !DILocation(line: 4207, column: 44, scope: !8857)
!8860 = !DILocation(line: 4207, column: 3, scope: !8857)
!8861 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8761, file: !8761, line: 3007, type: !6508, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !829, retainedNodes: !2036)
!8862 = !DILocation(line: 3009, column: 11, scope: !8861)
!8863 = !DILocation(line: 3009, column: 44, scope: !8861)
!8864 = !DILocation(line: 3009, column: 3, scope: !8861)
!8865 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8761, file: !8761, line: 2987, type: !3096, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !829, retainedNodes: !2036)
!8866 = !DILocation(line: 2989, column: 3, scope: !8865)
!8867 = !DILocation(line: 2990, column: 1, scope: !8865)
!8868 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8761, file: !8761, line: 2939, type: !3096, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !829, retainedNodes: !2036)
!8869 = !DILocation(line: 2941, column: 3, scope: !8868)
!8870 = !DILocation(line: 2942, column: 1, scope: !8868)
!8871 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8761, file: !8761, line: 2949, type: !3096, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !829, retainedNodes: !2036)
!8872 = !DILocation(line: 2951, column: 3, scope: !8871)
!8873 = !DILocation(line: 2952, column: 1, scope: !8871)
!8874 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8761, file: !8761, line: 2969, type: !6508, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !829, retainedNodes: !2036)
!8875 = !DILocation(line: 2971, column: 11, scope: !8874)
!8876 = !DILocation(line: 2971, column: 44, scope: !8874)
!8877 = !DILocation(line: 2971, column: 3, scope: !8874)
!8878 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !8761, file: !8761, line: 3143, type: !3096, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !829, retainedNodes: !2036)
!8879 = !DILocation(line: 3145, column: 3, scope: !8878)
!8880 = !DILocation(line: 3146, column: 1, scope: !8878)
!8881 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !8761, file: !8761, line: 3163, type: !6508, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !829, retainedNodes: !2036)
!8882 = !DILocation(line: 3165, column: 11, scope: !8881)
!8883 = !DILocation(line: 3165, column: 46, scope: !8881)
!8884 = !DILocation(line: 3165, column: 3, scope: !8881)
!8885 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !8886, file: !8886, line: 40, type: !6508, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2870, retainedNodes: !2036)
!8886 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8887 = !DILocation(line: 45, column: 3, scope: !8888)
!8888 = distinct !DILexicalBlock(scope: !8889, file: !8886, line: 44, column: 44)
!8889 = distinct !DILexicalBlock(scope: !8890, file: !8886, line: 44, column: 13)
!8890 = distinct !DILexicalBlock(scope: !8885, file: !8886, line: 42, column: 6)
!8891 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !8886, file: !8886, line: 56, type: !3096, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2870, retainedNodes: !2036)
!8892 = !DILocation(line: 58, column: 2, scope: !8891)
!8893 = !DILocation(line: 62, column: 1, scope: !8891)
!8894 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8761, file: !8761, line: 4304, type: !8895, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2870, retainedNodes: !8897)
!8895 = !DISubroutineType(types: !8896)
!8896 = !{null, !110, !110, !110, !110}
!8897 = !{!8898, !8899, !8900, !8901}
!8898 = !DILocalVariable(name: "Source", arg: 1, scope: !8894, file: !8761, line: 4304, type: !110)
!8899 = !DILocalVariable(name: "PLLM", arg: 2, scope: !8894, file: !8761, line: 4304, type: !110)
!8900 = !DILocalVariable(name: "PLLN", arg: 3, scope: !8894, file: !8761, line: 4304, type: !110)
!8901 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !8894, file: !8761, line: 4304, type: !110)
!8902 = !DILocation(line: 0, scope: !8894)
!8903 = !DILocation(line: 4306, column: 3, scope: !8894)
!8904 = !DILocation(line: 4308, column: 3, scope: !8894)
!8905 = !DILocation(line: 4312, column: 1, scope: !8894)
!8906 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !8886, file: !8886, line: 69, type: !3096, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2870, retainedNodes: !2036)
!8907 = !DILocation(line: 72, column: 2, scope: !8906)
!8908 = !DILocation(line: 73, column: 1, scope: !8906)
!8909 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !8910, file: !8910, line: 1185, type: !6518, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2870, retainedNodes: !8911)
!8910 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8911 = !{!8912, !8913}
!8912 = !DILocalVariable(name: "Periphs", arg: 1, scope: !8909, file: !8910, line: 1185, type: !110)
!8913 = !DILocalVariable(name: "tmpreg", scope: !8909, file: !8910, line: 1187, type: !316)
!8914 = !DILocation(line: 0, scope: !8909)
!8915 = !DILocation(line: 1187, column: 3, scope: !8909)
!8916 = !DILocation(line: 1187, column: 17, scope: !8909)
!8917 = !DILocation(line: 1188, column: 3, scope: !8909)
!8918 = !DILocation(line: 1190, column: 12, scope: !8909)
!8919 = !DILocation(line: 1190, column: 10, scope: !8909)
!8920 = !DILocation(line: 1191, column: 9, scope: !8909)
!8921 = !DILocation(line: 1192, column: 1, scope: !8909)
!8922 = distinct !DISubprogram(name: "uart_console_init", scope: !1021, file: !1021, line: 588, type: !998, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !964, retainedNodes: !8923)
!8923 = !{!8924}
!8924 = !DILocalVariable(name: "arg", arg: 1, scope: !8922, file: !1021, line: 588, type: !976)
!8925 = !DILocation(line: 0, scope: !8922)
!8926 = !DILocation(line: 593, column: 7, scope: !8927)
!8927 = distinct !DILexicalBlock(scope: !8922, file: !1021, line: 593, column: 6)
!8928 = !DILocation(line: 593, column: 6, scope: !8922)
!8929 = !DILocation(line: 597, column: 2, scope: !8922)
!8930 = !DILocation(line: 599, column: 2, scope: !8922)
!8931 = !DILocation(line: 600, column: 1, scope: !8922)
!8932 = distinct !DISubprogram(name: "device_is_ready", scope: !8933, file: !8933, line: 47, type: !8934, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !964, retainedNodes: !8936)
!8933 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple")
!8934 = !DISubroutineType(types: !8935)
!8935 = !{!347, !976}
!8936 = !{!8937}
!8937 = !DILocalVariable(name: "dev", arg: 1, scope: !8932, file: !8933, line: 47, type: !976)
!8938 = !DILocation(line: 0, scope: !8932)
!8939 = !DILocation(line: 55, column: 2, scope: !8940)
!8940 = distinct !DILexicalBlock(scope: !8932, file: !8933, line: 55, column: 2)
!8941 = !{i64 2155054943}
!8942 = !DILocation(line: 56, column: 9, scope: !8932)
!8943 = !DILocation(line: 56, column: 2, scope: !8932)
!8944 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1021, file: !1021, line: 573, type: !3096, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !964, retainedNodes: !2036)
!8945 = !DILocation(line: 576, column: 2, scope: !8944)
!8946 = !DILocation(line: 579, column: 2, scope: !8944)
!8947 = !DILocation(line: 581, column: 1, scope: !8944)
!8948 = distinct !DISubprogram(name: "console_out", scope: !1021, file: !1021, line: 77, type: !303, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !964, retainedNodes: !8949)
!8949 = !{!8950}
!8950 = !DILocalVariable(name: "c", arg: 1, scope: !8948, file: !1021, line: 77, type: !109)
!8951 = !DILocation(line: 0, scope: !8948)
!8952 = !DILocation(line: 89, column: 11, scope: !8953)
!8953 = distinct !DILexicalBlock(scope: !8948, file: !1021, line: 89, column: 6)
!8954 = !DILocation(line: 89, column: 6, scope: !8948)
!8955 = !DILocation(line: 90, column: 3, scope: !8956)
!8956 = distinct !DILexicalBlock(scope: !8953, file: !1021, line: 89, column: 17)
!8957 = !DILocation(line: 91, column: 2, scope: !8956)
!8958 = !DILocation(line: 92, column: 34, scope: !8948)
!8959 = !DILocation(line: 92, column: 2, scope: !8948)
!8960 = !DILocation(line: 94, column: 2, scope: !8948)
!8961 = distinct !DISubprogram(name: "uart_poll_out", scope: !8962, file: !8962, line: 95, type: !994, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !964, retainedNodes: !8963)
!8962 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/kernel/condition_variables/simple")
!8963 = !{!8964, !8965}
!8964 = !DILocalVariable(name: "dev", arg: 1, scope: !8961, file: !8962, line: 95, type: !976)
!8965 = !DILocalVariable(name: "out_char", arg: 2, scope: !8961, file: !8962, line: 95, type: !179)
!8966 = !DILocation(line: 0, scope: !8961)
!8967 = !DILocation(line: 105, column: 2, scope: !8968)
!8968 = distinct !DILexicalBlock(scope: !8961, file: !8962, line: 105, column: 2)
!8969 = !{i64 2155138334}
!8970 = !DILocation(line: 106, column: 2, scope: !8961)
!8971 = !DILocation(line: 107, column: 1, scope: !8961)
!8972 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !970, file: !970, line: 574, type: !994, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !964, retainedNodes: !8973)
!8973 = !{!8974, !8975, !8976}
!8974 = !DILocalVariable(name: "dev", arg: 1, scope: !8972, file: !970, line: 574, type: !976)
!8975 = !DILocalVariable(name: "out_char", arg: 2, scope: !8972, file: !970, line: 575, type: !179)
!8976 = !DILocalVariable(name: "api", scope: !8972, file: !970, line: 577, type: !967)
!8977 = !DILocation(line: 0, scope: !8972)
!8978 = !DILocation(line: 578, column: 40, scope: !8972)
!8979 = !DILocation(line: 580, column: 7, scope: !8972)
!8980 = !DILocation(line: 580, column: 2, scope: !8972)
!8981 = !DILocation(line: 581, column: 1, scope: !8972)
!8982 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !336, file: !336, line: 730, type: !8934, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !964, retainedNodes: !8983)
!8983 = !{!8984}
!8984 = !DILocalVariable(name: "dev", arg: 1, scope: !8982, file: !336, line: 730, type: !976)
!8985 = !DILocation(line: 0, scope: !8982)
!8986 = !DILocation(line: 732, column: 9, scope: !8982)
!8987 = !DILocation(line: 732, column: 2, scope: !8982)
!8988 = distinct !DISubprogram(name: "uart_register_input", scope: !1021, file: !1021, line: 560, type: !8989, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !964, retainedNodes: !9036)
!8989 = !DISubroutineType(types: !8990)
!8990 = !{null, !8991, !8991, !9033}
!8991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8992, size: 32)
!8992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !118, line: 2208, size: 160, elements: !8993)
!8993 = !{!8994}
!8994 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !8992, file: !118, line: 2209, baseType: !8995, size: 160)
!8995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !118, line: 1709, size: 160, elements: !8996)
!8996 = !{!8997, !9010, !9014}
!8997 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !8995, file: !118, line: 1710, baseType: !8998, size: 64)
!8998 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !8999, line: 46, baseType: !9000)
!8999 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !8999, line: 41, size: 64, elements: !9001)
!9001 = !{!9002, !9009}
!9002 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9000, file: !8999, line: 42, baseType: !9003, size: 32)
!9003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9004, size: 32)
!9004 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !8999, line: 39, baseType: !9005)
!9005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !8999, line: 35, size: 32, elements: !9006)
!9006 = !{!9007}
!9007 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !9005, file: !8999, line: 36, baseType: !9008, size: 32)
!9008 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !8999, line: 32, baseType: !110)
!9009 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9000, file: !8999, line: 43, baseType: !9003, size: 32, offset: 32)
!9010 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8995, file: !118, line: 1711, baseType: !9011, size: 32, offset: 64)
!9011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !9012)
!9012 = !{!9013}
!9013 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !9011, file: !251, line: 52, baseType: !22, size: 32)
!9014 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8995, file: !118, line: 1712, baseType: !9015, size: 64, offset: 96)
!9015 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !9016)
!9016 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !9017)
!9017 = !{!9018}
!9018 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9016, file: !122, line: 232, baseType: !9019, size: 64)
!9019 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !9020)
!9020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !9021)
!9021 = !{!9022, !9028}
!9022 = !DIDerivedType(tag: DW_TAG_member, scope: !9020, file: !127, line: 38, baseType: !9023, size: 32)
!9023 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9020, file: !127, line: 38, size: 32, elements: !9024)
!9024 = !{!9025, !9027}
!9025 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9023, file: !127, line: 39, baseType: !9026, size: 32)
!9026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9020, size: 32)
!9027 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9023, file: !127, line: 40, baseType: !9026, size: 32)
!9028 = !DIDerivedType(tag: DW_TAG_member, scope: !9020, file: !127, line: 42, baseType: !9029, size: 32, offset: 32)
!9029 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9020, file: !127, line: 42, size: 32, elements: !9030)
!9030 = !{!9031, !9032}
!9031 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9029, file: !127, line: 43, baseType: !9026, size: 32)
!9032 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9029, file: !127, line: 44, baseType: !9026, size: 32)
!9033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9034, size: 32)
!9034 = !DISubroutineType(types: !9035)
!9035 = !{!178, !285, !178}
!9036 = !{!9037, !9038, !9039}
!9037 = !DILocalVariable(name: "avail", arg: 1, scope: !8988, file: !1021, line: 560, type: !8991)
!9038 = !DILocalVariable(name: "lines", arg: 2, scope: !8988, file: !1021, line: 560, type: !8991)
!9039 = !DILocalVariable(name: "completion", arg: 3, scope: !8988, file: !1021, line: 561, type: !9033)
!9040 = !DILocation(line: 0, scope: !8988)
!9041 = !DILocation(line: 566, column: 1, scope: !8988)
!9042 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1199, file: !1199, line: 523, type: !1057, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1030, retainedNodes: !9043)
!9043 = !{!9044, !9045, !9046, !9047, !9048}
!9044 = !DILocalVariable(name: "dev", arg: 1, scope: !9042, file: !1199, line: 523, type: !1059)
!9045 = !DILocalVariable(name: "pin", arg: 2, scope: !9042, file: !1199, line: 524, type: !1074)
!9046 = !DILocalVariable(name: "flags", arg: 3, scope: !9042, file: !1199, line: 524, type: !1075)
!9047 = !DILocalVariable(name: "err", scope: !9042, file: !1199, line: 526, type: !109)
!9048 = !DILocalVariable(name: "pincfg", scope: !9042, file: !1199, line: 527, type: !109)
!9049 = !DILocation(line: 0, scope: !9042)
!9050 = !DILocation(line: 527, column: 2, scope: !9042)
!9051 = !DILocation(line: 532, column: 8, scope: !9042)
!9052 = !DILocation(line: 533, column: 10, scope: !9053)
!9053 = distinct !DILexicalBlock(scope: !9042, file: !1199, line: 533, column: 6)
!9054 = !DILocation(line: 533, column: 6, scope: !9042)
!9055 = !DILocation(line: 543, column: 13, scope: !9056)
!9056 = distinct !DILexicalBlock(scope: !9042, file: !1199, line: 543, column: 6)
!9057 = !DILocation(line: 543, column: 28, scope: !9056)
!9058 = !DILocation(line: 543, column: 6, scope: !9042)
!9059 = !DILocation(line: 544, column: 14, scope: !9060)
!9060 = distinct !DILexicalBlock(scope: !9061, file: !1199, line: 544, column: 7)
!9061 = distinct !DILexicalBlock(scope: !9056, file: !1199, line: 543, column: 34)
!9062 = !DILocation(line: 544, column: 39, scope: !9060)
!9063 = !DILocation(line: 544, column: 7, scope: !9061)
!9064 = !DILocation(line: 545, column: 38, scope: !9065)
!9065 = distinct !DILexicalBlock(scope: !9060, file: !1199, line: 544, column: 45)
!9066 = !DILocation(line: 545, column: 4, scope: !9065)
!9067 = !DILocation(line: 546, column: 3, scope: !9065)
!9068 = !DILocation(line: 546, column: 21, scope: !9069)
!9069 = distinct !DILexicalBlock(scope: !9060, file: !1199, line: 546, column: 14)
!9070 = !DILocation(line: 546, column: 45, scope: !9069)
!9071 = !DILocation(line: 546, column: 14, scope: !9060)
!9072 = !DILocation(line: 547, column: 40, scope: !9073)
!9073 = distinct !DILexicalBlock(scope: !9069, file: !1199, line: 546, column: 51)
!9074 = !DILocation(line: 547, column: 4, scope: !9073)
!9075 = !DILocation(line: 548, column: 3, scope: !9073)
!9076 = !DILocation(line: 551, column: 32, scope: !9042)
!9077 = !DILocation(line: 551, column: 37, scope: !9042)
!9078 = !DILocation(line: 551, column: 2, scope: !9042)
!9079 = !DILocation(line: 554, column: 6, scope: !9042)
!9080 = !DILocation(line: 562, column: 1, scope: !9042)
!9081 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1199, file: !1199, line: 410, type: !9082, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1030, retainedNodes: !9084)
!9082 = !DISubroutineType(types: !9083)
!9083 = !{!109, !1059, !886}
!9084 = !{!9085, !9086, !9087, !9089}
!9085 = !DILocalVariable(name: "dev", arg: 1, scope: !9081, file: !1199, line: 410, type: !1059)
!9086 = !DILocalVariable(name: "value", arg: 2, scope: !9081, file: !1199, line: 410, type: !886)
!9087 = !DILocalVariable(name: "cfg", scope: !9081, file: !1199, line: 412, type: !9088)
!9088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1318, size: 32)
!9089 = !DILocalVariable(name: "gpio", scope: !9081, file: !1199, line: 413, type: !1132)
!9090 = !DILocation(line: 0, scope: !9081)
!9091 = !DILocation(line: 412, column: 45, scope: !9081)
!9092 = !DILocation(line: 413, column: 44, scope: !9081)
!9093 = !DILocation(line: 415, column: 11, scope: !9081)
!9094 = !DILocation(line: 415, column: 9, scope: !9081)
!9095 = !DILocation(line: 417, column: 2, scope: !9081)
!9096 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1199, file: !1199, line: 420, type: !1084, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1030, retainedNodes: !9097)
!9097 = !{!9098, !9099, !9100, !9101, !9102, !9103}
!9098 = !DILocalVariable(name: "dev", arg: 1, scope: !9096, file: !1199, line: 420, type: !1059)
!9099 = !DILocalVariable(name: "mask", arg: 2, scope: !9096, file: !1199, line: 421, type: !1086)
!9100 = !DILocalVariable(name: "value", arg: 3, scope: !9096, file: !1199, line: 422, type: !1081)
!9101 = !DILocalVariable(name: "cfg", scope: !9096, file: !1199, line: 424, type: !9088)
!9102 = !DILocalVariable(name: "gpio", scope: !9096, file: !1199, line: 425, type: !1132)
!9103 = !DILocalVariable(name: "port_value", scope: !9096, file: !1199, line: 426, type: !110)
!9104 = !DILocation(line: 0, scope: !9096)
!9105 = !DILocation(line: 424, column: 45, scope: !9096)
!9106 = !DILocation(line: 425, column: 44, scope: !9096)
!9107 = !DILocation(line: 430, column: 15, scope: !9096)
!9108 = !DILocation(line: 431, column: 46, scope: !9096)
!9109 = !DILocation(line: 431, column: 44, scope: !9096)
!9110 = !DILocation(line: 431, column: 61, scope: !9096)
!9111 = !DILocation(line: 431, column: 53, scope: !9096)
!9112 = !DILocation(line: 431, column: 2, scope: !9096)
!9113 = !DILocation(line: 435, column: 2, scope: !9096)
!9114 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1199, file: !1199, line: 438, type: !1089, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1030, retainedNodes: !9115)
!9115 = !{!9116, !9117, !9118, !9119}
!9116 = !DILocalVariable(name: "dev", arg: 1, scope: !9114, file: !1199, line: 438, type: !1059)
!9117 = !DILocalVariable(name: "pins", arg: 2, scope: !9114, file: !1199, line: 439, type: !1086)
!9118 = !DILocalVariable(name: "cfg", scope: !9114, file: !1199, line: 441, type: !9088)
!9119 = !DILocalVariable(name: "gpio", scope: !9114, file: !1199, line: 442, type: !1132)
!9120 = !DILocation(line: 0, scope: !9114)
!9121 = !DILocation(line: 441, column: 45, scope: !9114)
!9122 = !DILocation(line: 442, column: 44, scope: !9114)
!9123 = !DILocation(line: 448, column: 2, scope: !9114)
!9124 = !DILocation(line: 450, column: 2, scope: !9114)
!9125 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1199, file: !1199, line: 453, type: !1089, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1030, retainedNodes: !9126)
!9126 = !{!9127, !9128, !9129, !9130}
!9127 = !DILocalVariable(name: "dev", arg: 1, scope: !9125, file: !1199, line: 453, type: !1059)
!9128 = !DILocalVariable(name: "pins", arg: 2, scope: !9125, file: !1199, line: 454, type: !1086)
!9129 = !DILocalVariable(name: "cfg", scope: !9125, file: !1199, line: 456, type: !9088)
!9130 = !DILocalVariable(name: "gpio", scope: !9125, file: !1199, line: 457, type: !1132)
!9131 = !DILocation(line: 0, scope: !9125)
!9132 = !DILocation(line: 456, column: 45, scope: !9125)
!9133 = !DILocation(line: 457, column: 44, scope: !9125)
!9134 = !DILocation(line: 467, column: 2, scope: !9125)
!9135 = !DILocation(line: 470, column: 2, scope: !9125)
!9136 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1199, file: !1199, line: 473, type: !1089, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1030, retainedNodes: !9137)
!9137 = !{!9138, !9139, !9140, !9141}
!9138 = !DILocalVariable(name: "dev", arg: 1, scope: !9136, file: !1199, line: 473, type: !1059)
!9139 = !DILocalVariable(name: "pins", arg: 2, scope: !9136, file: !1199, line: 474, type: !1086)
!9140 = !DILocalVariable(name: "cfg", scope: !9136, file: !1199, line: 476, type: !9088)
!9141 = !DILocalVariable(name: "gpio", scope: !9136, file: !1199, line: 477, type: !1132)
!9142 = !DILocation(line: 0, scope: !9136)
!9143 = !DILocation(line: 476, column: 45, scope: !9136)
!9144 = !DILocation(line: 477, column: 44, scope: !9136)
!9145 = !DILocation(line: 484, column: 2, scope: !9136)
!9146 = !DILocation(line: 487, column: 2, scope: !9136)
!9147 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1199, file: !1199, line: 594, type: !1095, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1030, retainedNodes: !9148)
!9148 = !{!9149, !9150, !9151, !9152, !9153, !9154, !9156, !9157, !9158}
!9149 = !DILocalVariable(name: "dev", arg: 1, scope: !9147, file: !1199, line: 594, type: !1059)
!9150 = !DILocalVariable(name: "pin", arg: 2, scope: !9147, file: !1199, line: 595, type: !1074)
!9151 = !DILocalVariable(name: "mode", arg: 3, scope: !9147, file: !1199, line: 596, type: !1033)
!9152 = !DILocalVariable(name: "trig", arg: 4, scope: !9147, file: !1199, line: 597, type: !1039)
!9153 = !DILocalVariable(name: "cfg", scope: !9147, file: !1199, line: 599, type: !9088)
!9154 = !DILocalVariable(name: "data", scope: !9147, file: !1199, line: 600, type: !9155)
!9155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 32)
!9156 = !DILocalVariable(name: "edge", scope: !9147, file: !1199, line: 601, type: !109)
!9157 = !DILocalVariable(name: "err", scope: !9147, file: !1199, line: 602, type: !109)
!9158 = !DILabel(scope: !9147, name: "exit", file: !1199, line: 643)
!9159 = !DILocation(line: 0, scope: !9147)
!9160 = !DILocation(line: 599, column: 45, scope: !9147)
!9161 = !DILocation(line: 604, column: 6, scope: !9147)
!9162 = !DILocation(line: 605, column: 34, scope: !9163)
!9163 = distinct !DILexicalBlock(scope: !9164, file: !1199, line: 605, column: 7)
!9164 = distinct !DILexicalBlock(scope: !9165, file: !1199, line: 604, column: 38)
!9165 = distinct !DILexicalBlock(scope: !9147, file: !1199, line: 604, column: 6)
!9166 = !DILocation(line: 605, column: 7, scope: !9163)
!9167 = !DILocation(line: 605, column: 47, scope: !9163)
!9168 = !DILocation(line: 605, column: 39, scope: !9163)
!9169 = !DILocation(line: 605, column: 7, scope: !9164)
!9170 = !DILocation(line: 606, column: 4, scope: !9171)
!9171 = distinct !DILexicalBlock(scope: !9163, file: !1199, line: 605, column: 53)
!9172 = !DILocation(line: 607, column: 4, scope: !9171)
!9173 = !DILocation(line: 608, column: 4, scope: !9171)
!9174 = !DILocation(line: 609, column: 3, scope: !9171)
!9175 = !DILocation(line: 600, column: 38, scope: !9147)
!9176 = !DILocation(line: 620, column: 30, scope: !9177)
!9177 = distinct !DILexicalBlock(scope: !9147, file: !1199, line: 620, column: 6)
!9178 = !DILocation(line: 620, column: 6, scope: !9177)
!9179 = !DILocation(line: 620, column: 57, scope: !9177)
!9180 = !DILocation(line: 620, column: 6, scope: !9147)
!9181 = !DILocation(line: 625, column: 29, scope: !9147)
!9182 = !DILocation(line: 625, column: 2, scope: !9147)
!9183 = !DILocation(line: 627, column: 2, scope: !9147)
!9184 = !DILocation(line: 630, column: 3, scope: !9185)
!9185 = distinct !DILexicalBlock(scope: !9147, file: !1199, line: 627, column: 16)
!9186 = !DILocation(line: 633, column: 3, scope: !9185)
!9187 = !DILocation(line: 636, column: 3, scope: !9185)
!9188 = !DILocation(line: 639, column: 2, scope: !9147)
!9189 = !DILocation(line: 641, column: 2, scope: !9147)
!9190 = !DILocation(line: 643, column: 1, scope: !9147)
!9191 = !DILocation(line: 644, column: 2, scope: !9147)
!9192 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1199, file: !1199, line: 647, type: !1099, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1030, retainedNodes: !9193)
!9193 = !{!9194, !9195, !9196, !9197}
!9194 = !DILocalVariable(name: "dev", arg: 1, scope: !9192, file: !1199, line: 647, type: !1059)
!9195 = !DILocalVariable(name: "callback", arg: 2, scope: !9192, file: !1199, line: 648, type: !1101)
!9196 = !DILocalVariable(name: "set", arg: 3, scope: !9192, file: !1199, line: 649, type: !347)
!9197 = !DILocalVariable(name: "data", scope: !9192, file: !1199, line: 651, type: !9155)
!9198 = !DILocation(line: 0, scope: !9192)
!9199 = !DILocation(line: 651, column: 38, scope: !9192)
!9200 = !DILocation(line: 653, column: 37, scope: !9192)
!9201 = !DILocation(line: 653, column: 9, scope: !9192)
!9202 = !DILocation(line: 653, column: 2, scope: !9192)
!9203 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !9204, file: !9204, line: 38, type: !9205, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1030, retainedNodes: !9208)
!9204 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9205 = !DISubroutineType(types: !9206)
!9206 = !{!109, !9207, !1101, !347}
!9207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1274, size: 32)
!9208 = !{!9209, !9210, !9211}
!9209 = !DILocalVariable(name: "callbacks", arg: 1, scope: !9203, file: !9204, line: 38, type: !9207)
!9210 = !DILocalVariable(name: "callback", arg: 2, scope: !9203, file: !9204, line: 39, type: !1101)
!9211 = !DILocalVariable(name: "set", arg: 3, scope: !9203, file: !9204, line: 40, type: !347)
!9212 = !DILocation(line: 0, scope: !9203)
!9213 = !DILocation(line: 42, column: 2, scope: !9214)
!9214 = distinct !DILexicalBlock(scope: !9215, file: !9204, line: 42, column: 2)
!9215 = distinct !DILexicalBlock(scope: !9203, file: !9204, line: 42, column: 2)
!9216 = !DILocation(line: 42, column: 2, scope: !9215)
!9217 = !DILocation(line: 42, column: 2, scope: !9218)
!9218 = distinct !DILexicalBlock(scope: !9214, file: !9204, line: 42, column: 2)
!9219 = !DILocation(line: 43, column: 2, scope: !9220)
!9220 = distinct !DILexicalBlock(scope: !9221, file: !9204, line: 43, column: 2)
!9221 = distinct !DILexicalBlock(scope: !9203, file: !9204, line: 43, column: 2)
!9222 = !DILocation(line: 43, column: 2, scope: !9221)
!9223 = !DILocation(line: 43, column: 2, scope: !9224)
!9224 = distinct !DILexicalBlock(scope: !9220, file: !9204, line: 43, column: 2)
!9225 = !DILocation(line: 45, column: 7, scope: !9226)
!9226 = distinct !DILexicalBlock(scope: !9203, file: !9204, line: 45, column: 6)
!9227 = !DILocation(line: 45, column: 6, scope: !9203)
!9228 = !DILocation(line: 46, column: 56, scope: !9229)
!9229 = distinct !DILexicalBlock(scope: !9230, file: !9204, line: 46, column: 7)
!9230 = distinct !DILexicalBlock(scope: !9226, file: !9204, line: 45, column: 38)
!9231 = !DILocation(line: 46, column: 8, scope: !9229)
!9232 = !DILocation(line: 46, column: 7, scope: !9230)
!9233 = !DILocation(line: 51, column: 13, scope: !9226)
!9234 = !DILocation(line: 56, column: 43, scope: !9235)
!9235 = distinct !DILexicalBlock(scope: !9236, file: !9204, line: 55, column: 11)
!9236 = distinct !DILexicalBlock(scope: !9203, file: !9204, line: 55, column: 6)
!9237 = !DILocation(line: 56, column: 3, scope: !9235)
!9238 = !DILocation(line: 57, column: 2, scope: !9235)
!9239 = !DILocation(line: 60, column: 1, scope: !9203)
!9240 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1106, file: !1106, line: 261, type: !9241, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1030, retainedNodes: !9243)
!9241 = !DISubroutineType(types: !9242)
!9242 = !{!347, !9207}
!9243 = !{!9244}
!9244 = !DILocalVariable(name: "list", arg: 1, scope: !9240, file: !1106, line: 261, type: !9207)
!9245 = !DILocation(line: 0, scope: !9240)
!9246 = !DILocation(line: 261, column: 1, scope: !9240)
!9247 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1106, file: !1106, line: 417, type: !9248, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1030, retainedNodes: !9250)
!9248 = !DISubroutineType(types: !9249)
!9249 = !{!347, !9207, !1278}
!9250 = !{!9251, !9252, !9253, !9254}
!9251 = !DILocalVariable(name: "list", arg: 1, scope: !9247, file: !1106, line: 417, type: !9207)
!9252 = !DILocalVariable(name: "node", arg: 2, scope: !9247, file: !1106, line: 417, type: !1278)
!9253 = !DILocalVariable(name: "prev", scope: !9247, file: !1106, line: 417, type: !1278)
!9254 = !DILocalVariable(name: "test", scope: !9247, file: !1106, line: 417, type: !1278)
!9255 = !DILocation(line: 0, scope: !9247)
!9256 = !DILocation(line: 417, column: 1, scope: !9257)
!9257 = distinct !DILexicalBlock(scope: !9247, file: !1106, line: 417, column: 1)
!9258 = !DILocation(line: 417, column: 1, scope: !9259)
!9259 = distinct !DILexicalBlock(scope: !9257, file: !1106, line: 417, column: 1)
!9260 = !DILocation(line: 417, column: 1, scope: !9261)
!9261 = distinct !DILexicalBlock(scope: !9262, file: !1106, line: 417, column: 1)
!9262 = distinct !DILexicalBlock(scope: !9259, file: !1106, line: 417, column: 1)
!9263 = !DILocation(line: 417, column: 1, scope: !9262)
!9264 = distinct !{!9264, !9256, !9256}
!9265 = !DILocation(line: 417, column: 1, scope: !9266)
!9266 = distinct !DILexicalBlock(scope: !9261, file: !1106, line: 417, column: 1)
!9267 = !DILocation(line: 417, column: 1, scope: !9247)
!9268 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1106, file: !1106, line: 298, type: !9269, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1030, retainedNodes: !9271)
!9269 = !DISubroutineType(types: !9270)
!9270 = !{null, !9207, !1278}
!9271 = !{!9272, !9273}
!9272 = !DILocalVariable(name: "list", arg: 1, scope: !9268, file: !1106, line: 298, type: !9207)
!9273 = !DILocalVariable(name: "node", arg: 2, scope: !9268, file: !1106, line: 298, type: !1278)
!9274 = !DILocation(line: 0, scope: !9268)
!9275 = !DILocation(line: 298, column: 1, scope: !9268)
!9276 = !DILocation(line: 298, column: 1, scope: !9277)
!9277 = distinct !DILexicalBlock(scope: !9268, file: !1106, line: 298, column: 1)
!9278 = !DILocation(line: 298, column: 1, scope: !9279)
!9279 = distinct !DILexicalBlock(scope: !9277, file: !1106, line: 298, column: 1)
!9280 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1106, file: !1106, line: 231, type: !9281, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1030, retainedNodes: !9283)
!9281 = !DISubroutineType(types: !9282)
!9282 = !{!1278, !9207}
!9283 = !{!9284}
!9284 = !DILocalVariable(name: "list", arg: 1, scope: !9280, file: !1106, line: 231, type: !9207)
!9285 = !DILocation(line: 0, scope: !9280)
!9286 = !DILocation(line: 233, column: 15, scope: !9280)
!9287 = !DILocation(line: 233, column: 2, scope: !9280)
!9288 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1106, file: !1106, line: 209, type: !9289, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1030, retainedNodes: !9291)
!9289 = !DISubroutineType(types: !9290)
!9290 = !{null, !1278, !1278}
!9291 = !{!9292, !9293}
!9292 = !DILocalVariable(name: "parent", arg: 1, scope: !9288, file: !1106, line: 209, type: !1278)
!9293 = !DILocalVariable(name: "child", arg: 2, scope: !9288, file: !1106, line: 209, type: !1278)
!9294 = !DILocation(line: 0, scope: !9288)
!9295 = !DILocation(line: 211, column: 10, scope: !9288)
!9296 = !DILocation(line: 211, column: 15, scope: !9288)
!9297 = !DILocation(line: 212, column: 1, scope: !9288)
!9298 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1106, file: !1106, line: 214, type: !9269, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1030, retainedNodes: !9299)
!9299 = !{!9300, !9301}
!9300 = !DILocalVariable(name: "list", arg: 1, scope: !9298, file: !1106, line: 214, type: !9207)
!9301 = !DILocalVariable(name: "node", arg: 2, scope: !9298, file: !1106, line: 214, type: !1278)
!9302 = !DILocation(line: 0, scope: !9298)
!9303 = !DILocation(line: 216, column: 8, scope: !9298)
!9304 = !DILocation(line: 216, column: 13, scope: !9298)
!9305 = !DILocation(line: 217, column: 1, scope: !9298)
!9306 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1106, file: !1106, line: 243, type: !9281, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1030, retainedNodes: !9307)
!9307 = !{!9308}
!9308 = !DILocalVariable(name: "list", arg: 1, scope: !9306, file: !1106, line: 243, type: !9207)
!9309 = !DILocation(line: 0, scope: !9306)
!9310 = !DILocation(line: 245, column: 15, scope: !9306)
!9311 = !DILocation(line: 245, column: 2, scope: !9306)
!9312 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1106, file: !1106, line: 219, type: !9269, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1030, retainedNodes: !9313)
!9313 = !{!9314, !9315}
!9314 = !DILocalVariable(name: "list", arg: 1, scope: !9312, file: !1106, line: 219, type: !9207)
!9315 = !DILocalVariable(name: "node", arg: 2, scope: !9312, file: !1106, line: 219, type: !1278)
!9316 = !DILocation(line: 0, scope: !9312)
!9317 = !DILocation(line: 221, column: 8, scope: !9312)
!9318 = !DILocation(line: 221, column: 13, scope: !9312)
!9319 = !DILocation(line: 222, column: 1, scope: !9312)
!9320 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1106, file: !1106, line: 401, type: !9321, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1030, retainedNodes: !9323)
!9321 = !DISubroutineType(types: !9322)
!9322 = !{null, !9207, !1278, !1278}
!9323 = !{!9324, !9325, !9326}
!9324 = !DILocalVariable(name: "list", arg: 1, scope: !9320, file: !1106, line: 401, type: !9207)
!9325 = !DILocalVariable(name: "prev_node", arg: 2, scope: !9320, file: !1106, line: 401, type: !1278)
!9326 = !DILocalVariable(name: "node", arg: 3, scope: !9320, file: !1106, line: 401, type: !1278)
!9327 = !DILocation(line: 0, scope: !9320)
!9328 = !DILocation(line: 401, column: 1, scope: !9329)
!9329 = distinct !DILexicalBlock(scope: !9320, file: !1106, line: 401, column: 1)
!9330 = !DILocation(line: 0, scope: !9329)
!9331 = !DILocation(line: 401, column: 1, scope: !9320)
!9332 = !DILocation(line: 401, column: 1, scope: !9333)
!9333 = distinct !DILexicalBlock(scope: !9329, file: !1106, line: 401, column: 1)
!9334 = !DILocation(line: 401, column: 1, scope: !9335)
!9335 = distinct !DILexicalBlock(scope: !9333, file: !1106, line: 401, column: 1)
!9336 = !DILocation(line: 401, column: 1, scope: !9337)
!9337 = distinct !DILexicalBlock(scope: !9335, file: !1106, line: 401, column: 1)
!9338 = !DILocation(line: 401, column: 1, scope: !9339)
!9339 = distinct !DILexicalBlock(scope: !9329, file: !1106, line: 401, column: 1)
!9340 = !DILocation(line: 401, column: 1, scope: !9341)
!9341 = distinct !DILexicalBlock(scope: !9339, file: !1106, line: 401, column: 1)
!9342 = !DILocation(line: 401, column: 1, scope: !9343)
!9343 = distinct !DILexicalBlock(scope: !9341, file: !1106, line: 401, column: 1)
!9344 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1106, file: !1106, line: 285, type: !9345, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1030, retainedNodes: !9347)
!9345 = !DISubroutineType(types: !9346)
!9346 = !{!1278, !1278}
!9347 = !{!9348}
!9348 = !DILocalVariable(name: "node", arg: 1, scope: !9344, file: !1106, line: 285, type: !1278)
!9349 = !DILocation(line: 0, scope: !9344)
!9350 = !DILocation(line: 285, column: 1, scope: !9344)
!9351 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1106, file: !1106, line: 274, type: !9345, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1030, retainedNodes: !9352)
!9352 = !{!9353}
!9353 = !DILocalVariable(name: "node", arg: 1, scope: !9351, file: !1106, line: 274, type: !1278)
!9354 = !DILocation(line: 0, scope: !9351)
!9355 = !DILocation(line: 274, column: 1, scope: !9351)
!9356 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1106, file: !1106, line: 204, type: !9345, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1030, retainedNodes: !9357)
!9357 = !{!9358}
!9358 = !DILocalVariable(name: "node", arg: 1, scope: !9356, file: !1106, line: 204, type: !1278)
!9359 = !DILocation(line: 0, scope: !9356)
!9360 = !DILocation(line: 206, column: 15, scope: !9356)
!9361 = !DILocation(line: 206, column: 2, scope: !9356)
!9362 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1199, file: !1199, line: 342, type: !303, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1030, retainedNodes: !9363)
!9363 = !{!9364, !9365, !9366}
!9364 = !DILocalVariable(name: "pin", arg: 1, scope: !9362, file: !1199, line: 342, type: !109)
!9365 = !DILocalVariable(name: "line", scope: !9362, file: !1199, line: 344, type: !110)
!9366 = !DILocalVariable(name: "port", scope: !9362, file: !1199, line: 345, type: !109)
!9367 = !DILocation(line: 0, scope: !9362)
!9368 = !DILocation(line: 344, column: 18, scope: !9362)
!9369 = !{i32 983040, i32 0}
!9370 = !DILocation(line: 356, column: 9, scope: !9362)
!9371 = !DILocation(line: 370, column: 2, scope: !9362)
!9372 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1199, file: !1199, line: 37, type: !749, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1030, retainedNodes: !9373)
!9373 = !{!9374, !9375, !9376}
!9374 = !DILocalVariable(name: "line", arg: 1, scope: !9372, file: !1199, line: 37, type: !109)
!9375 = !DILocalVariable(name: "arg", arg: 2, scope: !9372, file: !1199, line: 37, type: !107)
!9376 = !DILocalVariable(name: "data", scope: !9372, file: !1199, line: 39, type: !9155)
!9377 = !DILocation(line: 0, scope: !9372)
!9378 = !DILocation(line: 41, column: 29, scope: !9372)
!9379 = !DILocation(line: 41, column: 39, scope: !9372)
!9380 = !DILocation(line: 41, column: 44, scope: !9372)
!9381 = !DILocation(line: 41, column: 2, scope: !9372)
!9382 = !DILocation(line: 42, column: 1, scope: !9372)
!9383 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1199, file: !1199, line: 376, type: !9384, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1030, retainedNodes: !9386)
!9384 = !DISubroutineType(types: !9385)
!9385 = !{!109, !109, !109}
!9386 = !{!9387, !9388, !9389, !9391, !9392}
!9387 = !DILocalVariable(name: "port", arg: 1, scope: !9383, file: !1199, line: 376, type: !109)
!9388 = !DILocalVariable(name: "pin", arg: 2, scope: !9383, file: !1199, line: 376, type: !109)
!9389 = !DILocalVariable(name: "clk", scope: !9383, file: !1199, line: 386, type: !9390)
!9390 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1059)
!9391 = !DILocalVariable(name: "pclken", scope: !9383, file: !1199, line: 387, type: !1325)
!9392 = !DILocalVariable(name: "ret", scope: !9383, file: !1199, line: 396, type: !109)
!9393 = !DILocation(line: 0, scope: !9383)
!9394 = !DILocation(line: 387, column: 2, scope: !9383)
!9395 = !DILocation(line: 387, column: 22, scope: !9383)
!9396 = !DILocation(line: 399, column: 8, scope: !9383)
!9397 = !DILocation(line: 400, column: 10, scope: !9398)
!9398 = distinct !DILexicalBlock(scope: !9383, file: !1199, line: 400, column: 6)
!9399 = !DILocation(line: 400, column: 6, scope: !9383)
!9400 = !DILocation(line: 405, column: 2, scope: !9383)
!9401 = !DILocation(line: 407, column: 2, scope: !9383)
!9402 = !DILocation(line: 408, column: 1, scope: !9383)
!9403 = distinct !DISubprogram(name: "clock_control_on", scope: !838, file: !838, line: 123, type: !1164, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1030, retainedNodes: !9404)
!9404 = !{!9405, !9406, !9407}
!9405 = !DILocalVariable(name: "dev", arg: 1, scope: !9403, file: !838, line: 123, type: !1059)
!9406 = !DILocalVariable(name: "sys", arg: 2, scope: !9403, file: !838, line: 124, type: !930)
!9407 = !DILocalVariable(name: "api", scope: !9403, file: !838, line: 126, type: !1157)
!9408 = !DILocation(line: 0, scope: !9403)
!9409 = !DILocation(line: 127, column: 49, scope: !9403)
!9410 = !DILocation(line: 129, column: 14, scope: !9403)
!9411 = !DILocation(line: 129, column: 9, scope: !9403)
!9412 = !DILocation(line: 129, column: 2, scope: !9403)
!9413 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1199, file: !1199, line: 311, type: !8518, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1030, retainedNodes: !9414)
!9414 = !{!9415, !9416, !9417}
!9415 = !DILocalVariable(name: "port", arg: 1, scope: !9413, file: !1199, line: 311, type: !109)
!9416 = !DILocalVariable(name: "pin", arg: 2, scope: !9413, file: !1199, line: 311, type: !109)
!9417 = !DILocalVariable(name: "line", scope: !9413, file: !1199, line: 313, type: !110)
!9418 = !DILocation(line: 0, scope: !9413)
!9419 = !DILocation(line: 313, column: 18, scope: !9413)
!9420 = !DILocation(line: 337, column: 2, scope: !9413)
!9421 = !DILocation(line: 340, column: 1, scope: !9413)
!9422 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1199, file: !1199, line: 295, type: !9423, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1030, retainedNodes: !9425)
!9423 = !DISubroutineType(types: !9424)
!9424 = !{!110, !109}
!9425 = !{!9426}
!9426 = !DILocalVariable(name: "pin", arg: 1, scope: !9422, file: !1199, line: 295, type: !109)
!9427 = !DILocation(line: 0, scope: !9422)
!9428 = !DILocation(line: 307, column: 46, scope: !9422)
!9429 = !DILocation(line: 307, column: 27, scope: !9422)
!9430 = !DILocation(line: 307, column: 32, scope: !9422)
!9431 = !DILocation(line: 307, column: 14, scope: !9422)
!9432 = !DILocation(line: 307, column: 39, scope: !9422)
!9433 = !DILocation(line: 307, column: 2, scope: !9422)
!9434 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !6121, file: !6121, line: 671, type: !9435, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1030, retainedNodes: !9437)
!9435 = !DISubroutineType(types: !9436)
!9436 = !{null, !110, !110}
!9437 = !{!9438, !9439}
!9438 = !DILocalVariable(name: "Port", arg: 1, scope: !9434, file: !6121, line: 671, type: !110)
!9439 = !DILocalVariable(name: "Line", arg: 2, scope: !9434, file: !6121, line: 671, type: !110)
!9440 = !DILocation(line: 0, scope: !9434)
!9441 = !DILocation(line: 673, column: 3, scope: !9434)
!9442 = !DILocalVariable(name: "value", arg: 1, scope: !9443, file: !6421, line: 373, type: !110)
!9443 = distinct !DISubprogram(name: "__RBIT", scope: !6421, file: !6421, line: 373, type: !7708, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1030, retainedNodes: !9444)
!9444 = !{!9442, !9445}
!9445 = !DILocalVariable(name: "result", scope: !9443, file: !6421, line: 375, type: !110)
!9446 = !DILocation(line: 0, scope: !9443, inlinedAt: !9447)
!9447 = distinct !DILocation(line: 673, column: 3, scope: !9434)
!9448 = !DILocation(line: 380, column: 4, scope: !9443, inlinedAt: !9447)
!9449 = !{i64 3549595}
!9450 = !DILocalVariable(name: "value", arg: 1, scope: !9451, file: !6421, line: 403, type: !110)
!9451 = distinct !DISubprogram(name: "__CLZ", scope: !6421, file: !6421, line: 403, type: !9452, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1030, retainedNodes: !9454)
!9452 = !DISubroutineType(types: !9453)
!9453 = !{!178, !110}
!9454 = !{!9450}
!9455 = !DILocation(line: 0, scope: !9451, inlinedAt: !9456)
!9456 = distinct !DILocation(line: 673, column: 3, scope: !9434)
!9457 = !DILocation(line: 414, column: 7, scope: !9451, inlinedAt: !9456)
!9458 = !DILocation(line: 674, column: 1, scope: !9434)
!9459 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !9204, file: !9204, line: 69, type: !9460, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1030, retainedNodes: !9462)
!9460 = !DISubroutineType(types: !9461)
!9461 = !{null, !9207, !1059, !110}
!9462 = !{!9463, !9464, !9465, !9466, !9467}
!9463 = !DILocalVariable(name: "list", arg: 1, scope: !9459, file: !9204, line: 69, type: !9207)
!9464 = !DILocalVariable(name: "port", arg: 2, scope: !9459, file: !9204, line: 70, type: !1059)
!9465 = !DILocalVariable(name: "pins", arg: 3, scope: !9459, file: !9204, line: 71, type: !110)
!9466 = !DILocalVariable(name: "cb", scope: !9459, file: !9204, line: 73, type: !1101)
!9467 = !DILocalVariable(name: "tmp", scope: !9459, file: !9204, line: 73, type: !1101)
!9468 = !DILocation(line: 0, scope: !9459)
!9469 = !DILocation(line: 75, column: 2, scope: !9470)
!9470 = distinct !DILexicalBlock(scope: !9459, file: !9204, line: 75, column: 2)
!9471 = !DILocation(line: 0, scope: !9470)
!9472 = !DILocation(line: 76, column: 11, scope: !9473)
!9473 = distinct !DILexicalBlock(scope: !9474, file: !9204, line: 76, column: 7)
!9474 = distinct !DILexicalBlock(scope: !9475, file: !9204, line: 75, column: 57)
!9475 = distinct !DILexicalBlock(scope: !9470, file: !9204, line: 75, column: 2)
!9476 = !DILocation(line: 76, column: 20, scope: !9473)
!9477 = !DILocation(line: 76, column: 7, scope: !9474)
!9478 = !DILocation(line: 77, column: 4, scope: !9479)
!9479 = distinct !DILexicalBlock(scope: !9480, file: !9204, line: 77, column: 4)
!9480 = distinct !DILexicalBlock(scope: !9481, file: !9204, line: 77, column: 4)
!9481 = distinct !DILexicalBlock(scope: !9473, file: !9204, line: 76, column: 28)
!9482 = !DILocation(line: 77, column: 4, scope: !9480)
!9483 = !DILocation(line: 77, column: 4, scope: !9484)
!9484 = distinct !DILexicalBlock(scope: !9479, file: !9204, line: 77, column: 4)
!9485 = !DILocation(line: 78, column: 4, scope: !9481)
!9486 = !DILocation(line: 79, column: 3, scope: !9481)
!9487 = !DILocation(line: 75, column: 2, scope: !9475)
!9488 = !DILocation(line: 81, column: 1, scope: !9459)
!9489 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !6121, file: !6121, line: 710, type: !7708, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1030, retainedNodes: !9490)
!9490 = !{!9491}
!9491 = !DILocalVariable(name: "Line", arg: 1, scope: !9489, file: !6121, line: 710, type: !110)
!9492 = !DILocation(line: 0, scope: !9489)
!9493 = !DILocation(line: 712, column: 21, scope: !9489)
!9494 = !DILocation(line: 0, scope: !9443, inlinedAt: !9495)
!9495 = distinct !DILocation(line: 712, column: 76, scope: !9489)
!9496 = !DILocation(line: 380, column: 4, scope: !9443, inlinedAt: !9495)
!9497 = !DILocation(line: 0, scope: !9451, inlinedAt: !9498)
!9498 = distinct !DILocation(line: 712, column: 76, scope: !9489)
!9499 = !DILocation(line: 414, column: 7, scope: !9451, inlinedAt: !9498)
!9500 = !DILocation(line: 712, column: 73, scope: !9489)
!9501 = !DILocation(line: 712, column: 3, scope: !9489)
!9502 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !9503, file: !9503, line: 910, type: !9504, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1030, retainedNodes: !9506)
!9503 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9504 = !DISubroutineType(types: !9505)
!9505 = !{null, !1132, !110}
!9506 = !{!9507, !9508}
!9507 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9502, file: !9503, line: 910, type: !1132)
!9508 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9502, file: !9503, line: 910, type: !110)
!9509 = !DILocation(line: 0, scope: !9502)
!9510 = !DILocation(line: 912, column: 3, scope: !9502)
!9511 = !DILocation(line: 913, column: 1, scope: !9502)
!9512 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !9503, file: !9503, line: 823, type: !9513, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1030, retainedNodes: !9515)
!9513 = !DISubroutineType(types: !9514)
!9514 = !{!110, !1132}
!9515 = !{!9516}
!9516 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9512, file: !9503, line: 823, type: !1132)
!9517 = !DILocation(line: 0, scope: !9512)
!9518 = !DILocation(line: 825, column: 21, scope: !9512)
!9519 = !DILocation(line: 825, column: 3, scope: !9512)
!9520 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !9503, file: !9503, line: 812, type: !9504, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1030, retainedNodes: !9521)
!9521 = !{!9522, !9523}
!9522 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9520, file: !9503, line: 812, type: !1132)
!9523 = !DILocalVariable(name: "PortValue", arg: 2, scope: !9520, file: !9503, line: 812, type: !110)
!9524 = !DILocation(line: 0, scope: !9520)
!9525 = !DILocation(line: 814, column: 3, scope: !9520)
!9526 = !DILocation(line: 815, column: 1, scope: !9520)
!9527 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !9503, file: !9503, line: 771, type: !9513, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1030, retainedNodes: !9528)
!9528 = !{!9529}
!9529 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9527, file: !9503, line: 771, type: !1132)
!9530 = !DILocation(line: 0, scope: !9527)
!9531 = !DILocation(line: 773, column: 21, scope: !9527)
!9532 = !DILocation(line: 773, column: 3, scope: !9527)
!9533 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1199, file: !1199, line: 47, type: !9534, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1030, retainedNodes: !9536)
!9534 = !DISubroutineType(types: !9535)
!9535 = !{!109, !1075, !281}
!9536 = !{!9537, !9538}
!9537 = !DILocalVariable(name: "flags", arg: 1, scope: !9533, file: !1199, line: 47, type: !1075)
!9538 = !DILocalVariable(name: "pincfg", arg: 2, scope: !9533, file: !1199, line: 47, type: !281)
!9539 = !DILocation(line: 0, scope: !9533)
!9540 = !DILocation(line: 50, column: 13, scope: !9541)
!9541 = distinct !DILexicalBlock(scope: !9533, file: !1199, line: 50, column: 6)
!9542 = !DILocation(line: 50, column: 28, scope: !9541)
!9543 = !DILocation(line: 50, column: 6, scope: !9533)
!9544 = !DILocation(line: 53, column: 11, scope: !9545)
!9545 = distinct !DILexicalBlock(scope: !9541, file: !1199, line: 50, column: 34)
!9546 = !DILocation(line: 55, column: 14, scope: !9547)
!9547 = distinct !DILexicalBlock(scope: !9545, file: !1199, line: 55, column: 7)
!9548 = !DILocation(line: 55, column: 35, scope: !9547)
!9549 = !DILocation(line: 55, column: 7, scope: !9545)
!9550 = !DILocation(line: 56, column: 14, scope: !9551)
!9551 = distinct !DILexicalBlock(scope: !9552, file: !1199, line: 56, column: 8)
!9552 = distinct !DILexicalBlock(scope: !9547, file: !1199, line: 55, column: 41)
!9553 = !DILocation(line: 56, column: 8, scope: !9552)
!9554 = !DILocation(line: 0, scope: !9547)
!9555 = !DILocation(line: 66, column: 14, scope: !9556)
!9556 = distinct !DILexicalBlock(scope: !9545, file: !1199, line: 66, column: 7)
!9557 = !DILocation(line: 66, column: 30, scope: !9556)
!9558 = !DILocation(line: 66, column: 7, scope: !9545)
!9559 = !DILocation(line: 67, column: 12, scope: !9560)
!9560 = distinct !DILexicalBlock(scope: !9556, file: !1199, line: 66, column: 36)
!9561 = !DILocation(line: 68, column: 3, scope: !9560)
!9562 = !DILocation(line: 68, column: 21, scope: !9563)
!9563 = distinct !DILexicalBlock(scope: !9556, file: !1199, line: 68, column: 14)
!9564 = !DILocation(line: 68, column: 39, scope: !9563)
!9565 = !DILocation(line: 68, column: 14, scope: !9556)
!9566 = !DILocation(line: 69, column: 12, scope: !9567)
!9567 = distinct !DILexicalBlock(scope: !9563, file: !1199, line: 68, column: 45)
!9568 = !DILocation(line: 70, column: 3, scope: !9567)
!9569 = !DILocation(line: 72, column: 21, scope: !9570)
!9570 = distinct !DILexicalBlock(scope: !9541, file: !1199, line: 72, column: 14)
!9571 = !DILocation(line: 72, column: 35, scope: !9570)
!9572 = !DILocation(line: 72, column: 14, scope: !9541)
!9573 = !DILocation(line: 77, column: 14, scope: !9574)
!9574 = distinct !DILexicalBlock(scope: !9575, file: !1199, line: 77, column: 7)
!9575 = distinct !DILexicalBlock(scope: !9570, file: !1199, line: 72, column: 41)
!9576 = !DILocation(line: 77, column: 30, scope: !9574)
!9577 = !DILocation(line: 77, column: 7, scope: !9575)
!9578 = !DILocation(line: 0, scope: !9541)
!9579 = !DILocation(line: 90, column: 1, scope: !9533)
!9580 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1199, file: !1199, line: 157, type: !9581, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1030, retainedNodes: !9583)
!9581 = !DISubroutineType(types: !9582)
!9582 = !{null, !1059, !109, !109, !109}
!9583 = !{!9584, !9585, !9586, !9587, !9588, !9589, !9590, !9591, !9592, !9593, !9594}
!9584 = !DILocalVariable(name: "dev", arg: 1, scope: !9580, file: !1199, line: 157, type: !1059)
!9585 = !DILocalVariable(name: "pin", arg: 2, scope: !9580, file: !1199, line: 157, type: !109)
!9586 = !DILocalVariable(name: "conf", arg: 3, scope: !9580, file: !1199, line: 158, type: !109)
!9587 = !DILocalVariable(name: "func", arg: 4, scope: !9580, file: !1199, line: 158, type: !109)
!9588 = !DILocalVariable(name: "cfg", scope: !9580, file: !1199, line: 160, type: !9088)
!9589 = !DILocalVariable(name: "gpio", scope: !9580, file: !1199, line: 161, type: !1132)
!9590 = !DILocalVariable(name: "pin_ll", scope: !9580, file: !1199, line: 163, type: !109)
!9591 = !DILocalVariable(name: "mode", scope: !9580, file: !1199, line: 227, type: !32)
!9592 = !DILocalVariable(name: "otype", scope: !9580, file: !1199, line: 227, type: !32)
!9593 = !DILocalVariable(name: "ospeed", scope: !9580, file: !1199, line: 227, type: !32)
!9594 = !DILocalVariable(name: "pupd", scope: !9580, file: !1199, line: 227, type: !32)
!9595 = !DILocation(line: 0, scope: !9580)
!9596 = !DILocation(line: 160, column: 45, scope: !9580)
!9597 = !DILocation(line: 161, column: 44, scope: !9580)
!9598 = !DILocation(line: 163, column: 15, scope: !9580)
!9599 = !DILocation(line: 229, column: 14, scope: !9580)
!9600 = !DILocation(line: 246, column: 47, scope: !9580)
!9601 = !DILocation(line: 246, column: 2, scope: !9580)
!9602 = !DILocation(line: 248, column: 43, scope: !9580)
!9603 = !DILocation(line: 248, column: 2, scope: !9580)
!9604 = !DILocation(line: 250, column: 40, scope: !9580)
!9605 = !DILocation(line: 250, column: 2, scope: !9580)
!9606 = !DILocation(line: 252, column: 11, scope: !9607)
!9607 = distinct !DILexicalBlock(scope: !9580, file: !1199, line: 252, column: 6)
!9608 = !DILocation(line: 252, column: 6, scope: !9580)
!9609 = !DILocation(line: 253, column: 11, scope: !9610)
!9610 = distinct !DILexicalBlock(scope: !9611, file: !1199, line: 253, column: 7)
!9611 = distinct !DILexicalBlock(scope: !9607, file: !1199, line: 252, column: 36)
!9612 = !DILocation(line: 253, column: 7, scope: !9611)
!9613 = !DILocation(line: 254, column: 4, scope: !9614)
!9614 = distinct !DILexicalBlock(scope: !9610, file: !1199, line: 253, column: 16)
!9615 = !DILocation(line: 255, column: 3, scope: !9614)
!9616 = !DILocation(line: 256, column: 4, scope: !9617)
!9617 = distinct !DILexicalBlock(scope: !9610, file: !1199, line: 255, column: 10)
!9618 = !DILocation(line: 260, column: 40, scope: !9580)
!9619 = !DILocation(line: 260, column: 2, scope: !9580)
!9620 = !DILocation(line: 265, column: 1, scope: !9580)
!9621 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1199, file: !1199, line: 137, type: !9423, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1030, retainedNodes: !9622)
!9622 = !{!9623, !9624}
!9623 = !DILocalVariable(name: "pin", arg: 1, scope: !9621, file: !1199, line: 137, type: !109)
!9624 = !DILocalVariable(name: "pinval", scope: !9621, file: !1199, line: 139, type: !110)
!9625 = !DILocation(line: 0, scope: !9621)
!9626 = !DILocation(line: 149, column: 13, scope: !9621)
!9627 = !DILocation(line: 151, column: 2, scope: !9621)
!9628 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !9503, file: !9503, line: 342, type: !9629, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1030, retainedNodes: !9631)
!9629 = !DISubroutineType(types: !9630)
!9630 = !{null, !1132, !110, !110}
!9631 = !{!9632, !9633, !9634}
!9632 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9628, file: !9503, line: 342, type: !1132)
!9633 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9628, file: !9503, line: 342, type: !110)
!9634 = !DILocalVariable(name: "OutputType", arg: 3, scope: !9628, file: !9503, line: 342, type: !110)
!9635 = !DILocation(line: 0, scope: !9628)
!9636 = !DILocation(line: 344, column: 3, scope: !9628)
!9637 = !DILocation(line: 345, column: 1, scope: !9628)
!9638 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !9503, file: !9503, line: 413, type: !9629, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1030, retainedNodes: !9639)
!9639 = !{!9640, !9641, !9642}
!9640 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9638, file: !9503, line: 413, type: !1132)
!9641 = !DILocalVariable(name: "Pin", arg: 2, scope: !9638, file: !9503, line: 413, type: !110)
!9642 = !DILocalVariable(name: "Speed", arg: 3, scope: !9638, file: !9503, line: 413, type: !110)
!9643 = !DILocation(line: 0, scope: !9638)
!9644 = !DILocation(line: 415, column: 3, scope: !9638)
!9645 = !DILocation(line: 0, scope: !9443, inlinedAt: !9646)
!9646 = distinct !DILocation(line: 415, column: 3, scope: !9638)
!9647 = !DILocation(line: 380, column: 4, scope: !9443, inlinedAt: !9646)
!9648 = !DILocation(line: 0, scope: !9451, inlinedAt: !9649)
!9649 = distinct !DILocation(line: 415, column: 3, scope: !9638)
!9650 = !DILocation(line: 414, column: 7, scope: !9451, inlinedAt: !9649)
!9651 = !DILocation(line: 0, scope: !9443, inlinedAt: !9652)
!9652 = distinct !DILocation(line: 415, column: 3, scope: !9638)
!9653 = !DILocation(line: 0, scope: !9451, inlinedAt: !9654)
!9654 = distinct !DILocation(line: 415, column: 3, scope: !9638)
!9655 = !DILocation(line: 417, column: 1, scope: !9638)
!9656 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !9503, file: !9503, line: 484, type: !9629, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1030, retainedNodes: !9657)
!9657 = !{!9658, !9659, !9660}
!9658 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9656, file: !9503, line: 484, type: !1132)
!9659 = !DILocalVariable(name: "Pin", arg: 2, scope: !9656, file: !9503, line: 484, type: !110)
!9660 = !DILocalVariable(name: "Pull", arg: 3, scope: !9656, file: !9503, line: 484, type: !110)
!9661 = !DILocation(line: 0, scope: !9656)
!9662 = !DILocation(line: 486, column: 3, scope: !9656)
!9663 = !DILocation(line: 0, scope: !9443, inlinedAt: !9664)
!9664 = distinct !DILocation(line: 486, column: 3, scope: !9656)
!9665 = !DILocation(line: 380, column: 4, scope: !9443, inlinedAt: !9664)
!9666 = !DILocation(line: 0, scope: !9451, inlinedAt: !9667)
!9667 = distinct !DILocation(line: 486, column: 3, scope: !9656)
!9668 = !DILocation(line: 414, column: 7, scope: !9451, inlinedAt: !9667)
!9669 = !DILocation(line: 0, scope: !9443, inlinedAt: !9670)
!9670 = distinct !DILocation(line: 486, column: 3, scope: !9656)
!9671 = !DILocation(line: 0, scope: !9451, inlinedAt: !9672)
!9672 = distinct !DILocation(line: 486, column: 3, scope: !9656)
!9673 = !DILocation(line: 487, column: 1, scope: !9656)
!9674 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !9503, file: !9503, line: 556, type: !9629, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1030, retainedNodes: !9675)
!9675 = !{!9676, !9677, !9678}
!9676 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9674, file: !9503, line: 556, type: !1132)
!9677 = !DILocalVariable(name: "Pin", arg: 2, scope: !9674, file: !9503, line: 556, type: !110)
!9678 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9674, file: !9503, line: 556, type: !110)
!9679 = !DILocation(line: 0, scope: !9674)
!9680 = !DILocation(line: 558, column: 3, scope: !9674)
!9681 = !DILocation(line: 0, scope: !9443, inlinedAt: !9682)
!9682 = distinct !DILocation(line: 558, column: 3, scope: !9674)
!9683 = !DILocation(line: 380, column: 4, scope: !9443, inlinedAt: !9682)
!9684 = !DILocation(line: 0, scope: !9451, inlinedAt: !9685)
!9685 = distinct !DILocation(line: 558, column: 3, scope: !9674)
!9686 = !DILocation(line: 414, column: 7, scope: !9451, inlinedAt: !9685)
!9687 = !DILocation(line: 0, scope: !9443, inlinedAt: !9688)
!9688 = distinct !DILocation(line: 558, column: 3, scope: !9674)
!9689 = !DILocation(line: 0, scope: !9451, inlinedAt: !9690)
!9690 = distinct !DILocation(line: 558, column: 3, scope: !9674)
!9691 = !DILocation(line: 560, column: 1, scope: !9674)
!9692 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !9503, file: !9503, line: 633, type: !9629, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1030, retainedNodes: !9693)
!9693 = !{!9694, !9695, !9696}
!9694 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9692, file: !9503, line: 633, type: !1132)
!9695 = !DILocalVariable(name: "Pin", arg: 2, scope: !9692, file: !9503, line: 633, type: !110)
!9696 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9692, file: !9503, line: 633, type: !110)
!9697 = !DILocation(line: 0, scope: !9692)
!9698 = !DILocation(line: 635, column: 3, scope: !9692)
!9699 = !DILocation(line: 0, scope: !9443, inlinedAt: !9700)
!9700 = distinct !DILocation(line: 635, column: 3, scope: !9692)
!9701 = !DILocation(line: 380, column: 4, scope: !9443, inlinedAt: !9700)
!9702 = !DILocation(line: 0, scope: !9451, inlinedAt: !9703)
!9703 = distinct !DILocation(line: 635, column: 3, scope: !9692)
!9704 = !DILocation(line: 414, column: 7, scope: !9451, inlinedAt: !9703)
!9705 = !DILocation(line: 0, scope: !9443, inlinedAt: !9706)
!9706 = distinct !DILocation(line: 635, column: 3, scope: !9692)
!9707 = !DILocation(line: 0, scope: !9451, inlinedAt: !9708)
!9708 = distinct !DILocation(line: 635, column: 3, scope: !9692)
!9709 = !DILocation(line: 637, column: 1, scope: !9692)
!9710 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !9503, file: !9503, line: 273, type: !9629, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1030, retainedNodes: !9711)
!9711 = !{!9712, !9713, !9714}
!9712 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9710, file: !9503, line: 273, type: !1132)
!9713 = !DILocalVariable(name: "Pin", arg: 2, scope: !9710, file: !9503, line: 273, type: !110)
!9714 = !DILocalVariable(name: "Mode", arg: 3, scope: !9710, file: !9503, line: 273, type: !110)
!9715 = !DILocation(line: 0, scope: !9710)
!9716 = !DILocation(line: 275, column: 3, scope: !9710)
!9717 = !DILocation(line: 0, scope: !9443, inlinedAt: !9718)
!9718 = distinct !DILocation(line: 275, column: 3, scope: !9710)
!9719 = !DILocation(line: 380, column: 4, scope: !9443, inlinedAt: !9718)
!9720 = !DILocation(line: 0, scope: !9451, inlinedAt: !9721)
!9721 = distinct !DILocation(line: 275, column: 3, scope: !9710)
!9722 = !DILocation(line: 414, column: 7, scope: !9451, inlinedAt: !9721)
!9723 = !DILocation(line: 0, scope: !9443, inlinedAt: !9724)
!9724 = distinct !DILocation(line: 275, column: 3, scope: !9710)
!9725 = !DILocation(line: 0, scope: !9451, inlinedAt: !9726)
!9726 = distinct !DILocation(line: 275, column: 3, scope: !9710)
!9727 = !DILocation(line: 276, column: 1, scope: !9710)
!9728 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1199, file: !1199, line: 698, type: !1212, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1030, retainedNodes: !9729)
!9729 = !{!9730, !9731, !9732}
!9730 = !DILocalVariable(name: "dev", arg: 1, scope: !9728, file: !1199, line: 698, type: !1059)
!9731 = !DILocalVariable(name: "data", scope: !9728, file: !1199, line: 700, type: !9155)
!9732 = !DILocalVariable(name: "ret", scope: !9728, file: !1199, line: 701, type: !109)
!9733 = !DILocation(line: 0, scope: !9728)
!9734 = !DILocation(line: 700, column: 38, scope: !9728)
!9735 = !DILocation(line: 703, column: 8, scope: !9728)
!9736 = !DILocation(line: 703, column: 12, scope: !9728)
!9737 = !DILocation(line: 705, column: 7, scope: !9738)
!9738 = distinct !DILexicalBlock(scope: !9728, file: !1199, line: 705, column: 6)
!9739 = !DILocation(line: 705, column: 6, scope: !9728)
!9740 = !DILocation(line: 722, column: 8, scope: !9728)
!9741 = !DILocation(line: 723, column: 10, scope: !9742)
!9742 = distinct !DILexicalBlock(scope: !9728, file: !1199, line: 723, column: 6)
!9743 = !DILocation(line: 723, column: 6, scope: !9728)
!9744 = !DILocation(line: 731, column: 1, scope: !9728)
!9745 = distinct !DISubprogram(name: "device_is_ready", scope: !8933, file: !8933, line: 47, type: !9746, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1030, retainedNodes: !9748)
!9746 = !DISubroutineType(types: !9747)
!9747 = !{!347, !1059}
!9748 = !{!9749}
!9749 = !DILocalVariable(name: "dev", arg: 1, scope: !9745, file: !8933, line: 47, type: !1059)
!9750 = !DILocation(line: 0, scope: !9745)
!9751 = !DILocation(line: 55, column: 2, scope: !9752)
!9752 = distinct !DILexicalBlock(scope: !9745, file: !8933, line: 55, column: 2)
!9753 = !{i64 2155046150}
!9754 = !DILocation(line: 56, column: 9, scope: !9745)
!9755 = !DILocation(line: 56, column: 2, scope: !9745)
!9756 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1199, file: !1199, line: 270, type: !9757, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1030, retainedNodes: !9759)
!9757 = !DISubroutineType(types: !9758)
!9758 = !{!109, !1059, !347}
!9759 = !{!9760, !9761, !9762, !9763, !9764}
!9760 = !DILocalVariable(name: "dev", arg: 1, scope: !9756, file: !1199, line: 270, type: !1059)
!9761 = !DILocalVariable(name: "on", arg: 2, scope: !9756, file: !1199, line: 270, type: !347)
!9762 = !DILocalVariable(name: "cfg", scope: !9756, file: !1199, line: 272, type: !9088)
!9763 = !DILocalVariable(name: "ret", scope: !9756, file: !1199, line: 273, type: !109)
!9764 = !DILocalVariable(name: "clk", scope: !9756, file: !1199, line: 278, type: !9390)
!9765 = !DILocation(line: 0, scope: !9756)
!9766 = !DILocation(line: 272, column: 45, scope: !9756)
!9767 = !DILocation(line: 282, column: 38, scope: !9768)
!9768 = distinct !DILexicalBlock(scope: !9769, file: !1199, line: 280, column: 10)
!9769 = distinct !DILexicalBlock(scope: !9756, file: !1199, line: 280, column: 6)
!9770 = !DILocation(line: 282, column: 6, scope: !9768)
!9771 = !DILocation(line: 281, column: 9, scope: !9768)
!9772 = !DILocation(line: 293, column: 1, scope: !9756)
!9773 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !336, file: !336, line: 730, type: !9746, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1030, retainedNodes: !9774)
!9774 = !{!9775}
!9775 = !DILocalVariable(name: "dev", arg: 1, scope: !9773, file: !336, line: 730, type: !1059)
!9776 = !DILocation(line: 0, scope: !9773)
!9777 = !DILocation(line: 732, column: 9, scope: !9773)
!9778 = !DILocation(line: 732, column: 2, scope: !9773)
!9779 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1199, file: !1199, line: 496, type: !9780, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1030, retainedNodes: !9782)
!9780 = !DISubroutineType(types: !9781)
!9781 = !{!109, !1059, !109, !109, !109}
!9782 = !{!9783, !9784, !9785, !9786, !9787, !9788}
!9783 = !DILocalVariable(name: "dev", arg: 1, scope: !9779, file: !1199, line: 496, type: !1059)
!9784 = !DILocalVariable(name: "pin", arg: 2, scope: !9779, file: !1199, line: 496, type: !109)
!9785 = !DILocalVariable(name: "conf", arg: 3, scope: !9779, file: !1199, line: 496, type: !109)
!9786 = !DILocalVariable(name: "func", arg: 4, scope: !9779, file: !1199, line: 496, type: !109)
!9787 = !DILocalVariable(name: "ret", scope: !9779, file: !1199, line: 498, type: !109)
!9788 = !DILocalVariable(name: "gpio_out", scope: !9789, file: !1199, line: 508, type: !110)
!9789 = distinct !DILexicalBlock(scope: !9790, file: !1199, line: 507, column: 27)
!9790 = distinct !DILexicalBlock(scope: !9779, file: !1199, line: 507, column: 6)
!9791 = !DILocation(line: 0, scope: !9779)
!9792 = !DILocation(line: 505, column: 2, scope: !9779)
!9793 = !DILocation(line: 507, column: 11, scope: !9790)
!9794 = !DILocation(line: 507, column: 6, scope: !9779)
!9795 = !DILocation(line: 508, column: 28, scope: !9789)
!9796 = !DILocation(line: 0, scope: !9789)
!9797 = !DILocation(line: 510, column: 16, scope: !9798)
!9798 = distinct !DILexicalBlock(scope: !9789, file: !1199, line: 510, column: 7)
!9799 = !DILocation(line: 0, scope: !9798)
!9800 = !DILocation(line: 510, column: 7, scope: !9789)
!9801 = !DILocation(line: 511, column: 4, scope: !9802)
!9802 = distinct !DILexicalBlock(scope: !9798, file: !1199, line: 510, column: 32)
!9803 = !DILocation(line: 512, column: 3, scope: !9802)
!9804 = !DILocation(line: 513, column: 4, scope: !9805)
!9805 = distinct !DILexicalBlock(scope: !9806, file: !1199, line: 512, column: 39)
!9806 = distinct !DILexicalBlock(scope: !9798, file: !1199, line: 512, column: 14)
!9807 = !DILocation(line: 514, column: 3, scope: !9805)
!9808 = !DILocation(line: 518, column: 1, scope: !9779)
!9809 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1484, file: !1484, line: 526, type: !1387, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !9810)
!9810 = !{!9811, !9812, !9813}
!9811 = !DILocalVariable(name: "dev", arg: 1, scope: !9809, file: !1484, line: 526, type: !1389)
!9812 = !DILocalVariable(name: "c", arg: 2, scope: !9809, file: !1484, line: 526, type: !991)
!9813 = !DILocalVariable(name: "config", scope: !9809, file: !1484, line: 528, type: !9814)
!9814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1501, size: 32)
!9815 = !DILocation(line: 0, scope: !9809)
!9816 = !DILocation(line: 528, column: 48, scope: !9809)
!9817 = !DILocation(line: 531, column: 40, scope: !9818)
!9818 = distinct !DILexicalBlock(scope: !9809, file: !1484, line: 531, column: 6)
!9819 = !DILocation(line: 531, column: 6, scope: !9818)
!9820 = !DILocation(line: 531, column: 6, scope: !9809)
!9821 = !DILocation(line: 532, column: 34, scope: !9822)
!9822 = distinct !DILexicalBlock(scope: !9818, file: !1484, line: 531, column: 48)
!9823 = !DILocation(line: 532, column: 3, scope: !9822)
!9824 = !DILocation(line: 533, column: 2, scope: !9822)
!9825 = !DILocation(line: 539, column: 42, scope: !9826)
!9826 = distinct !DILexicalBlock(scope: !9809, file: !1484, line: 539, column: 6)
!9827 = !DILocation(line: 539, column: 7, scope: !9826)
!9828 = !DILocation(line: 539, column: 6, scope: !9809)
!9829 = !DILocation(line: 543, column: 52, scope: !9809)
!9830 = !DILocation(line: 543, column: 22, scope: !9809)
!9831 = !DILocation(line: 543, column: 5, scope: !9809)
!9832 = !DILocation(line: 545, column: 2, scope: !9809)
!9833 = !DILocation(line: 546, column: 1, scope: !9809)
!9834 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1484, file: !1484, line: 548, type: !1406, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !9835)
!9835 = !{!9836, !9837, !9838, !9839}
!9836 = !DILocalVariable(name: "dev", arg: 1, scope: !9834, file: !1484, line: 548, type: !1389)
!9837 = !DILocalVariable(name: "c", arg: 2, scope: !9834, file: !1484, line: 549, type: !179)
!9838 = !DILocalVariable(name: "config", scope: !9834, file: !1484, line: 551, type: !9814)
!9839 = !DILocalVariable(name: "key", scope: !9834, file: !1484, line: 555, type: !32)
!9840 = !DILocation(line: 0, scope: !9834)
!9841 = !DILocation(line: 551, column: 48, scope: !9834)
!9842 = !DILocation(line: 562, column: 2, scope: !9834)
!9843 = !DILocation(line: 563, column: 41, scope: !9844)
!9844 = distinct !DILexicalBlock(scope: !9845, file: !1484, line: 563, column: 7)
!9845 = distinct !DILexicalBlock(scope: !9834, file: !1484, line: 562, column: 12)
!9846 = !DILocation(line: 563, column: 7, scope: !9844)
!9847 = !DILocation(line: 563, column: 7, scope: !9845)
!9848 = !DILocation(line: 55, column: 2, scope: !9849, inlinedAt: !9853)
!9849 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6100, file: !6100, line: 42, type: !6101, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !9850)
!9850 = !{!9851, !9852}
!9851 = !DILocalVariable(name: "key", scope: !9849, file: !6100, line: 44, type: !32)
!9852 = !DILocalVariable(name: "tmp", scope: !9849, file: !6100, line: 53, type: !32)
!9853 = distinct !DILocation(line: 564, column: 10, scope: !9854)
!9854 = distinct !DILexicalBlock(scope: !9844, file: !1484, line: 563, column: 49)
!9855 = !{i64 2275266}
!9856 = !DILocation(line: 0, scope: !9849, inlinedAt: !9853)
!9857 = !DILocation(line: 565, column: 42, scope: !9858)
!9858 = distinct !DILexicalBlock(scope: !9854, file: !1484, line: 565, column: 8)
!9859 = !DILocation(line: 565, column: 8, scope: !9858)
!9860 = !DILocation(line: 565, column: 8, scope: !9854)
!9861 = !DILocalVariable(name: "key", arg: 1, scope: !9862, file: !6100, line: 84, type: !32)
!9862 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6100, file: !6100, line: 84, type: !6111, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !9863)
!9863 = !{!9861}
!9864 = !DILocation(line: 0, scope: !9862, inlinedAt: !9865)
!9865 = distinct !DILocation(line: 568, column: 4, scope: !9854)
!9866 = !DILocation(line: 95, column: 2, scope: !9862, inlinedAt: !9865)
!9867 = !{i64 2276083}
!9868 = !DILocation(line: 569, column: 3, scope: !9854)
!9869 = distinct !{!9869, !9842, !9870}
!9870 = !DILocation(line: 570, column: 2, scope: !9834)
!9871 = !DILocation(line: 592, column: 33, scope: !9834)
!9872 = !DILocation(line: 592, column: 2, scope: !9834)
!9873 = !DILocation(line: 0, scope: !9862, inlinedAt: !9874)
!9874 = distinct !DILocation(line: 593, column: 2, scope: !9834)
!9875 = !DILocation(line: 95, column: 2, scope: !9862, inlinedAt: !9874)
!9876 = !DILocation(line: 594, column: 1, scope: !9834)
!9877 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1484, file: !1484, line: 596, type: !1410, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !9878)
!9878 = !{!9879, !9880, !9881}
!9879 = !DILocalVariable(name: "dev", arg: 1, scope: !9877, file: !1484, line: 596, type: !1389)
!9880 = !DILocalVariable(name: "config", scope: !9877, file: !1484, line: 598, type: !9814)
!9881 = !DILocalVariable(name: "err", scope: !9877, file: !1484, line: 599, type: !110)
!9882 = !DILocation(line: 0, scope: !9877)
!9883 = !DILocation(line: 598, column: 48, scope: !9877)
!9884 = !DILocation(line: 606, column: 40, scope: !9885)
!9885 = distinct !DILexicalBlock(scope: !9877, file: !1484, line: 606, column: 6)
!9886 = !DILocation(line: 606, column: 6, scope: !9885)
!9887 = !DILocation(line: 606, column: 6, scope: !9877)
!9888 = !DILocation(line: 610, column: 39, scope: !9889)
!9889 = distinct !DILexicalBlock(scope: !9877, file: !1484, line: 610, column: 6)
!9890 = !DILocation(line: 610, column: 6, scope: !9889)
!9891 = !DILocation(line: 610, column: 6, scope: !9877)
!9892 = !DILocation(line: 614, column: 39, scope: !9893)
!9893 = distinct !DILexicalBlock(scope: !9877, file: !1484, line: 614, column: 6)
!9894 = !DILocation(line: 614, column: 6, scope: !9893)
!9895 = !DILocation(line: 614, column: 6, scope: !9877)
!9896 = !DILocation(line: 619, column: 40, scope: !9897)
!9897 = distinct !DILexicalBlock(scope: !9877, file: !1484, line: 619, column: 6)
!9898 = !DILocation(line: 619, column: 6, scope: !9897)
!9899 = !DILocation(line: 619, column: 6, scope: !9877)
!9900 = !DILocation(line: 623, column: 10, scope: !9901)
!9901 = distinct !DILexicalBlock(scope: !9877, file: !1484, line: 623, column: 6)
!9902 = !DILocation(line: 623, column: 6, scope: !9877)
!9903 = !DILocation(line: 624, column: 34, scope: !9904)
!9904 = distinct !DILexicalBlock(scope: !9901, file: !1484, line: 623, column: 24)
!9905 = !DILocation(line: 624, column: 3, scope: !9904)
!9906 = !DILocation(line: 625, column: 2, scope: !9904)
!9907 = !DILocation(line: 632, column: 10, scope: !9908)
!9908 = distinct !DILexicalBlock(scope: !9877, file: !1484, line: 632, column: 6)
!9909 = !DILocation(line: 632, column: 6, scope: !9877)
!9910 = !DILocation(line: 633, column: 34, scope: !9911)
!9911 = distinct !DILexicalBlock(scope: !9908, file: !1484, line: 632, column: 32)
!9912 = !DILocation(line: 633, column: 3, scope: !9911)
!9913 = !DILocation(line: 634, column: 2, scope: !9911)
!9914 = !DILocation(line: 636, column: 10, scope: !9915)
!9915 = distinct !DILexicalBlock(scope: !9877, file: !1484, line: 636, column: 6)
!9916 = !DILocation(line: 636, column: 6, scope: !9877)
!9917 = !DILocation(line: 637, column: 33, scope: !9918)
!9918 = distinct !DILexicalBlock(scope: !9915, file: !1484, line: 636, column: 31)
!9919 = !DILocation(line: 637, column: 3, scope: !9918)
!9920 = !DILocation(line: 638, column: 2, scope: !9918)
!9921 = !DILocation(line: 640, column: 10, scope: !9922)
!9922 = distinct !DILexicalBlock(scope: !9877, file: !1484, line: 640, column: 6)
!9923 = !DILocation(line: 640, column: 6, scope: !9877)
!9924 = !DILocation(line: 641, column: 33, scope: !9925)
!9925 = distinct !DILexicalBlock(scope: !9922, file: !1484, line: 640, column: 32)
!9926 = !DILocation(line: 641, column: 3, scope: !9925)
!9927 = !DILocation(line: 642, column: 2, scope: !9925)
!9928 = !DILocation(line: 646, column: 32, scope: !9877)
!9929 = !DILocation(line: 646, column: 2, scope: !9877)
!9930 = !DILocation(line: 648, column: 2, scope: !9877)
!9931 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1484, file: !1484, line: 419, type: !1414, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !9932)
!9932 = !{!9933, !9934, !9935, !9936, !9938, !9939, !9940, !9941}
!9933 = !DILocalVariable(name: "dev", arg: 1, scope: !9931, file: !1484, line: 419, type: !1389)
!9934 = !DILocalVariable(name: "cfg", arg: 2, scope: !9931, file: !1484, line: 420, type: !1416)
!9935 = !DILocalVariable(name: "config", scope: !9931, file: !1484, line: 422, type: !9814)
!9936 = !DILocalVariable(name: "data", scope: !9931, file: !1484, line: 423, type: !9937)
!9937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1558, size: 32)
!9938 = !DILocalVariable(name: "parity", scope: !9931, file: !1484, line: 424, type: !6698)
!9939 = !DILocalVariable(name: "stopbits", scope: !9931, file: !1484, line: 425, type: !6698)
!9940 = !DILocalVariable(name: "databits", scope: !9931, file: !1484, line: 426, type: !6698)
!9941 = !DILocalVariable(name: "flowctrl", scope: !9931, file: !1484, line: 428, type: !6698)
!9942 = !DILocation(line: 0, scope: !9931)
!9943 = !DILocation(line: 422, column: 48, scope: !9931)
!9944 = !DILocation(line: 423, column: 38, scope: !9931)
!9945 = !DILocation(line: 424, column: 56, scope: !9931)
!9946 = !DILocation(line: 424, column: 51, scope: !9931)
!9947 = !DILocation(line: 424, column: 26, scope: !9931)
!9948 = !DILocation(line: 425, column: 60, scope: !9931)
!9949 = !DILocation(line: 425, column: 55, scope: !9931)
!9950 = !DILocation(line: 425, column: 28, scope: !9931)
!9951 = !DILocation(line: 426, column: 60, scope: !9931)
!9952 = !DILocation(line: 426, column: 55, scope: !9931)
!9953 = !DILocation(line: 426, column: 28, scope: !9931)
!9954 = !DILocation(line: 428, column: 58, scope: !9931)
!9955 = !DILocation(line: 428, column: 53, scope: !9931)
!9956 = !DILocation(line: 428, column: 28, scope: !9931)
!9957 = !DILocation(line: 431, column: 44, scope: !9958)
!9958 = distinct !DILexicalBlock(scope: !9931, file: !1484, line: 431, column: 6)
!9959 = !DILocation(line: 438, column: 22, scope: !9960)
!9960 = distinct !DILexicalBlock(scope: !9931, file: !1484, line: 437, column: 6)
!9961 = !DILocation(line: 437, column: 6, scope: !9931)
!9962 = !DILocation(line: 448, column: 6, scope: !9931)
!9963 = !DILocation(line: 465, column: 47, scope: !9964)
!9964 = distinct !DILexicalBlock(scope: !9931, file: !1484, line: 465, column: 6)
!9965 = !DILocation(line: 475, column: 21, scope: !9966)
!9966 = distinct !DILexicalBlock(scope: !9931, file: !1484, line: 475, column: 6)
!9967 = !DILocation(line: 475, column: 6, scope: !9931)
!9968 = !DILocation(line: 476, column: 8, scope: !9969)
!9969 = distinct !DILexicalBlock(scope: !9970, file: !1484, line: 476, column: 7)
!9970 = distinct !DILexicalBlock(scope: !9966, file: !1484, line: 475, column: 49)
!9971 = !DILocation(line: 477, column: 34, scope: !9969)
!9972 = !DILocation(line: 476, column: 7, scope: !9970)
!9973 = !DILocation(line: 482, column: 27, scope: !9931)
!9974 = !DILocation(line: 482, column: 2, scope: !9931)
!9975 = !DILocation(line: 484, column: 16, scope: !9976)
!9976 = distinct !DILexicalBlock(scope: !9931, file: !1484, line: 484, column: 6)
!9977 = !DILocation(line: 484, column: 13, scope: !9976)
!9978 = !DILocation(line: 484, column: 6, scope: !9931)
!9979 = !DILocation(line: 485, column: 3, scope: !9980)
!9980 = distinct !DILexicalBlock(scope: !9976, file: !1484, line: 484, column: 44)
!9981 = !DILocation(line: 486, column: 2, scope: !9980)
!9982 = !DILocation(line: 488, column: 18, scope: !9983)
!9983 = distinct !DILexicalBlock(scope: !9931, file: !1484, line: 488, column: 6)
!9984 = !DILocation(line: 488, column: 15, scope: !9983)
!9985 = !DILocation(line: 488, column: 6, scope: !9931)
!9986 = !DILocation(line: 489, column: 3, scope: !9987)
!9987 = distinct !DILexicalBlock(scope: !9983, file: !1484, line: 488, column: 48)
!9988 = !DILocation(line: 490, column: 2, scope: !9987)
!9989 = !DILocation(line: 492, column: 18, scope: !9990)
!9990 = distinct !DILexicalBlock(scope: !9931, file: !1484, line: 492, column: 6)
!9991 = !DILocation(line: 492, column: 15, scope: !9990)
!9992 = !DILocation(line: 492, column: 6, scope: !9931)
!9993 = !DILocation(line: 493, column: 3, scope: !9994)
!9994 = distinct !DILexicalBlock(scope: !9990, file: !1484, line: 492, column: 48)
!9995 = !DILocation(line: 494, column: 2, scope: !9994)
!9996 = !DILocation(line: 496, column: 18, scope: !9997)
!9997 = distinct !DILexicalBlock(scope: !9931, file: !1484, line: 496, column: 6)
!9998 = !DILocation(line: 496, column: 15, scope: !9997)
!9999 = !DILocation(line: 496, column: 6, scope: !9931)
!10000 = !DILocation(line: 497, column: 3, scope: !10001)
!10001 = distinct !DILexicalBlock(scope: !9997, file: !1484, line: 496, column: 46)
!10002 = !DILocation(line: 498, column: 2, scope: !10001)
!10003 = !DILocation(line: 500, column: 11, scope: !10004)
!10004 = distinct !DILexicalBlock(scope: !9931, file: !1484, line: 500, column: 6)
!10005 = !DILocation(line: 500, column: 29, scope: !10004)
!10006 = !DILocation(line: 500, column: 20, scope: !10004)
!10007 = !DILocation(line: 500, column: 6, scope: !9931)
!10008 = !DILocation(line: 501, column: 3, scope: !10009)
!10009 = distinct !DILexicalBlock(scope: !10004, file: !1484, line: 500, column: 40)
!10010 = !DILocation(line: 502, column: 26, scope: !10009)
!10011 = !DILocation(line: 502, column: 19, scope: !10009)
!10012 = !DILocation(line: 503, column: 2, scope: !10009)
!10013 = !DILocation(line: 505, column: 26, scope: !9931)
!10014 = !DILocation(line: 505, column: 2, scope: !9931)
!10015 = !DILocation(line: 506, column: 2, scope: !9931)
!10016 = !DILocation(line: 507, column: 1, scope: !9931)
!10017 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1484, file: !1484, line: 509, type: !1427, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !10018)
!10018 = !{!10019, !10020, !10021}
!10019 = !DILocalVariable(name: "dev", arg: 1, scope: !10017, file: !1484, line: 509, type: !1389)
!10020 = !DILocalVariable(name: "cfg", arg: 2, scope: !10017, file: !1484, line: 510, type: !1429)
!10021 = !DILocalVariable(name: "data", scope: !10017, file: !1484, line: 512, type: !9937)
!10022 = !DILocation(line: 0, scope: !10017)
!10023 = !DILocation(line: 512, column: 38, scope: !10017)
!10024 = !DILocation(line: 514, column: 24, scope: !10017)
!10025 = !DILocation(line: 514, column: 7, scope: !10017)
!10026 = !DILocation(line: 514, column: 16, scope: !10017)
!10027 = !DILocation(line: 515, column: 41, scope: !10017)
!10028 = !{i32 0, i32 1537}
!10029 = !DILocation(line: 515, column: 16, scope: !10017)
!10030 = !DILocation(line: 515, column: 7, scope: !10017)
!10031 = !DILocation(line: 515, column: 14, scope: !10017)
!10032 = !DILocation(line: 517, column: 3, scope: !10017)
!10033 = !{i32 0, i32 12289}
!10034 = !DILocation(line: 516, column: 19, scope: !10017)
!10035 = !DILocation(line: 516, column: 7, scope: !10017)
!10036 = !DILocation(line: 516, column: 17, scope: !10017)
!10037 = !DILocation(line: 519, column: 3, scope: !10017)
!10038 = !DILocation(line: 519, column: 33, scope: !10017)
!10039 = !DILocation(line: 518, column: 19, scope: !10017)
!10040 = !DILocation(line: 518, column: 7, scope: !10017)
!10041 = !DILocation(line: 518, column: 17, scope: !10017)
!10042 = !DILocation(line: 521, column: 3, scope: !10017)
!10043 = !{i32 0, i32 769}
!10044 = !DILocation(line: 520, column: 19, scope: !10017)
!10045 = !DILocation(line: 520, column: 7, scope: !10017)
!10046 = !DILocation(line: 520, column: 17, scope: !10017)
!10047 = !DILocation(line: 522, column: 2, scope: !10017)
!10048 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1484, file: !1484, line: 205, type: !10049, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !10051)
!10049 = !DISubroutineType(types: !10050)
!10050 = !{!110, !1389}
!10051 = !{!10052, !10053}
!10052 = !DILocalVariable(name: "dev", arg: 1, scope: !10048, file: !1484, line: 205, type: !1389)
!10053 = !DILocalVariable(name: "config", scope: !10048, file: !1484, line: 207, type: !9814)
!10054 = !DILocation(line: 0, scope: !10048)
!10055 = !DILocation(line: 207, column: 48, scope: !10048)
!10056 = !DILocation(line: 209, column: 36, scope: !10048)
!10057 = !DILocation(line: 209, column: 9, scope: !10048)
!10058 = !DILocation(line: 209, column: 2, scope: !10048)
!10059 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1484, file: !1484, line: 270, type: !10060, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !10062)
!10060 = !DISubroutineType(types: !10061)
!10061 = !{!1355, !110}
!10062 = !{!10063}
!10063 = !DILocalVariable(name: "parity", arg: 1, scope: !10059, file: !1484, line: 270, type: !110)
!10064 = !DILocation(line: 0, scope: !10059)
!10065 = !DILocation(line: 272, column: 2, scope: !10059)
!10066 = !DILocation(line: 281, column: 1, scope: !10059)
!10067 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1484, file: !1484, line: 220, type: !10049, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !10068)
!10068 = !{!10069, !10070}
!10069 = !DILocalVariable(name: "dev", arg: 1, scope: !10067, file: !1484, line: 220, type: !1389)
!10070 = !DILocalVariable(name: "config", scope: !10067, file: !1484, line: 222, type: !9814)
!10071 = !DILocation(line: 0, scope: !10067)
!10072 = !DILocation(line: 222, column: 48, scope: !10067)
!10073 = !DILocation(line: 224, column: 44, scope: !10067)
!10074 = !DILocation(line: 224, column: 9, scope: !10067)
!10075 = !DILocation(line: 224, column: 2, scope: !10067)
!10076 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1484, file: !1484, line: 304, type: !10077, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !10079)
!10077 = !DISubroutineType(types: !10078)
!10078 = !{!1369, !110}
!10079 = !{!10080}
!10080 = !DILocalVariable(name: "sb", arg: 1, scope: !10076, file: !1484, line: 304, type: !110)
!10081 = !DILocation(line: 0, scope: !10076)
!10082 = !DILocation(line: 306, column: 2, scope: !10076)
!10083 = !DILocation(line: 0, scope: !10084)
!10084 = distinct !DILexicalBlock(scope: !10076, file: !1484, line: 306, column: 14)
!10085 = !DILocation(line: 323, column: 1, scope: !10076)
!10086 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1484, file: !1484, line: 235, type: !10049, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !10087)
!10087 = !{!10088, !10089}
!10088 = !DILocalVariable(name: "dev", arg: 1, scope: !10086, file: !1484, line: 235, type: !1389)
!10089 = !DILocalVariable(name: "config", scope: !10086, file: !1484, line: 237, type: !9814)
!10090 = !DILocation(line: 0, scope: !10086)
!10091 = !DILocation(line: 237, column: 48, scope: !10086)
!10092 = !DILocation(line: 239, column: 39, scope: !10086)
!10093 = !DILocation(line: 239, column: 9, scope: !10086)
!10094 = !DILocation(line: 239, column: 2, scope: !10086)
!10095 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1484, file: !1484, line: 355, type: !10096, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !10098)
!10096 = !DISubroutineType(types: !10097)
!10097 = !{!1362, !110, !110}
!10098 = !{!10099, !10100}
!10099 = !DILocalVariable(name: "db", arg: 1, scope: !10095, file: !1484, line: 355, type: !110)
!10100 = !DILocalVariable(name: "p", arg: 2, scope: !10095, file: !1484, line: 356, type: !110)
!10101 = !DILocation(line: 0, scope: !10095)
!10102 = !DILocation(line: 358, column: 2, scope: !10095)
!10103 = !DILocation(line: 384, column: 1, scope: !10095)
!10104 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1484, file: !1484, line: 250, type: !10049, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !10105)
!10105 = !{!10106, !10107}
!10106 = !DILocalVariable(name: "dev", arg: 1, scope: !10104, file: !1484, line: 250, type: !1389)
!10107 = !DILocalVariable(name: "config", scope: !10104, file: !1484, line: 252, type: !9814)
!10108 = !DILocation(line: 0, scope: !10104)
!10109 = !DILocation(line: 252, column: 48, scope: !10104)
!10110 = !DILocation(line: 254, column: 40, scope: !10104)
!10111 = !DILocation(line: 254, column: 9, scope: !10104)
!10112 = !DILocation(line: 254, column: 2, scope: !10104)
!10113 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1484, file: !1484, line: 409, type: !10114, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !10116)
!10114 = !DISubroutineType(types: !10115)
!10115 = !{!1375, !110}
!10116 = !{!10117}
!10117 = !DILocalVariable(name: "fc", arg: 1, scope: !10113, file: !1484, line: 409, type: !110)
!10118 = !DILocation(line: 0, scope: !10113)
!10119 = !DILocation(line: 411, column: 9, scope: !10120)
!10120 = distinct !DILexicalBlock(scope: !10113, file: !1484, line: 411, column: 6)
!10121 = !DILocation(line: 416, column: 1, scope: !10113)
!10122 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !10123, file: !10123, line: 967, type: !10124, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !10126)
!10123 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10124 = !DISubroutineType(types: !10125)
!10125 = !{!110, !1430}
!10126 = !{!10127}
!10127 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10122, file: !10123, line: 967, type: !1430)
!10128 = !DILocation(line: 0, scope: !10122)
!10129 = !DILocation(line: 969, column: 21, scope: !10122)
!10130 = !DILocation(line: 969, column: 3, scope: !10122)
!10131 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !10123, file: !10123, line: 601, type: !10124, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !10132)
!10132 = !{!10133}
!10133 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10131, file: !10123, line: 601, type: !1430)
!10134 = !DILocation(line: 0, scope: !10131)
!10135 = !DILocation(line: 603, column: 21, scope: !10131)
!10136 = !DILocation(line: 603, column: 3, scope: !10131)
!10137 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !10123, file: !10123, line: 820, type: !10124, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !10138)
!10138 = !{!10139}
!10139 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10137, file: !10123, line: 820, type: !1430)
!10140 = !DILocation(line: 0, scope: !10137)
!10141 = !DILocation(line: 822, column: 21, scope: !10137)
!10142 = !DILocation(line: 822, column: 3, scope: !10137)
!10143 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !10123, file: !10123, line: 547, type: !10124, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !10144)
!10144 = !{!10145}
!10145 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10143, file: !10123, line: 547, type: !1430)
!10146 = !DILocation(line: 0, scope: !10143)
!10147 = !DILocation(line: 549, column: 21, scope: !10143)
!10148 = !DILocation(line: 549, column: 3, scope: !10143)
!10149 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1484, file: !1484, line: 257, type: !10150, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !10152)
!10150 = !DISubroutineType(types: !10151)
!10151 = !{!110, !1355}
!10152 = !{!10153}
!10153 = !DILocalVariable(name: "parity", arg: 1, scope: !10149, file: !1484, line: 257, type: !1355)
!10154 = !DILocation(line: 0, scope: !10149)
!10155 = !DILocation(line: 259, column: 2, scope: !10149)
!10156 = !DILocation(line: 268, column: 1, scope: !10149)
!10157 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1484, file: !1484, line: 283, type: !10158, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !10160)
!10158 = !DISubroutineType(types: !10159)
!10159 = !{!110, !1369}
!10160 = !{!10161}
!10161 = !DILocalVariable(name: "sb", arg: 1, scope: !10157, file: !1484, line: 283, type: !1369)
!10162 = !DILocation(line: 0, scope: !10157)
!10163 = !DILocation(line: 285, column: 2, scope: !10157)
!10164 = !DILocation(line: 0, scope: !10165)
!10165 = distinct !DILexicalBlock(scope: !10157, file: !1484, line: 285, column: 14)
!10166 = !DILocation(line: 302, column: 1, scope: !10157)
!10167 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1484, file: !1484, line: 325, type: !10168, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !10170)
!10168 = !DISubroutineType(types: !10169)
!10169 = !{!110, !1362, !1355}
!10170 = !{!10171, !10172}
!10171 = !DILocalVariable(name: "db", arg: 1, scope: !10167, file: !1484, line: 325, type: !1362)
!10172 = !DILocalVariable(name: "p", arg: 2, scope: !10167, file: !1484, line: 326, type: !1355)
!10173 = !DILocation(line: 0, scope: !10167)
!10174 = !DILocation(line: 328, column: 2, scope: !10167)
!10175 = !DILocation(line: 353, column: 1, scope: !10167)
!10176 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1484, file: !1484, line: 393, type: !10177, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !10179)
!10177 = !DISubroutineType(types: !10178)
!10178 = !{!110, !1375}
!10179 = !{!10180}
!10180 = !DILocalVariable(name: "fc", arg: 1, scope: !10176, file: !1484, line: 393, type: !1375)
!10181 = !DILocation(line: 0, scope: !10176)
!10182 = !DILocation(line: 395, column: 9, scope: !10183)
!10183 = distinct !DILexicalBlock(scope: !10176, file: !1484, line: 395, column: 6)
!10184 = !DILocation(line: 400, column: 1, scope: !10176)
!10185 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !10123, file: !10123, line: 424, type: !10186, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !10188)
!10186 = !DISubroutineType(types: !10187)
!10187 = !{null, !1430}
!10188 = !{!10189}
!10189 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10185, file: !10123, line: 424, type: !1430)
!10190 = !DILocation(line: 0, scope: !10185)
!10191 = !DILocation(line: 426, column: 3, scope: !10185)
!10192 = !DILocation(line: 427, column: 1, scope: !10185)
!10193 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1484, file: !1484, line: 197, type: !10194, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !10196)
!10194 = !DISubroutineType(types: !10195)
!10195 = !{null, !1389, !110}
!10196 = !{!10197, !10198, !10199}
!10197 = !DILocalVariable(name: "dev", arg: 1, scope: !10193, file: !1484, line: 197, type: !1389)
!10198 = !DILocalVariable(name: "parity", arg: 2, scope: !10193, file: !1484, line: 198, type: !110)
!10199 = !DILocalVariable(name: "config", scope: !10193, file: !1484, line: 200, type: !9814)
!10200 = !DILocation(line: 0, scope: !10193)
!10201 = !DILocation(line: 200, column: 48, scope: !10193)
!10202 = !DILocation(line: 202, column: 29, scope: !10193)
!10203 = !DILocation(line: 202, column: 2, scope: !10193)
!10204 = !DILocation(line: 203, column: 1, scope: !10193)
!10205 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1484, file: !1484, line: 212, type: !10194, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !10206)
!10206 = !{!10207, !10208, !10209}
!10207 = !DILocalVariable(name: "dev", arg: 1, scope: !10205, file: !1484, line: 212, type: !1389)
!10208 = !DILocalVariable(name: "stopbits", arg: 2, scope: !10205, file: !1484, line: 213, type: !110)
!10209 = !DILocalVariable(name: "config", scope: !10205, file: !1484, line: 215, type: !9814)
!10210 = !DILocation(line: 0, scope: !10205)
!10211 = !DILocation(line: 215, column: 48, scope: !10205)
!10212 = !DILocation(line: 217, column: 37, scope: !10205)
!10213 = !DILocation(line: 217, column: 2, scope: !10205)
!10214 = !DILocation(line: 218, column: 1, scope: !10205)
!10215 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1484, file: !1484, line: 227, type: !10194, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !10216)
!10216 = !{!10217, !10218, !10219}
!10217 = !DILocalVariable(name: "dev", arg: 1, scope: !10215, file: !1484, line: 227, type: !1389)
!10218 = !DILocalVariable(name: "databits", arg: 2, scope: !10215, file: !1484, line: 228, type: !110)
!10219 = !DILocalVariable(name: "config", scope: !10215, file: !1484, line: 230, type: !9814)
!10220 = !DILocation(line: 0, scope: !10215)
!10221 = !DILocation(line: 230, column: 48, scope: !10215)
!10222 = !DILocation(line: 232, column: 32, scope: !10215)
!10223 = !DILocation(line: 232, column: 2, scope: !10215)
!10224 = !DILocation(line: 233, column: 1, scope: !10215)
!10225 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1484, file: !1484, line: 242, type: !10194, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !10226)
!10226 = !{!10227, !10228, !10229}
!10227 = !DILocalVariable(name: "dev", arg: 1, scope: !10225, file: !1484, line: 242, type: !1389)
!10228 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !10225, file: !1484, line: 243, type: !110)
!10229 = !DILocalVariable(name: "config", scope: !10225, file: !1484, line: 245, type: !9814)
!10230 = !DILocation(line: 0, scope: !10225)
!10231 = !DILocation(line: 245, column: 48, scope: !10225)
!10232 = !DILocation(line: 247, column: 33, scope: !10225)
!10233 = !DILocation(line: 247, column: 2, scope: !10225)
!10234 = !DILocation(line: 248, column: 1, scope: !10225)
!10235 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1484, file: !1484, line: 107, type: !10194, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !10236)
!10236 = !{!10237, !10238, !10239, !10240, !10241}
!10237 = !DILocalVariable(name: "dev", arg: 1, scope: !10235, file: !1484, line: 107, type: !1389)
!10238 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !10235, file: !1484, line: 107, type: !110)
!10239 = !DILocalVariable(name: "config", scope: !10235, file: !1484, line: 109, type: !9814)
!10240 = !DILocalVariable(name: "data", scope: !10235, file: !1484, line: 110, type: !9937)
!10241 = !DILocalVariable(name: "clock_rate", scope: !10235, file: !1484, line: 112, type: !110)
!10242 = !DILocation(line: 0, scope: !10235)
!10243 = !DILocation(line: 109, column: 48, scope: !10235)
!10244 = !DILocation(line: 110, column: 38, scope: !10235)
!10245 = !DILocation(line: 112, column: 2, scope: !10235)
!10246 = !DILocation(line: 123, column: 36, scope: !10247)
!10247 = distinct !DILexicalBlock(scope: !10248, file: !1484, line: 123, column: 7)
!10248 = distinct !DILexicalBlock(scope: !10249, file: !1484, line: 122, column: 9)
!10249 = distinct !DILexicalBlock(scope: !10235, file: !1484, line: 115, column: 6)
!10250 = !DILocation(line: 124, column: 42, scope: !10247)
!10251 = !DILocation(line: 123, column: 7, scope: !10247)
!10252 = !DILocation(line: 125, column: 22, scope: !10247)
!10253 = !DILocation(line: 123, column: 7, scope: !10248)
!10254 = !DILocation(line: 126, column: 4, scope: !10255)
!10255 = distinct !DILexicalBlock(scope: !10256, file: !1484, line: 126, column: 4)
!10256 = distinct !DILexicalBlock(scope: !10257, file: !1484, line: 126, column: 4)
!10257 = distinct !DILexicalBlock(scope: !10258, file: !1484, line: 126, column: 4)
!10258 = distinct !DILexicalBlock(scope: !10259, file: !1484, line: 126, column: 4)
!10259 = distinct !DILexicalBlock(scope: !10247, file: !1484, line: 125, column: 27)
!10260 = !DILocation(line: 127, column: 4, scope: !10259)
!10261 = !DILocation(line: 176, column: 36, scope: !10235)
!10262 = !DILocation(line: 176, column: 3, scope: !10235)
!10263 = !DILocation(line: 179, column: 32, scope: !10235)
!10264 = !DILocation(line: 180, column: 10, scope: !10235)
!10265 = !DILocation(line: 179, column: 3, scope: !10235)
!10266 = !DILocation(line: 189, column: 3, scope: !10267)
!10267 = distinct !DILexicalBlock(scope: !10268, file: !1484, line: 189, column: 3)
!10268 = distinct !DILexicalBlock(scope: !10235, file: !1484, line: 189, column: 3)
!10269 = !DILocation(line: 189, column: 3, scope: !10268)
!10270 = !DILocation(line: 189, column: 3, scope: !10271)
!10271 = distinct !DILexicalBlock(scope: !10267, file: !1484, line: 189, column: 3)
!10272 = !DILocation(line: 195, column: 1, scope: !10235)
!10273 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !10123, file: !10123, line: 410, type: !10186, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !10274)
!10274 = !{!10275}
!10275 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10273, file: !10123, line: 410, type: !1430)
!10276 = !DILocation(line: 0, scope: !10273)
!10277 = !DILocation(line: 412, column: 3, scope: !10273)
!10278 = !DILocation(line: 413, column: 1, scope: !10273)
!10279 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !838, file: !838, line: 216, type: !1463, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !10280)
!10280 = !{!10281, !10282, !10283, !10284}
!10281 = !DILocalVariable(name: "dev", arg: 1, scope: !10279, file: !838, line: 216, type: !1389)
!10282 = !DILocalVariable(name: "sys", arg: 2, scope: !10279, file: !838, line: 217, type: !930)
!10283 = !DILocalVariable(name: "rate", arg: 3, scope: !10279, file: !838, line: 218, type: !886)
!10284 = !DILocalVariable(name: "api", scope: !10279, file: !838, line: 220, type: !1441)
!10285 = !DILocation(line: 0, scope: !10279)
!10286 = !DILocation(line: 221, column: 49, scope: !10279)
!10287 = !DILocation(line: 223, column: 11, scope: !10288)
!10288 = distinct !DILexicalBlock(scope: !10279, file: !838, line: 223, column: 6)
!10289 = !DILocation(line: 223, column: 20, scope: !10288)
!10290 = !DILocation(line: 223, column: 6, scope: !10279)
!10291 = !DILocation(line: 227, column: 9, scope: !10279)
!10292 = !DILocation(line: 227, column: 2, scope: !10279)
!10293 = !DILocation(line: 228, column: 1, scope: !10279)
!10294 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !6178, file: !6178, line: 175, type: !6179, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !10295)
!10295 = !{!10296}
!10296 = !DILocalVariable(name: "level", arg: 1, scope: !10294, file: !6178, line: 175, type: !109)
!10297 = !DILocation(line: 0, scope: !10294)
!10298 = !DILocation(line: 177, column: 2, scope: !10294)
!10299 = !DILocation(line: 189, column: 1, scope: !10294)
!10300 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !10123, file: !10123, line: 615, type: !10301, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !10303)
!10301 = !DISubroutineType(types: !10302)
!10302 = !{null, !1430, !110}
!10303 = !{!10304, !10305}
!10304 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10300, file: !10123, line: 615, type: !1430)
!10305 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !10300, file: !10123, line: 615, type: !110)
!10306 = !DILocation(line: 0, scope: !10300)
!10307 = !DILocation(line: 617, column: 3, scope: !10300)
!10308 = !DILocation(line: 618, column: 1, scope: !10300)
!10309 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !10123, file: !10123, line: 1020, type: !10310, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !10312)
!10310 = !DISubroutineType(types: !10311)
!10311 = !{null, !1430, !110, !110, !110}
!10312 = !{!10313, !10314, !10315, !10316}
!10313 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10309, file: !10123, line: 1020, type: !1430)
!10314 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !10309, file: !10123, line: 1020, type: !110)
!10315 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !10309, file: !10123, line: 1020, type: !110)
!10316 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !10309, file: !10123, line: 1021, type: !110)
!10317 = !DILocation(line: 0, scope: !10309)
!10318 = !DILocation(line: 1029, column: 30, scope: !10319)
!10319 = distinct !DILexicalBlock(scope: !10320, file: !10123, line: 1028, column: 3)
!10320 = distinct !DILexicalBlock(scope: !10309, file: !10123, line: 1023, column: 7)
!10321 = !DILocation(line: 1029, column: 19, scope: !10319)
!10322 = !DILocation(line: 1029, column: 13, scope: !10319)
!10323 = !DILocation(line: 1029, column: 17, scope: !10319)
!10324 = !DILocation(line: 1031, column: 1, scope: !10309)
!10325 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !10123, file: !10123, line: 949, type: !10301, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !10326)
!10326 = !{!10327, !10328}
!10327 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10325, file: !10123, line: 949, type: !1430)
!10328 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !10325, file: !10123, line: 949, type: !110)
!10329 = !DILocation(line: 0, scope: !10325)
!10330 = !DILocation(line: 951, column: 3, scope: !10325)
!10331 = !DILocation(line: 952, column: 1, scope: !10325)
!10332 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !10123, file: !10123, line: 588, type: !10301, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !10333)
!10333 = !{!10334, !10335}
!10334 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10332, file: !10123, line: 588, type: !1430)
!10335 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10332, file: !10123, line: 588, type: !110)
!10336 = !DILocation(line: 0, scope: !10332)
!10337 = !DILocation(line: 590, column: 3, scope: !10332)
!10338 = !DILocation(line: 591, column: 1, scope: !10332)
!10339 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !10123, file: !10123, line: 805, type: !10301, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !10340)
!10340 = !{!10341, !10342}
!10341 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10339, file: !10123, line: 805, type: !1430)
!10342 = !DILocalVariable(name: "StopBits", arg: 2, scope: !10339, file: !10123, line: 805, type: !110)
!10343 = !DILocation(line: 0, scope: !10339)
!10344 = !DILocation(line: 807, column: 3, scope: !10339)
!10345 = !DILocation(line: 808, column: 1, scope: !10339)
!10346 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !10123, file: !10123, line: 532, type: !10301, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !10347)
!10347 = !{!10348, !10349}
!10348 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10346, file: !10123, line: 532, type: !1430)
!10349 = !DILocalVariable(name: "Parity", arg: 2, scope: !10346, file: !10123, line: 532, type: !110)
!10350 = !DILocation(line: 0, scope: !10346)
!10351 = !DILocation(line: 534, column: 3, scope: !10346)
!10352 = !DILocation(line: 535, column: 1, scope: !10346)
!10353 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !10123, file: !10123, line: 1770, type: !10124, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !10354)
!10354 = !{!10355}
!10355 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10353, file: !10123, line: 1770, type: !1430)
!10356 = !DILocation(line: 0, scope: !10353)
!10357 = !DILocation(line: 1772, column: 11, scope: !10353)
!10358 = !DILocation(line: 1772, column: 46, scope: !10353)
!10359 = !DILocation(line: 1772, column: 3, scope: !10353)
!10360 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !10123, file: !10123, line: 1737, type: !10124, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !10361)
!10361 = !{!10362}
!10362 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10360, file: !10123, line: 1737, type: !1430)
!10363 = !DILocation(line: 0, scope: !10360)
!10364 = !DILocation(line: 1739, column: 11, scope: !10360)
!10365 = !DILocation(line: 1739, column: 3, scope: !10360)
!10366 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !10123, file: !10123, line: 1748, type: !10124, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !10367)
!10367 = !{!10368}
!10368 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10366, file: !10123, line: 1748, type: !1430)
!10369 = !DILocation(line: 0, scope: !10366)
!10370 = !DILocation(line: 1750, column: 11, scope: !10366)
!10371 = !DILocation(line: 1750, column: 45, scope: !10366)
!10372 = !DILocation(line: 1750, column: 3, scope: !10366)
!10373 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !10123, file: !10123, line: 1827, type: !10124, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !10374)
!10374 = !{!10375}
!10375 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10373, file: !10123, line: 1827, type: !1430)
!10376 = !DILocation(line: 0, scope: !10373)
!10377 = !DILocation(line: 1829, column: 11, scope: !10373)
!10378 = !DILocation(line: 1829, column: 46, scope: !10373)
!10379 = !DILocation(line: 1829, column: 3, scope: !10373)
!10380 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !10123, file: !10123, line: 1992, type: !10186, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !10381)
!10381 = !{!10382}
!10382 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10380, file: !10123, line: 1992, type: !1430)
!10383 = !DILocation(line: 0, scope: !10380)
!10384 = !DILocation(line: 1994, column: 3, scope: !10380)
!10385 = !DILocation(line: 1995, column: 1, scope: !10380)
!10386 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !10123, file: !10123, line: 1934, type: !10186, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !10387)
!10387 = !{!10388, !10389}
!10388 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10386, file: !10123, line: 1934, type: !1430)
!10389 = !DILocalVariable(name: "tmpreg", scope: !10386, file: !10123, line: 1936, type: !316)
!10390 = !DILocation(line: 0, scope: !10386)
!10391 = !DILocation(line: 1936, column: 3, scope: !10386)
!10392 = !DILocation(line: 1936, column: 17, scope: !10386)
!10393 = !DILocation(line: 1937, column: 20, scope: !10386)
!10394 = !DILocation(line: 1937, column: 10, scope: !10386)
!10395 = !DILocation(line: 1938, column: 10, scope: !10386)
!10396 = !DILocation(line: 1939, column: 20, scope: !10386)
!10397 = !DILocation(line: 1939, column: 10, scope: !10386)
!10398 = !DILocation(line: 1940, column: 10, scope: !10386)
!10399 = !DILocation(line: 1941, column: 1, scope: !10386)
!10400 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !10123, file: !10123, line: 1877, type: !10186, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !10401)
!10401 = !{!10402, !10403}
!10402 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10400, file: !10123, line: 1877, type: !1430)
!10403 = !DILocalVariable(name: "tmpreg", scope: !10400, file: !10123, line: 1879, type: !316)
!10404 = !DILocation(line: 0, scope: !10400)
!10405 = !DILocation(line: 1879, column: 3, scope: !10400)
!10406 = !DILocation(line: 1879, column: 17, scope: !10400)
!10407 = !DILocation(line: 1880, column: 20, scope: !10400)
!10408 = !DILocation(line: 1880, column: 10, scope: !10400)
!10409 = !DILocation(line: 1881, column: 10, scope: !10400)
!10410 = !DILocation(line: 1882, column: 20, scope: !10400)
!10411 = !DILocation(line: 1882, column: 10, scope: !10400)
!10412 = !DILocation(line: 1883, column: 10, scope: !10400)
!10413 = !DILocation(line: 1884, column: 1, scope: !10400)
!10414 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !10123, file: !10123, line: 1896, type: !10186, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !10415)
!10415 = !{!10416, !10417}
!10416 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10414, file: !10123, line: 1896, type: !1430)
!10417 = !DILocalVariable(name: "tmpreg", scope: !10414, file: !10123, line: 1898, type: !316)
!10418 = !DILocation(line: 0, scope: !10414)
!10419 = !DILocation(line: 1898, column: 3, scope: !10414)
!10420 = !DILocation(line: 1898, column: 17, scope: !10414)
!10421 = !DILocation(line: 1899, column: 20, scope: !10414)
!10422 = !DILocation(line: 1899, column: 10, scope: !10414)
!10423 = !DILocation(line: 1900, column: 10, scope: !10414)
!10424 = !DILocation(line: 1901, column: 20, scope: !10414)
!10425 = !DILocation(line: 1901, column: 10, scope: !10414)
!10426 = !DILocation(line: 1902, column: 10, scope: !10414)
!10427 = !DILocation(line: 1903, column: 1, scope: !10414)
!10428 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !10123, file: !10123, line: 1915, type: !10186, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !10429)
!10429 = !{!10430, !10431}
!10430 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10428, file: !10123, line: 1915, type: !1430)
!10431 = !DILocalVariable(name: "tmpreg", scope: !10428, file: !10123, line: 1917, type: !316)
!10432 = !DILocation(line: 0, scope: !10428)
!10433 = !DILocation(line: 1917, column: 3, scope: !10428)
!10434 = !DILocation(line: 1917, column: 17, scope: !10428)
!10435 = !DILocation(line: 1918, column: 20, scope: !10428)
!10436 = !DILocation(line: 1918, column: 10, scope: !10428)
!10437 = !DILocation(line: 1919, column: 10, scope: !10428)
!10438 = !DILocation(line: 1920, column: 20, scope: !10428)
!10439 = !DILocation(line: 1920, column: 10, scope: !10428)
!10440 = !DILocation(line: 1921, column: 10, scope: !10428)
!10441 = !DILocation(line: 1922, column: 1, scope: !10428)
!10442 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !10123, file: !10123, line: 1814, type: !10124, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !10443)
!10443 = !{!10444}
!10444 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10442, file: !10123, line: 1814, type: !1430)
!10445 = !DILocation(line: 0, scope: !10442)
!10446 = !DILocation(line: 1816, column: 11, scope: !10442)
!10447 = !DILocation(line: 1816, column: 46, scope: !10442)
!10448 = !DILocation(line: 1816, column: 3, scope: !10442)
!10449 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !10123, file: !10123, line: 2426, type: !10450, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !10452)
!10450 = !DISubroutineType(types: !10451)
!10451 = !{null, !1430, !178}
!10452 = !{!10453, !10454}
!10453 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10449, file: !10123, line: 2426, type: !1430)
!10454 = !DILocalVariable(name: "Value", arg: 2, scope: !10449, file: !10123, line: 2426, type: !178)
!10455 = !DILocation(line: 0, scope: !10449)
!10456 = !DILocation(line: 2428, column: 16, scope: !10449)
!10457 = !DILocation(line: 2428, column: 11, scope: !10449)
!10458 = !DILocation(line: 2428, column: 14, scope: !10449)
!10459 = !DILocation(line: 2429, column: 1, scope: !10449)
!10460 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !10123, file: !10123, line: 1792, type: !10124, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !10461)
!10461 = !{!10462}
!10462 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10460, file: !10123, line: 1792, type: !1430)
!10463 = !DILocation(line: 0, scope: !10460)
!10464 = !DILocation(line: 1794, column: 11, scope: !10460)
!10465 = !DILocation(line: 1794, column: 47, scope: !10460)
!10466 = !DILocation(line: 1794, column: 3, scope: !10460)
!10467 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !10123, file: !10123, line: 2403, type: !10468, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !10470)
!10468 = !DISubroutineType(types: !10469)
!10469 = !{!178, !1430}
!10470 = !{!10471}
!10471 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10467, file: !10123, line: 2403, type: !1430)
!10472 = !DILocation(line: 0, scope: !10467)
!10473 = !DILocation(line: 2405, column: 20, scope: !10467)
!10474 = !DILocation(line: 2405, column: 10, scope: !10467)
!10475 = !DILocation(line: 2405, column: 3, scope: !10467)
!10476 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1484, file: !1484, line: 1583, type: !1410, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !10477)
!10477 = !{!10478, !10479, !10480, !10481, !10482, !10483}
!10478 = !DILocalVariable(name: "dev", arg: 1, scope: !10476, file: !1484, line: 1583, type: !1389)
!10479 = !DILocalVariable(name: "config", scope: !10476, file: !1484, line: 1585, type: !9814)
!10480 = !DILocalVariable(name: "data", scope: !10476, file: !1484, line: 1586, type: !9937)
!10481 = !DILocalVariable(name: "ll_parity", scope: !10476, file: !1484, line: 1587, type: !110)
!10482 = !DILocalVariable(name: "ll_datawidth", scope: !10476, file: !1484, line: 1588, type: !110)
!10483 = !DILocalVariable(name: "err", scope: !10476, file: !1484, line: 1589, type: !109)
!10484 = !DILocation(line: 0, scope: !10476)
!10485 = !DILocation(line: 1585, column: 48, scope: !10476)
!10486 = !DILocation(line: 1586, column: 38, scope: !10476)
!10487 = !DILocation(line: 1591, column: 2, scope: !10476)
!10488 = !DILocation(line: 1593, column: 29, scope: !10489)
!10489 = distinct !DILexicalBlock(scope: !10476, file: !1484, line: 1593, column: 6)
!10490 = !DILocation(line: 1593, column: 7, scope: !10489)
!10491 = !DILocation(line: 1593, column: 6, scope: !10476)
!10492 = !DILocation(line: 1594, column: 3, scope: !10493)
!10493 = distinct !DILexicalBlock(scope: !10494, file: !1484, line: 1594, column: 3)
!10494 = distinct !DILexicalBlock(scope: !10495, file: !1484, line: 1594, column: 3)
!10495 = distinct !DILexicalBlock(scope: !10496, file: !1484, line: 1594, column: 3)
!10496 = distinct !DILexicalBlock(scope: !10497, file: !1484, line: 1594, column: 3)
!10497 = distinct !DILexicalBlock(scope: !10489, file: !1484, line: 1593, column: 37)
!10498 = !DILocation(line: 1595, column: 3, scope: !10497)
!10499 = !DILocation(line: 1599, column: 31, scope: !10476)
!10500 = !DILocation(line: 1599, column: 71, scope: !10476)
!10501 = !DILocation(line: 1599, column: 8, scope: !10476)
!10502 = !DILocation(line: 1600, column: 10, scope: !10503)
!10503 = distinct !DILexicalBlock(scope: !10476, file: !1484, line: 1600, column: 6)
!10504 = !DILocation(line: 1600, column: 6, scope: !10476)
!10505 = !DILocation(line: 1601, column: 3, scope: !10506)
!10506 = distinct !DILexicalBlock(scope: !10507, file: !1484, line: 1601, column: 3)
!10507 = distinct !DILexicalBlock(scope: !10508, file: !1484, line: 1601, column: 3)
!10508 = distinct !DILexicalBlock(scope: !10509, file: !1484, line: 1601, column: 3)
!10509 = distinct !DILexicalBlock(scope: !10510, file: !1484, line: 1601, column: 3)
!10510 = distinct !DILexicalBlock(scope: !10503, file: !1484, line: 1600, column: 16)
!10511 = !DILocation(line: 1602, column: 3, scope: !10510)
!10512 = !DILocation(line: 1616, column: 36, scope: !10476)
!10513 = !DILocation(line: 1616, column: 8, scope: !10476)
!10514 = !DILocation(line: 1617, column: 10, scope: !10515)
!10515 = distinct !DILexicalBlock(scope: !10476, file: !1484, line: 1617, column: 6)
!10516 = !DILocation(line: 1617, column: 6, scope: !10476)
!10517 = !DILocation(line: 1621, column: 27, scope: !10476)
!10518 = !DILocation(line: 1621, column: 2, scope: !10476)
!10519 = !DILocation(line: 1624, column: 40, scope: !10476)
!10520 = !DILocation(line: 1624, column: 2, scope: !10476)
!10521 = !DILocation(line: 1630, column: 14, scope: !10522)
!10522 = distinct !DILexicalBlock(scope: !10476, file: !1484, line: 1630, column: 6)
!10523 = !DILocation(line: 1630, column: 6, scope: !10476)
!10524 = !DILocation(line: 1640, column: 4, scope: !10525)
!10525 = distinct !DILexicalBlock(scope: !10526, file: !1484, line: 1640, column: 4)
!10526 = distinct !DILexicalBlock(scope: !10527, file: !1484, line: 1640, column: 4)
!10527 = distinct !DILexicalBlock(scope: !10528, file: !1484, line: 1640, column: 4)
!10528 = distinct !DILexicalBlock(scope: !10529, file: !1484, line: 1640, column: 4)
!10529 = distinct !DILexicalBlock(scope: !10530, file: !1484, line: 1639, column: 28)
!10530 = distinct !DILexicalBlock(scope: !10531, file: !1484, line: 1639, column: 7)
!10531 = distinct !DILexicalBlock(scope: !10532, file: !1484, line: 1638, column: 9)
!10532 = distinct !DILexicalBlock(scope: !10522, file: !1484, line: 1634, column: 13)
!10533 = !DILocation(line: 0, scope: !10522)
!10534 = !DILocation(line: 1649, column: 35, scope: !10476)
!10535 = !DILocation(line: 1649, column: 2, scope: !10476)
!10536 = !DILocation(line: 1654, column: 14, scope: !10537)
!10537 = distinct !DILexicalBlock(scope: !10476, file: !1484, line: 1654, column: 6)
!10538 = !DILocation(line: 1654, column: 6, scope: !10476)
!10539 = !DILocation(line: 1655, column: 3, scope: !10540)
!10540 = distinct !DILexicalBlock(scope: !10537, file: !1484, line: 1654, column: 31)
!10541 = !DILocation(line: 1656, column: 2, scope: !10540)
!10542 = !DILocation(line: 1659, column: 37, scope: !10476)
!10543 = !DILocation(line: 1659, column: 2, scope: !10476)
!10544 = !DILocation(line: 1662, column: 14, scope: !10545)
!10545 = distinct !DILexicalBlock(scope: !10476, file: !1484, line: 1662, column: 6)
!10546 = !DILocation(line: 1662, column: 6, scope: !10476)
!10547 = !DILocation(line: 1663, column: 37, scope: !10548)
!10548 = distinct !DILexicalBlock(scope: !10545, file: !1484, line: 1662, column: 27)
!10549 = !DILocation(line: 1663, column: 3, scope: !10548)
!10550 = !DILocation(line: 1664, column: 2, scope: !10548)
!10551 = !DILocation(line: 1684, column: 26, scope: !10476)
!10552 = !DILocation(line: 1684, column: 2, scope: !10476)
!10553 = !DILocation(line: 1722, column: 2, scope: !10476)
!10554 = !DILocation(line: 1724, column: 1, scope: !10476)
!10555 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1484, file: !1484, line: 651, type: !10556, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !10558)
!10556 = !DISubroutineType(types: !10557)
!10557 = !{null, !1389}
!10558 = !{!10559, !10560, !10561}
!10559 = !DILocalVariable(name: "dev", arg: 1, scope: !10555, file: !1484, line: 651, type: !1389)
!10560 = !DILocalVariable(name: "data", scope: !10555, file: !1484, line: 653, type: !9937)
!10561 = !DILocalVariable(name: "clk", scope: !10555, file: !1484, line: 654, type: !10562)
!10562 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1389)
!10563 = !DILocation(line: 0, scope: !10555)
!10564 = !DILocation(line: 653, column: 38, scope: !10555)
!10565 = !DILocation(line: 656, column: 8, scope: !10555)
!10566 = !DILocation(line: 656, column: 14, scope: !10555)
!10567 = !DILocation(line: 657, column: 1, scope: !10555)
!10568 = distinct !DISubprogram(name: "device_is_ready", scope: !8933, file: !8933, line: 47, type: !10569, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !10571)
!10569 = !DISubroutineType(types: !10570)
!10570 = !{!347, !1389}
!10571 = !{!10572}
!10572 = !DILocalVariable(name: "dev", arg: 1, scope: !10568, file: !8933, line: 47, type: !1389)
!10573 = !DILocation(line: 0, scope: !10568)
!10574 = !DILocation(line: 55, column: 2, scope: !10575)
!10575 = distinct !DILexicalBlock(scope: !10568, file: !8933, line: 55, column: 2)
!10576 = !{i64 2155137313}
!10577 = !DILocation(line: 56, column: 9, scope: !10568)
!10578 = !DILocation(line: 56, column: 2, scope: !10568)
!10579 = distinct !DISubprogram(name: "clock_control_on", scope: !838, file: !838, line: 123, type: !1448, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !10580)
!10580 = !{!10581, !10582, !10583}
!10581 = !DILocalVariable(name: "dev", arg: 1, scope: !10579, file: !838, line: 123, type: !1389)
!10582 = !DILocalVariable(name: "sys", arg: 2, scope: !10579, file: !838, line: 124, type: !930)
!10583 = !DILocalVariable(name: "api", scope: !10579, file: !838, line: 126, type: !1441)
!10584 = !DILocation(line: 0, scope: !10579)
!10585 = !DILocation(line: 127, column: 49, scope: !10579)
!10586 = !DILocation(line: 129, column: 14, scope: !10579)
!10587 = !DILocation(line: 129, column: 9, scope: !10579)
!10588 = !DILocation(line: 129, column: 2, scope: !10579)
!10589 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1524, file: !1524, line: 342, type: !10590, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !10592)
!10590 = !DISubroutineType(types: !10591)
!10591 = !{!109, !1521, !178}
!10592 = !{!10593, !10594, !10595, !10596}
!10593 = !DILocalVariable(name: "config", arg: 1, scope: !10589, file: !1524, line: 342, type: !1521)
!10594 = !DILocalVariable(name: "id", arg: 2, scope: !10589, file: !1524, line: 343, type: !178)
!10595 = !DILocalVariable(name: "ret", scope: !10589, file: !1524, line: 345, type: !109)
!10596 = !DILocalVariable(name: "state", scope: !10589, file: !1524, line: 346, type: !1527)
!10597 = !DILocation(line: 0, scope: !10589)
!10598 = !DILocation(line: 346, column: 2, scope: !10589)
!10599 = !DILocation(line: 348, column: 8, scope: !10589)
!10600 = !DILocation(line: 349, column: 10, scope: !10601)
!10601 = distinct !DILexicalBlock(scope: !10589, file: !1524, line: 349, column: 6)
!10602 = !DILocation(line: 349, column: 6, scope: !10589)
!10603 = !DILocation(line: 353, column: 44, scope: !10589)
!10604 = !DILocation(line: 353, column: 9, scope: !10589)
!10605 = !DILocation(line: 353, column: 2, scope: !10589)
!10606 = !DILocation(line: 354, column: 1, scope: !10589)
!10607 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !10123, file: !10123, line: 497, type: !10301, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !10608)
!10608 = !{!10609, !10610, !10611}
!10609 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10607, file: !10123, line: 497, type: !1430)
!10610 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !10607, file: !10123, line: 497, type: !110)
!10611 = !DILocalVariable(name: "val", scope: !10612, file: !10123, line: 499, type: !110)
!10612 = distinct !DILexicalBlock(scope: !10607, file: !10123, line: 499, column: 3)
!10613 = !DILocation(line: 0, scope: !10607)
!10614 = !DILocation(line: 499, column: 3, scope: !10612)
!10615 = !DILocalVariable(name: "addr", arg: 1, scope: !10616, file: !6421, line: 476, type: !1480)
!10616 = distinct !DISubprogram(name: "__LDREXW", scope: !6421, file: !6421, line: 476, type: !10617, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !10619)
!10617 = !DISubroutineType(types: !10618)
!10618 = !{!110, !1480}
!10619 = !{!10615, !10620}
!10620 = !DILocalVariable(name: "result", scope: !10616, file: !6421, line: 478, type: !110)
!10621 = !DILocation(line: 0, scope: !10616, inlinedAt: !10622)
!10622 = distinct !DILocation(line: 499, column: 3, scope: !10623)
!10623 = distinct !DILexicalBlock(scope: !10612, file: !10123, line: 499, column: 3)
!10624 = !DILocation(line: 480, column: 4, scope: !10616, inlinedAt: !10622)
!10625 = !{i64 3577202}
!10626 = !DILocation(line: 499, column: 3, scope: !10623)
!10627 = !DILocation(line: 0, scope: !10612)
!10628 = !DILocalVariable(name: "value", arg: 1, scope: !10629, file: !6421, line: 527, type: !110)
!10629 = distinct !DISubprogram(name: "__STREXW", scope: !6421, file: !6421, line: 527, type: !10630, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !10632)
!10630 = !DISubroutineType(types: !10631)
!10631 = !{!110, !110, !1480}
!10632 = !{!10628, !10633, !10634}
!10633 = !DILocalVariable(name: "addr", arg: 2, scope: !10629, file: !6421, line: 527, type: !1480)
!10634 = !DILocalVariable(name: "result", scope: !10629, file: !6421, line: 529, type: !110)
!10635 = !DILocation(line: 0, scope: !10629, inlinedAt: !10636)
!10636 = distinct !DILocation(line: 499, column: 3, scope: !10612)
!10637 = !DILocation(line: 531, column: 4, scope: !10629, inlinedAt: !10636)
!10638 = !{i64 3578638}
!10639 = distinct !{!10639, !10614, !10614}
!10640 = !DILocation(line: 500, column: 1, scope: !10607)
!10641 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !10123, file: !10123, line: 850, type: !10310, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !10642)
!10642 = !{!10643, !10644, !10645, !10646}
!10643 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10641, file: !10123, line: 850, type: !1430)
!10644 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10641, file: !10123, line: 850, type: !110)
!10645 = !DILocalVariable(name: "Parity", arg: 3, scope: !10641, file: !10123, line: 850, type: !110)
!10646 = !DILocalVariable(name: "StopBits", arg: 4, scope: !10641, file: !10123, line: 851, type: !110)
!10647 = !DILocation(line: 0, scope: !10641)
!10648 = !DILocation(line: 853, column: 3, scope: !10641)
!10649 = !DILocation(line: 854, column: 3, scope: !10641)
!10650 = !DILocation(line: 855, column: 1, scope: !10641)
!10651 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !10123, file: !10123, line: 1337, type: !10186, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !10652)
!10652 = !{!10653}
!10653 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10651, file: !10123, line: 1337, type: !1430)
!10654 = !DILocation(line: 0, scope: !10651)
!10655 = !DILocation(line: 1339, column: 3, scope: !10651)
!10656 = !DILocation(line: 1340, column: 1, scope: !10651)
!10657 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1524, file: !1524, line: 316, type: !10658, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !10660)
!10658 = !DISubroutineType(types: !10659)
!10659 = !{!109, !1521, !1527}
!10660 = !{!10661, !10662, !10663}
!10661 = !DILocalVariable(name: "config", arg: 1, scope: !10657, file: !1524, line: 317, type: !1521)
!10662 = !DILocalVariable(name: "state", arg: 2, scope: !10657, file: !1524, line: 318, type: !1527)
!10663 = !DILocalVariable(name: "reg", scope: !10657, file: !1524, line: 320, type: !22)
!10664 = !DILocation(line: 0, scope: !10657)
!10665 = !DILocation(line: 329, column: 39, scope: !10657)
!10666 = !DILocation(line: 329, column: 52, scope: !10657)
!10667 = !DILocation(line: 329, column: 9, scope: !10657)
!10668 = !DILocation(line: 329, column: 2, scope: !10657)
!10669 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !336, file: !336, line: 730, type: !10569, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1345, retainedNodes: !10670)
!10670 = !{!10671}
!10671 = !DILocalVariable(name: "dev", arg: 1, scope: !10669, file: !336, line: 730, type: !1389)
!10672 = !DILocation(line: 0, scope: !10669)
!10673 = !DILocation(line: 732, column: 9, scope: !10669)
!10674 = !DILocation(line: 732, column: 2, scope: !10669)
!10675 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1647, file: !1647, line: 270, type: !1653, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1569, retainedNodes: !10676)
!10676 = !{!10677}
!10677 = !DILocalVariable(name: "dev", arg: 1, scope: !10675, file: !1647, line: 270, type: !1655)
!10678 = !DILocation(line: 0, scope: !10675)
!10679 = !DILocation(line: 274, column: 2, scope: !10675)
!10680 = !DILocation(line: 275, column: 12, scope: !10675)
!10681 = !DILocation(line: 276, column: 15, scope: !10675)
!10682 = !DILocation(line: 277, column: 16, scope: !10675)
!10683 = !DILocation(line: 278, column: 15, scope: !10675)
!10684 = !DILocation(line: 279, column: 16, scope: !10675)
!10685 = !DILocation(line: 282, column: 2, scope: !10675)
!10686 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !535, file: !535, line: 1814, type: !6461, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1569, retainedNodes: !10687)
!10687 = !{!10688, !10689}
!10688 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10686, file: !535, line: 1814, type: !792)
!10689 = !DILocalVariable(name: "priority", arg: 2, scope: !10686, file: !535, line: 1814, type: !110)
!10690 = !DILocation(line: 0, scope: !10686)
!10691 = !DILocation(line: 1822, column: 46, scope: !10692)
!10692 = distinct !DILexicalBlock(scope: !10693, file: !535, line: 1821, column: 3)
!10693 = distinct !DILexicalBlock(scope: !10686, file: !535, line: 1816, column: 7)
!10694 = !DILocation(line: 1824, column: 1, scope: !10686)
!10695 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1647, file: !1647, line: 118, type: !6358, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1569, retainedNodes: !10696)
!10696 = !{!10697, !10698}
!10697 = !DILocalVariable(name: "arg", arg: 1, scope: !10695, file: !1647, line: 118, type: !107)
!10698 = !DILocalVariable(name: "dticks", scope: !10695, file: !1647, line: 121, type: !110)
!10699 = !DILocation(line: 0, scope: !10695)
!10700 = !DILocation(line: 124, column: 2, scope: !10695)
!10701 = !DILocation(line: 129, column: 17, scope: !10695)
!10702 = !DILocation(line: 129, column: 14, scope: !10695)
!10703 = !DILocation(line: 130, column: 15, scope: !10695)
!10704 = !DILocation(line: 145, column: 27, scope: !10705)
!10705 = distinct !DILexicalBlock(scope: !10706, file: !1647, line: 132, column: 16)
!10706 = distinct !DILexicalBlock(scope: !10695, file: !1647, line: 132, column: 6)
!10707 = !DILocation(line: 145, column: 25, scope: !10705)
!10708 = !DILocation(line: 145, column: 45, scope: !10705)
!10709 = !DILocation(line: 146, column: 30, scope: !10705)
!10710 = !DILocation(line: 146, column: 20, scope: !10705)
!10711 = !DILocation(line: 147, column: 3, scope: !10705)
!10712 = !DILocation(line: 151, column: 2, scope: !10695)
!10713 = !DILocation(line: 152, column: 1, scope: !10695)
!10714 = distinct !DISubprogram(name: "elapsed", scope: !1647, file: !1647, line: 85, type: !6508, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1569, retainedNodes: !10715)
!10715 = !{!10716, !10717, !10718}
!10716 = !DILocalVariable(name: "val1", scope: !10714, file: !1647, line: 87, type: !110)
!10717 = !DILocalVariable(name: "ctrl", scope: !10714, file: !1647, line: 88, type: !110)
!10718 = !DILocalVariable(name: "val2", scope: !10714, file: !1647, line: 89, type: !110)
!10719 = !DILocation(line: 87, column: 27, scope: !10714)
!10720 = !DILocation(line: 0, scope: !10714)
!10721 = !DILocation(line: 88, column: 27, scope: !10714)
!10722 = !DILocation(line: 89, column: 27, scope: !10714)
!10723 = !DILocation(line: 105, column: 12, scope: !10724)
!10724 = distinct !DILexicalBlock(scope: !10714, file: !1647, line: 105, column: 6)
!10725 = !DILocation(line: 106, column: 6, scope: !10724)
!10726 = !DILocation(line: 107, column: 16, scope: !10727)
!10727 = distinct !DILexicalBlock(scope: !10724, file: !1647, line: 106, column: 24)
!10728 = !DILocation(line: 111, column: 18, scope: !10727)
!10729 = !DILocation(line: 112, column: 2, scope: !10727)
!10730 = !DILocation(line: 114, column: 20, scope: !10714)
!10731 = !DILocation(line: 114, column: 30, scope: !10714)
!10732 = !DILocation(line: 114, column: 28, scope: !10714)
!10733 = !DILocation(line: 114, column: 2, scope: !10714)
!10734 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1647, file: !1647, line: 154, type: !10735, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1569, retainedNodes: !10737)
!10735 = !DISubroutineType(types: !10736)
!10736 = !{null, !766, !347}
!10737 = !{!10738, !10739, !10740, !10741, !10742, !10743, !10744, !10749, !10750}
!10738 = !DILocalVariable(name: "ticks", arg: 1, scope: !10734, file: !1647, line: 154, type: !766)
!10739 = !DILocalVariable(name: "idle", arg: 2, scope: !10734, file: !1647, line: 154, type: !347)
!10740 = !DILocalVariable(name: "delay", scope: !10734, file: !1647, line: 169, type: !110)
!10741 = !DILocalVariable(name: "val1", scope: !10734, file: !1647, line: 170, type: !110)
!10742 = !DILocalVariable(name: "val2", scope: !10734, file: !1647, line: 170, type: !110)
!10743 = !DILocalVariable(name: "last_load_", scope: !10734, file: !1647, line: 171, type: !110)
!10744 = !DILocalVariable(name: "key", scope: !10734, file: !1647, line: 176, type: !10745)
!10745 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !251, line: 106, baseType: !10746)
!10746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !251, line: 32, size: 32, elements: !10747)
!10747 = !{!10748}
!10748 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10746, file: !251, line: 33, baseType: !109, size: 32)
!10749 = !DILocalVariable(name: "pending", scope: !10734, file: !1647, line: 178, type: !110)
!10750 = !DILocalVariable(name: "unannounced", scope: !10734, file: !1647, line: 185, type: !110)
!10751 = !DILocation(line: 0, scope: !10734)
!10752 = !DILocation(line: 162, column: 49, scope: !10753)
!10753 = distinct !DILexicalBlock(scope: !10734, file: !1647, line: 162, column: 6)
!10754 = !DILocation(line: 163, column: 17, scope: !10755)
!10755 = distinct !DILexicalBlock(scope: !10753, file: !1647, line: 162, column: 78)
!10756 = !DILocation(line: 164, column: 13, scope: !10755)
!10757 = !DILocation(line: 165, column: 3, scope: !10755)
!10758 = !DILocation(line: 171, column: 24, scope: !10734)
!10759 = !DILocation(line: 173, column: 10, scope: !10734)
!10760 = !DILocation(line: 174, column: 10, scope: !10734)
!10761 = !DILocalVariable(name: "l", arg: 1, scope: !10762, file: !251, line: 136, type: !10765)
!10762 = distinct !DISubprogram(name: "k_spin_lock", scope: !251, file: !251, line: 136, type: !10763, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1569, retainedNodes: !10766)
!10763 = !DISubroutineType(types: !10764)
!10764 = !{!10745, !10765}
!10765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1673, size: 32)
!10766 = !{!10761, !10767}
!10767 = !DILocalVariable(name: "k", scope: !10762, file: !251, line: 139, type: !10745)
!10768 = !DILocation(line: 0, scope: !10762, inlinedAt: !10769)
!10769 = distinct !DILocation(line: 176, column: 25, scope: !10734)
!10770 = !DILocation(line: 55, column: 2, scope: !10771, inlinedAt: !10775)
!10771 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6100, file: !6100, line: 42, type: !6101, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1569, retainedNodes: !10772)
!10772 = !{!10773, !10774}
!10773 = !DILocalVariable(name: "key", scope: !10771, file: !6100, line: 44, type: !32)
!10774 = !DILocalVariable(name: "tmp", scope: !10771, file: !6100, line: 53, type: !32)
!10775 = distinct !DILocation(line: 145, column: 10, scope: !10762, inlinedAt: !10769)
!10776 = !{i64 2200400}
!10777 = !DILocation(line: 0, scope: !10771, inlinedAt: !10775)
!10778 = !DILocation(line: 148, column: 2, scope: !10779, inlinedAt: !10769)
!10779 = distinct !DILexicalBlock(scope: !10780, file: !251, line: 148, column: 2)
!10780 = distinct !DILexicalBlock(scope: !10762, file: !251, line: 148, column: 2)
!10781 = !DILocation(line: 148, column: 2, scope: !10780, inlinedAt: !10769)
!10782 = !DILocation(line: 148, column: 2, scope: !10783, inlinedAt: !10769)
!10783 = distinct !DILexicalBlock(scope: !10779, file: !251, line: 148, column: 2)
!10784 = !DILocation(line: 160, column: 2, scope: !10762, inlinedAt: !10769)
!10785 = !DILocation(line: 178, column: 21, scope: !10734)
!10786 = !DILocation(line: 180, column: 18, scope: !10734)
!10787 = !DILocation(line: 182, column: 14, scope: !10734)
!10788 = !DILocation(line: 183, column: 15, scope: !10734)
!10789 = !DILocation(line: 185, column: 39, scope: !10734)
!10790 = !DILocation(line: 185, column: 37, scope: !10734)
!10791 = !DILocation(line: 187, column: 27, scope: !10792)
!10792 = distinct !DILexicalBlock(scope: !10734, file: !1647, line: 187, column: 6)
!10793 = !DILocation(line: 187, column: 6, scope: !10734)
!10794 = !DILocation(line: 202, column: 27, scope: !10795)
!10795 = distinct !DILexicalBlock(scope: !10792, file: !1647, line: 195, column: 9)
!10796 = !DILocation(line: 202, column: 48, scope: !10795)
!10797 = !DILocation(line: 203, column: 9, scope: !10795)
!10798 = !DILocation(line: 204, column: 11, scope: !10795)
!10799 = !DILocation(line: 205, column: 13, scope: !10800)
!10800 = distinct !DILexicalBlock(scope: !10795, file: !1647, line: 205, column: 7)
!10801 = !DILocation(line: 205, column: 7, scope: !10795)
!10802 = !DILocation(line: 0, scope: !10792)
!10803 = !DILocation(line: 212, column: 18, scope: !10734)
!10804 = !DILocation(line: 214, column: 28, scope: !10734)
!10805 = !DILocation(line: 214, column: 16, scope: !10734)
!10806 = !DILocation(line: 215, column: 15, scope: !10734)
!10807 = !DILocation(line: 227, column: 11, scope: !10808)
!10808 = distinct !DILexicalBlock(scope: !10734, file: !1647, line: 227, column: 6)
!10809 = !DILocation(line: 227, column: 6, scope: !10734)
!10810 = !DILocation(line: 228, column: 15, scope: !10811)
!10811 = distinct !DILexicalBlock(scope: !10808, file: !1647, line: 227, column: 19)
!10812 = !DILocation(line: 228, column: 38, scope: !10811)
!10813 = !DILocation(line: 228, column: 24, scope: !10811)
!10814 = !DILocation(line: 229, column: 2, scope: !10811)
!10815 = !DILocation(line: 230, column: 24, scope: !10816)
!10816 = distinct !DILexicalBlock(scope: !10808, file: !1647, line: 229, column: 9)
!10817 = !DILocation(line: 230, column: 15, scope: !10816)
!10818 = !DILocation(line: 0, scope: !10808)
!10819 = !DILocalVariable(name: "key", arg: 2, scope: !10820, file: !251, line: 190, type: !10745)
!10820 = distinct !DISubprogram(name: "k_spin_unlock", scope: !251, file: !251, line: 189, type: !10821, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1569, retainedNodes: !10823)
!10821 = !DISubroutineType(types: !10822)
!10822 = !{null, !10765, !10745}
!10823 = !{!10824, !10819}
!10824 = !DILocalVariable(name: "l", arg: 1, scope: !10820, file: !251, line: 189, type: !10765)
!10825 = !DILocation(line: 0, scope: !10820, inlinedAt: !10826)
!10826 = distinct !DILocation(line: 232, column: 2, scope: !10734)
!10827 = !DILocation(line: 194, column: 2, scope: !10828, inlinedAt: !10826)
!10828 = distinct !DILexicalBlock(scope: !10829, file: !251, line: 194, column: 2)
!10829 = distinct !DILexicalBlock(scope: !10820, file: !251, line: 194, column: 2)
!10830 = !DILocation(line: 194, column: 2, scope: !10829, inlinedAt: !10826)
!10831 = !DILocation(line: 194, column: 2, scope: !10832, inlinedAt: !10826)
!10832 = distinct !DILexicalBlock(scope: !10828, file: !251, line: 194, column: 2)
!10833 = !DILocalVariable(name: "key", arg: 1, scope: !10834, file: !6100, line: 84, type: !32)
!10834 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6100, file: !6100, line: 84, type: !6111, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1569, retainedNodes: !10835)
!10835 = !{!10833}
!10836 = !DILocation(line: 0, scope: !10834, inlinedAt: !10837)
!10837 = distinct !DILocation(line: 215, column: 2, scope: !10820, inlinedAt: !10826)
!10838 = !DILocation(line: 95, column: 2, scope: !10834, inlinedAt: !10837)
!10839 = !{i64 2201217}
!10840 = !DILocation(line: 234, column: 1, scope: !10734)
!10841 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1647, file: !1647, line: 236, type: !6508, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1569, retainedNodes: !10842)
!10842 = !{!10843, !10844}
!10843 = !DILocalVariable(name: "key", scope: !10841, file: !1647, line: 242, type: !10745)
!10844 = !DILocalVariable(name: "cyc", scope: !10841, file: !1647, line: 243, type: !110)
!10845 = !DILocation(line: 0, scope: !10762, inlinedAt: !10846)
!10846 = distinct !DILocation(line: 242, column: 25, scope: !10841)
!10847 = !DILocation(line: 55, column: 2, scope: !10771, inlinedAt: !10848)
!10848 = distinct !DILocation(line: 145, column: 10, scope: !10762, inlinedAt: !10846)
!10849 = !DILocation(line: 0, scope: !10771, inlinedAt: !10848)
!10850 = !DILocation(line: 148, column: 2, scope: !10779, inlinedAt: !10846)
!10851 = !DILocation(line: 148, column: 2, scope: !10780, inlinedAt: !10846)
!10852 = !DILocation(line: 148, column: 2, scope: !10783, inlinedAt: !10846)
!10853 = !DILocation(line: 160, column: 2, scope: !10762, inlinedAt: !10846)
!10854 = !DILocation(line: 0, scope: !10841)
!10855 = !DILocation(line: 243, column: 17, scope: !10841)
!10856 = !DILocation(line: 243, column: 29, scope: !10841)
!10857 = !DILocation(line: 243, column: 43, scope: !10841)
!10858 = !DILocation(line: 0, scope: !10820, inlinedAt: !10859)
!10859 = distinct !DILocation(line: 245, column: 2, scope: !10841)
!10860 = !DILocation(line: 194, column: 2, scope: !10828, inlinedAt: !10859)
!10861 = !DILocation(line: 194, column: 2, scope: !10829, inlinedAt: !10859)
!10862 = !DILocation(line: 194, column: 2, scope: !10832, inlinedAt: !10859)
!10863 = !DILocation(line: 243, column: 27, scope: !10841)
!10864 = !DILocation(line: 243, column: 41, scope: !10841)
!10865 = !DILocation(line: 0, scope: !10834, inlinedAt: !10866)
!10866 = distinct !DILocation(line: 215, column: 2, scope: !10820, inlinedAt: !10859)
!10867 = !DILocation(line: 95, column: 2, scope: !10834, inlinedAt: !10866)
!10868 = !DILocation(line: 246, column: 13, scope: !10841)
!10869 = !DILocation(line: 246, column: 2, scope: !10841)
!10870 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1647, file: !1647, line: 249, type: !6508, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1569, retainedNodes: !10871)
!10871 = !{!10872, !10873}
!10872 = !DILocalVariable(name: "key", scope: !10870, file: !1647, line: 251, type: !10745)
!10873 = !DILocalVariable(name: "ret", scope: !10870, file: !1647, line: 252, type: !110)
!10874 = !DILocation(line: 0, scope: !10762, inlinedAt: !10875)
!10875 = distinct !DILocation(line: 251, column: 25, scope: !10870)
!10876 = !DILocation(line: 55, column: 2, scope: !10771, inlinedAt: !10877)
!10877 = distinct !DILocation(line: 145, column: 10, scope: !10762, inlinedAt: !10875)
!10878 = !DILocation(line: 0, scope: !10771, inlinedAt: !10877)
!10879 = !DILocation(line: 148, column: 2, scope: !10779, inlinedAt: !10875)
!10880 = !DILocation(line: 148, column: 2, scope: !10780, inlinedAt: !10875)
!10881 = !DILocation(line: 148, column: 2, scope: !10783, inlinedAt: !10875)
!10882 = !DILocation(line: 160, column: 2, scope: !10762, inlinedAt: !10875)
!10883 = !DILocation(line: 0, scope: !10870)
!10884 = !DILocation(line: 252, column: 17, scope: !10870)
!10885 = !DILocation(line: 252, column: 29, scope: !10870)
!10886 = !DILocation(line: 0, scope: !10820, inlinedAt: !10887)
!10887 = distinct !DILocation(line: 254, column: 2, scope: !10870)
!10888 = !DILocation(line: 194, column: 2, scope: !10828, inlinedAt: !10887)
!10889 = !DILocation(line: 194, column: 2, scope: !10829, inlinedAt: !10887)
!10890 = !DILocation(line: 194, column: 2, scope: !10832, inlinedAt: !10887)
!10891 = !DILocation(line: 252, column: 27, scope: !10870)
!10892 = !DILocation(line: 0, scope: !10834, inlinedAt: !10893)
!10893 = distinct !DILocation(line: 215, column: 2, scope: !10820, inlinedAt: !10887)
!10894 = !DILocation(line: 95, column: 2, scope: !10834, inlinedAt: !10893)
!10895 = !DILocation(line: 255, column: 2, scope: !10870)
!10896 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1647, file: !1647, line: 258, type: !3096, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1569, retainedNodes: !2036)
!10897 = !DILocation(line: 260, column: 6, scope: !10898)
!10898 = distinct !DILexicalBlock(scope: !10896, file: !1647, line: 260, column: 6)
!10899 = !DILocation(line: 260, column: 16, scope: !10898)
!10900 = !DILocation(line: 260, column: 6, scope: !10896)
!10901 = !DILocation(line: 261, column: 17, scope: !10902)
!10902 = distinct !DILexicalBlock(scope: !10898, file: !1647, line: 260, column: 34)
!10903 = !DILocation(line: 262, column: 2, scope: !10902)
!10904 = !DILocation(line: 263, column: 1, scope: !10896)
!10905 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1647, file: !1647, line: 265, type: !3096, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1569, retainedNodes: !2036)
!10906 = !DILocation(line: 267, column: 16, scope: !10905)
!10907 = !DILocation(line: 268, column: 1, scope: !10905)
!10908 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !10909, file: !10909, line: 9, type: !10910, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2907, retainedNodes: !10933)
!10909 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10910 = !DISubroutineType(types: !10911)
!10911 = !{!109, !10912, !178, !10932}
!10912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10913, size: 32)
!10913 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10914)
!10914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1524, line: 60, size: 64, elements: !10915)
!10915 = !{!10916, !10931}
!10916 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !10914, file: !1524, line: 69, baseType: !10917, size: 32)
!10917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10918, size: 32)
!10918 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10919)
!10919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1524, line: 50, size: 64, elements: !10920)
!10920 = !{!10921, !10929, !10930}
!10921 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !10919, file: !1524, line: 52, baseType: !10922, size: 32)
!10922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10923, size: 32)
!10923 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10924)
!10924 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1535, line: 37, baseType: !10925)
!10925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1535, line: 32, size: 64, elements: !10926)
!10926 = !{!10927, !10928}
!10927 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10925, file: !1535, line: 34, baseType: !110, size: 32)
!10928 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10925, file: !1535, line: 36, baseType: !110, size: 32, offset: 32)
!10929 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !10919, file: !1524, line: 54, baseType: !178, size: 8, offset: 32)
!10930 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10919, file: !1524, line: 56, baseType: !178, size: 8, offset: 40)
!10931 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !10914, file: !1524, line: 71, baseType: !178, size: 8, offset: 32)
!10932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10917, size: 32)
!10933 = !{!10934, !10935, !10936}
!10934 = !DILocalVariable(name: "config", arg: 1, scope: !10908, file: !10909, line: 9, type: !10912)
!10935 = !DILocalVariable(name: "id", arg: 2, scope: !10908, file: !10909, line: 9, type: !178)
!10936 = !DILocalVariable(name: "state", arg: 3, scope: !10908, file: !10909, line: 10, type: !10932)
!10937 = !DILocation(line: 0, scope: !10908)
!10938 = !DILocation(line: 12, column: 20, scope: !10908)
!10939 = !DILocation(line: 13, column: 27, scope: !10908)
!10940 = !DILocation(line: 13, column: 42, scope: !10908)
!10941 = !DILocation(line: 13, column: 19, scope: !10908)
!10942 = !DILocation(line: 13, column: 16, scope: !10908)
!10943 = !DILocation(line: 13, column: 2, scope: !10908)
!10944 = distinct !{!10944, !10943, !10945}
!10945 = !DILocation(line: 19, column: 2, scope: !10908)
!10946 = !DILocation(line: 14, column: 23, scope: !10947)
!10947 = distinct !DILexicalBlock(scope: !10948, file: !10909, line: 14, column: 7)
!10948 = distinct !DILexicalBlock(scope: !10908, file: !10909, line: 13, column: 54)
!10949 = !DILocation(line: 14, column: 10, scope: !10947)
!10950 = !DILocation(line: 18, column: 11, scope: !10948)
!10951 = !DILocation(line: 14, column: 7, scope: !10948)
!10952 = !DILocation(line: 22, column: 1, scope: !10908)
!10953 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1766, file: !1766, line: 193, type: !10954, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1684, retainedNodes: !10963)
!10954 = !DISubroutineType(types: !10955)
!10955 = !{!109, !10956, !178, !22}
!10956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10957, size: 32)
!10957 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10958)
!10958 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1535, line: 37, baseType: !10959)
!10959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1535, line: 32, size: 64, elements: !10960)
!10960 = !{!10961, !10962}
!10961 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10959, file: !1535, line: 34, baseType: !110, size: 32)
!10962 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10959, file: !1535, line: 36, baseType: !110, size: 32, offset: 32)
!10963 = !{!10964, !10965, !10966, !10967, !10968, !10969, !10970, !10971, !10973}
!10964 = !DILocalVariable(name: "pins", arg: 1, scope: !10953, file: !1766, line: 193, type: !10956)
!10965 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !10953, file: !1766, line: 193, type: !178)
!10966 = !DILocalVariable(name: "reg", arg: 3, scope: !10953, file: !1766, line: 194, type: !22)
!10967 = !DILocalVariable(name: "pin", scope: !10953, file: !1766, line: 196, type: !110)
!10968 = !DILocalVariable(name: "mux", scope: !10953, file: !1766, line: 196, type: !110)
!10969 = !DILocalVariable(name: "pin_cgf", scope: !10953, file: !1766, line: 197, type: !110)
!10970 = !DILocalVariable(name: "ret", scope: !10953, file: !1766, line: 198, type: !109)
!10971 = !DILocalVariable(name: "i", scope: !10972, file: !1766, line: 209, type: !178)
!10972 = distinct !DILexicalBlock(scope: !10953, file: !1766, line: 209, column: 2)
!10973 = !DILocalVariable(name: "gpio_out", scope: !10974, file: !1766, line: 239, type: !110)
!10974 = distinct !DILexicalBlock(scope: !10975, file: !1766, line: 238, column: 55)
!10975 = distinct !DILexicalBlock(scope: !10976, file: !1766, line: 238, column: 14)
!10976 = distinct !DILexicalBlock(scope: !10977, file: !1766, line: 236, column: 14)
!10977 = distinct !DILexicalBlock(scope: !10978, file: !1766, line: 234, column: 7)
!10978 = distinct !DILexicalBlock(scope: !10979, file: !1766, line: 209, column: 41)
!10979 = distinct !DILexicalBlock(scope: !10972, file: !1766, line: 209, column: 2)
!10980 = !DILocation(line: 0, scope: !10953)
!10981 = !DILocation(line: 0, scope: !10972)
!10982 = !DILocation(line: 209, column: 25, scope: !10979)
!10983 = !DILocation(line: 209, column: 2, scope: !10972)
!10984 = distinct !{!10984, !10983, !10985}
!10985 = !DILocation(line: 259, column: 2, scope: !10972)
!10986 = !DILocation(line: 210, column: 17, scope: !10978)
!10987 = !DILocation(line: 234, column: 7, scope: !10977)
!10988 = !DILocation(line: 234, column: 33, scope: !10977)
!10989 = !DILocation(line: 234, column: 7, scope: !10978)
!10990 = !DILocation(line: 235, column: 22, scope: !10991)
!10991 = distinct !DILexicalBlock(scope: !10977, file: !1766, line: 234, column: 49)
!10992 = !DILocation(line: 235, column: 29, scope: !10991)
!10993 = !DILocation(line: 236, column: 3, scope: !10991)
!10994 = !DILocation(line: 236, column: 14, scope: !10977)
!10995 = !DILocation(line: 239, column: 32, scope: !10974)
!10996 = !DILocation(line: 0, scope: !10974)
!10997 = !DILocation(line: 241, column: 8, scope: !10974)
!10998 = !DILocation(line: 246, column: 3, scope: !10974)
!10999 = !DILocation(line: 252, column: 9, scope: !10978)
!11000 = !DILocation(line: 255, column: 9, scope: !10978)
!11001 = !DILocation(line: 256, column: 11, scope: !11002)
!11002 = distinct !DILexicalBlock(scope: !10978, file: !1766, line: 256, column: 7)
!11003 = !DILocation(line: 209, column: 37, scope: !10979)
!11004 = !DILocation(line: 256, column: 7, scope: !10978)
!11005 = !DILocation(line: 262, column: 1, scope: !10953)
!11006 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1766, file: !1766, line: 176, type: !11007, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1684, retainedNodes: !11009)
!11007 = !DISubroutineType(types: !11008)
!11008 = !{!109, !110, !110, !110}
!11009 = !{!11010, !11011, !11012, !11013}
!11010 = !DILocalVariable(name: "pin", arg: 1, scope: !11006, file: !1766, line: 176, type: !110)
!11011 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !11006, file: !1766, line: 176, type: !110)
!11012 = !DILocalVariable(name: "pin_func", arg: 3, scope: !11006, file: !1766, line: 176, type: !110)
!11013 = !DILocalVariable(name: "port_device", scope: !11006, file: !1766, line: 178, type: !1696)
!11014 = !DILocation(line: 0, scope: !11006)
!11015 = !DILocation(line: 180, column: 22, scope: !11016)
!11016 = distinct !DILexicalBlock(scope: !11006, file: !1766, line: 180, column: 6)
!11017 = !DILocation(line: 180, column: 6, scope: !11006)
!11018 = !DILocation(line: 180, column: 6, scope: !11016)
!11019 = !DILocation(line: 184, column: 16, scope: !11006)
!11020 = !DILocation(line: 186, column: 19, scope: !11021)
!11021 = distinct !DILexicalBlock(scope: !11006, file: !1766, line: 186, column: 6)
!11022 = !DILocation(line: 186, column: 28, scope: !11021)
!11023 = !DILocation(line: 186, column: 33, scope: !11021)
!11024 = !DILocation(line: 186, column: 6, scope: !11006)
!11025 = !DILocation(line: 190, column: 43, scope: !11006)
!11026 = !DILocation(line: 190, column: 9, scope: !11006)
!11027 = !DILocation(line: 190, column: 2, scope: !11006)
!11028 = !DILocation(line: 191, column: 1, scope: !11006)
!11029 = distinct !DISubprogram(name: "device_is_ready", scope: !8933, file: !8933, line: 47, type: !11030, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1684, retainedNodes: !11032)
!11030 = !DISubroutineType(types: !11031)
!11031 = !{!347, !1696}
!11032 = !{!11033}
!11033 = !DILocalVariable(name: "dev", arg: 1, scope: !11029, file: !8933, line: 47, type: !1696)
!11034 = !DILocation(line: 0, scope: !11029)
!11035 = !DILocation(line: 55, column: 2, scope: !11036)
!11036 = distinct !DILexicalBlock(scope: !11029, file: !8933, line: 55, column: 2)
!11037 = !{i64 2149438467}
!11038 = !DILocation(line: 56, column: 9, scope: !11029)
!11039 = !DILocation(line: 56, column: 2, scope: !11029)
!11040 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !336, file: !336, line: 730, type: !11030, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1684, retainedNodes: !11041)
!11041 = !{!11042}
!11042 = !DILocalVariable(name: "dev", arg: 1, scope: !11040, file: !336, line: 730, type: !1696)
!11043 = !DILocation(line: 0, scope: !11040)
!11044 = !DILocation(line: 732, column: 9, scope: !11040)
!11045 = !DILocation(line: 732, column: 2, scope: !11040)
!11046 = distinct !DISubprogram(name: "SystemInit", scope: !1814, file: !1814, line: 167, type: !3096, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1774, retainedNodes: !2036)
!11047 = !DILocation(line: 182, column: 1, scope: !11046)
!11048 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1814, file: !1814, line: 220, type: !3096, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1774, retainedNodes: !11049)
!11049 = !{!11050, !11051, !11052, !11053, !11054}
!11050 = !DILocalVariable(name: "tmp", scope: !11048, file: !1814, line: 222, type: !110)
!11051 = !DILocalVariable(name: "pllvco", scope: !11048, file: !1814, line: 222, type: !110)
!11052 = !DILocalVariable(name: "pllp", scope: !11048, file: !1814, line: 222, type: !110)
!11053 = !DILocalVariable(name: "pllsource", scope: !11048, file: !1814, line: 222, type: !110)
!11054 = !DILocalVariable(name: "pllm", scope: !11048, file: !1814, line: 222, type: !110)
!11055 = !DILocation(line: 0, scope: !11048)
!11056 = !DILocation(line: 225, column: 14, scope: !11048)
!11057 = !DILocation(line: 225, column: 19, scope: !11048)
!11058 = !DILocation(line: 227, column: 3, scope: !11048)
!11059 = !DILocation(line: 234, column: 7, scope: !11060)
!11060 = distinct !DILexicalBlock(scope: !11048, file: !1814, line: 228, column: 3)
!11061 = !DILocation(line: 240, column: 25, scope: !11060)
!11062 = !DILocation(line: 241, column: 19, scope: !11060)
!11063 = !DILocation(line: 241, column: 27, scope: !11060)
!11064 = !DILocation(line: 243, column: 21, scope: !11065)
!11065 = distinct !DILexicalBlock(scope: !11060, file: !1814, line: 243, column: 11)
!11066 = !DILocation(line: 0, scope: !11065)
!11067 = !DILocation(line: 254, column: 22, scope: !11060)
!11068 = !DILocation(line: 254, column: 62, scope: !11060)
!11069 = !DILocation(line: 255, column: 31, scope: !11060)
!11070 = !DILocation(line: 256, column: 7, scope: !11060)
!11071 = !DILocation(line: 0, scope: !11060)
!11072 = !DILocation(line: 263, column: 30, scope: !11048)
!11073 = !DILocation(line: 263, column: 52, scope: !11048)
!11074 = !DILocation(line: 263, column: 9, scope: !11048)
!11075 = !DILocation(line: 265, column: 19, scope: !11048)
!11076 = !DILocation(line: 266, column: 1, scope: !11048)
!11077 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !11078, file: !11078, line: 200, type: !11079, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2909, retainedNodes: !2036)
!11078 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11079 = !DISubroutineType(types: !11080)
!11080 = !{!11081}
!11081 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2913, line: 44, baseType: !2912)
!11082 = !DILocation(line: 202, column: 3, scope: !11077)
!11083 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !11078, file: !11078, line: 219, type: !11084, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2909, retainedNodes: !11108)
!11084 = !DISubroutineType(types: !11085)
!11085 = !{!11081, !11086}
!11086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11087, size: 32)
!11087 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !11088, line: 70, baseType: !11089)
!11088 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11089 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11088, line: 49, size: 384, elements: !11090)
!11090 = !{!11091, !11092, !11093, !11094, !11095, !11096, !11097}
!11091 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !11089, file: !11088, line: 51, baseType: !110, size: 32)
!11092 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !11089, file: !11088, line: 54, baseType: !110, size: 32, offset: 32)
!11093 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !11089, file: !11088, line: 57, baseType: !110, size: 32, offset: 64)
!11094 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !11089, file: !11088, line: 60, baseType: !110, size: 32, offset: 96)
!11095 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !11089, file: !11088, line: 63, baseType: !110, size: 32, offset: 128)
!11096 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !11089, file: !11088, line: 66, baseType: !110, size: 32, offset: 160)
!11097 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !11089, file: !11088, line: 69, baseType: !11098, size: 192, offset: 192)
!11098 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !11099, line: 73, baseType: !11100)
!11099 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11100 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11099, line: 45, size: 192, elements: !11101)
!11101 = !{!11102, !11103, !11104, !11105, !11106, !11107}
!11102 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !11100, file: !11099, line: 47, baseType: !110, size: 32)
!11103 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !11100, file: !11099, line: 50, baseType: !110, size: 32, offset: 32)
!11104 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !11100, file: !11099, line: 53, baseType: !110, size: 32, offset: 64)
!11105 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !11100, file: !11099, line: 56, baseType: !110, size: 32, offset: 96)
!11106 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !11100, file: !11099, line: 60, baseType: !110, size: 32, offset: 128)
!11107 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !11100, file: !11099, line: 63, baseType: !110, size: 32, offset: 160)
!11108 = !{!11109, !11110, !11111, !11112, !11116}
!11109 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11083, file: !11078, line: 219, type: !11086)
!11110 = !DILocalVariable(name: "tickstart", scope: !11083, file: !11078, line: 221, type: !110)
!11111 = !DILocalVariable(name: "pll_config", scope: !11083, file: !11078, line: 221, type: !110)
!11112 = !DILocalVariable(name: "pwrclkchanged", scope: !11113, file: !11078, line: 391, type: !11115)
!11113 = distinct !DILexicalBlock(scope: !11114, file: !11078, line: 390, column: 3)
!11114 = distinct !DILexicalBlock(scope: !11083, file: !11078, line: 389, column: 6)
!11115 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !833, line: 188, baseType: !2919)
!11116 = !DILocalVariable(name: "tmpreg", scope: !11117, file: !11078, line: 400, type: !316)
!11117 = distinct !DILexicalBlock(scope: !11118, file: !11078, line: 400, column: 7)
!11118 = distinct !DILexicalBlock(scope: !11119, file: !11078, line: 399, column: 5)
!11119 = distinct !DILexicalBlock(scope: !11113, file: !11078, line: 398, column: 8)
!11120 = !DILocation(line: 0, scope: !11083)
!11121 = !DILocation(line: 224, column: 24, scope: !11122)
!11122 = distinct !DILexicalBlock(scope: !11083, file: !11078, line: 224, column: 6)
!11123 = !DILocation(line: 224, column: 6, scope: !11083)
!11124 = !DILocation(line: 232, column: 27, scope: !11125)
!11125 = distinct !DILexicalBlock(scope: !11083, file: !11078, line: 232, column: 6)
!11126 = !DILocation(line: 232, column: 43, scope: !11125)
!11127 = !DILocation(line: 232, column: 69, scope: !11125)
!11128 = !DILocation(line: 232, column: 6, scope: !11083)
!11129 = !DILocation(line: 237, column: 9, scope: !11130)
!11130 = distinct !DILexicalBlock(scope: !11131, file: !11078, line: 237, column: 8)
!11131 = distinct !DILexicalBlock(scope: !11125, file: !11078, line: 233, column: 3)
!11132 = !DILocation(line: 237, column: 39, scope: !11130)
!11133 = !DILocation(line: 237, column: 60, scope: !11130)
!11134 = !DILocation(line: 238, column: 9, scope: !11130)
!11135 = !DILocation(line: 238, column: 39, scope: !11130)
!11136 = !DILocation(line: 238, column: 60, scope: !11130)
!11137 = !DILocation(line: 238, column: 70, scope: !11130)
!11138 = !DILocation(line: 238, column: 78, scope: !11130)
!11139 = !DILocation(line: 238, column: 100, scope: !11130)
!11140 = !DILocation(line: 237, column: 8, scope: !11131)
!11141 = !DILocation(line: 240, column: 11, scope: !11142)
!11142 = distinct !DILexicalBlock(scope: !11143, file: !11078, line: 240, column: 10)
!11143 = distinct !DILexicalBlock(scope: !11130, file: !11078, line: 239, column: 5)
!11144 = !DILocation(line: 240, column: 57, scope: !11142)
!11145 = !DILocation(line: 240, column: 80, scope: !11142)
!11146 = !DILocation(line: 240, column: 89, scope: !11142)
!11147 = !DILocation(line: 240, column: 10, scope: !11143)
!11148 = !DILocation(line: 248, column: 7, scope: !11149)
!11149 = distinct !DILexicalBlock(scope: !11150, file: !11078, line: 248, column: 7)
!11150 = distinct !DILexicalBlock(scope: !11151, file: !11078, line: 248, column: 7)
!11151 = distinct !DILexicalBlock(scope: !11130, file: !11078, line: 246, column: 5)
!11152 = !DILocation(line: 248, column: 7, scope: !11150)
!11153 = !DILocation(line: 248, column: 7, scope: !11154)
!11154 = distinct !DILexicalBlock(scope: !11149, file: !11078, line: 248, column: 7)
!11155 = !DILocation(line: 248, column: 7, scope: !11156)
!11156 = distinct !DILexicalBlock(scope: !11157, file: !11078, line: 248, column: 7)
!11157 = distinct !DILexicalBlock(scope: !11149, file: !11078, line: 248, column: 7)
!11158 = !DILocation(line: 248, column: 7, scope: !11159)
!11159 = distinct !DILexicalBlock(scope: !11157, file: !11078, line: 248, column: 7)
!11160 = !DILocation(line: 0, scope: !11149)
!11161 = !DILocation(line: 251, column: 30, scope: !11162)
!11162 = distinct !DILexicalBlock(scope: !11151, file: !11078, line: 251, column: 10)
!11163 = !DILocation(line: 251, column: 40, scope: !11162)
!11164 = !DILocation(line: 0, scope: !11162)
!11165 = !DILocation(line: 251, column: 10, scope: !11151)
!11166 = !DILocation(line: 257, column: 15, scope: !11167)
!11167 = distinct !DILexicalBlock(scope: !11162, file: !11078, line: 252, column: 7)
!11168 = !DILocation(line: 257, column: 51, scope: !11167)
!11169 = !DILocation(line: 257, column: 9, scope: !11167)
!11170 = !DILocation(line: 259, column: 15, scope: !11171)
!11171 = distinct !DILexicalBlock(scope: !11172, file: !11078, line: 259, column: 14)
!11172 = distinct !DILexicalBlock(scope: !11167, file: !11078, line: 258, column: 9)
!11173 = !DILocation(line: 259, column: 29, scope: !11171)
!11174 = !DILocation(line: 259, column: 43, scope: !11171)
!11175 = !DILocation(line: 259, column: 14, scope: !11172)
!11176 = distinct !{!11176, !11169, !11177}
!11177 = !DILocation(line: 263, column: 9, scope: !11167)
!11178 = !DILocation(line: 271, column: 15, scope: !11179)
!11179 = distinct !DILexicalBlock(scope: !11162, file: !11078, line: 266, column: 7)
!11180 = !DILocation(line: 271, column: 9, scope: !11179)
!11181 = !DILocation(line: 273, column: 15, scope: !11182)
!11182 = distinct !DILexicalBlock(scope: !11183, file: !11078, line: 273, column: 14)
!11183 = distinct !DILexicalBlock(scope: !11179, file: !11078, line: 272, column: 9)
!11184 = !DILocation(line: 273, column: 29, scope: !11182)
!11185 = !DILocation(line: 273, column: 43, scope: !11182)
!11186 = !DILocation(line: 273, column: 14, scope: !11183)
!11187 = distinct !{!11187, !11180, !11188}
!11188 = !DILocation(line: 277, column: 9, scope: !11179)
!11189 = !DILocation(line: 282, column: 27, scope: !11190)
!11190 = distinct !DILexicalBlock(scope: !11083, file: !11078, line: 282, column: 6)
!11191 = !DILocation(line: 282, column: 43, scope: !11190)
!11192 = !DILocation(line: 282, column: 69, scope: !11190)
!11193 = !DILocation(line: 282, column: 6, scope: !11083)
!11194 = !DILocation(line: 289, column: 9, scope: !11195)
!11195 = distinct !DILexicalBlock(scope: !11196, file: !11078, line: 289, column: 8)
!11196 = distinct !DILexicalBlock(scope: !11190, file: !11078, line: 283, column: 3)
!11197 = !DILocation(line: 289, column: 39, scope: !11195)
!11198 = !DILocation(line: 289, column: 60, scope: !11195)
!11199 = !DILocation(line: 290, column: 9, scope: !11195)
!11200 = !DILocation(line: 290, column: 39, scope: !11195)
!11201 = !DILocation(line: 290, column: 60, scope: !11195)
!11202 = !DILocation(line: 290, column: 70, scope: !11195)
!11203 = !DILocation(line: 290, column: 78, scope: !11195)
!11204 = !DILocation(line: 290, column: 100, scope: !11195)
!11205 = !DILocation(line: 289, column: 8, scope: !11196)
!11206 = !DILocation(line: 293, column: 11, scope: !11207)
!11207 = distinct !DILexicalBlock(scope: !11208, file: !11078, line: 293, column: 10)
!11208 = distinct !DILexicalBlock(scope: !11195, file: !11078, line: 291, column: 5)
!11209 = !DILocation(line: 293, column: 57, scope: !11207)
!11210 = !DILocation(line: 293, column: 80, scope: !11207)
!11211 = !DILocation(line: 293, column: 89, scope: !11207)
!11212 = !DILocation(line: 293, column: 10, scope: !11208)
!11213 = !DILocation(line: 307, column: 30, scope: !11214)
!11214 = distinct !DILexicalBlock(scope: !11215, file: !11078, line: 307, column: 10)
!11215 = distinct !DILexicalBlock(scope: !11195, file: !11078, line: 305, column: 5)
!11216 = !DILocation(line: 307, column: 39, scope: !11214)
!11217 = !DILocation(line: 307, column: 10, scope: !11215)
!11218 = !DILocation(line: 310, column: 9, scope: !11219)
!11219 = distinct !DILexicalBlock(scope: !11214, file: !11078, line: 308, column: 7)
!11220 = !DILocation(line: 313, column: 21, scope: !11219)
!11221 = !DILocation(line: 316, column: 9, scope: !11219)
!11222 = !DILocation(line: 316, column: 15, scope: !11219)
!11223 = !DILocation(line: 316, column: 51, scope: !11219)
!11224 = !DILocation(line: 318, column: 15, scope: !11225)
!11225 = distinct !DILexicalBlock(scope: !11226, file: !11078, line: 318, column: 14)
!11226 = distinct !DILexicalBlock(scope: !11219, file: !11078, line: 317, column: 9)
!11227 = !DILocation(line: 318, column: 29, scope: !11225)
!11228 = !DILocation(line: 318, column: 43, scope: !11225)
!11229 = !DILocation(line: 318, column: 14, scope: !11226)
!11230 = distinct !{!11230, !11221, !11231}
!11231 = !DILocation(line: 322, column: 9, scope: !11219)
!11232 = !DILocation(line: 330, column: 9, scope: !11233)
!11233 = distinct !DILexicalBlock(scope: !11214, file: !11078, line: 328, column: 7)
!11234 = !DILocation(line: 333, column: 21, scope: !11233)
!11235 = !DILocation(line: 336, column: 9, scope: !11233)
!11236 = !DILocation(line: 336, column: 15, scope: !11233)
!11237 = !DILocation(line: 338, column: 15, scope: !11238)
!11238 = distinct !DILexicalBlock(scope: !11239, file: !11078, line: 338, column: 14)
!11239 = distinct !DILexicalBlock(scope: !11233, file: !11078, line: 337, column: 9)
!11240 = !DILocation(line: 338, column: 29, scope: !11238)
!11241 = !DILocation(line: 338, column: 43, scope: !11238)
!11242 = !DILocation(line: 338, column: 14, scope: !11239)
!11243 = distinct !{!11243, !11235, !11244}
!11244 = !DILocation(line: 342, column: 9, scope: !11233)
!11245 = !DILocation(line: 0, scope: !11195)
!11246 = !DILocation(line: 347, column: 27, scope: !11247)
!11247 = distinct !DILexicalBlock(scope: !11083, file: !11078, line: 347, column: 6)
!11248 = !DILocation(line: 347, column: 43, scope: !11247)
!11249 = !DILocation(line: 347, column: 69, scope: !11247)
!11250 = !DILocation(line: 347, column: 6, scope: !11083)
!11251 = !DILocation(line: 353, column: 28, scope: !11252)
!11252 = distinct !DILexicalBlock(scope: !11253, file: !11078, line: 353, column: 8)
!11253 = distinct !DILexicalBlock(scope: !11247, file: !11078, line: 348, column: 3)
!11254 = !DILocation(line: 353, column: 37, scope: !11252)
!11255 = !DILocation(line: 353, column: 8, scope: !11253)
!11256 = !DILocation(line: 356, column: 7, scope: !11257)
!11257 = distinct !DILexicalBlock(scope: !11252, file: !11078, line: 354, column: 5)
!11258 = !DILocation(line: 359, column: 19, scope: !11257)
!11259 = !DILocation(line: 362, column: 7, scope: !11257)
!11260 = !DILocation(line: 362, column: 13, scope: !11257)
!11261 = !DILocation(line: 362, column: 49, scope: !11257)
!11262 = !DILocation(line: 364, column: 13, scope: !11263)
!11263 = distinct !DILexicalBlock(scope: !11264, file: !11078, line: 364, column: 12)
!11264 = distinct !DILexicalBlock(scope: !11257, file: !11078, line: 363, column: 7)
!11265 = !DILocation(line: 364, column: 27, scope: !11263)
!11266 = !DILocation(line: 364, column: 41, scope: !11263)
!11267 = !DILocation(line: 364, column: 12, scope: !11264)
!11268 = distinct !{!11268, !11259, !11269}
!11269 = !DILocation(line: 368, column: 7, scope: !11257)
!11270 = !DILocation(line: 373, column: 7, scope: !11271)
!11271 = distinct !DILexicalBlock(scope: !11252, file: !11078, line: 371, column: 5)
!11272 = !DILocation(line: 376, column: 19, scope: !11271)
!11273 = !DILocation(line: 379, column: 7, scope: !11271)
!11274 = !DILocation(line: 379, column: 13, scope: !11271)
!11275 = !DILocation(line: 381, column: 13, scope: !11276)
!11276 = distinct !DILexicalBlock(scope: !11277, file: !11078, line: 381, column: 12)
!11277 = distinct !DILexicalBlock(scope: !11271, file: !11078, line: 380, column: 7)
!11278 = !DILocation(line: 381, column: 27, scope: !11276)
!11279 = !DILocation(line: 381, column: 41, scope: !11276)
!11280 = !DILocation(line: 381, column: 12, scope: !11277)
!11281 = distinct !{!11281, !11273, !11282}
!11282 = !DILocation(line: 385, column: 7, scope: !11271)
!11283 = !DILocation(line: 389, column: 27, scope: !11114)
!11284 = !DILocation(line: 389, column: 43, scope: !11114)
!11285 = !DILocation(line: 389, column: 69, scope: !11114)
!11286 = !DILocation(line: 389, column: 6, scope: !11083)
!11287 = !DILocation(line: 0, scope: !11113)
!11288 = !DILocation(line: 398, column: 8, scope: !11119)
!11289 = !DILocation(line: 398, column: 8, scope: !11113)
!11290 = !DILocation(line: 400, column: 7, scope: !11117)
!11291 = !DILocation(line: 400, column: 7, scope: !11118)
!11292 = !DILocation(line: 402, column: 5, scope: !11118)
!11293 = !DILocation(line: 404, column: 8, scope: !11294)
!11294 = distinct !DILexicalBlock(scope: !11113, file: !11078, line: 404, column: 8)
!11295 = !DILocation(line: 404, column: 8, scope: !11113)
!11296 = !DILocation(line: 407, column: 7, scope: !11297)
!11297 = distinct !DILexicalBlock(scope: !11294, file: !11078, line: 405, column: 5)
!11298 = !DILocation(line: 410, column: 19, scope: !11297)
!11299 = !DILocation(line: 412, column: 7, scope: !11297)
!11300 = !DILocation(line: 412, column: 13, scope: !11297)
!11301 = !DILocation(line: 414, column: 13, scope: !11302)
!11302 = distinct !DILexicalBlock(scope: !11303, file: !11078, line: 414, column: 12)
!11303 = distinct !DILexicalBlock(scope: !11297, file: !11078, line: 413, column: 7)
!11304 = !DILocation(line: 414, column: 27, scope: !11302)
!11305 = !DILocation(line: 414, column: 40, scope: !11302)
!11306 = !DILocation(line: 414, column: 12, scope: !11303)
!11307 = distinct !{!11307, !11299, !11308}
!11308 = !DILocation(line: 418, column: 7, scope: !11297)
!11309 = !DILocation(line: 422, column: 5, scope: !11310)
!11310 = distinct !DILexicalBlock(scope: !11311, file: !11078, line: 422, column: 5)
!11311 = distinct !DILexicalBlock(scope: !11113, file: !11078, line: 422, column: 5)
!11312 = !DILocation(line: 422, column: 5, scope: !11311)
!11313 = !DILocation(line: 422, column: 5, scope: !11314)
!11314 = distinct !DILexicalBlock(scope: !11310, file: !11078, line: 422, column: 5)
!11315 = !DILocation(line: 422, column: 5, scope: !11316)
!11316 = distinct !DILexicalBlock(scope: !11317, file: !11078, line: 422, column: 5)
!11317 = distinct !DILexicalBlock(scope: !11310, file: !11078, line: 422, column: 5)
!11318 = !DILocation(line: 422, column: 5, scope: !11319)
!11319 = distinct !DILexicalBlock(scope: !11317, file: !11078, line: 422, column: 5)
!11320 = !DILocation(line: 0, scope: !11310)
!11321 = !DILocation(line: 424, column: 28, scope: !11322)
!11322 = distinct !DILexicalBlock(scope: !11113, file: !11078, line: 424, column: 8)
!11323 = !DILocation(line: 424, column: 38, scope: !11322)
!11324 = !DILocation(line: 0, scope: !11322)
!11325 = !DILocation(line: 424, column: 8, scope: !11113)
!11326 = !DILocation(line: 430, column: 13, scope: !11327)
!11327 = distinct !DILexicalBlock(scope: !11322, file: !11078, line: 425, column: 5)
!11328 = !DILocation(line: 430, column: 49, scope: !11327)
!11329 = !DILocation(line: 430, column: 7, scope: !11327)
!11330 = !DILocation(line: 432, column: 13, scope: !11331)
!11331 = distinct !DILexicalBlock(scope: !11332, file: !11078, line: 432, column: 12)
!11332 = distinct !DILexicalBlock(scope: !11327, file: !11078, line: 431, column: 7)
!11333 = !DILocation(line: 432, column: 27, scope: !11331)
!11334 = !DILocation(line: 432, column: 41, scope: !11331)
!11335 = !DILocation(line: 432, column: 12, scope: !11332)
!11336 = distinct !{!11336, !11329, !11337}
!11337 = !DILocation(line: 436, column: 7, scope: !11327)
!11338 = !DILocation(line: 444, column: 13, scope: !11339)
!11339 = distinct !DILexicalBlock(scope: !11322, file: !11078, line: 439, column: 5)
!11340 = !DILocation(line: 444, column: 7, scope: !11339)
!11341 = !DILocation(line: 446, column: 13, scope: !11342)
!11342 = distinct !DILexicalBlock(scope: !11343, file: !11078, line: 446, column: 12)
!11343 = distinct !DILexicalBlock(scope: !11339, file: !11078, line: 445, column: 7)
!11344 = !DILocation(line: 446, column: 27, scope: !11342)
!11345 = !DILocation(line: 446, column: 41, scope: !11342)
!11346 = !DILocation(line: 446, column: 12, scope: !11343)
!11347 = distinct !{!11347, !11340, !11348}
!11348 = !DILocation(line: 450, column: 7, scope: !11339)
!11349 = !DILocation(line: 454, column: 8, scope: !11113)
!11350 = !DILocation(line: 456, column: 7, scope: !11351)
!11351 = distinct !DILexicalBlock(scope: !11352, file: !11078, line: 455, column: 5)
!11352 = distinct !DILexicalBlock(scope: !11113, file: !11078, line: 454, column: 8)
!11353 = !DILocation(line: 457, column: 5, scope: !11351)
!11354 = !DILocation(line: 462, column: 31, scope: !11355)
!11355 = distinct !DILexicalBlock(scope: !11083, file: !11078, line: 462, column: 7)
!11356 = !DILocation(line: 462, column: 41, scope: !11355)
!11357 = !DILocation(line: 462, column: 7, scope: !11083)
!11358 = !DILocation(line: 465, column: 8, scope: !11359)
!11359 = distinct !DILexicalBlock(scope: !11360, file: !11078, line: 465, column: 8)
!11360 = distinct !DILexicalBlock(scope: !11355, file: !11078, line: 463, column: 3)
!11361 = !DILocation(line: 465, column: 38, scope: !11359)
!11362 = !DILocation(line: 465, column: 8, scope: !11360)
!11363 = !DILocation(line: 467, column: 44, scope: !11364)
!11364 = distinct !DILexicalBlock(scope: !11365, file: !11078, line: 467, column: 10)
!11365 = distinct !DILexicalBlock(scope: !11359, file: !11078, line: 466, column: 5)
!11366 = !DILocation(line: 0, scope: !11364)
!11367 = !DILocation(line: 467, column: 10, scope: !11365)
!11368 = !DILocation(line: 483, column: 15, scope: !11369)
!11369 = distinct !DILexicalBlock(scope: !11364, file: !11078, line: 468, column: 7)
!11370 = !DILocation(line: 483, column: 9, scope: !11369)
!11371 = !DILocation(line: 485, column: 15, scope: !11372)
!11372 = distinct !DILexicalBlock(scope: !11373, file: !11078, line: 485, column: 14)
!11373 = distinct !DILexicalBlock(scope: !11369, file: !11078, line: 484, column: 9)
!11374 = !DILocation(line: 485, column: 29, scope: !11372)
!11375 = !DILocation(line: 485, column: 43, scope: !11372)
!11376 = !DILocation(line: 485, column: 14, scope: !11373)
!11377 = distinct !{!11377, !11370, !11378}
!11378 = !DILocation(line: 489, column: 9, scope: !11369)
!11379 = !DILocation(line: 492, column: 9, scope: !11369)
!11380 = !DILocation(line: 498, column: 9, scope: !11369)
!11381 = !DILocation(line: 501, column: 21, scope: !11369)
!11382 = !DILocation(line: 504, column: 9, scope: !11369)
!11383 = !DILocation(line: 504, column: 15, scope: !11369)
!11384 = !DILocation(line: 504, column: 51, scope: !11369)
!11385 = !DILocation(line: 506, column: 15, scope: !11386)
!11386 = distinct !DILexicalBlock(scope: !11387, file: !11078, line: 506, column: 14)
!11387 = distinct !DILexicalBlock(scope: !11369, file: !11078, line: 505, column: 9)
!11388 = !DILocation(line: 506, column: 29, scope: !11386)
!11389 = !DILocation(line: 506, column: 43, scope: !11386)
!11390 = !DILocation(line: 506, column: 14, scope: !11387)
!11391 = distinct !{!11391, !11382, !11392}
!11392 = !DILocation(line: 510, column: 9, scope: !11369)
!11393 = !DILocation(line: 521, column: 15, scope: !11394)
!11394 = distinct !DILexicalBlock(scope: !11364, file: !11078, line: 513, column: 7)
!11395 = !DILocation(line: 521, column: 9, scope: !11394)
!11396 = !DILocation(line: 523, column: 15, scope: !11397)
!11397 = distinct !DILexicalBlock(scope: !11398, file: !11078, line: 523, column: 14)
!11398 = distinct !DILexicalBlock(scope: !11394, file: !11078, line: 522, column: 9)
!11399 = !DILocation(line: 523, column: 29, scope: !11397)
!11400 = !DILocation(line: 523, column: 43, scope: !11397)
!11401 = !DILocation(line: 523, column: 14, scope: !11398)
!11402 = distinct !{!11402, !11395, !11403}
!11403 = !DILocation(line: 527, column: 9, scope: !11394)
!11404 = !DILocation(line: 533, column: 44, scope: !11405)
!11405 = distinct !DILexicalBlock(scope: !11406, file: !11078, line: 533, column: 10)
!11406 = distinct !DILexicalBlock(scope: !11359, file: !11078, line: 531, column: 5)
!11407 = !DILocation(line: 533, column: 10, scope: !11406)
!11408 = !DILocation(line: 540, column: 27, scope: !11409)
!11409 = distinct !DILexicalBlock(scope: !11405, file: !11078, line: 538, column: 7)
!11410 = !DILocation(line: 551, column: 14, scope: !11411)
!11411 = distinct !DILexicalBlock(scope: !11409, file: !11078, line: 550, column: 13)
!11412 = !DILocation(line: 551, column: 81, scope: !11411)
!11413 = !DILocation(line: 551, column: 55, scope: !11411)
!11414 = !DILocation(line: 551, column: 92, scope: !11411)
!11415 = !DILocation(line: 552, column: 14, scope: !11411)
!11416 = !DILocation(line: 552, column: 80, scope: !11411)
!11417 = !DILocation(line: 552, column: 53, scope: !11411)
!11418 = !DILocation(line: 552, column: 111, scope: !11411)
!11419 = !DILocation(line: 553, column: 14, scope: !11411)
!11420 = !DILocation(line: 553, column: 80, scope: !11411)
!11421 = !DILocation(line: 553, column: 86, scope: !11411)
!11422 = !DILocation(line: 553, column: 53, scope: !11411)
!11423 = !DILocation(line: 553, column: 111, scope: !11411)
!11424 = !DILocation(line: 554, column: 14, scope: !11411)
!11425 = !DILocation(line: 554, column: 82, scope: !11411)
!11426 = !DILocation(line: 554, column: 101, scope: !11411)
!11427 = !DILocation(line: 554, column: 53, scope: !11411)
!11428 = !DILocation(line: 554, column: 126, scope: !11411)
!11429 = !DILocation(line: 555, column: 14, scope: !11411)
!11430 = !DILocation(line: 555, column: 80, scope: !11411)
!11431 = !DILocation(line: 555, column: 85, scope: !11411)
!11432 = !DILocation(line: 555, column: 53, scope: !11411)
!11433 = !DILocation(line: 550, column: 13, scope: !11409)
!11434 = !DILocation(line: 563, column: 3, scope: !11083)
!11435 = !DILocation(line: 564, column: 1, scope: !11083)
!11436 = !DISubprogram(name: "HAL_GetTick", scope: !11437, file: !11437, line: 234, type: !6508, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2036)
!11437 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11438 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !11078, file: !11078, line: 591, type: !11439, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2909, retainedNodes: !11450)
!11439 = !DISubroutineType(types: !11440)
!11440 = !{!11081, !11441, !110}
!11441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11442, size: 32)
!11442 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !11088, line: 92, baseType: !11443)
!11443 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11088, line: 75, size: 160, elements: !11444)
!11444 = !{!11445, !11446, !11447, !11448, !11449}
!11445 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !11443, file: !11088, line: 77, baseType: !110, size: 32)
!11446 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !11443, file: !11088, line: 80, baseType: !110, size: 32, offset: 32)
!11447 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !11443, file: !11088, line: 83, baseType: !110, size: 32, offset: 64)
!11448 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !11443, file: !11088, line: 86, baseType: !110, size: 32, offset: 96)
!11449 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !11443, file: !11088, line: 89, baseType: !110, size: 32, offset: 128)
!11450 = !{!11451, !11452, !11453}
!11451 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11438, file: !11078, line: 591, type: !11441)
!11452 = !DILocalVariable(name: "FLatency", arg: 2, scope: !11438, file: !11078, line: 591, type: !110)
!11453 = !DILocalVariable(name: "tickstart", scope: !11438, file: !11078, line: 593, type: !110)
!11454 = !DILocation(line: 0, scope: !11438)
!11455 = !DILocation(line: 596, column: 24, scope: !11456)
!11456 = distinct !DILexicalBlock(scope: !11438, file: !11078, line: 596, column: 6)
!11457 = !DILocation(line: 596, column: 6, scope: !11438)
!11458 = !DILocation(line: 610, column: 17, scope: !11459)
!11459 = distinct !DILexicalBlock(scope: !11438, file: !11078, line: 610, column: 6)
!11460 = !DILocation(line: 610, column: 15, scope: !11459)
!11461 = !DILocation(line: 610, column: 6, scope: !11438)
!11462 = !DILocation(line: 613, column: 5, scope: !11463)
!11463 = distinct !DILexicalBlock(scope: !11459, file: !11078, line: 611, column: 3)
!11464 = !DILocation(line: 617, column: 8, scope: !11465)
!11465 = distinct !DILexicalBlock(scope: !11463, file: !11078, line: 617, column: 8)
!11466 = !DILocation(line: 617, column: 34, scope: !11465)
!11467 = !DILocation(line: 617, column: 8, scope: !11463)
!11468 = !DILocation(line: 624, column: 27, scope: !11469)
!11469 = distinct !DILexicalBlock(scope: !11438, file: !11078, line: 624, column: 6)
!11470 = !DILocation(line: 624, column: 38, scope: !11469)
!11471 = !DILocation(line: 624, column: 60, scope: !11469)
!11472 = !DILocation(line: 624, column: 6, scope: !11438)
!11473 = !DILocation(line: 628, column: 40, scope: !11474)
!11474 = distinct !DILexicalBlock(scope: !11475, file: !11078, line: 628, column: 8)
!11475 = distinct !DILexicalBlock(scope: !11469, file: !11078, line: 625, column: 3)
!11476 = !DILocation(line: 628, column: 63, scope: !11474)
!11477 = !DILocation(line: 628, column: 8, scope: !11475)
!11478 = !DILocation(line: 630, column: 7, scope: !11479)
!11479 = distinct !DILexicalBlock(scope: !11474, file: !11078, line: 629, column: 5)
!11480 = !DILocation(line: 633, column: 29, scope: !11481)
!11481 = distinct !DILexicalBlock(scope: !11475, file: !11078, line: 633, column: 8)
!11482 = !DILocation(line: 631, column: 5, scope: !11479)
!11483 = !DILocation(line: 633, column: 40, scope: !11481)
!11484 = !DILocation(line: 633, column: 63, scope: !11481)
!11485 = !DILocation(line: 633, column: 8, scope: !11475)
!11486 = !DILocation(line: 635, column: 7, scope: !11487)
!11487 = distinct !DILexicalBlock(scope: !11481, file: !11078, line: 634, column: 5)
!11488 = !DILocation(line: 636, column: 5, scope: !11487)
!11489 = !DILocation(line: 639, column: 5, scope: !11475)
!11490 = !DILocation(line: 643, column: 27, scope: !11491)
!11491 = distinct !DILexicalBlock(scope: !11438, file: !11078, line: 643, column: 6)
!11492 = !DILocation(line: 640, column: 3, scope: !11475)
!11493 = !DILocation(line: 643, column: 38, scope: !11491)
!11494 = !DILocation(line: 643, column: 62, scope: !11491)
!11495 = !DILocation(line: 643, column: 6, scope: !11438)
!11496 = !DILocation(line: 648, column: 27, scope: !11497)
!11497 = distinct !DILexicalBlock(scope: !11498, file: !11078, line: 648, column: 8)
!11498 = distinct !DILexicalBlock(scope: !11491, file: !11078, line: 644, column: 3)
!11499 = !DILocation(line: 648, column: 8, scope: !11498)
!11500 = !DILocation(line: 651, column: 10, scope: !11501)
!11501 = distinct !DILexicalBlock(scope: !11502, file: !11078, line: 651, column: 10)
!11502 = distinct !DILexicalBlock(scope: !11497, file: !11078, line: 649, column: 5)
!11503 = !DILocation(line: 651, column: 46, scope: !11501)
!11504 = !DILocation(line: 651, column: 10, scope: !11502)
!11505 = !DILocation(line: 661, column: 10, scope: !11506)
!11506 = distinct !DILexicalBlock(scope: !11507, file: !11078, line: 661, column: 10)
!11507 = distinct !DILexicalBlock(scope: !11508, file: !11078, line: 659, column: 5)
!11508 = distinct !DILexicalBlock(scope: !11497, file: !11078, line: 657, column: 13)
!11509 = !DILocation(line: 661, column: 46, scope: !11506)
!11510 = !DILocation(line: 661, column: 10, scope: !11507)
!11511 = !DILocation(line: 670, column: 10, scope: !11512)
!11512 = distinct !DILexicalBlock(scope: !11513, file: !11078, line: 670, column: 10)
!11513 = distinct !DILexicalBlock(scope: !11508, file: !11078, line: 668, column: 5)
!11514 = !DILocation(line: 670, column: 46, scope: !11512)
!11515 = !DILocation(line: 670, column: 10, scope: !11513)
!11516 = !DILocation(line: 676, column: 5, scope: !11498)
!11517 = !DILocation(line: 679, column: 17, scope: !11498)
!11518 = !DILocation(line: 681, column: 5, scope: !11498)
!11519 = !DILocation(line: 681, column: 12, scope: !11498)
!11520 = !DILocation(line: 681, column: 65, scope: !11498)
!11521 = !DILocation(line: 681, column: 78, scope: !11498)
!11522 = !DILocation(line: 681, column: 42, scope: !11498)
!11523 = !DILocation(line: 683, column: 12, scope: !11524)
!11524 = distinct !DILexicalBlock(scope: !11525, file: !11078, line: 683, column: 11)
!11525 = distinct !DILexicalBlock(scope: !11498, file: !11078, line: 682, column: 5)
!11526 = !DILocation(line: 683, column: 26, scope: !11524)
!11527 = !DILocation(line: 683, column: 39, scope: !11524)
!11528 = !DILocation(line: 683, column: 11, scope: !11525)
!11529 = distinct !{!11529, !11518, !11530}
!11530 = !DILocation(line: 687, column: 5, scope: !11498)
!11531 = !DILocation(line: 691, column: 17, scope: !11532)
!11532 = distinct !DILexicalBlock(scope: !11438, file: !11078, line: 691, column: 6)
!11533 = !DILocation(line: 691, column: 15, scope: !11532)
!11534 = !DILocation(line: 691, column: 6, scope: !11438)
!11535 = !DILocation(line: 694, column: 5, scope: !11536)
!11536 = distinct !DILexicalBlock(scope: !11532, file: !11078, line: 692, column: 3)
!11537 = !DILocation(line: 698, column: 8, scope: !11538)
!11538 = distinct !DILexicalBlock(scope: !11536, file: !11078, line: 698, column: 8)
!11539 = !DILocation(line: 698, column: 34, scope: !11538)
!11540 = !DILocation(line: 698, column: 8, scope: !11536)
!11541 = !DILocation(line: 705, column: 27, scope: !11542)
!11542 = distinct !DILexicalBlock(scope: !11438, file: !11078, line: 705, column: 6)
!11543 = !DILocation(line: 705, column: 38, scope: !11542)
!11544 = !DILocation(line: 705, column: 61, scope: !11542)
!11545 = !DILocation(line: 705, column: 6, scope: !11438)
!11546 = !DILocation(line: 708, column: 5, scope: !11547)
!11547 = distinct !DILexicalBlock(scope: !11542, file: !11078, line: 706, column: 3)
!11548 = !DILocation(line: 712, column: 27, scope: !11549)
!11549 = distinct !DILexicalBlock(scope: !11438, file: !11078, line: 712, column: 6)
!11550 = !DILocation(line: 709, column: 3, scope: !11547)
!11551 = !DILocation(line: 712, column: 38, scope: !11549)
!11552 = !DILocation(line: 712, column: 61, scope: !11549)
!11553 = !DILocation(line: 712, column: 6, scope: !11438)
!11554 = !DILocation(line: 715, column: 5, scope: !11555)
!11555 = distinct !DILexicalBlock(scope: !11549, file: !11078, line: 713, column: 3)
!11556 = !DILocation(line: 716, column: 3, scope: !11555)
!11557 = !DILocation(line: 719, column: 21, scope: !11438)
!11558 = !DILocation(line: 719, column: 70, scope: !11438)
!11559 = !DILocation(line: 719, column: 91, scope: !11438)
!11560 = !DILocation(line: 719, column: 50, scope: !11438)
!11561 = !DILocation(line: 719, column: 47, scope: !11438)
!11562 = !DILocation(line: 719, column: 19, scope: !11438)
!11563 = !DILocation(line: 722, column: 17, scope: !11438)
!11564 = !DILocation(line: 722, column: 3, scope: !11438)
!11565 = !DILocation(line: 724, column: 3, scope: !11438)
!11566 = !DILocation(line: 725, column: 1, scope: !11438)
!11567 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !11078, file: !11078, line: 885, type: !6508, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2909, retainedNodes: !11568)
!11568 = !{!11569, !11570, !11571, !11572}
!11569 = !DILocalVariable(name: "pllm", scope: !11567, file: !11078, line: 887, type: !110)
!11570 = !DILocalVariable(name: "pllvco", scope: !11567, file: !11078, line: 887, type: !110)
!11571 = !DILocalVariable(name: "pllp", scope: !11567, file: !11078, line: 887, type: !110)
!11572 = !DILocalVariable(name: "sysclockfreq", scope: !11567, file: !11078, line: 888, type: !110)
!11573 = !DILocation(line: 0, scope: !11567)
!11574 = !DILocation(line: 891, column: 16, scope: !11567)
!11575 = !DILocation(line: 891, column: 21, scope: !11567)
!11576 = !DILocation(line: 891, column: 3, scope: !11567)
!11577 = !DILocation(line: 901, column: 7, scope: !11578)
!11578 = distinct !DILexicalBlock(scope: !11579, file: !11078, line: 899, column: 5)
!11579 = distinct !DILexicalBlock(scope: !11567, file: !11078, line: 892, column: 3)
!11580 = !DILocation(line: 907, column: 19, scope: !11581)
!11581 = distinct !DILexicalBlock(scope: !11579, file: !11078, line: 904, column: 5)
!11582 = !DILocation(line: 907, column: 27, scope: !11581)
!11583 = !DILocation(line: 908, column: 10, scope: !11584)
!11584 = distinct !DILexicalBlock(scope: !11581, file: !11078, line: 908, column: 10)
!11585 = !DILocation(line: 908, column: 40, scope: !11584)
!11586 = !DILocation(line: 0, scope: !11584)
!11587 = !DILocation(line: 918, column: 23, scope: !11581)
!11588 = !DILocation(line: 918, column: 82, scope: !11581)
!11589 = !DILocation(line: 920, column: 28, scope: !11581)
!11590 = !DILocation(line: 921, column: 7, scope: !11581)
!11591 = !DILocation(line: 0, scope: !11579)
!11592 = !DILocation(line: 929, column: 3, scope: !11567)
!11593 = !DISubprogram(name: "HAL_InitTick", scope: !11437, file: !11437, line: 223, type: !11594, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2036)
!11594 = !DISubroutineType(types: !11595)
!11595 = !{!11081, !110}
!11596 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !11078, file: !11078, line: 775, type: !11597, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2909, retainedNodes: !11599)
!11597 = !DISubroutineType(types: !11598)
!11598 = !{null, !110, !110, !110}
!11599 = !{!11600, !11601, !11602, !11603, !11613, !11617}
!11600 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !11596, file: !11078, line: 775, type: !110)
!11601 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !11596, file: !11078, line: 775, type: !110)
!11602 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !11596, file: !11078, line: 775, type: !110)
!11603 = !DILocalVariable(name: "GPIO_InitStruct", scope: !11596, file: !11078, line: 777, type: !11604)
!11604 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !11605, line: 62, baseType: !11606)
!11605 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11606 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11605, line: 46, size: 160, elements: !11607)
!11607 = !{!11608, !11609, !11610, !11611, !11612}
!11608 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !11606, file: !11605, line: 48, baseType: !110, size: 32)
!11609 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !11606, file: !11605, line: 51, baseType: !110, size: 32, offset: 32)
!11610 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !11606, file: !11605, line: 54, baseType: !110, size: 32, offset: 64)
!11611 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !11606, file: !11605, line: 57, baseType: !110, size: 32, offset: 96)
!11612 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !11606, file: !11605, line: 60, baseType: !110, size: 32, offset: 128)
!11613 = !DILocalVariable(name: "tmpreg", scope: !11614, file: !11078, line: 787, type: !316)
!11614 = distinct !DILexicalBlock(scope: !11615, file: !11078, line: 787, column: 5)
!11615 = distinct !DILexicalBlock(scope: !11616, file: !11078, line: 783, column: 3)
!11616 = distinct !DILexicalBlock(scope: !11596, file: !11078, line: 782, column: 6)
!11617 = !DILocalVariable(name: "tmpreg", scope: !11618, file: !11078, line: 811, type: !316)
!11618 = distinct !DILexicalBlock(scope: !11619, file: !11078, line: 811, column: 5)
!11619 = distinct !DILexicalBlock(scope: !11616, file: !11078, line: 807, column: 3)
!11620 = !DILocation(line: 0, scope: !11596)
!11621 = !DILocation(line: 777, column: 3, scope: !11596)
!11622 = !DILocation(line: 777, column: 20, scope: !11596)
!11623 = !DILocation(line: 782, column: 15, scope: !11616)
!11624 = !DILocation(line: 782, column: 6, scope: !11596)
!11625 = !DILocation(line: 787, column: 5, scope: !11614)
!11626 = !DILocation(line: 787, column: 5, scope: !11615)
!11627 = !DILocation(line: 790, column: 21, scope: !11615)
!11628 = !DILocation(line: 790, column: 25, scope: !11615)
!11629 = !DILocation(line: 791, column: 21, scope: !11615)
!11630 = !DILocation(line: 791, column: 26, scope: !11615)
!11631 = !DILocation(line: 792, column: 21, scope: !11615)
!11632 = !DILocation(line: 792, column: 27, scope: !11615)
!11633 = !DILocation(line: 793, column: 21, scope: !11615)
!11634 = !DILocation(line: 793, column: 26, scope: !11615)
!11635 = !DILocation(line: 794, column: 21, scope: !11615)
!11636 = !DILocation(line: 794, column: 31, scope: !11615)
!11637 = !DILocation(line: 795, column: 5, scope: !11615)
!11638 = !DILocation(line: 798, column: 5, scope: !11615)
!11639 = !DILocation(line: 804, column: 3, scope: !11615)
!11640 = !DILocation(line: 811, column: 5, scope: !11618)
!11641 = !DILocation(line: 811, column: 5, scope: !11619)
!11642 = !DILocation(line: 814, column: 21, scope: !11619)
!11643 = !DILocation(line: 814, column: 25, scope: !11619)
!11644 = !DILocation(line: 815, column: 21, scope: !11619)
!11645 = !DILocation(line: 815, column: 26, scope: !11619)
!11646 = !DILocation(line: 816, column: 21, scope: !11619)
!11647 = !DILocation(line: 816, column: 27, scope: !11619)
!11648 = !DILocation(line: 817, column: 21, scope: !11619)
!11649 = !DILocation(line: 817, column: 26, scope: !11619)
!11650 = !DILocation(line: 818, column: 21, scope: !11619)
!11651 = !DILocation(line: 818, column: 31, scope: !11619)
!11652 = !DILocation(line: 819, column: 5, scope: !11619)
!11653 = !DILocation(line: 822, column: 5, scope: !11619)
!11654 = !DILocation(line: 0, scope: !11616)
!11655 = !DILocation(line: 830, column: 1, scope: !11596)
!11656 = !DISubprogram(name: "HAL_GPIO_Init", scope: !11605, file: !11605, line: 224, type: !11657, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2036)
!11657 = !DISubroutineType(types: !11658)
!11658 = !{null, !2980, !11659}
!11659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11604, size: 32)
!11660 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !11078, file: !11078, line: 841, type: !3096, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2909, retainedNodes: !2036)
!11661 = !DILocation(line: 843, column: 38, scope: !11660)
!11662 = !DILocation(line: 844, column: 1, scope: !11660)
!11663 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !11078, file: !11078, line: 850, type: !3096, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2909, retainedNodes: !2036)
!11664 = !DILocation(line: 852, column: 38, scope: !11663)
!11665 = !DILocation(line: 853, column: 1, scope: !11663)
!11666 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !11078, file: !11078, line: 941, type: !6508, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2909, retainedNodes: !2036)
!11667 = !DILocation(line: 943, column: 10, scope: !11666)
!11668 = !DILocation(line: 943, column: 3, scope: !11666)
!11669 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !11078, file: !11078, line: 952, type: !6508, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2909, retainedNodes: !2036)
!11670 = !DILocation(line: 955, column: 11, scope: !11669)
!11671 = !DILocation(line: 955, column: 56, scope: !11669)
!11672 = !DILocation(line: 955, column: 78, scope: !11669)
!11673 = !DILocation(line: 955, column: 36, scope: !11669)
!11674 = !DILocation(line: 955, column: 33, scope: !11669)
!11675 = !DILocation(line: 955, column: 3, scope: !11669)
!11676 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !11078, file: !11078, line: 964, type: !6508, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2909, retainedNodes: !2036)
!11677 = !DILocation(line: 967, column: 11, scope: !11676)
!11678 = !DILocation(line: 967, column: 55, scope: !11676)
!11679 = !DILocation(line: 967, column: 77, scope: !11676)
!11680 = !DILocation(line: 967, column: 35, scope: !11676)
!11681 = !DILocation(line: 967, column: 32, scope: !11676)
!11682 = !DILocation(line: 967, column: 3, scope: !11676)
!11683 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !11078, file: !11078, line: 977, type: !11684, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2909, retainedNodes: !11686)
!11684 = !DISubroutineType(types: !11685)
!11685 = !{null, !11086}
!11686 = !{!11687}
!11687 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11683, file: !11078, line: 977, type: !11086)
!11688 = !DILocation(line: 0, scope: !11683)
!11689 = !DILocation(line: 980, column: 22, scope: !11683)
!11690 = !DILocation(line: 980, column: 37, scope: !11683)
!11691 = !DILocation(line: 983, column: 12, scope: !11692)
!11692 = distinct !DILexicalBlock(scope: !11683, file: !11078, line: 983, column: 6)
!11693 = !DILocation(line: 983, column: 15, scope: !11692)
!11694 = !DILocation(line: 983, column: 31, scope: !11692)
!11695 = !DILocation(line: 983, column: 6, scope: !11683)
!11696 = !DILocation(line: 985, column: 24, scope: !11697)
!11697 = distinct !DILexicalBlock(scope: !11692, file: !11078, line: 984, column: 3)
!11698 = !DILocation(line: 985, column: 33, scope: !11697)
!11699 = !DILocation(line: 986, column: 3, scope: !11697)
!11700 = !DILocation(line: 987, column: 17, scope: !11701)
!11701 = distinct !DILexicalBlock(scope: !11692, file: !11078, line: 987, column: 11)
!11702 = !DILocation(line: 987, column: 20, scope: !11701)
!11703 = !DILocation(line: 987, column: 35, scope: !11701)
!11704 = !DILocation(line: 0, scope: !11701)
!11705 = !DILocation(line: 987, column: 11, scope: !11692)
!11706 = !DILocation(line: 989, column: 33, scope: !11707)
!11707 = distinct !DILexicalBlock(scope: !11701, file: !11078, line: 988, column: 3)
!11708 = !DILocation(line: 990, column: 3, scope: !11707)
!11709 = !DILocation(line: 993, column: 33, scope: !11710)
!11710 = distinct !DILexicalBlock(scope: !11701, file: !11078, line: 992, column: 3)
!11711 = !DILocation(line: 997, column: 12, scope: !11712)
!11712 = distinct !DILexicalBlock(scope: !11683, file: !11078, line: 997, column: 6)
!11713 = !DILocation(line: 997, column: 15, scope: !11712)
!11714 = !DILocation(line: 1003, column: 24, scope: !11715)
!11715 = distinct !DILexicalBlock(scope: !11712, file: !11078, line: 1002, column: 3)
!11716 = !DILocation(line: 1003, column: 33, scope: !11715)
!11717 = !DILocation(line: 1006, column: 61, scope: !11683)
!11718 = !DILocation(line: 1006, column: 81, scope: !11683)
!11719 = !DILocation(line: 1006, column: 22, scope: !11683)
!11720 = !DILocation(line: 1006, column: 42, scope: !11683)
!11721 = !DILocation(line: 1009, column: 12, scope: !11722)
!11722 = distinct !DILexicalBlock(scope: !11683, file: !11078, line: 1009, column: 6)
!11723 = !DILocation(line: 1009, column: 17, scope: !11722)
!11724 = !DILocation(line: 1009, column: 35, scope: !11722)
!11725 = !DILocation(line: 1009, column: 6, scope: !11683)
!11726 = !DILocation(line: 1011, column: 24, scope: !11727)
!11727 = distinct !DILexicalBlock(scope: !11722, file: !11078, line: 1010, column: 3)
!11728 = !DILocation(line: 1011, column: 33, scope: !11727)
!11729 = !DILocation(line: 1012, column: 3, scope: !11727)
!11730 = !DILocation(line: 1013, column: 17, scope: !11731)
!11731 = distinct !DILexicalBlock(scope: !11722, file: !11078, line: 1013, column: 11)
!11732 = !DILocation(line: 1013, column: 22, scope: !11731)
!11733 = !DILocation(line: 1013, column: 39, scope: !11731)
!11734 = !DILocation(line: 0, scope: !11731)
!11735 = !DILocation(line: 1013, column: 11, scope: !11722)
!11736 = !DILocation(line: 1015, column: 33, scope: !11737)
!11737 = distinct !DILexicalBlock(scope: !11731, file: !11078, line: 1014, column: 3)
!11738 = !DILocation(line: 1016, column: 3, scope: !11737)
!11739 = !DILocation(line: 1019, column: 33, scope: !11740)
!11740 = distinct !DILexicalBlock(scope: !11731, file: !11078, line: 1018, column: 3)
!11741 = !DILocation(line: 1023, column: 12, scope: !11742)
!11742 = distinct !DILexicalBlock(scope: !11683, file: !11078, line: 1023, column: 6)
!11743 = !DILocation(line: 1023, column: 16, scope: !11742)
!11744 = !DILocation(line: 1029, column: 24, scope: !11745)
!11745 = distinct !DILexicalBlock(scope: !11742, file: !11078, line: 1028, column: 3)
!11746 = !DILocation(line: 1029, column: 33, scope: !11745)
!11747 = !DILocation(line: 1033, column: 12, scope: !11748)
!11748 = distinct !DILexicalBlock(scope: !11683, file: !11078, line: 1033, column: 6)
!11749 = !DILocation(line: 1033, column: 15, scope: !11748)
!11750 = !DILocation(line: 1033, column: 30, scope: !11748)
!11751 = !DILocation(line: 1033, column: 6, scope: !11683)
!11752 = !DILocation(line: 1039, column: 28, scope: !11753)
!11753 = distinct !DILexicalBlock(scope: !11748, file: !11078, line: 1038, column: 3)
!11754 = !DILocation(line: 1039, column: 37, scope: !11753)
!11755 = !DILocation(line: 1041, column: 54, scope: !11683)
!11756 = !DILocation(line: 1041, column: 62, scope: !11683)
!11757 = !DILocation(line: 1041, column: 26, scope: !11683)
!11758 = !DILocation(line: 1041, column: 36, scope: !11683)
!11759 = !DILocation(line: 1042, column: 49, scope: !11683)
!11760 = !DILocation(line: 1042, column: 57, scope: !11683)
!11761 = !DILocation(line: 1042, column: 26, scope: !11683)
!11762 = !DILocation(line: 1042, column: 31, scope: !11683)
!11763 = !DILocation(line: 1043, column: 50, scope: !11683)
!11764 = !DILocation(line: 1043, column: 78, scope: !11683)
!11765 = !DILocation(line: 1043, column: 26, scope: !11683)
!11766 = !DILocation(line: 1043, column: 31, scope: !11683)
!11767 = !DILocation(line: 1044, column: 52, scope: !11683)
!11768 = !DILocation(line: 1044, column: 102, scope: !11683)
!11769 = !DILocation(line: 1044, column: 109, scope: !11683)
!11770 = !DILocation(line: 1044, column: 26, scope: !11683)
!11771 = !DILocation(line: 1044, column: 31, scope: !11683)
!11772 = !DILocation(line: 1045, column: 50, scope: !11683)
!11773 = !DILocation(line: 1045, column: 78, scope: !11683)
!11774 = !DILocation(line: 1045, column: 26, scope: !11683)
!11775 = !DILocation(line: 1045, column: 31, scope: !11683)
!11776 = !DILocation(line: 1046, column: 1, scope: !11683)
!11777 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !11078, file: !11078, line: 1056, type: !11778, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2909, retainedNodes: !11780)
!11778 = !DISubroutineType(types: !11779)
!11779 = !{null, !11441, !886}
!11780 = !{!11781, !11782}
!11781 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11777, file: !11078, line: 1056, type: !11441)
!11782 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !11777, file: !11078, line: 1056, type: !886)
!11783 = !DILocation(line: 0, scope: !11777)
!11784 = !DILocation(line: 1059, column: 22, scope: !11777)
!11785 = !DILocation(line: 1059, column: 32, scope: !11777)
!11786 = !DILocation(line: 1062, column: 53, scope: !11777)
!11787 = !DILocation(line: 1062, column: 58, scope: !11777)
!11788 = !DILocation(line: 1062, column: 22, scope: !11777)
!11789 = !DILocation(line: 1062, column: 35, scope: !11777)
!11790 = !DILocation(line: 1065, column: 54, scope: !11777)
!11791 = !DILocation(line: 1065, column: 59, scope: !11777)
!11792 = !DILocation(line: 1065, column: 22, scope: !11777)
!11793 = !DILocation(line: 1065, column: 36, scope: !11777)
!11794 = !DILocation(line: 1068, column: 55, scope: !11777)
!11795 = !DILocation(line: 1068, column: 60, scope: !11777)
!11796 = !DILocation(line: 1068, column: 22, scope: !11777)
!11797 = !DILocation(line: 1068, column: 37, scope: !11777)
!11798 = !DILocation(line: 1071, column: 56, scope: !11777)
!11799 = !DILocation(line: 1071, column: 79, scope: !11777)
!11800 = !DILocation(line: 1071, column: 22, scope: !11777)
!11801 = !DILocation(line: 1071, column: 37, scope: !11777)
!11802 = !DILocation(line: 1074, column: 34, scope: !11777)
!11803 = !DILocation(line: 1074, column: 38, scope: !11777)
!11804 = !DILocation(line: 1074, column: 14, scope: !11777)
!11805 = !DILocation(line: 1075, column: 1, scope: !11777)
!11806 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !11078, file: !11078, line: 1082, type: !3096, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2909, retainedNodes: !2036)
!11807 = !DILocation(line: 1085, column: 6, scope: !11808)
!11808 = distinct !DILexicalBlock(scope: !11806, file: !11078, line: 1085, column: 6)
!11809 = !DILocation(line: 1085, column: 6, scope: !11806)
!11810 = !DILocation(line: 1088, column: 5, scope: !11811)
!11811 = distinct !DILexicalBlock(scope: !11808, file: !11078, line: 1086, column: 3)
!11812 = !DILocation(line: 1091, column: 5, scope: !11811)
!11813 = !DILocation(line: 1092, column: 3, scope: !11811)
!11814 = !DILocation(line: 1093, column: 1, scope: !11806)
!11815 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !11078, file: !11078, line: 1099, type: !3096, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2909, retainedNodes: !2036)
!11816 = !DILocation(line: 1104, column: 1, scope: !11815)
!11817 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !11818, file: !11818, line: 257, type: !6518, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !11819)
!11818 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11819 = !{!11820}
!11820 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11817, file: !11818, line: 257, type: !110)
!11821 = !DILocation(line: 0, scope: !11817)
!11822 = !DILocation(line: 260, column: 3, scope: !11817)
!11823 = !DILocation(line: 261, column: 1, scope: !11817)
!11824 = distinct !DISubprogram(name: "LL_InitTick", scope: !11825, file: !11825, line: 260, type: !9435, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !11826)
!11825 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11826 = !{!11827, !11828}
!11827 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11824, file: !11825, line: 260, type: !110)
!11828 = !DILocalVariable(name: "Ticks", arg: 2, scope: !11824, file: !11825, line: 260, type: !110)
!11829 = !DILocation(line: 0, scope: !11824)
!11830 = !DILocation(line: 263, column: 46, scope: !11824)
!11831 = !DILocation(line: 263, column: 55, scope: !11824)
!11832 = !DILocation(line: 263, column: 18, scope: !11824)
!11833 = !DILocation(line: 264, column: 18, scope: !11824)
!11834 = !DILocation(line: 265, column: 18, scope: !11824)
!11835 = !DILocation(line: 267, column: 1, scope: !11824)
!11836 = distinct !DISubprogram(name: "LL_mDelay", scope: !11818, file: !11818, line: 273, type: !6518, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !11837)
!11837 = !{!11838, !11839}
!11838 = !DILocalVariable(name: "Delay", arg: 1, scope: !11836, file: !11818, line: 273, type: !110)
!11839 = !DILocalVariable(name: "tmp", scope: !11836, file: !11818, line: 275, type: !316)
!11840 = !DILocation(line: 0, scope: !11836)
!11841 = !DILocation(line: 275, column: 3, scope: !11836)
!11842 = !DILocation(line: 275, column: 18, scope: !11836)
!11843 = !DILocation(line: 275, column: 33, scope: !11836)
!11844 = !DILocation(line: 277, column: 10, scope: !11836)
!11845 = !DILocation(line: 280, column: 12, scope: !11846)
!11846 = distinct !DILexicalBlock(scope: !11836, file: !11818, line: 280, column: 6)
!11847 = !DILocation(line: 285, column: 3, scope: !11836)
!11848 = !DILocation(line: 287, column: 18, scope: !11849)
!11849 = distinct !DILexicalBlock(scope: !11850, file: !11818, line: 287, column: 8)
!11850 = distinct !DILexicalBlock(scope: !11836, file: !11818, line: 286, column: 3)
!11851 = !DILocation(line: 292, column: 1, scope: !11836)
!11852 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !11818, file: !11818, line: 323, type: !6518, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !11853)
!11853 = !{!11854}
!11854 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11852, file: !11818, line: 323, type: !110)
!11855 = !DILocation(line: 0, scope: !11852)
!11856 = !DILocation(line: 326, column: 19, scope: !11852)
!11857 = !DILocation(line: 327, column: 1, scope: !11852)
!11858 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !11818, file: !11818, line: 338, type: !11859, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !11862)
!11859 = !DISubroutineType(types: !11860)
!11860 = !{!11861, !110}
!11861 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !833, line: 201, baseType: !832)
!11862 = !{!11863, !11864, !11865, !11866, !11867}
!11863 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !11858, file: !11818, line: 338, type: !110)
!11864 = !DILocalVariable(name: "timeout", scope: !11858, file: !11818, line: 340, type: !110)
!11865 = !DILocalVariable(name: "getlatency", scope: !11858, file: !11818, line: 341, type: !110)
!11866 = !DILocalVariable(name: "latency", scope: !11858, file: !11818, line: 342, type: !110)
!11867 = !DILocalVariable(name: "status", scope: !11858, file: !11818, line: 343, type: !11861)
!11868 = !DILocation(line: 0, scope: !11858)
!11869 = !DILocation(line: 347, column: 21, scope: !11870)
!11870 = distinct !DILexicalBlock(scope: !11858, file: !11818, line: 347, column: 6)
!11871 = !DILocation(line: 347, column: 6, scope: !11858)
!11872 = !DILocation(line: 353, column: 8, scope: !11873)
!11873 = distinct !DILexicalBlock(scope: !11874, file: !11818, line: 353, column: 8)
!11874 = distinct !DILexicalBlock(scope: !11870, file: !11818, line: 352, column: 3)
!11875 = !DILocation(line: 353, column: 40, scope: !11873)
!11876 = !DILocation(line: 353, column: 8, scope: !11874)
!11877 = !DILocation(line: 356, column: 26, scope: !11878)
!11878 = distinct !DILexicalBlock(scope: !11879, file: !11818, line: 356, column: 10)
!11879 = distinct !DILexicalBlock(scope: !11873, file: !11818, line: 354, column: 5)
!11880 = !DILocation(line: 356, column: 55, scope: !11878)
!11881 = !DILocation(line: 362, column: 55, scope: !11882)
!11882 = distinct !DILexicalBlock(scope: !11879, file: !11818, line: 362, column: 10)
!11883 = !DILocation(line: 368, column: 55, scope: !11884)
!11884 = distinct !DILexicalBlock(scope: !11879, file: !11818, line: 368, column: 10)
!11885 = !DILocation(line: 374, column: 26, scope: !11886)
!11886 = distinct !DILexicalBlock(scope: !11879, file: !11818, line: 374, column: 10)
!11887 = !DILocation(line: 374, column: 55, scope: !11886)
!11888 = !DILocation(line: 380, column: 28, scope: !11889)
!11889 = distinct !DILexicalBlock(scope: !11890, file: !11818, line: 380, column: 12)
!11890 = distinct !DILexicalBlock(scope: !11886, file: !11818, line: 379, column: 7)
!11891 = !DILocation(line: 380, column: 57, scope: !11889)
!11892 = !DILocation(line: 387, column: 8, scope: !11893)
!11893 = distinct !DILexicalBlock(scope: !11874, file: !11818, line: 387, column: 8)
!11894 = !DILocation(line: 387, column: 40, scope: !11893)
!11895 = !DILocation(line: 387, column: 8, scope: !11874)
!11896 = !DILocation(line: 396, column: 26, scope: !11897)
!11897 = distinct !DILexicalBlock(scope: !11898, file: !11818, line: 396, column: 10)
!11898 = distinct !DILexicalBlock(scope: !11893, file: !11818, line: 388, column: 5)
!11899 = !DILocation(line: 396, column: 55, scope: !11897)
!11900 = !DILocation(line: 402, column: 26, scope: !11901)
!11901 = distinct !DILexicalBlock(scope: !11898, file: !11818, line: 402, column: 10)
!11902 = !DILocation(line: 402, column: 55, scope: !11901)
!11903 = !DILocation(line: 407, column: 26, scope: !11904)
!11904 = distinct !DILexicalBlock(scope: !11898, file: !11818, line: 407, column: 10)
!11905 = !DILocation(line: 407, column: 55, scope: !11904)
!11906 = !DILocation(line: 413, column: 28, scope: !11907)
!11907 = distinct !DILexicalBlock(scope: !11908, file: !11818, line: 413, column: 12)
!11908 = distinct !DILexicalBlock(scope: !11904, file: !11818, line: 412, column: 7)
!11909 = !DILocation(line: 413, column: 57, scope: !11907)
!11910 = !DILocation(line: 0, scope: !11874)
!11911 = !DILocation(line: 444, column: 5, scope: !11874)
!11912 = !DILocation(line: 448, column: 5, scope: !11874)
!11913 = !DILocation(line: 451, column: 18, scope: !11914)
!11914 = distinct !DILexicalBlock(scope: !11874, file: !11818, line: 449, column: 5)
!11915 = !DILocation(line: 452, column: 12, scope: !11914)
!11916 = !DILocation(line: 453, column: 26, scope: !11874)
!11917 = !DILocation(line: 453, column: 38, scope: !11874)
!11918 = !DILocation(line: 453, column: 5, scope: !11914)
!11919 = distinct !{!11919, !11912, !11920}
!11920 = !DILocation(line: 453, column: 54, scope: !11874)
!11921 = !DILocation(line: 0, scope: !11870)
!11922 = !DILocation(line: 464, column: 3, scope: !11858)
!11923 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !11924, file: !11924, line: 519, type: !6508, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !2036)
!11924 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11925 = !DILocation(line: 521, column: 21, scope: !11923)
!11926 = !DILocation(line: 521, column: 3, scope: !11923)
!11927 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !6121, file: !6121, line: 1543, type: !6518, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !11928)
!11928 = !{!11929}
!11929 = !DILocalVariable(name: "Latency", arg: 1, scope: !11927, file: !6121, line: 1543, type: !110)
!11930 = !DILocation(line: 0, scope: !11927)
!11931 = !DILocation(line: 1545, column: 3, scope: !11927)
!11932 = !DILocation(line: 1546, column: 1, scope: !11927)
!11933 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !6121, file: !6121, line: 1569, type: !6508, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !2036)
!11934 = !DILocation(line: 1571, column: 21, scope: !11933)
!11935 = !DILocation(line: 1571, column: 3, scope: !11933)
!11936 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !11818, file: !11818, line: 483, type: !11937, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !11953)
!11937 = !DISubroutineType(types: !11938)
!11938 = !{!11861, !11939, !11946}
!11939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11940, size: 32)
!11940 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !11825, line: 114, baseType: !11941)
!11941 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11825, line: 94, size: 96, elements: !11942)
!11942 = !{!11943, !11944, !11945}
!11943 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !11941, file: !11825, line: 96, baseType: !110, size: 32)
!11944 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !11941, file: !11825, line: 102, baseType: !110, size: 32, offset: 32)
!11945 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !11941, file: !11825, line: 109, baseType: !110, size: 32, offset: 64)
!11946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11947, size: 32)
!11947 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !11825, line: 139, baseType: !11948)
!11948 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11825, line: 119, size: 96, elements: !11949)
!11949 = !{!11950, !11951, !11952}
!11950 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !11948, file: !11825, line: 121, baseType: !110, size: 32)
!11951 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !11948, file: !11825, line: 127, baseType: !110, size: 32, offset: 32)
!11952 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !11948, file: !11825, line: 133, baseType: !110, size: 32, offset: 64)
!11953 = !{!11954, !11955, !11956, !11957}
!11954 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !11936, file: !11818, line: 483, type: !11939)
!11955 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !11936, file: !11818, line: 484, type: !11946)
!11956 = !DILocalVariable(name: "status", scope: !11936, file: !11818, line: 486, type: !11861)
!11957 = !DILocalVariable(name: "pllfreq", scope: !11936, file: !11818, line: 487, type: !110)
!11958 = !DILocation(line: 0, scope: !11936)
!11959 = !DILocation(line: 490, column: 6, scope: !11960)
!11960 = distinct !DILexicalBlock(scope: !11936, file: !11818, line: 490, column: 6)
!11961 = !DILocation(line: 490, column: 25, scope: !11960)
!11962 = !DILocation(line: 490, column: 6, scope: !11936)
!11963 = !DILocation(line: 493, column: 15, scope: !11964)
!11964 = distinct !DILexicalBlock(scope: !11960, file: !11818, line: 491, column: 3)
!11965 = !DILocation(line: 496, column: 8, scope: !11966)
!11966 = distinct !DILexicalBlock(scope: !11964, file: !11818, line: 496, column: 8)
!11967 = !DILocation(line: 496, column: 29, scope: !11966)
!11968 = !DILocation(line: 496, column: 8, scope: !11964)
!11969 = !DILocation(line: 498, column: 7, scope: !11970)
!11970 = distinct !DILexicalBlock(scope: !11966, file: !11818, line: 497, column: 5)
!11971 = !DILocation(line: 499, column: 7, scope: !11970)
!11972 = !DILocation(line: 499, column: 14, scope: !11970)
!11973 = !DILocation(line: 499, column: 35, scope: !11970)
!11974 = distinct !{!11974, !11971, !11975}
!11975 = !DILocation(line: 502, column: 7, scope: !11970)
!11976 = !DILocation(line: 506, column: 76, scope: !11964)
!11977 = !DILocation(line: 506, column: 103, scope: !11964)
!11978 = !DILocation(line: 507, column: 54, scope: !11964)
!11979 = !DILocation(line: 506, column: 5, scope: !11964)
!11980 = !DILocation(line: 510, column: 14, scope: !11964)
!11981 = !DILocation(line: 511, column: 3, scope: !11964)
!11982 = !DILocation(line: 0, scope: !11960)
!11983 = !DILocation(line: 518, column: 3, scope: !11936)
!11984 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !11818, file: !11818, line: 642, type: !11985, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !11987)
!11985 = !DISubroutineType(types: !11986)
!11986 = !{!11861}
!11987 = !{!11988}
!11988 = !DILocalVariable(name: "status", scope: !11984, file: !11818, line: 644, type: !11861)
!11989 = !DILocation(line: 0, scope: !11984)
!11990 = !DILocation(line: 647, column: 6, scope: !11991)
!11991 = distinct !DILexicalBlock(scope: !11984, file: !11818, line: 647, column: 6)
!11992 = !DILocation(line: 647, column: 27, scope: !11991)
!11993 = !DILocation(line: 663, column: 6, scope: !11994)
!11994 = distinct !DILexicalBlock(scope: !11984, file: !11818, line: 663, column: 6)
!11995 = !DILocation(line: 663, column: 30, scope: !11994)
!11996 = !DILocation(line: 663, column: 6, scope: !11984)
!11997 = !DILocation(line: 669, column: 3, scope: !11984)
!11998 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !11818, file: !11818, line: 611, type: !11999, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !12001)
!11999 = !DISubroutineType(types: !12000)
!12000 = !{!110, !110, !11939}
!12001 = !{!12002, !12003, !12004}
!12002 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !11998, file: !11818, line: 611, type: !110)
!12003 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !11998, file: !11818, line: 611, type: !11939)
!12004 = !DILocalVariable(name: "pllfreq", scope: !11998, file: !11818, line: 613, type: !110)
!12005 = !DILocation(line: 0, scope: !11998)
!12006 = !DILocation(line: 622, column: 56, scope: !11998)
!12007 = !DILocation(line: 622, column: 61, scope: !11998)
!12008 = !DILocation(line: 622, column: 32, scope: !11998)
!12009 = !DILocation(line: 626, column: 45, scope: !11998)
!12010 = !DILocation(line: 626, column: 50, scope: !11998)
!12011 = !DILocation(line: 626, column: 21, scope: !11998)
!12012 = !DILocation(line: 630, column: 47, scope: !11998)
!12013 = !DILocation(line: 630, column: 82, scope: !11998)
!12014 = !DILocation(line: 630, column: 21, scope: !11998)
!12015 = !DILocation(line: 633, column: 3, scope: !11998)
!12016 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8761, file: !8761, line: 3007, type: !6508, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !2036)
!12017 = !DILocation(line: 3009, column: 11, scope: !12016)
!12018 = !DILocation(line: 3009, column: 44, scope: !12016)
!12019 = !DILocation(line: 3009, column: 3, scope: !12016)
!12020 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8761, file: !8761, line: 2987, type: !3096, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !2036)
!12021 = !DILocation(line: 2989, column: 3, scope: !12020)
!12022 = !DILocation(line: 2990, column: 1, scope: !12020)
!12023 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8761, file: !8761, line: 4304, type: !8895, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !12024)
!12024 = !{!12025, !12026, !12027, !12028}
!12025 = !DILocalVariable(name: "Source", arg: 1, scope: !12023, file: !8761, line: 4304, type: !110)
!12026 = !DILocalVariable(name: "PLLM", arg: 2, scope: !12023, file: !8761, line: 4304, type: !110)
!12027 = !DILocalVariable(name: "PLLN", arg: 3, scope: !12023, file: !8761, line: 4304, type: !110)
!12028 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !12023, file: !8761, line: 4304, type: !110)
!12029 = !DILocation(line: 0, scope: !12023)
!12030 = !DILocation(line: 4306, column: 3, scope: !12023)
!12031 = !DILocation(line: 4308, column: 3, scope: !12023)
!12032 = !DILocation(line: 4312, column: 1, scope: !12023)
!12033 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !11818, file: !11818, line: 681, type: !12034, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !12036)
!12034 = !DISubroutineType(types: !12035)
!12035 = !{!11861, !110, !11946}
!12036 = !{!12037, !12038, !12039, !12040}
!12037 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !12033, file: !11818, line: 681, type: !110)
!12038 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12033, file: !11818, line: 681, type: !11946)
!12039 = !DILocalVariable(name: "status", scope: !12033, file: !11818, line: 683, type: !11861)
!12040 = !DILocalVariable(name: "hclk_frequency", scope: !12033, file: !11818, line: 684, type: !110)
!12041 = !DILocation(line: 0, scope: !12033)
!12042 = !DILocation(line: 691, column: 20, scope: !12033)
!12043 = !DILocation(line: 694, column: 6, scope: !12044)
!12044 = distinct !DILexicalBlock(scope: !12033, file: !11818, line: 694, column: 6)
!12045 = !DILocation(line: 694, column: 22, scope: !12044)
!12046 = !DILocation(line: 694, column: 6, scope: !12033)
!12047 = !DILocation(line: 697, column: 14, scope: !12048)
!12048 = distinct !DILexicalBlock(scope: !12044, file: !11818, line: 695, column: 3)
!12049 = !DILocation(line: 701, column: 13, scope: !12050)
!12050 = distinct !DILexicalBlock(scope: !12033, file: !11818, line: 701, column: 6)
!12051 = !DILocation(line: 701, column: 6, scope: !12033)
!12052 = !DILocation(line: 704, column: 5, scope: !12053)
!12053 = distinct !DILexicalBlock(scope: !12050, file: !11818, line: 702, column: 3)
!12054 = !DILocation(line: 705, column: 5, scope: !12053)
!12055 = !DILocation(line: 705, column: 12, scope: !12053)
!12056 = !DILocation(line: 705, column: 33, scope: !12053)
!12057 = distinct !{!12057, !12054, !12058}
!12058 = !DILocation(line: 708, column: 5, scope: !12053)
!12059 = !DILocation(line: 711, column: 49, scope: !12053)
!12060 = !DILocation(line: 711, column: 5, scope: !12053)
!12061 = !DILocation(line: 712, column: 5, scope: !12053)
!12062 = !DILocation(line: 713, column: 5, scope: !12053)
!12063 = !DILocation(line: 713, column: 12, scope: !12053)
!12064 = !DILocation(line: 713, column: 37, scope: !12053)
!12065 = distinct !{!12065, !12062, !12066}
!12066 = !DILocation(line: 716, column: 5, scope: !12053)
!12067 = !DILocation(line: 719, column: 50, scope: !12053)
!12068 = !DILocation(line: 719, column: 5, scope: !12053)
!12069 = !DILocation(line: 720, column: 50, scope: !12053)
!12070 = !DILocation(line: 720, column: 5, scope: !12053)
!12071 = !DILocation(line: 721, column: 3, scope: !12053)
!12072 = !DILocation(line: 724, column: 6, scope: !12073)
!12073 = distinct !DILexicalBlock(scope: !12033, file: !11818, line: 724, column: 6)
!12074 = !DILocation(line: 724, column: 22, scope: !12073)
!12075 = !DILocation(line: 724, column: 6, scope: !12033)
!12076 = !DILocation(line: 727, column: 14, scope: !12077)
!12077 = distinct !DILexicalBlock(scope: !12073, file: !11818, line: 725, column: 3)
!12078 = !DILocation(line: 728, column: 3, scope: !12077)
!12079 = !DILocation(line: 731, column: 13, scope: !12080)
!12080 = distinct !DILexicalBlock(scope: !12033, file: !11818, line: 731, column: 6)
!12081 = !DILocation(line: 731, column: 6, scope: !12033)
!12082 = !DILocation(line: 733, column: 5, scope: !12083)
!12083 = distinct !DILexicalBlock(scope: !12080, file: !11818, line: 732, column: 3)
!12084 = !DILocation(line: 734, column: 3, scope: !12083)
!12085 = !DILocation(line: 736, column: 3, scope: !12033)
!12086 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8761, file: !8761, line: 4184, type: !3096, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !2036)
!12087 = !DILocation(line: 4186, column: 3, scope: !12086)
!12088 = !DILocation(line: 4187, column: 1, scope: !12086)
!12089 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8761, file: !8761, line: 4205, type: !6508, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !2036)
!12090 = !DILocation(line: 4207, column: 11, scope: !12089)
!12091 = !DILocation(line: 4207, column: 44, scope: !12089)
!12092 = !DILocation(line: 4207, column: 3, scope: !12089)
!12093 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8761, file: !8761, line: 3224, type: !6518, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !12094)
!12094 = !{!12095}
!12095 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12093, file: !8761, line: 3224, type: !110)
!12096 = !DILocation(line: 0, scope: !12093)
!12097 = !DILocation(line: 3226, column: 3, scope: !12093)
!12098 = !DILocation(line: 3227, column: 1, scope: !12093)
!12099 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8761, file: !8761, line: 3188, type: !6518, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !12100)
!12100 = !{!12101}
!12101 = !DILocalVariable(name: "Source", arg: 1, scope: !12099, file: !8761, line: 3188, type: !110)
!12102 = !DILocation(line: 0, scope: !12099)
!12103 = !DILocation(line: 3190, column: 3, scope: !12099)
!12104 = !DILocation(line: 3191, column: 1, scope: !12099)
!12105 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8761, file: !8761, line: 3204, type: !6508, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !2036)
!12106 = !DILocation(line: 3206, column: 21, scope: !12105)
!12107 = !DILocation(line: 3206, column: 3, scope: !12105)
!12108 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8761, file: !8761, line: 3240, type: !6518, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !12109)
!12109 = !{!12110}
!12110 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12108, file: !8761, line: 3240, type: !110)
!12111 = !DILocation(line: 0, scope: !12108)
!12112 = !DILocation(line: 3242, column: 3, scope: !12108)
!12113 = !DILocation(line: 3243, column: 1, scope: !12108)
!12114 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8761, file: !8761, line: 3256, type: !6518, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !12115)
!12115 = !{!12116}
!12116 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12114, file: !8761, line: 3256, type: !110)
!12117 = !DILocation(line: 0, scope: !12114)
!12118 = !DILocation(line: 3258, column: 3, scope: !12114)
!12119 = !DILocation(line: 3259, column: 1, scope: !12114)
!12120 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !8761, file: !8761, line: 5153, type: !6508, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !2036)
!12121 = !DILocation(line: 5155, column: 11, scope: !12120)
!12122 = !DILocation(line: 5155, column: 47, scope: !12120)
!12123 = !DILocation(line: 5155, column: 3, scope: !12120)
!12124 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !11818, file: !11818, line: 540, type: !12125, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !12127)
!12125 = !DISubroutineType(types: !12126)
!12126 = !{!11861, !110, !110, !11939, !11946}
!12127 = !{!12128, !12129, !12130, !12131, !12132, !12133}
!12128 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !12124, file: !11818, line: 540, type: !110)
!12129 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !12124, file: !11818, line: 540, type: !110)
!12130 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !12124, file: !11818, line: 541, type: !11939)
!12131 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !12124, file: !11818, line: 541, type: !11946)
!12132 = !DILocalVariable(name: "status", scope: !12124, file: !11818, line: 543, type: !11861)
!12133 = !DILocalVariable(name: "pllfreq", scope: !12124, file: !11818, line: 544, type: !110)
!12134 = !DILocation(line: 0, scope: !12124)
!12135 = !DILocation(line: 551, column: 6, scope: !12136)
!12136 = distinct !DILexicalBlock(scope: !12124, file: !11818, line: 551, column: 6)
!12137 = !DILocation(line: 551, column: 25, scope: !12136)
!12138 = !DILocation(line: 551, column: 6, scope: !12124)
!12139 = !DILocation(line: 554, column: 15, scope: !12140)
!12140 = distinct !DILexicalBlock(scope: !12136, file: !11818, line: 552, column: 3)
!12141 = !DILocation(line: 557, column: 8, scope: !12142)
!12142 = distinct !DILexicalBlock(scope: !12140, file: !11818, line: 557, column: 8)
!12143 = !DILocation(line: 557, column: 29, scope: !12142)
!12144 = !DILocation(line: 557, column: 8, scope: !12140)
!12145 = !DILocation(line: 560, column: 20, scope: !12146)
!12146 = distinct !DILexicalBlock(scope: !12147, file: !11818, line: 560, column: 10)
!12147 = distinct !DILexicalBlock(scope: !12142, file: !11818, line: 558, column: 5)
!12148 = !DILocation(line: 560, column: 10, scope: !12147)
!12149 = !DILocation(line: 562, column: 9, scope: !12150)
!12150 = distinct !DILexicalBlock(scope: !12146, file: !11818, line: 561, column: 7)
!12151 = !DILocation(line: 563, column: 7, scope: !12150)
!12152 = !DILocation(line: 566, column: 9, scope: !12153)
!12153 = distinct !DILexicalBlock(scope: !12146, file: !11818, line: 565, column: 7)
!12154 = !DILocation(line: 570, column: 7, scope: !12147)
!12155 = !DILocation(line: 571, column: 7, scope: !12147)
!12156 = !DILocation(line: 571, column: 14, scope: !12147)
!12157 = !DILocation(line: 571, column: 35, scope: !12147)
!12158 = distinct !{!12158, !12155, !12159}
!12159 = !DILocation(line: 574, column: 7, scope: !12147)
!12160 = !DILocation(line: 578, column: 76, scope: !12140)
!12161 = !DILocation(line: 578, column: 103, scope: !12140)
!12162 = !DILocation(line: 579, column: 54, scope: !12140)
!12163 = !DILocation(line: 578, column: 5, scope: !12140)
!12164 = !DILocation(line: 582, column: 14, scope: !12140)
!12165 = !DILocation(line: 583, column: 3, scope: !12140)
!12166 = !DILocation(line: 0, scope: !12136)
!12167 = !DILocation(line: 590, column: 3, scope: !12124)
!12168 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8761, file: !8761, line: 2969, type: !6508, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !2036)
!12169 = !DILocation(line: 2971, column: 11, scope: !12168)
!12170 = !DILocation(line: 2971, column: 44, scope: !12168)
!12171 = !DILocation(line: 2971, column: 3, scope: !12168)
!12172 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !8761, file: !8761, line: 2929, type: !3096, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !2036)
!12173 = !DILocation(line: 2931, column: 3, scope: !12172)
!12174 = !DILocation(line: 2932, column: 1, scope: !12172)
!12175 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8761, file: !8761, line: 2939, type: !3096, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !2036)
!12176 = !DILocation(line: 2941, column: 3, scope: !12175)
!12177 = !DILocation(line: 2942, column: 1, scope: !12175)
!12178 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8761, file: !8761, line: 2949, type: !3096, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !2036)
!12179 = !DILocation(line: 2951, column: 3, scope: !12178)
!12180 = !DILocation(line: 2952, column: 1, scope: !12178)
!12181 = distinct !DISubprogram(name: "z_device_state_init", scope: !12182, file: !12182, line: 23, type: !3096, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3056, retainedNodes: !12183)
!12182 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12183 = !{!12184}
!12184 = !DILocalVariable(name: "dev", scope: !12181, file: !12182, line: 25, type: !12185)
!12185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12186, size: 32)
!12186 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12187)
!12187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !12188)
!12188 = !{!12189, !12190, !12191, !12192, !12198, !12199}
!12189 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12187, file: !336, line: 380, baseType: !279, size: 32)
!12190 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !12187, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!12191 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !12187, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!12192 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !12187, file: !336, line: 386, baseType: !12193, size: 32, offset: 96)
!12193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12194, size: 32)
!12194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !12195)
!12195 = !{!12196, !12197}
!12196 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !12194, file: !336, line: 359, baseType: !178, size: 8)
!12197 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !12194, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!12198 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12187, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!12199 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !12187, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!12200 = !DILocation(line: 0, scope: !12181)
!12201 = !DILocation(line: 31, column: 1, scope: !12181)
!12202 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !12182, file: !12182, line: 33, type: !12203, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3056, retainedNodes: !12205)
!12203 = !DISubroutineType(types: !12204)
!12204 = !{!12185, !279}
!12205 = !{!12206, !12207}
!12206 = !DILocalVariable(name: "name", arg: 1, scope: !12202, file: !12182, line: 33, type: !279)
!12207 = !DILocalVariable(name: "dev", scope: !12202, file: !12182, line: 35, type: !12185)
!12208 = !DILocation(line: 0, scope: !12202)
!12209 = !DILocation(line: 40, column: 12, scope: !12210)
!12210 = distinct !DILexicalBlock(scope: !12202, file: !12182, line: 40, column: 6)
!12211 = !DILocation(line: 40, column: 21, scope: !12210)
!12212 = !DILocation(line: 40, column: 25, scope: !12210)
!12213 = !DILocation(line: 40, column: 33, scope: !12210)
!12214 = !DILocation(line: 40, column: 6, scope: !12202)
!12215 = !DILocation(line: 55, column: 2, scope: !12216)
!12216 = distinct !DILexicalBlock(scope: !12202, file: !12182, line: 55, column: 2)
!12217 = !DILocation(line: 50, column: 7, scope: !12218)
!12218 = distinct !DILexicalBlock(scope: !12219, file: !12182, line: 50, column: 7)
!12219 = distinct !DILexicalBlock(scope: !12220, file: !12182, line: 49, column: 57)
!12220 = distinct !DILexicalBlock(scope: !12221, file: !12182, line: 49, column: 2)
!12221 = distinct !DILexicalBlock(scope: !12202, file: !12182, line: 49, column: 2)
!12222 = !DILocation(line: 50, column: 30, scope: !12218)
!12223 = !DILocation(line: 50, column: 39, scope: !12218)
!12224 = !DILocation(line: 50, column: 44, scope: !12218)
!12225 = !DILocation(line: 50, column: 7, scope: !12219)
!12226 = !DILocation(line: 49, column: 53, scope: !12220)
!12227 = !DILocation(line: 49, column: 33, scope: !12220)
!12228 = !DILocation(line: 49, column: 2, scope: !12221)
!12229 = distinct !{!12229, !12228, !12230}
!12230 = !DILocation(line: 53, column: 2, scope: !12221)
!12231 = !DILocation(line: 56, column: 7, scope: !12232)
!12232 = distinct !DILexicalBlock(scope: !12233, file: !12182, line: 56, column: 7)
!12233 = distinct !DILexicalBlock(scope: !12234, file: !12182, line: 55, column: 57)
!12234 = distinct !DILexicalBlock(scope: !12216, file: !12182, line: 55, column: 2)
!12235 = !DILocation(line: 56, column: 30, scope: !12232)
!12236 = !DILocation(line: 56, column: 52, scope: !12232)
!12237 = !DILocation(line: 56, column: 34, scope: !12232)
!12238 = !DILocation(line: 56, column: 58, scope: !12232)
!12239 = !DILocation(line: 56, column: 7, scope: !12233)
!12240 = !DILocation(line: 55, column: 53, scope: !12234)
!12241 = !DILocation(line: 55, column: 33, scope: !12234)
!12242 = distinct !{!12242, !12215, !12243}
!12243 = !DILocation(line: 59, column: 2, scope: !12216)
!12244 = !DILocation(line: 62, column: 1, scope: !12202)
!12245 = distinct !DISubprogram(name: "z_device_is_ready", scope: !12182, file: !12182, line: 93, type: !12246, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3056, retainedNodes: !12248)
!12246 = !DISubroutineType(types: !12247)
!12247 = !{!347, !12185}
!12248 = !{!12249}
!12249 = !DILocalVariable(name: "dev", arg: 1, scope: !12245, file: !12182, line: 93, type: !12185)
!12250 = !DILocation(line: 0, scope: !12245)
!12251 = !DILocation(line: 99, column: 10, scope: !12252)
!12252 = distinct !DILexicalBlock(scope: !12245, file: !12182, line: 99, column: 6)
!12253 = !DILocation(line: 99, column: 6, scope: !12245)
!12254 = !DILocation(line: 103, column: 14, scope: !12245)
!12255 = !DILocation(line: 103, column: 21, scope: !12245)
!12256 = !DILocation(line: 103, column: 33, scope: !12245)
!12257 = !DILocation(line: 103, column: 49, scope: !12245)
!12258 = !DILocation(line: 103, column: 58, scope: !12245)
!12259 = !DILocation(line: 104, column: 1, scope: !12245)
!12260 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !12182, file: !12182, line: 87, type: !12261, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3056, retainedNodes: !12264)
!12261 = !DISubroutineType(types: !12262)
!12262 = !{!232, !12263}
!12263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12185, size: 32)
!12264 = !{!12265}
!12265 = !DILocalVariable(name: "devices", arg: 1, scope: !12260, file: !12182, line: 87, type: !12263)
!12266 = !DILocation(line: 0, scope: !12260)
!12267 = !DILocation(line: 89, column: 11, scope: !12260)
!12268 = !DILocation(line: 90, column: 2, scope: !12260)
!12269 = distinct !DISubprogram(name: "device_required_foreach", scope: !12182, file: !12182, line: 125, type: !12270, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3056, retainedNodes: !12276)
!12270 = !DISubroutineType(types: !12271)
!12271 = !{!109, !12185, !12272, !107}
!12272 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !336, line: 471, baseType: !12273)
!12273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12274, size: 32)
!12274 = !DISubroutineType(types: !12275)
!12275 = !{!109, !12185, !107}
!12276 = !{!12277, !12278, !12279, !12280, !12281}
!12277 = !DILocalVariable(name: "dev", arg: 1, scope: !12269, file: !12182, line: 125, type: !12185)
!12278 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12269, file: !12182, line: 126, type: !12272)
!12279 = !DILocalVariable(name: "context", arg: 3, scope: !12269, file: !12182, line: 127, type: !107)
!12280 = !DILocalVariable(name: "handle_count", scope: !12269, file: !12182, line: 129, type: !232)
!12281 = !DILocalVariable(name: "handles", scope: !12269, file: !12182, line: 130, type: !350)
!12282 = !DILocation(line: 0, scope: !12269)
!12283 = !DILocation(line: 129, column: 2, scope: !12269)
!12284 = !DILocation(line: 129, column: 9, scope: !12269)
!12285 = !DILocation(line: 130, column: 35, scope: !12269)
!12286 = !DILocation(line: 132, column: 33, scope: !12269)
!12287 = !DILocation(line: 132, column: 9, scope: !12269)
!12288 = !DILocation(line: 133, column: 1, scope: !12269)
!12289 = !DILocation(line: 132, column: 2, scope: !12269)
!12290 = distinct !DISubprogram(name: "device_required_handles_get", scope: !336, file: !336, line: 493, type: !12291, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3056, retainedNodes: !12293)
!12291 = !DISubroutineType(types: !12292)
!12292 = !{!350, !12185, !2552}
!12293 = !{!12294, !12295, !12296, !12297}
!12294 = !DILocalVariable(name: "dev", arg: 1, scope: !12290, file: !336, line: 493, type: !12185)
!12295 = !DILocalVariable(name: "count", arg: 2, scope: !12290, file: !336, line: 493, type: !2552)
!12296 = !DILocalVariable(name: "rv", scope: !12290, file: !336, line: 495, type: !350)
!12297 = !DILocalVariable(name: "i", scope: !12298, file: !336, line: 498, type: !232)
!12298 = distinct !DILexicalBlock(scope: !12299, file: !336, line: 497, column: 18)
!12299 = distinct !DILexicalBlock(scope: !12290, file: !336, line: 497, column: 6)
!12300 = !DILocation(line: 0, scope: !12290)
!12301 = !DILocation(line: 495, column: 35, scope: !12290)
!12302 = !DILocation(line: 497, column: 9, scope: !12299)
!12303 = !DILocation(line: 497, column: 6, scope: !12290)
!12304 = !DILocation(line: 0, scope: !12298)
!12305 = !DILocation(line: 500, column: 11, scope: !12298)
!12306 = !DILocation(line: 500, column: 40, scope: !12298)
!12307 = !DILocation(line: 502, column: 4, scope: !12308)
!12308 = distinct !DILexicalBlock(scope: !12298, file: !336, line: 501, column: 40)
!12309 = distinct !{!12309, !12310, !12311}
!12310 = !DILocation(line: 500, column: 3, scope: !12298)
!12311 = !DILocation(line: 503, column: 3, scope: !12298)
!12312 = !DILocation(line: 504, column: 10, scope: !12298)
!12313 = !DILocation(line: 505, column: 2, scope: !12298)
!12314 = !DILocation(line: 507, column: 2, scope: !12290)
!12315 = distinct !DISubprogram(name: "device_visitor", scope: !12182, file: !12182, line: 106, type: !12316, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3056, retainedNodes: !12318)
!12316 = !DISubroutineType(types: !12317)
!12317 = !{!109, !350, !232, !12272, !107}
!12318 = !{!12319, !12320, !12321, !12322, !12323, !12325, !12328, !12329}
!12319 = !DILocalVariable(name: "handles", arg: 1, scope: !12315, file: !12182, line: 106, type: !350)
!12320 = !DILocalVariable(name: "handle_count", arg: 2, scope: !12315, file: !12182, line: 107, type: !232)
!12321 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !12315, file: !12182, line: 108, type: !12272)
!12322 = !DILocalVariable(name: "context", arg: 4, scope: !12315, file: !12182, line: 109, type: !107)
!12323 = !DILocalVariable(name: "i", scope: !12324, file: !12182, line: 112, type: !232)
!12324 = distinct !DILexicalBlock(scope: !12315, file: !12182, line: 112, column: 2)
!12325 = !DILocalVariable(name: "dh", scope: !12326, file: !12182, line: 113, type: !352)
!12326 = distinct !DILexicalBlock(scope: !12327, file: !12182, line: 112, column: 44)
!12327 = distinct !DILexicalBlock(scope: !12324, file: !12182, line: 112, column: 2)
!12328 = !DILocalVariable(name: "rdev", scope: !12326, file: !12182, line: 114, type: !12185)
!12329 = !DILocalVariable(name: "rc", scope: !12326, file: !12182, line: 115, type: !109)
!12330 = !DILocation(line: 0, scope: !12315)
!12331 = !DILocation(line: 0, scope: !12324)
!12332 = !DILocation(line: 112, column: 23, scope: !12327)
!12333 = !DILocation(line: 112, column: 2, scope: !12324)
!12334 = distinct !{!12334, !12333, !12335}
!12335 = !DILocation(line: 120, column: 2, scope: !12324)
!12336 = !DILocation(line: 113, column: 24, scope: !12326)
!12337 = !DILocation(line: 0, scope: !12326)
!12338 = !DILocation(line: 114, column: 31, scope: !12326)
!12339 = !DILocation(line: 115, column: 12, scope: !12326)
!12340 = !DILocation(line: 117, column: 10, scope: !12341)
!12341 = distinct !DILexicalBlock(scope: !12326, file: !12182, line: 117, column: 7)
!12342 = !DILocation(line: 112, column: 39, scope: !12327)
!12343 = !DILocation(line: 123, column: 1, scope: !12315)
!12344 = distinct !DISubprogram(name: "device_from_handle", scope: !336, file: !336, line: 439, type: !12345, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3056, retainedNodes: !12347)
!12345 = !DISubroutineType(types: !12346)
!12346 = !{!12185, !352}
!12347 = !{!12348, !12349, !12350}
!12348 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !12344, file: !336, line: 439, type: !352)
!12349 = !DILocalVariable(name: "dev", scope: !12344, file: !336, line: 443, type: !12185)
!12350 = !DILocalVariable(name: "numdev", scope: !12344, file: !336, line: 444, type: !232)
!12351 = !DILocation(line: 0, scope: !12344)
!12352 = !DILocation(line: 446, column: 7, scope: !12353)
!12353 = distinct !DILexicalBlock(scope: !12344, file: !336, line: 446, column: 6)
!12354 = !DILocation(line: 446, column: 18, scope: !12353)
!12355 = !DILocation(line: 446, column: 23, scope: !12353)
!12356 = !DILocation(line: 450, column: 2, scope: !12344)
!12357 = distinct !DISubprogram(name: "device_supported_foreach", scope: !12182, file: !12182, line: 135, type: !12270, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3056, retainedNodes: !12358)
!12358 = !{!12359, !12360, !12361, !12362, !12363}
!12359 = !DILocalVariable(name: "dev", arg: 1, scope: !12357, file: !12182, line: 135, type: !12185)
!12360 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12357, file: !12182, line: 136, type: !12272)
!12361 = !DILocalVariable(name: "context", arg: 3, scope: !12357, file: !12182, line: 137, type: !107)
!12362 = !DILocalVariable(name: "handle_count", scope: !12357, file: !12182, line: 139, type: !232)
!12363 = !DILocalVariable(name: "handles", scope: !12357, file: !12182, line: 140, type: !350)
!12364 = !DILocation(line: 0, scope: !12357)
!12365 = !DILocation(line: 139, column: 2, scope: !12357)
!12366 = !DILocation(line: 139, column: 9, scope: !12357)
!12367 = !DILocation(line: 140, column: 35, scope: !12357)
!12368 = !DILocation(line: 142, column: 33, scope: !12357)
!12369 = !DILocation(line: 142, column: 9, scope: !12357)
!12370 = !DILocation(line: 143, column: 1, scope: !12357)
!12371 = !DILocation(line: 142, column: 2, scope: !12357)
!12372 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !336, file: !336, line: 573, type: !12291, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3056, retainedNodes: !12373)
!12373 = !{!12374, !12375, !12376, !12377, !12378}
!12374 = !DILocalVariable(name: "dev", arg: 1, scope: !12372, file: !336, line: 573, type: !12185)
!12375 = !DILocalVariable(name: "count", arg: 2, scope: !12372, file: !336, line: 573, type: !2552)
!12376 = !DILocalVariable(name: "rv", scope: !12372, file: !336, line: 575, type: !350)
!12377 = !DILocalVariable(name: "region", scope: !12372, file: !336, line: 576, type: !232)
!12378 = !DILocalVariable(name: "i", scope: !12372, file: !336, line: 577, type: !232)
!12379 = !DILocation(line: 0, scope: !12372)
!12380 = !DILocation(line: 575, column: 35, scope: !12372)
!12381 = !DILocation(line: 579, column: 9, scope: !12382)
!12382 = distinct !DILexicalBlock(scope: !12372, file: !336, line: 579, column: 6)
!12383 = !DILocation(line: 579, column: 6, scope: !12372)
!12384 = !DILocation(line: 582, column: 8, scope: !12385)
!12385 = distinct !DILexicalBlock(scope: !12386, file: !336, line: 582, column: 8)
!12386 = distinct !DILexicalBlock(scope: !12387, file: !336, line: 581, column: 23)
!12387 = distinct !DILexicalBlock(scope: !12382, file: !336, line: 579, column: 18)
!12388 = !DILocation(line: 582, column: 12, scope: !12385)
!12389 = !DILocation(line: 585, column: 6, scope: !12386)
!12390 = !DILocation(line: 0, scope: !12387)
!12391 = !DILocation(line: 581, column: 17, scope: !12387)
!12392 = !DILocation(line: 581, column: 3, scope: !12387)
!12393 = !DILocation(line: 588, column: 10, scope: !12387)
!12394 = !DILocation(line: 588, column: 16, scope: !12387)
!12395 = !DILocation(line: 589, column: 4, scope: !12396)
!12396 = distinct !DILexicalBlock(scope: !12387, file: !336, line: 588, column: 39)
!12397 = !DILocation(line: 588, column: 3, scope: !12387)
!12398 = distinct !{!12398, !12397, !12399}
!12399 = !DILocation(line: 590, column: 3, scope: !12387)
!12400 = !DILocation(line: 591, column: 10, scope: !12387)
!12401 = !DILocation(line: 592, column: 2, scope: !12387)
!12402 = !DILocation(line: 575, column: 25, scope: !12372)
!12403 = !DILocation(line: 594, column: 2, scope: !12372)
!12404 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1827, file: !1827, line: 49, type: !12405, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !2036)
!12405 = !DISubroutineType(types: !12406)
!12406 = !{!281}
!12407 = !DILocation(line: 51, column: 10, scope: !12404)
!12408 = !DILocation(line: 51, column: 20, scope: !12404)
!12409 = !DILocation(line: 51, column: 2, scope: !12404)
!12410 = distinct !DISubprogram(name: "coredump", scope: !3063, file: !3063, line: 209, type: !12411, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3059, retainedNodes: !12560)
!12411 = !DISubroutineType(types: !12412)
!12412 = !{null, !32, !12413, !12457}
!12413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12414, size: 32)
!12414 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12415)
!12415 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2682, line: 141, baseType: !12416)
!12416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2682, line: 97, size: 256, elements: !12417)
!12417 = !{!12418}
!12418 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !12416, file: !2682, line: 107, baseType: !12419, size: 256)
!12419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2682, line: 98, size: 256, elements: !12420)
!12420 = !{!12421, !12426, !12431, !12436, !12441, !12446, !12451, !12456}
!12421 = !DIDerivedType(tag: DW_TAG_member, scope: !12419, file: !2682, line: 99, baseType: !12422, size: 32)
!12422 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12419, file: !2682, line: 99, size: 32, elements: !12423)
!12423 = !{!12424, !12425}
!12424 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !12422, file: !2682, line: 99, baseType: !110, size: 32)
!12425 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !12422, file: !2682, line: 99, baseType: !110, size: 32)
!12426 = !DIDerivedType(tag: DW_TAG_member, scope: !12419, file: !2682, line: 100, baseType: !12427, size: 32, offset: 32)
!12427 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12419, file: !2682, line: 100, size: 32, elements: !12428)
!12428 = !{!12429, !12430}
!12429 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !12427, file: !2682, line: 100, baseType: !110, size: 32)
!12430 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !12427, file: !2682, line: 100, baseType: !110, size: 32)
!12431 = !DIDerivedType(tag: DW_TAG_member, scope: !12419, file: !2682, line: 101, baseType: !12432, size: 32, offset: 64)
!12432 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12419, file: !2682, line: 101, size: 32, elements: !12433)
!12433 = !{!12434, !12435}
!12434 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !12432, file: !2682, line: 101, baseType: !110, size: 32)
!12435 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !12432, file: !2682, line: 101, baseType: !110, size: 32)
!12436 = !DIDerivedType(tag: DW_TAG_member, scope: !12419, file: !2682, line: 102, baseType: !12437, size: 32, offset: 96)
!12437 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12419, file: !2682, line: 102, size: 32, elements: !12438)
!12438 = !{!12439, !12440}
!12439 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !12437, file: !2682, line: 102, baseType: !110, size: 32)
!12440 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !12437, file: !2682, line: 102, baseType: !110, size: 32)
!12441 = !DIDerivedType(tag: DW_TAG_member, scope: !12419, file: !2682, line: 103, baseType: !12442, size: 32, offset: 128)
!12442 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12419, file: !2682, line: 103, size: 32, elements: !12443)
!12443 = !{!12444, !12445}
!12444 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !12442, file: !2682, line: 103, baseType: !110, size: 32)
!12445 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !12442, file: !2682, line: 103, baseType: !110, size: 32)
!12446 = !DIDerivedType(tag: DW_TAG_member, scope: !12419, file: !2682, line: 104, baseType: !12447, size: 32, offset: 160)
!12447 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12419, file: !2682, line: 104, size: 32, elements: !12448)
!12448 = !{!12449, !12450}
!12449 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !12447, file: !2682, line: 104, baseType: !110, size: 32)
!12450 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !12447, file: !2682, line: 104, baseType: !110, size: 32)
!12451 = !DIDerivedType(tag: DW_TAG_member, scope: !12419, file: !2682, line: 105, baseType: !12452, size: 32, offset: 192)
!12452 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12419, file: !2682, line: 105, size: 32, elements: !12453)
!12453 = !{!12454, !12455}
!12454 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !12452, file: !2682, line: 105, baseType: !110, size: 32)
!12455 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !12452, file: !2682, line: 105, baseType: !110, size: 32)
!12456 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !12419, file: !2682, line: 106, baseType: !110, size: 32, offset: 224)
!12457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12458, size: 32)
!12458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1280, elements: !12459)
!12459 = !{!12460, !12518, !12530, !12531, !12532, !12533, !12534, !12540, !12555}
!12460 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !12458, file: !156, line: 247, baseType: !12461, size: 384)
!12461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 384, elements: !12462)
!12462 = !{!12463, !12487, !12494, !12495, !12496, !12505, !12506, !12507}
!12463 = !DIDerivedType(tag: DW_TAG_member, scope: !12461, file: !156, line: 60, baseType: !12464, size: 64)
!12464 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12461, file: !156, line: 60, size: 64, elements: !12465)
!12465 = !{!12466, !12481}
!12466 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !12464, file: !156, line: 61, baseType: !12467, size: 64)
!12467 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !12468)
!12468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !12469)
!12469 = !{!12470, !12476}
!12470 = !DIDerivedType(tag: DW_TAG_member, scope: !12468, file: !127, line: 38, baseType: !12471, size: 32)
!12471 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12468, file: !127, line: 38, size: 32, elements: !12472)
!12472 = !{!12473, !12475}
!12473 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !12471, file: !127, line: 39, baseType: !12474, size: 32)
!12474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12468, size: 32)
!12475 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12471, file: !127, line: 40, baseType: !12474, size: 32)
!12476 = !DIDerivedType(tag: DW_TAG_member, scope: !12468, file: !127, line: 42, baseType: !12477, size: 32, offset: 32)
!12477 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12468, file: !127, line: 42, size: 32, elements: !12478)
!12478 = !{!12479, !12480}
!12479 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !12477, file: !127, line: 43, baseType: !12474, size: 32)
!12480 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !12477, file: !127, line: 44, baseType: !12474, size: 32)
!12481 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !12464, file: !156, line: 62, baseType: !12482, size: 64)
!12482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !12483)
!12483 = !{!12484}
!12484 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !12482, file: !168, line: 50, baseType: !12485, size: 64)
!12485 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12486, size: 64, elements: !173)
!12486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12482, size: 32)
!12487 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !12461, file: !156, line: 68, baseType: !12488, size: 32, offset: 64)
!12488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12489, size: 32)
!12489 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !12490)
!12490 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !12491)
!12491 = !{!12492}
!12492 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !12490, file: !122, line: 232, baseType: !12493, size: 64)
!12493 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !12468)
!12494 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !12461, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!12495 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !12461, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!12496 = !DIDerivedType(tag: DW_TAG_member, scope: !12461, file: !156, line: 90, baseType: !12497, size: 16, offset: 112)
!12497 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12461, file: !156, line: 90, size: 16, elements: !12498)
!12498 = !{!12499, !12504}
!12499 = !DIDerivedType(tag: DW_TAG_member, scope: !12497, file: !156, line: 91, baseType: !12500, size: 16)
!12500 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12497, file: !156, line: 91, size: 16, elements: !12501)
!12501 = !{!12502, !12503}
!12502 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !12500, file: !156, line: 96, baseType: !188, size: 8)
!12503 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !12500, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!12504 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !12497, file: !156, line: 100, baseType: !192, size: 16)
!12505 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !12461, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!12506 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !12461, file: !156, line: 127, baseType: !107, size: 32, offset: 160)
!12507 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !12461, file: !156, line: 131, baseType: !12508, size: 192, offset: 192)
!12508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !12509)
!12509 = !{!12510, !12511, !12517}
!12510 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !12508, file: !122, line: 245, baseType: !12467, size: 64)
!12511 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !12508, file: !122, line: 246, baseType: !12512, size: 32, offset: 64)
!12512 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !12513)
!12513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12514, size: 32)
!12514 = !DISubroutineType(types: !12515)
!12515 = !{null, !12516}
!12516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12508, size: 32)
!12517 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !12508, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!12518 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !12458, file: !156, line: 250, baseType: !12519, size: 288, offset: 384)
!12519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !12520)
!12520 = !{!12521, !12522, !12523, !12524, !12525, !12526, !12527, !12528, !12529}
!12521 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !12519, file: !209, line: 26, baseType: !110, size: 32)
!12522 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !12519, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!12523 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !12519, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!12524 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !12519, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!12525 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !12519, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!12526 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !12519, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!12527 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !12519, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!12528 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !12519, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!12529 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !12519, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!12530 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !12458, file: !156, line: 253, baseType: !107, size: 32, offset: 672)
!12531 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !12458, file: !156, line: 256, baseType: !12489, size: 64, offset: 704)
!12532 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12458, file: !156, line: 279, baseType: !223, size: 256, offset: 768)
!12533 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !12458, file: !156, line: 294, baseType: !109, size: 32, offset: 1024)
!12534 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !12458, file: !156, line: 300, baseType: !12535, size: 96, offset: 1056)
!12535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !12536)
!12536 = !{!12537, !12538, !12539}
!12537 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !12535, file: !156, line: 153, baseType: !22, size: 32)
!12538 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !12535, file: !156, line: 162, baseType: !232, size: 32, offset: 32)
!12539 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !12535, file: !156, line: 168, baseType: !232, size: 32, offset: 64)
!12540 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !12458, file: !156, line: 325, baseType: !12541, size: 32, offset: 1152)
!12541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12542, size: 32)
!12542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !12543)
!12543 = !{!12544, !12550, !12551}
!12544 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12542, file: !118, line: 5074, baseType: !12545, size: 96)
!12545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !241, line: 56, size: 96, elements: !12546)
!12546 = !{!12547, !12548, !12549}
!12547 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12545, file: !241, line: 57, baseType: !244, size: 32)
!12548 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !12545, file: !241, line: 58, baseType: !107, size: 32, offset: 32)
!12549 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !12545, file: !241, line: 59, baseType: !232, size: 32, offset: 64)
!12550 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !12542, file: !118, line: 5075, baseType: !12489, size: 64, offset: 96)
!12551 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !12542, file: !118, line: 5076, baseType: !12552, size: 32, offset: 160)
!12552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !12553)
!12553 = !{!12554}
!12554 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !12552, file: !251, line: 52, baseType: !22, size: 32)
!12555 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !12458, file: !156, line: 343, baseType: !12556, size: 64, offset: 1184)
!12556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !209, line: 60, size: 64, elements: !12557)
!12557 = !{!12558, !12559}
!12558 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !12556, file: !209, line: 63, baseType: !110, size: 32)
!12559 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !12556, file: !209, line: 66, baseType: !110, size: 32, offset: 32)
!12560 = !{!12561, !12562, !12563}
!12561 = !DILocalVariable(name: "reason", arg: 1, scope: !12410, file: !3063, line: 209, type: !32)
!12562 = !DILocalVariable(name: "esf", arg: 2, scope: !12410, file: !3063, line: 209, type: !12413)
!12563 = !DILocalVariable(name: "thread", arg: 3, scope: !12410, file: !3063, line: 210, type: !12457)
!12564 = !DILocation(line: 0, scope: !12410)
!12565 = !DILocation(line: 212, column: 1, scope: !12410)
!12566 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3063, file: !3063, line: 214, type: !12567, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3059, retainedNodes: !12569)
!12567 = !DISubroutineType(types: !12568)
!12568 = !{null, !22, !22}
!12569 = !{!12570, !12571}
!12570 = !DILocalVariable(name: "start_addr", arg: 1, scope: !12566, file: !3063, line: 214, type: !22)
!12571 = !DILocalVariable(name: "end_addr", arg: 2, scope: !12566, file: !3063, line: 214, type: !22)
!12572 = !DILocation(line: 0, scope: !12566)
!12573 = !DILocation(line: 216, column: 1, scope: !12566)
!12574 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3063, file: !3063, line: 218, type: !12575, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3059, retainedNodes: !12577)
!12575 = !DISubroutineType(types: !12576)
!12576 = !{null, !286, !232}
!12577 = !{!12578, !12579}
!12578 = !DILocalVariable(name: "buf", arg: 1, scope: !12574, file: !3063, line: 218, type: !286)
!12579 = !DILocalVariable(name: "buflen", arg: 2, scope: !12574, file: !3063, line: 218, type: !232)
!12580 = !DILocation(line: 0, scope: !12574)
!12581 = !DILocation(line: 220, column: 1, scope: !12574)
!12582 = distinct !DISubprogram(name: "coredump_query", scope: !3063, file: !3063, line: 222, type: !12583, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3059, retainedNodes: !12585)
!12583 = !DISubroutineType(types: !12584)
!12584 = !{!109, !3062, !107}
!12585 = !{!12586, !12587}
!12586 = !DILocalVariable(name: "query_id", arg: 1, scope: !12582, file: !3063, line: 222, type: !3062)
!12587 = !DILocalVariable(name: "arg", arg: 2, scope: !12582, file: !3063, line: 222, type: !107)
!12588 = !DILocation(line: 0, scope: !12582)
!12589 = !DILocation(line: 224, column: 2, scope: !12582)
!12590 = distinct !DISubprogram(name: "coredump_cmd", scope: !3063, file: !3063, line: 227, type: !12591, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3059, retainedNodes: !12593)
!12591 = !DISubroutineType(types: !12592)
!12592 = !{!109, !3069, !107}
!12593 = !{!12594, !12595}
!12594 = !DILocalVariable(name: "query_id", arg: 1, scope: !12590, file: !3063, line: 227, type: !3069)
!12595 = !DILocalVariable(name: "arg", arg: 2, scope: !12590, file: !3063, line: 227, type: !107)
!12596 = !DILocation(line: 0, scope: !12590)
!12597 = !DILocation(line: 229, column: 2, scope: !12590)
!12598 = distinct !DISubprogram(name: "arch_system_halt", scope: !12599, file: !12599, line: 23, type: !6111, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3059, retainedNodes: !12600)
!12599 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12600 = !{!12601}
!12601 = !DILocalVariable(name: "reason", arg: 1, scope: !12598, file: !12599, line: 23, type: !32)
!12602 = !DILocation(line: 0, scope: !12598)
!12603 = !DILocation(line: 55, column: 2, scope: !12604, inlinedAt: !12608)
!12604 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6100, file: !6100, line: 42, type: !6101, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3059, retainedNodes: !12605)
!12605 = !{!12606, !12607}
!12606 = !DILocalVariable(name: "key", scope: !12604, file: !6100, line: 44, type: !32)
!12607 = !DILocalVariable(name: "tmp", scope: !12604, file: !6100, line: 53, type: !32)
!12608 = distinct !DILocation(line: 31, column: 8, scope: !12598)
!12609 = !{i64 2227826}
!12610 = !DILocation(line: 0, scope: !12604, inlinedAt: !12608)
!12611 = !DILocation(line: 32, column: 2, scope: !12598)
!12612 = !DILocation(line: 32, column: 2, scope: !12613)
!12613 = distinct !DILexicalBlock(scope: !12614, file: !12599, line: 32, column: 2)
!12614 = distinct !DILexicalBlock(scope: !12598, file: !12599, line: 32, column: 2)
!12615 = distinct !{!12615, !12616, !12617}
!12616 = !DILocation(line: 32, column: 2, scope: !12614)
!12617 = !DILocation(line: 34, column: 2, scope: !12614)
!12618 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !12599, file: !12599, line: 39, type: !12619, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3059, retainedNodes: !12621)
!12619 = !DISubroutineType(types: !12620)
!12620 = !{null, !32, !12413}
!12621 = !{!12622, !12623}
!12622 = !DILocalVariable(name: "reason", arg: 1, scope: !12618, file: !12599, line: 39, type: !32)
!12623 = !DILocalVariable(name: "esf", arg: 2, scope: !12618, file: !12599, line: 40, type: !12413)
!12624 = !DILocation(line: 0, scope: !12618)
!12625 = !DILocation(line: 45, column: 2, scope: !12626)
!12626 = distinct !DILexicalBlock(scope: !12627, file: !12599, line: 45, column: 2)
!12627 = distinct !DILexicalBlock(scope: !12628, file: !12599, line: 45, column: 2)
!12628 = distinct !DILexicalBlock(scope: !12629, file: !12599, line: 45, column: 2)
!12629 = distinct !DILexicalBlock(scope: !12618, file: !12599, line: 45, column: 2)
!12630 = !DILocation(line: 46, column: 2, scope: !12618)
!12631 = distinct !DISubprogram(name: "k_fatal_halt", scope: !12599, file: !12599, line: 81, type: !6111, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3059, retainedNodes: !12632)
!12632 = !{!12633}
!12633 = !DILocalVariable(name: "reason", arg: 1, scope: !12631, file: !12599, line: 81, type: !32)
!12634 = !DILocation(line: 0, scope: !12631)
!12635 = !DILocation(line: 83, column: 2, scope: !12631)
!12636 = distinct !DISubprogram(name: "z_fatal_error", scope: !12599, file: !12599, line: 96, type: !12619, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3059, retainedNodes: !12637)
!12637 = !{!12638, !12639, !12640, !12641}
!12638 = !DILocalVariable(name: "reason", arg: 1, scope: !12636, file: !12599, line: 96, type: !32)
!12639 = !DILocalVariable(name: "esf", arg: 2, scope: !12636, file: !12599, line: 96, type: !12413)
!12640 = !DILocalVariable(name: "key", scope: !12636, file: !12599, line: 102, type: !32)
!12641 = !DILocalVariable(name: "thread", scope: !12636, file: !12599, line: 103, type: !12457)
!12642 = !DILocation(line: 0, scope: !12636)
!12643 = !DILocation(line: 55, column: 2, scope: !12604, inlinedAt: !12644)
!12644 = distinct !DILocation(line: 102, column: 21, scope: !12636)
!12645 = !DILocation(line: 0, scope: !12604, inlinedAt: !12644)
!12646 = !DILocation(line: 104, column: 4, scope: !12636)
!12647 = !DILocation(line: 109, column: 2, scope: !12648)
!12648 = distinct !DILexicalBlock(scope: !12649, file: !12599, line: 109, column: 2)
!12649 = distinct !DILexicalBlock(scope: !12650, file: !12599, line: 109, column: 2)
!12650 = distinct !DILexicalBlock(scope: !12651, file: !12599, line: 109, column: 2)
!12651 = distinct !DILexicalBlock(scope: !12636, file: !12599, line: 109, column: 2)
!12652 = !DILocation(line: 119, column: 11, scope: !12653)
!12653 = distinct !DILexicalBlock(scope: !12636, file: !12599, line: 119, column: 6)
!12654 = !DILocation(line: 119, column: 20, scope: !12653)
!12655 = !DILocalVariable(name: "esf", arg: 1, scope: !12656, file: !7473, line: 71, type: !12413)
!12656 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !7473, file: !7473, line: 71, type: !12657, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3059, retainedNodes: !12659)
!12657 = !DISubroutineType(types: !12658)
!12658 = !{!347, !12413}
!12659 = !{!12655}
!12660 = !DILocation(line: 0, scope: !12656, inlinedAt: !12661)
!12661 = distinct !DILocation(line: 119, column: 23, scope: !12653)
!12662 = !DILocation(line: 73, column: 21, scope: !12656, inlinedAt: !12661)
!12663 = !DILocation(line: 73, column: 26, scope: !12656, inlinedAt: !12661)
!12664 = !DILocation(line: 73, column: 9, scope: !12656, inlinedAt: !12661)
!12665 = !DILocation(line: 119, column: 6, scope: !12636)
!12666 = !DILocation(line: 120, column: 3, scope: !12667)
!12667 = distinct !DILexicalBlock(scope: !12668, file: !12599, line: 120, column: 3)
!12668 = distinct !DILexicalBlock(scope: !12669, file: !12599, line: 120, column: 3)
!12669 = distinct !DILexicalBlock(scope: !12670, file: !12599, line: 120, column: 3)
!12670 = distinct !DILexicalBlock(scope: !12671, file: !12599, line: 120, column: 3)
!12671 = distinct !DILexicalBlock(scope: !12653, file: !12599, line: 119, column: 57)
!12672 = !DILocation(line: 121, column: 2, scope: !12671)
!12673 = !DILocation(line: 124, column: 2, scope: !12674)
!12674 = distinct !DILexicalBlock(scope: !12675, file: !12599, line: 124, column: 2)
!12675 = distinct !DILexicalBlock(scope: !12676, file: !12599, line: 124, column: 2)
!12676 = distinct !DILexicalBlock(scope: !12677, file: !12599, line: 124, column: 2)
!12677 = distinct !DILexicalBlock(scope: !12636, file: !12599, line: 124, column: 2)
!12678 = !DILocation(line: 131, column: 2, scope: !12636)
!12679 = !DILocation(line: 0, scope: !12656, inlinedAt: !12680)
!12680 = distinct !DILocation(line: 163, column: 24, scope: !12681)
!12681 = distinct !DILexicalBlock(scope: !12682, file: !12599, line: 163, column: 7)
!12682 = distinct !DILexicalBlock(scope: !12683, file: !12599, line: 160, column: 9)
!12683 = distinct !DILexicalBlock(scope: !12636, file: !12599, line: 146, column: 6)
!12684 = !DILocation(line: 73, column: 21, scope: !12656, inlinedAt: !12680)
!12685 = !DILocation(line: 73, column: 26, scope: !12656, inlinedAt: !12680)
!12686 = !DILocation(line: 73, column: 9, scope: !12656, inlinedAt: !12680)
!12687 = !DILocation(line: 163, column: 7, scope: !12682)
!12688 = !DILocalVariable(name: "key", arg: 1, scope: !12689, file: !6100, line: 84, type: !32)
!12689 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6100, file: !6100, line: 84, type: !6111, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3059, retainedNodes: !12690)
!12690 = !{!12688}
!12691 = !DILocation(line: 0, scope: !12689, inlinedAt: !12692)
!12692 = distinct !DILocation(line: 171, column: 4, scope: !12693)
!12693 = distinct !DILexicalBlock(scope: !12681, file: !12599, line: 163, column: 58)
!12694 = !DILocation(line: 95, column: 2, scope: !12689, inlinedAt: !12692)
!12695 = !{i64 2228643}
!12696 = !DILocation(line: 172, column: 4, scope: !12693)
!12697 = !DILocation(line: 163, column: 21, scope: !12681)
!12698 = !DILocation(line: 178, column: 15, scope: !12699)
!12699 = distinct !DILexicalBlock(scope: !12700, file: !12599, line: 178, column: 8)
!12700 = distinct !DILexicalBlock(scope: !12681, file: !12599, line: 174, column: 10)
!12701 = !DILocation(line: 0, scope: !12689, inlinedAt: !12702)
!12702 = distinct !DILocation(line: 179, column: 5, scope: !12703)
!12703 = distinct !DILexicalBlock(scope: !12699, file: !12599, line: 178, column: 38)
!12704 = !DILocation(line: 0, scope: !12689, inlinedAt: !12705)
!12705 = distinct !DILocation(line: 186, column: 2, scope: !12636)
!12706 = !DILocation(line: 178, column: 8, scope: !12700)
!12707 = !DILocation(line: 189, column: 3, scope: !12708)
!12708 = distinct !DILexicalBlock(scope: !12709, file: !12599, line: 188, column: 41)
!12709 = distinct !DILexicalBlock(scope: !12636, file: !12599, line: 188, column: 6)
!12710 = !DILocation(line: 191, column: 1, scope: !12636)
!12711 = distinct !DISubprogram(name: "k_current_get", scope: !118, file: !118, line: 530, type: !12712, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3059, retainedNodes: !2036)
!12712 = !DISubroutineType(types: !12713)
!12713 = !{!12714}
!12714 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !156, line: 347, baseType: !12457)
!12715 = !DILocation(line: 535, column: 9, scope: !12711)
!12716 = !DILocation(line: 535, column: 2, scope: !12711)
!12717 = distinct !DISubprogram(name: "reason_to_str", scope: !12599, file: !12599, line: 62, type: !12718, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3059, retainedNodes: !12720)
!12718 = !DISubroutineType(types: !12719)
!12719 = !{!279, !32}
!12720 = !{!12721}
!12721 = !DILocalVariable(name: "reason", arg: 1, scope: !12717, file: !12599, line: 62, type: !32)
!12722 = !DILocation(line: 0, scope: !12717)
!12723 = !DILocation(line: 64, column: 2, scope: !12717)
!12724 = !DILocation(line: 0, scope: !12725)
!12725 = distinct !DILexicalBlock(scope: !12717, file: !12599, line: 64, column: 18)
!12726 = !DILocation(line: 78, column: 1, scope: !12717)
!12727 = distinct !DISubprogram(name: "thread_name_get", scope: !12599, file: !12599, line: 51, type: !12728, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3059, retainedNodes: !12730)
!12728 = !DISubroutineType(types: !12729)
!12729 = !{!279, !12457}
!12730 = !{!12731, !12732}
!12731 = !DILocalVariable(name: "thread", arg: 1, scope: !12727, file: !12599, line: 51, type: !12457)
!12732 = !DILocalVariable(name: "thread_name", scope: !12727, file: !12599, line: 53, type: !279)
!12733 = !DILocation(line: 0, scope: !12727)
!12734 = !DILocation(line: 53, column: 36, scope: !12727)
!12735 = !DILocation(line: 53, column: 28, scope: !12727)
!12736 = !DILocation(line: 53, column: 47, scope: !12727)
!12737 = !DILocation(line: 55, column: 19, scope: !12738)
!12738 = distinct !DILexicalBlock(scope: !12727, file: !12599, line: 55, column: 6)
!12739 = !DILocation(line: 55, column: 28, scope: !12738)
!12740 = !DILocation(line: 55, column: 32, scope: !12738)
!12741 = !DILocation(line: 55, column: 47, scope: !12738)
!12742 = !DILocation(line: 55, column: 6, scope: !12727)
!12743 = !DILocation(line: 57, column: 2, scope: !12744)
!12744 = distinct !DILexicalBlock(scope: !12738, file: !12599, line: 55, column: 57)
!12745 = !DILocation(line: 59, column: 2, scope: !12727)
!12746 = distinct !DISubprogram(name: "k_thread_abort", scope: !3238, file: !3238, line: 188, type: !12747, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3059, retainedNodes: !12749)
!12747 = !DISubroutineType(types: !12748)
!12748 = !{null, !12714}
!12749 = !{!12750}
!12750 = !DILocalVariable(name: "thread", arg: 1, scope: !12746, file: !3238, line: 188, type: !12714)
!12751 = !DILocation(line: 0, scope: !12746)
!12752 = !DILocation(line: 197, column: 2, scope: !12753)
!12753 = distinct !DILexicalBlock(scope: !12746, file: !3238, line: 197, column: 2)
!12754 = !{i64 2154850181}
!12755 = !DILocation(line: 198, column: 2, scope: !12746)
!12756 = !DILocation(line: 199, column: 1, scope: !12746)
!12757 = distinct !DISubprogram(name: "z_current_get", scope: !3238, file: !3238, line: 173, type: !12712, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3059, retainedNodes: !2036)
!12758 = !DILocation(line: 180, column: 2, scope: !12759)
!12759 = distinct !DILexicalBlock(scope: !12757, file: !3238, line: 180, column: 2)
!12760 = !{i64 2154850113}
!12761 = !DILocation(line: 181, column: 9, scope: !12757)
!12762 = !DILocation(line: 181, column: 2, scope: !12757)
!12763 = distinct !DISubprogram(name: "z_early_memset", scope: !1835, file: !1835, line: 108, type: !12764, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1831, retainedNodes: !12766)
!12764 = !DISubroutineType(types: !12765)
!12765 = !{null, !107, !109, !232}
!12766 = !{!12767, !12768, !12769}
!12767 = !DILocalVariable(name: "dst", arg: 1, scope: !12763, file: !1835, line: 108, type: !107)
!12768 = !DILocalVariable(name: "c", arg: 2, scope: !12763, file: !1835, line: 108, type: !109)
!12769 = !DILocalVariable(name: "n", arg: 3, scope: !12763, file: !1835, line: 108, type: !232)
!12770 = !DILocation(line: 0, scope: !12763)
!12771 = !DILocation(line: 110, column: 9, scope: !12763)
!12772 = !DILocation(line: 111, column: 1, scope: !12763)
!12773 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1835, file: !1835, line: 121, type: !12774, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1831, retainedNodes: !12776)
!12774 = !DISubroutineType(types: !12775)
!12775 = !{null, !107, !13, !232}
!12776 = !{!12777, !12778, !12779}
!12777 = !DILocalVariable(name: "dst", arg: 1, scope: !12773, file: !1835, line: 121, type: !107)
!12778 = !DILocalVariable(name: "src", arg: 2, scope: !12773, file: !1835, line: 121, type: !13)
!12779 = !DILocalVariable(name: "n", arg: 3, scope: !12773, file: !1835, line: 121, type: !232)
!12780 = !DILocation(line: 0, scope: !12773)
!12781 = !DILocation(line: 123, column: 9, scope: !12773)
!12782 = !DILocation(line: 124, column: 1, scope: !12773)
!12783 = distinct !DISubprogram(name: "z_bss_zero", scope: !1835, file: !1835, line: 132, type: !3096, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1831, retainedNodes: !2036)
!12784 = !DILocation(line: 143, column: 2, scope: !12783)
!12785 = !DILocation(line: 145, column: 2, scope: !12783)
!12786 = !DILocation(line: 168, column: 1, scope: !12783)
!12787 = distinct !DISubprogram(name: "z_init_cpu", scope: !1835, file: !1835, line: 372, type: !8361, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1831, retainedNodes: !12788)
!12788 = !{!12789}
!12789 = !DILocalVariable(name: "id", arg: 1, scope: !12787, file: !1835, line: 372, type: !109)
!12790 = !DILocation(line: 0, scope: !12787)
!12791 = !DILocation(line: 374, column: 2, scope: !12787)
!12792 = !DILocation(line: 375, column: 34, scope: !12787)
!12793 = !DILocation(line: 375, column: 19, scope: !12787)
!12794 = !DILocation(line: 375, column: 31, scope: !12787)
!12795 = !DILocation(line: 376, column: 24, scope: !12787)
!12796 = !DILocation(line: 376, column: 19, scope: !12787)
!12797 = !DILocation(line: 376, column: 22, scope: !12787)
!12798 = !DILocation(line: 378, column: 26, scope: !12787)
!12799 = !DILocation(line: 378, column: 4, scope: !12787)
!12800 = !DILocation(line: 378, column: 50, scope: !12787)
!12801 = !DILocation(line: 377, column: 19, scope: !12787)
!12802 = !DILocation(line: 377, column: 29, scope: !12787)
!12803 = !DILocation(line: 384, column: 1, scope: !12787)
!12804 = distinct !DISubprogram(name: "init_idle_thread", scope: !1835, file: !1835, line: 343, type: !8361, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1831, retainedNodes: !12805)
!12805 = !{!12806, !12807, !12808, !12811}
!12806 = !DILocalVariable(name: "i", arg: 1, scope: !12804, file: !1835, line: 343, type: !109)
!12807 = !DILocalVariable(name: "thread", scope: !12804, file: !1835, line: 345, type: !1927)
!12808 = !DILocalVariable(name: "stack", scope: !12804, file: !1835, line: 346, type: !12809)
!12809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12810, size: 32)
!12810 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3363, line: 44, baseType: !2045)
!12811 = !DILocalVariable(name: "tname", scope: !12804, file: !1835, line: 354, type: !285)
!12812 = !DILocation(line: 0, scope: !12804)
!12813 = !DILocation(line: 345, column: 29, scope: !12804)
!12814 = !DILocation(line: 346, column: 28, scope: !12804)
!12815 = !DILocation(line: 362, column: 37, scope: !12804)
!12816 = !DILocation(line: 362, column: 36, scope: !12804)
!12817 = !DILocation(line: 361, column: 2, scope: !12804)
!12818 = !DILocation(line: 365, column: 2, scope: !12804)
!12819 = !DILocation(line: 370, column: 1, scope: !12804)
!12820 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !145, file: !145, line: 331, type: !12821, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1831, retainedNodes: !12823)
!12821 = !DISubroutineType(types: !12822)
!12822 = !{!285, !12809}
!12823 = !{!12824}
!12824 = !DILocalVariable(name: "sym", arg: 1, scope: !12820, file: !145, line: 331, type: !12809)
!12825 = !DILocation(line: 0, scope: !12820)
!12826 = !DILocation(line: 333, column: 21, scope: !12820)
!12827 = !DILocation(line: 333, column: 2, scope: !12820)
!12828 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12829, file: !12829, line: 155, type: !12830, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1831, retainedNodes: !12832)
!12829 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12830 = !DISubroutineType(types: !12831)
!12831 = !{null, !1927}
!12832 = !{!12833}
!12833 = !DILocalVariable(name: "thread", arg: 1, scope: !12828, file: !12829, line: 155, type: !1927)
!12834 = !DILocation(line: 0, scope: !12828)
!12835 = !DILocation(line: 157, column: 15, scope: !12828)
!12836 = !DILocation(line: 157, column: 28, scope: !12828)
!12837 = !DILocation(line: 158, column: 1, scope: !12828)
!12838 = distinct !DISubprogram(name: "z_cstart", scope: !1835, file: !1835, line: 501, type: !3096, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1831, retainedNodes: !12839)
!12839 = !{!12840}
!12840 = !DILocalVariable(name: "dummy_thread", scope: !12838, file: !1835, line: 518, type: !1928)
!12841 = !DILocation(line: 507, column: 2, scope: !12838)
!12842 = !DILocation(line: 43, column: 14, scope: !12843, inlinedAt: !12847)
!12843 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !12844, file: !12844, line: 40, type: !3096, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1831, retainedNodes: !12845)
!12844 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12845 = !{!12846}
!12846 = !DILocalVariable(name: "msp", scope: !12843, file: !12844, line: 42, type: !110)
!12847 = distinct !DILocation(line: 44, column: 2, scope: !12848, inlinedAt: !12850)
!12848 = distinct !DISubprogram(name: "arch_kernel_init", scope: !12849, file: !12849, line: 42, type: !3096, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1831, retainedNodes: !2036)
!12849 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12850 = distinct !DILocation(line: 510, column: 2, scope: !12838)
!12851 = !DILocation(line: 43, column: 3, scope: !12843, inlinedAt: !12847)
!12852 = !DILocation(line: 43, column: 60, scope: !12843, inlinedAt: !12847)
!12853 = !DILocation(line: 0, scope: !12843, inlinedAt: !12847)
!12854 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !12855, file: !6421, line: 1153, type: !110)
!12855 = distinct !DISubprogram(name: "__set_MSP", scope: !6421, file: !6421, line: 1153, type: !6518, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1831, retainedNodes: !12856)
!12856 = !{!12854}
!12857 = !DILocation(line: 0, scope: !12855, inlinedAt: !12858)
!12858 = distinct !DILocation(line: 46, column: 2, scope: !12843, inlinedAt: !12847)
!12859 = !DILocation(line: 1155, column: 3, scope: !12855, inlinedAt: !12858)
!12860 = !{i64 3564944}
!12861 = !DILocation(line: 62, column: 11, scope: !12843, inlinedAt: !12847)
!12862 = !DILocation(line: 102, column: 2, scope: !12863, inlinedAt: !12864)
!12863 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !7473, file: !7473, line: 97, type: !3096, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1831, retainedNodes: !2036)
!12864 = distinct !DILocation(line: 45, column: 2, scope: !12848, inlinedAt: !12850)
!12865 = !DILocation(line: 108, column: 2, scope: !12863, inlinedAt: !12864)
!12866 = !DILocation(line: 112, column: 2, scope: !12863, inlinedAt: !12864)
!12867 = !DILocation(line: 113, column: 2, scope: !12863, inlinedAt: !12864)
!12868 = !DILocation(line: 114, column: 2, scope: !12863, inlinedAt: !12864)
!12869 = !DILocation(line: 116, column: 2, scope: !12863, inlinedAt: !12864)
!12870 = !DILocation(line: 123, column: 13, scope: !12863, inlinedAt: !12864)
!12871 = !DILocation(line: 46, column: 2, scope: !12848, inlinedAt: !12850)
!12872 = !DILocation(line: 47, column: 2, scope: !12848, inlinedAt: !12850)
!12873 = !DILocation(line: 174, column: 12, scope: !12874, inlinedAt: !12875)
!12874 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !7473, file: !7473, line: 169, type: !3096, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1831, retainedNodes: !2036)
!12875 = distinct !DILocation(line: 48, column: 2, scope: !12848, inlinedAt: !12850)
!12876 = !DILocation(line: 179, column: 12, scope: !12874, inlinedAt: !12875)
!12877 = !DILocation(line: 50, column: 2, scope: !12848, inlinedAt: !12850)
!12878 = !DILocation(line: 57, column: 2, scope: !12848, inlinedAt: !12850)
!12879 = !DILocation(line: 518, column: 2, scope: !12838)
!12880 = !DILocation(line: 518, column: 18, scope: !12838)
!12881 = !DILocation(line: 520, column: 2, scope: !12838)
!12882 = !DILocation(line: 523, column: 2, scope: !12838)
!12883 = !DILocation(line: 526, column: 2, scope: !12838)
!12884 = !DILocation(line: 527, column: 2, scope: !12838)
!12885 = !DILocation(line: 543, column: 24, scope: !12838)
!12886 = !DILocation(line: 543, column: 2, scope: !12838)
!12887 = !DILocation(line: 0, scope: !2068)
!12888 = !DILocation(line: 246, column: 15, scope: !2086)
!12889 = !DILocation(line: 246, column: 36, scope: !2085)
!12890 = !DILocation(line: 246, column: 2, scope: !2086)
!12891 = !DILocation(line: 247, column: 37, scope: !2084)
!12892 = !DILocation(line: 0, scope: !2084)
!12893 = !DILocation(line: 248, column: 19, scope: !2084)
!12894 = !DILocation(line: 248, column: 12, scope: !2084)
!12895 = !DILocation(line: 250, column: 11, scope: !12896)
!12896 = distinct !DILexicalBlock(scope: !2084, file: !1835, line: 250, column: 7)
!12897 = !DILocation(line: 250, column: 7, scope: !2084)
!12898 = !DILocation(line: 254, column: 11, scope: !12899)
!12899 = distinct !DILexicalBlock(scope: !12900, file: !1835, line: 254, column: 8)
!12900 = distinct !DILexicalBlock(scope: !12896, file: !1835, line: 250, column: 20)
!12901 = !DILocation(line: 254, column: 8, scope: !12900)
!12902 = !DILocation(line: 255, column: 9, scope: !12903)
!12903 = distinct !DILexicalBlock(scope: !12899, file: !1835, line: 254, column: 17)
!12904 = !DILocation(line: 258, column: 9, scope: !12903)
!12905 = !DILocation(line: 261, column: 28, scope: !12903)
!12906 = !DILocation(line: 261, column: 10, scope: !12903)
!12907 = !DILocation(line: 261, column: 17, scope: !12903)
!12908 = !DILocation(line: 261, column: 26, scope: !12903)
!12909 = !DILocation(line: 262, column: 4, scope: !12903)
!12910 = !DILocation(line: 263, column: 9, scope: !12900)
!12911 = !DILocation(line: 263, column: 16, scope: !12900)
!12912 = !DILocation(line: 263, column: 28, scope: !12900)
!12913 = !DILocation(line: 264, column: 3, scope: !12900)
!12914 = !DILocation(line: 246, column: 60, scope: !2085)
!12915 = distinct !{!12915, !12890, !12916}
!12916 = !DILocation(line: 265, column: 2, scope: !2086)
!12917 = !DILocation(line: 266, column: 1, scope: !2068)
!12918 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !535, file: !535, line: 1814, type: !6461, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1831, retainedNodes: !12919)
!12919 = !{!12920, !12921}
!12920 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12918, file: !535, line: 1814, type: !792)
!12921 = !DILocalVariable(name: "priority", arg: 2, scope: !12918, file: !535, line: 1814, type: !110)
!12922 = !DILocation(line: 0, scope: !12918)
!12923 = !DILocation(line: 1822, column: 48, scope: !12924)
!12924 = distinct !DILexicalBlock(scope: !12925, file: !535, line: 1821, column: 3)
!12925 = distinct !DILexicalBlock(scope: !12918, file: !535, line: 1816, column: 7)
!12926 = !DILocation(line: 1822, column: 32, scope: !12924)
!12927 = !DILocation(line: 1822, column: 40, scope: !12924)
!12928 = !DILocation(line: 1822, column: 5, scope: !12924)
!12929 = !DILocation(line: 1822, column: 46, scope: !12924)
!12930 = !DILocation(line: 1824, column: 1, scope: !12918)
!12931 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !12849, file: !12849, line: 32, type: !3096, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2036)
!12932 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !12933, file: !12933, line: 215, type: !12830, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1831, retainedNodes: !12934)
!12933 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12934 = !{!12935}
!12935 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !12932, file: !12933, line: 215, type: !1927)
!12936 = !DILocation(line: 0, scope: !12932)
!12937 = !DILocation(line: 217, column: 21, scope: !12932)
!12938 = !DILocation(line: 217, column: 34, scope: !12932)
!12939 = !DILocation(line: 221, column: 21, scope: !12932)
!12940 = !DILocation(line: 221, column: 34, scope: !12932)
!12941 = !DILocation(line: 223, column: 27, scope: !12932)
!12942 = !DILocation(line: 223, column: 33, scope: !12932)
!12943 = !DILocation(line: 224, column: 27, scope: !12932)
!12944 = !DILocation(line: 224, column: 32, scope: !12932)
!12945 = !DILocation(line: 232, column: 16, scope: !12932)
!12946 = !DILocation(line: 232, column: 30, scope: !12932)
!12947 = !DILocation(line: 239, column: 24, scope: !12932)
!12948 = !DILocation(line: 240, column: 1, scope: !12932)
!12949 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1835, file: !1835, line: 399, type: !12950, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1831, retainedNodes: !12952)
!12950 = !DISubroutineType(types: !12951)
!12951 = !{!285}
!12952 = !{!12953}
!12953 = !DILocalVariable(name: "stack_ptr", scope: !12949, file: !1835, line: 401, type: !285)
!12954 = !DILocation(line: 404, column: 2, scope: !12949)
!12955 = !DILocation(line: 416, column: 24, scope: !12949)
!12956 = !DILocation(line: 418, column: 14, scope: !12949)
!12957 = !DILocation(line: 0, scope: !12949)
!12958 = !DILocation(line: 423, column: 2, scope: !12949)
!12959 = !DILocation(line: 424, column: 2, scope: !12949)
!12960 = !DILocation(line: 426, column: 2, scope: !12949)
!12961 = !DILocation(line: 428, column: 2, scope: !12949)
!12962 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1835, file: !1835, line: 432, type: !12963, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1831, retainedNodes: !12965)
!12963 = !DISubroutineType(types: !12964)
!12964 = !{null, !285}
!12965 = !{!12966}
!12966 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !12962, file: !1835, line: 432, type: !285)
!12967 = !DILocation(line: 0, scope: !12962)
!12968 = !DILocation(line: 435, column: 2, scope: !12962)
!12969 = !DILocation(line: 445, column: 2, scope: !12962)
!12970 = distinct !DISubprogram(name: "bg_thread_main", scope: !1835, file: !1835, line: 277, type: !3208, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1831, retainedNodes: !12971)
!12971 = !{!12972, !12973, !12974}
!12972 = !DILocalVariable(name: "unused1", arg: 1, scope: !12970, file: !1835, line: 277, type: !107)
!12973 = !DILocalVariable(name: "unused2", arg: 2, scope: !12970, file: !1835, line: 277, type: !107)
!12974 = !DILocalVariable(name: "unused3", arg: 3, scope: !12970, file: !1835, line: 277, type: !107)
!12975 = !DILocation(line: 0, scope: !12970)
!12976 = !DILocation(line: 291, column: 20, scope: !12970)
!12977 = !DILocation(line: 293, column: 2, scope: !12970)
!12978 = !DILocation(line: 297, column: 2, scope: !12970)
!12979 = !DILocation(line: 305, column: 2, scope: !12970)
!12980 = !DILocation(line: 307, column: 2, scope: !12970)
!12981 = !DILocation(line: 330, column: 8, scope: !12970)
!12982 = !DILocation(line: 333, column: 34, scope: !12970)
!12983 = !DILocation(line: 339, column: 1, scope: !12970)
!12984 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2097, file: !2097, line: 45, type: !12985, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2204, retainedNodes: !12993)
!12985 = !DISubroutineType(types: !12986)
!12986 = !{null, !12987, !107}
!12987 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !118, line: 103, baseType: !12988)
!12988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12989, size: 32)
!12989 = !DISubroutineType(types: !12990)
!12990 = !{null, !12991, !107}
!12991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12992, size: 32)
!12992 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2102)
!12993 = !{!12994, !12995}
!12994 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12984, file: !2097, line: 45, type: !12987)
!12995 = !DILocalVariable(name: "user_data", arg: 2, scope: !12984, file: !2097, line: 45, type: !107)
!12996 = !DILocation(line: 0, scope: !12984)
!12997 = !DILocation(line: 71, column: 1, scope: !12984)
!12998 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2097, file: !2097, line: 73, type: !12985, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2204, retainedNodes: !12999)
!12999 = !{!13000, !13001}
!13000 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12998, file: !2097, line: 73, type: !12987)
!13001 = !DILocalVariable(name: "user_data", arg: 2, scope: !12998, file: !2097, line: 73, type: !107)
!13002 = !DILocation(line: 0, scope: !12998)
!13003 = !DILocation(line: 95, column: 1, scope: !12998)
!13004 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2097, file: !2097, line: 97, type: !7474, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2204, retainedNodes: !2036)
!13005 = !DILocation(line: 1031, column: 3, scope: !13006, inlinedAt: !13009)
!13006 = distinct !DISubprogram(name: "__get_IPSR", scope: !6421, file: !6421, line: 1027, type: !6508, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2204, retainedNodes: !13007)
!13007 = !{!13008}
!13008 = !DILocalVariable(name: "result", scope: !13006, file: !6421, line: 1029, type: !110)
!13009 = distinct !DILocation(line: 48, column: 10, scope: !13010, inlinedAt: !13011)
!13010 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7473, file: !7473, line: 46, type: !7474, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2204, retainedNodes: !2036)
!13011 = distinct !DILocation(line: 99, column: 9, scope: !13004)
!13012 = !{i64 3570595}
!13013 = !DILocation(line: 0, scope: !13006, inlinedAt: !13009)
!13014 = !DILocation(line: 48, column: 9, scope: !13010, inlinedAt: !13011)
!13015 = !DILocation(line: 99, column: 2, scope: !13004)
!13016 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2097, file: !2097, line: 106, type: !3096, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2204, retainedNodes: !2036)
!13017 = !DILocation(line: 108, column: 2, scope: !13016)
!13018 = !DILocation(line: 108, column: 17, scope: !13016)
!13019 = !DILocation(line: 108, column: 30, scope: !13016)
!13020 = !DILocation(line: 109, column: 1, scope: !13016)
!13021 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2097, file: !2097, line: 116, type: !3096, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2204, retainedNodes: !2036)
!13022 = !DILocation(line: 118, column: 2, scope: !13021)
!13023 = !DILocation(line: 118, column: 17, scope: !13021)
!13024 = !DILocation(line: 118, column: 30, scope: !13021)
!13025 = !DILocation(line: 119, column: 1, scope: !13021)
!13026 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2097, file: !2097, line: 126, type: !7474, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2204, retainedNodes: !2036)
!13027 = !DILocation(line: 128, column: 10, scope: !13026)
!13028 = !DILocation(line: 128, column: 25, scope: !13026)
!13029 = !DILocation(line: 128, column: 38, scope: !13026)
!13030 = !DILocation(line: 128, column: 53, scope: !13026)
!13031 = !DILocation(line: 128, column: 2, scope: !13026)
!13032 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2097, file: !2097, line: 187, type: !13033, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2204, retainedNodes: !13035)
!13033 = !DISubroutineType(types: !13034)
!13034 = !{!109, !2101, !279}
!13035 = !{!13036, !13037}
!13036 = !DILocalVariable(name: "thread", arg: 1, scope: !13032, file: !2097, line: 187, type: !2101)
!13037 = !DILocalVariable(name: "value", arg: 2, scope: !13032, file: !2097, line: 187, type: !279)
!13038 = !DILocation(line: 0, scope: !13032)
!13039 = !DILocation(line: 190, column: 13, scope: !13040)
!13040 = distinct !DILexicalBlock(scope: !13032, file: !2097, line: 190, column: 6)
!13041 = !DILocation(line: 190, column: 6, scope: !13032)
!13042 = !DILocation(line: 194, column: 10, scope: !13032)
!13043 = !DILocation(line: 194, column: 2, scope: !13032)
!13044 = !DILocation(line: 195, column: 2, scope: !13032)
!13045 = !DILocation(line: 195, column: 47, scope: !13032)
!13046 = !DILocation(line: 199, column: 2, scope: !13032)
!13047 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2097, file: !2097, line: 238, type: !13048, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2204, retainedNodes: !13050)
!13048 = !DISubroutineType(types: !13049)
!13049 = !{!279, !2101}
!13050 = !{!13051}
!13051 = !DILocalVariable(name: "thread", arg: 1, scope: !13047, file: !2097, line: 238, type: !2101)
!13052 = !DILocation(line: 0, scope: !13047)
!13053 = !DILocation(line: 241, column: 23, scope: !13047)
!13054 = !DILocation(line: 241, column: 2, scope: !13047)
!13055 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2097, file: !2097, line: 248, type: !13056, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2204, retainedNodes: !13058)
!13056 = !DISubroutineType(types: !13057)
!13057 = !{!109, !2100, !285, !232}
!13058 = !{!13059, !13060, !13061}
!13059 = !DILocalVariable(name: "thread", arg: 1, scope: !13055, file: !2097, line: 248, type: !2100)
!13060 = !DILocalVariable(name: "buf", arg: 2, scope: !13055, file: !2097, line: 248, type: !285)
!13061 = !DILocalVariable(name: "size", arg: 3, scope: !13055, file: !2097, line: 248, type: !232)
!13062 = !DILocation(line: 0, scope: !13055)
!13063 = !DILocation(line: 251, column: 15, scope: !13055)
!13064 = !DILocation(line: 251, column: 2, scope: !13055)
!13065 = !DILocation(line: 252, column: 2, scope: !13055)
!13066 = !DILocation(line: 0, scope: !2096)
!13067 = !DILocation(line: 281, column: 11, scope: !13068)
!13068 = distinct !DILexicalBlock(scope: !2096, file: !2097, line: 281, column: 6)
!13069 = !DILocation(line: 281, column: 20, scope: !13068)
!13070 = !DILocation(line: 275, column: 45, scope: !2096)
!13071 = !DILocation(line: 285, column: 10, scope: !2096)
!13072 = !DILocation(line: 0, scope: !2220)
!13073 = !DILocation(line: 293, column: 39, scope: !13074)
!13074 = distinct !DILexicalBlock(scope: !2220, file: !2097, line: 293, column: 2)
!13075 = !DILocation(line: 293, column: 2, scope: !2220)
!13076 = !DILocation(line: 273, column: 14, scope: !2096)
!13077 = !DILocation(line: 309, column: 2, scope: !2096)
!13078 = !DILocation(line: 309, column: 11, scope: !2096)
!13079 = !DILocation(line: 311, column: 2, scope: !2096)
!13080 = !DILocation(line: 293, column: 26, scope: !13074)
!13081 = !DILocation(line: 294, column: 9, scope: !13082)
!13082 = distinct !DILexicalBlock(scope: !13074, file: !2097, line: 293, column: 54)
!13083 = !DILocation(line: 295, column: 21, scope: !13084)
!13084 = distinct !DILexicalBlock(scope: !13082, file: !2097, line: 295, column: 7)
!13085 = !DILocation(line: 295, column: 28, scope: !13084)
!13086 = !DILocation(line: 295, column: 7, scope: !13082)
!13087 = !DILocation(line: 299, column: 25, scope: !13082)
!13088 = !DILocation(line: 299, column: 41, scope: !13082)
!13089 = !DILocation(line: 300, column: 7, scope: !13082)
!13090 = !DILocation(line: 300, column: 26, scope: !13082)
!13091 = !DILocation(line: 299, column: 10, scope: !13082)
!13092 = !DILocation(line: 299, column: 7, scope: !13082)
!13093 = !DILocation(line: 302, column: 16, scope: !13082)
!13094 = !DILocation(line: 304, column: 20, scope: !13095)
!13095 = distinct !DILexicalBlock(scope: !13082, file: !2097, line: 304, column: 7)
!13096 = !DILocation(line: 304, column: 7, scope: !13082)
!13097 = !DILocation(line: 305, column: 26, scope: !13098)
!13098 = distinct !DILexicalBlock(scope: !13095, file: !2097, line: 304, column: 26)
!13099 = !DILocation(line: 305, column: 42, scope: !13098)
!13100 = !DILocation(line: 305, column: 11, scope: !13098)
!13101 = !DILocation(line: 305, column: 8, scope: !13098)
!13102 = !DILocation(line: 306, column: 3, scope: !13098)
!13103 = !DILocation(line: 293, column: 50, scope: !13074)
!13104 = !DILocation(line: 312, column: 1, scope: !2096)
!13105 = distinct !DISubprogram(name: "copy_bytes", scope: !2097, file: !2097, line: 261, type: !13106, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2204, retainedNodes: !13108)
!13106 = !DISubroutineType(types: !13107)
!13107 = !{!232, !285, !232, !279, !232}
!13108 = !{!13109, !13110, !13111, !13112, !13113}
!13109 = !DILocalVariable(name: "dest", arg: 1, scope: !13105, file: !2097, line: 261, type: !285)
!13110 = !DILocalVariable(name: "dest_size", arg: 2, scope: !13105, file: !2097, line: 261, type: !232)
!13111 = !DILocalVariable(name: "src", arg: 3, scope: !13105, file: !2097, line: 261, type: !279)
!13112 = !DILocalVariable(name: "src_size", arg: 4, scope: !13105, file: !2097, line: 261, type: !232)
!13113 = !DILocalVariable(name: "bytes_to_copy", scope: !13105, file: !2097, line: 263, type: !232)
!13114 = !DILocation(line: 0, scope: !13105)
!13115 = !DILocation(line: 265, column: 18, scope: !13105)
!13116 = !DILocation(line: 266, column: 2, scope: !13105)
!13117 = !DILocation(line: 268, column: 2, scope: !13105)
!13118 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2097, file: !2097, line: 383, type: !13119, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2204, retainedNodes: !13121)
!13119 = !DISubroutineType(types: !13120)
!13120 = !{null, !2101}
!13121 = !{!13122}
!13122 = !DILocalVariable(name: "thread", arg: 1, scope: !13118, file: !2097, line: 383, type: !2101)
!13123 = !DILocation(line: 0, scope: !13118)
!13124 = !DILocation(line: 387, column: 2, scope: !13118)
!13125 = !DILocation(line: 388, column: 1, scope: !13118)
!13126 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2097, file: !2097, line: 528, type: !13127, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2204, retainedNodes: !13134)
!13127 = !DISubroutineType(types: !13128)
!13128 = !{!285, !2101, !13129, !232, !3364, !107, !107, !107, !109, !110, !279}
!13129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13130, size: 32)
!13130 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3363, line: 44, baseType: !13131)
!13131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !145, line: 47, size: 8, elements: !13132)
!13132 = !{!13133}
!13133 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13131, file: !145, line: 48, baseType: !148, size: 8)
!13134 = !{!13135, !13136, !13137, !13138, !13139, !13140, !13141, !13142, !13143, !13144, !13145}
!13135 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13126, file: !2097, line: 528, type: !2101)
!13136 = !DILocalVariable(name: "stack", arg: 2, scope: !13126, file: !2097, line: 529, type: !13129)
!13137 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13126, file: !2097, line: 529, type: !232)
!13138 = !DILocalVariable(name: "entry", arg: 4, scope: !13126, file: !2097, line: 530, type: !3364)
!13139 = !DILocalVariable(name: "p1", arg: 5, scope: !13126, file: !2097, line: 531, type: !107)
!13140 = !DILocalVariable(name: "p2", arg: 6, scope: !13126, file: !2097, line: 531, type: !107)
!13141 = !DILocalVariable(name: "p3", arg: 7, scope: !13126, file: !2097, line: 531, type: !107)
!13142 = !DILocalVariable(name: "prio", arg: 8, scope: !13126, file: !2097, line: 532, type: !109)
!13143 = !DILocalVariable(name: "options", arg: 9, scope: !13126, file: !2097, line: 532, type: !110)
!13144 = !DILocalVariable(name: "name", arg: 10, scope: !13126, file: !2097, line: 532, type: !279)
!13145 = !DILocalVariable(name: "stack_ptr", scope: !13126, file: !2097, line: 534, type: !285)
!13146 = !DILocation(line: 0, scope: !13126)
!13147 = !DILocation(line: 536, column: 2, scope: !13148)
!13148 = distinct !DILexicalBlock(scope: !13149, file: !2097, line: 536, column: 2)
!13149 = distinct !DILexicalBlock(scope: !13150, file: !2097, line: 536, column: 2)
!13150 = distinct !DILexicalBlock(scope: !13126, file: !2097, line: 536, column: 2)
!13151 = !DILocation(line: 536, column: 2, scope: !13152)
!13152 = distinct !DILexicalBlock(scope: !13148, file: !2097, line: 536, column: 2)
!13153 = !DILocation(line: 550, column: 28, scope: !13126)
!13154 = !DILocation(line: 550, column: 2, scope: !13126)
!13155 = !DILocation(line: 553, column: 34, scope: !13126)
!13156 = !DILocation(line: 553, column: 2, scope: !13126)
!13157 = !DILocation(line: 554, column: 14, scope: !13126)
!13158 = !DILocation(line: 564, column: 2, scope: !13126)
!13159 = !DILocation(line: 567, column: 14, scope: !13126)
!13160 = !DILocation(line: 567, column: 24, scope: !13126)
!13161 = !DILocation(line: 594, column: 11, scope: !13162)
!13162 = distinct !DILexicalBlock(scope: !13126, file: !2097, line: 594, column: 6)
!13163 = !DILocation(line: 0, scope: !13162)
!13164 = !DILocation(line: 594, column: 6, scope: !13126)
!13165 = !DILocation(line: 595, column: 3, scope: !13166)
!13166 = distinct !DILexicalBlock(scope: !13162, file: !2097, line: 594, column: 20)
!13167 = !DILocation(line: 598, column: 3, scope: !13166)
!13168 = !DILocation(line: 598, column: 52, scope: !13166)
!13169 = !DILocation(line: 599, column: 2, scope: !13166)
!13170 = !DILocation(line: 600, column: 23, scope: !13171)
!13171 = distinct !DILexicalBlock(scope: !13162, file: !2097, line: 599, column: 9)
!13172 = !DILocation(line: 612, column: 7, scope: !13173)
!13173 = distinct !DILexicalBlock(scope: !13126, file: !2097, line: 612, column: 6)
!13174 = !DILocation(line: 612, column: 6, scope: !13126)
!13175 = !DILocation(line: 627, column: 40, scope: !13126)
!13176 = !DILocation(line: 637, column: 2, scope: !13126)
!13177 = !DILocation(line: 613, column: 15, scope: !13178)
!13178 = distinct !DILexicalBlock(scope: !13173, file: !2097, line: 612, column: 17)
!13179 = !DILocation(line: 613, column: 29, scope: !13178)
!13180 = !DILocation(line: 638, column: 1, scope: !13126)
!13181 = distinct !DISubprogram(name: "z_is_idle_thread_entry", scope: !12829, file: !12829, line: 78, type: !13182, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2204, retainedNodes: !13184)
!13182 = !DISubroutineType(types: !13183)
!13183 = !{!347, !107}
!13184 = !{!13185}
!13185 = !DILocalVariable(name: "entry_point", arg: 1, scope: !13181, file: !12829, line: 78, type: !107)
!13186 = !DILocation(line: 0, scope: !13181)
!13187 = !DILocation(line: 80, column: 21, scope: !13181)
!13188 = !DILocation(line: 80, column: 2, scope: !13181)
!13189 = distinct !DISubprogram(name: "z_waitq_init", scope: !13190, file: !13190, line: 47, type: !13191, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2204, retainedNodes: !13193)
!13190 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13191 = !DISubroutineType(types: !13192)
!13192 = !{null, !2132}
!13193 = !{!13194}
!13194 = !DILocalVariable(name: "w", arg: 1, scope: !13189, file: !13190, line: 47, type: !2132)
!13195 = !DILocation(line: 0, scope: !13189)
!13196 = !DILocation(line: 49, column: 21, scope: !13189)
!13197 = !DILocation(line: 49, column: 2, scope: !13189)
!13198 = !DILocation(line: 50, column: 1, scope: !13189)
!13199 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2097, file: !2097, line: 791, type: !13200, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2204, retainedNodes: !13203)
!13200 = !DISubroutineType(types: !13201)
!13201 = !{null, !13202, !109, !110, !32}
!13202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2105, size: 32)
!13203 = !{!13204, !13205, !13206, !13207}
!13204 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13199, file: !2097, line: 791, type: !13202)
!13205 = !DILocalVariable(name: "priority", arg: 2, scope: !13199, file: !2097, line: 791, type: !109)
!13206 = !DILocalVariable(name: "initial_state", arg: 3, scope: !13199, file: !2097, line: 792, type: !110)
!13207 = !DILocalVariable(name: "options", arg: 4, scope: !13199, file: !2097, line: 792, type: !32)
!13208 = !DILocation(line: 0, scope: !13199)
!13209 = !DILocation(line: 795, column: 15, scope: !13199)
!13210 = !DILocation(line: 795, column: 25, scope: !13199)
!13211 = !DILocation(line: 796, column: 30, scope: !13199)
!13212 = !DILocation(line: 796, column: 15, scope: !13199)
!13213 = !DILocation(line: 796, column: 28, scope: !13199)
!13214 = !DILocation(line: 797, column: 30, scope: !13199)
!13215 = !DILocation(line: 797, column: 15, scope: !13199)
!13216 = !DILocation(line: 797, column: 28, scope: !13199)
!13217 = !DILocation(line: 799, column: 22, scope: !13199)
!13218 = !DILocation(line: 799, column: 15, scope: !13199)
!13219 = !DILocation(line: 799, column: 20, scope: !13199)
!13220 = !DILocation(line: 801, column: 15, scope: !13199)
!13221 = !DILocation(line: 801, column: 28, scope: !13199)
!13222 = !DILocation(line: 814, column: 2, scope: !13199)
!13223 = !DILocation(line: 815, column: 1, scope: !13199)
!13224 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2097, file: !2097, line: 449, type: !13225, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2204, retainedNodes: !13227)
!13225 = !DISubroutineType(types: !13226)
!13226 = !{!285, !2101, !13129, !232}
!13227 = !{!13228, !13229, !13230, !13231, !13232, !13233, !13234, !13235}
!13228 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13224, file: !2097, line: 449, type: !2101)
!13229 = !DILocalVariable(name: "stack", arg: 2, scope: !13224, file: !2097, line: 450, type: !13129)
!13230 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13224, file: !2097, line: 450, type: !232)
!13231 = !DILocalVariable(name: "stack_obj_size", scope: !13224, file: !2097, line: 452, type: !232)
!13232 = !DILocalVariable(name: "stack_buf_size", scope: !13224, file: !2097, line: 452, type: !232)
!13233 = !DILocalVariable(name: "stack_ptr", scope: !13224, file: !2097, line: 453, type: !285)
!13234 = !DILocalVariable(name: "stack_buf_start", scope: !13224, file: !2097, line: 453, type: !285)
!13235 = !DILocalVariable(name: "delta", scope: !13224, file: !2097, line: 454, type: !232)
!13236 = !DILocation(line: 0, scope: !13224)
!13237 = !DILocation(line: 465, column: 20, scope: !13238)
!13238 = distinct !DILexicalBlock(scope: !13224, file: !2097, line: 463, column: 2)
!13239 = !DILocation(line: 466, column: 21, scope: !13238)
!13240 = !DILocation(line: 473, column: 28, scope: !13224)
!13241 = !DILocation(line: 514, column: 33, scope: !13224)
!13242 = !DILocation(line: 514, column: 25, scope: !13224)
!13243 = !DILocation(line: 514, column: 31, scope: !13224)
!13244 = !DILocation(line: 515, column: 25, scope: !13224)
!13245 = !DILocation(line: 515, column: 30, scope: !13224)
!13246 = !DILocation(line: 516, column: 25, scope: !13224)
!13247 = !DILocation(line: 516, column: 31, scope: !13224)
!13248 = !DILocation(line: 520, column: 2, scope: !13224)
!13249 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !145, file: !145, line: 331, type: !13250, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2204, retainedNodes: !13252)
!13250 = !DISubroutineType(types: !13251)
!13251 = !{!285, !13129}
!13252 = !{!13253}
!13253 = !DILocalVariable(name: "sym", arg: 1, scope: !13249, file: !145, line: 331, type: !13129)
!13254 = !DILocation(line: 0, scope: !13249)
!13255 = !DILocation(line: 333, column: 21, scope: !13249)
!13256 = !DILocation(line: 333, column: 2, scope: !13249)
!13257 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !13258, file: !13258, line: 40, type: !13259, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2204, retainedNodes: !13261)
!13258 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13259 = !DISubroutineType(types: !13260)
!13260 = !{null, !13202}
!13261 = !{!13262}
!13262 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13257, file: !13258, line: 40, type: !13202)
!13263 = !DILocation(line: 0, scope: !13257)
!13264 = !DILocation(line: 42, column: 31, scope: !13257)
!13265 = !DILocation(line: 42, column: 2, scope: !13257)
!13266 = !DILocation(line: 43, column: 1, scope: !13257)
!13267 = distinct !DISubprogram(name: "z_init_timeout", scope: !13258, file: !13258, line: 25, type: !2158, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2204, retainedNodes: !13268)
!13268 = !{!13269}
!13269 = !DILocalVariable(name: "to", arg: 1, scope: !13267, file: !13258, line: 25, type: !2160)
!13270 = !DILocation(line: 0, scope: !13267)
!13271 = !DILocation(line: 27, column: 22, scope: !13267)
!13272 = !DILocation(line: 27, column: 2, scope: !13267)
!13273 = !DILocation(line: 28, column: 1, scope: !13267)
!13274 = distinct !DISubprogram(name: "sys_dnode_init", scope: !127, file: !127, line: 211, type: !13275, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2204, retainedNodes: !13277)
!13275 = !DISubroutineType(types: !13276)
!13276 = !{null, !2207}
!13277 = !{!13278}
!13278 = !DILocalVariable(name: "node", arg: 1, scope: !13274, file: !127, line: 211, type: !2207)
!13279 = !DILocation(line: 0, scope: !13274)
!13280 = !DILocation(line: 213, column: 8, scope: !13274)
!13281 = !DILocation(line: 213, column: 13, scope: !13274)
!13282 = !DILocation(line: 214, column: 8, scope: !13274)
!13283 = !DILocation(line: 214, column: 13, scope: !13274)
!13284 = !DILocation(line: 215, column: 1, scope: !13274)
!13285 = distinct !DISubprogram(name: "sys_dlist_init", scope: !127, file: !127, line: 197, type: !13286, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2204, retainedNodes: !13289)
!13286 = !DISubroutineType(types: !13287)
!13287 = !{null, !13288}
!13288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2137, size: 32)
!13289 = !{!13290}
!13290 = !DILocalVariable(name: "list", arg: 1, scope: !13285, file: !127, line: 197, type: !13288)
!13291 = !DILocation(line: 0, scope: !13285)
!13292 = !DILocation(line: 199, column: 8, scope: !13285)
!13293 = !DILocation(line: 199, column: 13, scope: !13285)
!13294 = !DILocation(line: 200, column: 8, scope: !13285)
!13295 = !DILocation(line: 200, column: 13, scope: !13285)
!13296 = !DILocation(line: 201, column: 1, scope: !13285)
!13297 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2097, file: !2097, line: 641, type: !13298, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2204, retainedNodes: !13304)
!13298 = !DISubroutineType(types: !13299)
!13299 = !{!2100, !2101, !13129, !232, !3364, !107, !107, !107, !109, !110, !13300}
!13300 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !13301)
!13301 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !13302)
!13302 = !{!13303}
!13303 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13301, file: !104, line: 66, baseType: !103, size: 64)
!13304 = !{!13305, !13306, !13307, !13308, !13309, !13310, !13311, !13312, !13313, !13314}
!13305 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13297, file: !2097, line: 641, type: !2101)
!13306 = !DILocalVariable(name: "stack", arg: 2, scope: !13297, file: !2097, line: 642, type: !13129)
!13307 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13297, file: !2097, line: 643, type: !232)
!13308 = !DILocalVariable(name: "entry", arg: 4, scope: !13297, file: !2097, line: 643, type: !3364)
!13309 = !DILocalVariable(name: "p1", arg: 5, scope: !13297, file: !2097, line: 644, type: !107)
!13310 = !DILocalVariable(name: "p2", arg: 6, scope: !13297, file: !2097, line: 644, type: !107)
!13311 = !DILocalVariable(name: "p3", arg: 7, scope: !13297, file: !2097, line: 644, type: !107)
!13312 = !DILocalVariable(name: "prio", arg: 8, scope: !13297, file: !2097, line: 645, type: !109)
!13313 = !DILocalVariable(name: "options", arg: 9, scope: !13297, file: !2097, line: 645, type: !110)
!13314 = !DILocalVariable(name: "delay", arg: 10, scope: !13297, file: !2097, line: 645, type: !13300)
!13315 = !DILocation(line: 0, scope: !13297)
!13316 = !DILocation(line: 1031, column: 3, scope: !13006, inlinedAt: !13317)
!13317 = distinct !DILocation(line: 48, column: 10, scope: !13010, inlinedAt: !13318)
!13318 = distinct !DILocation(line: 647, column: 2, scope: !13319)
!13319 = distinct !DILexicalBlock(scope: !13320, file: !2097, line: 647, column: 2)
!13320 = distinct !DILexicalBlock(scope: !13297, file: !2097, line: 647, column: 2)
!13321 = !DILocation(line: 0, scope: !13006, inlinedAt: !13317)
!13322 = !DILocation(line: 48, column: 9, scope: !13010, inlinedAt: !13318)
!13323 = !DILocation(line: 647, column: 2, scope: !13320)
!13324 = !DILocation(line: 647, column: 2, scope: !13325)
!13325 = distinct !DILexicalBlock(scope: !13319, file: !2097, line: 647, column: 2)
!13326 = !DILocation(line: 649, column: 2, scope: !13297)
!13327 = !DILocation(line: 652, column: 7, scope: !13328)
!13328 = distinct !DILexicalBlock(scope: !13297, file: !2097, line: 652, column: 6)
!13329 = !DILocation(line: 652, column: 6, scope: !13297)
!13330 = !DILocation(line: 653, column: 3, scope: !13331)
!13331 = distinct !DILexicalBlock(scope: !13328, file: !2097, line: 652, column: 39)
!13332 = !DILocation(line: 654, column: 2, scope: !13331)
!13333 = !DILocation(line: 656, column: 2, scope: !13297)
!13334 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2097, file: !2097, line: 401, type: !13335, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2204, retainedNodes: !13337)
!13335 = !DISubroutineType(types: !13336)
!13336 = !{null, !2101, !13300}
!13337 = !{!13338, !13339}
!13338 = !DILocalVariable(name: "thread", arg: 1, scope: !13334, file: !2097, line: 401, type: !2101)
!13339 = !DILocalVariable(name: "delay", arg: 2, scope: !13334, file: !2097, line: 401, type: !13300)
!13340 = !DILocation(line: 0, scope: !13334)
!13341 = !DILocation(line: 404, column: 6, scope: !13342)
!13342 = distinct !DILexicalBlock(scope: !13334, file: !2097, line: 404, column: 6)
!13343 = !DILocation(line: 404, column: 6, scope: !13334)
!13344 = !DILocation(line: 405, column: 3, scope: !13345)
!13345 = distinct !DILexicalBlock(scope: !13342, file: !2097, line: 404, column: 38)
!13346 = !DILocation(line: 406, column: 2, scope: !13345)
!13347 = !DILocation(line: 407, column: 3, scope: !13348)
!13348 = distinct !DILexicalBlock(scope: !13342, file: !2097, line: 406, column: 9)
!13349 = !DILocation(line: 413, column: 1, scope: !13334)
!13350 = distinct !DISubprogram(name: "k_thread_start", scope: !3238, file: !3238, line: 205, type: !13351, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2204, retainedNodes: !13353)
!13351 = !DISubroutineType(types: !13352)
!13352 = !{null, !2100}
!13353 = !{!13354}
!13354 = !DILocalVariable(name: "thread", arg: 1, scope: !13350, file: !3238, line: 205, type: !2100)
!13355 = !DILocation(line: 0, scope: !13350)
!13356 = !DILocation(line: 214, column: 2, scope: !13357)
!13357 = distinct !DILexicalBlock(scope: !13350, file: !3238, line: 214, column: 2)
!13358 = !{i64 2154875405}
!13359 = !DILocation(line: 215, column: 2, scope: !13350)
!13360 = !DILocation(line: 216, column: 1, scope: !13350)
!13361 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13258, file: !13258, line: 47, type: !13335, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2204, retainedNodes: !13362)
!13362 = !{!13363, !13364}
!13363 = !DILocalVariable(name: "thread", arg: 1, scope: !13361, file: !13258, line: 47, type: !2101)
!13364 = !DILocalVariable(name: "ticks", arg: 2, scope: !13361, file: !13258, line: 47, type: !13300)
!13365 = !DILocation(line: 0, scope: !13361)
!13366 = !DILocation(line: 49, column: 30, scope: !13361)
!13367 = !DILocation(line: 49, column: 2, scope: !13361)
!13368 = !DILocation(line: 50, column: 1, scope: !13361)
!13369 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2097, file: !2097, line: 748, type: !3096, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2204, retainedNodes: !13370)
!13370 = !{!13371, !13389}
!13371 = !DILocalVariable(name: "thread_data", scope: !13372, file: !2097, line: 750, type: !13373)
!13372 = distinct !DILexicalBlock(scope: !13369, file: !2097, line: 750, column: 2)
!13373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13374, size: 32)
!13374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !118, line: 620, size: 384, elements: !13375)
!13375 = !{!13376, !13377, !13378, !13379, !13380, !13381, !13382, !13383, !13384, !13385, !13386, !13388}
!13376 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !13374, file: !118, line: 621, baseType: !2101, size: 32)
!13377 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !13374, file: !118, line: 622, baseType: !13129, size: 32, offset: 32)
!13378 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !13374, file: !118, line: 623, baseType: !32, size: 32, offset: 64)
!13379 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !13374, file: !118, line: 624, baseType: !3364, size: 32, offset: 96)
!13380 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !13374, file: !118, line: 625, baseType: !107, size: 32, offset: 128)
!13381 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !13374, file: !118, line: 626, baseType: !107, size: 32, offset: 160)
!13382 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !13374, file: !118, line: 627, baseType: !107, size: 32, offset: 192)
!13383 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !13374, file: !118, line: 628, baseType: !109, size: 32, offset: 224)
!13384 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !13374, file: !118, line: 629, baseType: !110, size: 32, offset: 256)
!13385 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !13374, file: !118, line: 630, baseType: !766, size: 32, offset: 288)
!13386 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !13374, file: !118, line: 631, baseType: !13387, size: 32, offset: 320)
!13387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3096, size: 32)
!13388 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !13374, file: !118, line: 632, baseType: !279, size: 32, offset: 352)
!13389 = !DILocalVariable(name: "thread_data", scope: !13390, file: !2097, line: 781, type: !13373)
!13390 = distinct !DILexicalBlock(scope: !13369, file: !2097, line: 781, column: 2)
!13391 = !DILocation(line: 0, scope: !13372)
!13392 = !DILocation(line: 750, column: 2, scope: !13393)
!13393 = distinct !DILexicalBlock(scope: !13394, file: !2097, line: 750, column: 2)
!13394 = distinct !DILexicalBlock(scope: !13395, file: !2097, line: 750, column: 2)
!13395 = distinct !DILexicalBlock(scope: !13372, file: !2097, line: 750, column: 2)
!13396 = !DILocation(line: 750, column: 2, scope: !13397)
!13397 = distinct !DILexicalBlock(scope: !13398, file: !2097, line: 750, column: 2)
!13398 = distinct !DILexicalBlock(scope: !13393, file: !2097, line: 750, column: 2)
!13399 = !DILocation(line: 750, column: 2, scope: !13394)
!13400 = !DILocation(line: 750, column: 2, scope: !13372)
!13401 = !DILocation(line: 780, column: 2, scope: !13369)
!13402 = !DILocation(line: 0, scope: !13390)
!13403 = !DILocation(line: 781, column: 2, scope: !13404)
!13404 = distinct !DILexicalBlock(scope: !13405, file: !2097, line: 781, column: 2)
!13405 = distinct !DILexicalBlock(scope: !13406, file: !2097, line: 781, column: 2)
!13406 = distinct !DILexicalBlock(scope: !13390, file: !2097, line: 781, column: 2)
!13407 = !DILocation(line: 752, column: 17, scope: !13408)
!13408 = distinct !DILexicalBlock(scope: !13395, file: !2097, line: 750, column: 38)
!13409 = !DILocation(line: 753, column: 17, scope: !13408)
!13410 = !DILocation(line: 754, column: 17, scope: !13408)
!13411 = !DILocation(line: 755, column: 17, scope: !13408)
!13412 = !DILocation(line: 756, column: 17, scope: !13408)
!13413 = !DILocation(line: 757, column: 17, scope: !13408)
!13414 = !DILocation(line: 758, column: 17, scope: !13408)
!13415 = !DILocation(line: 759, column: 17, scope: !13408)
!13416 = !DILocation(line: 760, column: 17, scope: !13408)
!13417 = !DILocation(line: 761, column: 17, scope: !13408)
!13418 = !DILocation(line: 751, column: 3, scope: !13408)
!13419 = !DILocation(line: 763, column: 16, scope: !13408)
!13420 = !DILocation(line: 763, column: 29, scope: !13408)
!13421 = !DILocation(line: 763, column: 39, scope: !13408)
!13422 = !DILocation(line: 750, column: 2, scope: !13395)
!13423 = !DILocation(line: 750, column: 2, scope: !13398)
!13424 = distinct !{!13424, !13400, !13425}
!13425 = !DILocation(line: 764, column: 2, scope: !13372)
!13426 = !DILocation(line: 781, column: 2, scope: !13427)
!13427 = distinct !DILexicalBlock(scope: !13428, file: !2097, line: 781, column: 2)
!13428 = distinct !DILexicalBlock(scope: !13404, file: !2097, line: 781, column: 2)
!13429 = !DILocation(line: 781, column: 2, scope: !13405)
!13430 = !DILocation(line: 781, column: 2, scope: !13390)
!13431 = !DILocation(line: 787, column: 2, scope: !13369)
!13432 = !DILocation(line: 788, column: 1, scope: !13369)
!13433 = !DILocation(line: 782, column: 20, scope: !13434)
!13434 = distinct !DILexicalBlock(scope: !13435, file: !2097, line: 782, column: 7)
!13435 = distinct !DILexicalBlock(scope: !13406, file: !2097, line: 781, column: 38)
!13436 = !DILocation(line: 782, column: 31, scope: !13434)
!13437 = !DILocation(line: 782, column: 7, scope: !13435)
!13438 = !DILocation(line: 783, column: 37, scope: !13439)
!13439 = distinct !DILexicalBlock(scope: !13434, file: !2097, line: 782, column: 51)
!13440 = !DILocation(line: 784, column: 10, scope: !13439)
!13441 = !DILocation(line: 783, column: 4, scope: !13439)
!13442 = !DILocation(line: 785, column: 3, scope: !13439)
!13443 = !DILocation(line: 781, column: 2, scope: !13406)
!13444 = !DILocation(line: 781, column: 2, scope: !13428)
!13445 = distinct !{!13445, !13430, !13446}
!13446 = !DILocation(line: 786, column: 2, scope: !13390)
!13447 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3279, file: !3279, line: 403, type: !3280, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2204, retainedNodes: !13448)
!13448 = !{!13449}
!13449 = !DILocalVariable(name: "t", arg: 1, scope: !13447, file: !3279, line: 403, type: !111)
!13450 = !DILocation(line: 0, scope: !13447)
!13451 = !DILocalVariable(name: "t", arg: 1, scope: !13452, file: !3279, line: 102, type: !111)
!13452 = distinct !DISubprogram(name: "z_tmcvt", scope: !3279, file: !3279, line: 102, type: !3287, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2204, retainedNodes: !13453)
!13453 = !{!13451, !13454, !13455, !13456, !13457, !13458, !13459, !13460, !13461, !13462, !13463}
!13454 = !DILocalVariable(name: "from_hz", arg: 2, scope: !13452, file: !3279, line: 102, type: !110)
!13455 = !DILocalVariable(name: "to_hz", arg: 3, scope: !13452, file: !3279, line: 103, type: !110)
!13456 = !DILocalVariable(name: "const_hz", arg: 4, scope: !13452, file: !3279, line: 103, type: !347)
!13457 = !DILocalVariable(name: "result32", arg: 5, scope: !13452, file: !3279, line: 104, type: !347)
!13458 = !DILocalVariable(name: "round_up", arg: 6, scope: !13452, file: !3279, line: 104, type: !347)
!13459 = !DILocalVariable(name: "round_off", arg: 7, scope: !13452, file: !3279, line: 105, type: !347)
!13460 = !DILocalVariable(name: "mul_ratio", scope: !13452, file: !3279, line: 107, type: !347)
!13461 = !DILocalVariable(name: "div_ratio", scope: !13452, file: !3279, line: 109, type: !347)
!13462 = !DILocalVariable(name: "off", scope: !13452, file: !3279, line: 116, type: !111)
!13463 = !DILocalVariable(name: "rdivisor", scope: !13464, file: !3279, line: 119, type: !110)
!13464 = distinct !DILexicalBlock(scope: !13465, file: !3279, line: 118, column: 18)
!13465 = distinct !DILexicalBlock(scope: !13452, file: !3279, line: 118, column: 6)
!13466 = !DILocation(line: 0, scope: !13452, inlinedAt: !13467)
!13467 = distinct !DILocation(line: 406, column: 9, scope: !13447)
!13468 = !DILocation(line: 145, column: 13, scope: !13469, inlinedAt: !13467)
!13469 = distinct !DILexicalBlock(scope: !13470, file: !3279, line: 144, column: 10)
!13470 = distinct !DILexicalBlock(scope: !13471, file: !3279, line: 142, column: 7)
!13471 = distinct !DILexicalBlock(scope: !13472, file: !3279, line: 141, column: 24)
!13472 = distinct !DILexicalBlock(scope: !13473, file: !3279, line: 141, column: 13)
!13473 = distinct !DILexicalBlock(scope: !13452, file: !3279, line: 134, column: 6)
!13474 = !DILocation(line: 406, column: 2, scope: !13447)
!13475 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2097, file: !2097, line: 817, type: !4490, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2204, retainedNodes: !13476)
!13476 = !{!13477, !13478, !13479, !13480}
!13477 = !DILocalVariable(name: "entry", arg: 1, scope: !13475, file: !2097, line: 817, type: !3364)
!13478 = !DILocalVariable(name: "p1", arg: 2, scope: !13475, file: !2097, line: 818, type: !107)
!13479 = !DILocalVariable(name: "p2", arg: 3, scope: !13475, file: !2097, line: 818, type: !107)
!13480 = !DILocalVariable(name: "p3", arg: 4, scope: !13475, file: !2097, line: 818, type: !107)
!13481 = !DILocation(line: 0, scope: !13475)
!13482 = !DILocation(line: 822, column: 2, scope: !13475)
!13483 = !DILocation(line: 822, column: 17, scope: !13475)
!13484 = !DILocation(line: 822, column: 30, scope: !13475)
!13485 = !DILocation(line: 823, column: 2, scope: !13475)
!13486 = !DILocation(line: 845, column: 2, scope: !13475)
!13487 = distinct !DISubprogram(name: "z_spin_lock_valid", scope: !2097, file: !2097, line: 853, type: !13488, scopeLine: 854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2204, retainedNodes: !13491)
!13488 = !DISubroutineType(types: !13489)
!13489 = !{!347, !13490}
!13490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2196, size: 32)
!13491 = !{!13492, !13493}
!13492 = !DILocalVariable(name: "l", arg: 1, scope: !13487, file: !2097, line: 853, type: !13490)
!13493 = !DILocalVariable(name: "thread_cpu", scope: !13487, file: !2097, line: 855, type: !22)
!13494 = !DILocation(line: 0, scope: !13487)
!13495 = !DILocation(line: 855, column: 28, scope: !13487)
!13496 = !DILocation(line: 857, column: 17, scope: !13497)
!13497 = distinct !DILexicalBlock(scope: !13487, file: !2097, line: 857, column: 6)
!13498 = !DILocation(line: 857, column: 6, scope: !13487)
!13499 = !DILocation(line: 858, column: 19, scope: !13500)
!13500 = distinct !DILexicalBlock(scope: !13501, file: !2097, line: 858, column: 7)
!13501 = distinct !DILexicalBlock(scope: !13497, file: !2097, line: 857, column: 24)
!13502 = !DILocation(line: 858, column: 42, scope: !13500)
!13503 = !DILocation(line: 858, column: 28, scope: !13500)
!13504 = !DILocation(line: 858, column: 25, scope: !13500)
!13505 = !DILocation(line: 858, column: 7, scope: !13501)
!13506 = !DILocation(line: 862, column: 2, scope: !13487)
!13507 = !DILocation(line: 863, column: 1, scope: !13487)
!13508 = distinct !DISubprogram(name: "z_spin_unlock_valid", scope: !2097, file: !2097, line: 865, type: !13488, scopeLine: 866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2204, retainedNodes: !13509)
!13509 = !{!13510}
!13510 = !DILocalVariable(name: "l", arg: 1, scope: !13508, file: !2097, line: 865, type: !13490)
!13511 = !DILocation(line: 0, scope: !13508)
!13512 = !DILocation(line: 867, column: 9, scope: !13513)
!13513 = distinct !DILexicalBlock(scope: !13508, file: !2097, line: 867, column: 6)
!13514 = !DILocation(line: 867, column: 38, scope: !13513)
!13515 = !DILocation(line: 867, column: 24, scope: !13513)
!13516 = !DILocation(line: 867, column: 54, scope: !13513)
!13517 = !DILocation(line: 867, column: 43, scope: !13513)
!13518 = !DILocation(line: 867, column: 41, scope: !13513)
!13519 = !DILocation(line: 867, column: 20, scope: !13513)
!13520 = !DILocation(line: 867, column: 6, scope: !13508)
!13521 = !DILocation(line: 870, column: 16, scope: !13508)
!13522 = !DILocation(line: 871, column: 2, scope: !13508)
!13523 = !DILocation(line: 872, column: 1, scope: !13508)
!13524 = distinct !DISubprogram(name: "z_spin_lock_set_owner", scope: !2097, file: !2097, line: 874, type: !13525, scopeLine: 875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2204, retainedNodes: !13527)
!13525 = !DISubroutineType(types: !13526)
!13526 = !{null, !13490}
!13527 = !{!13528}
!13528 = !DILocalVariable(name: "l", arg: 1, scope: !13524, file: !2097, line: 874, type: !13490)
!13529 = !DILocation(line: 0, scope: !13524)
!13530 = !DILocation(line: 876, column: 32, scope: !13524)
!13531 = !DILocation(line: 876, column: 18, scope: !13524)
!13532 = !DILocation(line: 876, column: 48, scope: !13524)
!13533 = !DILocation(line: 876, column: 37, scope: !13524)
!13534 = !DILocation(line: 876, column: 35, scope: !13524)
!13535 = !DILocation(line: 876, column: 5, scope: !13524)
!13536 = !DILocation(line: 876, column: 16, scope: !13524)
!13537 = !DILocation(line: 877, column: 1, scope: !13524)
!13538 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2097, file: !2097, line: 888, type: !13539, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2204, retainedNodes: !13541)
!13539 = !DISubroutineType(types: !13540)
!13540 = !{!109, !2101}
!13541 = !{!13542}
!13542 = !DILocalVariable(name: "thread", arg: 1, scope: !13538, file: !2097, line: 888, type: !2101)
!13543 = !DILocation(line: 0, scope: !13538)
!13544 = !DILocation(line: 893, column: 2, scope: !13538)
!13545 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2097, file: !2097, line: 897, type: !13546, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2204, retainedNodes: !13548)
!13546 = !DISubroutineType(types: !13547)
!13547 = !{!109, !2101, !32}
!13548 = !{!13549, !13550}
!13549 = !DILocalVariable(name: "thread", arg: 1, scope: !13545, file: !2097, line: 897, type: !2101)
!13550 = !DILocalVariable(name: "options", arg: 2, scope: !13545, file: !2097, line: 897, type: !32)
!13551 = !DILocation(line: 0, scope: !13545)
!13552 = !DILocation(line: 902, column: 2, scope: !13545)
!13553 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2097, file: !2097, line: 1072, type: !13554, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2204, retainedNodes: !13559)
!13554 = !DISubroutineType(types: !13555)
!13555 = !{!109, !2100, !13556}
!13556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13557, size: 32)
!13557 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !156, line: 234, baseType: !13558)
!13558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !156, line: 192, elements: !2036)
!13559 = !{!13560, !13561}
!13560 = !DILocalVariable(name: "thread", arg: 1, scope: !13553, file: !2097, line: 1072, type: !2100)
!13561 = !DILocalVariable(name: "stats", arg: 2, scope: !13553, file: !2097, line: 1073, type: !13556)
!13562 = !DILocation(line: 0, scope: !13553)
!13563 = !DILocation(line: 1075, column: 14, scope: !13564)
!13564 = distinct !DILexicalBlock(scope: !13553, file: !2097, line: 1075, column: 6)
!13565 = !DILocation(line: 1075, column: 23, scope: !13564)
!13566 = !DILocation(line: 1086, column: 1, scope: !13553)
!13567 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2097, file: !2097, line: 1088, type: !13568, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2204, retainedNodes: !13570)
!13568 = !DISubroutineType(types: !13569)
!13569 = !{!109, !13556}
!13570 = !{!13571}
!13571 = !DILocalVariable(name: "stats", arg: 1, scope: !13567, file: !2097, line: 1088, type: !13556)
!13572 = !DILocation(line: 0, scope: !13567)
!13573 = !DILocation(line: 1094, column: 12, scope: !13574)
!13574 = distinct !DILexicalBlock(scope: !13567, file: !2097, line: 1094, column: 6)
!13575 = !DILocation(line: 1120, column: 1, scope: !13567)
!13576 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !13577, file: !13577, line: 20, type: !3096, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3077, retainedNodes: !2036)
!13577 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13578 = !DILocation(line: 30, column: 2, scope: !13576)
!13579 = !DILocation(line: 31, column: 1, scope: !13576)
!13580 = distinct !DISubprogram(name: "idle", scope: !13577, file: !13577, line: 33, type: !3208, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3077, retainedNodes: !13581)
!13581 = !{!13582, !13583, !13584}
!13582 = !DILocalVariable(name: "unused1", arg: 1, scope: !13580, file: !13577, line: 33, type: !107)
!13583 = !DILocalVariable(name: "unused2", arg: 2, scope: !13580, file: !13577, line: 33, type: !107)
!13584 = !DILocalVariable(name: "unused3", arg: 3, scope: !13580, file: !13577, line: 33, type: !107)
!13585 = !DILocation(line: 0, scope: !13580)
!13586 = !DILocation(line: 39, column: 2, scope: !13587)
!13587 = distinct !DILexicalBlock(scope: !13588, file: !13577, line: 39, column: 2)
!13588 = distinct !DILexicalBlock(scope: !13580, file: !13577, line: 39, column: 2)
!13589 = !DILocation(line: 39, column: 2, scope: !13588)
!13590 = !DILocation(line: 39, column: 2, scope: !13591)
!13591 = distinct !DILexicalBlock(scope: !13587, file: !13577, line: 39, column: 2)
!13592 = !DILocation(line: 55, column: 2, scope: !13593, inlinedAt: !13597)
!13593 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6100, file: !6100, line: 42, type: !6101, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3077, retainedNodes: !13594)
!13594 = !{!13595, !13596}
!13595 = !DILocalVariable(name: "key", scope: !13593, file: !6100, line: 44, type: !32)
!13596 = !DILocalVariable(name: "tmp", scope: !13593, file: !6100, line: 53, type: !32)
!13597 = distinct !DILocation(line: 62, column: 10, scope: !13598)
!13598 = distinct !DILexicalBlock(scope: !13580, file: !13577, line: 41, column: 15)
!13599 = !{i64 2226168}
!13600 = !DILocation(line: 0, scope: !13593, inlinedAt: !13597)
!13601 = !DILocation(line: 86, column: 3, scope: !13598)
!13602 = !DILocation(line: 41, column: 2, scope: !13580)
!13603 = distinct !{!13603, !13602, !13604}
!13604 = !DILocation(line: 105, column: 2, scope: !13580)
!13605 = distinct !DISubprogram(name: "k_cpu_idle", scope: !118, file: !118, line: 5627, type: !3096, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3077, retainedNodes: !2036)
!13606 = !DILocation(line: 5629, column: 2, scope: !13605)
!13607 = !DILocation(line: 5630, column: 1, scope: !13605)
!13608 = !DISubprogram(name: "arch_cpu_idle", scope: !3363, file: !3363, line: 167, type: !3096, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2036)
!13609 = distinct !DISubprogram(name: "z_impl_k_mutex_init", scope: !2332, file: !2332, line: 49, type: !13610, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2224, retainedNodes: !13619)
!13610 = !DISubroutineType(types: !13611)
!13611 = !{!109, !13612}
!13612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13613, size: 32)
!13613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !118, line: 2720, size: 160, elements: !13614)
!13614 = !{!13615, !13616, !13617, !13618}
!13615 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13613, file: !118, line: 2722, baseType: !2260, size: 64)
!13616 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !13613, file: !118, line: 2724, baseType: !2242, size: 32, offset: 64)
!13617 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !13613, file: !118, line: 2727, baseType: !110, size: 32, offset: 96)
!13618 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !13613, file: !118, line: 2730, baseType: !109, size: 32, offset: 128)
!13619 = !{!13620}
!13620 = !DILocalVariable(name: "mutex", arg: 1, scope: !13609, file: !2332, line: 49, type: !13612)
!13621 = !DILocation(line: 0, scope: !13609)
!13622 = !DILocation(line: 51, column: 9, scope: !13609)
!13623 = !DILocation(line: 51, column: 15, scope: !13609)
!13624 = !DILocation(line: 52, column: 9, scope: !13609)
!13625 = !DILocation(line: 52, column: 20, scope: !13609)
!13626 = !DILocation(line: 54, column: 23, scope: !13609)
!13627 = !DILocation(line: 54, column: 2, scope: !13609)
!13628 = !DILocation(line: 60, column: 2, scope: !13609)
!13629 = distinct !DISubprogram(name: "z_waitq_init", scope: !13190, file: !13190, line: 47, type: !13630, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2224, retainedNodes: !13632)
!13630 = !DISubroutineType(types: !13631)
!13631 = !{null, !2259}
!13632 = !{!13633}
!13633 = !DILocalVariable(name: "w", arg: 1, scope: !13629, file: !13190, line: 47, type: !2259)
!13634 = !DILocation(line: 0, scope: !13629)
!13635 = !DILocation(line: 49, column: 21, scope: !13629)
!13636 = !DILocation(line: 49, column: 2, scope: !13629)
!13637 = !DILocation(line: 50, column: 1, scope: !13629)
!13638 = distinct !DISubprogram(name: "sys_dlist_init", scope: !127, file: !127, line: 197, type: !13639, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2224, retainedNodes: !13642)
!13639 = !DISubroutineType(types: !13640)
!13640 = !{null, !13641}
!13641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2264, size: 32)
!13642 = !{!13643}
!13643 = !DILocalVariable(name: "list", arg: 1, scope: !13638, file: !127, line: 197, type: !13641)
!13644 = !DILocation(line: 0, scope: !13638)
!13645 = !DILocation(line: 199, column: 8, scope: !13638)
!13646 = !DILocation(line: 199, column: 13, scope: !13638)
!13647 = !DILocation(line: 200, column: 8, scope: !13638)
!13648 = !DILocation(line: 200, column: 13, scope: !13638)
!13649 = !DILocation(line: 201, column: 1, scope: !13638)
!13650 = distinct !DISubprogram(name: "z_impl_k_mutex_lock", scope: !2332, file: !2332, line: 95, type: !13651, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2224, retainedNodes: !13657)
!13651 = !DISubroutineType(types: !13652)
!13652 = !{!109, !13612, !13653}
!13653 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !13654)
!13654 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !13655)
!13655 = !{!13656}
!13656 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13654, file: !104, line: 66, baseType: !103, size: 64)
!13657 = !{!13658, !13659, !13660, !13661, !13666, !13667, !13668}
!13658 = !DILocalVariable(name: "mutex", arg: 1, scope: !13650, file: !2332, line: 95, type: !13612)
!13659 = !DILocalVariable(name: "timeout", arg: 2, scope: !13650, file: !2332, line: 95, type: !13653)
!13660 = !DILocalVariable(name: "new_prio", scope: !13650, file: !2332, line: 97, type: !109)
!13661 = !DILocalVariable(name: "key", scope: !13650, file: !2332, line: 98, type: !13662)
!13662 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !251, line: 106, baseType: !13663)
!13663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !251, line: 32, size: 32, elements: !13664)
!13664 = !{!13665}
!13665 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13663, file: !251, line: 33, baseType: !109, size: 32)
!13666 = !DILocalVariable(name: "resched", scope: !13650, file: !2332, line: 99, type: !347)
!13667 = !DILocalVariable(name: "got_mutex", scope: !13650, file: !2332, line: 146, type: !109)
!13668 = !DILocalVariable(name: "waiter", scope: !13669, file: !2332, line: 169, type: !2242)
!13669 = distinct !DILexicalBlock(scope: !13670, file: !2332, line: 168, column: 36)
!13670 = distinct !DILexicalBlock(scope: !13650, file: !2332, line: 168, column: 6)
!13671 = !DILocation(line: 0, scope: !13650)
!13672 = !DILocation(line: 1031, column: 3, scope: !13673, inlinedAt: !13676)
!13673 = distinct !DISubprogram(name: "__get_IPSR", scope: !6421, file: !6421, line: 1027, type: !6508, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2224, retainedNodes: !13674)
!13674 = !{!13675}
!13675 = !DILocalVariable(name: "result", scope: !13673, file: !6421, line: 1029, type: !110)
!13676 = distinct !DILocation(line: 48, column: 10, scope: !13677, inlinedAt: !13678)
!13677 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7473, file: !7473, line: 46, type: !7474, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2224, retainedNodes: !2036)
!13678 = distinct !DILocation(line: 101, column: 2, scope: !13679)
!13679 = distinct !DILexicalBlock(scope: !13680, file: !2332, line: 101, column: 2)
!13680 = distinct !DILexicalBlock(scope: !13650, file: !2332, line: 101, column: 2)
!13681 = !{i64 3548189}
!13682 = !DILocation(line: 0, scope: !13673, inlinedAt: !13676)
!13683 = !DILocation(line: 48, column: 9, scope: !13677, inlinedAt: !13678)
!13684 = !DILocation(line: 101, column: 2, scope: !13680)
!13685 = !DILocation(line: 101, column: 2, scope: !13686)
!13686 = distinct !DILexicalBlock(scope: !13679, file: !2332, line: 101, column: 2)
!13687 = !DILocalVariable(name: "l", arg: 1, scope: !13688, file: !251, line: 136, type: !13691)
!13688 = distinct !DISubprogram(name: "k_spin_lock", scope: !251, file: !251, line: 136, type: !13689, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2224, retainedNodes: !13692)
!13689 = !DISubroutineType(types: !13690)
!13690 = !{!13662, !13691}
!13691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2323, size: 32)
!13692 = !{!13687, !13693}
!13693 = !DILocalVariable(name: "k", scope: !13688, file: !251, line: 139, type: !13662)
!13694 = !DILocation(line: 0, scope: !13688, inlinedAt: !13695)
!13695 = distinct !DILocation(line: 105, column: 8, scope: !13650)
!13696 = !DILocation(line: 55, column: 2, scope: !13697, inlinedAt: !13701)
!13697 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6100, file: !6100, line: 42, type: !6101, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2224, retainedNodes: !13698)
!13698 = !{!13699, !13700}
!13699 = !DILocalVariable(name: "key", scope: !13697, file: !6100, line: 44, type: !32)
!13700 = !DILocalVariable(name: "tmp", scope: !13697, file: !6100, line: 53, type: !32)
!13701 = distinct !DILocation(line: 145, column: 10, scope: !13688, inlinedAt: !13695)
!13702 = !{i64 2230576}
!13703 = !DILocation(line: 0, scope: !13697, inlinedAt: !13701)
!13704 = !DILocation(line: 148, column: 2, scope: !13705, inlinedAt: !13695)
!13705 = distinct !DILexicalBlock(scope: !13706, file: !251, line: 148, column: 2)
!13706 = distinct !DILexicalBlock(scope: !13688, file: !251, line: 148, column: 2)
!13707 = !DILocation(line: 148, column: 2, scope: !13706, inlinedAt: !13695)
!13708 = !DILocation(line: 148, column: 2, scope: !13709, inlinedAt: !13695)
!13709 = distinct !DILexicalBlock(scope: !13705, file: !251, line: 148, column: 2)
!13710 = !DILocation(line: 160, column: 2, scope: !13688, inlinedAt: !13695)
!13711 = !DILocation(line: 107, column: 6, scope: !13712)
!13712 = distinct !DILexicalBlock(scope: !13650, file: !2332, line: 107, column: 6)
!13713 = !DILocation(line: 107, column: 6, scope: !13650)
!13714 = !{!"branch_weights", i32 2000, i32 1}
!13715 = !DILocation(line: 110, column: 6, scope: !13716)
!13716 = distinct !DILexicalBlock(scope: !13712, file: !2332, line: 107, column: 71)
!13717 = !DILocation(line: 110, column: 21, scope: !13716)
!13718 = !DILocation(line: 109, column: 28, scope: !13716)
!13719 = !DILocation(line: 111, column: 13, scope: !13716)
!13720 = !DILocation(line: 114, column: 18, scope: !13716)
!13721 = !DILocation(line: 109, column: 10, scope: !13716)
!13722 = !DILocation(line: 109, column: 26, scope: !13716)
!13723 = !DILocation(line: 113, column: 20, scope: !13716)
!13724 = !DILocation(line: 114, column: 10, scope: !13716)
!13725 = !DILocation(line: 114, column: 16, scope: !13716)
!13726 = !DILocalVariable(name: "key", arg: 2, scope: !13727, file: !251, line: 190, type: !13662)
!13727 = distinct !DISubprogram(name: "k_spin_unlock", scope: !251, file: !251, line: 189, type: !13728, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2224, retainedNodes: !13730)
!13728 = !DISubroutineType(types: !13729)
!13729 = !{null, !13691, !13662}
!13730 = !{!13731, !13726}
!13731 = !DILocalVariable(name: "l", arg: 1, scope: !13727, file: !251, line: 189, type: !13691)
!13732 = !DILocation(line: 0, scope: !13727, inlinedAt: !13733)
!13733 = distinct !DILocation(line: 120, column: 3, scope: !13716)
!13734 = !DILocation(line: 194, column: 2, scope: !13735, inlinedAt: !13733)
!13735 = distinct !DILexicalBlock(scope: !13736, file: !251, line: 194, column: 2)
!13736 = distinct !DILexicalBlock(scope: !13727, file: !251, line: 194, column: 2)
!13737 = !DILocation(line: 194, column: 2, scope: !13736, inlinedAt: !13733)
!13738 = !DILocation(line: 194, column: 2, scope: !13739, inlinedAt: !13733)
!13739 = distinct !DILexicalBlock(scope: !13735, file: !251, line: 194, column: 2)
!13740 = !DILocalVariable(name: "key", arg: 1, scope: !13741, file: !6100, line: 84, type: !32)
!13741 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6100, file: !6100, line: 84, type: !6111, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2224, retainedNodes: !13742)
!13742 = !{!13740}
!13743 = !DILocation(line: 0, scope: !13741, inlinedAt: !13744)
!13744 = distinct !DILocation(line: 215, column: 2, scope: !13727, inlinedAt: !13733)
!13745 = !DILocation(line: 95, column: 2, scope: !13741, inlinedAt: !13744)
!13746 = !{i64 2231393}
!13747 = !DILocation(line: 124, column: 3, scope: !13716)
!13748 = !DILocation(line: 127, column: 6, scope: !13749)
!13749 = distinct !DILexicalBlock(scope: !13650, file: !2332, line: 127, column: 6)
!13750 = !DILocation(line: 127, column: 6, scope: !13650)
!13751 = !{!"branch_weights", i32 1, i32 2000}
!13752 = !DILocation(line: 0, scope: !13727, inlinedAt: !13753)
!13753 = distinct !DILocation(line: 128, column: 3, scope: !13754)
!13754 = distinct !DILexicalBlock(scope: !13749, file: !2332, line: 127, column: 50)
!13755 = !DILocation(line: 194, column: 2, scope: !13735, inlinedAt: !13753)
!13756 = !DILocation(line: 194, column: 2, scope: !13736, inlinedAt: !13753)
!13757 = !DILocation(line: 194, column: 2, scope: !13739, inlinedAt: !13753)
!13758 = !DILocation(line: 0, scope: !13741, inlinedAt: !13759)
!13759 = distinct !DILocation(line: 215, column: 2, scope: !13727, inlinedAt: !13753)
!13760 = !DILocation(line: 95, column: 2, scope: !13741, inlinedAt: !13759)
!13761 = !DILocation(line: 132, column: 3, scope: !13754)
!13762 = !DILocation(line: 137, column: 53, scope: !13650)
!13763 = !DILocation(line: 137, column: 38, scope: !13650)
!13764 = !DILocation(line: 138, column: 29, scope: !13650)
!13765 = !DILocation(line: 138, column: 10, scope: !13650)
!13766 = !DILocation(line: 137, column: 13, scope: !13650)
!13767 = !DILocation(line: 142, column: 6, scope: !13768)
!13768 = distinct !DILexicalBlock(scope: !13650, file: !2332, line: 142, column: 6)
!13769 = !DILocation(line: 142, column: 6, scope: !13650)
!13770 = !DILocation(line: 143, column: 13, scope: !13771)
!13771 = distinct !DILexicalBlock(scope: !13768, file: !2332, line: 142, column: 59)
!13772 = !DILocation(line: 144, column: 2, scope: !13771)
!13773 = !DILocation(line: 146, column: 50, scope: !13650)
!13774 = !DILocation(line: 146, column: 18, scope: !13650)
!13775 = !DILocation(line: 153, column: 16, scope: !13776)
!13776 = distinct !DILexicalBlock(scope: !13650, file: !2332, line: 153, column: 6)
!13777 = !DILocation(line: 153, column: 6, scope: !13650)
!13778 = !DILocation(line: 0, scope: !13688, inlinedAt: !13779)
!13779 = distinct !DILocation(line: 162, column: 8, scope: !13650)
!13780 = !DILocation(line: 55, column: 2, scope: !13697, inlinedAt: !13781)
!13781 = distinct !DILocation(line: 145, column: 10, scope: !13688, inlinedAt: !13779)
!13782 = !DILocation(line: 0, scope: !13697, inlinedAt: !13781)
!13783 = !DILocation(line: 148, column: 2, scope: !13705, inlinedAt: !13779)
!13784 = !DILocation(line: 148, column: 2, scope: !13706, inlinedAt: !13779)
!13785 = !DILocation(line: 148, column: 2, scope: !13709, inlinedAt: !13779)
!13786 = !DILocation(line: 160, column: 2, scope: !13688, inlinedAt: !13779)
!13787 = !DILocation(line: 168, column: 6, scope: !13670)
!13788 = !DILocation(line: 168, column: 6, scope: !13650)
!13789 = !DILocation(line: 169, column: 29, scope: !13669)
!13790 = !DILocation(line: 0, scope: !13669)
!13791 = !DILocation(line: 171, column: 22, scope: !13669)
!13792 = !DILocation(line: 171, column: 14, scope: !13669)
!13793 = !DILocation(line: 172, column: 42, scope: !13669)
!13794 = !DILocation(line: 172, column: 29, scope: !13669)
!13795 = !DILocation(line: 172, column: 55, scope: !13669)
!13796 = !DILocation(line: 172, column: 4, scope: !13669)
!13797 = !DILocation(line: 173, column: 11, scope: !13669)
!13798 = !DILocation(line: 177, column: 13, scope: !13669)
!13799 = !DILocation(line: 177, column: 48, scope: !13669)
!13800 = !DILocation(line: 180, column: 6, scope: !13650)
!13801 = !DILocation(line: 181, column: 3, scope: !13802)
!13802 = distinct !DILexicalBlock(scope: !13803, file: !2332, line: 180, column: 15)
!13803 = distinct !DILexicalBlock(scope: !13650, file: !2332, line: 180, column: 6)
!13804 = !DILocation(line: 182, column: 2, scope: !13802)
!13805 = !DILocation(line: 0, scope: !13727, inlinedAt: !13806)
!13806 = distinct !DILocation(line: 183, column: 3, scope: !13807)
!13807 = distinct !DILexicalBlock(scope: !13803, file: !2332, line: 182, column: 9)
!13808 = !DILocation(line: 194, column: 2, scope: !13735, inlinedAt: !13806)
!13809 = !DILocation(line: 194, column: 2, scope: !13736, inlinedAt: !13806)
!13810 = !DILocation(line: 194, column: 2, scope: !13739, inlinedAt: !13806)
!13811 = !DILocation(line: 0, scope: !13741, inlinedAt: !13812)
!13812 = distinct !DILocation(line: 215, column: 2, scope: !13727, inlinedAt: !13806)
!13813 = !DILocation(line: 95, column: 2, scope: !13741, inlinedAt: !13812)
!13814 = !DILocation(line: 189, column: 1, scope: !13650)
!13815 = distinct !DISubprogram(name: "new_prio_for_inheritance", scope: !2332, file: !2332, line: 72, type: !13816, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2224, retainedNodes: !13818)
!13816 = !DISubroutineType(types: !13817)
!13817 = !{!766, !766, !766}
!13818 = !{!13819, !13820, !13821}
!13819 = !DILocalVariable(name: "target", arg: 1, scope: !13815, file: !2332, line: 72, type: !766)
!13820 = !DILocalVariable(name: "limit", arg: 2, scope: !13815, file: !2332, line: 72, type: !766)
!13821 = !DILocalVariable(name: "new_prio", scope: !13815, file: !2332, line: 74, type: !109)
!13822 = !DILocation(line: 0, scope: !13815)
!13823 = !DILocation(line: 74, column: 17, scope: !13815)
!13824 = !DILocation(line: 76, column: 13, scope: !13815)
!13825 = !DILocation(line: 78, column: 2, scope: !13815)
!13826 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !12829, file: !12829, line: 211, type: !13827, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2224, retainedNodes: !13829)
!13827 = !DISubroutineType(types: !13828)
!13828 = !{!347, !109, !109}
!13829 = !{!13830, !13831}
!13830 = !DILocalVariable(name: "prio", arg: 1, scope: !13826, file: !12829, line: 211, type: !109)
!13831 = !DILocalVariable(name: "test_prio", arg: 2, scope: !13826, file: !12829, line: 211, type: !109)
!13832 = !DILocation(line: 0, scope: !13826)
!13833 = !DILocation(line: 213, column: 9, scope: !13826)
!13834 = !DILocation(line: 213, column: 2, scope: !13826)
!13835 = distinct !DISubprogram(name: "adjust_owner_prio", scope: !2332, file: !2332, line: 81, type: !13836, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2224, retainedNodes: !13838)
!13836 = !DISubroutineType(types: !13837)
!13837 = !{!347, !13612, !766}
!13838 = !{!13839, !13840}
!13839 = !DILocalVariable(name: "mutex", arg: 1, scope: !13835, file: !2332, line: 81, type: !13612)
!13840 = !DILocalVariable(name: "new_prio", arg: 2, scope: !13835, file: !2332, line: 81, type: !766)
!13841 = !DILocation(line: 0, scope: !13835)
!13842 = !DILocation(line: 83, column: 13, scope: !13843)
!13843 = distinct !DILexicalBlock(scope: !13835, file: !2332, line: 83, column: 6)
!13844 = !DILocation(line: 83, column: 25, scope: !13843)
!13845 = !DILocation(line: 83, column: 6, scope: !13843)
!13846 = !DILocation(line: 83, column: 30, scope: !13843)
!13847 = !DILocation(line: 83, column: 6, scope: !13835)
!13848 = !DILocation(line: 90, column: 10, scope: !13849)
!13849 = distinct !DILexicalBlock(scope: !13843, file: !2332, line: 83, column: 43)
!13850 = !DILocation(line: 90, column: 3, scope: !13849)
!13851 = !DILocation(line: 93, column: 1, scope: !13835)
!13852 = distinct !DISubprogram(name: "z_waitq_head", scope: !13190, file: !13190, line: 52, type: !13853, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2224, retainedNodes: !13855)
!13853 = !DISubroutineType(types: !13854)
!13854 = !{!2242, !2259}
!13855 = !{!13856}
!13856 = !DILocalVariable(name: "w", arg: 1, scope: !13852, file: !13190, line: 52, type: !2259)
!13857 = !DILocation(line: 0, scope: !13852)
!13858 = !DILocation(line: 54, column: 52, scope: !13852)
!13859 = !DILocation(line: 54, column: 28, scope: !13852)
!13860 = !DILocation(line: 54, column: 9, scope: !13852)
!13861 = !DILocation(line: 54, column: 2, scope: !13852)
!13862 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !127, file: !127, line: 294, type: !13863, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2224, retainedNodes: !13865)
!13863 = !DISubroutineType(types: !13864)
!13864 = !{!2227, !13641}
!13865 = !{!13866}
!13866 = !DILocalVariable(name: "list", arg: 1, scope: !13862, file: !127, line: 294, type: !13641)
!13867 = !DILocation(line: 0, scope: !13862)
!13868 = !DILocation(line: 296, column: 9, scope: !13862)
!13869 = !DILocation(line: 296, column: 49, scope: !13862)
!13870 = !DILocation(line: 296, column: 2, scope: !13862)
!13871 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !127, file: !127, line: 266, type: !13872, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2224, retainedNodes: !13874)
!13872 = !DISubroutineType(types: !13873)
!13873 = !{!347, !13641}
!13874 = !{!13875}
!13875 = !DILocalVariable(name: "list", arg: 1, scope: !13871, file: !127, line: 266, type: !13641)
!13876 = !DILocation(line: 0, scope: !13871)
!13877 = !DILocation(line: 268, column: 15, scope: !13871)
!13878 = !DILocation(line: 268, column: 20, scope: !13871)
!13879 = !DILocation(line: 268, column: 2, scope: !13871)
!13880 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !12829, file: !12829, line: 206, type: !13827, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2224, retainedNodes: !13881)
!13881 = !{!13882, !13883}
!13882 = !DILocalVariable(name: "prio1", arg: 1, scope: !13880, file: !12829, line: 206, type: !109)
!13883 = !DILocalVariable(name: "prio2", arg: 2, scope: !13880, file: !12829, line: 206, type: !109)
!13884 = !DILocation(line: 0, scope: !13880)
!13885 = !DILocation(line: 208, column: 15, scope: !13880)
!13886 = !DILocation(line: 208, column: 2, scope: !13880)
!13887 = distinct !DISubprogram(name: "z_get_new_prio_with_ceiling", scope: !12829, file: !12829, line: 186, type: !303, scopeLine: 187, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2224, retainedNodes: !13888)
!13888 = !{!13889}
!13889 = !DILocalVariable(name: "prio", arg: 1, scope: !13887, file: !12829, line: 186, type: !109)
!13890 = !DILocation(line: 0, scope: !13887)
!13891 = !DILocation(line: 188, column: 9, scope: !13887)
!13892 = !DILocation(line: 188, column: 2, scope: !13887)
!13893 = distinct !DISubprogram(name: "z_is_under_prio_ceiling", scope: !12829, file: !12829, line: 181, type: !13894, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2224, retainedNodes: !13896)
!13894 = !DISubroutineType(types: !13895)
!13895 = !{!347, !109}
!13896 = !{!13897}
!13897 = !DILocalVariable(name: "prio", arg: 1, scope: !13893, file: !12829, line: 181, type: !109)
!13898 = !DILocation(line: 0, scope: !13893)
!13899 = !DILocation(line: 183, column: 14, scope: !13893)
!13900 = !DILocation(line: 183, column: 2, scope: !13893)
!13901 = distinct !DISubprogram(name: "z_impl_k_mutex_unlock", scope: !2332, file: !2332, line: 201, type: !13610, scopeLine: 202, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2224, retainedNodes: !13902)
!13902 = !{!13903, !13904, !13905, !13906}
!13903 = !DILocalVariable(name: "mutex", arg: 1, scope: !13901, file: !2332, line: 201, type: !13612)
!13904 = !DILocalVariable(name: "new_owner", scope: !13901, file: !2332, line: 203, type: !2242)
!13905 = !DILocalVariable(name: "key", scope: !13901, file: !2332, line: 242, type: !13662)
!13906 = !DILabel(scope: !13901, name: "k_mutex_unlock_return", file: !2332, line: 270)
!13907 = !DILocation(line: 0, scope: !13901)
!13908 = !DILocation(line: 1031, column: 3, scope: !13673, inlinedAt: !13909)
!13909 = distinct !DILocation(line: 48, column: 10, scope: !13677, inlinedAt: !13910)
!13910 = distinct !DILocation(line: 205, column: 2, scope: !13911)
!13911 = distinct !DILexicalBlock(scope: !13912, file: !2332, line: 205, column: 2)
!13912 = distinct !DILexicalBlock(scope: !13901, file: !2332, line: 205, column: 2)
!13913 = !DILocation(line: 0, scope: !13673, inlinedAt: !13909)
!13914 = !DILocation(line: 48, column: 9, scope: !13677, inlinedAt: !13910)
!13915 = !DILocation(line: 205, column: 2, scope: !13912)
!13916 = !DILocation(line: 205, column: 2, scope: !13917)
!13917 = distinct !DILexicalBlock(scope: !13911, file: !2332, line: 205, column: 2)
!13918 = !DILocation(line: 209, column: 2, scope: !13919)
!13919 = distinct !DILexicalBlock(scope: !13901, file: !2332, line: 209, column: 2)
!13920 = !DILocation(line: 209, column: 2, scope: !13901)
!13921 = !DILocation(line: 217, column: 2, scope: !13922)
!13922 = distinct !DILexicalBlock(scope: !13901, file: !2332, line: 217, column: 2)
!13923 = !DILocation(line: 217, column: 2, scope: !13901)
!13924 = !DILocation(line: 229, column: 2, scope: !13925)
!13925 = distinct !DILexicalBlock(scope: !13926, file: !2332, line: 229, column: 2)
!13926 = distinct !DILexicalBlock(scope: !13901, file: !2332, line: 229, column: 2)
!13927 = !DILocation(line: 229, column: 2, scope: !13926)
!13928 = !DILocation(line: 229, column: 2, scope: !13929)
!13929 = distinct !DILexicalBlock(scope: !13925, file: !2332, line: 229, column: 2)
!13930 = !DILocation(line: 238, column: 20, scope: !13931)
!13931 = distinct !DILexicalBlock(scope: !13932, file: !2332, line: 237, column: 30)
!13932 = distinct !DILexicalBlock(scope: !13901, file: !2332, line: 237, column: 6)
!13933 = !DILocation(line: 239, column: 3, scope: !13931)
!13934 = !DILocation(line: 0, scope: !13688, inlinedAt: !13935)
!13935 = distinct !DILocation(line: 242, column: 25, scope: !13901)
!13936 = !DILocation(line: 55, column: 2, scope: !13697, inlinedAt: !13937)
!13937 = distinct !DILocation(line: 145, column: 10, scope: !13688, inlinedAt: !13935)
!13938 = !DILocation(line: 0, scope: !13697, inlinedAt: !13937)
!13939 = !DILocation(line: 148, column: 2, scope: !13705, inlinedAt: !13935)
!13940 = !DILocation(line: 148, column: 2, scope: !13706, inlinedAt: !13935)
!13941 = !DILocation(line: 148, column: 2, scope: !13709, inlinedAt: !13935)
!13942 = !DILocation(line: 160, column: 2, scope: !13688, inlinedAt: !13935)
!13943 = !DILocation(line: 244, column: 34, scope: !13901)
!13944 = !DILocation(line: 244, column: 2, scope: !13901)
!13945 = !DILocation(line: 247, column: 44, scope: !13901)
!13946 = !DILocation(line: 247, column: 14, scope: !13901)
!13947 = !DILocation(line: 249, column: 15, scope: !13901)
!13948 = !DILocation(line: 254, column: 16, scope: !13949)
!13949 = distinct !DILexicalBlock(scope: !13901, file: !2332, line: 254, column: 6)
!13950 = !DILocation(line: 254, column: 6, scope: !13901)
!13951 = !DILocation(line: 260, column: 44, scope: !13952)
!13952 = distinct !DILexicalBlock(scope: !13949, file: !2332, line: 254, column: 25)
!13953 = !DILocation(line: 260, column: 28, scope: !13952)
!13954 = !DILocation(line: 260, column: 26, scope: !13952)
!13955 = !DILocalVariable(name: "thread", arg: 1, scope: !13956, file: !12849, line: 65, type: !2242)
!13956 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12849, file: !12849, line: 65, type: !13957, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2224, retainedNodes: !13959)
!13957 = !DISubroutineType(types: !13958)
!13958 = !{null, !2242, !32}
!13959 = !{!13955, !13960}
!13960 = !DILocalVariable(name: "value", arg: 2, scope: !13956, file: !12849, line: 65, type: !32)
!13961 = !DILocation(line: 0, scope: !13956, inlinedAt: !13962)
!13962 = distinct !DILocation(line: 261, column: 3, scope: !13952)
!13963 = !DILocation(line: 67, column: 15, scope: !13956, inlinedAt: !13962)
!13964 = !DILocation(line: 67, column: 33, scope: !13956, inlinedAt: !13962)
!13965 = !DILocation(line: 262, column: 3, scope: !13952)
!13966 = !DILocation(line: 263, column: 3, scope: !13952)
!13967 = !DILocation(line: 264, column: 2, scope: !13952)
!13968 = !DILocation(line: 265, column: 21, scope: !13969)
!13969 = distinct !DILexicalBlock(scope: !13949, file: !2332, line: 264, column: 9)
!13970 = !DILocation(line: 0, scope: !13727, inlinedAt: !13971)
!13971 = distinct !DILocation(line: 266, column: 3, scope: !13969)
!13972 = !DILocation(line: 194, column: 2, scope: !13735, inlinedAt: !13971)
!13973 = !DILocation(line: 194, column: 2, scope: !13736, inlinedAt: !13971)
!13974 = !DILocation(line: 194, column: 2, scope: !13739, inlinedAt: !13971)
!13975 = !DILocation(line: 0, scope: !13741, inlinedAt: !13976)
!13976 = distinct !DILocation(line: 215, column: 2, scope: !13727, inlinedAt: !13971)
!13977 = !DILocation(line: 95, column: 2, scope: !13741, inlinedAt: !13976)
!13978 = !DILocation(line: 274, column: 1, scope: !13901)
!13979 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2446, file: !2446, line: 93, type: !13980, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !13982)
!13980 = !DISubroutineType(types: !13981)
!13981 = !{!766, !2338, !2338}
!13982 = !{!13983, !13984, !13985, !13986}
!13983 = !DILocalVariable(name: "thread_1", arg: 1, scope: !13979, file: !2446, line: 93, type: !2338)
!13984 = !DILocalVariable(name: "thread_2", arg: 2, scope: !13979, file: !2446, line: 94, type: !2338)
!13985 = !DILocalVariable(name: "b1", scope: !13979, file: !2446, line: 97, type: !766)
!13986 = !DILocalVariable(name: "b2", scope: !13979, file: !2446, line: 98, type: !766)
!13987 = !DILocation(line: 0, scope: !13979)
!13988 = !DILocation(line: 97, column: 30, scope: !13979)
!13989 = !DILocation(line: 98, column: 30, scope: !13979)
!13990 = !DILocation(line: 100, column: 9, scope: !13991)
!13991 = distinct !DILexicalBlock(scope: !13979, file: !2446, line: 100, column: 6)
!13992 = !DILocation(line: 100, column: 6, scope: !13979)
!13993 = !DILocation(line: 125, column: 1, scope: !13979)
!13994 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2446, file: !2446, line: 428, type: !13995, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !13997)
!13995 = !DISubroutineType(types: !13996)
!13996 = !{null, !2338}
!13997 = !{!13998}
!13998 = !DILocalVariable(name: "curr", arg: 1, scope: !13994, file: !2446, line: 428, type: !2338)
!13999 = !DILocation(line: 0, scope: !13994)
!14000 = !DILocation(line: 434, column: 6, scope: !14001)
!14001 = distinct !DILexicalBlock(scope: !13994, file: !2446, line: 434, column: 6)
!14002 = !DILocation(line: 434, column: 23, scope: !14001)
!14003 = !DILocation(line: 434, column: 6, scope: !13994)
!14004 = !DILocation(line: 435, column: 50, scope: !14005)
!14005 = distinct !DILexicalBlock(scope: !14001, file: !2446, line: 434, column: 29)
!14006 = !DILocation(line: 435, column: 48, scope: !14005)
!14007 = !DILocation(line: 435, column: 29, scope: !14005)
!14008 = !DILocation(line: 436, column: 24, scope: !14005)
!14009 = !DILocation(line: 436, column: 3, scope: !14005)
!14010 = !DILocation(line: 437, column: 2, scope: !14005)
!14011 = !DILocation(line: 438, column: 1, scope: !13994)
!14012 = distinct !DISubprogram(name: "slice_time", scope: !2446, file: !2446, line: 407, type: !14013, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14015)
!14013 = !DISubroutineType(types: !14014)
!14014 = !{!109, !2338}
!14015 = !{!14016, !14017}
!14016 = !DILocalVariable(name: "curr", arg: 1, scope: !14012, file: !2446, line: 407, type: !2338)
!14017 = !DILocalVariable(name: "ret", scope: !14012, file: !2446, line: 409, type: !109)
!14018 = !DILocation(line: 0, scope: !14012)
!14019 = !DILocation(line: 409, column: 12, scope: !14012)
!14020 = !DILocation(line: 416, column: 2, scope: !14012)
!14021 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2446, file: !2446, line: 440, type: !14022, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14024)
!14022 = !DISubroutineType(types: !14023)
!14023 = !{null, !766, !109}
!14024 = !{!14025, !14026, !14027, !14033}
!14025 = !DILocalVariable(name: "slice", arg: 1, scope: !14021, file: !2446, line: 440, type: !766)
!14026 = !DILocalVariable(name: "prio", arg: 2, scope: !14021, file: !2446, line: 440, type: !109)
!14027 = !DILocalVariable(name: "__i", scope: !14028, file: !2446, line: 442, type: !14029)
!14028 = distinct !DILexicalBlock(scope: !14021, file: !2446, line: 442, column: 2)
!14029 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !251, line: 106, baseType: !14030)
!14030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !251, line: 32, size: 32, elements: !14031)
!14031 = !{!14032}
!14032 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14030, file: !251, line: 33, baseType: !109, size: 32)
!14033 = !DILocalVariable(name: "__key", scope: !14028, file: !2446, line: 442, type: !14029)
!14034 = !DILocation(line: 0, scope: !14021)
!14035 = !DILocation(line: 0, scope: !14028)
!14036 = !DILocalVariable(name: "l", arg: 1, scope: !14037, file: !251, line: 136, type: !14040)
!14037 = distinct !DISubprogram(name: "k_spin_lock", scope: !251, file: !251, line: 136, type: !14038, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14041)
!14038 = !DISubroutineType(types: !14039)
!14039 = !{!14029, !14040}
!14040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2433, size: 32)
!14041 = !{!14036, !14042}
!14042 = !DILocalVariable(name: "k", scope: !14037, file: !251, line: 139, type: !14029)
!14043 = !DILocation(line: 0, scope: !14037, inlinedAt: !14044)
!14044 = distinct !DILocation(line: 442, column: 2, scope: !14028)
!14045 = !DILocation(line: 55, column: 2, scope: !14046, inlinedAt: !14050)
!14046 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6100, file: !6100, line: 42, type: !6101, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14047)
!14047 = !{!14048, !14049}
!14048 = !DILocalVariable(name: "key", scope: !14046, file: !6100, line: 44, type: !32)
!14049 = !DILocalVariable(name: "tmp", scope: !14046, file: !6100, line: 53, type: !32)
!14050 = distinct !DILocation(line: 145, column: 10, scope: !14037, inlinedAt: !14044)
!14051 = !{i64 2270139}
!14052 = !DILocation(line: 0, scope: !14046, inlinedAt: !14050)
!14053 = !DILocation(line: 148, column: 2, scope: !14054, inlinedAt: !14044)
!14054 = distinct !DILexicalBlock(scope: !14055, file: !251, line: 148, column: 2)
!14055 = distinct !DILexicalBlock(scope: !14037, file: !251, line: 148, column: 2)
!14056 = !DILocation(line: 148, column: 2, scope: !14055, inlinedAt: !14044)
!14057 = !DILocation(line: 148, column: 2, scope: !14058, inlinedAt: !14044)
!14058 = distinct !DILexicalBlock(scope: !14054, file: !251, line: 148, column: 2)
!14059 = !DILocation(line: 160, column: 2, scope: !14037, inlinedAt: !14044)
!14060 = !DILocation(line: 443, column: 29, scope: !14061)
!14061 = distinct !DILexicalBlock(scope: !14062, file: !2446, line: 442, column: 26)
!14062 = distinct !DILexicalBlock(scope: !14028, file: !2446, line: 442, column: 2)
!14063 = !DILocation(line: 444, column: 17, scope: !14061)
!14064 = !DILocation(line: 445, column: 51, scope: !14065)
!14065 = distinct !DILexicalBlock(scope: !14061, file: !2446, line: 445, column: 7)
!14066 = !DILocation(line: 445, column: 7, scope: !14061)
!14067 = !DILocation(line: 0, scope: !14061)
!14068 = !DILocation(line: 451, column: 18, scope: !14061)
!14069 = !DILocation(line: 452, column: 3, scope: !14061)
!14070 = !DILocalVariable(name: "key", arg: 2, scope: !14071, file: !251, line: 190, type: !14029)
!14071 = distinct !DISubprogram(name: "k_spin_unlock", scope: !251, file: !251, line: 189, type: !14072, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14074)
!14072 = !DISubroutineType(types: !14073)
!14073 = !{null, !14040, !14029}
!14074 = !{!14075, !14070}
!14075 = !DILocalVariable(name: "l", arg: 1, scope: !14071, file: !251, line: 189, type: !14040)
!14076 = !DILocation(line: 0, scope: !14071, inlinedAt: !14077)
!14077 = distinct !DILocation(line: 442, column: 2, scope: !14062)
!14078 = !DILocation(line: 194, column: 2, scope: !14079, inlinedAt: !14077)
!14079 = distinct !DILexicalBlock(scope: !14080, file: !251, line: 194, column: 2)
!14080 = distinct !DILexicalBlock(scope: !14071, file: !251, line: 194, column: 2)
!14081 = !DILocation(line: 194, column: 2, scope: !14080, inlinedAt: !14077)
!14082 = !DILocation(line: 194, column: 2, scope: !14083, inlinedAt: !14077)
!14083 = distinct !DILexicalBlock(scope: !14079, file: !251, line: 194, column: 2)
!14084 = !DILocalVariable(name: "key", arg: 1, scope: !14085, file: !6100, line: 84, type: !32)
!14085 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6100, file: !6100, line: 84, type: !6111, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14086)
!14086 = !{!14084}
!14087 = !DILocation(line: 0, scope: !14085, inlinedAt: !14088)
!14088 = distinct !DILocation(line: 215, column: 2, scope: !14071, inlinedAt: !14077)
!14089 = !DILocation(line: 95, column: 2, scope: !14085, inlinedAt: !14088)
!14090 = !{i64 2270956}
!14091 = !DILocation(line: 454, column: 1, scope: !14021)
!14092 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !3279, file: !3279, line: 389, type: !7708, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14093)
!14093 = !{!14094}
!14094 = !DILocalVariable(name: "t", arg: 1, scope: !14092, file: !3279, line: 389, type: !110)
!14095 = !DILocation(line: 0, scope: !14092)
!14096 = !DILocalVariable(name: "t", arg: 1, scope: !14097, file: !3279, line: 102, type: !111)
!14097 = distinct !DISubprogram(name: "z_tmcvt", scope: !3279, file: !3279, line: 102, type: !3287, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14098)
!14098 = !{!14096, !14099, !14100, !14101, !14102, !14103, !14104, !14105, !14106, !14107, !14108}
!14099 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14097, file: !3279, line: 102, type: !110)
!14100 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14097, file: !3279, line: 103, type: !110)
!14101 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14097, file: !3279, line: 103, type: !347)
!14102 = !DILocalVariable(name: "result32", arg: 5, scope: !14097, file: !3279, line: 104, type: !347)
!14103 = !DILocalVariable(name: "round_up", arg: 6, scope: !14097, file: !3279, line: 104, type: !347)
!14104 = !DILocalVariable(name: "round_off", arg: 7, scope: !14097, file: !3279, line: 105, type: !347)
!14105 = !DILocalVariable(name: "mul_ratio", scope: !14097, file: !3279, line: 107, type: !347)
!14106 = !DILocalVariable(name: "div_ratio", scope: !14097, file: !3279, line: 109, type: !347)
!14107 = !DILocalVariable(name: "off", scope: !14097, file: !3279, line: 116, type: !111)
!14108 = !DILocalVariable(name: "rdivisor", scope: !14109, file: !3279, line: 119, type: !110)
!14109 = distinct !DILexicalBlock(scope: !14110, file: !3279, line: 118, column: 18)
!14110 = distinct !DILexicalBlock(scope: !14097, file: !3279, line: 118, column: 6)
!14111 = !DILocation(line: 0, scope: !14097, inlinedAt: !14112)
!14112 = distinct !DILocation(line: 392, column: 9, scope: !14092)
!14113 = !DILocation(line: 143, column: 25, scope: !14114, inlinedAt: !14112)
!14114 = distinct !DILexicalBlock(scope: !14115, file: !3279, line: 142, column: 17)
!14115 = distinct !DILexicalBlock(scope: !14116, file: !3279, line: 142, column: 7)
!14116 = distinct !DILexicalBlock(scope: !14117, file: !3279, line: 141, column: 24)
!14117 = distinct !DILexicalBlock(scope: !14118, file: !3279, line: 141, column: 13)
!14118 = distinct !DILexicalBlock(scope: !14097, file: !3279, line: 134, column: 6)
!14119 = !DILocation(line: 392, column: 2, scope: !14092)
!14120 = distinct !DISubprogram(name: "z_time_slice", scope: !2446, file: !2446, line: 502, type: !8361, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14121)
!14121 = !{!14122, !14123}
!14122 = !DILocalVariable(name: "ticks", arg: 1, scope: !14120, file: !2446, line: 502, type: !109)
!14123 = !DILocalVariable(name: "key", scope: !14120, file: !2446, line: 511, type: !14029)
!14124 = !DILocation(line: 0, scope: !14120)
!14125 = !DILocation(line: 0, scope: !14037, inlinedAt: !14126)
!14126 = distinct !DILocation(line: 511, column: 25, scope: !14120)
!14127 = !DILocation(line: 55, column: 2, scope: !14046, inlinedAt: !14128)
!14128 = distinct !DILocation(line: 145, column: 10, scope: !14037, inlinedAt: !14126)
!14129 = !DILocation(line: 0, scope: !14046, inlinedAt: !14128)
!14130 = !DILocation(line: 148, column: 2, scope: !14054, inlinedAt: !14126)
!14131 = !DILocation(line: 148, column: 2, scope: !14055, inlinedAt: !14126)
!14132 = !DILocation(line: 148, column: 2, scope: !14058, inlinedAt: !14126)
!14133 = !DILocation(line: 160, column: 2, scope: !14037, inlinedAt: !14126)
!14134 = !DILocation(line: 514, column: 6, scope: !14135)
!14135 = distinct !DILexicalBlock(scope: !14120, file: !2446, line: 514, column: 6)
!14136 = !DILocation(line: 514, column: 25, scope: !14135)
!14137 = !DILocation(line: 514, column: 22, scope: !14135)
!14138 = !DILocation(line: 514, column: 6, scope: !14120)
!14139 = !DILocation(line: 515, column: 3, scope: !14140)
!14140 = distinct !DILexicalBlock(scope: !14135, file: !2446, line: 514, column: 35)
!14141 = !DILocation(line: 0, scope: !14071, inlinedAt: !14142)
!14142 = distinct !DILocation(line: 516, column: 3, scope: !14140)
!14143 = !DILocation(line: 194, column: 2, scope: !14079, inlinedAt: !14142)
!14144 = !DILocation(line: 194, column: 2, scope: !14080, inlinedAt: !14142)
!14145 = !DILocation(line: 194, column: 2, scope: !14083, inlinedAt: !14142)
!14146 = !DILocation(line: 0, scope: !14085, inlinedAt: !14147)
!14147 = distinct !DILocation(line: 215, column: 2, scope: !14071, inlinedAt: !14142)
!14148 = !DILocation(line: 95, column: 2, scope: !14085, inlinedAt: !14147)
!14149 = !DILocation(line: 517, column: 3, scope: !14140)
!14150 = !DILocation(line: 519, column: 18, scope: !14120)
!14151 = !DILocation(line: 522, column: 6, scope: !14152)
!14152 = distinct !DILexicalBlock(scope: !14120, file: !2446, line: 522, column: 6)
!14153 = !DILocation(line: 522, column: 27, scope: !14152)
!14154 = !DILocation(line: 522, column: 30, scope: !14152)
!14155 = !DILocation(line: 522, column: 6, scope: !14120)
!14156 = !DILocation(line: 523, column: 30, scope: !14157)
!14157 = distinct !DILexicalBlock(scope: !14158, file: !2446, line: 523, column: 7)
!14158 = distinct !DILexicalBlock(scope: !14152, file: !2446, line: 522, column: 51)
!14159 = !DILocation(line: 523, column: 13, scope: !14157)
!14160 = !DILocation(line: 523, column: 7, scope: !14158)
!14161 = !DILocation(line: 530, column: 10, scope: !14162)
!14162 = distinct !DILexicalBlock(scope: !14157, file: !2446, line: 523, column: 43)
!14163 = !DILocation(line: 531, column: 3, scope: !14162)
!14164 = !DILocation(line: 532, column: 30, scope: !14165)
!14165 = distinct !DILexicalBlock(scope: !14157, file: !2446, line: 531, column: 10)
!14166 = !DILocation(line: 535, column: 29, scope: !14167)
!14167 = distinct !DILexicalBlock(scope: !14152, file: !2446, line: 534, column: 9)
!14168 = !DILocation(line: 0, scope: !14071, inlinedAt: !14169)
!14169 = distinct !DILocation(line: 537, column: 2, scope: !14120)
!14170 = !DILocation(line: 194, column: 2, scope: !14079, inlinedAt: !14169)
!14171 = !DILocation(line: 194, column: 2, scope: !14080, inlinedAt: !14169)
!14172 = !DILocation(line: 194, column: 2, scope: !14083, inlinedAt: !14169)
!14173 = !DILocation(line: 0, scope: !14085, inlinedAt: !14174)
!14174 = distinct !DILocation(line: 215, column: 2, scope: !14071, inlinedAt: !14169)
!14175 = !DILocation(line: 95, column: 2, scope: !14085, inlinedAt: !14174)
!14176 = !DILocation(line: 538, column: 1, scope: !14120)
!14177 = distinct !DISubprogram(name: "sliceable", scope: !2446, file: !2446, line: 468, type: !14178, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14180)
!14178 = !DISubroutineType(types: !14179)
!14179 = !{!347, !2338}
!14180 = !{!14181, !14182}
!14181 = !DILocalVariable(name: "thread", arg: 1, scope: !14177, file: !2446, line: 468, type: !2338)
!14182 = !DILocalVariable(name: "ret", scope: !14177, file: !2446, line: 470, type: !347)
!14183 = !DILocation(line: 0, scope: !14177)
!14184 = !DILocation(line: 470, column: 13, scope: !14177)
!14185 = !DILocation(line: 471, column: 3, scope: !14177)
!14186 = !DILocation(line: 471, column: 7, scope: !14177)
!14187 = !DILocation(line: 472, column: 3, scope: !14177)
!14188 = !DILocation(line: 472, column: 37, scope: !14177)
!14189 = !DILocation(line: 472, column: 24, scope: !14177)
!14190 = !DILocation(line: 472, column: 43, scope: !14177)
!14191 = !DILocation(line: 472, column: 7, scope: !14177)
!14192 = !DILocation(line: 473, column: 3, scope: !14177)
!14193 = !DILocation(line: 473, column: 7, scope: !14177)
!14194 = !DILocation(line: 473, column: 6, scope: !14177)
!14195 = !DILocation(line: 479, column: 2, scope: !14177)
!14196 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2446, file: !2446, line: 482, type: !14197, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14199)
!14197 = !DISubroutineType(types: !14198)
!14198 = !{!14029, !14029}
!14199 = !{!14200, !14201}
!14200 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !14196, file: !2446, line: 482, type: !14029)
!14201 = !DILocalVariable(name: "curr", scope: !14196, file: !2446, line: 484, type: !2338)
!14202 = !DILocation(line: 0, scope: !14196)
!14203 = !DILocation(line: 484, column: 26, scope: !14196)
!14204 = !DILocation(line: 493, column: 7, scope: !14205)
!14205 = distinct !DILexicalBlock(scope: !14196, file: !2446, line: 493, column: 6)
!14206 = !DILocation(line: 493, column: 6, scope: !14196)
!14207 = !DILocation(line: 494, column: 3, scope: !14208)
!14208 = distinct !DILexicalBlock(scope: !14205, file: !2446, line: 493, column: 49)
!14209 = !DILocation(line: 495, column: 2, scope: !14208)
!14210 = !DILocation(line: 496, column: 2, scope: !14196)
!14211 = !DILocation(line: 499, column: 1, scope: !14196)
!14212 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !12829, file: !12829, line: 106, type: !14178, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14213)
!14213 = !{!14214, !14215}
!14214 = !DILocalVariable(name: "thread", arg: 1, scope: !14212, file: !12829, line: 106, type: !2338)
!14215 = !DILocalVariable(name: "state", scope: !14212, file: !12829, line: 108, type: !178)
!14216 = !DILocation(line: 0, scope: !14212)
!14217 = !DILocation(line: 108, column: 31, scope: !14212)
!14218 = !DILocation(line: 110, column: 16, scope: !14212)
!14219 = !DILocation(line: 111, column: 41, scope: !14212)
!14220 = !DILocation(line: 110, column: 2, scope: !14212)
!14221 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2446, file: !2446, line: 393, type: !13995, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14222)
!14222 = !{!14223}
!14223 = !DILocalVariable(name: "thread", arg: 1, scope: !14221, file: !2446, line: 393, type: !2338)
!14224 = !DILocation(line: 0, scope: !14221)
!14225 = !DILocation(line: 395, column: 6, scope: !14226)
!14226 = distinct !DILexicalBlock(scope: !14221, file: !2446, line: 395, column: 6)
!14227 = !DILocation(line: 395, column: 6, scope: !14221)
!14228 = !DILocalVariable(name: "thread", arg: 1, scope: !14229, file: !2446, line: 264, type: !2338)
!14229 = distinct !DISubprogram(name: "dequeue_thread", scope: !2446, file: !2446, line: 264, type: !13995, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14230)
!14230 = !{!14228}
!14231 = !DILocation(line: 0, scope: !14229, inlinedAt: !14232)
!14232 = distinct !DILocation(line: 396, column: 3, scope: !14233)
!14233 = distinct !DILexicalBlock(scope: !14226, file: !2446, line: 395, column: 34)
!14234 = !DILocation(line: 266, column: 15, scope: !14229, inlinedAt: !14232)
!14235 = !DILocation(line: 266, column: 28, scope: !14229, inlinedAt: !14232)
!14236 = !DILocalVariable(name: "thread", arg: 1, scope: !14237, file: !2446, line: 232, type: !2338)
!14237 = distinct !DISubprogram(name: "runq_remove", scope: !2446, file: !2446, line: 232, type: !13995, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14238)
!14238 = !{!14236}
!14239 = !DILocation(line: 0, scope: !14237, inlinedAt: !14240)
!14240 = distinct !DILocation(line: 268, column: 3, scope: !14241, inlinedAt: !14232)
!14241 = distinct !DILexicalBlock(scope: !14242, file: !2446, line: 267, column: 35)
!14242 = distinct !DILexicalBlock(scope: !14229, file: !2446, line: 267, column: 6)
!14243 = !DILocation(line: 234, column: 2, scope: !14237, inlinedAt: !14240)
!14244 = !DILocation(line: 397, column: 2, scope: !14233)
!14245 = !DILocalVariable(name: "thread", arg: 1, scope: !14246, file: !2446, line: 250, type: !2338)
!14246 = distinct !DISubprogram(name: "queue_thread", scope: !2446, file: !2446, line: 250, type: !13995, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14247)
!14247 = !{!14245}
!14248 = !DILocation(line: 0, scope: !14246, inlinedAt: !14249)
!14249 = distinct !DILocation(line: 398, column: 2, scope: !14221)
!14250 = !DILocation(line: 252, column: 15, scope: !14246, inlinedAt: !14249)
!14251 = !DILocation(line: 252, column: 28, scope: !14246, inlinedAt: !14249)
!14252 = !DILocalVariable(name: "thread", arg: 1, scope: !14253, file: !2446, line: 227, type: !2338)
!14253 = distinct !DISubprogram(name: "runq_add", scope: !2446, file: !2446, line: 227, type: !13995, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14254)
!14254 = !{!14252}
!14255 = !DILocation(line: 0, scope: !14253, inlinedAt: !14256)
!14256 = distinct !DILocation(line: 254, column: 3, scope: !14257, inlinedAt: !14249)
!14257 = distinct !DILexicalBlock(scope: !14258, file: !2446, line: 253, column: 35)
!14258 = distinct !DILexicalBlock(scope: !14246, file: !2446, line: 253, column: 6)
!14259 = !DILocalVariable(name: "pq", arg: 1, scope: !14260, file: !2446, line: 181, type: !14263)
!14260 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2446, file: !2446, line: 181, type: !14261, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14264)
!14261 = !DISubroutineType(types: !14262)
!14262 = !{null, !14263, !2338}
!14263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2374, size: 32)
!14264 = !{!14259, !14265, !14266}
!14265 = !DILocalVariable(name: "thread", arg: 2, scope: !14260, file: !2446, line: 182, type: !2338)
!14266 = !DILocalVariable(name: "t", scope: !14260, file: !2446, line: 184, type: !2338)
!14267 = !DILocation(line: 0, scope: !14260, inlinedAt: !14268)
!14268 = distinct !DILocation(line: 229, column: 2, scope: !14253, inlinedAt: !14256)
!14269 = !DILocation(line: 186, column: 2, scope: !14270, inlinedAt: !14268)
!14270 = distinct !DILexicalBlock(scope: !14271, file: !2446, line: 186, column: 2)
!14271 = distinct !DILexicalBlock(scope: !14260, file: !2446, line: 186, column: 2)
!14272 = !DILocation(line: 186, column: 2, scope: !14271, inlinedAt: !14268)
!14273 = !DILocation(line: 186, column: 2, scope: !14274, inlinedAt: !14268)
!14274 = distinct !DILexicalBlock(scope: !14270, file: !2446, line: 186, column: 2)
!14275 = !DILocation(line: 188, column: 2, scope: !14276, inlinedAt: !14268)
!14276 = distinct !DILexicalBlock(scope: !14260, file: !2446, line: 188, column: 2)
!14277 = !DILocation(line: 188, column: 2, scope: !14278, inlinedAt: !14268)
!14278 = distinct !DILexicalBlock(scope: !14276, file: !2446, line: 188, column: 2)
!14279 = !DILocation(line: 0, scope: !14276, inlinedAt: !14268)
!14280 = !DILocation(line: 189, column: 7, scope: !14281, inlinedAt: !14268)
!14281 = distinct !DILexicalBlock(scope: !14282, file: !2446, line: 189, column: 7)
!14282 = distinct !DILexicalBlock(scope: !14278, file: !2446, line: 188, column: 56)
!14283 = !DILocation(line: 189, column: 35, scope: !14281, inlinedAt: !14268)
!14284 = !DILocation(line: 189, column: 7, scope: !14282, inlinedAt: !14268)
!14285 = !DILocation(line: 191, column: 21, scope: !14286, inlinedAt: !14268)
!14286 = distinct !DILexicalBlock(scope: !14281, file: !2446, line: 189, column: 40)
!14287 = !DILocation(line: 190, column: 4, scope: !14286, inlinedAt: !14268)
!14288 = !DILocation(line: 192, column: 4, scope: !14286, inlinedAt: !14268)
!14289 = distinct !{!14289, !14275, !14290}
!14290 = !DILocation(line: 194, column: 2, scope: !14276, inlinedAt: !14268)
!14291 = !DILocation(line: 196, column: 37, scope: !14260, inlinedAt: !14268)
!14292 = !DILocation(line: 196, column: 2, scope: !14260, inlinedAt: !14268)
!14293 = !DILocation(line: 197, column: 1, scope: !14260, inlinedAt: !14268)
!14294 = !DILocation(line: 399, column: 25, scope: !14221)
!14295 = !DILocation(line: 399, column: 22, scope: !14221)
!14296 = !DILocation(line: 399, column: 2, scope: !14221)
!14297 = !DILocation(line: 400, column: 1, scope: !14221)
!14298 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !12829, file: !12829, line: 136, type: !14178, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14299)
!14299 = !{!14300}
!14300 = !DILocalVariable(name: "thread", arg: 1, scope: !14298, file: !12829, line: 136, type: !2338)
!14301 = !DILocation(line: 0, scope: !14298)
!14302 = !DILocation(line: 138, column: 9, scope: !14298)
!14303 = !DILocation(line: 138, column: 2, scope: !14298)
!14304 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2446, file: !2446, line: 1137, type: !14261, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14305)
!14305 = !{!14306, !14307}
!14306 = !DILocalVariable(name: "pq", arg: 1, scope: !14304, file: !2446, line: 1137, type: !14263)
!14307 = !DILocalVariable(name: "thread", arg: 2, scope: !14304, file: !2446, line: 1137, type: !2338)
!14308 = !DILocation(line: 0, scope: !14304)
!14309 = !DILocation(line: 1139, column: 2, scope: !14310)
!14310 = distinct !DILexicalBlock(scope: !14311, file: !2446, line: 1139, column: 2)
!14311 = distinct !DILexicalBlock(scope: !14304, file: !2446, line: 1139, column: 2)
!14312 = !DILocation(line: 1139, column: 2, scope: !14311)
!14313 = !DILocation(line: 1139, column: 2, scope: !14314)
!14314 = distinct !DILexicalBlock(scope: !14310, file: !2446, line: 1139, column: 2)
!14315 = !DILocation(line: 1141, column: 33, scope: !14304)
!14316 = !DILocation(line: 1141, column: 2, scope: !14304)
!14317 = !DILocation(line: 1142, column: 1, scope: !14304)
!14318 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !12829, file: !12829, line: 83, type: !14178, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14319)
!14319 = !{!14320}
!14320 = !DILocalVariable(name: "thread", arg: 1, scope: !14318, file: !12829, line: 83, type: !2338)
!14321 = !DILocation(line: 0, scope: !14318)
!14322 = !DILocation(line: 89, column: 16, scope: !14318)
!14323 = !DILocation(line: 89, column: 2, scope: !14318)
!14324 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !127, file: !127, line: 294, type: !14325, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14327)
!14325 = !DISubroutineType(types: !14326)
!14326 = !{!2442, !14263}
!14327 = !{!14328}
!14328 = !DILocalVariable(name: "list", arg: 1, scope: !14324, file: !127, line: 294, type: !14263)
!14329 = !DILocation(line: 0, scope: !14324)
!14330 = !DILocation(line: 296, column: 9, scope: !14324)
!14331 = !DILocation(line: 296, column: 49, scope: !14324)
!14332 = !DILocation(line: 296, column: 2, scope: !14324)
!14333 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !127, file: !127, line: 443, type: !14334, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14336)
!14334 = !DISubroutineType(types: !14335)
!14335 = !{null, !2442, !2442}
!14336 = !{!14337, !14338, !14339}
!14337 = !DILocalVariable(name: "successor", arg: 1, scope: !14333, file: !127, line: 443, type: !2442)
!14338 = !DILocalVariable(name: "node", arg: 2, scope: !14333, file: !127, line: 443, type: !2442)
!14339 = !DILocalVariable(name: "prev", scope: !14333, file: !127, line: 445, type: !14340)
!14340 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2442)
!14341 = !DILocation(line: 0, scope: !14333)
!14342 = !DILocation(line: 445, column: 39, scope: !14333)
!14343 = !DILocation(line: 447, column: 8, scope: !14333)
!14344 = !DILocation(line: 447, column: 13, scope: !14333)
!14345 = !DILocation(line: 448, column: 8, scope: !14333)
!14346 = !DILocation(line: 448, column: 13, scope: !14333)
!14347 = !DILocation(line: 449, column: 8, scope: !14333)
!14348 = !DILocation(line: 449, column: 13, scope: !14333)
!14349 = !DILocation(line: 450, column: 18, scope: !14333)
!14350 = !DILocation(line: 451, column: 1, scope: !14333)
!14351 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !127, file: !127, line: 341, type: !14352, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14354)
!14352 = !DISubroutineType(types: !14353)
!14353 = !{!2442, !14263, !2442}
!14354 = !{!14355, !14356}
!14355 = !DILocalVariable(name: "list", arg: 1, scope: !14351, file: !127, line: 341, type: !14263)
!14356 = !DILocalVariable(name: "node", arg: 2, scope: !14351, file: !127, line: 342, type: !2442)
!14357 = !DILocation(line: 0, scope: !14351)
!14358 = !DILocation(line: 344, column: 15, scope: !14351)
!14359 = !DILocation(line: 344, column: 9, scope: !14351)
!14360 = !DILocation(line: 344, column: 26, scope: !14351)
!14361 = !DILocation(line: 344, column: 2, scope: !14351)
!14362 = distinct !DISubprogram(name: "sys_dlist_append", scope: !127, file: !127, line: 404, type: !14363, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14365)
!14363 = !DISubroutineType(types: !14364)
!14364 = !{null, !14263, !2442}
!14365 = !{!14366, !14367, !14368}
!14366 = !DILocalVariable(name: "list", arg: 1, scope: !14362, file: !127, line: 404, type: !14263)
!14367 = !DILocalVariable(name: "node", arg: 2, scope: !14362, file: !127, line: 404, type: !2442)
!14368 = !DILocalVariable(name: "tail", scope: !14362, file: !127, line: 406, type: !14340)
!14369 = !DILocation(line: 0, scope: !14362)
!14370 = !DILocation(line: 406, column: 34, scope: !14362)
!14371 = !DILocation(line: 408, column: 8, scope: !14362)
!14372 = !DILocation(line: 408, column: 13, scope: !14362)
!14373 = !DILocation(line: 409, column: 8, scope: !14362)
!14374 = !DILocation(line: 409, column: 13, scope: !14362)
!14375 = !DILocation(line: 411, column: 8, scope: !14362)
!14376 = !DILocation(line: 411, column: 13, scope: !14362)
!14377 = !DILocation(line: 412, column: 13, scope: !14362)
!14378 = !DILocation(line: 413, column: 1, scope: !14362)
!14379 = distinct !DISubprogram(name: "update_cache", scope: !2446, file: !2446, line: 559, type: !8361, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14380)
!14380 = !{!14381, !14382}
!14381 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !14379, file: !2446, line: 559, type: !109)
!14382 = !DILocalVariable(name: "thread", scope: !14379, file: !2446, line: 562, type: !2338)
!14383 = !DILocation(line: 0, scope: !14379)
!14384 = !DILocation(line: 239, column: 9, scope: !14385, inlinedAt: !14388)
!14385 = distinct !DISubprogram(name: "runq_best", scope: !2446, file: !2446, line: 237, type: !14386, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !2036)
!14386 = !DISubroutineType(types: !14387)
!14387 = !{!2338}
!14388 = distinct !DILocation(line: 314, column: 28, scope: !14389, inlinedAt: !14392)
!14389 = distinct !DISubprogram(name: "next_up", scope: !2446, file: !2446, line: 312, type: !14386, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14390)
!14390 = !{!14391}
!14391 = !DILocalVariable(name: "thread", scope: !14389, file: !2446, line: 314, type: !2338)
!14392 = distinct !DILocation(line: 562, column: 28, scope: !14379)
!14393 = !DILocation(line: 0, scope: !14389, inlinedAt: !14392)
!14394 = !DILocation(line: 340, column: 17, scope: !14389, inlinedAt: !14392)
!14395 = !DILocation(line: 340, column: 9, scope: !14389, inlinedAt: !14392)
!14396 = !DILocalVariable(name: "thread", arg: 1, scope: !14397, file: !2446, line: 127, type: !2338)
!14397 = distinct !DISubprogram(name: "should_preempt", scope: !2446, file: !2446, line: 127, type: !14398, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14400)
!14398 = !DISubroutineType(types: !14399)
!14399 = !{!347, !2338, !109}
!14400 = !{!14396, !14401}
!14401 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !14397, file: !2446, line: 128, type: !109)
!14402 = !DILocation(line: 0, scope: !14397, inlinedAt: !14403)
!14403 = distinct !DILocation(line: 564, column: 6, scope: !14404)
!14404 = distinct !DILexicalBlock(scope: !14379, file: !2446, line: 564, column: 6)
!14405 = !DILocation(line: 133, column: 17, scope: !14406, inlinedAt: !14403)
!14406 = distinct !DILexicalBlock(scope: !14397, file: !2446, line: 133, column: 6)
!14407 = !DILocation(line: 0, scope: !14404)
!14408 = !DILocation(line: 133, column: 6, scope: !14397, inlinedAt: !14403)
!14409 = !DILocation(line: 137, column: 2, scope: !14410, inlinedAt: !14403)
!14410 = distinct !DILexicalBlock(scope: !14411, file: !2446, line: 137, column: 2)
!14411 = distinct !DILexicalBlock(scope: !14397, file: !2446, line: 137, column: 2)
!14412 = !DILocation(line: 137, column: 2, scope: !14411, inlinedAt: !14403)
!14413 = !DILocation(line: 137, column: 2, scope: !14414, inlinedAt: !14403)
!14414 = distinct !DILexicalBlock(scope: !14410, file: !2446, line: 137, column: 2)
!14415 = !DILocation(line: 140, column: 6, scope: !14416, inlinedAt: !14403)
!14416 = distinct !DILexicalBlock(scope: !14397, file: !2446, line: 140, column: 6)
!14417 = !DILocation(line: 140, column: 6, scope: !14397, inlinedAt: !14403)
!14418 = !DILocation(line: 150, column: 9, scope: !14419, inlinedAt: !14403)
!14419 = distinct !DILexicalBlock(scope: !14397, file: !2446, line: 149, column: 6)
!14420 = !DILocation(line: 149, column: 6, scope: !14397, inlinedAt: !14403)
!14421 = !DILocation(line: 157, column: 6, scope: !14422, inlinedAt: !14403)
!14422 = distinct !DILexicalBlock(scope: !14397, file: !2446, line: 157, column: 6)
!14423 = !DILocation(line: 564, column: 6, scope: !14379)
!14424 = !DILocation(line: 566, column: 14, scope: !14425)
!14425 = distinct !DILexicalBlock(scope: !14426, file: !2446, line: 566, column: 7)
!14426 = distinct !DILexicalBlock(scope: !14404, file: !2446, line: 564, column: 42)
!14427 = !DILocation(line: 566, column: 7, scope: !14426)
!14428 = !DILocation(line: 567, column: 4, scope: !14429)
!14429 = distinct !DILexicalBlock(scope: !14425, file: !2446, line: 566, column: 27)
!14430 = !DILocation(line: 568, column: 3, scope: !14429)
!14431 = !DILocation(line: 585, column: 1, scope: !14379)
!14432 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2446, file: !2446, line: 1144, type: !14433, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14435)
!14433 = !DISubroutineType(types: !14434)
!14434 = !{!2338, !14263}
!14435 = !{!14436, !14437, !14438}
!14436 = !DILocalVariable(name: "pq", arg: 1, scope: !14432, file: !2446, line: 1144, type: !14263)
!14437 = !DILocalVariable(name: "thread", scope: !14432, file: !2446, line: 1146, type: !2338)
!14438 = !DILocalVariable(name: "n", scope: !14432, file: !2446, line: 1147, type: !2442)
!14439 = !DILocation(line: 0, scope: !14432)
!14440 = !DILocation(line: 1147, column: 19, scope: !14432)
!14441 = !DILocation(line: 1152, column: 2, scope: !14432)
!14442 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !12829, file: !12829, line: 115, type: !14178, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14443)
!14443 = !{!14444}
!14444 = !DILocalVariable(name: "thread", arg: 1, scope: !14442, file: !12829, line: 115, type: !2338)
!14445 = !DILocation(line: 0, scope: !14442)
!14446 = !DILocation(line: 117, column: 46, scope: !14442)
!14447 = !DILocation(line: 117, column: 10, scope: !14442)
!14448 = !DILocation(line: 117, column: 9, scope: !14442)
!14449 = !DILocation(line: 117, column: 2, scope: !14442)
!14450 = distinct !DISubprogram(name: "is_preempt", scope: !2446, file: !2446, line: 62, type: !14013, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14451)
!14451 = !{!14452}
!14452 = !DILocalVariable(name: "thread", arg: 1, scope: !14450, file: !2446, line: 62, type: !2338)
!14453 = !DILocation(line: 0, scope: !14450)
!14454 = !DILocation(line: 65, column: 22, scope: !14450)
!14455 = !DILocation(line: 65, column: 30, scope: !14450)
!14456 = !DILocation(line: 65, column: 2, scope: !14450)
!14457 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13258, file: !13258, line: 35, type: !14458, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14462)
!14458 = !DISubroutineType(types: !14459)
!14459 = !{!347, !14460}
!14460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14461, size: 32)
!14461 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2389)
!14462 = !{!14463}
!14463 = !DILocalVariable(name: "to", arg: 1, scope: !14457, file: !13258, line: 35, type: !14460)
!14464 = !DILocation(line: 0, scope: !14457)
!14465 = !DILocation(line: 37, column: 35, scope: !14457)
!14466 = !DILocation(line: 37, column: 10, scope: !14457)
!14467 = !DILocation(line: 37, column: 9, scope: !14457)
!14468 = !DILocation(line: 37, column: 2, scope: !14457)
!14469 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !127, file: !127, line: 225, type: !14470, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14474)
!14470 = !DISubroutineType(types: !14471)
!14471 = !{!347, !14472}
!14472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14473, size: 32)
!14473 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2348)
!14474 = !{!14475}
!14475 = !DILocalVariable(name: "node", arg: 1, scope: !14469, file: !127, line: 225, type: !14472)
!14476 = !DILocation(line: 0, scope: !14469)
!14477 = !DILocation(line: 227, column: 15, scope: !14469)
!14478 = !DILocation(line: 227, column: 20, scope: !14469)
!14479 = !DILocation(line: 227, column: 2, scope: !14469)
!14480 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !127, file: !127, line: 325, type: !14352, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14481)
!14481 = !{!14482, !14483}
!14482 = !DILocalVariable(name: "list", arg: 1, scope: !14480, file: !127, line: 325, type: !14263)
!14483 = !DILocalVariable(name: "node", arg: 2, scope: !14480, file: !127, line: 326, type: !2442)
!14484 = !DILocation(line: 0, scope: !14480)
!14485 = !DILocation(line: 328, column: 24, scope: !14480)
!14486 = !DILocation(line: 328, column: 15, scope: !14480)
!14487 = !DILocation(line: 328, column: 9, scope: !14480)
!14488 = !DILocation(line: 328, column: 45, scope: !14480)
!14489 = !DILocation(line: 328, column: 2, scope: !14480)
!14490 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !127, file: !127, line: 266, type: !14491, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14493)
!14491 = !DISubroutineType(types: !14492)
!14492 = !{!347, !14263}
!14493 = !{!14494}
!14494 = !DILocalVariable(name: "list", arg: 1, scope: !14490, file: !127, line: 266, type: !14263)
!14495 = !DILocation(line: 0, scope: !14490)
!14496 = !DILocation(line: 268, column: 15, scope: !14490)
!14497 = !DILocation(line: 268, column: 20, scope: !14490)
!14498 = !DILocation(line: 268, column: 2, scope: !14490)
!14499 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !127, file: !127, line: 496, type: !14500, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14502)
!14500 = !DISubroutineType(types: !14501)
!14501 = !{null, !2442}
!14502 = !{!14503, !14504, !14505}
!14503 = !DILocalVariable(name: "node", arg: 1, scope: !14499, file: !127, line: 496, type: !2442)
!14504 = !DILocalVariable(name: "prev", scope: !14499, file: !127, line: 498, type: !14340)
!14505 = !DILocalVariable(name: "next", scope: !14499, file: !127, line: 499, type: !14340)
!14506 = !DILocation(line: 0, scope: !14499)
!14507 = !DILocation(line: 498, column: 34, scope: !14499)
!14508 = !DILocation(line: 499, column: 34, scope: !14499)
!14509 = !DILocation(line: 501, column: 8, scope: !14499)
!14510 = !DILocation(line: 501, column: 13, scope: !14499)
!14511 = !DILocation(line: 502, column: 8, scope: !14499)
!14512 = !DILocation(line: 502, column: 13, scope: !14499)
!14513 = !DILocation(line: 503, column: 2, scope: !14499)
!14514 = !DILocation(line: 504, column: 1, scope: !14499)
!14515 = distinct !DISubprogram(name: "sys_dnode_init", scope: !127, file: !127, line: 211, type: !14500, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14516)
!14516 = !{!14517}
!14517 = !DILocalVariable(name: "node", arg: 1, scope: !14515, file: !127, line: 211, type: !2442)
!14518 = !DILocation(line: 0, scope: !14515)
!14519 = !DILocation(line: 213, column: 8, scope: !14515)
!14520 = !DILocation(line: 213, column: 13, scope: !14515)
!14521 = !DILocation(line: 214, column: 8, scope: !14515)
!14522 = !DILocation(line: 214, column: 13, scope: !14515)
!14523 = !DILocation(line: 215, column: 1, scope: !14515)
!14524 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !12829, file: !12829, line: 131, type: !14525, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14527)
!14525 = !DISubroutineType(types: !14526)
!14526 = !{!347, !2338, !110}
!14527 = !{!14528, !14529}
!14528 = !DILocalVariable(name: "thread", arg: 1, scope: !14524, file: !12829, line: 131, type: !2338)
!14529 = !DILocalVariable(name: "state", arg: 2, scope: !14524, file: !12829, line: 131, type: !110)
!14530 = !DILocation(line: 0, scope: !14524)
!14531 = !DILocation(line: 133, column: 23, scope: !14524)
!14532 = !DILocation(line: 133, column: 10, scope: !14524)
!14533 = !DILocation(line: 133, column: 36, scope: !14524)
!14534 = !DILocation(line: 133, column: 45, scope: !14524)
!14535 = !DILocation(line: 133, column: 2, scope: !14524)
!14536 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !12829, file: !12829, line: 211, type: !13827, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14537)
!14537 = !{!14538, !14539}
!14538 = !DILocalVariable(name: "prio", arg: 1, scope: !14536, file: !12829, line: 211, type: !109)
!14539 = !DILocalVariable(name: "test_prio", arg: 2, scope: !14536, file: !12829, line: 211, type: !109)
!14540 = !DILocation(line: 0, scope: !14536)
!14541 = !DILocation(line: 213, column: 9, scope: !14536)
!14542 = !DILocation(line: 213, column: 2, scope: !14536)
!14543 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !12829, file: !12829, line: 206, type: !13827, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14544)
!14544 = !{!14545, !14546}
!14545 = !DILocalVariable(name: "prio1", arg: 1, scope: !14543, file: !12829, line: 206, type: !109)
!14546 = !DILocalVariable(name: "prio2", arg: 2, scope: !14543, file: !12829, line: 206, type: !109)
!14547 = !DILocation(line: 0, scope: !14543)
!14548 = !DILocation(line: 208, column: 15, scope: !14543)
!14549 = !DILocation(line: 208, column: 2, scope: !14543)
!14550 = distinct !DISubprogram(name: "z_ready_thread", scope: !2446, file: !2446, line: 635, type: !13995, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14551)
!14551 = !{!14552, !14553, !14555}
!14552 = !DILocalVariable(name: "thread", arg: 1, scope: !14550, file: !2446, line: 635, type: !2338)
!14553 = !DILocalVariable(name: "__i", scope: !14554, file: !2446, line: 637, type: !14029)
!14554 = distinct !DILexicalBlock(scope: !14550, file: !2446, line: 637, column: 2)
!14555 = !DILocalVariable(name: "__key", scope: !14554, file: !2446, line: 637, type: !14029)
!14556 = !DILocation(line: 0, scope: !14550)
!14557 = !DILocation(line: 0, scope: !14554)
!14558 = !DILocation(line: 0, scope: !14037, inlinedAt: !14559)
!14559 = distinct !DILocation(line: 637, column: 2, scope: !14554)
!14560 = !DILocation(line: 55, column: 2, scope: !14046, inlinedAt: !14561)
!14561 = distinct !DILocation(line: 145, column: 10, scope: !14037, inlinedAt: !14559)
!14562 = !DILocation(line: 0, scope: !14046, inlinedAt: !14561)
!14563 = !DILocation(line: 148, column: 2, scope: !14054, inlinedAt: !14559)
!14564 = !DILocation(line: 148, column: 2, scope: !14055, inlinedAt: !14559)
!14565 = !DILocation(line: 148, column: 2, scope: !14058, inlinedAt: !14559)
!14566 = !DILocation(line: 160, column: 2, scope: !14037, inlinedAt: !14559)
!14567 = !DILocation(line: 639, column: 4, scope: !14568)
!14568 = distinct !DILexicalBlock(scope: !14569, file: !2446, line: 638, column: 41)
!14569 = distinct !DILexicalBlock(scope: !14570, file: !2446, line: 638, column: 7)
!14570 = distinct !DILexicalBlock(scope: !14571, file: !2446, line: 637, column: 26)
!14571 = distinct !DILexicalBlock(scope: !14554, file: !2446, line: 637, column: 2)
!14572 = !DILocation(line: 0, scope: !14071, inlinedAt: !14573)
!14573 = distinct !DILocation(line: 637, column: 2, scope: !14571)
!14574 = !DILocation(line: 194, column: 2, scope: !14079, inlinedAt: !14573)
!14575 = !DILocation(line: 194, column: 2, scope: !14080, inlinedAt: !14573)
!14576 = !DILocation(line: 194, column: 2, scope: !14083, inlinedAt: !14573)
!14577 = !DILocation(line: 0, scope: !14085, inlinedAt: !14578)
!14578 = distinct !DILocation(line: 215, column: 2, scope: !14071, inlinedAt: !14573)
!14579 = !DILocation(line: 95, column: 2, scope: !14085, inlinedAt: !14578)
!14580 = !DILocation(line: 642, column: 1, scope: !14550)
!14581 = distinct !DISubprogram(name: "ready_thread", scope: !2446, file: !2446, line: 617, type: !13995, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14582)
!14582 = !{!14583}
!14583 = !DILocalVariable(name: "thread", arg: 1, scope: !14581, file: !2446, line: 617, type: !2338)
!14584 = !DILocation(line: 0, scope: !14581)
!14585 = !DILocation(line: 626, column: 7, scope: !14586)
!14586 = distinct !DILexicalBlock(scope: !14581, file: !2446, line: 626, column: 6)
!14587 = !DILocation(line: 626, column: 34, scope: !14586)
!14588 = !DILocation(line: 626, column: 37, scope: !14586)
!14589 = !DILocation(line: 626, column: 6, scope: !14581)
!14590 = !DILocation(line: 0, scope: !14246, inlinedAt: !14591)
!14591 = distinct !DILocation(line: 629, column: 3, scope: !14592)
!14592 = distinct !DILexicalBlock(scope: !14586, file: !2446, line: 626, column: 64)
!14593 = !DILocation(line: 252, column: 15, scope: !14246, inlinedAt: !14591)
!14594 = !DILocation(line: 252, column: 28, scope: !14246, inlinedAt: !14591)
!14595 = !DILocation(line: 0, scope: !14253, inlinedAt: !14596)
!14596 = distinct !DILocation(line: 254, column: 3, scope: !14257, inlinedAt: !14591)
!14597 = !DILocation(line: 0, scope: !14260, inlinedAt: !14598)
!14598 = distinct !DILocation(line: 229, column: 2, scope: !14253, inlinedAt: !14596)
!14599 = !DILocation(line: 186, column: 2, scope: !14270, inlinedAt: !14598)
!14600 = !DILocation(line: 186, column: 2, scope: !14271, inlinedAt: !14598)
!14601 = !DILocation(line: 186, column: 2, scope: !14274, inlinedAt: !14598)
!14602 = !DILocation(line: 188, column: 2, scope: !14276, inlinedAt: !14598)
!14603 = !DILocation(line: 188, column: 2, scope: !14278, inlinedAt: !14598)
!14604 = !DILocation(line: 0, scope: !14276, inlinedAt: !14598)
!14605 = !DILocation(line: 189, column: 7, scope: !14281, inlinedAt: !14598)
!14606 = !DILocation(line: 189, column: 35, scope: !14281, inlinedAt: !14598)
!14607 = !DILocation(line: 189, column: 7, scope: !14282, inlinedAt: !14598)
!14608 = !DILocation(line: 191, column: 21, scope: !14286, inlinedAt: !14598)
!14609 = !DILocation(line: 190, column: 4, scope: !14286, inlinedAt: !14598)
!14610 = !DILocation(line: 192, column: 4, scope: !14286, inlinedAt: !14598)
!14611 = distinct !{!14611, !14602, !14612}
!14612 = !DILocation(line: 194, column: 2, scope: !14276, inlinedAt: !14598)
!14613 = !DILocation(line: 196, column: 37, scope: !14260, inlinedAt: !14598)
!14614 = !DILocation(line: 196, column: 2, scope: !14260, inlinedAt: !14598)
!14615 = !DILocation(line: 197, column: 1, scope: !14260, inlinedAt: !14598)
!14616 = !DILocation(line: 630, column: 3, scope: !14592)
!14617 = !DILocation(line: 632, column: 2, scope: !14592)
!14618 = !DILocation(line: 633, column: 1, scope: !14581)
!14619 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !12829, file: !12829, line: 120, type: !14178, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14620)
!14620 = !{!14621}
!14621 = !DILocalVariable(name: "thread", arg: 1, scope: !14619, file: !12829, line: 120, type: !2338)
!14622 = !DILocation(line: 0, scope: !14619)
!14623 = !DILocation(line: 122, column: 12, scope: !14619)
!14624 = !DILocation(line: 122, column: 62, scope: !14619)
!14625 = !DILocation(line: 123, column: 4, scope: !14619)
!14626 = !DILocation(line: 122, column: 2, scope: !14619)
!14627 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2446, file: !2446, line: 644, type: !13995, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14628)
!14628 = !{!14629, !14630, !14632}
!14629 = !DILocalVariable(name: "thread", arg: 1, scope: !14627, file: !2446, line: 644, type: !2338)
!14630 = !DILocalVariable(name: "__i", scope: !14631, file: !2446, line: 646, type: !14029)
!14631 = distinct !DILexicalBlock(scope: !14627, file: !2446, line: 646, column: 2)
!14632 = !DILocalVariable(name: "__key", scope: !14631, file: !2446, line: 646, type: !14029)
!14633 = !DILocation(line: 0, scope: !14627)
!14634 = !DILocation(line: 0, scope: !14631)
!14635 = !DILocation(line: 0, scope: !14037, inlinedAt: !14636)
!14636 = distinct !DILocation(line: 646, column: 2, scope: !14631)
!14637 = !DILocation(line: 55, column: 2, scope: !14046, inlinedAt: !14638)
!14638 = distinct !DILocation(line: 145, column: 10, scope: !14037, inlinedAt: !14636)
!14639 = !DILocation(line: 0, scope: !14046, inlinedAt: !14638)
!14640 = !DILocation(line: 148, column: 2, scope: !14054, inlinedAt: !14636)
!14641 = !DILocation(line: 148, column: 2, scope: !14055, inlinedAt: !14636)
!14642 = !DILocation(line: 148, column: 2, scope: !14058, inlinedAt: !14636)
!14643 = !DILocation(line: 160, column: 2, scope: !14037, inlinedAt: !14636)
!14644 = !DILocation(line: 647, column: 3, scope: !14645)
!14645 = distinct !DILexicalBlock(scope: !14646, file: !2446, line: 646, column: 26)
!14646 = distinct !DILexicalBlock(scope: !14631, file: !2446, line: 646, column: 2)
!14647 = !DILocation(line: 0, scope: !14071, inlinedAt: !14648)
!14648 = distinct !DILocation(line: 646, column: 2, scope: !14646)
!14649 = !DILocation(line: 194, column: 2, scope: !14079, inlinedAt: !14648)
!14650 = !DILocation(line: 194, column: 2, scope: !14080, inlinedAt: !14648)
!14651 = !DILocation(line: 194, column: 2, scope: !14083, inlinedAt: !14648)
!14652 = !DILocation(line: 0, scope: !14085, inlinedAt: !14653)
!14653 = distinct !DILocation(line: 215, column: 2, scope: !14071, inlinedAt: !14648)
!14654 = !DILocation(line: 95, column: 2, scope: !14085, inlinedAt: !14653)
!14655 = !DILocation(line: 649, column: 1, scope: !14627)
!14656 = distinct !DISubprogram(name: "z_sched_start", scope: !2446, file: !2446, line: 651, type: !13995, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14657)
!14657 = !{!14658, !14659}
!14658 = !DILocalVariable(name: "thread", arg: 1, scope: !14656, file: !2446, line: 651, type: !2338)
!14659 = !DILocalVariable(name: "key", scope: !14656, file: !2446, line: 653, type: !14029)
!14660 = !DILocation(line: 0, scope: !14656)
!14661 = !DILocation(line: 0, scope: !14037, inlinedAt: !14662)
!14662 = distinct !DILocation(line: 653, column: 25, scope: !14656)
!14663 = !DILocation(line: 55, column: 2, scope: !14046, inlinedAt: !14664)
!14664 = distinct !DILocation(line: 145, column: 10, scope: !14037, inlinedAt: !14662)
!14665 = !DILocation(line: 0, scope: !14046, inlinedAt: !14664)
!14666 = !DILocation(line: 148, column: 2, scope: !14054, inlinedAt: !14662)
!14667 = !DILocation(line: 148, column: 2, scope: !14055, inlinedAt: !14662)
!14668 = !DILocation(line: 148, column: 2, scope: !14058, inlinedAt: !14662)
!14669 = !DILocation(line: 160, column: 2, scope: !14037, inlinedAt: !14662)
!14670 = !DILocation(line: 655, column: 6, scope: !14671)
!14671 = distinct !DILexicalBlock(scope: !14656, file: !2446, line: 655, column: 6)
!14672 = !DILocation(line: 655, column: 6, scope: !14656)
!14673 = !DILocation(line: 0, scope: !14071, inlinedAt: !14674)
!14674 = distinct !DILocation(line: 656, column: 3, scope: !14675)
!14675 = distinct !DILexicalBlock(scope: !14671, file: !2446, line: 655, column: 36)
!14676 = !DILocation(line: 194, column: 2, scope: !14079, inlinedAt: !14674)
!14677 = !DILocation(line: 194, column: 2, scope: !14080, inlinedAt: !14674)
!14678 = !DILocation(line: 194, column: 2, scope: !14083, inlinedAt: !14674)
!14679 = !DILocation(line: 0, scope: !14085, inlinedAt: !14680)
!14680 = distinct !DILocation(line: 215, column: 2, scope: !14071, inlinedAt: !14674)
!14681 = !DILocation(line: 95, column: 2, scope: !14085, inlinedAt: !14680)
!14682 = !DILocation(line: 657, column: 3, scope: !14675)
!14683 = !DILocation(line: 660, column: 2, scope: !14656)
!14684 = !DILocation(line: 661, column: 2, scope: !14656)
!14685 = !DILocation(line: 662, column: 2, scope: !14656)
!14686 = !DILocation(line: 663, column: 1, scope: !14656)
!14687 = distinct !DISubprogram(name: "z_has_thread_started", scope: !12829, file: !12829, line: 126, type: !14178, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14688)
!14688 = !{!14689}
!14689 = !DILocalVariable(name: "thread", arg: 1, scope: !14687, file: !12829, line: 126, type: !2338)
!14690 = !DILocation(line: 0, scope: !14687)
!14691 = !DILocation(line: 128, column: 23, scope: !14687)
!14692 = !DILocation(line: 128, column: 36, scope: !14687)
!14693 = !DILocation(line: 128, column: 56, scope: !14687)
!14694 = !DILocation(line: 128, column: 2, scope: !14687)
!14695 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12829, file: !12829, line: 155, type: !13995, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14696)
!14696 = !{!14697}
!14697 = !DILocalVariable(name: "thread", arg: 1, scope: !14695, file: !12829, line: 155, type: !2338)
!14698 = !DILocation(line: 0, scope: !14695)
!14699 = !DILocation(line: 157, column: 15, scope: !14695)
!14700 = !DILocation(line: 157, column: 28, scope: !14695)
!14701 = !DILocation(line: 158, column: 1, scope: !14695)
!14702 = distinct !DISubprogram(name: "z_reschedule", scope: !2446, file: !2446, line: 967, type: !14072, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14703)
!14703 = !{!14704, !14705}
!14704 = !DILocalVariable(name: "lock", arg: 1, scope: !14702, file: !2446, line: 967, type: !14040)
!14705 = !DILocalVariable(name: "key", arg: 2, scope: !14702, file: !2446, line: 967, type: !14029)
!14706 = !DILocation(line: 0, scope: !14702)
!14707 = !DILocation(line: 969, column: 6, scope: !14708)
!14708 = distinct !DILexicalBlock(scope: !14702, file: !2446, line: 969, column: 6)
!14709 = !DILocation(line: 969, column: 23, scope: !14708)
!14710 = !DILocation(line: 969, column: 26, scope: !14708)
!14711 = !DILocation(line: 969, column: 6, scope: !14702)
!14712 = !DILocalVariable(name: "key", arg: 2, scope: !14713, file: !12933, line: 193, type: !14029)
!14713 = distinct !DISubprogram(name: "z_swap", scope: !12933, file: !12933, line: 193, type: !14714, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14716)
!14714 = !DISubroutineType(types: !14715)
!14715 = !{!109, !14040, !14029}
!14716 = !{!14717, !14712}
!14717 = !DILocalVariable(name: "lock", arg: 1, scope: !14713, file: !12933, line: 193, type: !14040)
!14718 = !DILocation(line: 0, scope: !14713, inlinedAt: !14719)
!14719 = distinct !DILocation(line: 970, column: 3, scope: !14720)
!14720 = distinct !DILexicalBlock(scope: !14708, file: !2446, line: 969, column: 39)
!14721 = !DILocalVariable(name: "l", arg: 1, scope: !14722, file: !251, line: 221, type: !14040)
!14722 = distinct !DISubprogram(name: "k_spin_release", scope: !251, file: !251, line: 221, type: !14723, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14725)
!14723 = !DISubroutineType(types: !14724)
!14724 = !{null, !14040}
!14725 = !{!14721}
!14726 = !DILocation(line: 0, scope: !14722, inlinedAt: !14727)
!14727 = distinct !DILocation(line: 195, column: 2, scope: !14713, inlinedAt: !14719)
!14728 = !DILocation(line: 225, column: 2, scope: !14729, inlinedAt: !14727)
!14729 = distinct !DILexicalBlock(scope: !14730, file: !251, line: 225, column: 2)
!14730 = distinct !DILexicalBlock(scope: !14722, file: !251, line: 225, column: 2)
!14731 = !DILocation(line: 225, column: 2, scope: !14730, inlinedAt: !14727)
!14732 = !DILocation(line: 225, column: 2, scope: !14733, inlinedAt: !14727)
!14733 = distinct !DILexicalBlock(scope: !14729, file: !251, line: 225, column: 2)
!14734 = !DILocation(line: 196, column: 9, scope: !14713, inlinedAt: !14719)
!14735 = !DILocation(line: 971, column: 2, scope: !14720)
!14736 = !DILocation(line: 0, scope: !14071, inlinedAt: !14737)
!14737 = distinct !DILocation(line: 972, column: 3, scope: !14738)
!14738 = distinct !DILexicalBlock(scope: !14708, file: !2446, line: 971, column: 9)
!14739 = !DILocation(line: 194, column: 2, scope: !14079, inlinedAt: !14737)
!14740 = !DILocation(line: 194, column: 2, scope: !14080, inlinedAt: !14737)
!14741 = !DILocation(line: 194, column: 2, scope: !14083, inlinedAt: !14737)
!14742 = !DILocation(line: 0, scope: !14085, inlinedAt: !14743)
!14743 = distinct !DILocation(line: 215, column: 2, scope: !14071, inlinedAt: !14737)
!14744 = !DILocation(line: 95, column: 2, scope: !14085, inlinedAt: !14743)
!14745 = !DILocation(line: 975, column: 1, scope: !14702)
!14746 = distinct !DISubprogram(name: "resched", scope: !2446, file: !2446, line: 940, type: !14747, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14749)
!14747 = !DISubroutineType(types: !14748)
!14748 = !{!347, !110}
!14749 = !{!14750}
!14750 = !DILocalVariable(name: "key", arg: 1, scope: !14746, file: !2446, line: 940, type: !110)
!14751 = !DILocation(line: 0, scope: !14746)
!14752 = !DILocalVariable(name: "key", arg: 1, scope: !14753, file: !6100, line: 112, type: !32)
!14753 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !6100, file: !6100, line: 112, type: !14754, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14756)
!14754 = !DISubroutineType(types: !14755)
!14755 = !{!347, !32}
!14756 = !{!14752}
!14757 = !DILocation(line: 0, scope: !14753, inlinedAt: !14758)
!14758 = distinct !DILocation(line: 946, column: 9, scope: !14746)
!14759 = !DILocation(line: 115, column: 13, scope: !14753, inlinedAt: !14758)
!14760 = !DILocation(line: 946, column: 32, scope: !14746)
!14761 = !DILocation(line: 1031, column: 3, scope: !14762, inlinedAt: !14765)
!14762 = distinct !DISubprogram(name: "__get_IPSR", scope: !6421, file: !6421, line: 1027, type: !6508, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14763)
!14763 = !{!14764}
!14764 = !DILocalVariable(name: "result", scope: !14762, file: !6421, line: 1029, type: !110)
!14765 = distinct !DILocation(line: 48, column: 10, scope: !14766, inlinedAt: !14767)
!14766 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7473, file: !7473, line: 46, type: !7474, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !2036)
!14767 = distinct !DILocation(line: 946, column: 36, scope: !14746)
!14768 = !{i64 3587752}
!14769 = !DILocation(line: 0, scope: !14762, inlinedAt: !14765)
!14770 = !DILocation(line: 48, column: 9, scope: !14766, inlinedAt: !14767)
!14771 = !DILocation(line: 946, column: 2, scope: !14746)
!14772 = distinct !DISubprogram(name: "need_swap", scope: !2446, file: !2446, line: 953, type: !7474, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14773)
!14773 = !{!14774}
!14774 = !DILocalVariable(name: "new_thread", scope: !14772, file: !2446, line: 959, type: !2338)
!14775 = !DILocation(line: 962, column: 31, scope: !14772)
!14776 = !DILocation(line: 0, scope: !14772)
!14777 = !DILocation(line: 963, column: 23, scope: !14772)
!14778 = !DILocation(line: 963, column: 20, scope: !14772)
!14779 = !DILocation(line: 963, column: 2, scope: !14772)
!14780 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !12933, file: !12933, line: 181, type: !6431, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14781)
!14781 = !{!14782, !14783}
!14782 = !DILocalVariable(name: "key", arg: 1, scope: !14780, file: !12933, line: 181, type: !32)
!14783 = !DILocalVariable(name: "ret", scope: !14780, file: !12933, line: 183, type: !109)
!14784 = !DILocation(line: 0, scope: !14780)
!14785 = !DILocation(line: 185, column: 8, scope: !14780)
!14786 = !DILocation(line: 186, column: 2, scope: !14780)
!14787 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2446, file: !2446, line: 665, type: !13995, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14788)
!14788 = !{!14789, !14790, !14792}
!14789 = !DILocalVariable(name: "thread", arg: 1, scope: !14787, file: !2446, line: 665, type: !2338)
!14790 = !DILocalVariable(name: "__i", scope: !14791, file: !2446, line: 671, type: !14029)
!14791 = distinct !DILexicalBlock(scope: !14787, file: !2446, line: 671, column: 2)
!14792 = !DILocalVariable(name: "__key", scope: !14791, file: !2446, line: 671, type: !14029)
!14793 = !DILocation(line: 0, scope: !14787)
!14794 = !DILocation(line: 669, column: 8, scope: !14787)
!14795 = !DILocation(line: 0, scope: !14791)
!14796 = !DILocation(line: 0, scope: !14037, inlinedAt: !14797)
!14797 = distinct !DILocation(line: 671, column: 2, scope: !14791)
!14798 = !DILocation(line: 55, column: 2, scope: !14046, inlinedAt: !14799)
!14799 = distinct !DILocation(line: 145, column: 10, scope: !14037, inlinedAt: !14797)
!14800 = !DILocation(line: 0, scope: !14046, inlinedAt: !14799)
!14801 = !DILocation(line: 148, column: 2, scope: !14054, inlinedAt: !14797)
!14802 = !DILocation(line: 148, column: 2, scope: !14055, inlinedAt: !14797)
!14803 = !DILocation(line: 148, column: 2, scope: !14058, inlinedAt: !14797)
!14804 = !DILocation(line: 160, column: 2, scope: !14037, inlinedAt: !14797)
!14805 = !DILocation(line: 672, column: 7, scope: !14806)
!14806 = distinct !DILexicalBlock(scope: !14807, file: !2446, line: 672, column: 7)
!14807 = distinct !DILexicalBlock(scope: !14808, file: !2446, line: 671, column: 26)
!14808 = distinct !DILexicalBlock(scope: !14791, file: !2446, line: 671, column: 2)
!14809 = !DILocation(line: 672, column: 7, scope: !14807)
!14810 = !DILocation(line: 0, scope: !14229, inlinedAt: !14811)
!14811 = distinct !DILocation(line: 673, column: 4, scope: !14812)
!14812 = distinct !DILexicalBlock(scope: !14806, file: !2446, line: 672, column: 35)
!14813 = !DILocation(line: 266, column: 15, scope: !14229, inlinedAt: !14811)
!14814 = !DILocation(line: 266, column: 28, scope: !14229, inlinedAt: !14811)
!14815 = !DILocation(line: 0, scope: !14237, inlinedAt: !14816)
!14816 = distinct !DILocation(line: 268, column: 3, scope: !14241, inlinedAt: !14811)
!14817 = !DILocation(line: 234, column: 2, scope: !14237, inlinedAt: !14816)
!14818 = !DILocation(line: 674, column: 3, scope: !14812)
!14819 = !DILocation(line: 675, column: 3, scope: !14807)
!14820 = !DILocation(line: 676, column: 26, scope: !14807)
!14821 = !DILocation(line: 676, column: 23, scope: !14807)
!14822 = !DILocation(line: 676, column: 3, scope: !14807)
!14823 = !DILocation(line: 0, scope: !14071, inlinedAt: !14824)
!14824 = distinct !DILocation(line: 671, column: 2, scope: !14808)
!14825 = !DILocation(line: 194, column: 2, scope: !14079, inlinedAt: !14824)
!14826 = !DILocation(line: 194, column: 2, scope: !14080, inlinedAt: !14824)
!14827 = !DILocation(line: 194, column: 2, scope: !14083, inlinedAt: !14824)
!14828 = !DILocation(line: 0, scope: !14085, inlinedAt: !14829)
!14829 = distinct !DILocation(line: 215, column: 2, scope: !14071, inlinedAt: !14824)
!14830 = !DILocation(line: 95, column: 2, scope: !14085, inlinedAt: !14829)
!14831 = !DILocation(line: 679, column: 16, scope: !14832)
!14832 = distinct !DILexicalBlock(scope: !14787, file: !2446, line: 679, column: 6)
!14833 = !DILocation(line: 679, column: 13, scope: !14832)
!14834 = !DILocation(line: 679, column: 6, scope: !14787)
!14835 = !DILocation(line: 680, column: 3, scope: !14836)
!14836 = distinct !DILexicalBlock(scope: !14832, file: !2446, line: 679, column: 26)
!14837 = !DILocation(line: 681, column: 2, scope: !14836)
!14838 = !DILocation(line: 684, column: 1, scope: !14787)
!14839 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !13258, file: !13258, line: 52, type: !14013, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14840)
!14840 = !{!14841}
!14841 = !DILocalVariable(name: "thread", arg: 1, scope: !14839, file: !13258, line: 52, type: !2338)
!14842 = !DILocation(line: 0, scope: !14839)
!14843 = !DILocation(line: 54, column: 39, scope: !14839)
!14844 = !DILocation(line: 54, column: 9, scope: !14839)
!14845 = !DILocation(line: 54, column: 2, scope: !14839)
!14846 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !12829, file: !12829, line: 141, type: !13995, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14847)
!14847 = !{!14848}
!14848 = !DILocalVariable(name: "thread", arg: 1, scope: !14846, file: !12829, line: 141, type: !2338)
!14849 = !DILocation(line: 0, scope: !14846)
!14850 = !DILocation(line: 143, column: 15, scope: !14846)
!14851 = !DILocation(line: 143, column: 28, scope: !14846)
!14852 = !DILocation(line: 146, column: 1, scope: !14846)
!14853 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !12829, file: !12829, line: 73, type: !3096, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !2036)
!14854 = !DILocation(line: 55, column: 2, scope: !14046, inlinedAt: !14855)
!14855 = distinct !DILocation(line: 75, column: 30, scope: !14853)
!14856 = !DILocation(line: 0, scope: !14046, inlinedAt: !14855)
!14857 = !DILocation(line: 75, column: 9, scope: !14853)
!14858 = !DILocation(line: 76, column: 1, scope: !14853)
!14859 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2446, file: !2446, line: 977, type: !6518, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14860)
!14860 = !{!14861}
!14861 = !DILocalVariable(name: "key", arg: 1, scope: !14859, file: !2446, line: 977, type: !110)
!14862 = !DILocation(line: 0, scope: !14859)
!14863 = !DILocation(line: 979, column: 6, scope: !14864)
!14864 = distinct !DILexicalBlock(scope: !14859, file: !2446, line: 979, column: 6)
!14865 = !DILocation(line: 979, column: 6, scope: !14859)
!14866 = !DILocation(line: 980, column: 3, scope: !14867)
!14867 = distinct !DILexicalBlock(scope: !14864, file: !2446, line: 979, column: 20)
!14868 = !DILocation(line: 981, column: 2, scope: !14867)
!14869 = !DILocation(line: 0, scope: !14085, inlinedAt: !14870)
!14870 = distinct !DILocation(line: 982, column: 3, scope: !14871)
!14871 = distinct !DILexicalBlock(scope: !14864, file: !2446, line: 981, column: 9)
!14872 = !DILocation(line: 95, column: 2, scope: !14085, inlinedAt: !14870)
!14873 = !DILocation(line: 985, column: 1, scope: !14859)
!14874 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2446, file: !2446, line: 695, type: !13995, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14875)
!14875 = !{!14876, !14877}
!14876 = !DILocalVariable(name: "thread", arg: 1, scope: !14874, file: !2446, line: 695, type: !2338)
!14877 = !DILocalVariable(name: "key", scope: !14874, file: !2446, line: 699, type: !14029)
!14878 = !DILocation(line: 0, scope: !14874)
!14879 = !DILocation(line: 0, scope: !14037, inlinedAt: !14880)
!14880 = distinct !DILocation(line: 699, column: 25, scope: !14874)
!14881 = !DILocation(line: 55, column: 2, scope: !14046, inlinedAt: !14882)
!14882 = distinct !DILocation(line: 145, column: 10, scope: !14037, inlinedAt: !14880)
!14883 = !DILocation(line: 0, scope: !14046, inlinedAt: !14882)
!14884 = !DILocation(line: 148, column: 2, scope: !14054, inlinedAt: !14880)
!14885 = !DILocation(line: 148, column: 2, scope: !14055, inlinedAt: !14880)
!14886 = !DILocation(line: 148, column: 2, scope: !14058, inlinedAt: !14880)
!14887 = !DILocation(line: 160, column: 2, scope: !14037, inlinedAt: !14880)
!14888 = !DILocation(line: 702, column: 7, scope: !14889)
!14889 = distinct !DILexicalBlock(scope: !14874, file: !2446, line: 702, column: 6)
!14890 = !DILocation(line: 702, column: 6, scope: !14874)
!14891 = !DILocation(line: 0, scope: !14071, inlinedAt: !14892)
!14892 = distinct !DILocation(line: 703, column: 3, scope: !14893)
!14893 = distinct !DILexicalBlock(scope: !14889, file: !2446, line: 702, column: 38)
!14894 = !DILocation(line: 194, column: 2, scope: !14079, inlinedAt: !14892)
!14895 = !DILocation(line: 194, column: 2, scope: !14080, inlinedAt: !14892)
!14896 = !DILocation(line: 194, column: 2, scope: !14083, inlinedAt: !14892)
!14897 = !DILocation(line: 0, scope: !14085, inlinedAt: !14898)
!14898 = distinct !DILocation(line: 215, column: 2, scope: !14071, inlinedAt: !14892)
!14899 = !DILocation(line: 95, column: 2, scope: !14085, inlinedAt: !14898)
!14900 = !DILocation(line: 704, column: 3, scope: !14893)
!14901 = !DILocation(line: 707, column: 2, scope: !14874)
!14902 = !DILocation(line: 708, column: 2, scope: !14874)
!14903 = !DILocation(line: 710, column: 2, scope: !14874)
!14904 = !DILocation(line: 713, column: 1, scope: !14874)
!14905 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !12829, file: !12829, line: 96, type: !14178, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14906)
!14906 = !{!14907}
!14907 = !DILocalVariable(name: "thread", arg: 1, scope: !14905, file: !12829, line: 96, type: !2338)
!14908 = !DILocation(line: 0, scope: !14905)
!14909 = !DILocation(line: 98, column: 23, scope: !14905)
!14910 = !DILocation(line: 98, column: 36, scope: !14905)
!14911 = !DILocation(line: 98, column: 57, scope: !14905)
!14912 = !DILocation(line: 98, column: 2, scope: !14905)
!14913 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !12829, file: !12829, line: 148, type: !13995, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14914)
!14914 = !{!14915}
!14915 = !DILocalVariable(name: "thread", arg: 1, scope: !14913, file: !12829, line: 148, type: !2338)
!14916 = !DILocation(line: 0, scope: !14913)
!14917 = !DILocation(line: 150, column: 15, scope: !14913)
!14918 = !DILocation(line: 150, column: 28, scope: !14913)
!14919 = !DILocation(line: 153, column: 1, scope: !14913)
!14920 = distinct !DISubprogram(name: "z_pend_thread", scope: !2446, file: !2446, line: 770, type: !14921, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14927)
!14921 = !DISubroutineType(types: !14922)
!14922 = !{null, !2338, !2369, !14923}
!14923 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !14924)
!14924 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !14925)
!14925 = !{!14926}
!14926 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14924, file: !104, line: 66, baseType: !103, size: 64)
!14927 = !{!14928, !14929, !14930, !14931, !14933}
!14928 = !DILocalVariable(name: "thread", arg: 1, scope: !14920, file: !2446, line: 770, type: !2338)
!14929 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14920, file: !2446, line: 770, type: !2369)
!14930 = !DILocalVariable(name: "timeout", arg: 3, scope: !14920, file: !2446, line: 771, type: !14923)
!14931 = !DILocalVariable(name: "__i", scope: !14932, file: !2446, line: 774, type: !14029)
!14932 = distinct !DILexicalBlock(scope: !14920, file: !2446, line: 774, column: 2)
!14933 = !DILocalVariable(name: "__key", scope: !14932, file: !2446, line: 774, type: !14029)
!14934 = !DILocation(line: 0, scope: !14920)
!14935 = !DILocation(line: 773, column: 2, scope: !14936)
!14936 = distinct !DILexicalBlock(scope: !14937, file: !2446, line: 773, column: 2)
!14937 = distinct !DILexicalBlock(scope: !14920, file: !2446, line: 773, column: 2)
!14938 = !DILocation(line: 773, column: 2, scope: !14937)
!14939 = !DILocation(line: 773, column: 2, scope: !14940)
!14940 = distinct !DILexicalBlock(scope: !14936, file: !2446, line: 773, column: 2)
!14941 = !DILocation(line: 0, scope: !14932)
!14942 = !DILocation(line: 0, scope: !14037, inlinedAt: !14943)
!14943 = distinct !DILocation(line: 774, column: 2, scope: !14932)
!14944 = !DILocation(line: 55, column: 2, scope: !14046, inlinedAt: !14945)
!14945 = distinct !DILocation(line: 145, column: 10, scope: !14037, inlinedAt: !14943)
!14946 = !DILocation(line: 0, scope: !14046, inlinedAt: !14945)
!14947 = !DILocation(line: 148, column: 2, scope: !14054, inlinedAt: !14943)
!14948 = !DILocation(line: 148, column: 2, scope: !14055, inlinedAt: !14943)
!14949 = !DILocation(line: 148, column: 2, scope: !14058, inlinedAt: !14943)
!14950 = !DILocation(line: 160, column: 2, scope: !14037, inlinedAt: !14943)
!14951 = !DILocation(line: 775, column: 3, scope: !14952)
!14952 = distinct !DILexicalBlock(scope: !14953, file: !2446, line: 774, column: 26)
!14953 = distinct !DILexicalBlock(scope: !14932, file: !2446, line: 774, column: 2)
!14954 = !DILocation(line: 0, scope: !14071, inlinedAt: !14955)
!14955 = distinct !DILocation(line: 774, column: 2, scope: !14953)
!14956 = !DILocation(line: 194, column: 2, scope: !14079, inlinedAt: !14955)
!14957 = !DILocation(line: 194, column: 2, scope: !14080, inlinedAt: !14955)
!14958 = !DILocation(line: 194, column: 2, scope: !14083, inlinedAt: !14955)
!14959 = !DILocation(line: 0, scope: !14085, inlinedAt: !14960)
!14960 = distinct !DILocation(line: 215, column: 2, scope: !14071, inlinedAt: !14955)
!14961 = !DILocation(line: 95, column: 2, scope: !14085, inlinedAt: !14960)
!14962 = !DILocation(line: 777, column: 1, scope: !14920)
!14963 = distinct !DISubprogram(name: "is_thread_dummy", scope: !2446, file: !2446, line: 79, type: !14178, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14964)
!14964 = !{!14965}
!14965 = !DILocalVariable(name: "thread", arg: 1, scope: !14963, file: !2446, line: 79, type: !2338)
!14966 = !DILocation(line: 0, scope: !14963)
!14967 = !DILocation(line: 81, column: 23, scope: !14963)
!14968 = !DILocation(line: 81, column: 36, scope: !14963)
!14969 = !DILocation(line: 81, column: 53, scope: !14963)
!14970 = !DILocation(line: 81, column: 2, scope: !14963)
!14971 = distinct !DISubprogram(name: "pend_locked", scope: !2446, file: !2446, line: 760, type: !14921, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14972)
!14972 = !{!14973, !14974, !14975}
!14973 = !DILocalVariable(name: "thread", arg: 1, scope: !14971, file: !2446, line: 760, type: !2338)
!14974 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14971, file: !2446, line: 760, type: !2369)
!14975 = !DILocalVariable(name: "timeout", arg: 3, scope: !14971, file: !2446, line: 761, type: !14923)
!14976 = !DILocation(line: 0, scope: !14971)
!14977 = !DILocation(line: 766, column: 2, scope: !14971)
!14978 = !DILocation(line: 767, column: 2, scope: !14971)
!14979 = !DILocation(line: 768, column: 1, scope: !14971)
!14980 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2446, file: !2446, line: 740, type: !14981, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !14983)
!14981 = !DISubroutineType(types: !14982)
!14982 = !{null, !2338, !2369}
!14983 = !{!14984, !14985}
!14984 = !DILocalVariable(name: "thread", arg: 1, scope: !14980, file: !2446, line: 740, type: !2338)
!14985 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14980, file: !2446, line: 740, type: !2369)
!14986 = !DILocation(line: 0, scope: !14980)
!14987 = !DILocation(line: 742, column: 2, scope: !14980)
!14988 = !DILocation(line: 743, column: 2, scope: !14980)
!14989 = !DILocation(line: 747, column: 13, scope: !14990)
!14990 = distinct !DILexicalBlock(scope: !14980, file: !2446, line: 747, column: 6)
!14991 = !DILocation(line: 747, column: 6, scope: !14980)
!14992 = !DILocation(line: 748, column: 16, scope: !14993)
!14993 = distinct !DILexicalBlock(scope: !14990, file: !2446, line: 747, column: 22)
!14994 = !DILocation(line: 748, column: 26, scope: !14993)
!14995 = !DILocation(line: 749, column: 28, scope: !14993)
!14996 = !DILocation(line: 0, scope: !14260, inlinedAt: !14997)
!14997 = distinct !DILocation(line: 749, column: 3, scope: !14993)
!14998 = !DILocation(line: 186, column: 2, scope: !14270, inlinedAt: !14997)
!14999 = !DILocation(line: 186, column: 2, scope: !14271, inlinedAt: !14997)
!15000 = !DILocation(line: 186, column: 2, scope: !14274, inlinedAt: !14997)
!15001 = !DILocation(line: 188, column: 2, scope: !14276, inlinedAt: !14997)
!15002 = !DILocation(line: 188, column: 2, scope: !14278, inlinedAt: !14997)
!15003 = !DILocation(line: 0, scope: !14276, inlinedAt: !14997)
!15004 = !DILocation(line: 189, column: 7, scope: !14281, inlinedAt: !14997)
!15005 = !DILocation(line: 189, column: 35, scope: !14281, inlinedAt: !14997)
!15006 = !DILocation(line: 189, column: 7, scope: !14282, inlinedAt: !14997)
!15007 = !DILocation(line: 191, column: 21, scope: !14286, inlinedAt: !14997)
!15008 = !DILocation(line: 190, column: 4, scope: !14286, inlinedAt: !14997)
!15009 = !DILocation(line: 192, column: 4, scope: !14286, inlinedAt: !14997)
!15010 = distinct !{!15010, !15001, !15011}
!15011 = !DILocation(line: 194, column: 2, scope: !14276, inlinedAt: !14997)
!15012 = !DILocation(line: 196, column: 37, scope: !14260, inlinedAt: !14997)
!15013 = !DILocation(line: 196, column: 2, scope: !14260, inlinedAt: !14997)
!15014 = !DILocation(line: 197, column: 1, scope: !14260, inlinedAt: !14997)
!15015 = !DILocation(line: 751, column: 1, scope: !14980)
!15016 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2446, file: !2446, line: 753, type: !15017, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !15019)
!15017 = !DISubroutineType(types: !15018)
!15018 = !{null, !2338, !14923}
!15019 = !{!15020, !15021}
!15020 = !DILocalVariable(name: "thread", arg: 1, scope: !15016, file: !2446, line: 753, type: !2338)
!15021 = !DILocalVariable(name: "timeout", arg: 2, scope: !15016, file: !2446, line: 753, type: !14923)
!15022 = !DILocation(line: 0, scope: !15016)
!15023 = !DILocation(line: 755, column: 7, scope: !15024)
!15024 = distinct !DILexicalBlock(scope: !15016, file: !2446, line: 755, column: 6)
!15025 = !DILocation(line: 755, column: 6, scope: !15016)
!15026 = !DILocation(line: 756, column: 3, scope: !15027)
!15027 = distinct !DILexicalBlock(scope: !15024, file: !2446, line: 755, column: 41)
!15028 = !DILocation(line: 757, column: 2, scope: !15027)
!15029 = !DILocation(line: 758, column: 1, scope: !15016)
!15030 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13258, file: !13258, line: 47, type: !15017, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !15031)
!15031 = !{!15032, !15033}
!15032 = !DILocalVariable(name: "thread", arg: 1, scope: !15030, file: !13258, line: 47, type: !2338)
!15033 = !DILocalVariable(name: "ticks", arg: 2, scope: !15030, file: !13258, line: 47, type: !14923)
!15034 = !DILocation(line: 0, scope: !15030)
!15035 = !DILocation(line: 49, column: 30, scope: !15030)
!15036 = !DILocation(line: 49, column: 2, scope: !15030)
!15037 = !DILocation(line: 50, column: 1, scope: !15030)
!15038 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2446, file: !2446, line: 795, type: !2395, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !15039)
!15039 = !{!15040, !15041, !15042, !15044, !15045}
!15040 = !DILocalVariable(name: "timeout", arg: 1, scope: !15038, file: !2446, line: 795, type: !2397)
!15041 = !DILocalVariable(name: "thread", scope: !15038, file: !2446, line: 797, type: !2338)
!15042 = !DILocalVariable(name: "__i", scope: !15043, file: !2446, line: 800, type: !14029)
!15043 = distinct !DILexicalBlock(scope: !15038, file: !2446, line: 800, column: 2)
!15044 = !DILocalVariable(name: "__key", scope: !15043, file: !2446, line: 800, type: !14029)
!15045 = !DILocalVariable(name: "killed", scope: !15046, file: !2446, line: 801, type: !347)
!15046 = distinct !DILexicalBlock(scope: !15047, file: !2446, line: 800, column: 26)
!15047 = distinct !DILexicalBlock(scope: !15043, file: !2446, line: 800, column: 2)
!15048 = !DILocation(line: 0, scope: !15038)
!15049 = !DILocation(line: 797, column: 28, scope: !15038)
!15050 = !DILocation(line: 0, scope: !15043)
!15051 = !DILocation(line: 0, scope: !14037, inlinedAt: !15052)
!15052 = distinct !DILocation(line: 800, column: 2, scope: !15043)
!15053 = !DILocation(line: 55, column: 2, scope: !14046, inlinedAt: !15054)
!15054 = distinct !DILocation(line: 145, column: 10, scope: !14037, inlinedAt: !15052)
!15055 = !DILocation(line: 0, scope: !14046, inlinedAt: !15054)
!15056 = !DILocation(line: 148, column: 2, scope: !14054, inlinedAt: !15052)
!15057 = !DILocation(line: 148, column: 2, scope: !14055, inlinedAt: !15052)
!15058 = !DILocation(line: 148, column: 2, scope: !14058, inlinedAt: !15052)
!15059 = !DILocation(line: 160, column: 2, scope: !14037, inlinedAt: !15052)
!15060 = !DILocation(line: 801, column: 27, scope: !15046)
!15061 = !DILocation(line: 801, column: 32, scope: !15046)
!15062 = !DILocation(line: 801, column: 61, scope: !15046)
!15063 = !DILocation(line: 0, scope: !15046)
!15064 = !DILocation(line: 804, column: 7, scope: !15046)
!15065 = !DILocation(line: 805, column: 21, scope: !15066)
!15066 = distinct !DILexicalBlock(scope: !15067, file: !2446, line: 805, column: 8)
!15067 = distinct !DILexicalBlock(scope: !15068, file: !2446, line: 804, column: 16)
!15068 = distinct !DILexicalBlock(scope: !15046, file: !2446, line: 804, column: 7)
!15069 = !DILocation(line: 805, column: 31, scope: !15066)
!15070 = !DILocation(line: 805, column: 8, scope: !15067)
!15071 = !DILocation(line: 806, column: 5, scope: !15072)
!15072 = distinct !DILexicalBlock(scope: !15066, file: !2446, line: 805, column: 40)
!15073 = !DILocation(line: 807, column: 4, scope: !15072)
!15074 = !DILocation(line: 808, column: 4, scope: !15067)
!15075 = !DILocation(line: 809, column: 4, scope: !15067)
!15076 = !DILocation(line: 810, column: 4, scope: !15067)
!15077 = !DILocation(line: 811, column: 3, scope: !15067)
!15078 = !DILocation(line: 0, scope: !14071, inlinedAt: !15079)
!15079 = distinct !DILocation(line: 800, column: 2, scope: !15047)
!15080 = !DILocation(line: 194, column: 2, scope: !14079, inlinedAt: !15079)
!15081 = !DILocation(line: 194, column: 2, scope: !14080, inlinedAt: !15079)
!15082 = !DILocation(line: 194, column: 2, scope: !14083, inlinedAt: !15079)
!15083 = !DILocation(line: 0, scope: !14085, inlinedAt: !15084)
!15084 = distinct !DILocation(line: 215, column: 2, scope: !14071, inlinedAt: !15079)
!15085 = !DILocation(line: 95, column: 2, scope: !14085, inlinedAt: !15084)
!15086 = !DILocation(line: 813, column: 1, scope: !15038)
!15087 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2446, file: !2446, line: 779, type: !13995, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !15088)
!15088 = !{!15089}
!15089 = !DILocalVariable(name: "thread", arg: 1, scope: !15087, file: !2446, line: 779, type: !2338)
!15090 = !DILocation(line: 0, scope: !15087)
!15091 = !DILocation(line: 781, column: 21, scope: !15087)
!15092 = !DILocation(line: 781, column: 2, scope: !15087)
!15093 = !DILocation(line: 782, column: 2, scope: !15087)
!15094 = !DILocation(line: 783, column: 15, scope: !15087)
!15095 = !DILocation(line: 783, column: 25, scope: !15087)
!15096 = !DILocation(line: 784, column: 1, scope: !15087)
!15097 = distinct !DISubprogram(name: "pended_on_thread", scope: !2446, file: !2446, line: 724, type: !15098, scopeLine: 725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !15100)
!15098 = !DISubroutineType(types: !15099)
!15099 = !{!2369, !2338}
!15100 = !{!15101}
!15101 = !DILocalVariable(name: "thread", arg: 1, scope: !15097, file: !2446, line: 724, type: !2338)
!15102 = !DILocation(line: 0, scope: !15097)
!15103 = !DILocation(line: 726, column: 2, scope: !15104)
!15104 = distinct !DILexicalBlock(scope: !15105, file: !2446, line: 726, column: 2)
!15105 = distinct !DILexicalBlock(scope: !15097, file: !2446, line: 726, column: 2)
!15106 = !DILocation(line: 726, column: 2, scope: !15105)
!15107 = !DILocation(line: 726, column: 2, scope: !15108)
!15108 = distinct !DILexicalBlock(scope: !15104, file: !2446, line: 726, column: 2)
!15109 = !DILocation(line: 728, column: 2, scope: !15097)
!15110 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !12829, file: !12829, line: 165, type: !13995, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !15111)
!15111 = !{!15112}
!15112 = !DILocalVariable(name: "thread", arg: 1, scope: !15110, file: !12829, line: 165, type: !2338)
!15113 = !DILocation(line: 0, scope: !15110)
!15114 = !DILocation(line: 167, column: 15, scope: !15110)
!15115 = !DILocation(line: 167, column: 28, scope: !15110)
!15116 = !DILocation(line: 168, column: 1, scope: !15110)
!15117 = distinct !DISubprogram(name: "unready_thread", scope: !2446, file: !2446, line: 731, type: !13995, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !15118)
!15118 = !{!15119}
!15119 = !DILocalVariable(name: "thread", arg: 1, scope: !15117, file: !2446, line: 731, type: !2338)
!15120 = !DILocation(line: 0, scope: !15117)
!15121 = !DILocation(line: 733, column: 6, scope: !15122)
!15122 = distinct !DILexicalBlock(scope: !15117, file: !2446, line: 733, column: 6)
!15123 = !DILocation(line: 733, column: 6, scope: !15117)
!15124 = !DILocation(line: 0, scope: !14229, inlinedAt: !15125)
!15125 = distinct !DILocation(line: 734, column: 3, scope: !15126)
!15126 = distinct !DILexicalBlock(scope: !15122, file: !2446, line: 733, column: 34)
!15127 = !DILocation(line: 266, column: 15, scope: !14229, inlinedAt: !15125)
!15128 = !DILocation(line: 266, column: 28, scope: !14229, inlinedAt: !15125)
!15129 = !DILocation(line: 0, scope: !14237, inlinedAt: !15130)
!15130 = distinct !DILocation(line: 268, column: 3, scope: !14241, inlinedAt: !15125)
!15131 = !DILocation(line: 234, column: 2, scope: !14237, inlinedAt: !15130)
!15132 = !DILocation(line: 735, column: 2, scope: !15126)
!15133 = !DILocation(line: 736, column: 25, scope: !15117)
!15134 = !DILocation(line: 736, column: 22, scope: !15117)
!15135 = !DILocation(line: 736, column: 2, scope: !15117)
!15136 = !DILocation(line: 737, column: 1, scope: !15117)
!15137 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !12829, file: !12829, line: 160, type: !13995, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !15138)
!15138 = !{!15139}
!15139 = !DILocalVariable(name: "thread", arg: 1, scope: !15137, file: !12829, line: 160, type: !2338)
!15140 = !DILocation(line: 0, scope: !15137)
!15141 = !DILocation(line: 162, column: 15, scope: !15137)
!15142 = !DILocation(line: 162, column: 28, scope: !15137)
!15143 = !DILocation(line: 163, column: 1, scope: !15137)
!15144 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2446, file: !2446, line: 786, type: !13995, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !15145)
!15145 = !{!15146, !15147, !15149}
!15146 = !DILocalVariable(name: "thread", arg: 1, scope: !15144, file: !2446, line: 786, type: !2338)
!15147 = !DILocalVariable(name: "__i", scope: !15148, file: !2446, line: 788, type: !14029)
!15148 = distinct !DILexicalBlock(scope: !15144, file: !2446, line: 788, column: 2)
!15149 = !DILocalVariable(name: "__key", scope: !15148, file: !2446, line: 788, type: !14029)
!15150 = !DILocation(line: 0, scope: !15144)
!15151 = !DILocation(line: 0, scope: !15148)
!15152 = !DILocation(line: 0, scope: !14037, inlinedAt: !15153)
!15153 = distinct !DILocation(line: 788, column: 2, scope: !15148)
!15154 = !DILocation(line: 55, column: 2, scope: !14046, inlinedAt: !15155)
!15155 = distinct !DILocation(line: 145, column: 10, scope: !14037, inlinedAt: !15153)
!15156 = !DILocation(line: 0, scope: !14046, inlinedAt: !15155)
!15157 = !DILocation(line: 148, column: 2, scope: !14054, inlinedAt: !15153)
!15158 = !DILocation(line: 148, column: 2, scope: !14055, inlinedAt: !15153)
!15159 = !DILocation(line: 148, column: 2, scope: !14058, inlinedAt: !15153)
!15160 = !DILocation(line: 160, column: 2, scope: !14037, inlinedAt: !15153)
!15161 = !DILocation(line: 789, column: 3, scope: !15162)
!15162 = distinct !DILexicalBlock(scope: !15163, file: !2446, line: 788, column: 26)
!15163 = distinct !DILexicalBlock(scope: !15148, file: !2446, line: 788, column: 2)
!15164 = !DILocation(line: 0, scope: !14071, inlinedAt: !15165)
!15165 = distinct !DILocation(line: 788, column: 2, scope: !15163)
!15166 = !DILocation(line: 194, column: 2, scope: !14079, inlinedAt: !15165)
!15167 = !DILocation(line: 194, column: 2, scope: !14080, inlinedAt: !15165)
!15168 = !DILocation(line: 194, column: 2, scope: !14083, inlinedAt: !15165)
!15169 = !DILocation(line: 0, scope: !14085, inlinedAt: !15170)
!15170 = distinct !DILocation(line: 215, column: 2, scope: !14071, inlinedAt: !15165)
!15171 = !DILocation(line: 95, column: 2, scope: !14085, inlinedAt: !15170)
!15172 = !DILocation(line: 791, column: 1, scope: !15144)
!15173 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2446, file: !2446, line: 816, type: !15174, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !15176)
!15174 = !DISubroutineType(types: !15175)
!15175 = !{!109, !110, !2369, !14923}
!15176 = !{!15177, !15178, !15179, !15180, !15181, !15183}
!15177 = !DILocalVariable(name: "key", arg: 1, scope: !15173, file: !2446, line: 816, type: !110)
!15178 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15173, file: !2446, line: 816, type: !2369)
!15179 = !DILocalVariable(name: "timeout", arg: 3, scope: !15173, file: !2446, line: 816, type: !14923)
!15180 = !DILocalVariable(name: "ret", scope: !15173, file: !2446, line: 828, type: !109)
!15181 = !DILocalVariable(name: "__i", scope: !15182, file: !2446, line: 829, type: !14029)
!15182 = distinct !DILexicalBlock(scope: !15173, file: !2446, line: 829, column: 2)
!15183 = !DILocalVariable(name: "__key", scope: !15182, file: !2446, line: 829, type: !14029)
!15184 = !DILocation(line: 0, scope: !15173)
!15185 = !DILocation(line: 823, column: 14, scope: !15173)
!15186 = !DILocation(line: 823, column: 2, scope: !15173)
!15187 = !DILocation(line: 826, column: 20, scope: !15173)
!15188 = !DILocation(line: 826, column: 18, scope: !15173)
!15189 = !DILocation(line: 828, column: 12, scope: !15173)
!15190 = !DILocation(line: 0, scope: !15182)
!15191 = !DILocation(line: 0, scope: !14037, inlinedAt: !15192)
!15192 = distinct !DILocation(line: 829, column: 2, scope: !15182)
!15193 = !DILocation(line: 55, column: 2, scope: !14046, inlinedAt: !15194)
!15194 = distinct !DILocation(line: 145, column: 10, scope: !14037, inlinedAt: !15192)
!15195 = !DILocation(line: 0, scope: !14046, inlinedAt: !15194)
!15196 = !DILocation(line: 148, column: 2, scope: !14054, inlinedAt: !15192)
!15197 = !DILocation(line: 148, column: 2, scope: !14055, inlinedAt: !15192)
!15198 = !DILocation(line: 148, column: 2, scope: !14058, inlinedAt: !15192)
!15199 = !DILocation(line: 160, column: 2, scope: !14037, inlinedAt: !15192)
!15200 = !DILocation(line: 830, column: 7, scope: !15201)
!15201 = distinct !DILexicalBlock(scope: !15202, file: !2446, line: 830, column: 7)
!15202 = distinct !DILexicalBlock(scope: !15203, file: !2446, line: 829, column: 26)
!15203 = distinct !DILexicalBlock(scope: !15182, file: !2446, line: 829, column: 2)
!15204 = !DILocation(line: 830, column: 26, scope: !15201)
!15205 = !DILocation(line: 830, column: 23, scope: !15201)
!15206 = !DILocation(line: 830, column: 7, scope: !15202)
!15207 = !DILocation(line: 831, column: 20, scope: !15208)
!15208 = distinct !DILexicalBlock(scope: !15201, file: !2446, line: 830, column: 36)
!15209 = !DILocation(line: 832, column: 3, scope: !15208)
!15210 = !DILocation(line: 0, scope: !14071, inlinedAt: !15211)
!15211 = distinct !DILocation(line: 829, column: 2, scope: !15203)
!15212 = !DILocation(line: 194, column: 2, scope: !14079, inlinedAt: !15211)
!15213 = !DILocation(line: 194, column: 2, scope: !14080, inlinedAt: !15211)
!15214 = !DILocation(line: 194, column: 2, scope: !14083, inlinedAt: !15211)
!15215 = !DILocation(line: 0, scope: !14085, inlinedAt: !15216)
!15216 = distinct !DILocation(line: 215, column: 2, scope: !14071, inlinedAt: !15211)
!15217 = !DILocation(line: 95, column: 2, scope: !14085, inlinedAt: !15216)
!15218 = !DILocation(line: 834, column: 2, scope: !15173)
!15219 = distinct !DISubprogram(name: "z_pend_curr", scope: !2446, file: !2446, line: 840, type: !15220, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !15222)
!15220 = !DISubroutineType(types: !15221)
!15221 = !{!109, !14040, !14029, !2369, !14923}
!15222 = !{!15223, !15224, !15225, !15226}
!15223 = !DILocalVariable(name: "lock", arg: 1, scope: !15219, file: !2446, line: 840, type: !14040)
!15224 = !DILocalVariable(name: "key", arg: 2, scope: !15219, file: !2446, line: 840, type: !14029)
!15225 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15219, file: !2446, line: 841, type: !2369)
!15226 = !DILocalVariable(name: "timeout", arg: 4, scope: !15219, file: !2446, line: 841, type: !14923)
!15227 = !DILocation(line: 0, scope: !15219)
!15228 = !DILocation(line: 844, column: 20, scope: !15219)
!15229 = !DILocation(line: 844, column: 18, scope: !15219)
!15230 = !DILocation(line: 846, column: 2, scope: !15231)
!15231 = distinct !DILexicalBlock(scope: !15232, file: !2446, line: 846, column: 2)
!15232 = distinct !DILexicalBlock(scope: !15219, file: !2446, line: 846, column: 2)
!15233 = !DILocation(line: 846, column: 2, scope: !15232)
!15234 = !DILocation(line: 846, column: 2, scope: !15235)
!15235 = distinct !DILexicalBlock(scope: !15231, file: !2446, line: 846, column: 2)
!15236 = !DILocation(line: 0, scope: !14037, inlinedAt: !15237)
!15237 = distinct !DILocation(line: 856, column: 9, scope: !15219)
!15238 = !DILocation(line: 55, column: 2, scope: !14046, inlinedAt: !15239)
!15239 = distinct !DILocation(line: 145, column: 10, scope: !14037, inlinedAt: !15237)
!15240 = !DILocation(line: 0, scope: !14046, inlinedAt: !15239)
!15241 = !DILocation(line: 148, column: 2, scope: !14054, inlinedAt: !15237)
!15242 = !DILocation(line: 148, column: 2, scope: !14055, inlinedAt: !15237)
!15243 = !DILocation(line: 148, column: 2, scope: !14058, inlinedAt: !15237)
!15244 = !DILocation(line: 160, column: 2, scope: !14037, inlinedAt: !15237)
!15245 = !DILocation(line: 857, column: 14, scope: !15219)
!15246 = !DILocation(line: 857, column: 2, scope: !15219)
!15247 = !DILocation(line: 0, scope: !14722, inlinedAt: !15248)
!15248 = distinct !DILocation(line: 858, column: 2, scope: !15219)
!15249 = !DILocation(line: 225, column: 2, scope: !14729, inlinedAt: !15248)
!15250 = !DILocation(line: 225, column: 2, scope: !14730, inlinedAt: !15248)
!15251 = !DILocation(line: 225, column: 2, scope: !14733, inlinedAt: !15248)
!15252 = !DILocation(line: 0, scope: !14713, inlinedAt: !15253)
!15253 = distinct !DILocation(line: 859, column: 9, scope: !15219)
!15254 = !DILocation(line: 0, scope: !14722, inlinedAt: !15255)
!15255 = distinct !DILocation(line: 195, column: 2, scope: !14713, inlinedAt: !15253)
!15256 = !DILocation(line: 225, column: 2, scope: !14729, inlinedAt: !15255)
!15257 = !DILocation(line: 225, column: 2, scope: !14730, inlinedAt: !15255)
!15258 = !DILocation(line: 225, column: 2, scope: !14733, inlinedAt: !15255)
!15259 = !DILocation(line: 196, column: 9, scope: !14713, inlinedAt: !15253)
!15260 = !DILocation(line: 859, column: 2, scope: !15219)
!15261 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2446, file: !2446, line: 862, type: !15262, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !15264)
!15262 = !DISubroutineType(types: !15263)
!15263 = !{!2338, !2369}
!15264 = !{!15265, !15266, !15267, !15269}
!15265 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15261, file: !2446, line: 862, type: !2369)
!15266 = !DILocalVariable(name: "thread", scope: !15261, file: !2446, line: 864, type: !2338)
!15267 = !DILocalVariable(name: "__i", scope: !15268, file: !2446, line: 866, type: !14029)
!15268 = distinct !DILexicalBlock(scope: !15261, file: !2446, line: 866, column: 2)
!15269 = !DILocalVariable(name: "__key", scope: !15268, file: !2446, line: 866, type: !14029)
!15270 = !DILocation(line: 0, scope: !15261)
!15271 = !DILocation(line: 0, scope: !15268)
!15272 = !DILocation(line: 0, scope: !14037, inlinedAt: !15273)
!15273 = distinct !DILocation(line: 866, column: 2, scope: !15268)
!15274 = !DILocation(line: 55, column: 2, scope: !14046, inlinedAt: !15275)
!15275 = distinct !DILocation(line: 145, column: 10, scope: !14037, inlinedAt: !15273)
!15276 = !DILocation(line: 0, scope: !14046, inlinedAt: !15275)
!15277 = !DILocation(line: 148, column: 2, scope: !14054, inlinedAt: !15273)
!15278 = !DILocation(line: 148, column: 2, scope: !14055, inlinedAt: !15273)
!15279 = !DILocation(line: 148, column: 2, scope: !14058, inlinedAt: !15273)
!15280 = !DILocation(line: 160, column: 2, scope: !14037, inlinedAt: !15273)
!15281 = !DILocation(line: 867, column: 12, scope: !15282)
!15282 = distinct !DILexicalBlock(scope: !15283, file: !2446, line: 866, column: 26)
!15283 = distinct !DILexicalBlock(scope: !15268, file: !2446, line: 866, column: 2)
!15284 = !DILocation(line: 869, column: 14, scope: !15285)
!15285 = distinct !DILexicalBlock(scope: !15282, file: !2446, line: 869, column: 7)
!15286 = !DILocation(line: 869, column: 7, scope: !15282)
!15287 = !DILocation(line: 870, column: 4, scope: !15288)
!15288 = distinct !DILexicalBlock(scope: !15285, file: !2446, line: 869, column: 23)
!15289 = !DILocation(line: 871, column: 3, scope: !15288)
!15290 = !DILocation(line: 0, scope: !14071, inlinedAt: !15291)
!15291 = distinct !DILocation(line: 866, column: 2, scope: !15283)
!15292 = !DILocation(line: 194, column: 2, scope: !14079, inlinedAt: !15291)
!15293 = !DILocation(line: 194, column: 2, scope: !14080, inlinedAt: !15291)
!15294 = !DILocation(line: 194, column: 2, scope: !14083, inlinedAt: !15291)
!15295 = !DILocation(line: 0, scope: !14085, inlinedAt: !15296)
!15296 = distinct !DILocation(line: 215, column: 2, scope: !14071, inlinedAt: !15291)
!15297 = !DILocation(line: 95, column: 2, scope: !14085, inlinedAt: !15296)
!15298 = !DILocation(line: 874, column: 2, scope: !15261)
!15299 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2446, file: !2446, line: 877, type: !15262, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !15300)
!15300 = !{!15301, !15302, !15303, !15305}
!15301 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15299, file: !2446, line: 877, type: !2369)
!15302 = !DILocalVariable(name: "thread", scope: !15299, file: !2446, line: 879, type: !2338)
!15303 = !DILocalVariable(name: "__i", scope: !15304, file: !2446, line: 881, type: !14029)
!15304 = distinct !DILexicalBlock(scope: !15299, file: !2446, line: 881, column: 2)
!15305 = !DILocalVariable(name: "__key", scope: !15304, file: !2446, line: 881, type: !14029)
!15306 = !DILocation(line: 0, scope: !15299)
!15307 = !DILocation(line: 0, scope: !15304)
!15308 = !DILocation(line: 0, scope: !14037, inlinedAt: !15309)
!15309 = distinct !DILocation(line: 881, column: 2, scope: !15304)
!15310 = !DILocation(line: 55, column: 2, scope: !14046, inlinedAt: !15311)
!15311 = distinct !DILocation(line: 145, column: 10, scope: !14037, inlinedAt: !15309)
!15312 = !DILocation(line: 0, scope: !14046, inlinedAt: !15311)
!15313 = !DILocation(line: 148, column: 2, scope: !14054, inlinedAt: !15309)
!15314 = !DILocation(line: 148, column: 2, scope: !14055, inlinedAt: !15309)
!15315 = !DILocation(line: 148, column: 2, scope: !14058, inlinedAt: !15309)
!15316 = !DILocation(line: 160, column: 2, scope: !14037, inlinedAt: !15309)
!15317 = !DILocation(line: 882, column: 12, scope: !15318)
!15318 = distinct !DILexicalBlock(scope: !15319, file: !2446, line: 881, column: 26)
!15319 = distinct !DILexicalBlock(scope: !15304, file: !2446, line: 881, column: 2)
!15320 = !DILocation(line: 884, column: 14, scope: !15321)
!15321 = distinct !DILexicalBlock(scope: !15318, file: !2446, line: 884, column: 7)
!15322 = !DILocation(line: 884, column: 7, scope: !15318)
!15323 = !DILocation(line: 885, column: 4, scope: !15324)
!15324 = distinct !DILexicalBlock(scope: !15321, file: !2446, line: 884, column: 23)
!15325 = !DILocation(line: 886, column: 10, scope: !15324)
!15326 = !DILocation(line: 887, column: 3, scope: !15324)
!15327 = !DILocation(line: 0, scope: !14071, inlinedAt: !15328)
!15328 = distinct !DILocation(line: 881, column: 2, scope: !15319)
!15329 = !DILocation(line: 194, column: 2, scope: !14079, inlinedAt: !15328)
!15330 = !DILocation(line: 194, column: 2, scope: !14080, inlinedAt: !15328)
!15331 = !DILocation(line: 194, column: 2, scope: !14083, inlinedAt: !15328)
!15332 = !DILocation(line: 0, scope: !14085, inlinedAt: !15333)
!15333 = distinct !DILocation(line: 215, column: 2, scope: !14071, inlinedAt: !15328)
!15334 = !DILocation(line: 95, column: 2, scope: !14085, inlinedAt: !15333)
!15335 = !DILocation(line: 890, column: 2, scope: !15299)
!15336 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2446, file: !2446, line: 893, type: !13995, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !15337)
!15337 = !{!15338}
!15338 = !DILocalVariable(name: "thread", arg: 1, scope: !15336, file: !2446, line: 893, type: !2338)
!15339 = !DILocation(line: 0, scope: !15336)
!15340 = !DILocation(line: 0, scope: !15144, inlinedAt: !15341)
!15341 = distinct !DILocation(line: 895, column: 2, scope: !15336)
!15342 = !DILocation(line: 0, scope: !15148, inlinedAt: !15341)
!15343 = !DILocation(line: 0, scope: !14037, inlinedAt: !15344)
!15344 = distinct !DILocation(line: 788, column: 2, scope: !15148, inlinedAt: !15341)
!15345 = !DILocation(line: 55, column: 2, scope: !14046, inlinedAt: !15346)
!15346 = distinct !DILocation(line: 145, column: 10, scope: !14037, inlinedAt: !15344)
!15347 = !DILocation(line: 0, scope: !14046, inlinedAt: !15346)
!15348 = !DILocation(line: 148, column: 2, scope: !14054, inlinedAt: !15344)
!15349 = !DILocation(line: 148, column: 2, scope: !14055, inlinedAt: !15344)
!15350 = !DILocation(line: 148, column: 2, scope: !14058, inlinedAt: !15344)
!15351 = !DILocation(line: 160, column: 2, scope: !14037, inlinedAt: !15344)
!15352 = !DILocation(line: 789, column: 3, scope: !15162, inlinedAt: !15341)
!15353 = !DILocation(line: 0, scope: !14071, inlinedAt: !15354)
!15354 = distinct !DILocation(line: 788, column: 2, scope: !15163, inlinedAt: !15341)
!15355 = !DILocation(line: 194, column: 2, scope: !14079, inlinedAt: !15354)
!15356 = !DILocation(line: 194, column: 2, scope: !14080, inlinedAt: !15354)
!15357 = !DILocation(line: 194, column: 2, scope: !14083, inlinedAt: !15354)
!15358 = !DILocation(line: 0, scope: !14085, inlinedAt: !15359)
!15359 = distinct !DILocation(line: 215, column: 2, scope: !14071, inlinedAt: !15354)
!15360 = !DILocation(line: 95, column: 2, scope: !14085, inlinedAt: !15359)
!15361 = !DILocation(line: 896, column: 8, scope: !15336)
!15362 = !DILocation(line: 897, column: 1, scope: !15336)
!15363 = distinct !DISubprogram(name: "z_set_prio", scope: !2446, file: !2446, line: 902, type: !14398, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !15364)
!15364 = !{!15365, !15366, !15367, !15368, !15370}
!15365 = !DILocalVariable(name: "thread", arg: 1, scope: !15363, file: !2446, line: 902, type: !2338)
!15366 = !DILocalVariable(name: "prio", arg: 2, scope: !15363, file: !2446, line: 902, type: !109)
!15367 = !DILocalVariable(name: "need_sched", scope: !15363, file: !2446, line: 904, type: !347)
!15368 = !DILocalVariable(name: "__i", scope: !15369, file: !2446, line: 906, type: !14029)
!15369 = distinct !DILexicalBlock(scope: !15363, file: !2446, line: 906, column: 2)
!15370 = !DILocalVariable(name: "__key", scope: !15369, file: !2446, line: 906, type: !14029)
!15371 = !DILocation(line: 0, scope: !15363)
!15372 = !DILocation(line: 0, scope: !15369)
!15373 = !DILocation(line: 0, scope: !14037, inlinedAt: !15374)
!15374 = distinct !DILocation(line: 906, column: 2, scope: !15369)
!15375 = !DILocation(line: 55, column: 2, scope: !14046, inlinedAt: !15376)
!15376 = distinct !DILocation(line: 145, column: 10, scope: !14037, inlinedAt: !15374)
!15377 = !DILocation(line: 0, scope: !14046, inlinedAt: !15376)
!15378 = !DILocation(line: 148, column: 2, scope: !14054, inlinedAt: !15374)
!15379 = !DILocation(line: 148, column: 2, scope: !14055, inlinedAt: !15374)
!15380 = !DILocation(line: 148, column: 2, scope: !14058, inlinedAt: !15374)
!15381 = !DILocation(line: 160, column: 2, scope: !14037, inlinedAt: !15374)
!15382 = !DILocation(line: 907, column: 16, scope: !15383)
!15383 = distinct !DILexicalBlock(scope: !15384, file: !2446, line: 906, column: 26)
!15384 = distinct !DILexicalBlock(scope: !15369, file: !2446, line: 906, column: 2)
!15385 = !DILocation(line: 909, column: 7, scope: !15383)
!15386 = !DILocation(line: 0, scope: !14229, inlinedAt: !15387)
!15387 = distinct !DILocation(line: 912, column: 5, scope: !15388)
!15388 = distinct !DILexicalBlock(scope: !15389, file: !2446, line: 911, column: 63)
!15389 = distinct !DILexicalBlock(scope: !15390, file: !2446, line: 911, column: 8)
!15390 = distinct !DILexicalBlock(scope: !15391, file: !2446, line: 909, column: 19)
!15391 = distinct !DILexicalBlock(scope: !15383, file: !2446, line: 909, column: 7)
!15392 = !DILocation(line: 266, column: 28, scope: !14229, inlinedAt: !15387)
!15393 = !DILocation(line: 0, scope: !14237, inlinedAt: !15394)
!15394 = distinct !DILocation(line: 268, column: 3, scope: !14241, inlinedAt: !15387)
!15395 = !DILocation(line: 234, column: 2, scope: !14237, inlinedAt: !15394)
!15396 = !DILocation(line: 913, column: 23, scope: !15388)
!15397 = !DILocation(line: 0, scope: !14246, inlinedAt: !15398)
!15398 = distinct !DILocation(line: 914, column: 5, scope: !15388)
!15399 = !DILocation(line: 252, column: 28, scope: !14246, inlinedAt: !15398)
!15400 = !DILocation(line: 0, scope: !14253, inlinedAt: !15401)
!15401 = distinct !DILocation(line: 254, column: 3, scope: !14257, inlinedAt: !15398)
!15402 = !DILocation(line: 0, scope: !14260, inlinedAt: !15403)
!15403 = distinct !DILocation(line: 229, column: 2, scope: !14253, inlinedAt: !15401)
!15404 = !DILocation(line: 186, column: 2, scope: !14270, inlinedAt: !15403)
!15405 = !DILocation(line: 186, column: 2, scope: !14271, inlinedAt: !15403)
!15406 = !DILocation(line: 186, column: 2, scope: !14274, inlinedAt: !15403)
!15407 = !DILocation(line: 188, column: 2, scope: !14276, inlinedAt: !15403)
!15408 = !DILocation(line: 188, column: 2, scope: !14278, inlinedAt: !15403)
!15409 = !DILocation(line: 0, scope: !14276, inlinedAt: !15403)
!15410 = !DILocation(line: 189, column: 7, scope: !14281, inlinedAt: !15403)
!15411 = !DILocation(line: 189, column: 35, scope: !14281, inlinedAt: !15403)
!15412 = !DILocation(line: 189, column: 7, scope: !14282, inlinedAt: !15403)
!15413 = !DILocation(line: 190, column: 4, scope: !14286, inlinedAt: !15403)
!15414 = !DILocation(line: 192, column: 4, scope: !14286, inlinedAt: !15403)
!15415 = distinct !{!15415, !15407, !15416}
!15416 = !DILocation(line: 194, column: 2, scope: !14276, inlinedAt: !15403)
!15417 = !DILocation(line: 196, column: 2, scope: !14260, inlinedAt: !15403)
!15418 = !DILocation(line: 197, column: 1, scope: !14260, inlinedAt: !15403)
!15419 = !DILocation(line: 918, column: 4, scope: !15390)
!15420 = !DILocation(line: 919, column: 3, scope: !15390)
!15421 = !DILocation(line: 920, column: 22, scope: !15422)
!15422 = distinct !DILexicalBlock(scope: !15391, file: !2446, line: 919, column: 10)
!15423 = !DILocation(line: 0, scope: !14071, inlinedAt: !15424)
!15424 = distinct !DILocation(line: 906, column: 2, scope: !15384)
!15425 = !DILocation(line: 194, column: 2, scope: !14079, inlinedAt: !15424)
!15426 = !DILocation(line: 194, column: 2, scope: !14080, inlinedAt: !15424)
!15427 = !DILocation(line: 194, column: 2, scope: !14083, inlinedAt: !15424)
!15428 = !DILocation(line: 0, scope: !14085, inlinedAt: !15429)
!15429 = distinct !DILocation(line: 215, column: 2, scope: !14071, inlinedAt: !15424)
!15430 = !DILocation(line: 95, column: 2, scope: !14085, inlinedAt: !15429)
!15431 = !DILocation(line: 926, column: 2, scope: !15363)
!15432 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2446, file: !2446, line: 929, type: !15433, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !15435)
!15433 = !DISubroutineType(types: !15434)
!15434 = !{null, !2338, !109}
!15435 = !{!15436, !15437, !15438}
!15436 = !DILocalVariable(name: "thread", arg: 1, scope: !15432, file: !2446, line: 929, type: !2338)
!15437 = !DILocalVariable(name: "prio", arg: 2, scope: !15432, file: !2446, line: 929, type: !109)
!15438 = !DILocalVariable(name: "need_sched", scope: !15432, file: !2446, line: 931, type: !347)
!15439 = !DILocation(line: 0, scope: !15432)
!15440 = !DILocation(line: 931, column: 20, scope: !15432)
!15441 = !DILocation(line: 935, column: 17, scope: !15442)
!15442 = distinct !DILexicalBlock(scope: !15432, file: !2446, line: 935, column: 6)
!15443 = !DILocation(line: 935, column: 20, scope: !15442)
!15444 = !DILocation(line: 935, column: 35, scope: !15442)
!15445 = !DILocation(line: 935, column: 48, scope: !15442)
!15446 = !DILocation(line: 935, column: 6, scope: !15432)
!15447 = !DILocation(line: 936, column: 3, scope: !15448)
!15448 = distinct !DILexicalBlock(scope: !15442, file: !2446, line: 935, column: 55)
!15449 = !DILocation(line: 937, column: 2, scope: !15448)
!15450 = !DILocation(line: 938, column: 1, scope: !15432)
!15451 = distinct !DISubprogram(name: "k_sched_lock", scope: !2446, file: !2446, line: 987, type: !3096, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !15452)
!15452 = !{!15453, !15455}
!15453 = !DILocalVariable(name: "__i", scope: !15454, file: !2446, line: 989, type: !14029)
!15454 = distinct !DILexicalBlock(scope: !15451, file: !2446, line: 989, column: 2)
!15455 = !DILocalVariable(name: "__key", scope: !15454, file: !2446, line: 989, type: !14029)
!15456 = !DILocation(line: 0, scope: !15454)
!15457 = !DILocation(line: 0, scope: !14037, inlinedAt: !15458)
!15458 = distinct !DILocation(line: 989, column: 2, scope: !15454)
!15459 = !DILocation(line: 55, column: 2, scope: !14046, inlinedAt: !15460)
!15460 = distinct !DILocation(line: 145, column: 10, scope: !14037, inlinedAt: !15458)
!15461 = !DILocation(line: 0, scope: !14046, inlinedAt: !15460)
!15462 = !DILocation(line: 148, column: 2, scope: !14054, inlinedAt: !15458)
!15463 = !DILocation(line: 148, column: 2, scope: !14055, inlinedAt: !15458)
!15464 = !DILocation(line: 148, column: 2, scope: !14058, inlinedAt: !15458)
!15465 = !DILocation(line: 160, column: 2, scope: !14037, inlinedAt: !15458)
!15466 = !DILocation(line: 992, column: 3, scope: !15467)
!15467 = distinct !DILexicalBlock(scope: !15468, file: !2446, line: 989, column: 26)
!15468 = distinct !DILexicalBlock(scope: !15454, file: !2446, line: 989, column: 2)
!15469 = !DILocation(line: 0, scope: !14071, inlinedAt: !15470)
!15470 = distinct !DILocation(line: 989, column: 2, scope: !15468)
!15471 = !DILocation(line: 194, column: 2, scope: !14079, inlinedAt: !15470)
!15472 = !DILocation(line: 194, column: 2, scope: !14080, inlinedAt: !15470)
!15473 = !DILocation(line: 194, column: 2, scope: !14083, inlinedAt: !15470)
!15474 = !DILocation(line: 0, scope: !14085, inlinedAt: !15475)
!15475 = distinct !DILocation(line: 215, column: 2, scope: !14071, inlinedAt: !15470)
!15476 = !DILocation(line: 95, column: 2, scope: !14085, inlinedAt: !15475)
!15477 = !DILocation(line: 994, column: 1, scope: !15451)
!15478 = distinct !DISubprogram(name: "z_sched_lock", scope: !12829, file: !12829, line: 251, type: !3096, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !2036)
!15479 = !DILocation(line: 1031, column: 3, scope: !14762, inlinedAt: !15480)
!15480 = distinct !DILocation(line: 48, column: 10, scope: !14766, inlinedAt: !15481)
!15481 = distinct !DILocation(line: 253, column: 2, scope: !15482)
!15482 = distinct !DILexicalBlock(scope: !15483, file: !12829, line: 253, column: 2)
!15483 = distinct !DILexicalBlock(scope: !15478, file: !12829, line: 253, column: 2)
!15484 = !DILocation(line: 0, scope: !14762, inlinedAt: !15480)
!15485 = !DILocation(line: 48, column: 9, scope: !14766, inlinedAt: !15481)
!15486 = !DILocation(line: 253, column: 2, scope: !15483)
!15487 = !DILocation(line: 253, column: 2, scope: !15488)
!15488 = distinct !DILexicalBlock(scope: !15482, file: !12829, line: 253, column: 2)
!15489 = !DILocation(line: 254, column: 2, scope: !15490)
!15490 = distinct !DILexicalBlock(scope: !15491, file: !12829, line: 254, column: 2)
!15491 = distinct !DILexicalBlock(scope: !15478, file: !12829, line: 254, column: 2)
!15492 = !DILocation(line: 254, column: 2, scope: !15491)
!15493 = !DILocation(line: 254, column: 2, scope: !15494)
!15494 = distinct !DILexicalBlock(scope: !15490, file: !12829, line: 254, column: 2)
!15495 = !DILocation(line: 256, column: 2, scope: !15478)
!15496 = !DILocation(line: 258, column: 2, scope: !15497)
!15497 = distinct !DILexicalBlock(scope: !15478, file: !12829, line: 258, column: 2)
!15498 = !{i64 2154976812}
!15499 = !DILocation(line: 259, column: 1, scope: !15478)
!15500 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2446, file: !2446, line: 996, type: !3096, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !15501)
!15501 = !{!15502, !15504}
!15502 = !DILocalVariable(name: "__i", scope: !15503, file: !2446, line: 998, type: !14029)
!15503 = distinct !DILexicalBlock(scope: !15500, file: !2446, line: 998, column: 2)
!15504 = !DILocalVariable(name: "__key", scope: !15503, file: !2446, line: 998, type: !14029)
!15505 = !DILocation(line: 0, scope: !15503)
!15506 = !DILocation(line: 0, scope: !14037, inlinedAt: !15507)
!15507 = distinct !DILocation(line: 998, column: 2, scope: !15503)
!15508 = !DILocation(line: 55, column: 2, scope: !14046, inlinedAt: !15509)
!15509 = distinct !DILocation(line: 145, column: 10, scope: !14037, inlinedAt: !15507)
!15510 = !DILocation(line: 0, scope: !14046, inlinedAt: !15509)
!15511 = !DILocation(line: 148, column: 2, scope: !14054, inlinedAt: !15507)
!15512 = !DILocation(line: 148, column: 2, scope: !14055, inlinedAt: !15507)
!15513 = !DILocation(line: 148, column: 2, scope: !14058, inlinedAt: !15507)
!15514 = !DILocation(line: 160, column: 2, scope: !14037, inlinedAt: !15507)
!15515 = !DILocation(line: 999, column: 3, scope: !15516)
!15516 = distinct !DILexicalBlock(scope: !15517, file: !2446, line: 999, column: 3)
!15517 = distinct !DILexicalBlock(scope: !15518, file: !2446, line: 999, column: 3)
!15518 = distinct !DILexicalBlock(scope: !15519, file: !2446, line: 998, column: 26)
!15519 = distinct !DILexicalBlock(scope: !15503, file: !2446, line: 998, column: 2)
!15520 = !DILocation(line: 999, column: 3, scope: !15517)
!15521 = !DILocation(line: 999, column: 3, scope: !15522)
!15522 = distinct !DILexicalBlock(scope: !15516, file: !2446, line: 999, column: 3)
!15523 = !DILocation(line: 1031, column: 3, scope: !14762, inlinedAt: !15524)
!15524 = distinct !DILocation(line: 48, column: 10, scope: !14766, inlinedAt: !15525)
!15525 = distinct !DILocation(line: 1000, column: 3, scope: !15526)
!15526 = distinct !DILexicalBlock(scope: !15527, file: !2446, line: 1000, column: 3)
!15527 = distinct !DILexicalBlock(scope: !15518, file: !2446, line: 1000, column: 3)
!15528 = !DILocation(line: 0, scope: !14762, inlinedAt: !15524)
!15529 = !DILocation(line: 48, column: 9, scope: !14766, inlinedAt: !15525)
!15530 = !DILocation(line: 1000, column: 3, scope: !15527)
!15531 = !DILocation(line: 1000, column: 3, scope: !15532)
!15532 = distinct !DILexicalBlock(scope: !15526, file: !2446, line: 1000, column: 3)
!15533 = !DILocation(line: 1002, column: 5, scope: !15518)
!15534 = !DILocation(line: 1002, column: 20, scope: !15518)
!15535 = !DILocation(line: 1002, column: 3, scope: !15518)
!15536 = !DILocation(line: 1003, column: 3, scope: !15518)
!15537 = !DILocation(line: 0, scope: !14071, inlinedAt: !15538)
!15538 = distinct !DILocation(line: 998, column: 2, scope: !15519)
!15539 = !DILocation(line: 194, column: 2, scope: !14079, inlinedAt: !15538)
!15540 = !DILocation(line: 194, column: 2, scope: !14080, inlinedAt: !15538)
!15541 = !DILocation(line: 194, column: 2, scope: !14083, inlinedAt: !15538)
!15542 = !DILocation(line: 0, scope: !14085, inlinedAt: !15543)
!15543 = distinct !DILocation(line: 215, column: 2, scope: !14071, inlinedAt: !15538)
!15544 = !DILocation(line: 95, column: 2, scope: !14085, inlinedAt: !15543)
!15545 = !DILocation(line: 1011, column: 2, scope: !15500)
!15546 = !DILocation(line: 1012, column: 1, scope: !15500)
!15547 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2446, file: !2446, line: 1014, type: !14386, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !2036)
!15548 = !DILocation(line: 1028, column: 25, scope: !15547)
!15549 = !DILocation(line: 1028, column: 2, scope: !15547)
!15550 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2446, file: !2446, line: 1155, type: !15551, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !15553)
!15551 = !DISubroutineType(types: !15552)
!15552 = !{!347, !2367, !2367}
!15553 = !{!15554, !15555, !15556, !15557, !15558}
!15554 = !DILocalVariable(name: "a", arg: 1, scope: !15550, file: !2446, line: 1155, type: !2367)
!15555 = !DILocalVariable(name: "b", arg: 2, scope: !15550, file: !2446, line: 1155, type: !2367)
!15556 = !DILocalVariable(name: "thread_a", scope: !15550, file: !2446, line: 1157, type: !2338)
!15557 = !DILocalVariable(name: "thread_b", scope: !15550, file: !2446, line: 1157, type: !2338)
!15558 = !DILocalVariable(name: "cmp", scope: !15550, file: !2446, line: 1158, type: !766)
!15559 = !DILocation(line: 0, scope: !15550)
!15560 = !DILocation(line: 1160, column: 13, scope: !15550)
!15561 = !DILocation(line: 1161, column: 13, scope: !15550)
!15562 = !DILocation(line: 1163, column: 8, scope: !15550)
!15563 = !DILocation(line: 1165, column: 10, scope: !15564)
!15564 = distinct !DILexicalBlock(scope: !15550, file: !2446, line: 1165, column: 6)
!15565 = !DILocation(line: 1165, column: 6, scope: !15550)
!15566 = !DILocation(line: 1167, column: 17, scope: !15567)
!15567 = distinct !DILexicalBlock(scope: !15564, file: !2446, line: 1167, column: 13)
!15568 = !DILocation(line: 1167, column: 13, scope: !15564)
!15569 = !DILocation(line: 1170, column: 25, scope: !15570)
!15570 = distinct !DILexicalBlock(scope: !15567, file: !2446, line: 1169, column: 9)
!15571 = !DILocation(line: 1170, column: 52, scope: !15570)
!15572 = !DILocation(line: 1170, column: 35, scope: !15570)
!15573 = !DILocation(line: 1170, column: 3, scope: !15570)
!15574 = !DILocation(line: 0, scope: !15564)
!15575 = !DILocation(line: 1173, column: 1, scope: !15550)
!15576 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2446, file: !2446, line: 1175, type: !15577, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !15592)
!15577 = !DISubroutineType(types: !15578)
!15578 = !{null, !15579, !2338}
!15579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15580, size: 32)
!15580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !15581, line: 37, size: 128, elements: !15582)
!15581 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15582 = !{!15583, !15591}
!15583 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !15580, file: !15581, line: 38, baseType: !15584, size: 96)
!15584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !168, line: 83, size: 96, elements: !15585)
!15585 = !{!15586, !15587, !15590}
!15586 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !15584, file: !168, line: 84, baseType: !2367, size: 32)
!15587 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !15584, file: !168, line: 85, baseType: !15588, size: 32, offset: 32)
!15588 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !168, line: 81, baseType: !15589)
!15589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15551, size: 32)
!15590 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !15584, file: !168, line: 86, baseType: !109, size: 32, offset: 64)
!15591 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !15580, file: !15581, line: 39, baseType: !109, size: 32, offset: 96)
!15592 = !{!15593, !15594, !15595, !15596, !15605}
!15593 = !DILocalVariable(name: "pq", arg: 1, scope: !15576, file: !2446, line: 1175, type: !15579)
!15594 = !DILocalVariable(name: "thread", arg: 2, scope: !15576, file: !2446, line: 1175, type: !2338)
!15595 = !DILocalVariable(name: "t", scope: !15576, file: !2446, line: 1177, type: !2338)
!15596 = !DILocalVariable(name: "__f", scope: !15597, file: !2446, line: 1190, type: !15600)
!15597 = distinct !DILexicalBlock(scope: !15598, file: !2446, line: 1190, column: 3)
!15598 = distinct !DILexicalBlock(scope: !15599, file: !2446, line: 1189, column: 27)
!15599 = distinct !DILexicalBlock(scope: !15576, file: !2446, line: 1189, column: 6)
!15600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !168, line: 155, size: 96, elements: !15601)
!15601 = !{!15602, !15603, !15604}
!15602 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !15600, file: !168, line: 156, baseType: !2441, size: 32)
!15603 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !15600, file: !168, line: 157, baseType: !286, size: 32, offset: 32)
!15604 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !15600, file: !168, line: 158, baseType: !766, size: 32, offset: 64)
!15605 = !DILocalVariable(name: "n", scope: !15606, file: !2446, line: 1190, type: !2367)
!15606 = distinct !DILexicalBlock(scope: !15607, file: !2446, line: 1190, column: 3)
!15607 = distinct !DILexicalBlock(scope: !15597, file: !2446, line: 1190, column: 3)
!15608 = !DILocation(line: 0, scope: !15576)
!15609 = !DILocation(line: 1179, column: 2, scope: !15610)
!15610 = distinct !DILexicalBlock(scope: !15611, file: !2446, line: 1179, column: 2)
!15611 = distinct !DILexicalBlock(scope: !15576, file: !2446, line: 1179, column: 2)
!15612 = !DILocation(line: 1179, column: 2, scope: !15611)
!15613 = !DILocation(line: 1179, column: 2, scope: !15614)
!15614 = distinct !DILexicalBlock(scope: !15610, file: !2446, line: 1179, column: 2)
!15615 = !DILocation(line: 1181, column: 31, scope: !15576)
!15616 = !DILocation(line: 1181, column: 45, scope: !15576)
!15617 = !DILocation(line: 1181, column: 15, scope: !15576)
!15618 = !DILocation(line: 1181, column: 25, scope: !15576)
!15619 = !DILocation(line: 1189, column: 11, scope: !15599)
!15620 = !DILocation(line: 1189, column: 7, scope: !15599)
!15621 = !DILocation(line: 1189, column: 6, scope: !15576)
!15622 = !DILocation(line: 1190, column: 3, scope: !15597)
!15623 = !DILocation(line: 1190, column: 3, scope: !15606)
!15624 = !DILocation(line: 0, scope: !15606)
!15625 = !DILocation(line: 1190, column: 3, scope: !15607)
!15626 = !DILocation(line: 1193, column: 2, scope: !15598)
!15627 = !DILocation(line: 1191, column: 42, scope: !15628)
!15628 = distinct !DILexicalBlock(scope: !15607, file: !2446, line: 1190, column: 54)
!15629 = !DILocation(line: 1191, column: 12, scope: !15628)
!15630 = !DILocation(line: 1191, column: 22, scope: !15628)
!15631 = distinct !{!15631, !15622, !15632}
!15632 = !DILocation(line: 1192, column: 3, scope: !15597)
!15633 = !DILocation(line: 1195, column: 17, scope: !15576)
!15634 = !DILocation(line: 1195, column: 37, scope: !15576)
!15635 = !DILocation(line: 1195, column: 2, scope: !15576)
!15636 = !DILocation(line: 1196, column: 1, scope: !15576)
!15637 = !DISubprogram(name: "z_rb_foreach_next", scope: !168, file: !168, line: 176, type: !15638, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2036)
!15638 = !DISubroutineType(types: !15639)
!15639 = !{!2367, !15640, !15641}
!15640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15584, size: 32)
!15641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15600, size: 32)
!15642 = !DISubprogram(name: "rb_insert", scope: !168, file: !168, line: 105, type: !15643, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2036)
!15643 = !DISubroutineType(types: !15644)
!15644 = !{null, !15640, !2367}
!15645 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2446, file: !2446, line: 1198, type: !15577, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !15646)
!15646 = !{!15647, !15648}
!15647 = !DILocalVariable(name: "pq", arg: 1, scope: !15645, file: !2446, line: 1198, type: !15579)
!15648 = !DILocalVariable(name: "thread", arg: 2, scope: !15645, file: !2446, line: 1198, type: !2338)
!15649 = !DILocation(line: 0, scope: !15645)
!15650 = !DILocation(line: 1200, column: 2, scope: !15651)
!15651 = distinct !DILexicalBlock(scope: !15652, file: !2446, line: 1200, column: 2)
!15652 = distinct !DILexicalBlock(scope: !15645, file: !2446, line: 1200, column: 2)
!15653 = !DILocation(line: 1200, column: 2, scope: !15652)
!15654 = !DILocation(line: 1200, column: 2, scope: !15655)
!15655 = distinct !DILexicalBlock(scope: !15651, file: !2446, line: 1200, column: 2)
!15656 = !DILocation(line: 1202, column: 17, scope: !15645)
!15657 = !DILocation(line: 1202, column: 37, scope: !15645)
!15658 = !DILocation(line: 1202, column: 2, scope: !15645)
!15659 = !DILocation(line: 1204, column: 16, scope: !15660)
!15660 = distinct !DILexicalBlock(scope: !15645, file: !2446, line: 1204, column: 6)
!15661 = !DILocation(line: 1204, column: 7, scope: !15660)
!15662 = !DILocation(line: 1204, column: 6, scope: !15645)
!15663 = !DILocation(line: 1205, column: 7, scope: !15664)
!15664 = distinct !DILexicalBlock(scope: !15660, file: !2446, line: 1204, column: 22)
!15665 = !DILocation(line: 1205, column: 22, scope: !15664)
!15666 = !DILocation(line: 1206, column: 2, scope: !15664)
!15667 = !DILocation(line: 1207, column: 1, scope: !15645)
!15668 = !DISubprogram(name: "rb_remove", scope: !168, file: !168, line: 110, type: !15643, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2036)
!15669 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2446, file: !2446, line: 1209, type: !15670, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !15672)
!15670 = !DISubroutineType(types: !15671)
!15671 = !{!2338, !15579}
!15672 = !{!15673, !15674, !15675}
!15673 = !DILocalVariable(name: "pq", arg: 1, scope: !15669, file: !2446, line: 1209, type: !15579)
!15674 = !DILocalVariable(name: "thread", scope: !15669, file: !2446, line: 1211, type: !2338)
!15675 = !DILocalVariable(name: "n", scope: !15669, file: !2446, line: 1212, type: !2367)
!15676 = !DILocation(line: 0, scope: !15669)
!15677 = !DILocation(line: 1212, column: 37, scope: !15669)
!15678 = !DILocation(line: 1212, column: 21, scope: !15669)
!15679 = !DILocation(line: 1217, column: 2, scope: !15669)
!15680 = distinct !DISubprogram(name: "rb_get_min", scope: !168, file: !168, line: 115, type: !15681, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !15683)
!15681 = !DISubroutineType(types: !15682)
!15682 = !{!2367, !15640}
!15683 = !{!15684}
!15684 = !DILocalVariable(name: "tree", arg: 1, scope: !15680, file: !168, line: 115, type: !15640)
!15685 = !DILocation(line: 0, scope: !15680)
!15686 = !DILocation(line: 117, column: 9, scope: !15680)
!15687 = !DILocation(line: 117, column: 2, scope: !15680)
!15688 = !DISubprogram(name: "z_rb_get_minmax", scope: !168, file: !168, line: 100, type: !15689, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2036)
!15689 = !DISubroutineType(types: !15690)
!15690 = !{!2367, !15640, !178}
!15691 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2446, file: !2446, line: 1246, type: !15692, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !15700)
!15692 = !DISubroutineType(types: !15693)
!15693 = !{!2338, !15694}
!15694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15695, size: 32)
!15695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !15581, line: 53, size: 2080, elements: !15696)
!15696 = !{!15697, !15699}
!15697 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !15695, file: !15581, line: 54, baseType: !15698, size: 2048)
!15698 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2374, size: 2048, elements: !224)
!15699 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !15695, file: !15581, line: 55, baseType: !32, size: 32, offset: 2048)
!15700 = !{!15701, !15702, !15703, !15704}
!15701 = !DILocalVariable(name: "pq", arg: 1, scope: !15691, file: !2446, line: 1246, type: !15694)
!15702 = !DILocalVariable(name: "thread", scope: !15691, file: !2446, line: 1252, type: !2338)
!15703 = !DILocalVariable(name: "l", scope: !15691, file: !2446, line: 1253, type: !14263)
!15704 = !DILocalVariable(name: "n", scope: !15691, file: !2446, line: 1254, type: !2442)
!15705 = !DILocation(line: 0, scope: !15691)
!15706 = !DILocation(line: 1248, column: 11, scope: !15707)
!15707 = distinct !DILexicalBlock(scope: !15691, file: !2446, line: 1248, column: 6)
!15708 = !DILocation(line: 1248, column: 7, scope: !15707)
!15709 = !DILocation(line: 1248, column: 6, scope: !15691)
!15710 = !DILocation(line: 1253, column: 31, scope: !15691)
!15711 = !DILocation(line: 1253, column: 20, scope: !15691)
!15712 = !DILocation(line: 1254, column: 19, scope: !15691)
!15713 = !DILocation(line: 1260, column: 1, scope: !15691)
!15714 = distinct !DISubprogram(name: "z_unpend_all", scope: !2446, file: !2446, line: 1262, type: !15715, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !15717)
!15715 = !DISubroutineType(types: !15716)
!15716 = !{!109, !2369}
!15717 = !{!15718, !15719, !15720}
!15718 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15714, file: !2446, line: 1262, type: !2369)
!15719 = !DILocalVariable(name: "need_sched", scope: !15714, file: !2446, line: 1264, type: !109)
!15720 = !DILocalVariable(name: "thread", scope: !15714, file: !2446, line: 1265, type: !2338)
!15721 = !DILocation(line: 0, scope: !15714)
!15722 = !DILocation(line: 1267, column: 19, scope: !15714)
!15723 = !DILocation(line: 1267, column: 41, scope: !15714)
!15724 = !DILocation(line: 1267, column: 2, scope: !15714)
!15725 = !DILocation(line: 1268, column: 3, scope: !15726)
!15726 = distinct !DILexicalBlock(scope: !15714, file: !2446, line: 1267, column: 50)
!15727 = !DILocation(line: 1269, column: 3, scope: !15726)
!15728 = distinct !{!15728, !15724, !15729}
!15729 = !DILocation(line: 1271, column: 2, scope: !15714)
!15730 = !DILocation(line: 1273, column: 2, scope: !15714)
!15731 = distinct !DISubprogram(name: "z_waitq_head", scope: !13190, file: !13190, line: 52, type: !15262, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !15732)
!15732 = !{!15733}
!15733 = !DILocalVariable(name: "w", arg: 1, scope: !15731, file: !13190, line: 52, type: !2369)
!15734 = !DILocation(line: 0, scope: !15731)
!15735 = !DILocation(line: 54, column: 52, scope: !15731)
!15736 = !DILocation(line: 54, column: 28, scope: !15731)
!15737 = !DILocation(line: 54, column: 9, scope: !15731)
!15738 = !DILocation(line: 54, column: 2, scope: !15731)
!15739 = distinct !DISubprogram(name: "init_ready_q", scope: !2446, file: !2446, line: 1276, type: !15740, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !15747)
!15740 = !DISubroutineType(types: !15741)
!15741 = !{null, !15742}
!15742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15743, size: 32)
!15743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !122, line: 83, size: 96, elements: !15744)
!15744 = !{!15745, !15746}
!15745 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !15743, file: !122, line: 86, baseType: !2338, size: 32)
!15746 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !15743, file: !122, line: 90, baseType: !2374, size: 64, offset: 32)
!15747 = !{!15748}
!15748 = !DILocalVariable(name: "rq", arg: 1, scope: !15739, file: !2446, line: 1276, type: !15742)
!15749 = !DILocation(line: 0, scope: !15739)
!15750 = !DILocation(line: 1289, column: 22, scope: !15739)
!15751 = !DILocation(line: 1289, column: 2, scope: !15739)
!15752 = !DILocation(line: 1291, column: 1, scope: !15739)
!15753 = distinct !DISubprogram(name: "sys_dlist_init", scope: !127, file: !127, line: 197, type: !15754, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !15756)
!15754 = !DISubroutineType(types: !15755)
!15755 = !{null, !14263}
!15756 = !{!15757}
!15757 = !DILocalVariable(name: "list", arg: 1, scope: !15753, file: !127, line: 197, type: !14263)
!15758 = !DILocation(line: 0, scope: !15753)
!15759 = !DILocation(line: 199, column: 8, scope: !15753)
!15760 = !DILocation(line: 199, column: 13, scope: !15753)
!15761 = !DILocation(line: 200, column: 8, scope: !15753)
!15762 = !DILocation(line: 200, column: 13, scope: !15753)
!15763 = !DILocation(line: 201, column: 1, scope: !15753)
!15764 = distinct !DISubprogram(name: "z_sched_init", scope: !2446, file: !2446, line: 1293, type: !3096, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !2036)
!15765 = !DILocation(line: 1302, column: 2, scope: !15764)
!15766 = !DILocation(line: 1306, column: 2, scope: !15764)
!15767 = !DILocation(line: 1309, column: 1, scope: !15764)
!15768 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2446, file: !2446, line: 1311, type: !15769, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !15772)
!15769 = !DISubroutineType(types: !15770)
!15770 = !{!109, !15771}
!15771 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !156, line: 347, baseType: !2338)
!15772 = !{!15773}
!15773 = !DILocalVariable(name: "thread", arg: 1, scope: !15768, file: !2446, line: 1311, type: !15771)
!15774 = !DILocation(line: 0, scope: !15768)
!15775 = !DILocation(line: 1313, column: 22, scope: !15768)
!15776 = !DILocation(line: 1313, column: 9, scope: !15768)
!15777 = !DILocation(line: 1313, column: 2, scope: !15768)
!15778 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2446, file: !2446, line: 1325, type: !15779, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !15781)
!15779 = !DISubroutineType(types: !15780)
!15780 = !{null, !15771, !109}
!15781 = !{!15782, !15783, !15784}
!15782 = !DILocalVariable(name: "thread", arg: 1, scope: !15778, file: !2446, line: 1325, type: !15771)
!15783 = !DILocalVariable(name: "prio", arg: 2, scope: !15778, file: !2446, line: 1325, type: !109)
!15784 = !DILocalVariable(name: "th", scope: !15778, file: !2446, line: 1334, type: !2338)
!15785 = !DILocation(line: 0, scope: !15778)
!15786 = !DILocation(line: 1331, column: 2, scope: !15787)
!15787 = distinct !DILexicalBlock(scope: !15788, file: !2446, line: 1331, column: 2)
!15788 = distinct !DILexicalBlock(scope: !15789, file: !2446, line: 1331, column: 2)
!15789 = distinct !DILexicalBlock(scope: !15778, file: !2446, line: 1331, column: 2)
!15790 = !DILocation(line: 1331, column: 2, scope: !15791)
!15791 = distinct !DILexicalBlock(scope: !15787, file: !2446, line: 1331, column: 2)
!15792 = !DILocation(line: 1031, column: 3, scope: !14762, inlinedAt: !15793)
!15793 = distinct !DILocation(line: 48, column: 10, scope: !14766, inlinedAt: !15794)
!15794 = distinct !DILocation(line: 1332, column: 2, scope: !15795)
!15795 = distinct !DILexicalBlock(scope: !15796, file: !2446, line: 1332, column: 2)
!15796 = distinct !DILexicalBlock(scope: !15778, file: !2446, line: 1332, column: 2)
!15797 = !DILocation(line: 0, scope: !14762, inlinedAt: !15793)
!15798 = !DILocation(line: 48, column: 9, scope: !14766, inlinedAt: !15794)
!15799 = !DILocation(line: 1332, column: 2, scope: !15796)
!15800 = !DILocation(line: 1332, column: 2, scope: !15801)
!15801 = distinct !DILexicalBlock(scope: !15795, file: !2446, line: 1332, column: 2)
!15802 = !DILocation(line: 1336, column: 2, scope: !15778)
!15803 = !DILocation(line: 1337, column: 1, scope: !15778)
!15804 = distinct !DISubprogram(name: "k_can_yield", scope: !2446, file: !2446, line: 1384, type: !7474, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !2036)
!15805 = !DILocation(line: 1386, column: 11, scope: !15804)
!15806 = !DILocation(line: 1386, column: 29, scope: !15804)
!15807 = !DILocation(line: 1386, column: 32, scope: !15804)
!15808 = !DILocation(line: 1386, column: 46, scope: !15804)
!15809 = !DILocation(line: 1387, column: 28, scope: !15804)
!15810 = !DILocation(line: 1387, column: 4, scope: !15804)
!15811 = !DILocation(line: 1386, column: 2, scope: !15804)
!15812 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !118, file: !118, line: 989, type: !7474, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !2036)
!15813 = !DILocation(line: 993, column: 10, scope: !15812)
!15814 = !DILocation(line: 993, column: 2, scope: !15812)
!15815 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2446, file: !2446, line: 1390, type: !3096, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !15816)
!15816 = !{!15817}
!15817 = !DILocalVariable(name: "key", scope: !15815, file: !2446, line: 1396, type: !14029)
!15818 = !DILocation(line: 1031, column: 3, scope: !14762, inlinedAt: !15819)
!15819 = distinct !DILocation(line: 48, column: 10, scope: !14766, inlinedAt: !15820)
!15820 = distinct !DILocation(line: 1392, column: 2, scope: !15821)
!15821 = distinct !DILexicalBlock(scope: !15822, file: !2446, line: 1392, column: 2)
!15822 = distinct !DILexicalBlock(scope: !15815, file: !2446, line: 1392, column: 2)
!15823 = !DILocation(line: 0, scope: !14762, inlinedAt: !15819)
!15824 = !DILocation(line: 48, column: 9, scope: !14766, inlinedAt: !15820)
!15825 = !DILocation(line: 1392, column: 2, scope: !15822)
!15826 = !DILocation(line: 1392, column: 2, scope: !15827)
!15827 = distinct !DILexicalBlock(scope: !15821, file: !2446, line: 1392, column: 2)
!15828 = !DILocation(line: 0, scope: !14037, inlinedAt: !15829)
!15829 = distinct !DILocation(line: 1396, column: 25, scope: !15815)
!15830 = !DILocation(line: 55, column: 2, scope: !14046, inlinedAt: !15831)
!15831 = distinct !DILocation(line: 145, column: 10, scope: !14037, inlinedAt: !15829)
!15832 = !DILocation(line: 0, scope: !14046, inlinedAt: !15831)
!15833 = !DILocation(line: 148, column: 2, scope: !14054, inlinedAt: !15829)
!15834 = !DILocation(line: 148, column: 2, scope: !14055, inlinedAt: !15829)
!15835 = !DILocation(line: 148, column: 2, scope: !14058, inlinedAt: !15829)
!15836 = !DILocation(line: 160, column: 2, scope: !14037, inlinedAt: !15829)
!15837 = !DILocation(line: 0, scope: !15815)
!15838 = !DILocation(line: 1400, column: 18, scope: !15839)
!15839 = distinct !DILexicalBlock(scope: !15840, file: !2446, line: 1399, column: 36)
!15840 = distinct !DILexicalBlock(scope: !15815, file: !2446, line: 1398, column: 6)
!15841 = !DILocation(line: 0, scope: !14229, inlinedAt: !15842)
!15842 = distinct !DILocation(line: 1400, column: 3, scope: !15839)
!15843 = !DILocation(line: 266, column: 15, scope: !14229, inlinedAt: !15842)
!15844 = !DILocation(line: 266, column: 28, scope: !14229, inlinedAt: !15842)
!15845 = !DILocation(line: 0, scope: !14237, inlinedAt: !15846)
!15846 = distinct !DILocation(line: 268, column: 3, scope: !14241, inlinedAt: !15842)
!15847 = !DILocation(line: 234, column: 2, scope: !14237, inlinedAt: !15846)
!15848 = !DILocation(line: 1402, column: 15, scope: !15815)
!15849 = !DILocation(line: 0, scope: !14246, inlinedAt: !15850)
!15850 = distinct !DILocation(line: 1402, column: 2, scope: !15815)
!15851 = !DILocation(line: 252, column: 15, scope: !14246, inlinedAt: !15850)
!15852 = !DILocation(line: 252, column: 28, scope: !14246, inlinedAt: !15850)
!15853 = !DILocation(line: 0, scope: !14253, inlinedAt: !15854)
!15854 = distinct !DILocation(line: 254, column: 3, scope: !14257, inlinedAt: !15850)
!15855 = !DILocation(line: 0, scope: !14260, inlinedAt: !15856)
!15856 = distinct !DILocation(line: 229, column: 2, scope: !14253, inlinedAt: !15854)
!15857 = !DILocation(line: 186, column: 2, scope: !14270, inlinedAt: !15856)
!15858 = !DILocation(line: 186, column: 2, scope: !14271, inlinedAt: !15856)
!15859 = !DILocation(line: 186, column: 2, scope: !14274, inlinedAt: !15856)
!15860 = !DILocation(line: 188, column: 2, scope: !14276, inlinedAt: !15856)
!15861 = !DILocation(line: 188, column: 2, scope: !14278, inlinedAt: !15856)
!15862 = !DILocation(line: 0, scope: !14276, inlinedAt: !15856)
!15863 = !DILocation(line: 189, column: 7, scope: !14281, inlinedAt: !15856)
!15864 = !DILocation(line: 189, column: 35, scope: !14281, inlinedAt: !15856)
!15865 = !DILocation(line: 189, column: 7, scope: !14282, inlinedAt: !15856)
!15866 = !DILocation(line: 191, column: 21, scope: !14286, inlinedAt: !15856)
!15867 = !DILocation(line: 190, column: 4, scope: !14286, inlinedAt: !15856)
!15868 = !DILocation(line: 192, column: 4, scope: !14286, inlinedAt: !15856)
!15869 = distinct !{!15869, !15860, !15870}
!15870 = !DILocation(line: 194, column: 2, scope: !14276, inlinedAt: !15856)
!15871 = !DILocation(line: 196, column: 37, scope: !14260, inlinedAt: !15856)
!15872 = !DILocation(line: 196, column: 2, scope: !14260, inlinedAt: !15856)
!15873 = !DILocation(line: 197, column: 1, scope: !14260, inlinedAt: !15856)
!15874 = !DILocation(line: 1403, column: 2, scope: !15815)
!15875 = !DILocation(line: 0, scope: !14713, inlinedAt: !15876)
!15876 = distinct !DILocation(line: 1404, column: 2, scope: !15815)
!15877 = !DILocation(line: 0, scope: !14722, inlinedAt: !15878)
!15878 = distinct !DILocation(line: 195, column: 2, scope: !14713, inlinedAt: !15876)
!15879 = !DILocation(line: 225, column: 2, scope: !14729, inlinedAt: !15878)
!15880 = !DILocation(line: 225, column: 2, scope: !14730, inlinedAt: !15878)
!15881 = !DILocation(line: 225, column: 2, scope: !14733, inlinedAt: !15878)
!15882 = !DILocation(line: 196, column: 9, scope: !14713, inlinedAt: !15876)
!15883 = !DILocation(line: 1405, column: 1, scope: !15815)
!15884 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2446, file: !2446, line: 1459, type: !15885, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !15887)
!15885 = !DISubroutineType(types: !15886)
!15886 = !{!766, !14923}
!15887 = !{!15888, !15889, !15890}
!15888 = !DILocalVariable(name: "timeout", arg: 1, scope: !15884, file: !2446, line: 1459, type: !14923)
!15889 = !DILocalVariable(name: "ticks", scope: !15884, file: !2446, line: 1461, type: !103)
!15890 = !DILocalVariable(name: "ret", scope: !15884, file: !2446, line: 1480, type: !766)
!15891 = !DILocation(line: 0, scope: !15884)
!15892 = !DILocation(line: 1031, column: 3, scope: !14762, inlinedAt: !15893)
!15893 = distinct !DILocation(line: 48, column: 10, scope: !14766, inlinedAt: !15894)
!15894 = distinct !DILocation(line: 1463, column: 2, scope: !15895)
!15895 = distinct !DILexicalBlock(scope: !15896, file: !2446, line: 1463, column: 2)
!15896 = distinct !DILexicalBlock(scope: !15884, file: !2446, line: 1463, column: 2)
!15897 = !DILocation(line: 0, scope: !14762, inlinedAt: !15893)
!15898 = !DILocation(line: 48, column: 9, scope: !14766, inlinedAt: !15894)
!15899 = !DILocation(line: 1463, column: 2, scope: !15896)
!15900 = !DILocation(line: 1463, column: 2, scope: !15901)
!15901 = distinct !DILexicalBlock(scope: !15895, file: !2446, line: 1463, column: 2)
!15902 = !DILocation(line: 1468, column: 6, scope: !15903)
!15903 = distinct !DILexicalBlock(scope: !15884, file: !2446, line: 1468, column: 6)
!15904 = !DILocation(line: 1468, column: 6, scope: !15884)
!15905 = !DILocation(line: 1469, column: 20, scope: !15906)
!15906 = distinct !DILexicalBlock(scope: !15903, file: !2446, line: 1468, column: 40)
!15907 = !DILocation(line: 1469, column: 3, scope: !15906)
!15908 = !DILocation(line: 1473, column: 3, scope: !15906)
!15909 = !DILocation(line: 1478, column: 10, scope: !15884)
!15910 = !DILocation(line: 1480, column: 16, scope: !15884)
!15911 = !DILocation(line: 1485, column: 1, scope: !15884)
!15912 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3238, file: !3238, line: 310, type: !15913, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !15915)
!15913 = !DISubroutineType(types: !15914)
!15914 = !{null, !15771}
!15915 = !{!15916}
!15916 = !DILocalVariable(name: "thread", arg: 1, scope: !15912, file: !3238, line: 310, type: !15771)
!15917 = !DILocation(line: 0, scope: !15912)
!15918 = !DILocation(line: 319, column: 2, scope: !15919)
!15919 = distinct !DILexicalBlock(scope: !15912, file: !3238, line: 319, column: 2)
!15920 = !{i64 2154892970}
!15921 = !DILocation(line: 320, column: 2, scope: !15912)
!15922 = !DILocation(line: 321, column: 1, scope: !15912)
!15923 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2446, file: !2446, line: 1415, type: !15924, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !15926)
!15924 = !DISubroutineType(types: !15925)
!15925 = !{!766, !103}
!15926 = !{!15927, !15928, !15929, !15930}
!15927 = !DILocalVariable(name: "ticks", arg: 1, scope: !15923, file: !2446, line: 1415, type: !103)
!15928 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !15923, file: !2446, line: 1418, type: !110)
!15929 = !DILocalVariable(name: "timeout", scope: !15923, file: !2446, line: 1430, type: !14923)
!15930 = !DILocalVariable(name: "key", scope: !15923, file: !2446, line: 1437, type: !14029)
!15931 = !DILocation(line: 0, scope: !15923)
!15932 = !DILocation(line: 1031, column: 3, scope: !14762, inlinedAt: !15933)
!15933 = distinct !DILocation(line: 48, column: 10, scope: !14766, inlinedAt: !15934)
!15934 = distinct !DILocation(line: 1420, column: 2, scope: !15935)
!15935 = distinct !DILexicalBlock(scope: !15936, file: !2446, line: 1420, column: 2)
!15936 = distinct !DILexicalBlock(scope: !15923, file: !2446, line: 1420, column: 2)
!15937 = !DILocation(line: 0, scope: !14762, inlinedAt: !15933)
!15938 = !DILocation(line: 48, column: 9, scope: !14766, inlinedAt: !15934)
!15939 = !DILocation(line: 1420, column: 2, scope: !15936)
!15940 = !DILocation(line: 1420, column: 2, scope: !15941)
!15941 = distinct !DILexicalBlock(scope: !15935, file: !2446, line: 1420, column: 2)
!15942 = !DILocation(line: 1425, column: 12, scope: !15943)
!15943 = distinct !DILexicalBlock(scope: !15923, file: !2446, line: 1425, column: 6)
!15944 = !DILocation(line: 1425, column: 6, scope: !15923)
!15945 = !DILocation(line: 1426, column: 3, scope: !15946)
!15946 = distinct !DILexicalBlock(scope: !15943, file: !2446, line: 1425, column: 18)
!15947 = !DILocation(line: 1427, column: 3, scope: !15946)
!15948 = !DILocation(line: 1431, column: 24, scope: !15949)
!15949 = distinct !DILexicalBlock(scope: !15923, file: !2446, line: 1431, column: 6)
!15950 = !DILocation(line: 1431, column: 6, scope: !15923)
!15951 = !DILocation(line: 1432, column: 35, scope: !15952)
!15952 = distinct !DILexicalBlock(scope: !15949, file: !2446, line: 1431, column: 30)
!15953 = !DILocation(line: 1432, column: 27, scope: !15952)
!15954 = !DILocation(line: 1433, column: 2, scope: !15952)
!15955 = !DILocation(line: 1434, column: 27, scope: !15956)
!15956 = distinct !DILexicalBlock(scope: !15949, file: !2446, line: 1433, column: 9)
!15957 = !DILocation(line: 0, scope: !15949)
!15958 = !DILocation(line: 0, scope: !14037, inlinedAt: !15959)
!15959 = distinct !DILocation(line: 1437, column: 25, scope: !15923)
!15960 = !DILocation(line: 55, column: 2, scope: !14046, inlinedAt: !15961)
!15961 = distinct !DILocation(line: 145, column: 10, scope: !14037, inlinedAt: !15959)
!15962 = !DILocation(line: 0, scope: !14046, inlinedAt: !15961)
!15963 = !DILocation(line: 148, column: 2, scope: !14054, inlinedAt: !15959)
!15964 = !DILocation(line: 148, column: 2, scope: !14055, inlinedAt: !15959)
!15965 = !DILocation(line: 148, column: 2, scope: !14058, inlinedAt: !15959)
!15966 = !DILocation(line: 160, column: 2, scope: !14037, inlinedAt: !15959)
!15967 = !DILocation(line: 1440, column: 20, scope: !15923)
!15968 = !DILocation(line: 1440, column: 18, scope: !15923)
!15969 = !DILocation(line: 1442, column: 2, scope: !15923)
!15970 = !DILocation(line: 1443, column: 23, scope: !15923)
!15971 = !DILocation(line: 1443, column: 2, scope: !15923)
!15972 = !DILocation(line: 1444, column: 29, scope: !15923)
!15973 = !DILocation(line: 1444, column: 2, scope: !15923)
!15974 = !DILocation(line: 0, scope: !14713, inlinedAt: !15975)
!15975 = distinct !DILocation(line: 1446, column: 8, scope: !15923)
!15976 = !DILocation(line: 0, scope: !14722, inlinedAt: !15977)
!15977 = distinct !DILocation(line: 195, column: 2, scope: !14713, inlinedAt: !15975)
!15978 = !DILocation(line: 225, column: 2, scope: !14729, inlinedAt: !15977)
!15979 = !DILocation(line: 225, column: 2, scope: !14730, inlinedAt: !15977)
!15980 = !DILocation(line: 225, column: 2, scope: !14733, inlinedAt: !15977)
!15981 = !DILocation(line: 196, column: 9, scope: !14713, inlinedAt: !15975)
!15982 = !DILocation(line: 1448, column: 2, scope: !15983)
!15983 = distinct !DILexicalBlock(scope: !15984, file: !2446, line: 1448, column: 2)
!15984 = distinct !DILexicalBlock(scope: !15923, file: !2446, line: 1448, column: 2)
!15985 = !DILocation(line: 1448, column: 2, scope: !15984)
!15986 = !DILocation(line: 1448, column: 2, scope: !15987)
!15987 = distinct !DILexicalBlock(scope: !15983, file: !2446, line: 1448, column: 2)
!15988 = !DILocation(line: 1450, column: 10, scope: !15923)
!15989 = !DILocation(line: 1450, column: 45, scope: !15923)
!15990 = !DILocation(line: 1450, column: 43, scope: !15923)
!15991 = !DILocation(line: 1451, column: 6, scope: !15923)
!15992 = !DILocation(line: 1457, column: 1, scope: !15923)
!15993 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !3279, file: !3279, line: 1103, type: !3280, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !15994)
!15994 = !{!15995}
!15995 = !DILocalVariable(name: "t", arg: 1, scope: !15993, file: !3279, line: 1103, type: !111)
!15996 = !DILocation(line: 0, scope: !15993)
!15997 = !DILocation(line: 0, scope: !14097, inlinedAt: !15998)
!15998 = distinct !DILocation(line: 1106, column: 9, scope: !15993)
!15999 = !DILocation(line: 139, column: 13, scope: !16000, inlinedAt: !15998)
!16000 = distinct !DILexicalBlock(scope: !16001, file: !3279, line: 138, column: 10)
!16001 = distinct !DILexicalBlock(scope: !16002, file: !3279, line: 136, column: 7)
!16002 = distinct !DILexicalBlock(scope: !14118, file: !3279, line: 134, column: 17)
!16003 = !DILocation(line: 1106, column: 2, scope: !15993)
!16004 = distinct !DISubprogram(name: "k_yield", scope: !3238, file: !3238, line: 140, type: !3096, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !2036)
!16005 = !DILocation(line: 148, column: 2, scope: !16006)
!16006 = distinct !DILexicalBlock(scope: !16004, file: !3238, line: 148, column: 2)
!16007 = !{i64 2154892290}
!16008 = !DILocation(line: 149, column: 2, scope: !16004)
!16009 = !DILocation(line: 150, column: 1, scope: !16004)
!16010 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2446, file: !2446, line: 1495, type: !16011, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !16013)
!16011 = !DISubroutineType(types: !16012)
!16012 = !{!766, !109}
!16013 = !{!16014, !16015}
!16014 = !DILocalVariable(name: "us", arg: 1, scope: !16010, file: !2446, line: 1495, type: !109)
!16015 = !DILocalVariable(name: "ticks", scope: !16010, file: !2446, line: 1497, type: !766)
!16016 = !DILocation(line: 0, scope: !16010)
!16017 = !DILocation(line: 1501, column: 31, scope: !16010)
!16018 = !DILocation(line: 1501, column: 10, scope: !16010)
!16019 = !DILocation(line: 1502, column: 23, scope: !16010)
!16020 = !DILocation(line: 1502, column: 10, scope: !16010)
!16021 = !DILocation(line: 1506, column: 31, scope: !16010)
!16022 = !DILocation(line: 1506, column: 9, scope: !16010)
!16023 = !DILocation(line: 1506, column: 2, scope: !16010)
!16024 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !3279, file: !3279, line: 571, type: !3280, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !16025)
!16025 = !{!16026}
!16026 = !DILocalVariable(name: "t", arg: 1, scope: !16024, file: !3279, line: 571, type: !111)
!16027 = !DILocation(line: 0, scope: !16024)
!16028 = !DILocation(line: 0, scope: !14097, inlinedAt: !16029)
!16029 = distinct !DILocation(line: 574, column: 9, scope: !16024)
!16030 = !DILocation(line: 135, column: 5, scope: !16002, inlinedAt: !16029)
!16031 = !DILocation(line: 139, column: 13, scope: !16000, inlinedAt: !16029)
!16032 = !DILocation(line: 574, column: 2, scope: !16024)
!16033 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !3279, file: !3279, line: 1187, type: !3280, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !16034)
!16034 = !{!16035}
!16035 = !DILocalVariable(name: "t", arg: 1, scope: !16033, file: !3279, line: 1187, type: !111)
!16036 = !DILocation(line: 0, scope: !16033)
!16037 = !DILocation(line: 0, scope: !14097, inlinedAt: !16038)
!16038 = distinct !DILocation(line: 1190, column: 9, scope: !16033)
!16039 = !DILocation(line: 145, column: 13, scope: !16040, inlinedAt: !16038)
!16040 = distinct !DILexicalBlock(scope: !14115, file: !3279, line: 144, column: 10)
!16041 = !DILocation(line: 1190, column: 2, scope: !16033)
!16042 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2446, file: !2446, line: 1517, type: !15913, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !16043)
!16043 = !{!16044}
!16044 = !DILocalVariable(name: "thread", arg: 1, scope: !16042, file: !2446, line: 1517, type: !15771)
!16045 = !DILocation(line: 0, scope: !16042)
!16046 = !DILocation(line: 1521, column: 6, scope: !16047)
!16047 = distinct !DILexicalBlock(scope: !16042, file: !2446, line: 1521, column: 6)
!16048 = !DILocation(line: 1521, column: 6, scope: !16042)
!16049 = !DILocation(line: 1525, column: 6, scope: !16050)
!16050 = distinct !DILexicalBlock(scope: !16042, file: !2446, line: 1525, column: 6)
!16051 = !DILocation(line: 1525, column: 37, scope: !16050)
!16052 = !DILocation(line: 1525, column: 6, scope: !16042)
!16053 = !DILocation(line: 1527, column: 20, scope: !16054)
!16054 = distinct !DILexicalBlock(scope: !16055, file: !2446, line: 1527, column: 7)
!16055 = distinct !DILexicalBlock(scope: !16050, file: !2446, line: 1525, column: 42)
!16056 = !DILocation(line: 1527, column: 33, scope: !16054)
!16057 = !DILocation(line: 1527, column: 7, scope: !16055)
!16058 = !DILocation(line: 1532, column: 2, scope: !16042)
!16059 = !DILocation(line: 1533, column: 2, scope: !16042)
!16060 = !DILocation(line: 1031, column: 3, scope: !14762, inlinedAt: !16061)
!16061 = distinct !DILocation(line: 48, column: 10, scope: !14766, inlinedAt: !16062)
!16062 = distinct !DILocation(line: 1537, column: 7, scope: !16063)
!16063 = distinct !DILexicalBlock(scope: !16042, file: !2446, line: 1537, column: 6)
!16064 = !DILocation(line: 0, scope: !14762, inlinedAt: !16061)
!16065 = !DILocation(line: 48, column: 9, scope: !14766, inlinedAt: !16062)
!16066 = !DILocation(line: 1537, column: 6, scope: !16042)
!16067 = !DILocation(line: 1538, column: 3, scope: !16068)
!16068 = distinct !DILexicalBlock(scope: !16063, file: !2446, line: 1537, column: 25)
!16069 = !DILocation(line: 1539, column: 2, scope: !16068)
!16070 = !DILocation(line: 1540, column: 1, scope: !16042)
!16071 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !12829, file: !12829, line: 101, type: !14178, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !16072)
!16072 = !{!16073}
!16073 = !DILocalVariable(name: "thread", arg: 1, scope: !16071, file: !12829, line: 101, type: !2338)
!16074 = !DILocation(line: 0, scope: !16071)
!16075 = !DILocation(line: 103, column: 23, scope: !16071)
!16076 = !DILocation(line: 103, column: 36, scope: !16071)
!16077 = !DILocation(line: 103, column: 55, scope: !16071)
!16078 = !DILocation(line: 103, column: 2, scope: !16071)
!16079 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2446, file: !2446, line: 1567, type: !16080, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !16082)
!16080 = !DISubroutineType(types: !16081)
!16081 = !{!15771}
!16082 = !{!16083}
!16083 = !DILocalVariable(name: "ret", scope: !16079, file: !2446, line: 1577, type: !15771)
!16084 = !DILocation(line: 1577, column: 30, scope: !16079)
!16085 = !DILocation(line: 0, scope: !16079)
!16086 = !DILocation(line: 1582, column: 2, scope: !16079)
!16087 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2446, file: !2446, line: 1593, type: !7777, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !2036)
!16088 = !DILocation(line: 1031, column: 3, scope: !14762, inlinedAt: !16089)
!16089 = distinct !DILocation(line: 48, column: 10, scope: !14766, inlinedAt: !16090)
!16090 = distinct !DILocation(line: 1595, column: 10, scope: !16087)
!16091 = !DILocation(line: 0, scope: !14762, inlinedAt: !16089)
!16092 = !DILocation(line: 48, column: 9, scope: !14766, inlinedAt: !16090)
!16093 = !DILocation(line: 1595, column: 27, scope: !16087)
!16094 = !DILocation(line: 1595, column: 41, scope: !16087)
!16095 = !DILocation(line: 1595, column: 30, scope: !16087)
!16096 = !DILocation(line: 1595, column: 2, scope: !16087)
!16097 = distinct !DISubprogram(name: "z_thread_abort", scope: !2446, file: !2446, line: 1725, type: !13995, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !16098)
!16098 = !{!16099, !16100}
!16099 = !DILocalVariable(name: "thread", arg: 1, scope: !16097, file: !2446, line: 1725, type: !2338)
!16100 = !DILocalVariable(name: "key", scope: !16097, file: !2446, line: 1727, type: !14029)
!16101 = !DILocation(line: 0, scope: !16097)
!16102 = !DILocation(line: 0, scope: !14037, inlinedAt: !16103)
!16103 = distinct !DILocation(line: 1727, column: 25, scope: !16097)
!16104 = !DILocation(line: 55, column: 2, scope: !14046, inlinedAt: !16105)
!16105 = distinct !DILocation(line: 145, column: 10, scope: !14037, inlinedAt: !16103)
!16106 = !DILocation(line: 0, scope: !14046, inlinedAt: !16105)
!16107 = !DILocation(line: 148, column: 2, scope: !14054, inlinedAt: !16103)
!16108 = !DILocation(line: 148, column: 2, scope: !14055, inlinedAt: !16103)
!16109 = !DILocation(line: 148, column: 2, scope: !14058, inlinedAt: !16103)
!16110 = !DILocation(line: 160, column: 2, scope: !14037, inlinedAt: !16103)
!16111 = !DILocation(line: 1729, column: 20, scope: !16112)
!16112 = distinct !DILexicalBlock(scope: !16097, file: !2446, line: 1729, column: 6)
!16113 = !DILocation(line: 1729, column: 33, scope: !16112)
!16114 = !DILocation(line: 1729, column: 48, scope: !16112)
!16115 = !DILocation(line: 1729, column: 6, scope: !16097)
!16116 = !DILocation(line: 0, scope: !14071, inlinedAt: !16117)
!16117 = distinct !DILocation(line: 1730, column: 3, scope: !16118)
!16118 = distinct !DILexicalBlock(scope: !16112, file: !2446, line: 1729, column: 54)
!16119 = !DILocation(line: 194, column: 2, scope: !14079, inlinedAt: !16117)
!16120 = !DILocation(line: 194, column: 2, scope: !14080, inlinedAt: !16117)
!16121 = !DILocation(line: 194, column: 2, scope: !14083, inlinedAt: !16117)
!16122 = !DILocation(line: 0, scope: !14085, inlinedAt: !16123)
!16123 = distinct !DILocation(line: 215, column: 2, scope: !14071, inlinedAt: !16117)
!16124 = !DILocation(line: 95, column: 2, scope: !14085, inlinedAt: !16123)
!16125 = !DILocation(line: 1731, column: 3, scope: !16126)
!16126 = distinct !DILexicalBlock(scope: !16127, file: !2446, line: 1731, column: 3)
!16127 = distinct !DILexicalBlock(scope: !16128, file: !2446, line: 1731, column: 3)
!16128 = distinct !DILexicalBlock(scope: !16118, file: !2446, line: 1731, column: 3)
!16129 = !DILocation(line: 1736, column: 20, scope: !16130)
!16130 = distinct !DILexicalBlock(scope: !16097, file: !2446, line: 1736, column: 6)
!16131 = !DILocation(line: 1736, column: 33, scope: !16130)
!16132 = !DILocation(line: 1736, column: 49, scope: !16130)
!16133 = !DILocation(line: 1736, column: 6, scope: !16097)
!16134 = !DILocation(line: 0, scope: !14071, inlinedAt: !16135)
!16135 = distinct !DILocation(line: 1737, column: 3, scope: !16136)
!16136 = distinct !DILexicalBlock(scope: !16130, file: !2446, line: 1736, column: 56)
!16137 = !DILocation(line: 194, column: 2, scope: !14079, inlinedAt: !16135)
!16138 = !DILocation(line: 194, column: 2, scope: !14080, inlinedAt: !16135)
!16139 = !DILocation(line: 194, column: 2, scope: !14083, inlinedAt: !16135)
!16140 = !DILocation(line: 0, scope: !14085, inlinedAt: !16141)
!16141 = distinct !DILocation(line: 215, column: 2, scope: !14071, inlinedAt: !16135)
!16142 = !DILocation(line: 95, column: 2, scope: !14085, inlinedAt: !16141)
!16143 = !DILocation(line: 1738, column: 3, scope: !16136)
!16144 = !DILocation(line: 1775, column: 2, scope: !16097)
!16145 = !DILocation(line: 1776, column: 16, scope: !16146)
!16146 = distinct !DILexicalBlock(scope: !16097, file: !2446, line: 1776, column: 6)
!16147 = !DILocation(line: 1776, column: 13, scope: !16146)
!16148 = !DILocation(line: 1776, column: 25, scope: !16146)
!16149 = !DILocation(line: 1031, column: 3, scope: !14762, inlinedAt: !16150)
!16150 = distinct !DILocation(line: 48, column: 10, scope: !14766, inlinedAt: !16151)
!16151 = distinct !DILocation(line: 1776, column: 29, scope: !16146)
!16152 = !DILocation(line: 0, scope: !14762, inlinedAt: !16150)
!16153 = !DILocation(line: 48, column: 9, scope: !14766, inlinedAt: !16151)
!16154 = !DILocation(line: 1776, column: 6, scope: !16097)
!16155 = !DILocation(line: 0, scope: !14713, inlinedAt: !16156)
!16156 = distinct !DILocation(line: 1777, column: 3, scope: !16157)
!16157 = distinct !DILexicalBlock(scope: !16146, file: !2446, line: 1776, column: 47)
!16158 = !DILocation(line: 0, scope: !14722, inlinedAt: !16159)
!16159 = distinct !DILocation(line: 195, column: 2, scope: !14713, inlinedAt: !16156)
!16160 = !DILocation(line: 225, column: 2, scope: !14729, inlinedAt: !16159)
!16161 = !DILocation(line: 225, column: 2, scope: !14730, inlinedAt: !16159)
!16162 = !DILocation(line: 225, column: 2, scope: !14733, inlinedAt: !16159)
!16163 = !DILocation(line: 196, column: 9, scope: !14713, inlinedAt: !16156)
!16164 = !DILocation(line: 1778, column: 3, scope: !16165)
!16165 = distinct !DILexicalBlock(scope: !16166, file: !2446, line: 1778, column: 3)
!16166 = distinct !DILexicalBlock(scope: !16167, file: !2446, line: 1778, column: 3)
!16167 = distinct !DILexicalBlock(scope: !16157, file: !2446, line: 1778, column: 3)
!16168 = !DILocation(line: 0, scope: !14071, inlinedAt: !16169)
!16169 = distinct !DILocation(line: 1780, column: 2, scope: !16097)
!16170 = !DILocation(line: 194, column: 2, scope: !14079, inlinedAt: !16169)
!16171 = !DILocation(line: 194, column: 2, scope: !14080, inlinedAt: !16169)
!16172 = !DILocation(line: 194, column: 2, scope: !14083, inlinedAt: !16169)
!16173 = !DILocation(line: 0, scope: !14085, inlinedAt: !16174)
!16174 = distinct !DILocation(line: 215, column: 2, scope: !14071, inlinedAt: !16169)
!16175 = !DILocation(line: 95, column: 2, scope: !14085, inlinedAt: !16174)
!16176 = !DILocation(line: 1781, column: 1, scope: !16097)
!16177 = distinct !DISubprogram(name: "end_thread", scope: !2446, file: !2446, line: 1690, type: !13995, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !16178)
!16178 = !{!16179}
!16179 = !DILocalVariable(name: "thread", arg: 1, scope: !16177, file: !2446, line: 1690, type: !2338)
!16180 = !DILocation(line: 0, scope: !16177)
!16181 = !DILocation(line: 1695, column: 20, scope: !16182)
!16182 = distinct !DILexicalBlock(scope: !16177, file: !2446, line: 1695, column: 6)
!16183 = !DILocation(line: 1695, column: 33, scope: !16182)
!16184 = !DILocation(line: 1695, column: 49, scope: !16182)
!16185 = !DILocation(line: 1695, column: 6, scope: !16177)
!16186 = !DILocation(line: 1697, column: 29, scope: !16187)
!16187 = distinct !DILexicalBlock(scope: !16182, file: !2446, line: 1695, column: 56)
!16188 = !DILocation(line: 1698, column: 7, scope: !16189)
!16189 = distinct !DILexicalBlock(scope: !16187, file: !2446, line: 1698, column: 7)
!16190 = !DILocation(line: 1698, column: 7, scope: !16187)
!16191 = !DILocation(line: 0, scope: !14229, inlinedAt: !16192)
!16192 = distinct !DILocation(line: 1699, column: 4, scope: !16193)
!16193 = distinct !DILexicalBlock(scope: !16189, file: !2446, line: 1698, column: 35)
!16194 = !DILocation(line: 266, column: 28, scope: !14229, inlinedAt: !16192)
!16195 = !DILocation(line: 0, scope: !14237, inlinedAt: !16196)
!16196 = distinct !DILocation(line: 268, column: 3, scope: !14241, inlinedAt: !16192)
!16197 = !DILocation(line: 234, column: 2, scope: !14237, inlinedAt: !16196)
!16198 = !DILocation(line: 1700, column: 3, scope: !16193)
!16199 = !DILocation(line: 1701, column: 20, scope: !16200)
!16200 = distinct !DILexicalBlock(scope: !16187, file: !2446, line: 1701, column: 7)
!16201 = !DILocation(line: 1701, column: 30, scope: !16200)
!16202 = !DILocation(line: 1701, column: 7, scope: !16187)
!16203 = !DILocation(line: 1702, column: 4, scope: !16204)
!16204 = distinct !DILexicalBlock(scope: !16200, file: !2446, line: 1701, column: 39)
!16205 = !DILocation(line: 1703, column: 3, scope: !16204)
!16206 = !DILocation(line: 1704, column: 9, scope: !16187)
!16207 = !DILocation(line: 1705, column: 23, scope: !16187)
!16208 = !DILocation(line: 1705, column: 3, scope: !16187)
!16209 = !DILocation(line: 1706, column: 3, scope: !16187)
!16210 = !DILocation(line: 1722, column: 2, scope: !16187)
!16211 = !DILocation(line: 1723, column: 1, scope: !16177)
!16212 = distinct !DISubprogram(name: "unpend_all", scope: !2446, file: !2446, line: 1674, type: !16213, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !16215)
!16213 = !DISubroutineType(types: !16214)
!16214 = !{null, !2369}
!16215 = !{!16216, !16217}
!16216 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16212, file: !2446, line: 1674, type: !2369)
!16217 = !DILocalVariable(name: "thread", scope: !16212, file: !2446, line: 1676, type: !2338)
!16218 = !DILocation(line: 0, scope: !16212)
!16219 = !DILocation(line: 1678, column: 19, scope: !16212)
!16220 = !DILocation(line: 1678, column: 41, scope: !16212)
!16221 = !DILocation(line: 1678, column: 2, scope: !16212)
!16222 = !DILocation(line: 1679, column: 3, scope: !16223)
!16223 = distinct !DILexicalBlock(scope: !16212, file: !2446, line: 1678, column: 50)
!16224 = !DILocation(line: 1680, column: 9, scope: !16223)
!16225 = !DILocalVariable(name: "thread", arg: 1, scope: !16226, file: !12849, line: 65, type: !2338)
!16226 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12849, file: !12849, line: 65, type: !16227, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !16229)
!16227 = !DISubroutineType(types: !16228)
!16228 = !{null, !2338, !32}
!16229 = !{!16225, !16230}
!16230 = !DILocalVariable(name: "value", arg: 2, scope: !16226, file: !12849, line: 65, type: !32)
!16231 = !DILocation(line: 0, scope: !16226, inlinedAt: !16232)
!16232 = distinct !DILocation(line: 1681, column: 3, scope: !16223)
!16233 = !DILocation(line: 67, column: 15, scope: !16226, inlinedAt: !16232)
!16234 = !DILocation(line: 67, column: 33, scope: !16226, inlinedAt: !16232)
!16235 = !DILocation(line: 1682, column: 3, scope: !16223)
!16236 = distinct !{!16236, !16221, !16237}
!16237 = !DILocation(line: 1683, column: 2, scope: !16212)
!16238 = !DILocation(line: 1684, column: 1, scope: !16212)
!16239 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2446, file: !2446, line: 1794, type: !16240, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !16242)
!16240 = !DISubroutineType(types: !16241)
!16241 = !{!109, !2338, !14923}
!16242 = !{!16243, !16244, !16245, !16246}
!16243 = !DILocalVariable(name: "thread", arg: 1, scope: !16239, file: !2446, line: 1794, type: !2338)
!16244 = !DILocalVariable(name: "timeout", arg: 2, scope: !16239, file: !2446, line: 1794, type: !14923)
!16245 = !DILocalVariable(name: "key", scope: !16239, file: !2446, line: 1796, type: !14029)
!16246 = !DILocalVariable(name: "ret", scope: !16239, file: !2446, line: 1797, type: !109)
!16247 = !DILocation(line: 0, scope: !16239)
!16248 = !DILocation(line: 0, scope: !14037, inlinedAt: !16249)
!16249 = distinct !DILocation(line: 1796, column: 25, scope: !16239)
!16250 = !DILocation(line: 55, column: 2, scope: !14046, inlinedAt: !16251)
!16251 = distinct !DILocation(line: 145, column: 10, scope: !14037, inlinedAt: !16249)
!16252 = !DILocation(line: 0, scope: !14046, inlinedAt: !16251)
!16253 = !DILocation(line: 148, column: 2, scope: !14054, inlinedAt: !16249)
!16254 = !DILocation(line: 148, column: 2, scope: !14055, inlinedAt: !16249)
!16255 = !DILocation(line: 148, column: 2, scope: !14058, inlinedAt: !16249)
!16256 = !DILocation(line: 160, column: 2, scope: !14037, inlinedAt: !16249)
!16257 = !DILocation(line: 1801, column: 20, scope: !16258)
!16258 = distinct !DILexicalBlock(scope: !16239, file: !2446, line: 1801, column: 6)
!16259 = !DILocation(line: 1801, column: 33, scope: !16258)
!16260 = !DILocation(line: 1801, column: 49, scope: !16258)
!16261 = !DILocation(line: 1801, column: 6, scope: !16239)
!16262 = !DILocation(line: 1803, column: 13, scope: !16263)
!16263 = distinct !DILexicalBlock(scope: !16258, file: !2446, line: 1803, column: 13)
!16264 = !DILocation(line: 1803, column: 13, scope: !16258)
!16265 = !DILocation(line: 1805, column: 24, scope: !16266)
!16266 = distinct !DILexicalBlock(scope: !16263, file: !2446, line: 1805, column: 13)
!16267 = !DILocation(line: 1805, column: 21, scope: !16266)
!16268 = !DILocation(line: 1805, column: 34, scope: !16266)
!16269 = !DILocation(line: 1806, column: 20, scope: !16266)
!16270 = !DILocation(line: 1806, column: 44, scope: !16266)
!16271 = !DILocation(line: 1806, column: 30, scope: !16266)
!16272 = !DILocation(line: 1805, column: 13, scope: !16263)
!16273 = !DILocation(line: 1031, column: 3, scope: !14762, inlinedAt: !16274)
!16274 = distinct !DILocation(line: 48, column: 10, scope: !14766, inlinedAt: !16275)
!16275 = distinct !DILocation(line: 1809, column: 3, scope: !16276)
!16276 = distinct !DILexicalBlock(scope: !16277, file: !2446, line: 1809, column: 3)
!16277 = distinct !DILexicalBlock(scope: !16278, file: !2446, line: 1809, column: 3)
!16278 = distinct !DILexicalBlock(scope: !16266, file: !2446, line: 1808, column: 9)
!16279 = !DILocation(line: 0, scope: !14762, inlinedAt: !16274)
!16280 = !DILocation(line: 48, column: 9, scope: !14766, inlinedAt: !16275)
!16281 = !DILocation(line: 1809, column: 3, scope: !16277)
!16282 = !DILocation(line: 1809, column: 3, scope: !16283)
!16283 = distinct !DILexicalBlock(scope: !16276, file: !2446, line: 1809, column: 3)
!16284 = !DILocation(line: 1810, column: 23, scope: !16278)
!16285 = !DILocation(line: 1810, column: 42, scope: !16278)
!16286 = !DILocation(line: 1810, column: 3, scope: !16278)
!16287 = !DILocation(line: 1811, column: 22, scope: !16278)
!16288 = !DILocation(line: 1811, column: 3, scope: !16278)
!16289 = !DILocation(line: 0, scope: !14713, inlinedAt: !16290)
!16290 = distinct !DILocation(line: 1814, column: 9, scope: !16278)
!16291 = !DILocation(line: 0, scope: !14722, inlinedAt: !16292)
!16292 = distinct !DILocation(line: 195, column: 2, scope: !14713, inlinedAt: !16290)
!16293 = !DILocation(line: 225, column: 2, scope: !14729, inlinedAt: !16292)
!16294 = !DILocation(line: 225, column: 2, scope: !14730, inlinedAt: !16292)
!16295 = !DILocation(line: 225, column: 2, scope: !14733, inlinedAt: !16292)
!16296 = !DILocation(line: 196, column: 9, scope: !14713, inlinedAt: !16290)
!16297 = !DILocation(line: 1817, column: 3, scope: !16278)
!16298 = !DILocation(line: 0, scope: !16258)
!16299 = !DILocation(line: 0, scope: !14071, inlinedAt: !16300)
!16300 = distinct !DILocation(line: 1822, column: 2, scope: !16239)
!16301 = !DILocation(line: 194, column: 2, scope: !14079, inlinedAt: !16300)
!16302 = !DILocation(line: 194, column: 2, scope: !14080, inlinedAt: !16300)
!16303 = !DILocation(line: 194, column: 2, scope: !14083, inlinedAt: !16300)
!16304 = !DILocation(line: 0, scope: !14085, inlinedAt: !16305)
!16305 = distinct !DILocation(line: 215, column: 2, scope: !14071, inlinedAt: !16300)
!16306 = !DILocation(line: 95, column: 2, scope: !14085, inlinedAt: !16305)
!16307 = !DILocation(line: 1823, column: 2, scope: !16239)
!16308 = !DILocation(line: 1824, column: 1, scope: !16239)
!16309 = distinct !DISubprogram(name: "z_sched_wake", scope: !2446, file: !2446, line: 1882, type: !16310, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !16312)
!16310 = !DISubroutineType(types: !16311)
!16311 = !{!347, !2369, !109, !107}
!16312 = !{!16313, !16314, !16315, !16316, !16317, !16318, !16320}
!16313 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16309, file: !2446, line: 1882, type: !2369)
!16314 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !16309, file: !2446, line: 1882, type: !109)
!16315 = !DILocalVariable(name: "swap_data", arg: 3, scope: !16309, file: !2446, line: 1882, type: !107)
!16316 = !DILocalVariable(name: "thread", scope: !16309, file: !2446, line: 1884, type: !2338)
!16317 = !DILocalVariable(name: "ret", scope: !16309, file: !2446, line: 1885, type: !347)
!16318 = !DILocalVariable(name: "__i", scope: !16319, file: !2446, line: 1887, type: !14029)
!16319 = distinct !DILexicalBlock(scope: !16309, file: !2446, line: 1887, column: 2)
!16320 = !DILocalVariable(name: "__key", scope: !16319, file: !2446, line: 1887, type: !14029)
!16321 = !DILocation(line: 0, scope: !16309)
!16322 = !DILocation(line: 0, scope: !16319)
!16323 = !DILocation(line: 0, scope: !14037, inlinedAt: !16324)
!16324 = distinct !DILocation(line: 1887, column: 2, scope: !16319)
!16325 = !DILocation(line: 55, column: 2, scope: !14046, inlinedAt: !16326)
!16326 = distinct !DILocation(line: 145, column: 10, scope: !14037, inlinedAt: !16324)
!16327 = !DILocation(line: 0, scope: !14046, inlinedAt: !16326)
!16328 = !DILocation(line: 148, column: 2, scope: !14054, inlinedAt: !16324)
!16329 = !DILocation(line: 148, column: 2, scope: !14055, inlinedAt: !16324)
!16330 = !DILocation(line: 148, column: 2, scope: !14058, inlinedAt: !16324)
!16331 = !DILocation(line: 160, column: 2, scope: !14037, inlinedAt: !16324)
!16332 = !DILocation(line: 1888, column: 12, scope: !16333)
!16333 = distinct !DILexicalBlock(scope: !16334, file: !2446, line: 1887, column: 26)
!16334 = distinct !DILexicalBlock(scope: !16319, file: !2446, line: 1887, column: 2)
!16335 = !DILocation(line: 1890, column: 14, scope: !16336)
!16336 = distinct !DILexicalBlock(scope: !16333, file: !2446, line: 1890, column: 7)
!16337 = !DILocation(line: 1890, column: 7, scope: !16333)
!16338 = !DILocalVariable(name: "thread", arg: 1, scope: !16339, file: !16340, line: 134, type: !2338)
!16339 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !16340, file: !16340, line: 134, type: !16341, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !16343)
!16340 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16341 = !DISubroutineType(types: !16342)
!16342 = !{null, !2338, !32, !107}
!16343 = !{!16338, !16344, !16345}
!16344 = !DILocalVariable(name: "value", arg: 2, scope: !16339, file: !16340, line: 135, type: !32)
!16345 = !DILocalVariable(name: "data", arg: 3, scope: !16339, file: !16340, line: 136, type: !107)
!16346 = !DILocation(line: 0, scope: !16339, inlinedAt: !16347)
!16347 = distinct !DILocation(line: 1891, column: 4, scope: !16348)
!16348 = distinct !DILexicalBlock(scope: !16336, file: !2446, line: 1890, column: 23)
!16349 = !DILocation(line: 0, scope: !16226, inlinedAt: !16350)
!16350 = distinct !DILocation(line: 138, column: 2, scope: !16339, inlinedAt: !16347)
!16351 = !DILocation(line: 67, column: 15, scope: !16226, inlinedAt: !16350)
!16352 = !DILocation(line: 67, column: 33, scope: !16226, inlinedAt: !16350)
!16353 = !DILocation(line: 139, column: 15, scope: !16339, inlinedAt: !16347)
!16354 = !DILocation(line: 139, column: 25, scope: !16339, inlinedAt: !16347)
!16355 = !DILocation(line: 1894, column: 4, scope: !16348)
!16356 = !DILocation(line: 1895, column: 10, scope: !16348)
!16357 = !DILocation(line: 1896, column: 4, scope: !16348)
!16358 = !DILocation(line: 1898, column: 3, scope: !16348)
!16359 = !DILocation(line: 0, scope: !14071, inlinedAt: !16360)
!16360 = distinct !DILocation(line: 1887, column: 2, scope: !16334)
!16361 = !DILocation(line: 194, column: 2, scope: !14079, inlinedAt: !16360)
!16362 = !DILocation(line: 194, column: 2, scope: !14080, inlinedAt: !16360)
!16363 = !DILocation(line: 194, column: 2, scope: !14083, inlinedAt: !16360)
!16364 = !DILocation(line: 0, scope: !14085, inlinedAt: !16365)
!16365 = distinct !DILocation(line: 215, column: 2, scope: !14071, inlinedAt: !16360)
!16366 = !DILocation(line: 95, column: 2, scope: !14085, inlinedAt: !16365)
!16367 = !DILocation(line: 1901, column: 2, scope: !16309)
!16368 = distinct !DISubprogram(name: "z_sched_wait", scope: !2446, file: !2446, line: 1904, type: !16369, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2335, retainedNodes: !16372)
!16369 = !DISubroutineType(types: !16370)
!16370 = !{!109, !14040, !14029, !2369, !14923, !16371}
!16371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!16372 = !{!16373, !16374, !16375, !16376, !16377, !16378}
!16373 = !DILocalVariable(name: "lock", arg: 1, scope: !16368, file: !2446, line: 1904, type: !14040)
!16374 = !DILocalVariable(name: "key", arg: 2, scope: !16368, file: !2446, line: 1904, type: !14029)
!16375 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16368, file: !2446, line: 1905, type: !2369)
!16376 = !DILocalVariable(name: "timeout", arg: 4, scope: !16368, file: !2446, line: 1905, type: !14923)
!16377 = !DILocalVariable(name: "data", arg: 5, scope: !16368, file: !2446, line: 1905, type: !16371)
!16378 = !DILocalVariable(name: "ret", scope: !16368, file: !2446, line: 1907, type: !109)
!16379 = !DILocation(line: 0, scope: !16368)
!16380 = !DILocation(line: 1907, column: 12, scope: !16368)
!16381 = !DILocation(line: 1909, column: 11, scope: !16382)
!16382 = distinct !DILexicalBlock(scope: !16368, file: !2446, line: 1909, column: 6)
!16383 = !DILocation(line: 1909, column: 6, scope: !16368)
!16384 = !DILocation(line: 1910, column: 11, scope: !16385)
!16385 = distinct !DILexicalBlock(scope: !16382, file: !2446, line: 1909, column: 20)
!16386 = !DILocation(line: 1910, column: 26, scope: !16385)
!16387 = !DILocation(line: 1910, column: 9, scope: !16385)
!16388 = !DILocation(line: 1911, column: 2, scope: !16385)
!16389 = !DILocation(line: 1912, column: 2, scope: !16368)
!16390 = distinct !DISubprogram(name: "z_impl_k_condvar_init", scope: !2472, file: !2472, line: 16, type: !16391, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16402)
!16391 = !DISubroutineType(types: !16392)
!16392 = !{!109, !16393}
!16393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16394, size: 32)
!16394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_condvar", file: !118, line: 2828, size: 64, elements: !16395)
!16395 = !{!16396}
!16396 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !16394, file: !118, line: 2829, baseType: !16397, size: 64)
!16397 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !16398)
!16398 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !16399)
!16399 = !{!16400}
!16400 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !16398, file: !122, line: 232, baseType: !16401, size: 64)
!16401 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2458)
!16402 = !{!16403}
!16403 = !DILocalVariable(name: "condvar", arg: 1, scope: !16390, file: !2472, line: 16, type: !16393)
!16404 = !DILocation(line: 0, scope: !16390)
!16405 = !DILocation(line: 18, column: 25, scope: !16390)
!16406 = !DILocation(line: 18, column: 2, scope: !16390)
!16407 = !DILocation(line: 23, column: 2, scope: !16390)
!16408 = distinct !DISubprogram(name: "z_waitq_init", scope: !13190, file: !13190, line: 47, type: !16409, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16412)
!16409 = !DISubroutineType(types: !16410)
!16410 = !{null, !16411}
!16411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16397, size: 32)
!16412 = !{!16413}
!16413 = !DILocalVariable(name: "w", arg: 1, scope: !16408, file: !13190, line: 47, type: !16411)
!16414 = !DILocation(line: 0, scope: !16408)
!16415 = !DILocation(line: 49, column: 21, scope: !16408)
!16416 = !DILocation(line: 49, column: 2, scope: !16408)
!16417 = !DILocation(line: 50, column: 1, scope: !16408)
!16418 = distinct !DISubprogram(name: "sys_dlist_init", scope: !127, file: !127, line: 197, type: !16419, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16422)
!16419 = !DISubroutineType(types: !16420)
!16420 = !{null, !16421}
!16421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16401, size: 32)
!16422 = !{!16423}
!16423 = !DILocalVariable(name: "list", arg: 1, scope: !16418, file: !127, line: 197, type: !16421)
!16424 = !DILocation(line: 0, scope: !16418)
!16425 = !DILocation(line: 199, column: 8, scope: !16418)
!16426 = !DILocation(line: 199, column: 13, scope: !16418)
!16427 = !DILocation(line: 200, column: 8, scope: !16418)
!16428 = !DILocation(line: 200, column: 13, scope: !16418)
!16429 = !DILocation(line: 201, column: 1, scope: !16418)
!16430 = distinct !DISubprogram(name: "z_impl_k_condvar_signal", scope: !2472, file: !2472, line: 35, type: !16391, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16431)
!16431 = !{!16432, !16433, !16438}
!16432 = !DILocalVariable(name: "condvar", arg: 1, scope: !16430, file: !2472, line: 35, type: !16393)
!16433 = !DILocalVariable(name: "key", scope: !16430, file: !2472, line: 37, type: !16434)
!16434 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !251, line: 106, baseType: !16435)
!16435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !251, line: 32, size: 32, elements: !16436)
!16436 = !{!16437}
!16437 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16435, file: !251, line: 33, baseType: !109, size: 32)
!16438 = !DILocalVariable(name: "thread", scope: !16430, file: !2472, line: 41, type: !16439)
!16439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16440, size: 32)
!16440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1280, elements: !16441)
!16441 = !{!16442, !16480, !16492, !16493, !16494, !16495, !16496, !16502, !16514}
!16442 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !16440, file: !156, line: 247, baseType: !16443, size: 384)
!16443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 384, elements: !16444)
!16444 = !{!16445, !16455, !16456, !16457, !16458, !16467, !16468, !16469}
!16445 = !DIDerivedType(tag: DW_TAG_member, scope: !16443, file: !156, line: 60, baseType: !16446, size: 64)
!16446 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !16443, file: !156, line: 60, size: 64, elements: !16447)
!16447 = !{!16448, !16449}
!16448 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !16446, file: !156, line: 61, baseType: !2457, size: 64)
!16449 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !16446, file: !156, line: 62, baseType: !16450, size: 64)
!16450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !16451)
!16451 = !{!16452}
!16452 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !16450, file: !168, line: 50, baseType: !16453, size: 64)
!16453 = !DICompositeType(tag: DW_TAG_array_type, baseType: !16454, size: 64, elements: !173)
!16454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16450, size: 32)
!16455 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !16443, file: !156, line: 68, baseType: !16411, size: 32, offset: 64)
!16456 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !16443, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!16457 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !16443, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!16458 = !DIDerivedType(tag: DW_TAG_member, scope: !16443, file: !156, line: 90, baseType: !16459, size: 16, offset: 112)
!16459 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !16443, file: !156, line: 90, size: 16, elements: !16460)
!16460 = !{!16461, !16466}
!16461 = !DIDerivedType(tag: DW_TAG_member, scope: !16459, file: !156, line: 91, baseType: !16462, size: 16)
!16462 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !16459, file: !156, line: 91, size: 16, elements: !16463)
!16463 = !{!16464, !16465}
!16464 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !16462, file: !156, line: 96, baseType: !188, size: 8)
!16465 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !16462, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!16466 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !16459, file: !156, line: 100, baseType: !192, size: 16)
!16467 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !16443, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!16468 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !16443, file: !156, line: 127, baseType: !107, size: 32, offset: 160)
!16469 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !16443, file: !156, line: 131, baseType: !16470, size: 192, offset: 192)
!16470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !16471)
!16471 = !{!16472, !16473, !16479}
!16472 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !16470, file: !122, line: 245, baseType: !2457, size: 64)
!16473 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !16470, file: !122, line: 246, baseType: !16474, size: 32, offset: 64)
!16474 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !16475)
!16475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16476, size: 32)
!16476 = !DISubroutineType(types: !16477)
!16477 = !{null, !16478}
!16478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16470, size: 32)
!16479 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !16470, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!16480 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !16440, file: !156, line: 250, baseType: !16481, size: 288, offset: 384)
!16481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !16482)
!16482 = !{!16483, !16484, !16485, !16486, !16487, !16488, !16489, !16490, !16491}
!16483 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !16481, file: !209, line: 26, baseType: !110, size: 32)
!16484 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !16481, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!16485 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !16481, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!16486 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !16481, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!16487 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !16481, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!16488 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !16481, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!16489 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !16481, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!16490 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !16481, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!16491 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !16481, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!16492 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !16440, file: !156, line: 253, baseType: !107, size: 32, offset: 672)
!16493 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !16440, file: !156, line: 256, baseType: !16397, size: 64, offset: 704)
!16494 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !16440, file: !156, line: 279, baseType: !223, size: 256, offset: 768)
!16495 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !16440, file: !156, line: 294, baseType: !109, size: 32, offset: 1024)
!16496 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !16440, file: !156, line: 300, baseType: !16497, size: 96, offset: 1056)
!16497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !16498)
!16498 = !{!16499, !16500, !16501}
!16499 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !16497, file: !156, line: 153, baseType: !22, size: 32)
!16500 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !16497, file: !156, line: 162, baseType: !232, size: 32, offset: 32)
!16501 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !16497, file: !156, line: 168, baseType: !232, size: 32, offset: 64)
!16502 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !16440, file: !156, line: 325, baseType: !16503, size: 32, offset: 1152)
!16503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16504, size: 32)
!16504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !16505)
!16505 = !{!16506, !16512, !16513}
!16506 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !16504, file: !118, line: 5074, baseType: !16507, size: 96)
!16507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !241, line: 56, size: 96, elements: !16508)
!16508 = !{!16509, !16510, !16511}
!16509 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !16507, file: !241, line: 57, baseType: !244, size: 32)
!16510 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !16507, file: !241, line: 58, baseType: !107, size: 32, offset: 32)
!16511 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !16507, file: !241, line: 59, baseType: !232, size: 32, offset: 64)
!16512 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !16504, file: !118, line: 5075, baseType: !16397, size: 64, offset: 96)
!16513 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !16504, file: !118, line: 5076, baseType: !2473, size: 32, offset: 160)
!16514 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !16440, file: !156, line: 343, baseType: !16515, size: 64, offset: 1184)
!16515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !209, line: 60, size: 64, elements: !16516)
!16516 = !{!16517, !16518}
!16517 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !16515, file: !209, line: 63, baseType: !110, size: 32)
!16518 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !16515, file: !209, line: 66, baseType: !110, size: 32, offset: 32)
!16519 = !DILocation(line: 0, scope: !16430)
!16520 = !DILocalVariable(name: "l", arg: 1, scope: !16521, file: !251, line: 136, type: !16524)
!16521 = distinct !DISubprogram(name: "k_spin_lock", scope: !251, file: !251, line: 136, type: !16522, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16525)
!16522 = !DISubroutineType(types: !16523)
!16523 = !{!16434, !16524}
!16524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2473, size: 32)
!16525 = !{!16520, !16526}
!16526 = !DILocalVariable(name: "k", scope: !16521, file: !251, line: 139, type: !16434)
!16527 = !DILocation(line: 0, scope: !16521, inlinedAt: !16528)
!16528 = distinct !DILocation(line: 37, column: 25, scope: !16430)
!16529 = !DILocation(line: 55, column: 2, scope: !16530, inlinedAt: !16534)
!16530 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6100, file: !6100, line: 42, type: !6101, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16531)
!16531 = !{!16532, !16533}
!16532 = !DILocalVariable(name: "key", scope: !16530, file: !6100, line: 44, type: !32)
!16533 = !DILocalVariable(name: "tmp", scope: !16530, file: !6100, line: 53, type: !32)
!16534 = distinct !DILocation(line: 145, column: 10, scope: !16521, inlinedAt: !16528)
!16535 = !{i64 2226075}
!16536 = !DILocation(line: 0, scope: !16530, inlinedAt: !16534)
!16537 = !DILocation(line: 148, column: 2, scope: !16538, inlinedAt: !16528)
!16538 = distinct !DILexicalBlock(scope: !16539, file: !251, line: 148, column: 2)
!16539 = distinct !DILexicalBlock(scope: !16521, file: !251, line: 148, column: 2)
!16540 = !DILocation(line: 148, column: 2, scope: !16539, inlinedAt: !16528)
!16541 = !DILocation(line: 148, column: 2, scope: !16542, inlinedAt: !16528)
!16542 = distinct !DILexicalBlock(scope: !16538, file: !251, line: 148, column: 2)
!16543 = !DILocation(line: 160, column: 2, scope: !16521, inlinedAt: !16528)
!16544 = !DILocation(line: 41, column: 60, scope: !16430)
!16545 = !DILocation(line: 41, column: 28, scope: !16430)
!16546 = !DILocation(line: 43, column: 13, scope: !16547)
!16547 = distinct !DILexicalBlock(scope: !16430, file: !2472, line: 43, column: 6)
!16548 = !DILocation(line: 43, column: 6, scope: !16430)
!16549 = !DILocalVariable(name: "thread", arg: 1, scope: !16550, file: !12849, line: 65, type: !16439)
!16550 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12849, file: !12849, line: 65, type: !16551, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16553)
!16551 = !DISubroutineType(types: !16552)
!16552 = !{null, !16439, !32}
!16553 = !{!16549, !16554}
!16554 = !DILocalVariable(name: "value", arg: 2, scope: !16550, file: !12849, line: 65, type: !32)
!16555 = !DILocation(line: 0, scope: !16550, inlinedAt: !16556)
!16556 = distinct !DILocation(line: 46, column: 3, scope: !16557)
!16557 = distinct !DILexicalBlock(scope: !16547, file: !2472, line: 43, column: 22)
!16558 = !DILocation(line: 67, column: 15, scope: !16550, inlinedAt: !16556)
!16559 = !DILocation(line: 67, column: 33, scope: !16550, inlinedAt: !16556)
!16560 = !DILocation(line: 47, column: 3, scope: !16557)
!16561 = !DILocation(line: 48, column: 3, scope: !16557)
!16562 = !DILocation(line: 49, column: 2, scope: !16557)
!16563 = !DILocalVariable(name: "key", arg: 2, scope: !16564, file: !251, line: 190, type: !16434)
!16564 = distinct !DISubprogram(name: "k_spin_unlock", scope: !251, file: !251, line: 189, type: !16565, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16567)
!16565 = !DISubroutineType(types: !16566)
!16566 = !{null, !16524, !16434}
!16567 = !{!16568, !16563}
!16568 = !DILocalVariable(name: "l", arg: 1, scope: !16564, file: !251, line: 189, type: !16524)
!16569 = !DILocation(line: 0, scope: !16564, inlinedAt: !16570)
!16570 = distinct !DILocation(line: 50, column: 3, scope: !16571)
!16571 = distinct !DILexicalBlock(scope: !16547, file: !2472, line: 49, column: 9)
!16572 = !DILocation(line: 194, column: 2, scope: !16573, inlinedAt: !16570)
!16573 = distinct !DILexicalBlock(scope: !16574, file: !251, line: 194, column: 2)
!16574 = distinct !DILexicalBlock(scope: !16564, file: !251, line: 194, column: 2)
!16575 = !DILocation(line: 194, column: 2, scope: !16574, inlinedAt: !16570)
!16576 = !DILocation(line: 194, column: 2, scope: !16577, inlinedAt: !16570)
!16577 = distinct !DILexicalBlock(scope: !16573, file: !251, line: 194, column: 2)
!16578 = !DILocalVariable(name: "key", arg: 1, scope: !16579, file: !6100, line: 84, type: !32)
!16579 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6100, file: !6100, line: 84, type: !6111, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16580)
!16580 = !{!16578}
!16581 = !DILocation(line: 0, scope: !16579, inlinedAt: !16582)
!16582 = distinct !DILocation(line: 215, column: 2, scope: !16564, inlinedAt: !16570)
!16583 = !DILocation(line: 95, column: 2, scope: !16579, inlinedAt: !16582)
!16584 = !{i64 2226892}
!16585 = !DILocation(line: 55, column: 2, scope: !16430)
!16586 = distinct !DISubprogram(name: "z_impl_k_condvar_broadcast", scope: !2472, file: !2472, line: 67, type: !16391, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16587)
!16587 = !{!16588, !16589, !16590, !16591}
!16588 = !DILocalVariable(name: "condvar", arg: 1, scope: !16586, file: !2472, line: 67, type: !16393)
!16589 = !DILocalVariable(name: "pending_thread", scope: !16586, file: !2472, line: 69, type: !16439)
!16590 = !DILocalVariable(name: "key", scope: !16586, file: !2472, line: 70, type: !16434)
!16591 = !DILocalVariable(name: "woken", scope: !16586, file: !2472, line: 71, type: !109)
!16592 = !DILocation(line: 0, scope: !16586)
!16593 = !DILocation(line: 0, scope: !16521, inlinedAt: !16594)
!16594 = distinct !DILocation(line: 73, column: 8, scope: !16586)
!16595 = !DILocation(line: 55, column: 2, scope: !16530, inlinedAt: !16596)
!16596 = distinct !DILocation(line: 145, column: 10, scope: !16521, inlinedAt: !16594)
!16597 = !DILocation(line: 0, scope: !16530, inlinedAt: !16596)
!16598 = !DILocation(line: 148, column: 2, scope: !16538, inlinedAt: !16594)
!16599 = !DILocation(line: 148, column: 2, scope: !16539, inlinedAt: !16594)
!16600 = !DILocation(line: 148, column: 2, scope: !16542, inlinedAt: !16594)
!16601 = !DILocation(line: 160, column: 2, scope: !16521, inlinedAt: !16594)
!16602 = !DILocation(line: 78, column: 27, scope: !16586)
!16603 = !DILocation(line: 78, column: 68, scope: !16586)
!16604 = !DILocation(line: 78, column: 2, scope: !16586)
!16605 = !DILocation(line: 80, column: 8, scope: !16606)
!16606 = distinct !DILexicalBlock(scope: !16586, file: !2472, line: 79, column: 15)
!16607 = !DILocation(line: 0, scope: !16550, inlinedAt: !16608)
!16608 = distinct !DILocation(line: 81, column: 3, scope: !16606)
!16609 = !DILocation(line: 67, column: 15, scope: !16550, inlinedAt: !16608)
!16610 = !DILocation(line: 67, column: 33, scope: !16550, inlinedAt: !16608)
!16611 = !DILocation(line: 82, column: 3, scope: !16606)
!16612 = distinct !{!16612, !16604, !16613}
!16613 = !DILocation(line: 83, column: 2, scope: !16586)
!16614 = !DILocation(line: 87, column: 2, scope: !16586)
!16615 = !DILocation(line: 89, column: 2, scope: !16586)
!16616 = distinct !DISubprogram(name: "z_impl_k_condvar_wait", scope: !2472, file: !2472, line: 100, type: !16617, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16630)
!16617 = !DISubroutineType(types: !16618)
!16618 = !{!109, !16393, !16619, !16626}
!16619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16620, size: 32)
!16620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !118, line: 2720, size: 160, elements: !16621)
!16621 = !{!16622, !16623, !16624, !16625}
!16622 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !16620, file: !118, line: 2722, baseType: !16397, size: 64)
!16623 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !16620, file: !118, line: 2724, baseType: !16439, size: 32, offset: 64)
!16624 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !16620, file: !118, line: 2727, baseType: !110, size: 32, offset: 96)
!16625 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !16620, file: !118, line: 2730, baseType: !109, size: 32, offset: 128)
!16626 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !16627)
!16627 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !16628)
!16628 = !{!16629}
!16629 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16627, file: !104, line: 66, baseType: !103, size: 64)
!16630 = !{!16631, !16632, !16633, !16634, !16635}
!16631 = !DILocalVariable(name: "condvar", arg: 1, scope: !16616, file: !2472, line: 100, type: !16393)
!16632 = !DILocalVariable(name: "mutex", arg: 2, scope: !16616, file: !2472, line: 100, type: !16619)
!16633 = !DILocalVariable(name: "timeout", arg: 3, scope: !16616, file: !2472, line: 101, type: !16626)
!16634 = !DILocalVariable(name: "key", scope: !16616, file: !2472, line: 103, type: !16434)
!16635 = !DILocalVariable(name: "ret", scope: !16616, file: !2472, line: 104, type: !109)
!16636 = !DILocation(line: 0, scope: !16616)
!16637 = !DILocation(line: 0, scope: !16521, inlinedAt: !16638)
!16638 = distinct !DILocation(line: 108, column: 8, scope: !16616)
!16639 = !DILocation(line: 55, column: 2, scope: !16530, inlinedAt: !16640)
!16640 = distinct !DILocation(line: 145, column: 10, scope: !16521, inlinedAt: !16638)
!16641 = !DILocation(line: 0, scope: !16530, inlinedAt: !16640)
!16642 = !DILocation(line: 148, column: 2, scope: !16538, inlinedAt: !16638)
!16643 = !DILocation(line: 148, column: 2, scope: !16539, inlinedAt: !16638)
!16644 = !DILocation(line: 148, column: 2, scope: !16542, inlinedAt: !16638)
!16645 = !DILocation(line: 160, column: 2, scope: !16521, inlinedAt: !16638)
!16646 = !DILocation(line: 109, column: 2, scope: !16616)
!16647 = !DILocation(line: 111, column: 42, scope: !16616)
!16648 = !DILocation(line: 111, column: 8, scope: !16616)
!16649 = !DILocation(line: 112, column: 2, scope: !16616)
!16650 = !DILocation(line: 116, column: 2, scope: !16616)
!16651 = distinct !DISubprogram(name: "k_mutex_unlock", scope: !3238, file: !3238, line: 944, type: !16652, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16654)
!16652 = !DISubroutineType(types: !16653)
!16653 = !{!109, !16619}
!16654 = !{!16655}
!16655 = !DILocalVariable(name: "mutex", arg: 1, scope: !16651, file: !3238, line: 944, type: !16619)
!16656 = !DILocation(line: 0, scope: !16651)
!16657 = !DILocation(line: 952, column: 2, scope: !16658)
!16658 = distinct !DILexicalBlock(scope: !16651, file: !3238, line: 952, column: 2)
!16659 = !{i64 2154851458}
!16660 = !DILocation(line: 953, column: 9, scope: !16651)
!16661 = !DILocation(line: 953, column: 2, scope: !16651)
!16662 = distinct !DISubprogram(name: "k_mutex_lock", scope: !3238, file: !3238, line: 927, type: !16663, scopeLine: 928, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2453, retainedNodes: !16665)
!16663 = !DISubroutineType(types: !16664)
!16664 = !{!109, !16619, !16626}
!16665 = !{!16666, !16667}
!16666 = !DILocalVariable(name: "mutex", arg: 1, scope: !16662, file: !3238, line: 927, type: !16619)
!16667 = !DILocalVariable(name: "timeout", arg: 2, scope: !16662, file: !3238, line: 927, type: !16626)
!16668 = !DILocation(line: 0, scope: !16662)
!16669 = !DILocation(line: 936, column: 2, scope: !16670)
!16670 = distinct !DILexicalBlock(scope: !16662, file: !3238, line: 936, column: 2)
!16671 = !{i64 2154851390}
!16672 = !DILocation(line: 937, column: 9, scope: !16662)
!16673 = !DILocation(line: 937, column: 2, scope: !16662)
!16674 = distinct !DISubprogram(name: "z_data_copy", scope: !16675, file: !16675, line: 22, type: !3096, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3079, retainedNodes: !2036)
!16675 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16676 = !DILocation(line: 24, column: 2, scope: !16674)
!16677 = !DILocation(line: 27, column: 2, scope: !16674)
!16678 = !DILocation(line: 31, column: 2, scope: !16674)
!16679 = !DILocation(line: 71, column: 1, scope: !16674)
!16680 = distinct !DISubprogram(name: "z_add_timeout", scope: !2508, file: !2508, line: 88, type: !16681, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2478, retainedNodes: !16687)
!16681 = !DISubroutineType(types: !16682)
!16682 = !{null, !2481, !2500, !16683}
!16683 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !16684)
!16684 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !16685)
!16685 = !{!16686}
!16686 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16684, file: !104, line: 66, baseType: !103, size: 64)
!16687 = !{!16688, !16689, !16690, !16691, !16697, !16698, !16701, !16704}
!16688 = !DILocalVariable(name: "to", arg: 1, scope: !16680, file: !2508, line: 88, type: !2481)
!16689 = !DILocalVariable(name: "fn", arg: 2, scope: !16680, file: !2508, line: 88, type: !2500)
!16690 = !DILocalVariable(name: "timeout", arg: 3, scope: !16680, file: !2508, line: 89, type: !16683)
!16691 = !DILocalVariable(name: "__i", scope: !16692, file: !2508, line: 102, type: !16693)
!16692 = distinct !DILexicalBlock(scope: !16680, file: !2508, line: 102, column: 2)
!16693 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !251, line: 106, baseType: !16694)
!16694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !251, line: 32, size: 32, elements: !16695)
!16695 = !{!16696}
!16696 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16694, file: !251, line: 33, baseType: !109, size: 32)
!16697 = !DILocalVariable(name: "__key", scope: !16692, file: !2508, line: 102, type: !16693)
!16698 = !DILocalVariable(name: "t", scope: !16699, file: !2508, line: 103, type: !2481)
!16699 = distinct !DILexicalBlock(scope: !16700, file: !2508, line: 102, column: 24)
!16700 = distinct !DILexicalBlock(scope: !16692, file: !2508, line: 102, column: 2)
!16701 = !DILocalVariable(name: "ticks", scope: !16702, file: !2508, line: 107, type: !103)
!16702 = distinct !DILexicalBlock(scope: !16703, file: !2508, line: 106, column: 39)
!16703 = distinct !DILexicalBlock(scope: !16699, file: !2508, line: 105, column: 7)
!16704 = !DILocalVariable(name: "next_time", scope: !16705, file: !2508, line: 137, type: !766)
!16705 = distinct !DILexicalBlock(scope: !16706, file: !2508, line: 127, column: 22)
!16706 = distinct !DILexicalBlock(scope: !16699, file: !2508, line: 127, column: 7)
!16707 = !DILocation(line: 0, scope: !16680)
!16708 = !DILocation(line: 91, column: 6, scope: !16709)
!16709 = distinct !DILexicalBlock(scope: !16680, file: !2508, line: 91, column: 6)
!16710 = !DILocation(line: 91, column: 6, scope: !16680)
!16711 = !DILocation(line: 99, column: 2, scope: !16712)
!16712 = distinct !DILexicalBlock(scope: !16713, file: !2508, line: 99, column: 2)
!16713 = distinct !DILexicalBlock(scope: !16680, file: !2508, line: 99, column: 2)
!16714 = !DILocation(line: 99, column: 2, scope: !16713)
!16715 = !DILocation(line: 99, column: 2, scope: !16716)
!16716 = distinct !DILexicalBlock(scope: !16712, file: !2508, line: 99, column: 2)
!16717 = !DILocation(line: 100, column: 6, scope: !16680)
!16718 = !DILocation(line: 100, column: 9, scope: !16680)
!16719 = !DILocation(line: 0, scope: !16692)
!16720 = !DILocalVariable(name: "l", arg: 1, scope: !16721, file: !251, line: 136, type: !16724)
!16721 = distinct !DISubprogram(name: "k_spin_lock", scope: !251, file: !251, line: 136, type: !16722, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2478, retainedNodes: !16725)
!16722 = !DISubroutineType(types: !16723)
!16723 = !{!16693, !16724}
!16724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2514, size: 32)
!16725 = !{!16720, !16726}
!16726 = !DILocalVariable(name: "k", scope: !16721, file: !251, line: 139, type: !16693)
!16727 = !DILocation(line: 0, scope: !16721, inlinedAt: !16728)
!16728 = distinct !DILocation(line: 102, column: 2, scope: !16692)
!16729 = !DILocation(line: 55, column: 2, scope: !16730, inlinedAt: !16734)
!16730 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6100, file: !6100, line: 42, type: !6101, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2478, retainedNodes: !16731)
!16731 = !{!16732, !16733}
!16732 = !DILocalVariable(name: "key", scope: !16730, file: !6100, line: 44, type: !32)
!16733 = !DILocalVariable(name: "tmp", scope: !16730, file: !6100, line: 53, type: !32)
!16734 = distinct !DILocation(line: 145, column: 10, scope: !16721, inlinedAt: !16728)
!16735 = !{i64 2231681}
!16736 = !DILocation(line: 0, scope: !16730, inlinedAt: !16734)
!16737 = !DILocation(line: 148, column: 2, scope: !16738, inlinedAt: !16728)
!16738 = distinct !DILexicalBlock(scope: !16739, file: !251, line: 148, column: 2)
!16739 = distinct !DILexicalBlock(scope: !16721, file: !251, line: 148, column: 2)
!16740 = !DILocation(line: 148, column: 2, scope: !16739, inlinedAt: !16728)
!16741 = !DILocation(line: 148, column: 2, scope: !16742, inlinedAt: !16728)
!16742 = distinct !DILexicalBlock(scope: !16738, file: !251, line: 148, column: 2)
!16743 = !DILocation(line: 160, column: 2, scope: !16721, inlinedAt: !16728)
!16744 = !DILocation(line: 106, column: 33, scope: !16703)
!16745 = !DILocation(line: 105, column: 7, scope: !16699)
!16746 = !DILocation(line: 107, column: 50, scope: !16702)
!16747 = !DILocation(line: 107, column: 48, scope: !16702)
!16748 = !DILocation(line: 0, scope: !16702)
!16749 = !DILocation(line: 109, column: 17, scope: !16702)
!16750 = !DILocation(line: 110, column: 3, scope: !16702)
!16751 = !DILocation(line: 111, column: 31, scope: !16752)
!16752 = distinct !DILexicalBlock(scope: !16703, file: !2508, line: 110, column: 10)
!16753 = !DILocation(line: 111, column: 37, scope: !16752)
!16754 = !DILocation(line: 111, column: 35, scope: !16752)
!16755 = !DILocation(line: 0, scope: !16703)
!16756 = !DILocation(line: 109, column: 8, scope: !16702)
!16757 = !DILocation(line: 109, column: 15, scope: !16702)
!16758 = !DILocation(line: 114, column: 12, scope: !16759)
!16759 = distinct !DILexicalBlock(scope: !16699, file: !2508, line: 114, column: 3)
!16760 = !DILocation(line: 0, scope: !16699)
!16761 = !DILocation(line: 114, column: 3, scope: !16759)
!16762 = !DILocation(line: 115, column: 24, scope: !16763)
!16763 = distinct !DILexicalBlock(scope: !16764, file: !2508, line: 115, column: 8)
!16764 = distinct !DILexicalBlock(scope: !16765, file: !2508, line: 114, column: 45)
!16765 = distinct !DILexicalBlock(scope: !16759, file: !2508, line: 114, column: 3)
!16766 = !DILocation(line: 115, column: 11, scope: !16763)
!16767 = !DILocation(line: 115, column: 18, scope: !16763)
!16768 = !DILocation(line: 115, column: 8, scope: !16764)
!16769 = !DILocation(line: 116, column: 15, scope: !16770)
!16770 = distinct !DILexicalBlock(scope: !16763, file: !2508, line: 115, column: 32)
!16771 = !DILocation(line: 117, column: 26, scope: !16770)
!16772 = !DILocation(line: 117, column: 5, scope: !16770)
!16773 = !DILocation(line: 123, column: 7, scope: !16699)
!16774 = !DILocation(line: 120, column: 15, scope: !16764)
!16775 = !DILocation(line: 114, column: 36, scope: !16765)
!16776 = distinct !{!16776, !16761, !16777}
!16777 = !DILocation(line: 121, column: 3, scope: !16759)
!16778 = !DILocation(line: 124, column: 4, scope: !16779)
!16779 = distinct !DILexicalBlock(scope: !16780, file: !2508, line: 123, column: 18)
!16780 = distinct !DILexicalBlock(scope: !16699, file: !2508, line: 123, column: 7)
!16781 = !DILocation(line: 125, column: 3, scope: !16779)
!16782 = !DILocation(line: 127, column: 13, scope: !16706)
!16783 = !DILocation(line: 127, column: 10, scope: !16706)
!16784 = !DILocation(line: 127, column: 7, scope: !16699)
!16785 = !DILocation(line: 137, column: 24, scope: !16705)
!16786 = !DILocation(line: 0, scope: !16705)
!16787 = !DILocation(line: 139, column: 18, scope: !16788)
!16788 = distinct !DILexicalBlock(scope: !16705, file: !2508, line: 139, column: 8)
!16789 = !DILocation(line: 139, column: 23, scope: !16788)
!16790 = !DILocation(line: 141, column: 5, scope: !16791)
!16791 = distinct !DILexicalBlock(scope: !16788, file: !2508, line: 140, column: 48)
!16792 = !DILocation(line: 142, column: 4, scope: !16791)
!16793 = !DILocalVariable(name: "key", arg: 2, scope: !16794, file: !251, line: 190, type: !16693)
!16794 = distinct !DISubprogram(name: "k_spin_unlock", scope: !251, file: !251, line: 189, type: !16795, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2478, retainedNodes: !16797)
!16795 = !DISubroutineType(types: !16796)
!16796 = !{null, !16724, !16693}
!16797 = !{!16798, !16793}
!16798 = !DILocalVariable(name: "l", arg: 1, scope: !16794, file: !251, line: 189, type: !16724)
!16799 = !DILocation(line: 0, scope: !16794, inlinedAt: !16800)
!16800 = distinct !DILocation(line: 102, column: 2, scope: !16700)
!16801 = !DILocation(line: 194, column: 2, scope: !16802, inlinedAt: !16800)
!16802 = distinct !DILexicalBlock(scope: !16803, file: !251, line: 194, column: 2)
!16803 = distinct !DILexicalBlock(scope: !16794, file: !251, line: 194, column: 2)
!16804 = !DILocation(line: 194, column: 2, scope: !16803, inlinedAt: !16800)
!16805 = !DILocation(line: 194, column: 2, scope: !16806, inlinedAt: !16800)
!16806 = distinct !DILexicalBlock(scope: !16802, file: !251, line: 194, column: 2)
!16807 = !DILocalVariable(name: "key", arg: 1, scope: !16808, file: !6100, line: 84, type: !32)
!16808 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6100, file: !6100, line: 84, type: !6111, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2478, retainedNodes: !16809)
!16809 = !{!16807}
!16810 = !DILocation(line: 0, scope: !16808, inlinedAt: !16811)
!16811 = distinct !DILocation(line: 215, column: 2, scope: !16794, inlinedAt: !16800)
!16812 = !DILocation(line: 95, column: 2, scope: !16808, inlinedAt: !16811)
!16813 = !{i64 2232498}
!16814 = !DILocation(line: 148, column: 1, scope: !16680)
!16815 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !127, file: !127, line: 225, type: !16816, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2478, retainedNodes: !16820)
!16816 = !DISubroutineType(types: !16817)
!16817 = !{!347, !16818}
!16818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16819, size: 32)
!16819 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2485)
!16820 = !{!16821}
!16821 = !DILocalVariable(name: "node", arg: 1, scope: !16815, file: !127, line: 225, type: !16818)
!16822 = !DILocation(line: 0, scope: !16815)
!16823 = !DILocation(line: 227, column: 15, scope: !16815)
!16824 = !DILocation(line: 227, column: 20, scope: !16815)
!16825 = !DILocation(line: 227, column: 2, scope: !16815)
!16826 = distinct !DISubprogram(name: "elapsed", scope: !2508, file: !2508, line: 62, type: !16827, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2478, retainedNodes: !2036)
!16827 = !DISubroutineType(types: !16828)
!16828 = !{!766}
!16829 = !DILocation(line: 64, column: 9, scope: !16826)
!16830 = !DILocation(line: 64, column: 28, scope: !16826)
!16831 = !DILocation(line: 64, column: 35, scope: !16826)
!16832 = !DILocation(line: 64, column: 2, scope: !16826)
!16833 = distinct !DISubprogram(name: "first", scope: !2508, file: !2508, line: 39, type: !16834, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2478, retainedNodes: !16836)
!16834 = !DISubroutineType(types: !16835)
!16835 = !{!2481}
!16836 = !{!16837}
!16837 = !DILocalVariable(name: "t", scope: !16833, file: !2508, line: 41, type: !16838)
!16838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2485, size: 32)
!16839 = !DILocation(line: 41, column: 19, scope: !16833)
!16840 = !DILocation(line: 0, scope: !16833)
!16841 = !DILocation(line: 43, column: 9, scope: !16833)
!16842 = !DILocation(line: 43, column: 2, scope: !16833)
!16843 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !127, file: !127, line: 443, type: !16844, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2478, retainedNodes: !16846)
!16844 = !DISubroutineType(types: !16845)
!16845 = !{null, !16838, !16838}
!16846 = !{!16847, !16848, !16849}
!16847 = !DILocalVariable(name: "successor", arg: 1, scope: !16843, file: !127, line: 443, type: !16838)
!16848 = !DILocalVariable(name: "node", arg: 2, scope: !16843, file: !127, line: 443, type: !16838)
!16849 = !DILocalVariable(name: "prev", scope: !16843, file: !127, line: 445, type: !16850)
!16850 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16838)
!16851 = !DILocation(line: 0, scope: !16843)
!16852 = !DILocation(line: 445, column: 39, scope: !16843)
!16853 = !DILocation(line: 447, column: 8, scope: !16843)
!16854 = !DILocation(line: 447, column: 13, scope: !16843)
!16855 = !DILocation(line: 448, column: 8, scope: !16843)
!16856 = !DILocation(line: 448, column: 13, scope: !16843)
!16857 = !DILocation(line: 449, column: 8, scope: !16843)
!16858 = !DILocation(line: 449, column: 13, scope: !16843)
!16859 = !DILocation(line: 450, column: 18, scope: !16843)
!16860 = !DILocation(line: 451, column: 1, scope: !16843)
!16861 = distinct !DISubprogram(name: "next", scope: !2508, file: !2508, line: 46, type: !16862, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2478, retainedNodes: !16864)
!16862 = !DISubroutineType(types: !16863)
!16863 = !{!2481, !2481}
!16864 = !{!16865, !16866}
!16865 = !DILocalVariable(name: "t", arg: 1, scope: !16861, file: !2508, line: 46, type: !2481)
!16866 = !DILocalVariable(name: "n", scope: !16861, file: !2508, line: 48, type: !16838)
!16867 = !DILocation(line: 0, scope: !16861)
!16868 = !DILocation(line: 48, column: 58, scope: !16861)
!16869 = !DILocation(line: 48, column: 19, scope: !16861)
!16870 = !DILocation(line: 50, column: 9, scope: !16861)
!16871 = !DILocation(line: 50, column: 2, scope: !16861)
!16872 = distinct !DISubprogram(name: "sys_dlist_append", scope: !127, file: !127, line: 404, type: !16873, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2478, retainedNodes: !16876)
!16873 = !DISubroutineType(types: !16874)
!16874 = !{null, !16875, !16838}
!16875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2513, size: 32)
!16876 = !{!16877, !16878, !16879}
!16877 = !DILocalVariable(name: "list", arg: 1, scope: !16872, file: !127, line: 404, type: !16875)
!16878 = !DILocalVariable(name: "node", arg: 2, scope: !16872, file: !127, line: 404, type: !16838)
!16879 = !DILocalVariable(name: "tail", scope: !16872, file: !127, line: 406, type: !16850)
!16880 = !DILocation(line: 0, scope: !16872)
!16881 = !DILocation(line: 406, column: 34, scope: !16872)
!16882 = !DILocation(line: 408, column: 8, scope: !16872)
!16883 = !DILocation(line: 408, column: 13, scope: !16872)
!16884 = !DILocation(line: 409, column: 8, scope: !16872)
!16885 = !DILocation(line: 409, column: 13, scope: !16872)
!16886 = !DILocation(line: 411, column: 8, scope: !16872)
!16887 = !DILocation(line: 411, column: 13, scope: !16872)
!16888 = !DILocation(line: 412, column: 13, scope: !16872)
!16889 = !DILocation(line: 413, column: 1, scope: !16872)
!16890 = distinct !DISubprogram(name: "next_timeout", scope: !2508, file: !2508, line: 67, type: !16827, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2478, retainedNodes: !16891)
!16891 = !{!16892, !16893, !16894}
!16892 = !DILocalVariable(name: "to", scope: !16890, file: !2508, line: 69, type: !2481)
!16893 = !DILocalVariable(name: "ticks_elapsed", scope: !16890, file: !2508, line: 70, type: !766)
!16894 = !DILocalVariable(name: "ret", scope: !16890, file: !2508, line: 71, type: !766)
!16895 = !DILocation(line: 69, column: 24, scope: !16890)
!16896 = !DILocation(line: 0, scope: !16890)
!16897 = !DILocation(line: 70, column: 26, scope: !16890)
!16898 = !DILocation(line: 73, column: 10, scope: !16899)
!16899 = distinct !DILexicalBlock(scope: !16890, file: !2508, line: 73, column: 6)
!16900 = !DILocation(line: 73, column: 19, scope: !16899)
!16901 = !DILocation(line: 74, column: 21, scope: !16899)
!16902 = !DILocation(line: 74, column: 30, scope: !16899)
!16903 = !DILocation(line: 74, column: 28, scope: !16899)
!16904 = !DILocation(line: 74, column: 45, scope: !16899)
!16905 = !DILocation(line: 73, column: 6, scope: !16890)
!16906 = !DILocation(line: 77, column: 9, scope: !16907)
!16907 = distinct !DILexicalBlock(scope: !16899, file: !2508, line: 76, column: 9)
!16908 = !DILocation(line: 0, scope: !16899)
!16909 = !DILocation(line: 81, column: 20, scope: !16910)
!16910 = distinct !DILexicalBlock(scope: !16890, file: !2508, line: 81, column: 6)
!16911 = !DILocation(line: 81, column: 6, scope: !16910)
!16912 = !DILocation(line: 81, column: 32, scope: !16910)
!16913 = !DILocation(line: 85, column: 2, scope: !16890)
!16914 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !127, file: !127, line: 341, type: !16915, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2478, retainedNodes: !16917)
!16915 = !DISubroutineType(types: !16916)
!16916 = !{!16838, !16875, !16838}
!16917 = !{!16918, !16919}
!16918 = !DILocalVariable(name: "list", arg: 1, scope: !16914, file: !127, line: 341, type: !16875)
!16919 = !DILocalVariable(name: "node", arg: 2, scope: !16914, file: !127, line: 342, type: !16838)
!16920 = !DILocation(line: 0, scope: !16914)
!16921 = !DILocation(line: 344, column: 15, scope: !16914)
!16922 = !DILocation(line: 344, column: 9, scope: !16914)
!16923 = !DILocation(line: 344, column: 26, scope: !16914)
!16924 = !DILocation(line: 344, column: 2, scope: !16914)
!16925 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !127, file: !127, line: 325, type: !16915, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2478, retainedNodes: !16926)
!16926 = !{!16927, !16928}
!16927 = !DILocalVariable(name: "list", arg: 1, scope: !16925, file: !127, line: 325, type: !16875)
!16928 = !DILocalVariable(name: "node", arg: 2, scope: !16925, file: !127, line: 326, type: !16838)
!16929 = !DILocation(line: 0, scope: !16925)
!16930 = !DILocation(line: 328, column: 24, scope: !16925)
!16931 = !DILocation(line: 328, column: 15, scope: !16925)
!16932 = !DILocation(line: 328, column: 9, scope: !16925)
!16933 = !DILocation(line: 328, column: 45, scope: !16925)
!16934 = !DILocation(line: 328, column: 2, scope: !16925)
!16935 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !127, file: !127, line: 294, type: !16936, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2478, retainedNodes: !16938)
!16936 = !DISubroutineType(types: !16937)
!16937 = !{!16838, !16875}
!16938 = !{!16939}
!16939 = !DILocalVariable(name: "list", arg: 1, scope: !16935, file: !127, line: 294, type: !16875)
!16940 = !DILocation(line: 0, scope: !16935)
!16941 = !DILocation(line: 296, column: 9, scope: !16935)
!16942 = !DILocation(line: 296, column: 2, scope: !16935)
!16943 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !127, file: !127, line: 266, type: !16944, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2478, retainedNodes: !16946)
!16944 = !DISubroutineType(types: !16945)
!16945 = !{!347, !16875}
!16946 = !{!16947}
!16947 = !DILocalVariable(name: "list", arg: 1, scope: !16943, file: !127, line: 266, type: !16875)
!16948 = !DILocation(line: 0, scope: !16943)
!16949 = !DILocation(line: 268, column: 15, scope: !16943)
!16950 = !DILocation(line: 268, column: 20, scope: !16943)
!16951 = !DILocation(line: 268, column: 2, scope: !16943)
!16952 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2508, file: !2508, line: 150, type: !16953, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2478, retainedNodes: !16955)
!16953 = !DISubroutineType(types: !16954)
!16954 = !{!109, !2481}
!16955 = !{!16956, !16957, !16958, !16960}
!16956 = !DILocalVariable(name: "to", arg: 1, scope: !16952, file: !2508, line: 150, type: !2481)
!16957 = !DILocalVariable(name: "ret", scope: !16952, file: !2508, line: 152, type: !109)
!16958 = !DILocalVariable(name: "__i", scope: !16959, file: !2508, line: 154, type: !16693)
!16959 = distinct !DILexicalBlock(scope: !16952, file: !2508, line: 154, column: 2)
!16960 = !DILocalVariable(name: "__key", scope: !16959, file: !2508, line: 154, type: !16693)
!16961 = !DILocation(line: 0, scope: !16952)
!16962 = !DILocation(line: 0, scope: !16959)
!16963 = !DILocation(line: 0, scope: !16721, inlinedAt: !16964)
!16964 = distinct !DILocation(line: 154, column: 2, scope: !16959)
!16965 = !DILocation(line: 55, column: 2, scope: !16730, inlinedAt: !16966)
!16966 = distinct !DILocation(line: 145, column: 10, scope: !16721, inlinedAt: !16964)
!16967 = !DILocation(line: 0, scope: !16730, inlinedAt: !16966)
!16968 = !DILocation(line: 148, column: 2, scope: !16738, inlinedAt: !16964)
!16969 = !DILocation(line: 148, column: 2, scope: !16739, inlinedAt: !16964)
!16970 = !DILocation(line: 148, column: 2, scope: !16742, inlinedAt: !16964)
!16971 = !DILocation(line: 160, column: 2, scope: !16721, inlinedAt: !16964)
!16972 = !DILocation(line: 155, column: 7, scope: !16973)
!16973 = distinct !DILexicalBlock(scope: !16974, file: !2508, line: 155, column: 7)
!16974 = distinct !DILexicalBlock(scope: !16975, file: !2508, line: 154, column: 24)
!16975 = distinct !DILexicalBlock(scope: !16959, file: !2508, line: 154, column: 2)
!16976 = !DILocation(line: 155, column: 7, scope: !16974)
!16977 = !DILocation(line: 156, column: 4, scope: !16978)
!16978 = distinct !DILexicalBlock(scope: !16973, file: !2508, line: 155, column: 39)
!16979 = !DILocation(line: 158, column: 3, scope: !16978)
!16980 = !DILocation(line: 0, scope: !16794, inlinedAt: !16981)
!16981 = distinct !DILocation(line: 154, column: 2, scope: !16975)
!16982 = !DILocation(line: 194, column: 2, scope: !16802, inlinedAt: !16981)
!16983 = !DILocation(line: 194, column: 2, scope: !16803, inlinedAt: !16981)
!16984 = !DILocation(line: 194, column: 2, scope: !16806, inlinedAt: !16981)
!16985 = !DILocation(line: 0, scope: !16808, inlinedAt: !16986)
!16986 = distinct !DILocation(line: 215, column: 2, scope: !16794, inlinedAt: !16981)
!16987 = !DILocation(line: 95, column: 2, scope: !16808, inlinedAt: !16986)
!16988 = !DILocation(line: 161, column: 2, scope: !16952)
!16989 = distinct !DISubprogram(name: "remove_timeout", scope: !2508, file: !2508, line: 53, type: !2502, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2478, retainedNodes: !16990)
!16990 = !{!16991}
!16991 = !DILocalVariable(name: "t", arg: 1, scope: !16989, file: !2508, line: 53, type: !2481)
!16992 = !DILocation(line: 0, scope: !16989)
!16993 = !DILocation(line: 55, column: 6, scope: !16994)
!16994 = distinct !DILexicalBlock(scope: !16989, file: !2508, line: 55, column: 6)
!16995 = !DILocation(line: 55, column: 14, scope: !16994)
!16996 = !DILocation(line: 55, column: 6, scope: !16989)
!16997 = !DILocation(line: 56, column: 25, scope: !16998)
!16998 = distinct !DILexicalBlock(scope: !16994, file: !2508, line: 55, column: 23)
!16999 = !DILocation(line: 56, column: 12, scope: !16998)
!17000 = !DILocation(line: 56, column: 19, scope: !16998)
!17001 = !DILocation(line: 57, column: 2, scope: !16998)
!17002 = !DILocation(line: 59, column: 23, scope: !16989)
!17003 = !DILocation(line: 59, column: 2, scope: !16989)
!17004 = !DILocation(line: 60, column: 1, scope: !16989)
!17005 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !127, file: !127, line: 496, type: !17006, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2478, retainedNodes: !17008)
!17006 = !DISubroutineType(types: !17007)
!17007 = !{null, !16838}
!17008 = !{!17009, !17010, !17011}
!17009 = !DILocalVariable(name: "node", arg: 1, scope: !17005, file: !127, line: 496, type: !16838)
!17010 = !DILocalVariable(name: "prev", scope: !17005, file: !127, line: 498, type: !16850)
!17011 = !DILocalVariable(name: "next", scope: !17005, file: !127, line: 499, type: !16850)
!17012 = !DILocation(line: 0, scope: !17005)
!17013 = !DILocation(line: 498, column: 34, scope: !17005)
!17014 = !DILocation(line: 499, column: 34, scope: !17005)
!17015 = !DILocation(line: 501, column: 8, scope: !17005)
!17016 = !DILocation(line: 501, column: 13, scope: !17005)
!17017 = !DILocation(line: 502, column: 8, scope: !17005)
!17018 = !DILocation(line: 502, column: 13, scope: !17005)
!17019 = !DILocation(line: 503, column: 2, scope: !17005)
!17020 = !DILocation(line: 504, column: 1, scope: !17005)
!17021 = distinct !DISubprogram(name: "sys_dnode_init", scope: !127, file: !127, line: 211, type: !17006, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2478, retainedNodes: !17022)
!17022 = !{!17023}
!17023 = !DILocalVariable(name: "node", arg: 1, scope: !17021, file: !127, line: 211, type: !16838)
!17024 = !DILocation(line: 0, scope: !17021)
!17025 = !DILocation(line: 213, column: 8, scope: !17021)
!17026 = !DILocation(line: 213, column: 13, scope: !17021)
!17027 = !DILocation(line: 214, column: 8, scope: !17021)
!17028 = !DILocation(line: 214, column: 13, scope: !17021)
!17029 = !DILocation(line: 215, column: 1, scope: !17021)
!17030 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2508, file: !2508, line: 183, type: !17031, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2478, retainedNodes: !17035)
!17031 = !DISubroutineType(types: !17032)
!17032 = !{!103, !17033}
!17033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17034, size: 32)
!17034 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2482)
!17035 = !{!17036, !17037, !17038, !17040}
!17036 = !DILocalVariable(name: "timeout", arg: 1, scope: !17030, file: !2508, line: 183, type: !17033)
!17037 = !DILocalVariable(name: "ticks", scope: !17030, file: !2508, line: 185, type: !103)
!17038 = !DILocalVariable(name: "__i", scope: !17039, file: !2508, line: 187, type: !16693)
!17039 = distinct !DILexicalBlock(scope: !17030, file: !2508, line: 187, column: 2)
!17040 = !DILocalVariable(name: "__key", scope: !17039, file: !2508, line: 187, type: !16693)
!17041 = !DILocation(line: 0, scope: !17030)
!17042 = !DILocation(line: 0, scope: !17039)
!17043 = !DILocation(line: 0, scope: !16721, inlinedAt: !17044)
!17044 = distinct !DILocation(line: 187, column: 2, scope: !17039)
!17045 = !DILocation(line: 55, column: 2, scope: !16730, inlinedAt: !17046)
!17046 = distinct !DILocation(line: 145, column: 10, scope: !16721, inlinedAt: !17044)
!17047 = !DILocation(line: 0, scope: !16730, inlinedAt: !17046)
!17048 = !DILocation(line: 148, column: 2, scope: !16738, inlinedAt: !17044)
!17049 = !DILocation(line: 148, column: 2, scope: !16739, inlinedAt: !17044)
!17050 = !DILocation(line: 148, column: 2, scope: !16742, inlinedAt: !17044)
!17051 = !DILocation(line: 160, column: 2, scope: !16721, inlinedAt: !17044)
!17052 = !DILocation(line: 188, column: 11, scope: !17053)
!17053 = distinct !DILexicalBlock(scope: !17054, file: !2508, line: 187, column: 24)
!17054 = distinct !DILexicalBlock(scope: !17039, file: !2508, line: 187, column: 2)
!17055 = !DILocation(line: 0, scope: !16794, inlinedAt: !17056)
!17056 = distinct !DILocation(line: 187, column: 2, scope: !17054)
!17057 = !DILocation(line: 194, column: 2, scope: !16802, inlinedAt: !17056)
!17058 = !DILocation(line: 194, column: 2, scope: !16803, inlinedAt: !17056)
!17059 = !DILocation(line: 194, column: 2, scope: !16806, inlinedAt: !17056)
!17060 = !DILocation(line: 0, scope: !16808, inlinedAt: !17061)
!17061 = distinct !DILocation(line: 215, column: 2, scope: !16794, inlinedAt: !17056)
!17062 = !DILocation(line: 95, column: 2, scope: !16808, inlinedAt: !17061)
!17063 = !DILocation(line: 191, column: 2, scope: !17030)
!17064 = distinct !DISubprogram(name: "timeout_rem", scope: !2508, file: !2508, line: 165, type: !17031, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2478, retainedNodes: !17065)
!17065 = !{!17066, !17067, !17068}
!17066 = !DILocalVariable(name: "timeout", arg: 1, scope: !17064, file: !2508, line: 165, type: !17033)
!17067 = !DILocalVariable(name: "ticks", scope: !17064, file: !2508, line: 167, type: !103)
!17068 = !DILocalVariable(name: "t", scope: !17069, file: !2508, line: 173, type: !2481)
!17069 = distinct !DILexicalBlock(scope: !17064, file: !2508, line: 173, column: 2)
!17070 = !DILocation(line: 0, scope: !17064)
!17071 = !DILocation(line: 169, column: 6, scope: !17072)
!17072 = distinct !DILexicalBlock(scope: !17064, file: !2508, line: 169, column: 6)
!17073 = !DILocation(line: 169, column: 6, scope: !17064)
!17074 = !DILocation(line: 173, column: 28, scope: !17069)
!17075 = !DILocation(line: 0, scope: !17069)
!17076 = !DILocation(line: 173, column: 39, scope: !17077)
!17077 = distinct !DILexicalBlock(scope: !17069, file: !2508, line: 173, column: 2)
!17078 = !DILocation(line: 173, column: 2, scope: !17069)
!17079 = !DILocation(line: 174, column: 15, scope: !17080)
!17080 = distinct !DILexicalBlock(scope: !17077, file: !2508, line: 173, column: 61)
!17081 = !DILocation(line: 174, column: 9, scope: !17080)
!17082 = !DILocation(line: 175, column: 15, scope: !17083)
!17083 = distinct !DILexicalBlock(scope: !17080, file: !2508, line: 175, column: 7)
!17084 = !DILocation(line: 175, column: 7, scope: !17080)
!17085 = !DILocation(line: 173, column: 52, scope: !17077)
!17086 = distinct !{!17086, !17078, !17087}
!17087 = !DILocation(line: 178, column: 2, scope: !17069)
!17088 = !DILocation(line: 180, column: 17, scope: !17064)
!17089 = !DILocation(line: 180, column: 15, scope: !17064)
!17090 = !DILocation(line: 180, column: 2, scope: !17064)
!17091 = !DILocation(line: 181, column: 1, scope: !17064)
!17092 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13258, file: !13258, line: 35, type: !17093, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2478, retainedNodes: !17095)
!17093 = !DISubroutineType(types: !17094)
!17094 = !{!347, !17033}
!17095 = !{!17096}
!17096 = !DILocalVariable(name: "to", arg: 1, scope: !17092, file: !13258, line: 35, type: !17033)
!17097 = !DILocation(line: 0, scope: !17092)
!17098 = !DILocation(line: 37, column: 35, scope: !17092)
!17099 = !DILocation(line: 37, column: 10, scope: !17092)
!17100 = !DILocation(line: 37, column: 9, scope: !17092)
!17101 = !DILocation(line: 37, column: 2, scope: !17092)
!17102 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2508, file: !2508, line: 194, type: !17031, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2478, retainedNodes: !17103)
!17103 = !{!17104, !17105, !17106, !17108}
!17104 = !DILocalVariable(name: "timeout", arg: 1, scope: !17102, file: !2508, line: 194, type: !17033)
!17105 = !DILocalVariable(name: "ticks", scope: !17102, file: !2508, line: 196, type: !103)
!17106 = !DILocalVariable(name: "__i", scope: !17107, file: !2508, line: 198, type: !16693)
!17107 = distinct !DILexicalBlock(scope: !17102, file: !2508, line: 198, column: 2)
!17108 = !DILocalVariable(name: "__key", scope: !17107, file: !2508, line: 198, type: !16693)
!17109 = !DILocation(line: 0, scope: !17102)
!17110 = !DILocation(line: 0, scope: !17107)
!17111 = !DILocation(line: 0, scope: !16721, inlinedAt: !17112)
!17112 = distinct !DILocation(line: 198, column: 2, scope: !17107)
!17113 = !DILocation(line: 55, column: 2, scope: !16730, inlinedAt: !17114)
!17114 = distinct !DILocation(line: 145, column: 10, scope: !16721, inlinedAt: !17112)
!17115 = !DILocation(line: 0, scope: !16730, inlinedAt: !17114)
!17116 = !DILocation(line: 148, column: 2, scope: !16738, inlinedAt: !17112)
!17117 = !DILocation(line: 148, column: 2, scope: !16739, inlinedAt: !17112)
!17118 = !DILocation(line: 148, column: 2, scope: !16742, inlinedAt: !17112)
!17119 = !DILocation(line: 160, column: 2, scope: !16721, inlinedAt: !17112)
!17120 = !DILocation(line: 199, column: 11, scope: !17121)
!17121 = distinct !DILexicalBlock(scope: !17122, file: !2508, line: 198, column: 24)
!17122 = distinct !DILexicalBlock(scope: !17107, file: !2508, line: 198, column: 2)
!17123 = !DILocation(line: 199, column: 23, scope: !17121)
!17124 = !DILocation(line: 0, scope: !16794, inlinedAt: !17125)
!17125 = distinct !DILocation(line: 198, column: 2, scope: !17122)
!17126 = !DILocation(line: 194, column: 2, scope: !16802, inlinedAt: !17125)
!17127 = !DILocation(line: 194, column: 2, scope: !16803, inlinedAt: !17125)
!17128 = !DILocation(line: 194, column: 2, scope: !16806, inlinedAt: !17125)
!17129 = !DILocation(line: 0, scope: !16808, inlinedAt: !17130)
!17130 = distinct !DILocation(line: 215, column: 2, scope: !16794, inlinedAt: !17125)
!17131 = !DILocation(line: 95, column: 2, scope: !16808, inlinedAt: !17130)
!17132 = !DILocation(line: 199, column: 21, scope: !17121)
!17133 = !DILocation(line: 202, column: 2, scope: !17102)
!17134 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2508, file: !2508, line: 205, type: !16827, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2478, retainedNodes: !17135)
!17135 = !{!17136, !17137, !17139}
!17136 = !DILocalVariable(name: "ret", scope: !17134, file: !2508, line: 207, type: !766)
!17137 = !DILocalVariable(name: "__i", scope: !17138, file: !2508, line: 209, type: !16693)
!17138 = distinct !DILexicalBlock(scope: !17134, file: !2508, line: 209, column: 2)
!17139 = !DILocalVariable(name: "__key", scope: !17138, file: !2508, line: 209, type: !16693)
!17140 = !DILocation(line: 0, scope: !17134)
!17141 = !DILocation(line: 0, scope: !17138)
!17142 = !DILocation(line: 0, scope: !16721, inlinedAt: !17143)
!17143 = distinct !DILocation(line: 209, column: 2, scope: !17138)
!17144 = !DILocation(line: 55, column: 2, scope: !16730, inlinedAt: !17145)
!17145 = distinct !DILocation(line: 145, column: 10, scope: !16721, inlinedAt: !17143)
!17146 = !DILocation(line: 0, scope: !16730, inlinedAt: !17145)
!17147 = !DILocation(line: 148, column: 2, scope: !16738, inlinedAt: !17143)
!17148 = !DILocation(line: 148, column: 2, scope: !16739, inlinedAt: !17143)
!17149 = !DILocation(line: 148, column: 2, scope: !16742, inlinedAt: !17143)
!17150 = !DILocation(line: 160, column: 2, scope: !16721, inlinedAt: !17143)
!17151 = !DILocation(line: 210, column: 9, scope: !17152)
!17152 = distinct !DILexicalBlock(scope: !17153, file: !2508, line: 209, column: 24)
!17153 = distinct !DILexicalBlock(scope: !17138, file: !2508, line: 209, column: 2)
!17154 = !DILocation(line: 0, scope: !16794, inlinedAt: !17155)
!17155 = distinct !DILocation(line: 209, column: 2, scope: !17153)
!17156 = !DILocation(line: 194, column: 2, scope: !16802, inlinedAt: !17155)
!17157 = !DILocation(line: 194, column: 2, scope: !16803, inlinedAt: !17155)
!17158 = !DILocation(line: 194, column: 2, scope: !16806, inlinedAt: !17155)
!17159 = !DILocation(line: 0, scope: !16808, inlinedAt: !17160)
!17160 = distinct !DILocation(line: 215, column: 2, scope: !16794, inlinedAt: !17155)
!17161 = !DILocation(line: 95, column: 2, scope: !16808, inlinedAt: !17160)
!17162 = !DILocation(line: 212, column: 2, scope: !17134)
!17163 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2508, file: !2508, line: 215, type: !10735, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2478, retainedNodes: !17164)
!17164 = !{!17165, !17166, !17167, !17169, !17170, !17173, !17174}
!17165 = !DILocalVariable(name: "ticks", arg: 1, scope: !17163, file: !2508, line: 215, type: !766)
!17166 = !DILocalVariable(name: "is_idle", arg: 2, scope: !17163, file: !2508, line: 215, type: !347)
!17167 = !DILocalVariable(name: "__i", scope: !17168, file: !2508, line: 217, type: !16693)
!17168 = distinct !DILexicalBlock(scope: !17163, file: !2508, line: 217, column: 2)
!17169 = !DILocalVariable(name: "__key", scope: !17168, file: !2508, line: 217, type: !16693)
!17170 = !DILocalVariable(name: "next_to", scope: !17171, file: !2508, line: 218, type: !109)
!17171 = distinct !DILexicalBlock(scope: !17172, file: !2508, line: 217, column: 24)
!17172 = distinct !DILexicalBlock(scope: !17168, file: !2508, line: 217, column: 2)
!17173 = !DILocalVariable(name: "sooner", scope: !17171, file: !2508, line: 219, type: !347)
!17174 = !DILocalVariable(name: "imminent", scope: !17171, file: !2508, line: 221, type: !347)
!17175 = !DILocation(line: 0, scope: !17163)
!17176 = !DILocation(line: 0, scope: !17168)
!17177 = !DILocation(line: 0, scope: !16721, inlinedAt: !17178)
!17178 = distinct !DILocation(line: 217, column: 2, scope: !17168)
!17179 = !DILocation(line: 55, column: 2, scope: !16730, inlinedAt: !17180)
!17180 = distinct !DILocation(line: 145, column: 10, scope: !16721, inlinedAt: !17178)
!17181 = !DILocation(line: 0, scope: !16730, inlinedAt: !17180)
!17182 = !DILocation(line: 148, column: 2, scope: !16738, inlinedAt: !17178)
!17183 = !DILocation(line: 148, column: 2, scope: !16739, inlinedAt: !17178)
!17184 = !DILocation(line: 148, column: 2, scope: !16742, inlinedAt: !17178)
!17185 = !DILocation(line: 160, column: 2, scope: !16721, inlinedAt: !17178)
!17186 = !DILocation(line: 218, column: 17, scope: !17171)
!17187 = !DILocation(line: 0, scope: !17171)
!17188 = !DILocation(line: 221, column: 27, scope: !17171)
!17189 = !DILocation(line: 233, column: 17, scope: !17190)
!17190 = distinct !DILexicalBlock(scope: !17171, file: !2508, line: 233, column: 7)
!17191 = !DILocation(line: 234, column: 26, scope: !17192)
!17192 = distinct !DILexicalBlock(scope: !17190, file: !2508, line: 233, column: 56)
!17193 = !DILocation(line: 234, column: 4, scope: !17192)
!17194 = !DILocation(line: 235, column: 3, scope: !17192)
!17195 = !DILocation(line: 0, scope: !16794, inlinedAt: !17196)
!17196 = distinct !DILocation(line: 217, column: 2, scope: !17172)
!17197 = !DILocation(line: 194, column: 2, scope: !16802, inlinedAt: !17196)
!17198 = !DILocation(line: 194, column: 2, scope: !16803, inlinedAt: !17196)
!17199 = !DILocation(line: 194, column: 2, scope: !16806, inlinedAt: !17196)
!17200 = !DILocation(line: 0, scope: !16808, inlinedAt: !17201)
!17201 = distinct !DILocation(line: 215, column: 2, scope: !16794, inlinedAt: !17196)
!17202 = !DILocation(line: 95, column: 2, scope: !16808, inlinedAt: !17201)
!17203 = !DILocation(line: 237, column: 1, scope: !17163)
!17204 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2508, file: !2508, line: 239, type: !17205, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2478, retainedNodes: !17207)
!17205 = !DISubroutineType(types: !17206)
!17206 = !{null, !766}
!17207 = !{!17208, !17209, !17210, !17212}
!17208 = !DILocalVariable(name: "ticks", arg: 1, scope: !17204, file: !2508, line: 239, type: !766)
!17209 = !DILocalVariable(name: "key", scope: !17204, file: !2508, line: 245, type: !16693)
!17210 = !DILocalVariable(name: "t", scope: !17211, file: !2508, line: 262, type: !2481)
!17211 = distinct !DILexicalBlock(scope: !17204, file: !2508, line: 261, column: 67)
!17212 = !DILocalVariable(name: "dt", scope: !17211, file: !2508, line: 263, type: !109)
!17213 = !DILocation(line: 0, scope: !17204)
!17214 = !DILocation(line: 242, column: 2, scope: !17204)
!17215 = !DILocation(line: 0, scope: !16721, inlinedAt: !17216)
!17216 = distinct !DILocation(line: 245, column: 25, scope: !17204)
!17217 = !DILocation(line: 55, column: 2, scope: !16730, inlinedAt: !17218)
!17218 = distinct !DILocation(line: 145, column: 10, scope: !16721, inlinedAt: !17216)
!17219 = !DILocation(line: 0, scope: !16730, inlinedAt: !17218)
!17220 = !DILocation(line: 148, column: 2, scope: !16738, inlinedAt: !17216)
!17221 = !DILocation(line: 148, column: 2, scope: !16739, inlinedAt: !17216)
!17222 = !DILocation(line: 148, column: 2, scope: !16742, inlinedAt: !17216)
!17223 = !DILocation(line: 160, column: 2, scope: !16721, inlinedAt: !17216)
!17224 = !DILocation(line: 261, column: 9, scope: !17204)
!17225 = !DILocation(line: 261, column: 17, scope: !17204)
!17226 = !DILocation(line: 261, column: 25, scope: !17204)
!17227 = !DILocation(line: 261, column: 37, scope: !17204)
!17228 = !DILocation(line: 261, column: 47, scope: !17204)
!17229 = !DILocation(line: 261, column: 44, scope: !17204)
!17230 = !DILocation(line: 261, column: 2, scope: !17204)
!17231 = !DILocation(line: 0, scope: !17211)
!17232 = !DILocation(line: 263, column: 12, scope: !17211)
!17233 = !DILocation(line: 265, column: 16, scope: !17211)
!17234 = !DILocation(line: 265, column: 13, scope: !17211)
!17235 = !DILocation(line: 266, column: 13, scope: !17211)
!17236 = !DILocation(line: 267, column: 3, scope: !17211)
!17237 = !DILocation(line: 0, scope: !16794, inlinedAt: !17238)
!17238 = distinct !DILocation(line: 269, column: 3, scope: !17211)
!17239 = !DILocation(line: 194, column: 2, scope: !16802, inlinedAt: !17238)
!17240 = !DILocation(line: 194, column: 2, scope: !16803, inlinedAt: !17238)
!17241 = !DILocation(line: 194, column: 2, scope: !16806, inlinedAt: !17238)
!17242 = !DILocation(line: 0, scope: !16808, inlinedAt: !17243)
!17243 = distinct !DILocation(line: 215, column: 2, scope: !16794, inlinedAt: !17238)
!17244 = !DILocation(line: 95, column: 2, scope: !16808, inlinedAt: !17243)
!17245 = !DILocation(line: 270, column: 6, scope: !17211)
!17246 = !DILocation(line: 270, column: 3, scope: !17211)
!17247 = !DILocation(line: 0, scope: !16721, inlinedAt: !17248)
!17248 = distinct !DILocation(line: 271, column: 9, scope: !17211)
!17249 = !DILocation(line: 55, column: 2, scope: !16730, inlinedAt: !17250)
!17250 = distinct !DILocation(line: 145, column: 10, scope: !16721, inlinedAt: !17248)
!17251 = !DILocation(line: 0, scope: !16730, inlinedAt: !17250)
!17252 = !DILocation(line: 148, column: 2, scope: !16738, inlinedAt: !17248)
!17253 = !DILocation(line: 148, column: 2, scope: !16739, inlinedAt: !17248)
!17254 = !DILocation(line: 148, column: 2, scope: !16742, inlinedAt: !17248)
!17255 = !DILocation(line: 160, column: 2, scope: !16721, inlinedAt: !17248)
!17256 = !DILocation(line: 272, column: 22, scope: !17211)
!17257 = distinct !{!17257, !17230, !17258}
!17258 = !DILocation(line: 273, column: 2, scope: !17204)
!17259 = !DILocation(line: 276, column: 19, scope: !17260)
!17260 = distinct !DILexicalBlock(scope: !17261, file: !2508, line: 275, column: 23)
!17261 = distinct !DILexicalBlock(scope: !17204, file: !2508, line: 275, column: 6)
!17262 = !DILocation(line: 277, column: 2, scope: !17260)
!17263 = !DILocation(line: 279, column: 15, scope: !17204)
!17264 = !DILocation(line: 279, column: 12, scope: !17204)
!17265 = !DILocation(line: 280, column: 21, scope: !17204)
!17266 = !DILocation(line: 282, column: 24, scope: !17204)
!17267 = !DILocation(line: 282, column: 2, scope: !17204)
!17268 = !DILocation(line: 0, scope: !16794, inlinedAt: !17269)
!17269 = distinct !DILocation(line: 284, column: 2, scope: !17204)
!17270 = !DILocation(line: 194, column: 2, scope: !16802, inlinedAt: !17269)
!17271 = !DILocation(line: 194, column: 2, scope: !16803, inlinedAt: !17269)
!17272 = !DILocation(line: 194, column: 2, scope: !16806, inlinedAt: !17269)
!17273 = !DILocation(line: 0, scope: !16808, inlinedAt: !17274)
!17274 = distinct !DILocation(line: 215, column: 2, scope: !16794, inlinedAt: !17269)
!17275 = !DILocation(line: 95, column: 2, scope: !16808, inlinedAt: !17274)
!17276 = !DILocation(line: 285, column: 1, scope: !17204)
!17277 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2508, file: !2508, line: 287, type: !17278, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2478, retainedNodes: !17280)
!17278 = !DISubroutineType(types: !17279)
!17279 = !{!105}
!17280 = !{!17281, !17282, !17284}
!17281 = !DILocalVariable(name: "t", scope: !17277, file: !2508, line: 289, type: !111)
!17282 = !DILocalVariable(name: "__i", scope: !17283, file: !2508, line: 291, type: !16693)
!17283 = distinct !DILexicalBlock(scope: !17277, file: !2508, line: 291, column: 2)
!17284 = !DILocalVariable(name: "__key", scope: !17283, file: !2508, line: 291, type: !16693)
!17285 = !DILocation(line: 0, scope: !17277)
!17286 = !DILocation(line: 0, scope: !17283)
!17287 = !DILocation(line: 0, scope: !16721, inlinedAt: !17288)
!17288 = distinct !DILocation(line: 291, column: 2, scope: !17283)
!17289 = !DILocation(line: 55, column: 2, scope: !16730, inlinedAt: !17290)
!17290 = distinct !DILocation(line: 145, column: 10, scope: !16721, inlinedAt: !17288)
!17291 = !DILocation(line: 0, scope: !16730, inlinedAt: !17290)
!17292 = !DILocation(line: 148, column: 2, scope: !16738, inlinedAt: !17288)
!17293 = !DILocation(line: 148, column: 2, scope: !16739, inlinedAt: !17288)
!17294 = !DILocation(line: 148, column: 2, scope: !16742, inlinedAt: !17288)
!17295 = !DILocation(line: 160, column: 2, scope: !16721, inlinedAt: !17288)
!17296 = !DILocation(line: 292, column: 7, scope: !17297)
!17297 = distinct !DILexicalBlock(scope: !17298, file: !2508, line: 291, column: 24)
!17298 = distinct !DILexicalBlock(scope: !17283, file: !2508, line: 291, column: 2)
!17299 = !DILocation(line: 292, column: 19, scope: !17297)
!17300 = !DILocation(line: 0, scope: !16794, inlinedAt: !17301)
!17301 = distinct !DILocation(line: 291, column: 2, scope: !17298)
!17302 = !DILocation(line: 194, column: 2, scope: !16802, inlinedAt: !17301)
!17303 = !DILocation(line: 194, column: 2, scope: !16803, inlinedAt: !17301)
!17304 = !DILocation(line: 194, column: 2, scope: !16806, inlinedAt: !17301)
!17305 = !DILocation(line: 0, scope: !16808, inlinedAt: !17306)
!17306 = distinct !DILocation(line: 215, column: 2, scope: !16794, inlinedAt: !17301)
!17307 = !DILocation(line: 95, column: 2, scope: !16808, inlinedAt: !17306)
!17308 = !DILocation(line: 292, column: 17, scope: !17297)
!17309 = !DILocation(line: 294, column: 2, scope: !17277)
!17310 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2508, file: !2508, line: 297, type: !6508, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2478, retainedNodes: !2036)
!17311 = !DILocation(line: 300, column: 19, scope: !17310)
!17312 = !DILocation(line: 300, column: 9, scope: !17310)
!17313 = !DILocation(line: 300, column: 2, scope: !17310)
!17314 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2508, file: !2508, line: 306, type: !17278, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2478, retainedNodes: !2036)
!17315 = !DILocation(line: 308, column: 9, scope: !17314)
!17316 = !DILocation(line: 308, column: 2, scope: !17314)
!17317 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2508, file: !2508, line: 319, type: !6518, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2478, retainedNodes: !17318)
!17318 = !{!17319, !17320, !17321, !17322}
!17319 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !17317, file: !2508, line: 319, type: !110)
!17320 = !DILocalVariable(name: "start_cycles", scope: !17317, file: !2508, line: 328, type: !110)
!17321 = !DILocalVariable(name: "cycles_to_wait", scope: !17317, file: !2508, line: 331, type: !110)
!17322 = !DILocalVariable(name: "current_cycles", scope: !17323, file: !2508, line: 338, type: !110)
!17323 = distinct !DILexicalBlock(scope: !17324, file: !2508, line: 337, column: 11)
!17324 = distinct !DILexicalBlock(scope: !17325, file: !2508, line: 337, column: 2)
!17325 = distinct !DILexicalBlock(scope: !17317, file: !2508, line: 337, column: 2)
!17326 = !DILocation(line: 0, scope: !17317)
!17327 = !DILocation(line: 322, column: 19, scope: !17328)
!17328 = distinct !DILexicalBlock(scope: !17317, file: !2508, line: 322, column: 6)
!17329 = !DILocation(line: 322, column: 6, scope: !17317)
!17330 = !DILocation(line: 328, column: 26, scope: !17317)
!17331 = !DILocation(line: 333, column: 43, scope: !17317)
!17332 = !DILocation(line: 337, column: 2, scope: !17317)
!17333 = !DILocation(line: 338, column: 29, scope: !17323)
!17334 = !DILocation(line: 0, scope: !17323)
!17335 = !DILocation(line: 341, column: 23, scope: !17336)
!17336 = distinct !DILexicalBlock(scope: !17323, file: !2508, line: 341, column: 7)
!17337 = !DILocation(line: 341, column: 39, scope: !17336)
!17338 = !DILocation(line: 349, column: 1, scope: !17317)
!17339 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !118, file: !118, line: 1675, type: !6508, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2478, retainedNodes: !2036)
!17340 = !DILocation(line: 1677, column: 9, scope: !17339)
!17341 = !DILocation(line: 1677, column: 2, scope: !17339)
!17342 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !17343, file: !17343, line: 24, type: !6508, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2478, retainedNodes: !2036)
!17343 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17344 = !DILocation(line: 26, column: 9, scope: !17342)
!17345 = !DILocation(line: 26, column: 2, scope: !17342)
!17346 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2508, file: !2508, line: 364, type: !17347, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2478, retainedNodes: !17349)
!17347 = !DISubroutineType(types: !17348)
!17348 = !{!111, !16683}
!17349 = !{!17350, !17351}
!17350 = !DILocalVariable(name: "timeout", arg: 1, scope: !17346, file: !2508, line: 364, type: !16683)
!17351 = !DILocalVariable(name: "dt", scope: !17346, file: !2508, line: 366, type: !103)
!17352 = !DILocation(line: 0, scope: !17346)
!17353 = !DILocation(line: 368, column: 6, scope: !17346)
!17354 = !DILocation(line: 371, column: 10, scope: !17355)
!17355 = distinct !DILexicalBlock(scope: !17356, file: !2508, line: 370, column: 47)
!17356 = distinct !DILexicalBlock(scope: !17357, file: !2508, line: 370, column: 13)
!17357 = distinct !DILexicalBlock(scope: !17346, file: !2508, line: 368, column: 6)
!17358 = !DILocation(line: 371, column: 3, scope: !17355)
!17359 = !DILocation(line: 376, column: 58, scope: !17360)
!17360 = distinct !DILexicalBlock(scope: !17361, file: !2508, line: 376, column: 7)
!17361 = distinct !DILexicalBlock(scope: !17356, file: !2508, line: 372, column: 9)
!17362 = !DILocation(line: 376, column: 7, scope: !17361)
!17363 = !DILocation(line: 376, column: 43, scope: !17360)
!17364 = !DILocation(line: 377, column: 4, scope: !17365)
!17365 = distinct !DILexicalBlock(scope: !17360, file: !2508, line: 376, column: 64)
!17366 = !DILocation(line: 379, column: 10, scope: !17361)
!17367 = !DILocation(line: 379, column: 33, scope: !17361)
!17368 = !DILocation(line: 379, column: 31, scope: !17361)
!17369 = !DILocation(line: 379, column: 3, scope: !17361)
!17370 = !DILocation(line: 0, scope: !17357)
!17371 = !DILocation(line: 381, column: 1, scope: !17346)
!17372 = distinct !DISubprogram(name: "boot_banner", scope: !17373, file: !17373, line: 26, type: !3096, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3082, retainedNodes: !2036)
!17373 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17374 = !DILocation(line: 34, column: 2, scope: !17372)
!17375 = !DILocation(line: 36, column: 1, scope: !17372)
