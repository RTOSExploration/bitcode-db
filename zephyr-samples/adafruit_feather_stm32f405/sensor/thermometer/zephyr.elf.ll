; ModuleID = 'build/adafruit_feather_stm32f405/sensor/thermometer/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %union.anon.1 }
%union.anon.1 = type { i32 }
%struct.arm_mpu_region = type { i32, i8*, %union.anon.1 }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %union.anon.1, i32*, i32, %struct.sensor_value }
%struct.sensor_value = type { i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %union.anon.1, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct.sensor_value*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct.sensor_value*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct._thread_stack_info, %struct.k_heap*, %struct.sensor_value }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct.k_spinlock = type {}
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.sensor_driver_api = type { i32 (%struct.device*, i32, i32, %struct.sensor_value*)*, i32 (%struct.device*, i32, i32, %struct.sensor_value*)*, i32 (%struct.device*, %struct.sensor_value*, void (%struct.device*, %struct.sensor_value*)*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32, %struct.sensor_value*)* }
%struct.__va_list = type { i8* }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %union.anon.1, %union.anon.1 }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %union.anon.1, %union.anon.1, %union.anon.1, %union.anon.1, %union.anon.1, %union.anon.1, %union.anon.1, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %union.anon.1*, %union.anon.1* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [82 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [82 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134234196 to i8*), void (i8*)* inttoptr (i32 134232333 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134234196 to i8*), void (i8*)* inttoptr (i32 134232313 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134234196 to i8*), void (i8*)* inttoptr (i32 134232303 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134234196 to i8*), void (i8*)* inttoptr (i32 134232403 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134234196 to i8*), void (i8*)* inttoptr (i32 134232393 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134234196 to i8*), void (i8*)* inttoptr (i32 134232383 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134234196 to i8*), void (i8*)* inttoptr (i32 134232373 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134234196 to i8*), void (i8*)* inttoptr (i32 134232363 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134234196 to i8*), void (i8*)* inttoptr (i32 134232353 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134234196 to i8*), void (i8*)* inttoptr (i32 134232343 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134234196 to i8*), void (i8*)* inttoptr (i32 134232323 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@.str = private unnamed_addr constant [25 x i8] c"Thermometer Example! %s\0A\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"arm\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"TEMP_0\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"error: no temp device\0A\00", align 1
@.str.4 = private unnamed_addr constant [31 x i8] c"temp device is %p, name is %s\0A\00", align 1
@.str.5 = private unnamed_addr constant [39 x i8] c"sensor_sample_fetch failed return: %d\0A\00", align 1
@.str.6 = private unnamed_addr constant [38 x i8] c"sensor_channel_get failed return: %d\0A\00", align 1
@.str.7 = private unnamed_addr constant [20 x i8] c"Temperature is %gC\0A\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !25
@.str.8 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@llvm.compiler.used = appending global [39 x i8*] [i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_37 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_67 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_68 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_69 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_70 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_71 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_72 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_73 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_74 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_21 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_67 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_68 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_69 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_70 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_71 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_72 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_73 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_74 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*)], section "llvm.metadata"
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !109
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !166
@_vector_start = external dso_local global [0 x i8], align 1
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %union.anon.1 { i32 101384192 } }], align 4, !dbg !195
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !203
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !349
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !385
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.34, i32 0, i32 0), %union.anon.1 { i32 117571622 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.35, i32 0, i32 0), %union.anon.1 { i32 285933600 } }], align 4, !dbg !395
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !400
@.str.34 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.35 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !420
@__devicehdl_dts_ord_37 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !614
@.str.36 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_37 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !575
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !558
@__device_dts_ord_37 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.36, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_37, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_37, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !531
@__init___device_dts_ord_37 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_37 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !547
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !577
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !591
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !593
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !595
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !597
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !599
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !601
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !603
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !605
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !607
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !609
@__devicehdl_dts_ord_9 = dso_local constant [13 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 32767], section ".__device_handles_pass2", align 2, !dbg !619
@.str.38 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !648
@__devstate_dts_ord_9 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !742
@__init___device_dts_ord_9 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_9 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !731
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !783
@__devicehdl_dts_ord_74 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !641
@.str.47 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct.sensor_value { i32 48, i32 1 } }, align 4, !dbg !849
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1136
@__devstate_dts_ord_74 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1102
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1088
@__init___device_dts_ord_74 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_74 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1027
@__devicehdl_dts_ord_67 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !639
@.str.1.48 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct.sensor_value { i32 48, i32 2 } }, align 4, !dbg !1138
@__devstate_dts_ord_67 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1106
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1104
@__init___device_dts_ord_67 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_67 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1044
@__devicehdl_dts_ord_21 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !637
@.str.2.49 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct.sensor_value { i32 48, i32 4 } }, align 4, !dbg !1151
@__devstate_dts_ord_21 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1110
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1108
@__init___device_dts_ord_21 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_21 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1050
@__devicehdl_dts_ord_68 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !635
@.str.3.50 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct.sensor_value { i32 48, i32 8 } }, align 4, !dbg !1153
@__devstate_dts_ord_68 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1114
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1112
@__init___device_dts_ord_68 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_68 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1056
@__devicehdl_dts_ord_69 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !633
@.str.4.51 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct.sensor_value { i32 48, i32 16 } }, align 4, !dbg !1155
@__devstate_dts_ord_69 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1118
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1116
@__init___device_dts_ord_69 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_69 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1062
@__devicehdl_dts_ord_70 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !631
@.str.5.52 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct.sensor_value { i32 48, i32 32 } }, align 4, !dbg !1157
@__devstate_dts_ord_70 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1122
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1120
@__init___device_dts_ord_70 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_70 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1068
@__devicehdl_dts_ord_71 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !629
@.str.6.53 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct.sensor_value { i32 48, i32 64 } }, align 4, !dbg !1159
@__devstate_dts_ord_71 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1126
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1124
@__init___device_dts_ord_71 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_71 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1074
@__devicehdl_dts_ord_72 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !627
@.str.7.54 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct.sensor_value { i32 48, i32 128 } }, align 4, !dbg !1161
@__devstate_dts_ord_72 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1130
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1128
@__init___device_dts_ord_72 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_72 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1080
@__devicehdl_dts_ord_73 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !625
@.str.8.55 = private unnamed_addr constant [14 x i8] c"gpio@40022000\00", align 1
@gpio_stm32_cfg_i = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073881088 to i32*), i32 8, %struct.sensor_value { i32 48, i32 256 } }, align 4, !dbg !1163
@__devstate_dts_ord_73 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1134
@gpio_stm32_data_i = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1132
@__init___device_dts_ord_73 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_73 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1086
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !643
@.str.61 = private unnamed_addr constant [16 x i8] c"serial@40004800\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073760256 to %struct.USART_TypeDef*), %struct.sensor_value* getelementptr inbounds ([1 x %struct.sensor_value], [1 x %struct.sensor_value]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45 }, align 4, !dbg !1165
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1360
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1321
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1362
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.61, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1312
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1314
@pclken_0 = internal constant [1 x %struct.sensor_value] [%struct.sensor_value { i32 64, i32 262144 }], align 4, !dbg !1323
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !1331
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct.sensor_value* getelementptr inbounds ([2 x %struct.sensor_value], [2 x %struct.sensor_value]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1354
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct.sensor_value] [%struct.sensor_value { i32 839, i32 512 }, %struct.sensor_value { i32 871, i32 0 }], align 4, !dbg !1357
@__device_dts_ord_9 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.38, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_9, i8* null, i16* getelementptr inbounds ([13 x i16], [13 x i16]* @__devicehdl_dts_ord_9, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !715
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1384
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1495
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1497
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1493
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1464
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_74, %struct.device* @__device_dts_ord_67, %struct.device* @__device_dts_ord_21, %struct.device* @__device_dts_ord_68, %struct.device* @__device_dts_ord_69, %struct.device* @__device_dts_ord_70, %struct.device* @__device_dts_ord_71, %struct.device* @__device_dts_ord_72, %struct.device* @__device_dts_ord_73, %struct.device* null, %struct.device* null], align 4, !dbg !1499
@__device_dts_ord_74 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.47, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_74, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_74, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1025
@__device_dts_ord_67 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.48, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_67, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_67, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1042
@__device_dts_ord_21 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.49, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_21, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_21, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1048
@__device_dts_ord_68 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.50, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_68, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_68, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1054
@__device_dts_ord_69 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.51, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_69, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_69, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1060
@__device_dts_ord_70 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.52, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_70, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_70, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1066
@__device_dts_ord_71 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.53, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_71, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_71, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1072
@__device_dts_ord_72 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.54, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_72, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_72, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1078
@__device_dts_ord_73 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8.55, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_i to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_73, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_i to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_73, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1084
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1589
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1629
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1632
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1639
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@__ccm_bss_start = external dso_local global [0 x i8], align 1
@__ccm_bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !1646
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !1856
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !1865
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !1872
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !1877
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.113 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.116, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.117, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.118, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.119, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.120, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.121, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.115, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.122, i32 0, i32 0)], align 4, !dbg !1903
@.str.116 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.117 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.118 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.119 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.120 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.121 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.115 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.122 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2015
@.str.8.114 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2028
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2136
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2139
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2141
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1870
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !1867
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@__ccm_data_start = external dso_local global [0 x i8], align 1
@__ccm_data_rom_start = external dso_local global [0 x i8], align 1
@__ccm_data_end = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2143
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2179
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1734
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2177
@.str.177 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !2926 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !2930, !srcloc !2931
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !2932, !srcloc !2933
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !2934, !srcloc !2935
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !2936, !srcloc !2937
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !2938, !srcloc !2939
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !2940, !srcloc !2941
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !2942, !srcloc !2943
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !2944, !srcloc !2945
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !2946, !srcloc !2947
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !2948, !srcloc !2949
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !2950, !srcloc !2951
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !2952, !srcloc !2953
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !2954, !srcloc !2955
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !2956, !srcloc !2957
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !2958, !srcloc !2959
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !2960, !srcloc !2961
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !2962, !srcloc !2963
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #23, !dbg !2964, !srcloc !2965
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !2966, !srcloc !2967
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #23, !dbg !2968, !srcloc !2969
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #23, !dbg !2970, !srcloc !2971
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #23, !dbg !2972, !srcloc !2973
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #23, !dbg !2974, !srcloc !2975
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !2976, !srcloc !2977
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !2978, !srcloc !2979
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !2980, !srcloc !2981
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !2982, !srcloc !2983
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !2984, !srcloc !2987
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !2988, !srcloc !2989
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !2990, !srcloc !2991
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !2992, !srcloc !2993
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !2994, !srcloc !2995
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !2996, !srcloc !2997
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !2998, !srcloc !2999
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !3000, !srcloc !3001
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !3002, !srcloc !3003
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !3004, !srcloc !3005
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3006, !srcloc !3007
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3008, !srcloc !3009
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3010, !srcloc !3011
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3012, !srcloc !3013
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3014, !srcloc !3015
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3016, !srcloc !3017
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !3018, !srcloc !3019
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !3020, !srcloc !3021
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !3022, !srcloc !3023
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !3024, !srcloc !3025
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !3026, !srcloc !3027
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !3028, !srcloc !3029
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3030, !srcloc !3031
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #23, !dbg !3032, !srcloc !3033
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #23, !dbg !3034, !srcloc !3035
  ret void, !dbg !3036
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !3039 {
  %1 = alloca %struct.sensor_value, align 4
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i32 0, i32 0), i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0)) #24, !dbg !3046
  %3 = tail call fastcc %struct.device* @device_get_binding() #25, !dbg !3047
  call void @llvm.dbg.value(metadata %struct.device* %3, metadata !3042, metadata !DIExpression()), !dbg !3048
  %4 = icmp eq %struct.device* %3, null, !dbg !3049
  br i1 %4, label %5, label %7, !dbg !3051

5:                                                ; preds = %0
  %6 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i32 0, i32 0)) #24, !dbg !3052
  br label %28, !dbg !3054

7:                                                ; preds = %0
  %8 = getelementptr inbounds %struct.device, %struct.device* %3, i32 0, i32 0, !dbg !3055
  %9 = load i8*, i8** %8, align 4, !dbg !3055
  %10 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.4, i32 0, i32 0), %struct.device* noundef nonnull %3, i8* noundef %9) #24, !dbg !3056
  %11 = bitcast %struct.sensor_value* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #23, !dbg !3057
  call void @llvm.dbg.declare(metadata %struct.sensor_value* %1, metadata !3045, metadata !DIExpression()), !dbg !3058
  %12 = call fastcc i32 @sensor_sample_fetch(%struct.device* noundef nonnull %3) #25, !dbg !3059
  call void @llvm.dbg.value(metadata i32 %12, metadata !3043, metadata !DIExpression()), !dbg !3060
  %13 = icmp eq i32 %12, 0, !dbg !3061
  br i1 %13, label %17, label %14, !dbg !3063

14:                                               ; preds = %23, %7
  %15 = phi i32 [ %12, %7 ], [ %26, %23 ], !dbg !3059
  %16 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.5, i32 0, i32 0), i32 noundef %15) #24, !dbg !3064
  br label %22, !dbg !3066

17:                                               ; preds = %7, %23
  %18 = call fastcc i32 @sensor_channel_get(%struct.device* noundef nonnull %3, %struct.sensor_value* noundef nonnull %1) #25, !dbg !3067
  call void @llvm.dbg.value(metadata i32 %18, metadata !3043, metadata !DIExpression()), !dbg !3060
  %19 = icmp eq i32 %18, 0, !dbg !3068
  br i1 %19, label %23, label %20, !dbg !3070

20:                                               ; preds = %17
  %21 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i32 0, i32 0), i32 noundef %18) #24, !dbg !3071
  br label %22, !dbg !3073

22:                                               ; preds = %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #23, !dbg !3074
  br label %28

23:                                               ; preds = %17
  %24 = call fastcc double @sensor_value_to_double(%struct.sensor_value* noundef nonnull %1) #25, !dbg !3075
  %25 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7, i32 0, i32 0), double noundef %24) #24, !dbg !3076
  call fastcc void @k_sleep([1 x i64] [i64 10000]) #25, !dbg !3077
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #23, !dbg !3074
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #23, !dbg !3057
  call void @llvm.dbg.declare(metadata %struct.sensor_value* %1, metadata !3045, metadata !DIExpression()), !dbg !3058
  %26 = call fastcc i32 @sensor_sample_fetch(%struct.device* noundef nonnull %3) #25, !dbg !3059
  call void @llvm.dbg.value(metadata i32 %26, metadata !3043, metadata !DIExpression()), !dbg !3060
  %27 = icmp eq i32 %26, 0, !dbg !3061
  br i1 %27, label %17, label %14, !dbg !3063

28:                                               ; preds = %22, %5
  ret void, !dbg !3078
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.device* @device_get_binding() unnamed_addr #1 !dbg !3079 {
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i32 0, i32 0), metadata !3084, metadata !DIExpression()), !dbg !3085
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3086, !srcloc !3088
  %1 = tail call %struct.device* @z_impl_device_get_binding(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i32 0, i32 0)) #24, !dbg !3089
  ret %struct.device* %1, !dbg !3090
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @sensor_sample_fetch(%struct.device* noundef %0) unnamed_addr #1 !dbg !3091 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3096, metadata !DIExpression()), !dbg !3097
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3098, !srcloc !3100
  %2 = tail call fastcc i32 @z_impl_sensor_sample_fetch(%struct.device* noundef %0) #25, !dbg !3101
  ret i32 %2, !dbg !3102
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @sensor_channel_get(%struct.device* noundef %0, %struct.sensor_value* noundef %1) unnamed_addr #1 !dbg !3103 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3105, metadata !DIExpression()), !dbg !3108
  call void @llvm.dbg.value(metadata i32 13, metadata !3106, metadata !DIExpression()), !dbg !3108
  call void @llvm.dbg.value(metadata %struct.sensor_value* %1, metadata !3107, metadata !DIExpression()), !dbg !3108
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3109, !srcloc !3111
  %3 = tail call fastcc i32 @z_impl_sensor_channel_get(%struct.device* noundef %0, %struct.sensor_value* noundef %1) #25, !dbg !3112
  ret i32 %3, !dbg !3113
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc double @sensor_value_to_double(%struct.sensor_value* nocapture noundef readonly %0) unnamed_addr #4 !dbg !3114 {
  call void @llvm.dbg.value(metadata %struct.sensor_value* %0, metadata !3118, metadata !DIExpression()), !dbg !3119
  %2 = getelementptr inbounds %struct.sensor_value, %struct.sensor_value* %0, i32 0, i32 0, !dbg !3120
  %3 = load i32, i32* %2, align 4, !dbg !3120
  %4 = sitofp i32 %3 to double, !dbg !3121
  %5 = getelementptr inbounds %struct.sensor_value, %struct.sensor_value* %0, i32 0, i32 1, !dbg !3122
  %6 = load i32, i32* %5, align 4, !dbg !3122
  %7 = sitofp i32 %6 to double, !dbg !3123
  %8 = fdiv double %7, 1.000000e+06, !dbg !3124
  %9 = fadd double %8, %4, !dbg !3125
  ret double %9, !dbg !3126
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !3127 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3136, metadata !DIExpression()), !dbg !3137
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3138, !srcloc !3140
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #24, !dbg !3141
  ret void, !dbg !3142
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_sensor_channel_get(%struct.device* noundef %0, %struct.sensor_value* noundef %1) unnamed_addr #1 !dbg !3143 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3145, metadata !DIExpression()), !dbg !3149
  call void @llvm.dbg.value(metadata i32 13, metadata !3146, metadata !DIExpression()), !dbg !3149
  call void @llvm.dbg.value(metadata %struct.sensor_value* %1, metadata !3147, metadata !DIExpression()), !dbg !3149
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !3150
  %4 = bitcast i8** %3 to %struct.sensor_driver_api**, !dbg !3150
  %5 = load %struct.sensor_driver_api*, %struct.sensor_driver_api** %4, align 4, !dbg !3150
  call void @llvm.dbg.value(metadata %struct.sensor_driver_api* %5, metadata !3148, metadata !DIExpression()), !dbg !3149
  %6 = getelementptr inbounds %struct.sensor_driver_api, %struct.sensor_driver_api* %5, i32 0, i32 4, !dbg !3151
  %7 = load i32 (%struct.device*, i32, %struct.sensor_value*)*, i32 (%struct.device*, i32, %struct.sensor_value*)** %6, align 4, !dbg !3151
  %8 = tail call i32 %7(%struct.device* noundef %0, i32 noundef 13, %struct.sensor_value* noundef %1) #24, !dbg !3152
  ret i32 %8, !dbg !3153
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_sensor_sample_fetch(%struct.device* noundef %0) unnamed_addr #1 !dbg !3154 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3156, metadata !DIExpression()), !dbg !3158
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !3159
  %3 = bitcast i8** %2 to %struct.sensor_driver_api**, !dbg !3159
  %4 = load %struct.sensor_driver_api*, %struct.sensor_driver_api** %3, align 4, !dbg !3159
  call void @llvm.dbg.value(metadata %struct.sensor_driver_api* %4, metadata !3157, metadata !DIExpression()), !dbg !3158
  %5 = getelementptr inbounds %struct.sensor_driver_api, %struct.sensor_driver_api* %4, i32 0, i32 3, !dbg !3160
  %6 = load i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)** %5, align 4, !dbg !3160
  %7 = tail call i32 %6(%struct.device* noundef %0, i32 noundef 57) #24, !dbg !3161
  ret i32 %7, !dbg !3162
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !3163 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3165, metadata !DIExpression()), !dbg !3166
  ret i32 0, !dbg !3167
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #5 !dbg !3168 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !3172, metadata !DIExpression()), !dbg !3173
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !3174
  ret void, !dbg !3175
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #4 !dbg !3176 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !3179
  ret i8* %1, !dbg !3180
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !3181 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3193, metadata !DIExpression()), !dbg !3204
  call void @llvm.dbg.value(metadata i8* %0, metadata !3192, metadata !DIExpression()), !dbg !3204
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #25, !dbg !3205
  ret void, !dbg !3207
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !3208 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3212, metadata !DIExpression()), !dbg !3214
  call void @llvm.dbg.value(metadata i8* %1, metadata !3213, metadata !DIExpression()), !dbg !3214
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3215
  %4 = tail call i32 %3(i32 noundef %0) #24, !dbg !3215
  ret i32 %4, !dbg !3216
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !3217 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3229, metadata !DIExpression()), !dbg !3230
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3226, metadata !DIExpression()), !dbg !3230
  call void @llvm.dbg.value(metadata i8* %1, metadata !3227, metadata !DIExpression()), !dbg !3230
  call void @llvm.dbg.value(metadata i8* %2, metadata !3228, metadata !DIExpression()), !dbg !3230
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #24, !dbg !3231
  ret void, !dbg !3232
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !3233 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3237, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata i32 %1, metadata !3238, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.value(metadata i32 0, metadata !3239, metadata !DIExpression()), !dbg !3240
  %3 = icmp eq i32 %1, 0, !dbg !3241
  br i1 %3, label %13, label %4, !dbg !3244

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3239, metadata !DIExpression()), !dbg !3240
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3245
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !3247
  %8 = load i8, i8* %7, align 1, !dbg !3247
  %9 = zext i8 %8 to i32, !dbg !3247
  %10 = tail call i32 %6(i32 noundef %9) #24, !dbg !3245
  %11 = add nuw i32 %5, 1, !dbg !3248
  call void @llvm.dbg.value(metadata i32 %11, metadata !3239, metadata !DIExpression()), !dbg !3240
  %12 = icmp eq i32 %11, %1, !dbg !3241
  br i1 %12, label %13, label %4, !dbg !3244, !llvm.loop !3249

13:                                               ; preds = %4, %2
  ret void, !dbg !3251
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !3252 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3256, metadata !DIExpression()), !dbg !3258
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !3259
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !3259
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !3257, metadata !DIExpression()), !dbg !3260
  call void @llvm.va_start(i8* nonnull %3), !dbg !3261
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !3262
  %5 = load i32, i32* %4, align 4, !dbg !3262
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !3262
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !3262
  call void @llvm.va_end(i8* nonnull %3), !dbg !3263
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !3264
  ret void, !dbg !3264
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #6

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !3265 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3269, metadata !DIExpression()), !dbg !3274
  call void @llvm.dbg.value(metadata i32 %1, metadata !3270, metadata !DIExpression()), !dbg !3274
  call void @llvm.dbg.value(metadata i8* %2, metadata !3271, metadata !DIExpression()), !dbg !3274
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !3275
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !3275
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3272, metadata !DIExpression()), !dbg !3276
  call void @llvm.va_start(i8* nonnull %5), !dbg !3277
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !3278
  %7 = load i32, i32* %6, align 4, !dbg !3278
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !3278
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #25, !dbg !3278
  call void @llvm.dbg.value(metadata i32 %9, metadata !3273, metadata !DIExpression()), !dbg !3274
  call void @llvm.va_end(i8* nonnull %5), !dbg !3279
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !3280
  ret i32 %9, !dbg !3281
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !3282 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3289, metadata !DIExpression()), !dbg !3296
  call void @llvm.dbg.value(metadata i8* %0, metadata !3286, metadata !DIExpression()), !dbg !3296
  call void @llvm.dbg.value(metadata i32 %1, metadata !3287, metadata !DIExpression()), !dbg !3296
  call void @llvm.dbg.value(metadata i8* %2, metadata !3288, metadata !DIExpression()), !dbg !3296
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !3297
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !3297
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !3290, metadata !DIExpression()), !dbg !3298
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !3299
  store i8* %0, i8** %7, align 4, !dbg !3299
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !3299
  store i32 %1, i32* %8, align 4, !dbg !3299
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !3299
  store i32 0, i32* %9, align 4, !dbg !3299
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #25, !dbg !3300
  %10 = load i32, i32* %9, align 4, !dbg !3301
  %11 = load i32, i32* %8, align 4, !dbg !3303
  %12 = icmp slt i32 %10, %11, !dbg !3304
  br i1 %12, label %13, label %15, !dbg !3305

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !3306
  store i8 0, i8* %14, align 1, !dbg !3308
  br label %15, !dbg !3309

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !3310
  ret i32 %10, !dbg !3311
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #7 !dbg !3312 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3317, metadata !DIExpression()), !dbg !3319
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !3318, metadata !DIExpression()), !dbg !3319
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !3320
  %4 = load i8*, i8** %3, align 4, !dbg !3320
  %5 = icmp eq i8* %4, null, !dbg !3322
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !3323
  br i1 %5, label %12, label %8, !dbg !3324

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !3325
  %10 = load i32, i32* %9, align 4, !dbg !3325
  %11 = icmp slt i32 %7, %10, !dbg !3326
  br i1 %11, label %15, label %12, !dbg !3327

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !3328
  %14 = add nsw i32 %7, 1, !dbg !3330
  store i32 %14, i32* %13, align 4, !dbg !3330
  br label %25, !dbg !3331

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !3332
  %17 = icmp eq i32 %7, %16, !dbg !3334
  br i1 %17, label %18, label %21, !dbg !3335

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !3336
  store i32 %19, i32* %6, align 4, !dbg !3336
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3338
  store i8 0, i8* %20, align 1, !dbg !3339
  br label %25, !dbg !3340

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !3341
  %23 = add nsw i32 %7, 1, !dbg !3343
  store i32 %23, i32* %6, align 4, !dbg !3343
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3344
  store i8 %22, i8* %24, align 1, !dbg !3345
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !3346
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #8 !dbg !3347 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !3357, metadata !DIExpression()), !dbg !3361
  call void @llvm.dbg.value(metadata i8* %1, metadata !3358, metadata !DIExpression()), !dbg !3361
  call void @llvm.dbg.value(metadata i8* %2, metadata !3359, metadata !DIExpression()), !dbg !3361
  call void @llvm.dbg.value(metadata i8* %3, metadata !3360, metadata !DIExpression()), !dbg !3361
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #24, !dbg !3362
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #26, !dbg !3363
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #25, !dbg !3364
  unreachable, !dbg !3365
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #9 !dbg !3366 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #26, !dbg !3470
  ret %struct.k_thread* %1, !dbg !3471
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3472 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3476, metadata !DIExpression()), !dbg !3477
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3478, !srcloc !3480
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !3481
  ret void, !dbg !3482
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #9 !dbg !3483 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3484, !srcloc !3486
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #24, !dbg !3487
  ret %struct.k_thread* %1, !dbg !3488
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !3489 {
  %6 = alloca [25 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = alloca i8*, align 4
  %9 = alloca i8, align 1
  %10 = extractvalue [1 x i32] %3, 0
  %11 = inttoptr i32 %10 to i8*
  call void @llvm.dbg.value(metadata i8* %11, metadata !3502, metadata !DIExpression()), !dbg !3660
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3499, metadata !DIExpression()), !dbg !3660
  call void @llvm.dbg.value(metadata i8* %1, metadata !3500, metadata !DIExpression()), !dbg !3660
  call void @llvm.dbg.value(metadata i8* %2, metadata !3501, metadata !DIExpression()), !dbg !3660
  call void @llvm.dbg.value(metadata i32 %4, metadata !3503, metadata !DIExpression()), !dbg !3660
  %12 = getelementptr inbounds [25 x i8], [25 x i8]* %6, i32 0, i32 0, !dbg !3661
  call void @llvm.lifetime.start.p0i8(i64 25, i8* nonnull %12) #23, !dbg !3661
  call void @llvm.dbg.declare(metadata [25 x i8]* %6, metadata !3504, metadata !DIExpression()), !dbg !3662
  call void @llvm.dbg.value(metadata i32 0, metadata !3508, metadata !DIExpression()), !dbg !3660
  call void @llvm.dbg.value(metadata i1 undef, metadata !3510, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3660
  %13 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %14 = bitcast %struct.anon* %7 to i8*
  %15 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %16 = bitcast i8** %8 to i8*
  %17 = getelementptr inbounds [25 x i8], [25 x i8]* %6, i32 0, i32 25
  %18 = bitcast %struct.conversion* %15 to i24*
  %19 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %21 = bitcast %struct.anon* %7 to i8**
  %22 = bitcast %struct.anon* %7 to double*
  %23 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %25 = ptrtoint i8* %17 to i32
  %26 = getelementptr inbounds [25 x i8], [25 x i8]* %6, i32 0, i32 1
  br label %27, !dbg !3663

27:                                               ; preds = %477, %5
  %28 = phi i32 [ %478, %477 ], [ 0, %5 ]
  %29 = phi i8* [ %42, %477 ], [ %2, %5 ]
  %30 = phi i8* [ %187, %477 ], [ %11, %5 ]
  br label %31, !dbg !3663

31:                                               ; preds = %27, %35
  %32 = phi i32 [ %40, %35 ], [ %28, %27 ], !dbg !3664
  %33 = phi i8* [ %37, %35 ], [ %29, %27 ]
  call void @llvm.dbg.value(metadata i8* %30, metadata !3502, metadata !DIExpression()), !dbg !3660
  call void @llvm.dbg.value(metadata i8* %33, metadata !3501, metadata !DIExpression()), !dbg !3660
  call void @llvm.dbg.value(metadata i32 %32, metadata !3508, metadata !DIExpression()), !dbg !3660
  %34 = load i8, i8* %33, align 1, !dbg !3665
  switch i8 %34, label %35 [
    i8 0, label %479
    i8 37, label %41
  ], !dbg !3663

35:                                               ; preds = %31
  %36 = zext i8 %34 to i32, !dbg !3665
  %37 = getelementptr inbounds i8, i8* %33, i32 1, !dbg !3666
  call void @llvm.dbg.value(metadata i8* %37, metadata !3501, metadata !DIExpression()), !dbg !3660
  %38 = call i32 %13(i32 noundef %36, i8* noundef %1) #24, !dbg !3666
  call void @llvm.dbg.value(metadata i32 %38, metadata !3512, metadata !DIExpression()), !dbg !3667
  %39 = icmp slt i32 %38, 0, !dbg !3668
  %40 = add i32 %32, 1, !dbg !3666
  call void @llvm.dbg.value(metadata i32 undef, metadata !3508, metadata !DIExpression()), !dbg !3660
  br i1 %39, label %479, label %31, !llvm.loop !3670

41:                                               ; preds = %31
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #23, !dbg !3672
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !3517, metadata !DIExpression()), !dbg !3673
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %14, i8 0, i32 24, i1 false), !dbg !3673
  call void @llvm.dbg.value(metadata %struct.conversion* %15, metadata !3561, metadata !DIExpression()), !dbg !3674
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !3564, metadata !DIExpression()), !dbg !3674
  call void @llvm.dbg.value(metadata i8* %33, metadata !3567, metadata !DIExpression()), !dbg !3674
  call void @llvm.dbg.value(metadata i32 -1, metadata !3568, metadata !DIExpression()), !dbg !3674
  call void @llvm.dbg.value(metadata i32 -1, metadata !3569, metadata !DIExpression()), !dbg !3674
  call void @llvm.dbg.value(metadata i8* null, metadata !3570, metadata !DIExpression()), !dbg !3674
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #23, !dbg !3675
  call void @llvm.dbg.value(metadata i8* %17, metadata !3571, metadata !DIExpression()), !dbg !3674
  store i8* %17, i8** %8, align 4, !dbg !3676
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #23, !dbg !3677
  call void @llvm.dbg.value(metadata i8 0, metadata !3572, metadata !DIExpression()), !dbg !3674
  store i8 0, i8* %9, align 1, !dbg !3678
  %42 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %15, i8* noundef nonnull %33) #25, !dbg !3679
  call void @llvm.dbg.value(metadata i8* %42, metadata !3501, metadata !DIExpression()), !dbg !3660
  %43 = load i24, i24* %18, align 8, !dbg !3680
  %44 = and i24 %43, 256, !dbg !3680
  %45 = icmp eq i24 %44, 0, !dbg !3680
  br i1 %45, label %54, label %46, !dbg !3682

46:                                               ; preds = %41
  %47 = getelementptr inbounds i8, i8* %30, i32 4, !dbg !3683
  call void @llvm.dbg.value(metadata i8* %47, metadata !3502, metadata !DIExpression()), !dbg !3660
  %48 = bitcast i8* %30 to i32*, !dbg !3683
  %49 = load i32, i32* %48, align 4, !dbg !3683
  call void @llvm.dbg.value(metadata i32 %49, metadata !3568, metadata !DIExpression()), !dbg !3674
  %50 = icmp slt i32 %49, 0, !dbg !3685
  br i1 %50, label %51, label %59, !dbg !3687

51:                                               ; preds = %46
  %52 = or i24 %43, 4, !dbg !3688
  store i24 %52, i24* %18, align 8, !dbg !3688
  %53 = sub nsw i32 0, %49, !dbg !3690
  call void @llvm.dbg.value(metadata i32 %53, metadata !3568, metadata !DIExpression()), !dbg !3674
  br label %59, !dbg !3691

54:                                               ; preds = %41
  %55 = and i24 %43, 128, !dbg !3692
  %56 = icmp eq i24 %55, 0, !dbg !3692
  %57 = load i32, i32* %19, align 4
  %58 = select i1 %56, i32 -1, i32 %57, !dbg !3694
  br label %59, !dbg !3694

59:                                               ; preds = %54, %46, %51
  %60 = phi i24 [ %52, %51 ], [ %43, %46 ], [ %43, %54 ], !dbg !3695
  %61 = phi i32 [ %53, %51 ], [ %49, %46 ], [ %58, %54 ], !dbg !3674
  %62 = phi i8* [ %47, %51 ], [ %47, %46 ], [ %30, %54 ]
  call void @llvm.dbg.value(metadata i8* %62, metadata !3502, metadata !DIExpression()), !dbg !3660
  call void @llvm.dbg.value(metadata i32 %61, metadata !3568, metadata !DIExpression()), !dbg !3674
  %63 = and i24 %60, 1024, !dbg !3695
  %64 = icmp eq i24 %63, 0, !dbg !3695
  br i1 %64, label %72, label %65, !dbg !3696

65:                                               ; preds = %59
  %66 = getelementptr inbounds i8, i8* %62, i32 4, !dbg !3697
  call void @llvm.dbg.value(metadata i8* %66, metadata !3502, metadata !DIExpression()), !dbg !3660
  %67 = bitcast i8* %62 to i32*, !dbg !3697
  %68 = load i32, i32* %67, align 4, !dbg !3697
  call void @llvm.dbg.value(metadata i32 %68, metadata !3573, metadata !DIExpression()), !dbg !3698
  %69 = icmp slt i32 %68, 0, !dbg !3699
  br i1 %69, label %70, label %77, !dbg !3701

70:                                               ; preds = %65
  %71 = and i24 %60, -513, !dbg !3702
  store i24 %71, i24* %18, align 8, !dbg !3702
  br label %77, !dbg !3704

72:                                               ; preds = %59
  %73 = and i24 %60, 512, !dbg !3705
  %74 = icmp eq i24 %73, 0, !dbg !3705
  %75 = load i32, i32* %20, align 8
  %76 = select i1 %74, i32 -1, i32 %75, !dbg !3707
  br label %77, !dbg !3707

77:                                               ; preds = %72, %70, %65
  %78 = phi i24 [ %71, %70 ], [ %60, %65 ], [ %60, %72 ], !dbg !3708
  %79 = phi i32 [ -1, %70 ], [ %68, %65 ], [ %76, %72 ], !dbg !3674
  %80 = phi i8* [ %66, %70 ], [ %66, %65 ], [ %62, %72 ], !dbg !3674
  call void @llvm.dbg.value(metadata i8* %80, metadata !3502, metadata !DIExpression()), !dbg !3660
  call void @llvm.dbg.value(metadata i32 %79, metadata !3569, metadata !DIExpression()), !dbg !3674
  store i32 0, i32* %19, align 4, !dbg !3710
  store i32 0, i32* %20, align 8, !dbg !3711
  %81 = and i24 %78, 459264, !dbg !3712
  %82 = icmp eq i24 %81, 262144, !dbg !3712
  %83 = and i24 %78, 32768, !dbg !3712
  %84 = icmp eq i24 %83, 0, !dbg !3712
  %85 = select i1 %84, i32 6, i32 13, !dbg !3712
  %86 = select i1 %82, i32 %85, i32 %79, !dbg !3712
  call void @llvm.dbg.value(metadata i32 %86, metadata !3569, metadata !DIExpression()), !dbg !3674
  %87 = lshr i24 %78, 16, !dbg !3713
  call void @llvm.dbg.value(metadata i24 %87, metadata !3576, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3674
  %88 = lshr i24 %78, 11, !dbg !3714
  %89 = and i24 %88, 15, !dbg !3714
  %90 = zext i24 %89 to i32, !dbg !3714
  call void @llvm.dbg.value(metadata i32 %90, metadata !3577, metadata !DIExpression()), !dbg !3674
  %91 = trunc i24 %87 to i3, !dbg !3715
  switch i3 %91, label %186 [
    i3 1, label %92
    i3 2, label %134
    i3 -4, label %174
    i3 3, label %182
  ], !dbg !3715

92:                                               ; preds = %77
  switch i32 %90, label %93 [
    i32 7, label %119
    i32 6, label %119
    i32 5, label %111
    i32 3, label %98
    i32 4, label %103
  ], !dbg !3716

93:                                               ; preds = %92
  %94 = getelementptr inbounds i8, i8* %80, i32 4, !dbg !3719
  call void @llvm.dbg.value(metadata i8* %94, metadata !3502, metadata !DIExpression()), !dbg !3660
  %95 = bitcast i8* %80 to i32*, !dbg !3719
  %96 = load i32, i32* %95, align 4, !dbg !3719
  %97 = sext i32 %96 to i64, !dbg !3719
  store i64 %97, i64* %23, align 8, !dbg !3721
  br label %124, !dbg !3722

98:                                               ; preds = %92
  %99 = getelementptr inbounds i8, i8* %80, i32 4, !dbg !3723
  call void @llvm.dbg.value(metadata i8* %99, metadata !3502, metadata !DIExpression()), !dbg !3660
  %100 = bitcast i8* %80 to i32*, !dbg !3723
  %101 = load i32, i32* %100, align 4, !dbg !3723
  %102 = sext i32 %101 to i64, !dbg !3723
  store i64 %102, i64* %23, align 8, !dbg !3726
  br label %124, !dbg !3727

103:                                              ; preds = %92
  %104 = ptrtoint i8* %80 to i32, !dbg !3728
  %105 = add i32 %104, 7, !dbg !3728
  %106 = and i32 %105, -8, !dbg !3728
  %107 = inttoptr i32 %106 to i8*, !dbg !3728
  %108 = getelementptr inbounds i8, i8* %107, i32 8, !dbg !3728
  call void @llvm.dbg.value(metadata i8* %108, metadata !3502, metadata !DIExpression()), !dbg !3660
  %109 = inttoptr i32 %106 to i64*, !dbg !3728
  %110 = load i64, i64* %109, align 8, !dbg !3728
  store i64 %110, i64* %23, align 8, !dbg !3729
  br label %124, !dbg !3730

111:                                              ; preds = %92
  %112 = ptrtoint i8* %80 to i32, !dbg !3731
  %113 = add i32 %112, 7, !dbg !3731
  %114 = and i32 %113, -8, !dbg !3731
  %115 = inttoptr i32 %114 to i8*, !dbg !3731
  %116 = getelementptr inbounds i8, i8* %115, i32 8, !dbg !3731
  call void @llvm.dbg.value(metadata i8* %116, metadata !3502, metadata !DIExpression()), !dbg !3660
  %117 = inttoptr i32 %114 to i64*, !dbg !3731
  %118 = load i64, i64* %117, align 8, !dbg !3731
  store i64 %118, i64* %23, align 8, !dbg !3732
  br label %124, !dbg !3733

119:                                              ; preds = %92, %92
  %120 = getelementptr inbounds i8, i8* %80, i32 4, !dbg !3734
  call void @llvm.dbg.value(metadata i8* %120, metadata !3502, metadata !DIExpression()), !dbg !3660
  %121 = bitcast i8* %80 to i32*, !dbg !3734
  %122 = load i32, i32* %121, align 4, !dbg !3734
  %123 = sext i32 %122 to i64, !dbg !3735
  store i64 %123, i64* %23, align 8, !dbg !3736
  br label %124, !dbg !3737

124:                                              ; preds = %119, %111, %103, %98, %93
  %125 = phi i64 [ %97, %93 ], [ %110, %103 ], [ %102, %98 ], [ %118, %111 ], [ %123, %119 ]
  %126 = phi i8* [ %94, %93 ], [ %108, %103 ], [ %99, %98 ], [ %116, %111 ], [ %120, %119 ], !dbg !3738
  call void @llvm.dbg.value(metadata i8* %126, metadata !3502, metadata !DIExpression()), !dbg !3660
  %127 = trunc i24 %88 to i4, !dbg !3739
  switch i4 %127, label %186 [
    i4 1, label %128
    i4 2, label %131
  ], !dbg !3739

128:                                              ; preds = %124
  %129 = shl i64 %125, 56, !dbg !3740
  %130 = ashr exact i64 %129, 56, !dbg !3740
  store i64 %130, i64* %23, align 8, !dbg !3743
  br label %186, !dbg !3744

131:                                              ; preds = %124
  %132 = shl i64 %125, 48, !dbg !3745
  %133 = ashr exact i64 %132, 48, !dbg !3745
  store i64 %133, i64* %23, align 8, !dbg !3748
  br label %186, !dbg !3749

134:                                              ; preds = %77
  switch i32 %90, label %135 [
    i32 7, label %161
    i32 6, label %161
    i32 5, label %153
    i32 3, label %140
    i32 4, label %145
  ], !dbg !3750

135:                                              ; preds = %134
  %136 = getelementptr inbounds i8, i8* %80, i32 4, !dbg !3753
  call void @llvm.dbg.value(metadata i8* %136, metadata !3502, metadata !DIExpression()), !dbg !3660
  %137 = bitcast i8* %80 to i32*, !dbg !3753
  %138 = load i32, i32* %137, align 4, !dbg !3753
  %139 = zext i32 %138 to i64, !dbg !3753
  store i64 %139, i64* %23, align 8, !dbg !3755
  br label %166, !dbg !3756

140:                                              ; preds = %134
  %141 = getelementptr inbounds i8, i8* %80, i32 4, !dbg !3757
  call void @llvm.dbg.value(metadata i8* %141, metadata !3502, metadata !DIExpression()), !dbg !3660
  call void @llvm.dbg.value(metadata i8* %141, metadata !3502, metadata !DIExpression()), !dbg !3660
  %142 = bitcast i8* %80 to i32*, !dbg !3757
  %143 = load i32, i32* %142, align 4, !dbg !3757
  %144 = zext i32 %143 to i64, !dbg !3757
  store i64 %144, i64* %23, align 8, !dbg !3757
  br label %166

145:                                              ; preds = %134
  %146 = ptrtoint i8* %80 to i32, !dbg !3759
  %147 = add i32 %146, 7, !dbg !3759
  %148 = and i32 %147, -8, !dbg !3759
  %149 = inttoptr i32 %148 to i8*, !dbg !3759
  %150 = getelementptr inbounds i8, i8* %149, i32 8, !dbg !3759
  call void @llvm.dbg.value(metadata i8* %150, metadata !3502, metadata !DIExpression()), !dbg !3660
  %151 = inttoptr i32 %148 to i64*, !dbg !3759
  %152 = load i64, i64* %151, align 8, !dbg !3759
  store i64 %152, i64* %23, align 8, !dbg !3760
  br label %166, !dbg !3761

153:                                              ; preds = %134
  %154 = ptrtoint i8* %80 to i32, !dbg !3762
  %155 = add i32 %154, 7, !dbg !3762
  %156 = and i32 %155, -8, !dbg !3762
  %157 = inttoptr i32 %156 to i8*, !dbg !3762
  %158 = getelementptr inbounds i8, i8* %157, i32 8, !dbg !3762
  call void @llvm.dbg.value(metadata i8* %158, metadata !3502, metadata !DIExpression()), !dbg !3660
  %159 = inttoptr i32 %156 to i64*, !dbg !3762
  %160 = load i64, i64* %159, align 8, !dbg !3762
  store i64 %160, i64* %23, align 8, !dbg !3763
  br label %166, !dbg !3764

161:                                              ; preds = %134, %134
  %162 = getelementptr inbounds i8, i8* %80, i32 4, !dbg !3765
  call void @llvm.dbg.value(metadata i8* %162, metadata !3502, metadata !DIExpression()), !dbg !3660
  %163 = bitcast i8* %80 to i32*, !dbg !3765
  %164 = load i32, i32* %163, align 4, !dbg !3765
  %165 = zext i32 %164 to i64, !dbg !3766
  store i64 %165, i64* %23, align 8, !dbg !3767
  br label %166, !dbg !3768

166:                                              ; preds = %140, %161, %153, %145, %135
  %167 = phi i64 [ %139, %135 ], [ %152, %145 ], [ %160, %153 ], [ %165, %161 ], [ %144, %140 ]
  %168 = phi i8* [ %136, %135 ], [ %150, %145 ], [ %158, %153 ], [ %162, %161 ], [ %141, %140 ], !dbg !3769
  call void @llvm.dbg.value(metadata i8* %168, metadata !3502, metadata !DIExpression()), !dbg !3660
  %169 = trunc i24 %88 to i4, !dbg !3770
  switch i4 %169, label %186 [
    i4 1, label %170
    i4 2, label %172
  ], !dbg !3770

170:                                              ; preds = %166
  %171 = and i64 %167, 255, !dbg !3771
  store i64 %171, i64* %23, align 8, !dbg !3774
  br label %186, !dbg !3775

172:                                              ; preds = %166
  %173 = and i64 %167, 65535, !dbg !3776
  store i64 %173, i64* %23, align 8, !dbg !3779
  br label %186, !dbg !3780

174:                                              ; preds = %77
  %175 = ptrtoint i8* %80 to i32, !dbg !3781
  %176 = add i32 %175, 7, !dbg !3781
  %177 = and i32 %176, -8, !dbg !3781
  %178 = inttoptr i32 %177 to i8*, !dbg !3781
  %179 = getelementptr inbounds i8, i8* %178, i32 8, !dbg !3781
  call void @llvm.dbg.value(metadata i8* %179, metadata !3502, metadata !DIExpression()), !dbg !3660
  call void @llvm.dbg.value(metadata i8* %179, metadata !3502, metadata !DIExpression()), !dbg !3660
  %180 = inttoptr i32 %177 to double*, !dbg !3781
  %181 = load double, double* %180, align 8, !dbg !3781
  store double %181, double* %22, align 8, !dbg !3781
  br label %186

182:                                              ; preds = %77
  %183 = getelementptr inbounds i8, i8* %80, i32 4, !dbg !3785
  call void @llvm.dbg.value(metadata i8* %183, metadata !3502, metadata !DIExpression()), !dbg !3660
  %184 = bitcast i8* %80 to i8**, !dbg !3785
  %185 = load i8*, i8** %184, align 4, !dbg !3785
  store i8* %185, i8** %21, align 8, !dbg !3788
  br label %186, !dbg !3789

186:                                              ; preds = %174, %77, %166, %124, %172, %170, %182, %128, %131
  %187 = phi i8* [ %126, %128 ], [ %126, %131 ], [ %168, %170 ], [ %168, %172 ], [ %183, %182 ], [ %126, %124 ], [ %168, %166 ], [ %80, %77 ], [ %179, %174 ], !dbg !3674
  call void @llvm.dbg.value(metadata i8* %187, metadata !3502, metadata !DIExpression()), !dbg !3660
  %188 = and i24 %78, 3, !dbg !3790
  %189 = icmp eq i24 %188, 0, !dbg !3790
  br i1 %189, label %194, label %190, !dbg !3790

190:                                              ; preds = %186
  %191 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %33, i8* noundef nonnull %42) #25, !dbg !3791
  call void @llvm.dbg.value(metadata i32 %191, metadata !3578, metadata !DIExpression()), !dbg !3792
  %192 = icmp slt i32 %191, 0, !dbg !3793
  %193 = add i32 %191, %32, !dbg !3791
  call void @llvm.dbg.value(metadata i32 undef, metadata !3508, metadata !DIExpression()), !dbg !3660
  br i1 %192, label %475, label %477

194:                                              ; preds = %186
  %195 = load i8, i8* %24, align 1, !dbg !3795
  switch i8 %195, label %477 [
    i8 37, label %196
    i8 115, label %200
    i8 99, label %207
    i8 100, label %210
    i8 105, label %210
    i8 111, label %224
    i8 117, label %224
    i8 120, label %224
    i8 88, label %224
    i8 112, label %240
    i8 110, label %250
    i8 97, label %252
    i8 65, label %252
    i8 101, label %252
    i8 69, label %252
    i8 102, label %252
    i8 70, label %252
    i8 103, label %252
    i8 71, label %252
  ], !dbg !3796

196:                                              ; preds = %194
  %197 = call i32 %13(i32 noundef 37, i8* noundef %1) #24, !dbg !3797
  call void @llvm.dbg.value(metadata i32 %197, metadata !3582, metadata !DIExpression()), !dbg !3798
  %198 = icmp slt i32 %197, 0, !dbg !3799
  %199 = add i32 %32, 1, !dbg !3797
  call void @llvm.dbg.value(metadata i32 undef, metadata !3508, metadata !DIExpression()), !dbg !3660
  br i1 %198, label %475, label %477

200:                                              ; preds = %194
  %201 = load i8*, i8** %21, align 8, !dbg !3801
  call void @llvm.dbg.value(metadata i8* %201, metadata !3570, metadata !DIExpression()), !dbg !3674
  %202 = icmp sgt i32 %86, -1, !dbg !3802
  br i1 %202, label %203, label %205, !dbg !3804

203:                                              ; preds = %200
  %204 = call i32 @strnlen(i8* noundef %201, i32 noundef %86) #24, !dbg !3805
  call void @llvm.dbg.value(metadata i32 %204, metadata !3585, metadata !DIExpression()), !dbg !3807
  br label %257, !dbg !3808

205:                                              ; preds = %200
  %206 = call i32 @strlen(i8* noundef %201) #24, !dbg !3809
  call void @llvm.dbg.value(metadata i32 %206, metadata !3585, metadata !DIExpression()), !dbg !3807
  br label %257

207:                                              ; preds = %194
  call void @llvm.dbg.value(metadata i8* %12, metadata !3570, metadata !DIExpression()), !dbg !3674
  %208 = load i64, i64* %23, align 8, !dbg !3811
  %209 = trunc i64 %208 to i8, !dbg !3812
  store i8 %209, i8* %12, align 1, !dbg !3813
  call void @llvm.dbg.value(metadata i8* %26, metadata !3571, metadata !DIExpression()), !dbg !3674
  store i8* %26, i8** %8, align 4, !dbg !3814
  br label %261, !dbg !3815

210:                                              ; preds = %194, %194
  %211 = and i24 %78, 8, !dbg !3816
  %212 = icmp eq i24 %211, 0, !dbg !3816
  br i1 %212, label %214, label %213, !dbg !3818

213:                                              ; preds = %210
  call void @llvm.dbg.value(metadata i8 43, metadata !3572, metadata !DIExpression()), !dbg !3674
  store i8 43, i8* %9, align 1, !dbg !3819
  br label %218, !dbg !3821

214:                                              ; preds = %210
  %215 = and i24 %78, 16, !dbg !3822
  %216 = icmp eq i24 %215, 0, !dbg !3822
  br i1 %216, label %218, label %217, !dbg !3824

217:                                              ; preds = %214
  call void @llvm.dbg.value(metadata i8 32, metadata !3572, metadata !DIExpression()), !dbg !3674
  store i8 32, i8* %9, align 1, !dbg !3825
  br label %218, !dbg !3827

218:                                              ; preds = %214, %217, %213
  %219 = phi i8 [ 0, %214 ], [ 32, %217 ], [ 43, %213 ]
  %220 = load i64, i64* %23, align 8, !dbg !3828
  call void @llvm.dbg.value(metadata i64 %220, metadata !3509, metadata !DIExpression()), !dbg !3660
  %221 = icmp slt i64 %220, 0, !dbg !3829
  br i1 %221, label %222, label %224, !dbg !3831

222:                                              ; preds = %218
  call void @llvm.dbg.value(metadata i8 45, metadata !3572, metadata !DIExpression()), !dbg !3674
  store i8 45, i8* %9, align 1, !dbg !3832
  %223 = sub nsw i64 0, %220, !dbg !3834
  store i64 %223, i64* %23, align 8, !dbg !3835
  br label %224, !dbg !3836

224:                                              ; preds = %218, %222, %194, %194, %194, %194
  %225 = phi i8 [ %219, %218 ], [ 45, %222 ], [ 0, %194 ], [ 0, %194 ], [ 0, %194 ], [ 0, %194 ]
  %226 = load i64, i64* %23, align 8, !dbg !3837
  call void @llvm.dbg.value(metadata i8* %17, metadata !3571, metadata !DIExpression()), !dbg !3674
  %227 = call fastcc i8* @encode_uint(i64 noundef %226, %struct.conversion* noundef nonnull %15, i8* noundef nonnull %12, i8* noundef nonnull %17) #25, !dbg !3838
  call void @llvm.dbg.value(metadata i8* %227, metadata !3570, metadata !DIExpression()), !dbg !3674
  br label %228, !dbg !3839

228:                                              ; preds = %243, %224
  %229 = phi i8 [ 0, %243 ], [ %225, %224 ]
  %230 = phi i8* [ %246, %243 ], [ %227, %224 ], !dbg !3840
  call void @llvm.dbg.value(metadata i8* %230, metadata !3570, metadata !DIExpression()), !dbg !3674
  call void @llvm.dbg.label(metadata !3659), !dbg !3841
  %231 = icmp sgt i32 %86, -1, !dbg !3842
  br i1 %231, label %232, label %261, !dbg !3843

232:                                              ; preds = %228
  call void @llvm.dbg.value(metadata i8* %17, metadata !3571, metadata !DIExpression()), !dbg !3674
  %233 = ptrtoint i8* %230 to i32, !dbg !3844
  %234 = sub i32 %25, %233, !dbg !3844
  call void @llvm.dbg.value(metadata i32 %234, metadata !3587, metadata !DIExpression()), !dbg !3845
  %235 = load i24, i24* %18, align 8, !dbg !3846
  %236 = and i24 %235, -65, !dbg !3846
  store i24 %236, i24* %18, align 8, !dbg !3846
  %237 = icmp ugt i32 %86, %234, !dbg !3847
  br i1 %237, label %238, label %261, !dbg !3849

238:                                              ; preds = %232
  %239 = sub nsw i32 %86, %234, !dbg !3850
  store i32 %239, i32* %19, align 4, !dbg !3852
  br label %261, !dbg !3853

240:                                              ; preds = %194
  %241 = load i8*, i8** %21, align 8, !dbg !3854
  %242 = icmp eq i8* %241, null, !dbg !3856
  br i1 %242, label %249, label %243, !dbg !3857

243:                                              ; preds = %240
  %244 = ptrtoint i8* %241 to i32, !dbg !3858
  %245 = zext i32 %244 to i64, !dbg !3858
  call void @llvm.dbg.value(metadata i8* %17, metadata !3571, metadata !DIExpression()), !dbg !3674
  %246 = call fastcc i8* @encode_uint(i64 noundef %245, %struct.conversion* noundef nonnull %15, i8* noundef nonnull %12, i8* noundef nonnull %17) #25, !dbg !3860
  call void @llvm.dbg.value(metadata i8* %246, metadata !3570, metadata !DIExpression()), !dbg !3674
  %247 = load i24, i24* %18, align 8, !dbg !3861
  %248 = or i24 %247, 1048576, !dbg !3861
  store i24 %248, i24* %18, align 8, !dbg !3861
  store i8 120, i8* %24, align 1, !dbg !3862
  br label %228, !dbg !3863

249:                                              ; preds = %240
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i32 0, i32 0), metadata !3570, metadata !DIExpression()), !dbg !3674
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i32 0, i32 5), metadata !3571, metadata !DIExpression()), !dbg !3674
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i32 0, i32 5), i8** %8, align 4, !dbg !3864
  br label %261, !dbg !3865

250:                                              ; preds = %194
  %251 = load i8*, i8** %21, align 8, !dbg !3866
  call fastcc void @store_count(%struct.conversion* noundef nonnull %15, i8* noundef %251, i32 noundef %32) #25, !dbg !3869
  br label %477, !dbg !3870

252:                                              ; preds = %194, %194, %194, %194, %194, %194, %194, %194
  %253 = load double, double* %22, align 8, !dbg !3871
  call void @llvm.dbg.value(metadata i8** %8, metadata !3571, metadata !DIExpression(DW_OP_deref)), !dbg !3674
  call void @llvm.dbg.value(metadata i8* %9, metadata !3572, metadata !DIExpression(DW_OP_deref)), !dbg !3674
  %254 = call fastcc i8* @encode_float(double noundef %253, %struct.conversion* noundef nonnull %15, i32 noundef %86, i8* noundef nonnull %9, i8* noundef nonnull %12, i8** noundef nonnull %8) #25, !dbg !3874
  call void @llvm.dbg.value(metadata i8* %12, metadata !3570, metadata !DIExpression()), !dbg !3674
  %255 = load i8*, i8** %8, align 4, !dbg !3875
  %256 = load i8, i8* %9, align 1, !dbg !3876
  br label %261, !dbg !3878

257:                                              ; preds = %203, %205
  %258 = phi i32 [ %204, %203 ], [ %206, %205 ], !dbg !3879
  call void @llvm.dbg.value(metadata i32 %258, metadata !3585, metadata !DIExpression()), !dbg !3807
  %259 = getelementptr inbounds i8, i8* %201, i32 %258, !dbg !3880
  call void @llvm.dbg.value(metadata i8* %259, metadata !3571, metadata !DIExpression()), !dbg !3674
  store i8* %259, i8** %8, align 4, !dbg !3881
  call void @llvm.dbg.value(metadata i32 -1, metadata !3569, metadata !DIExpression()), !dbg !3674
  call void @llvm.dbg.value(metadata i32 %32, metadata !3508, metadata !DIExpression()), !dbg !3660
  call void @llvm.dbg.value(metadata i8* %201, metadata !3570, metadata !DIExpression()), !dbg !3674
  %260 = icmp eq i8* %201, null, !dbg !3882
  br i1 %260, label %477, label %261, !dbg !3884, !llvm.loop !3670

261:                                              ; preds = %232, %238, %207, %249, %228, %252, %257
  %262 = phi i8 [ 0, %257 ], [ %229, %232 ], [ %229, %238 ], [ 0, %207 ], [ 0, %249 ], [ %229, %228 ], [ %256, %252 ], !dbg !3876
  %263 = phi i8* [ %259, %257 ], [ %17, %232 ], [ %17, %238 ], [ %26, %207 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i32 0, i32 5), %249 ], [ %17, %228 ], [ %255, %252 ], !dbg !3875
  %264 = phi i8* [ %201, %257 ], [ %230, %232 ], [ %230, %238 ], [ %12, %207 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i32 0, i32 0), %249 ], [ %230, %228 ], [ %12, %252 ]
  call void @llvm.dbg.value(metadata i8* %263, metadata !3571, metadata !DIExpression()), !dbg !3674
  call void @llvm.dbg.value(metadata !DIArgList(i8* %263, i8* %264), metadata !3590, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3674
  call void @llvm.dbg.value(metadata i32 0, metadata !3591, metadata !DIExpression()), !dbg !3674
  call void @llvm.dbg.value(metadata i8 %262, metadata !3572, metadata !DIExpression()), !dbg !3674
  %265 = icmp eq i8 %262, 0, !dbg !3885
  call void @llvm.dbg.value(metadata !DIArgList(i8* %263, i1 %265, i8* %264), metadata !3590, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3674
  %266 = load i24, i24* %18, align 8, !dbg !3886
  call void @llvm.dbg.value(metadata i32 undef, metadata !3590, metadata !DIExpression()), !dbg !3674
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !3590, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3674
  call void @llvm.dbg.value(metadata i32 undef, metadata !3590, metadata !DIExpression()), !dbg !3674
  %267 = icmp sgt i32 %61, 0, !dbg !3888
  br i1 %267, label %268, label %318, !dbg !3889

268:                                              ; preds = %261
  %269 = and i24 %266, 1048576, !dbg !3886
  %270 = icmp eq i24 %269, 0, !dbg !3886
  %271 = ptrtoint i8* %263 to i32, !dbg !3890
  call void @llvm.dbg.value(metadata !DIArgList(i32 %271, i1 %265, i8* %264), metadata !3590, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3674
  %272 = ptrtoint i8* %264 to i32, !dbg !3890
  call void @llvm.dbg.value(metadata !DIArgList(i8* %263, i1 %265, i32 %272), metadata !3590, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3674
  call void @llvm.dbg.value(metadata !DIArgList(i32 %271, i1 %265, i32 %272), metadata !3590, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3674
  %273 = xor i1 %265, true, !dbg !3891
  call void @llvm.dbg.value(metadata !DIArgList(i8* %263, i1 %273, i8* %264), metadata !3590, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3674
  %274 = sext i1 %273 to i32, !dbg !3891
  call void @llvm.dbg.value(metadata !DIArgList(i8* %263, i1 %273, i8* %264), metadata !3590, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3674
  call void @llvm.dbg.value(metadata !DIArgList(i32 %271, i1 %273, i32 %272), metadata !3590, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3674
  %275 = lshr i24 %266, 19, !dbg !3892
  %276 = and i24 %275, 1, !dbg !3892
  %277 = select i1 %270, i24 %276, i24 2, !dbg !3892
  %278 = zext i24 %277 to i32, !dbg !3892
  %279 = add i32 %272, %274, !dbg !3892
  %280 = add i32 %271, %278, !dbg !3892
  call void @llvm.dbg.value(metadata !DIArgList(i32 %271, i32 undef, i32 %278, i1 %273, i32 %272), metadata !3590, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3674
  %281 = and i24 %266, 4194304, !dbg !3893
  %282 = icmp eq i24 %281, 0, !dbg !3893
  %283 = load i32, i32* %19, align 4, !dbg !3895
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %283), metadata !3590, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3674
  call void @llvm.dbg.value(metadata i32 undef, metadata !3590, metadata !DIExpression()), !dbg !3674
  %284 = load i32, i32* %20, align 8, !dbg !3896
  %285 = select i1 %282, i32 0, i32 %284, !dbg !3896
  call void @llvm.dbg.value(metadata i32 undef, metadata !3590, metadata !DIExpression()), !dbg !3674
  %286 = add i32 %279, %61, !dbg !3896
  %287 = add i32 %280, %283, !dbg !3896
  %288 = add i32 %287, %285, !dbg !3897
  %289 = sub i32 %286, %288, !dbg !3897
  call void @llvm.dbg.value(metadata i32 %289, metadata !3568, metadata !DIExpression()), !dbg !3674
  %290 = and i24 %266, 4, !dbg !3898
  %291 = icmp eq i24 %290, 0, !dbg !3898
  br i1 %291, label %292, label %318, !dbg !3899

292:                                              ; preds = %268
  call void @llvm.dbg.value(metadata i8 32, metadata !3592, metadata !DIExpression()), !dbg !3900
  %293 = and i24 %266, 64, !dbg !3901
  %294 = icmp eq i24 %293, 0, !dbg !3901
  %295 = select i1 %294, i1 true, i1 %265, !dbg !3902
  %296 = select i1 %294, i32 32, i32 48, !dbg !3902
  br i1 %295, label %303, label %297, !dbg !3902

297:                                              ; preds = %292
  %298 = zext i8 %262 to i32, !dbg !3903
  %299 = call i32 %13(i32 noundef %298, i8* noundef %1) #24, !dbg !3904
  call void @llvm.dbg.value(metadata i32 %299, metadata !3597, metadata !DIExpression()), !dbg !3905
  %300 = icmp slt i32 %299, 0, !dbg !3906
  call void @llvm.dbg.value(metadata i32 undef, metadata !3508, metadata !DIExpression()), !dbg !3660
  br i1 %300, label %475, label %301

301:                                              ; preds = %297
  %302 = add i32 %32, 1, !dbg !3904
  call void @llvm.dbg.value(metadata i8 0, metadata !3572, metadata !DIExpression()), !dbg !3674
  store i8 0, i8* %9, align 1, !dbg !3908
  br label %303, !dbg !3909

303:                                              ; preds = %292, %301
  %304 = phi i8 [ %262, %292 ], [ 0, %301 ]
  %305 = phi i32 [ %296, %292 ], [ 48, %301 ]
  %306 = phi i32 [ %32, %292 ], [ %302, %301 ], !dbg !3664
  call void @llvm.dbg.value(metadata i32 %306, metadata !3508, metadata !DIExpression()), !dbg !3660
  call void @llvm.dbg.value(metadata i8 undef, metadata !3592, metadata !DIExpression()), !dbg !3900
  %307 = call i32 @llvm.smin.i32(i32 %289, i32 0), !dbg !3910
  %308 = add i32 %307, -1, !dbg !3910
  br label %309, !dbg !3910

309:                                              ; preds = %313, %303
  %310 = phi i32 [ %289, %303 ], [ %314, %313 ], !dbg !3911
  %311 = phi i32 [ %306, %303 ], [ %317, %313 ], !dbg !3664
  call void @llvm.dbg.value(metadata i32 %311, metadata !3508, metadata !DIExpression()), !dbg !3660
  call void @llvm.dbg.value(metadata i32 %310, metadata !3568, metadata !DIExpression()), !dbg !3674
  call void @llvm.dbg.value(metadata i32 %310, metadata !3568, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3674
  %312 = icmp sgt i32 %310, 0, !dbg !3912
  br i1 %312, label %313, label %318, !dbg !3910

313:                                              ; preds = %309
  %314 = add nsw i32 %310, -1, !dbg !3913
  call void @llvm.dbg.value(metadata i32 %314, metadata !3568, metadata !DIExpression()), !dbg !3674
  %315 = call i32 %13(i32 noundef %305, i8* noundef %1) #24, !dbg !3914
  call void @llvm.dbg.value(metadata i32 %315, metadata !3603, metadata !DIExpression()), !dbg !3915
  %316 = icmp slt i32 %315, 0, !dbg !3916
  %317 = add i32 %311, 1, !dbg !3914
  call void @llvm.dbg.value(metadata i32 undef, metadata !3508, metadata !DIExpression()), !dbg !3660
  br i1 %316, label %475, label %309, !llvm.loop !3918

318:                                              ; preds = %309, %268, %261
  %319 = phi i8 [ %262, %268 ], [ %262, %261 ], [ %304, %309 ], !dbg !3920
  %320 = phi i32 [ %289, %268 ], [ %61, %261 ], [ %308, %309 ], !dbg !3674
  %321 = phi i32 [ %32, %268 ], [ %32, %261 ], [ %311, %309 ], !dbg !3664
  call void @llvm.dbg.value(metadata i32 %321, metadata !3508, metadata !DIExpression()), !dbg !3660
  call void @llvm.dbg.value(metadata i32 %320, metadata !3568, metadata !DIExpression()), !dbg !3674
  call void @llvm.dbg.value(metadata i8 %319, metadata !3572, metadata !DIExpression()), !dbg !3674
  %322 = icmp eq i8 %319, 0, !dbg !3921
  br i1 %322, label %328, label %323, !dbg !3922

323:                                              ; preds = %318
  %324 = zext i8 %319 to i32, !dbg !3920
  %325 = call i32 %13(i32 noundef %324, i8* noundef %1) #24, !dbg !3923
  call void @llvm.dbg.value(metadata i32 %325, metadata !3606, metadata !DIExpression()), !dbg !3924
  %326 = icmp slt i32 %325, 0, !dbg !3925
  %327 = add i32 %321, 1, !dbg !3923
  call void @llvm.dbg.value(metadata i32 undef, metadata !3508, metadata !DIExpression()), !dbg !3660
  br i1 %326, label %475, label %328

328:                                              ; preds = %323, %318
  %329 = phi i32 [ %327, %323 ], [ %321, %318 ], !dbg !3664
  call void @llvm.dbg.value(metadata i32 %329, metadata !3508, metadata !DIExpression()), !dbg !3660
  %330 = and i24 %266, 4194304, !dbg !3927
  %331 = icmp eq i24 %330, 0, !dbg !3927
  br i1 %331, label %427, label %332, !dbg !3928

332:                                              ; preds = %328
  call void @llvm.dbg.value(metadata i8* %201, metadata !3610, metadata !DIExpression()), !dbg !3929
  %333 = and i24 %266, 32768, !dbg !3930
  %334 = icmp eq i24 %333, 0, !dbg !3930
  br i1 %334, label %346, label %335, !dbg !3931

335:                                              ; preds = %332, %340
  %336 = phi i8* [ %342, %340 ], [ %264, %332 ], !dbg !3929
  %337 = phi i32 [ %345, %340 ], [ %329, %332 ], !dbg !3664
  call void @llvm.dbg.value(metadata i32 %337, metadata !3508, metadata !DIExpression()), !dbg !3660
  call void @llvm.dbg.value(metadata i8* %336, metadata !3610, metadata !DIExpression()), !dbg !3929
  %338 = load i8, i8* %336, align 1, !dbg !3932
  %339 = icmp eq i8 %338, 112, !dbg !3933
  br i1 %339, label %409, label %340, !dbg !3934

340:                                              ; preds = %335
  %341 = zext i8 %338 to i32, !dbg !3932
  %342 = getelementptr inbounds i8, i8* %336, i32 1, !dbg !3935
  call void @llvm.dbg.value(metadata i8* %342, metadata !3610, metadata !DIExpression()), !dbg !3929
  %343 = call i32 %13(i32 noundef %341, i8* noundef %1) #24, !dbg !3935
  call void @llvm.dbg.value(metadata i32 %343, metadata !3613, metadata !DIExpression()), !dbg !3936
  %344 = icmp slt i32 %343, 0, !dbg !3937
  %345 = add i32 %337, 1, !dbg !3935
  call void @llvm.dbg.value(metadata i32 undef, metadata !3508, metadata !DIExpression()), !dbg !3660
  br i1 %344, label %475, label %335, !llvm.loop !3939

346:                                              ; preds = %332, %353
  %347 = phi i8* [ %354, %353 ], [ %264, %332 ], !dbg !3929
  %348 = phi i32 [ %357, %353 ], [ %329, %332 ], !dbg !3664
  call void @llvm.dbg.value(metadata i32 %348, metadata !3508, metadata !DIExpression()), !dbg !3660
  call void @llvm.dbg.value(metadata i8* %347, metadata !3610, metadata !DIExpression()), !dbg !3929
  %349 = load i8, i8* %347, align 1, !dbg !3941
  %350 = zext i8 %349 to i32, !dbg !3942
  %351 = call fastcc i32 @isdigit(i32 noundef %350) #25, !dbg !3943
  %352 = icmp eq i32 %351, 0, !dbg !3944
  br i1 %352, label %358, label %353, !dbg !3944

353:                                              ; preds = %346
  %354 = getelementptr inbounds i8, i8* %347, i32 1, !dbg !3945
  call void @llvm.dbg.value(metadata i8* %354, metadata !3610, metadata !DIExpression()), !dbg !3929
  %355 = call i32 %13(i32 noundef %350, i8* noundef %1) #24, !dbg !3945
  call void @llvm.dbg.value(metadata i32 %355, metadata !3618, metadata !DIExpression()), !dbg !3946
  %356 = icmp slt i32 %355, 0, !dbg !3947
  %357 = add i32 %348, 1, !dbg !3945
  call void @llvm.dbg.value(metadata i32 undef, metadata !3508, metadata !DIExpression()), !dbg !3660
  br i1 %356, label %475, label %346, !llvm.loop !3949

358:                                              ; preds = %346
  %359 = load i32, i32* %19, align 4, !dbg !3951
  call void @llvm.dbg.value(metadata i32 %359, metadata !3591, metadata !DIExpression()), !dbg !3674
  %360 = and i24 %266, 2097152, !dbg !3952
  %361 = icmp eq i24 %360, 0, !dbg !3952
  br i1 %361, label %362, label %376, !dbg !3953

362:                                              ; preds = %358
  %363 = call i32 @llvm.smin.i32(i32 %359, i32 0), !dbg !3954
  %364 = add i32 %363, -1, !dbg !3954
  br label %365, !dbg !3954

365:                                              ; preds = %362, %369
  %366 = phi i32 [ %370, %369 ], [ %359, %362 ], !dbg !3955
  %367 = phi i32 [ %373, %369 ], [ %348, %362 ], !dbg !3664
  call void @llvm.dbg.value(metadata i32 %367, metadata !3508, metadata !DIExpression()), !dbg !3660
  call void @llvm.dbg.value(metadata i32 %366, metadata !3591, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3674
  %368 = icmp sgt i32 %366, 0, !dbg !3956
  br i1 %368, label %369, label %374, !dbg !3954

369:                                              ; preds = %365
  %370 = add nsw i32 %366, -1, !dbg !3957
  call void @llvm.dbg.value(metadata i32 %370, metadata !3591, metadata !DIExpression()), !dbg !3674
  %371 = call i32 %13(i32 noundef 48, i8* noundef %1) #24, !dbg !3958
  call void @llvm.dbg.value(metadata i32 %371, metadata !3622, metadata !DIExpression()), !dbg !3959
  %372 = icmp slt i32 %371, 0, !dbg !3960
  %373 = add i32 %367, 1, !dbg !3958
  call void @llvm.dbg.value(metadata i32 undef, metadata !3508, metadata !DIExpression()), !dbg !3660
  br i1 %372, label %475, label %365, !llvm.loop !3962

374:                                              ; preds = %365
  %375 = load i8, i8* %347, align 1, !dbg !3964
  br label %376, !dbg !3964

376:                                              ; preds = %374, %358
  %377 = phi i8 [ %349, %358 ], [ %375, %374 ], !dbg !3964
  %378 = phi i32 [ %359, %358 ], [ %364, %374 ], !dbg !3955
  %379 = phi i32 [ %348, %358 ], [ %367, %374 ], !dbg !3664
  call void @llvm.dbg.value(metadata i32 %379, metadata !3508, metadata !DIExpression()), !dbg !3660
  call void @llvm.dbg.value(metadata i32 %378, metadata !3591, metadata !DIExpression()), !dbg !3674
  %380 = icmp eq i8 %377, 46, !dbg !3965
  br i1 %380, label %384, label %381, !dbg !3966

381:                                              ; preds = %388, %376
  %382 = phi i8* [ %347, %376 ], [ %385, %388 ]
  %383 = phi i32 [ %379, %376 ], [ %391, %388 ]
  br label %397, !dbg !3967

384:                                              ; preds = %376
  %385 = getelementptr inbounds i8, i8* %347, i32 1, !dbg !3968
  call void @llvm.dbg.value(metadata i8* %385, metadata !3610, metadata !DIExpression()), !dbg !3929
  %386 = call i32 %13(i32 noundef 46, i8* noundef %1) #24, !dbg !3968
  call void @llvm.dbg.value(metadata i32 %386, metadata !3627, metadata !DIExpression()), !dbg !3969
  %387 = icmp slt i32 %386, 0, !dbg !3970
  call void @llvm.dbg.value(metadata i32 undef, metadata !3508, metadata !DIExpression()), !dbg !3660
  br i1 %387, label %475, label %388

388:                                              ; preds = %384, %393
  %389 = phi i32 [ %394, %393 ], [ %378, %384 ], !dbg !3955
  %390 = phi i32 [ %391, %393 ], [ %379, %384 ]
  %391 = add i32 %390, 1, !dbg !3664
  call void @llvm.dbg.value(metadata i32 %391, metadata !3508, metadata !DIExpression()), !dbg !3660
  call void @llvm.dbg.value(metadata i32 %389, metadata !3591, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3674
  %392 = icmp sgt i32 %389, 0, !dbg !3972
  br i1 %392, label %393, label %381, !dbg !3973

393:                                              ; preds = %388
  %394 = add nsw i32 %389, -1, !dbg !3974
  call void @llvm.dbg.value(metadata i32 %394, metadata !3591, metadata !DIExpression()), !dbg !3674
  %395 = call i32 %13(i32 noundef 48, i8* noundef %1) #24, !dbg !3975
  call void @llvm.dbg.value(metadata i32 %395, metadata !3631, metadata !DIExpression()), !dbg !3976
  %396 = icmp slt i32 %395, 0, !dbg !3977
  call void @llvm.dbg.value(metadata i32 undef, metadata !3508, metadata !DIExpression()), !dbg !3660
  br i1 %396, label %475, label %388, !llvm.loop !3979

397:                                              ; preds = %381, %404
  %398 = phi i8* [ %405, %404 ], [ %382, %381 ], !dbg !3955
  %399 = phi i32 [ %408, %404 ], [ %383, %381 ], !dbg !3664
  call void @llvm.dbg.value(metadata i32 %399, metadata !3508, metadata !DIExpression()), !dbg !3660
  call void @llvm.dbg.value(metadata i8* %398, metadata !3610, metadata !DIExpression()), !dbg !3929
  %400 = load i8, i8* %398, align 1, !dbg !3981
  %401 = zext i8 %400 to i32, !dbg !3982
  %402 = call fastcc i32 @isdigit(i32 noundef %401) #25, !dbg !3983
  %403 = icmp eq i32 %402, 0, !dbg !3967
  br i1 %403, label %409, label %404, !dbg !3967

404:                                              ; preds = %397
  %405 = getelementptr inbounds i8, i8* %398, i32 1, !dbg !3984
  call void @llvm.dbg.value(metadata i8* %405, metadata !3610, metadata !DIExpression()), !dbg !3929
  %406 = call i32 %13(i32 noundef %401, i8* noundef %1) #24, !dbg !3984
  call void @llvm.dbg.value(metadata i32 %406, metadata !3634, metadata !DIExpression()), !dbg !3985
  %407 = icmp slt i32 %406, 0, !dbg !3986
  %408 = add i32 %399, 1, !dbg !3984
  call void @llvm.dbg.value(metadata i32 undef, metadata !3508, metadata !DIExpression()), !dbg !3660
  br i1 %407, label %475, label %397, !llvm.loop !3988

409:                                              ; preds = %335, %397
  %410 = phi i8* [ %398, %397 ], [ %336, %335 ], !dbg !3929
  %411 = phi i32 [ %399, %397 ], [ %337, %335 ], !dbg !3664
  call void @llvm.dbg.value(metadata i32 %411, metadata !3508, metadata !DIExpression()), !dbg !3660
  call void @llvm.dbg.value(metadata i8* %410, metadata !3610, metadata !DIExpression()), !dbg !3929
  %412 = load i32, i32* %20, align 8, !dbg !3990
  call void @llvm.dbg.value(metadata i32 %412, metadata !3591, metadata !DIExpression()), !dbg !3674
  br label %413, !dbg !3991

413:                                              ; preds = %417, %409
  %414 = phi i32 [ %412, %409 ], [ %418, %417 ], !dbg !3929
  %415 = phi i32 [ %411, %409 ], [ %421, %417 ], !dbg !3664
  call void @llvm.dbg.value(metadata i32 %415, metadata !3508, metadata !DIExpression()), !dbg !3660
  call void @llvm.dbg.value(metadata i32 %414, metadata !3591, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3674
  %416 = icmp sgt i32 %414, 0, !dbg !3992
  br i1 %416, label %417, label %422, !dbg !3991

417:                                              ; preds = %413
  %418 = add nsw i32 %414, -1, !dbg !3993
  call void @llvm.dbg.value(metadata i32 %418, metadata !3591, metadata !DIExpression()), !dbg !3674
  %419 = call i32 %13(i32 noundef 48, i8* noundef %1) #24, !dbg !3994
  call void @llvm.dbg.value(metadata i32 %419, metadata !3637, metadata !DIExpression()), !dbg !3995
  %420 = icmp slt i32 %419, 0, !dbg !3996
  %421 = add i32 %415, 1, !dbg !3994
  call void @llvm.dbg.value(metadata i32 undef, metadata !3508, metadata !DIExpression()), !dbg !3660
  br i1 %420, label %475, label %413, !llvm.loop !3998

422:                                              ; preds = %413
  call void @llvm.dbg.value(metadata i8* %263, metadata !3571, metadata !DIExpression()), !dbg !3674
  %423 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %410, i8* noundef %263) #25, !dbg !4000
  call void @llvm.dbg.value(metadata i32 %423, metadata !3640, metadata !DIExpression()), !dbg !4001
  %424 = icmp slt i32 %423, 0, !dbg !4002
  %425 = select i1 %424, i32 0, i32 %423, !dbg !4000
  %426 = add i32 %425, %415, !dbg !4000
  call void @llvm.dbg.value(metadata i32 %426, metadata !3508, metadata !DIExpression()), !dbg !3660
  br i1 %424, label %475, label %463

427:                                              ; preds = %328
  %428 = lshr i24 %266, 20, !dbg !4004
  %429 = lshr i24 %266, 19, !dbg !4005
  %430 = or i24 %428, %429, !dbg !4006
  %431 = and i24 %430, 1, !dbg !4006
  %432 = icmp eq i24 %431, 0, !dbg !4006
  br i1 %432, label %437, label %433, !dbg !4007

433:                                              ; preds = %427
  %434 = call i32 %13(i32 noundef 48, i8* noundef %1) #24, !dbg !4008
  call void @llvm.dbg.value(metadata i32 %434, metadata !3642, metadata !DIExpression()), !dbg !4009
  %435 = icmp slt i32 %434, 0, !dbg !4010
  %436 = add i32 %329, 1, !dbg !4008
  call void @llvm.dbg.value(metadata i32 undef, metadata !3508, metadata !DIExpression()), !dbg !3660
  br i1 %435, label %475, label %437

437:                                              ; preds = %433, %427
  %438 = phi i32 [ %436, %433 ], [ %329, %427 ], !dbg !3664
  call void @llvm.dbg.value(metadata i32 %438, metadata !3508, metadata !DIExpression()), !dbg !3660
  %439 = and i24 %266, 1048576, !dbg !4012
  %440 = icmp eq i24 %439, 0, !dbg !4012
  br i1 %440, label %447, label %441, !dbg !4013

441:                                              ; preds = %437
  %442 = load i8, i8* %24, align 1, !dbg !4014
  %443 = zext i8 %442 to i32, !dbg !4014
  %444 = call i32 %13(i32 noundef %443, i8* noundef %1) #24, !dbg !4014
  call void @llvm.dbg.value(metadata i32 %444, metadata !3647, metadata !DIExpression()), !dbg !4015
  %445 = icmp slt i32 %444, 0, !dbg !4016
  %446 = add i32 %438, 1, !dbg !4014
  call void @llvm.dbg.value(metadata i32 undef, metadata !3508, metadata !DIExpression()), !dbg !3660
  br i1 %445, label %475, label %447

447:                                              ; preds = %441, %437
  %448 = phi i32 [ %446, %441 ], [ %438, %437 ], !dbg !3664
  call void @llvm.dbg.value(metadata i32 %448, metadata !3508, metadata !DIExpression()), !dbg !3660
  %449 = load i32, i32* %19, align 4, !dbg !4018
  call void @llvm.dbg.value(metadata i32 %449, metadata !3591, metadata !DIExpression()), !dbg !3674
  br label %450, !dbg !4019

450:                                              ; preds = %454, %447
  %451 = phi i32 [ %449, %447 ], [ %455, %454 ], !dbg !4020
  %452 = phi i32 [ %448, %447 ], [ %458, %454 ], !dbg !3664
  call void @llvm.dbg.value(metadata i32 %452, metadata !3508, metadata !DIExpression()), !dbg !3660
  call void @llvm.dbg.value(metadata i32 %451, metadata !3591, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3674
  %453 = icmp sgt i32 %451, 0, !dbg !4021
  br i1 %453, label %454, label %459, !dbg !4019

454:                                              ; preds = %450
  %455 = add nsw i32 %451, -1, !dbg !4022
  call void @llvm.dbg.value(metadata i32 %455, metadata !3591, metadata !DIExpression()), !dbg !3674
  %456 = call i32 %13(i32 noundef 48, i8* noundef %1) #24, !dbg !4023
  call void @llvm.dbg.value(metadata i32 %456, metadata !3651, metadata !DIExpression()), !dbg !4024
  %457 = icmp slt i32 %456, 0, !dbg !4025
  %458 = add i32 %452, 1, !dbg !4023
  call void @llvm.dbg.value(metadata i32 undef, metadata !3508, metadata !DIExpression()), !dbg !3660
  br i1 %457, label %475, label %450, !llvm.loop !4027

459:                                              ; preds = %450
  call void @llvm.dbg.value(metadata i8* %263, metadata !3571, metadata !DIExpression()), !dbg !3674
  %460 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %264, i8* noundef %263) #25, !dbg !4029
  call void @llvm.dbg.value(metadata i32 %460, metadata !3654, metadata !DIExpression()), !dbg !4030
  %461 = icmp slt i32 %460, 0, !dbg !4031
  %462 = add i32 %460, %452, !dbg !4029
  call void @llvm.dbg.value(metadata i32 undef, metadata !3508, metadata !DIExpression()), !dbg !3660
  br i1 %461, label %475, label %463

463:                                              ; preds = %459, %422
  %464 = phi i32 [ %426, %422 ], [ %462, %459 ], !dbg !3664
  call void @llvm.dbg.value(metadata i32 %464, metadata !3508, metadata !DIExpression()), !dbg !3660
  call void @llvm.dbg.value(metadata i32 %320, metadata !3568, metadata !DIExpression()), !dbg !3674
  %465 = icmp sgt i32 %320, 0, !dbg !4033
  br i1 %465, label %466, label %477, !dbg !4034

466:                                              ; preds = %463
  %467 = add i32 %320, %464, !dbg !4034
  br label %468, !dbg !4034

468:                                              ; preds = %466, %472
  %469 = phi i32 [ %473, %472 ], [ %320, %466 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !3508, metadata !DIExpression()), !dbg !3660
  call void @llvm.dbg.value(metadata i32 %469, metadata !3568, metadata !DIExpression()), !dbg !3674
  %470 = call i32 %13(i32 noundef 32, i8* noundef %1) #24, !dbg !4035
  call void @llvm.dbg.value(metadata i32 %470, metadata !3656, metadata !DIExpression()), !dbg !4036
  %471 = icmp slt i32 %470, 0, !dbg !4037
  br i1 %471, label %475, label %472

472:                                              ; preds = %468
  %473 = add nsw i32 %469, -1, !dbg !4039
  call void @llvm.dbg.value(metadata i32 undef, metadata !3508, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3660
  call void @llvm.dbg.value(metadata i32 %473, metadata !3568, metadata !DIExpression()), !dbg !3674
  %474 = icmp sgt i32 %469, 1, !dbg !4033
  br i1 %474, label %468, label %477, !dbg !4034, !llvm.loop !4040

475:                                              ; preds = %422, %459, %441, %433, %323, %196, %297, %384, %190, %313, %340, %353, %369, %393, %404, %417, %454, %468
  %476 = phi i32 [ %470, %468 ], [ %456, %454 ], [ %419, %417 ], [ %406, %404 ], [ %395, %393 ], [ %371, %369 ], [ %355, %353 ], [ %343, %340 ], [ %315, %313 ], [ %197, %196 ], [ %325, %323 ], [ %434, %433 ], [ %444, %441 ], [ %460, %459 ], [ %423, %422 ], [ %299, %297 ], [ %386, %384 ], [ %191, %190 ]
  call void @llvm.dbg.value(metadata i32 %478, metadata !3508, metadata !DIExpression()), !dbg !3660
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #23, !dbg !3671
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #23, !dbg !3671
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #23, !dbg !3671
  br label %479

477:                                              ; preds = %472, %463, %196, %250, %194, %190, %257
  %478 = phi i32 [ %32, %257 ], [ %193, %190 ], [ %199, %196 ], [ %32, %250 ], [ %32, %194 ], [ %464, %463 ], [ %467, %472 ], !dbg !3664
  call void @llvm.dbg.value(metadata i32 %478, metadata !3508, metadata !DIExpression()), !dbg !3660
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #23, !dbg !3671
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #23, !dbg !3671
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #23, !dbg !3671
  br label %27

479:                                              ; preds = %31, %35, %475
  %480 = phi i32 [ %476, %475 ], [ %32, %31 ], [ %38, %35 ], !dbg !3660
  call void @llvm.lifetime.end.p0i8(i64 25, i8* nonnull %12) #23, !dbg !4042
  ret i32 %480, !dbg !4042
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #10

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !4043 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4047, metadata !DIExpression()), !dbg !4049
  call void @llvm.dbg.value(metadata i8* %1, metadata !4048, metadata !DIExpression()), !dbg !4049
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !4050
  store i24 0, i24* %3, align 4, !dbg !4050
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4050
  store i8 0, i8* %4, align 1, !dbg !4050
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4050
  store i32 0, i32* %5, align 4, !dbg !4050
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4050
  store i32 0, i32* %6, align 4, !dbg !4050
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4051
  call void @llvm.dbg.value(metadata i8* %7, metadata !4048, metadata !DIExpression()), !dbg !4049
  %8 = load i8, i8* %7, align 1, !dbg !4052
  %9 = icmp eq i8 %8, 37, !dbg !4054
  br i1 %9, label %10, label %12, !dbg !4055

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4056
  call void @llvm.dbg.value(metadata i8* %11, metadata !4048, metadata !DIExpression()), !dbg !4049
  store i8 37, i8* %4, align 1, !dbg !4058
  br label %18, !dbg !4059

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #25, !dbg !4060
  call void @llvm.dbg.value(metadata i8* %13, metadata !4048, metadata !DIExpression()), !dbg !4049
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #25, !dbg !4061
  call void @llvm.dbg.value(metadata i8* %14, metadata !4048, metadata !DIExpression()), !dbg !4049
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #25, !dbg !4062
  call void @llvm.dbg.value(metadata i8* %15, metadata !4048, metadata !DIExpression()), !dbg !4049
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #25, !dbg !4063
  call void @llvm.dbg.value(metadata i8* %16, metadata !4048, metadata !DIExpression()), !dbg !4049
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #25, !dbg !4064
  call void @llvm.dbg.value(metadata i8* %17, metadata !4048, metadata !DIExpression()), !dbg !4049
  br label %18, !dbg !4065

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !4049
  ret i8* %19, !dbg !4066
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !4067 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4071, metadata !DIExpression()), !dbg !4078
  call void @llvm.dbg.value(metadata i8* %1, metadata !4072, metadata !DIExpression()), !dbg !4078
  call void @llvm.dbg.value(metadata i8* %2, metadata !4073, metadata !DIExpression()), !dbg !4078
  call void @llvm.dbg.value(metadata i8* %3, metadata !4074, metadata !DIExpression()), !dbg !4078
  call void @llvm.dbg.value(metadata i32 0, metadata !4075, metadata !DIExpression()), !dbg !4078
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !4079

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !4080
  call void @llvm.dbg.value(metadata i32 %9, metadata !4075, metadata !DIExpression()), !dbg !4078
  call void @llvm.dbg.value(metadata i8* %8, metadata !4073, metadata !DIExpression()), !dbg !4078
  %10 = icmp ult i8* %8, %3, !dbg !4081
  br i1 %10, label %11, label %13, !dbg !4082

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !4083
  br label %17, !dbg !4082

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !4084

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !4085
  %16 = icmp eq i8 %15, 0, !dbg !4084
  br i1 %16, label %24, label %17, !dbg !4079

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !4083
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !4086
  call void @llvm.dbg.value(metadata i8* %19, metadata !4073, metadata !DIExpression()), !dbg !4078
  %20 = zext i8 %18 to i32, !dbg !4087
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #24, !dbg !4088
  call void @llvm.dbg.value(metadata i32 %21, metadata !4076, metadata !DIExpression()), !dbg !4089
  %22 = icmp slt i32 %21, 0, !dbg !4090
  %23 = add i32 %9, 1, !dbg !4092
  call void @llvm.dbg.value(metadata i32 undef, metadata !4075, metadata !DIExpression()), !dbg !4078
  br i1 %22, label %24, label %7, !llvm.loop !4093

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !4078
  ret i32 %25, !dbg !4095
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #11 !dbg !4096 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !4100, metadata !DIExpression()), !dbg !4110
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !4101, metadata !DIExpression()), !dbg !4110
  call void @llvm.dbg.value(metadata i8* %2, metadata !4102, metadata !DIExpression()), !dbg !4110
  call void @llvm.dbg.value(metadata i8* %3, metadata !4103, metadata !DIExpression()), !dbg !4110
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !4111
  %6 = load i8, i8* %5, align 1, !dbg !4111
  %7 = zext i8 %6 to i32, !dbg !4112
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #25, !dbg !4113
  %9 = icmp eq i32 %8, 0, !dbg !4113
  call void @llvm.dbg.value(metadata i1 %9, metadata !4104, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4110
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #25, !dbg !4114
  call void @llvm.dbg.value(metadata i32 %10, metadata !4105, metadata !DIExpression()), !dbg !4110
  %11 = ptrtoint i8* %3 to i32, !dbg !4115
  %12 = ptrtoint i8* %2 to i32, !dbg !4115
  %13 = sub i32 %11, %12, !dbg !4115
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !4116
  call void @llvm.dbg.value(metadata i8* %14, metadata !4107, metadata !DIExpression()), !dbg !4110
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !4117

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !4110
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !4100, metadata !DIExpression()), !dbg !4110
  call void @llvm.dbg.value(metadata i8* %18, metadata !4107, metadata !DIExpression()), !dbg !4110
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !4118
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !4119
  call void @llvm.dbg.value(metadata i32 %25, metadata !4108, metadata !DIExpression()), !dbg !4120
  %26 = icmp ult i32 %25, 10, !dbg !4121
  %27 = select i1 %26, i32 48, i32 %16, !dbg !4122
  %28 = add i32 %27, %25, !dbg !4120
  %29 = trunc i32 %28 to i8, !dbg !4122
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !4123
  call void @llvm.dbg.value(metadata i8* %30, metadata !4107, metadata !DIExpression()), !dbg !4110
  store i8 %29, i8* %30, align 1, !dbg !4124
  call void @llvm.dbg.value(metadata i64 %22, metadata !4100, metadata !DIExpression()), !dbg !4110
  %31 = icmp uge i64 %19, %15, !dbg !4125
  %32 = icmp ugt i8* %30, %2, !dbg !4126
  %33 = and i1 %31, %32, !dbg !4126
  br i1 %33, label %17, label %34, !dbg !4127, !llvm.loop !4128

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !4130
  %36 = load i24, i24* %35, align 4, !dbg !4130
  %37 = and i24 %36, 32, !dbg !4130
  %38 = icmp eq i24 %37, 0, !dbg !4130
  br i1 %38, label %44, label %39, !dbg !4132

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !4133

40:                                               ; preds = %39
  br label %41, !dbg !4135

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !4139
  store i24 %43, i24* %35, align 4, !dbg !4139
  br label %44, !dbg !4140

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !4140
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #7 !dbg !4141 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4147, metadata !DIExpression()), !dbg !4150
  call void @llvm.dbg.value(metadata i8* %1, metadata !4148, metadata !DIExpression()), !dbg !4150
  call void @llvm.dbg.value(metadata i32 %2, metadata !4149, metadata !DIExpression()), !dbg !4150
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !4151
  %5 = load i24, i24* %4, align 4, !dbg !4151
  %6 = lshr i24 %5, 11, !dbg !4151
  %7 = and i24 %6, 15, !dbg !4151
  %8 = zext i24 %7 to i32, !dbg !4151
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !4152

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !4153
  store i32 %2, i32* %10, align 4, !dbg !4155
  br label %28, !dbg !4156

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !4157
  store i8 %12, i8* %1, align 1, !dbg !4158
  br label %28, !dbg !4159

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !4160
  %15 = bitcast i8* %1 to i16*, !dbg !4161
  store i16 %14, i16* %15, align 2, !dbg !4162
  br label %28, !dbg !4163

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !4164
  store i32 %2, i32* %17, align 4, !dbg !4165
  br label %28, !dbg !4166

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !4167
  %20 = bitcast i8* %1 to i64*, !dbg !4168
  store i64 %19, i64* %20, align 8, !dbg !4169
  br label %28, !dbg !4170

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !4171
  %23 = bitcast i8* %1 to i64*, !dbg !4172
  store i64 %22, i64* %23, align 8, !dbg !4173
  br label %28, !dbg !4174

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !4175
  store i32 %2, i32* %25, align 4, !dbg !4176
  br label %28, !dbg !4177

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !4178
  store i32 %2, i32* %27, align 4, !dbg !4179
  br label %28, !dbg !4180

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !4181
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @encode_float(double noundef %0, %struct.conversion* nocapture noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3, i8* noundef returned %4, i8** nocapture noundef writeonly %5) unnamed_addr #1 !dbg !4182 {
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  call void @llvm.dbg.value(metadata double %0, metadata !4187, metadata !DIExpression()), !dbg !4208
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !4188, metadata !DIExpression()), !dbg !4208
  call void @llvm.dbg.value(metadata i32 %2, metadata !4189, metadata !DIExpression()), !dbg !4208
  call void @llvm.dbg.value(metadata i8* %3, metadata !4190, metadata !DIExpression()), !dbg !4208
  call void @llvm.dbg.value(metadata i8* %4, metadata !4191, metadata !DIExpression()), !dbg !4208
  call void @llvm.dbg.value(metadata i8** %5, metadata !4192, metadata !DIExpression()), !dbg !4208
  %10 = bitcast double %0 to i64, !dbg !4209
  call void @llvm.dbg.value(metadata i64 %10, metadata !4193, metadata !DIExpression()), !dbg !4208
  call void @llvm.dbg.value(metadata i8 0, metadata !4198, metadata !DIExpression()), !dbg !4208
  call void @llvm.dbg.value(metadata i8* %4, metadata !4199, metadata !DIExpression()), !dbg !4208
  %11 = icmp sgt i64 %10, -1, !dbg !4210
  br i1 %11, label %12, label %20, !dbg !4212

12:                                               ; preds = %6
  %13 = bitcast %struct.conversion* %1 to i24*, !dbg !4213
  %14 = load i24, i24* %13, align 4, !dbg !4213
  %15 = and i24 %14, 8, !dbg !4213
  %16 = icmp eq i24 %15, 0, !dbg !4213
  br i1 %16, label %17, label %20, !dbg !4215

17:                                               ; preds = %12
  %18 = and i24 %14, 16, !dbg !4216
  %19 = icmp eq i24 %18, 0, !dbg !4216
  br i1 %19, label %22, label %20, !dbg !4218

20:                                               ; preds = %17, %12, %6
  %21 = phi i8 [ 45, %6 ], [ 43, %12 ], [ 32, %17 ]
  store i8 %21, i8* %3, align 1, !dbg !4219
  br label %22, !dbg !4220

22:                                               ; preds = %20, %17
  %23 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !4220
  %24 = load i8, i8* %23, align 1, !dbg !4220
  call void @llvm.dbg.value(metadata i8 %24, metadata !4200, metadata !DIExpression()), !dbg !4208
  %25 = lshr i64 %10, 52, !dbg !4221
  %26 = trunc i64 %25 to i32, !dbg !4222
  %27 = and i32 %26, 2047, !dbg !4222
  call void @llvm.dbg.value(metadata i32 %27, metadata !4201, metadata !DIExpression()), !dbg !4208
  %28 = bitcast i64* %7 to i8*, !dbg !4223
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #23, !dbg !4223
  %29 = and i64 %10, 4503599627370495, !dbg !4224
  call void @llvm.dbg.value(metadata i64 %29, metadata !4202, metadata !DIExpression()), !dbg !4208
  %30 = icmp eq i32 %27, 0, !dbg !4225
  %31 = icmp ne i64 %29, 0, !dbg !4226
  %32 = and i1 %31, %30, !dbg !4226
  call void @llvm.dbg.value(metadata i1 %32, metadata !4203, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4208
  %33 = icmp eq i32 %27, 2047, !dbg !4227
  br i1 %33, label %34, label %56, !dbg !4229

34:                                               ; preds = %22
  %35 = icmp eq i64 %29, 0, !dbg !4230
  %36 = zext i8 %24 to i32, !dbg !4233
  %37 = tail call fastcc i32 @isupper(i32 noundef %36) #25, !dbg !4233
  %38 = icmp eq i32 %37, 0, !dbg !4233
  %39 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !4233
  call void @llvm.dbg.value(metadata i8* %39, metadata !4199, metadata !DIExpression()), !dbg !4208
  call void @llvm.dbg.value(metadata i8* %39, metadata !4199, metadata !DIExpression()), !dbg !4208
  call void @llvm.dbg.value(metadata i8* %39, metadata !4199, metadata !DIExpression()), !dbg !4208
  call void @llvm.dbg.value(metadata i8* %39, metadata !4199, metadata !DIExpression()), !dbg !4208
  br i1 %35, label %40, label %44, !dbg !4234

40:                                               ; preds = %34
  call void @llvm.dbg.value(metadata i8* undef, metadata !4199, metadata !DIExpression()), !dbg !4208
  call void @llvm.dbg.value(metadata i8* undef, metadata !4199, metadata !DIExpression()), !dbg !4208
  call void @llvm.dbg.value(metadata i8* %4, metadata !4199, metadata !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value)), !dbg !4208
  call void @llvm.dbg.value(metadata i8* %4, metadata !4199, metadata !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value)), !dbg !4208
  %41 = select i1 %38, i8 105, i8 73
  %42 = select i1 %38, i8 110, i8 78
  %43 = select i1 %38, i8 102, i8 70
  br label %47

44:                                               ; preds = %34
  %45 = select i1 %38, i8 110, i8 78
  %46 = select i1 %38, i8 97, i8 65
  br label %47

47:                                               ; preds = %44, %40
  %48 = phi i8 [ %41, %40 ], [ %45, %44 ]
  %49 = phi i8 [ %42, %40 ], [ %46, %44 ]
  %50 = phi i8 [ %43, %40 ], [ %45, %44 ]
  store i8 %48, i8* %4, align 1, !dbg !4233
  %51 = getelementptr inbounds i8, i8* %4, i32 2, !dbg !4233
  store i8 %49, i8* %39, align 1, !dbg !4233
  store i8 %50, i8* %51, align 1, !dbg !4233
  %52 = getelementptr inbounds i8, i8* %4, i32 3, !dbg !4233
  call void @llvm.dbg.value(metadata i8* %52, metadata !4199, metadata !DIExpression()), !dbg !4208
  %53 = bitcast %struct.conversion* %1 to i24*, !dbg !4235
  %54 = load i24, i24* %53, align 4, !dbg !4236
  %55 = and i24 %54, -65, !dbg !4236
  store i24 %55, i24* %53, align 4, !dbg !4236
  store i8* %52, i8** %5, align 4, !dbg !4237
  br label %302, !dbg !4238

56:                                               ; preds = %22
  %57 = icmp eq i8 %24, 70, !dbg !4239
  %58 = select i1 %57, i8 102, i8 %24, !dbg !4241
  call void @llvm.dbg.value(metadata i8 %58, metadata !4200, metadata !DIExpression()), !dbg !4208
  %59 = shl nuw nsw i64 %29, 11, !dbg !4242
  call void @llvm.dbg.value(metadata i64 %59, metadata !4202, metadata !DIExpression()), !dbg !4208
  %60 = zext i32 %27 to i64, !dbg !4243
  %61 = or i64 %59, %60, !dbg !4245
  %62 = icmp eq i64 %61, 0, !dbg !4246
  br i1 %62, label %80, label %63, !dbg !4247

63:                                               ; preds = %56
  br i1 %32, label %64, label %70, !dbg !4248

64:                                               ; preds = %63, %64
  %65 = phi i64 [ %67, %64 ], [ %59, %63 ], !dbg !4208
  %66 = phi i32 [ %69, %64 ], [ 0, %63 ], !dbg !4208
  call void @llvm.dbg.value(metadata i32 %66, metadata !4201, metadata !DIExpression()), !dbg !4208
  call void @llvm.dbg.value(metadata i64 %65, metadata !4202, metadata !DIExpression()), !dbg !4208
  %67 = shl nuw i64 %65, 1, !dbg !4250
  call void @llvm.dbg.value(metadata i64 %67, metadata !4202, metadata !DIExpression()), !dbg !4208
  %68 = icmp sgt i64 %67, -1, !dbg !4253
  %69 = add nsw i32 %66, -1, !dbg !4254
  call void @llvm.dbg.value(metadata i32 %69, metadata !4201, metadata !DIExpression()), !dbg !4208
  br i1 %68, label %64, label %70, !dbg !4256, !llvm.loop !4257

70:                                               ; preds = %64, %63
  %71 = phi i64 [ %59, %63 ], [ %67, %64 ], !dbg !4259
  %72 = phi i32 [ %27, %63 ], [ %66, %64 ], !dbg !4260
  call void @llvm.dbg.value(metadata i32 %72, metadata !4201, metadata !DIExpression()), !dbg !4208
  %73 = add nsw i32 %72, -1022, !dbg !4261
  call void @llvm.dbg.value(metadata i32 %73, metadata !4201, metadata !DIExpression()), !dbg !4208
  call void @llvm.dbg.value(metadata i64 %71, metadata !4202, metadata !DIExpression()), !dbg !4208
  %74 = or i64 %71, -9223372036854775808, !dbg !4259
  call void @llvm.dbg.value(metadata i64 %74, metadata !4202, metadata !DIExpression()), !dbg !4208
  call void @llvm.dbg.value(metadata i32 0, metadata !4204, metadata !DIExpression()), !dbg !4208
  %75 = icmp slt i32 %72, 1020, !dbg !4262
  br i1 %75, label %76, label %80, !dbg !4263

76:                                               ; preds = %70, %93
  %77 = phi i32 [ %96, %93 ], [ 0, %70 ]
  %78 = phi i32 [ %95, %93 ], [ %73, %70 ]
  %79 = phi i64 [ %94, %93 ], [ %74, %70 ]
  call void @llvm.dbg.value(metadata i32 %77, metadata !4204, metadata !DIExpression()), !dbg !4208
  call void @llvm.dbg.value(metadata i32 %78, metadata !4201, metadata !DIExpression()), !dbg !4208
  br label %85, !dbg !4264

80:                                               ; preds = %93, %56, %70
  %81 = phi i64 [ %74, %70 ], [ %59, %56 ], [ %94, %93 ]
  %82 = phi i32 [ %73, %70 ], [ %27, %56 ], [ %95, %93 ], !dbg !4208
  %83 = phi i32 [ 0, %70 ], [ 0, %56 ], [ %96, %93 ], !dbg !4208
  call void @llvm.dbg.value(metadata i32 %83, metadata !4204, metadata !DIExpression()), !dbg !4208
  call void @llvm.dbg.value(metadata i32 %82, metadata !4201, metadata !DIExpression()), !dbg !4208
  %84 = icmp sgt i32 %82, 0, !dbg !4266
  br i1 %84, label %101, label %114, !dbg !4267

85:                                               ; preds = %76, %85
  %86 = phi i64 [ %88, %85 ], [ %79, %76 ], !dbg !4208
  %87 = phi i32 [ %89, %85 ], [ %78, %76 ], !dbg !4208
  call void @llvm.dbg.value(metadata i32 %87, metadata !4201, metadata !DIExpression()), !dbg !4208
  call void @llvm.dbg.value(metadata i64 %86, metadata !4202, metadata !DIExpression()), !dbg !4208
  %88 = lshr i64 %86, 1, !dbg !4268
  call void @llvm.dbg.value(metadata i64 %88, metadata !4202, metadata !DIExpression()), !dbg !4208
  %89 = add nsw i32 %87, 1, !dbg !4270
  call void @llvm.dbg.value(metadata i32 %89, metadata !4201, metadata !DIExpression()), !dbg !4208
  %90 = lshr i64 %86, 33, !dbg !4271
  %91 = trunc i64 %90 to i32, !dbg !4272
  %92 = icmp ugt i32 %91, 858993458, !dbg !4273
  br i1 %92, label %85, label %93, !dbg !4274, !llvm.loop !4275

93:                                               ; preds = %85
  %94 = mul i64 %88, 5, !dbg !4277
  call void @llvm.dbg.value(metadata i64 %94, metadata !4202, metadata !DIExpression()), !dbg !4208
  %95 = add nsw i32 %87, 2, !dbg !4278
  call void @llvm.dbg.value(metadata i32 %95, metadata !4201, metadata !DIExpression()), !dbg !4208
  %96 = add nsw i32 %77, -1, !dbg !4279
  call void @llvm.dbg.value(metadata i32 %96, metadata !4204, metadata !DIExpression()), !dbg !4208
  %97 = icmp slt i32 %87, -4, !dbg !4262
  br i1 %97, label %76, label %80, !dbg !4263, !llvm.loop !4280

98:                                               ; preds = %108
  %99 = add nsw i32 %103, 1, !dbg !4282
  store i64 %111, i64* %7, align 8, !dbg !4284
  call void @llvm.dbg.value(metadata i32 %99, metadata !4204, metadata !DIExpression()), !dbg !4208
  call void @llvm.dbg.value(metadata i32 %112, metadata !4201, metadata !DIExpression()), !dbg !4208
  %100 = icmp sgt i32 %110, 1, !dbg !4266
  br i1 %100, label %101, label %114, !dbg !4267, !llvm.loop !4286

101:                                              ; preds = %80, %98
  %102 = phi i64 [ %111, %98 ], [ %81, %80 ], !dbg !4288
  %103 = phi i32 [ %99, %98 ], [ %83, %80 ]
  %104 = phi i32 [ %112, %98 ], [ %82, %80 ]
  call void @llvm.dbg.value(metadata i32 %103, metadata !4204, metadata !DIExpression()), !dbg !4208
  call void @llvm.dbg.value(metadata i32 %104, metadata !4201, metadata !DIExpression()), !dbg !4208
  call void @llvm.dbg.value(metadata i64 %102, metadata !4202, metadata !DIExpression()), !dbg !4208
  %105 = add i64 %102, 2, !dbg !4288
  call void @llvm.dbg.value(metadata i64 %105, metadata !4202, metadata !DIExpression()), !dbg !4208
  store i64 %105, i64* %7, align 8, !dbg !4288
  call void @llvm.dbg.value(metadata i64* %7, metadata !4202, metadata !DIExpression(DW_OP_deref)), !dbg !4208
  call fastcc void @_ldiv5(i64* noundef nonnull %7) #25, !dbg !4289
  %106 = add nsw i32 %104, -1, !dbg !4290
  call void @llvm.dbg.value(metadata i32 %106, metadata !4201, metadata !DIExpression()), !dbg !4208
  call void @llvm.dbg.value(metadata i32 %99, metadata !4204, metadata !DIExpression()), !dbg !4208
  %107 = load i64, i64* %7, align 8
  br label %108, !dbg !4291

108:                                              ; preds = %108, %101
  %109 = phi i64 [ %107, %101 ], [ %111, %108 ], !dbg !4208
  %110 = phi i32 [ %106, %101 ], [ %112, %108 ], !dbg !4292
  call void @llvm.dbg.value(metadata i32 %110, metadata !4201, metadata !DIExpression()), !dbg !4208
  call void @llvm.dbg.value(metadata i64 %109, metadata !4202, metadata !DIExpression()), !dbg !4208
  %111 = shl i64 %109, 1, !dbg !4284
  call void @llvm.dbg.value(metadata i64 %111, metadata !4202, metadata !DIExpression()), !dbg !4208
  %112 = add nsw i32 %110, -1, !dbg !4293
  call void @llvm.dbg.value(metadata i32 %112, metadata !4201, metadata !DIExpression()), !dbg !4208
  %113 = icmp sgt i64 %111, -1, !dbg !4294
  br i1 %113, label %108, label %98, !dbg !4295

114:                                              ; preds = %98, %80
  %115 = phi i64 [ %81, %80 ], [ %111, %98 ], !dbg !4296
  %116 = phi i32 [ %82, %80 ], [ %112, %98 ], !dbg !4208
  %117 = phi i32 [ %83, %80 ], [ %99, %98 ], !dbg !4208
  %118 = sub nsw i32 4, %116, !dbg !4297
  call void @llvm.dbg.value(metadata i64 %115, metadata !4202, metadata !DIExpression()), !dbg !4208
  %119 = zext i32 %118 to i64, !dbg !4296
  %120 = lshr i64 %115, %119, !dbg !4296
  call void @llvm.dbg.value(metadata i64 %120, metadata !4202, metadata !DIExpression()), !dbg !4208
  %121 = and i8 %58, -33, !dbg !4298
  %122 = icmp eq i8 %121, 71, !dbg !4298
  br i1 %122, label %123, label %143, !dbg !4298

123:                                              ; preds = %114
  %124 = icmp slt i32 %117, -3, !dbg !4300
  %125 = icmp sgt i32 %117, %2
  %126 = or i1 %124, %125, !dbg !4303
  br i1 %126, label %127, label %132, !dbg !4303

127:                                              ; preds = %123
  %128 = add nsw i8 %58, -2, !dbg !4304
  call void @llvm.dbg.value(metadata i8 %128, metadata !4200, metadata !DIExpression()), !dbg !4208
  %129 = icmp sgt i32 %2, 0, !dbg !4306
  %130 = sext i1 %129 to i32, !dbg !4308
  %131 = add nsw i32 %130, %2, !dbg !4308
  br label %134, !dbg !4308

132:                                              ; preds = %123
  call void @llvm.dbg.value(metadata i8 102, metadata !4200, metadata !DIExpression()), !dbg !4208
  %133 = sub nsw i32 %2, %117, !dbg !4309
  call void @llvm.dbg.value(metadata i32 %133, metadata !4189, metadata !DIExpression()), !dbg !4208
  br label %134

134:                                              ; preds = %127, %132
  %135 = phi i32 [ %133, %132 ], [ %131, %127 ]
  %136 = phi i8 [ 102, %132 ], [ %128, %127 ], !dbg !4311
  call void @llvm.dbg.value(metadata i8 %136, metadata !4200, metadata !DIExpression()), !dbg !4208
  call void @llvm.dbg.value(metadata i32 %135, metadata !4189, metadata !DIExpression()), !dbg !4208
  %137 = bitcast %struct.conversion* %1 to i24*, !dbg !4312
  %138 = load i24, i24* %137, align 4, !dbg !4312
  %139 = and i24 %138, 32, !dbg !4312
  %140 = icmp eq i24 %139, 0, !dbg !4312
  %141 = icmp sgt i32 %135, 0
  %142 = select i1 %140, i1 %141, i1 false, !dbg !4314
  br label %143, !dbg !4314

143:                                              ; preds = %134, %114
  %144 = phi i32 [ %2, %114 ], [ %135, %134 ]
  %145 = phi i1 [ false, %114 ], [ %142, %134 ]
  %146 = phi i8 [ %58, %114 ], [ %136, %134 ], !dbg !4208
  call void @llvm.dbg.value(metadata i8 %146, metadata !4200, metadata !DIExpression()), !dbg !4208
  call void @llvm.dbg.value(metadata i8 poison, metadata !4198, metadata !DIExpression()), !dbg !4208
  call void @llvm.dbg.value(metadata i32 %144, metadata !4189, metadata !DIExpression()), !dbg !4208
  %147 = icmp eq i8 %146, 102, !dbg !4315
  %148 = add nsw i32 %144, %117, !dbg !4317
  %149 = icmp sgt i32 %148, 0, !dbg !4317
  %150 = select i1 %149, i32 %148, i32 0, !dbg !4317
  %151 = add nsw i32 %144, 1, !dbg !4317
  %152 = select i1 %147, i32 %150, i32 %151, !dbg !4317
  call void @llvm.dbg.value(metadata i32 %152, metadata !4205, metadata !DIExpression()), !dbg !4208
  %153 = bitcast i32* %8 to i8*, !dbg !4318
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %153) #23, !dbg !4318
  call void @llvm.dbg.value(metadata i32 16, metadata !4206, metadata !DIExpression()), !dbg !4208
  store i32 16, i32* %8, align 4, !dbg !4319
  %154 = icmp slt i32 %152, 16, !dbg !4320
  call void @llvm.dbg.value(metadata i32 undef, metadata !4205, metadata !DIExpression()), !dbg !4208
  %155 = bitcast i64* %9 to i8*, !dbg !4321
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %155) #23, !dbg !4321
  call void @llvm.dbg.value(metadata i64 576460752303423488, metadata !4207, metadata !DIExpression()), !dbg !4208
  store i64 576460752303423488, i64* %9, align 8, !dbg !4322
  %156 = select i1 %154, i32 %152, i32 16, !dbg !4208
  call void @llvm.dbg.value(metadata i32 %156, metadata !4205, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4208
  %157 = icmp eq i32 %156, 0, !dbg !4323
  br i1 %157, label %164, label %158, !dbg !4323

158:                                              ; preds = %143, %158
  %159 = phi i32 [ %160, %158 ], [ %156, %143 ]
  call void @llvm.dbg.value(metadata i32 %159, metadata !4205, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4208
  %160 = add nsw i32 %159, -1, !dbg !4324
  call void @llvm.dbg.value(metadata i32 %160, metadata !4205, metadata !DIExpression()), !dbg !4208
  call void @llvm.dbg.value(metadata i64* %9, metadata !4207, metadata !DIExpression(DW_OP_deref)), !dbg !4208
  call fastcc void @_ldiv10(i64* noundef nonnull %9) #25, !dbg !4325
  call void @llvm.dbg.value(metadata i32 %160, metadata !4205, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4208
  %161 = icmp eq i32 %160, 0, !dbg !4323
  br i1 %161, label %162, label %158, !dbg !4323, !llvm.loop !4327

162:                                              ; preds = %158
  %163 = load i64, i64* %9, align 8, !dbg !4329
  br label %164, !dbg !4329

164:                                              ; preds = %162, %143
  %165 = phi i64 [ %163, %162 ], [ 576460752303423488, %143 ], !dbg !4329
  call void @llvm.dbg.value(metadata i64 %165, metadata !4207, metadata !DIExpression()), !dbg !4208
  call void @llvm.dbg.value(metadata i64 %120, metadata !4202, metadata !DIExpression()), !dbg !4208
  %166 = add i64 %120, %165, !dbg !4330
  call void @llvm.dbg.value(metadata i64 %166, metadata !4202, metadata !DIExpression()), !dbg !4208
  store i64 %166, i64* %7, align 8, !dbg !4330
  %167 = icmp ugt i64 %166, 1152921504606846975, !dbg !4331
  br i1 %167, label %168, label %170, !dbg !4333

168:                                              ; preds = %164
  call void @llvm.dbg.value(metadata i64* %7, metadata !4202, metadata !DIExpression(DW_OP_deref)), !dbg !4208
  call fastcc void @_ldiv10(i64* noundef nonnull %7) #25, !dbg !4334
  %169 = add nsw i32 %117, 1, !dbg !4336
  call void @llvm.dbg.value(metadata i32 %169, metadata !4204, metadata !DIExpression()), !dbg !4208
  br label %170, !dbg !4337

170:                                              ; preds = %168, %164
  %171 = phi i32 [ %169, %168 ], [ %117, %164 ], !dbg !4208
  call void @llvm.dbg.value(metadata i32 %171, metadata !4204, metadata !DIExpression()), !dbg !4208
  br i1 %147, label %172, label %211, !dbg !4338

172:                                              ; preds = %170
  %173 = icmp sgt i32 %171, 0, !dbg !4339
  br i1 %173, label %174, label %186, !dbg !4343

174:                                              ; preds = %172, %174
  %175 = phi i32 [ %179, %174 ], [ %171, %172 ]
  %176 = phi i8* [ %178, %174 ], [ %4, %172 ]
  call void @llvm.dbg.value(metadata i32 %175, metadata !4204, metadata !DIExpression()), !dbg !4208
  call void @llvm.dbg.value(metadata i8* %176, metadata !4199, metadata !DIExpression()), !dbg !4208
  call void @llvm.dbg.value(metadata i64* %7, metadata !4202, metadata !DIExpression(DW_OP_deref)), !dbg !4208
  call void @llvm.dbg.value(metadata i32* %8, metadata !4206, metadata !DIExpression(DW_OP_deref)), !dbg !4208
  %177 = call fastcc zeroext i8 @_get_digit(i64* noundef nonnull %7, i32* noundef nonnull %8) #25, !dbg !4344
  %178 = getelementptr inbounds i8, i8* %176, i32 1, !dbg !4347
  call void @llvm.dbg.value(metadata i8* %178, metadata !4199, metadata !DIExpression()), !dbg !4208
  store i8 %177, i8* %176, align 1, !dbg !4348
  %179 = add nsw i32 %175, -1, !dbg !4349
  call void @llvm.dbg.value(metadata i32 %179, metadata !4204, metadata !DIExpression()), !dbg !4208
  %180 = icmp ugt i32 %175, 1, !dbg !4350
  %181 = load i32, i32* %8, align 4, !dbg !4351
  call void @llvm.dbg.value(metadata i32 %181, metadata !4206, metadata !DIExpression()), !dbg !4208
  %182 = icmp sgt i32 %181, 0, !dbg !4351
  %183 = select i1 %180, i1 %182, i1 false, !dbg !4351
  br i1 %183, label %174, label %184, !dbg !4352, !llvm.loop !4353

184:                                              ; preds = %174
  %185 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 2, i32 0, !dbg !4355
  store i32 %179, i32* %185, align 4, !dbg !4356
  call void @llvm.dbg.value(metadata i32 0, metadata !4204, metadata !DIExpression()), !dbg !4208
  br label %188, !dbg !4357

186:                                              ; preds = %172
  %187 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !4358
  call void @llvm.dbg.value(metadata i8* %187, metadata !4199, metadata !DIExpression()), !dbg !4208
  store i8 48, i8* %4, align 1, !dbg !4360
  br label %188

188:                                              ; preds = %186, %184
  %189 = phi i8* [ %178, %184 ], [ %187, %186 ], !dbg !4208
  %190 = phi i32 [ 0, %184 ], [ %171, %186 ], !dbg !4208
  call void @llvm.dbg.value(metadata i32 %190, metadata !4204, metadata !DIExpression()), !dbg !4208
  call void @llvm.dbg.value(metadata i8* %189, metadata !4199, metadata !DIExpression()), !dbg !4208
  %191 = bitcast %struct.conversion* %1 to i24*, !dbg !4361
  %192 = load i24, i24* %191, align 4, !dbg !4361
  %193 = and i24 %192, 32, !dbg !4361
  %194 = icmp ne i24 %193, 0, !dbg !4361
  %195 = icmp sgt i32 %144, 0
  %196 = select i1 %194, i1 true, i1 %195, !dbg !4363
  br i1 %196, label %197, label %199, !dbg !4363

197:                                              ; preds = %188
  %198 = getelementptr inbounds i8, i8* %189, i32 1, !dbg !4364
  call void @llvm.dbg.value(metadata i8* %198, metadata !4199, metadata !DIExpression()), !dbg !4208
  store i8 46, i8* %189, align 1, !dbg !4366
  br label %199, !dbg !4367

199:                                              ; preds = %188, %197
  %200 = phi i8* [ %198, %197 ], [ %189, %188 ], !dbg !4208
  call void @llvm.dbg.value(metadata i8* %200, metadata !4199, metadata !DIExpression()), !dbg !4208
  %201 = icmp slt i32 %190, 0, !dbg !4368
  %202 = select i1 %201, i1 %195, i1 false, !dbg !4370
  br i1 %202, label %203, label %225, !dbg !4370

203:                                              ; preds = %199
  %204 = sub nsw i32 0, %190, !dbg !4371
  %205 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 2, i32 0, !dbg !4373
  %206 = icmp ult i32 %144, %204, !dbg !4374
  %207 = select i1 %206, i32 %144, i32 %204, !dbg !4376
  store i32 %207, i32* %205, align 4, !dbg !4377
  %208 = sub nsw i32 %144, %207, !dbg !4378
  call void @llvm.dbg.value(metadata i32 %208, metadata !4189, metadata !DIExpression()), !dbg !4208
  %209 = load i24, i24* %191, align 4, !dbg !4379
  %210 = or i24 %209, 2097152, !dbg !4379
  store i24 %210, i24* %191, align 4, !dbg !4379
  br label %225, !dbg !4380

211:                                              ; preds = %170
  call void @llvm.dbg.value(metadata i64* %7, metadata !4202, metadata !DIExpression(DW_OP_deref)), !dbg !4208
  call void @llvm.dbg.value(metadata i32* %8, metadata !4206, metadata !DIExpression(DW_OP_deref)), !dbg !4208
  %212 = call fastcc zeroext i8 @_get_digit(i64* noundef nonnull %7, i32* noundef nonnull %8) #25, !dbg !4381
  store i8 %212, i8* %4, align 1, !dbg !4383
  %213 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !4384
  call void @llvm.dbg.value(metadata i8* %213, metadata !4199, metadata !DIExpression()), !dbg !4208
  %214 = icmp ne i8 %212, 48, !dbg !4386
  %215 = sext i1 %214 to i32, !dbg !4387
  %216 = add nsw i32 %171, %215, !dbg !4387
  call void @llvm.dbg.value(metadata i32 %216, metadata !4204, metadata !DIExpression()), !dbg !4208
  %217 = bitcast %struct.conversion* %1 to i24*, !dbg !4388
  %218 = load i24, i24* %217, align 4, !dbg !4388
  %219 = and i24 %218, 32, !dbg !4388
  %220 = icmp ne i24 %219, 0, !dbg !4388
  %221 = icmp sgt i32 %144, 0
  %222 = select i1 %220, i1 true, i1 %221, !dbg !4390
  br i1 %222, label %223, label %243, !dbg !4390

223:                                              ; preds = %211
  %224 = getelementptr inbounds i8, i8* %4, i32 2, !dbg !4391
  call void @llvm.dbg.value(metadata i8* %224, metadata !4199, metadata !DIExpression()), !dbg !4208
  store i8 46, i8* %213, align 1, !dbg !4393
  br label %225, !dbg !4394

225:                                              ; preds = %223, %199, %203
  %226 = phi i32 [ %208, %203 ], [ %144, %199 ], [ %144, %223 ], !dbg !4208
  %227 = phi i8* [ %200, %203 ], [ %200, %199 ], [ %224, %223 ], !dbg !4395
  %228 = phi i32 [ %190, %203 ], [ %190, %199 ], [ %216, %223 ], !dbg !4395
  call void @llvm.dbg.value(metadata i32 %228, metadata !4204, metadata !DIExpression()), !dbg !4208
  call void @llvm.dbg.value(metadata i8* %227, metadata !4199, metadata !DIExpression()), !dbg !4208
  call void @llvm.dbg.value(metadata i32 %226, metadata !4189, metadata !DIExpression()), !dbg !4208
  %229 = icmp sgt i32 %226, 0, !dbg !4396
  %230 = load i32, i32* %8, align 4, !dbg !4397
  call void @llvm.dbg.value(metadata i32 %230, metadata !4206, metadata !DIExpression()), !dbg !4208
  %231 = icmp sgt i32 %230, 0, !dbg !4397
  %232 = select i1 %229, i1 %231, i1 false, !dbg !4397
  br i1 %232, label %233, label %243, !dbg !4398

233:                                              ; preds = %225, %233
  %234 = phi i8* [ %237, %233 ], [ %227, %225 ]
  %235 = phi i32 [ %238, %233 ], [ %226, %225 ]
  call void @llvm.dbg.value(metadata i8* %234, metadata !4199, metadata !DIExpression()), !dbg !4208
  call void @llvm.dbg.value(metadata i32 %235, metadata !4189, metadata !DIExpression()), !dbg !4208
  call void @llvm.dbg.value(metadata i64* %7, metadata !4202, metadata !DIExpression(DW_OP_deref)), !dbg !4208
  call void @llvm.dbg.value(metadata i32* %8, metadata !4206, metadata !DIExpression(DW_OP_deref)), !dbg !4208
  %236 = call fastcc zeroext i8 @_get_digit(i64* noundef nonnull %7, i32* noundef nonnull %8) #25, !dbg !4399
  %237 = getelementptr inbounds i8, i8* %234, i32 1, !dbg !4401
  call void @llvm.dbg.value(metadata i8* %237, metadata !4199, metadata !DIExpression()), !dbg !4208
  store i8 %236, i8* %234, align 1, !dbg !4402
  %238 = add nsw i32 %235, -1, !dbg !4403
  call void @llvm.dbg.value(metadata i32 %238, metadata !4189, metadata !DIExpression()), !dbg !4208
  %239 = icmp ugt i32 %235, 1, !dbg !4396
  %240 = load i32, i32* %8, align 4, !dbg !4397
  call void @llvm.dbg.value(metadata i32 %240, metadata !4206, metadata !DIExpression()), !dbg !4208
  %241 = icmp sgt i32 %240, 0, !dbg !4397
  %242 = select i1 %239, i1 %241, i1 false, !dbg !4397
  br i1 %242, label %233, label %243, !dbg !4398, !llvm.loop !4404

243:                                              ; preds = %233, %211, %225
  %244 = phi i32 [ %228, %225 ], [ %216, %211 ], [ %228, %233 ]
  %245 = phi i32 [ %226, %225 ], [ %144, %211 ], [ %238, %233 ], !dbg !4208
  %246 = phi i8* [ %227, %225 ], [ %213, %211 ], [ %237, %233 ], !dbg !4208
  %247 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 3, i32 0, !dbg !4406
  store i32 %245, i32* %247, align 4, !dbg !4407
  br i1 %145, label %248, label %254, !dbg !4408

248:                                              ; preds = %243
  store i32 0, i32* %247, align 4, !dbg !4409
  br label %249, !dbg !4412

249:                                              ; preds = %249, %248
  %250 = phi i8* [ %246, %248 ], [ %251, %249 ], !dbg !4208
  call void @llvm.dbg.value(metadata i8* %250, metadata !4199, metadata !DIExpression()), !dbg !4208
  %251 = getelementptr inbounds i8, i8* %250, i32 -1, !dbg !4413
  call void @llvm.dbg.value(metadata i8* %251, metadata !4199, metadata !DIExpression()), !dbg !4208
  %252 = load i8, i8* %251, align 1, !dbg !4414
  switch i8 %252, label %254 [
    i8 48, label %249
    i8 46, label %253
  ], !dbg !4412

253:                                              ; preds = %249
  br label %254, !dbg !4415

254:                                              ; preds = %249, %253, %243
  %255 = phi i8* [ %246, %243 ], [ %251, %253 ], [ %250, %249 ], !dbg !4208
  call void @llvm.dbg.value(metadata i8* %255, metadata !4199, metadata !DIExpression()), !dbg !4208
  %256 = and i8 %146, -33, !dbg !4415
  %257 = icmp eq i8 %256, 69, !dbg !4415
  br i1 %257, label %258, label %287, !dbg !4415

258:                                              ; preds = %254
  %259 = getelementptr inbounds i8, i8* %255, i32 1, !dbg !4417
  call void @llvm.dbg.value(metadata i8* %259, metadata !4199, metadata !DIExpression()), !dbg !4208
  store i8 %146, i8* %255, align 1, !dbg !4419
  %260 = icmp slt i32 %244, 0, !dbg !4420
  %261 = sub nsw i32 0, %244, !dbg !4422
  %262 = select i1 %260, i8 45, i8 43, !dbg !4422
  %263 = select i1 %260, i32 %261, i32 %244, !dbg !4422
  %264 = getelementptr inbounds i8, i8* %255, i32 2, !dbg !4423
  store i8 %262, i8* %259, align 1, !dbg !4423
  call void @llvm.dbg.value(metadata i32 %263, metadata !4204, metadata !DIExpression()), !dbg !4208
  call void @llvm.dbg.value(metadata i8* %264, metadata !4199, metadata !DIExpression()), !dbg !4208
  %265 = icmp sgt i32 %263, 99, !dbg !4424
  br i1 %265, label %266, label %274, !dbg !4426

266:                                              ; preds = %258
  %267 = freeze i32 %263
  %268 = udiv i32 %267, 100, !dbg !4427
  %269 = trunc i32 %268 to i8, !dbg !4429
  %270 = add i8 %269, 48, !dbg !4429
  %271 = getelementptr inbounds i8, i8* %255, i32 3, !dbg !4430
  call void @llvm.dbg.value(metadata i8* %271, metadata !4199, metadata !DIExpression()), !dbg !4208
  store i8 %270, i8* %264, align 1, !dbg !4431
  %272 = mul i32 %268, 100
  %273 = sub i32 %267, %272
  call void @llvm.dbg.value(metadata i32 %273, metadata !4204, metadata !DIExpression()), !dbg !4208
  br label %274, !dbg !4432

274:                                              ; preds = %266, %258
  %275 = phi i8* [ %271, %266 ], [ %264, %258 ], !dbg !4433
  %276 = phi i32 [ %273, %266 ], [ %263, %258 ], !dbg !4433
  call void @llvm.dbg.value(metadata i32 %276, metadata !4204, metadata !DIExpression()), !dbg !4208
  call void @llvm.dbg.value(metadata i8* %275, metadata !4199, metadata !DIExpression()), !dbg !4208
  %277 = freeze i32 %276
  %278 = udiv i32 %277, 10, !dbg !4434
  %279 = trunc i32 %278 to i8, !dbg !4435
  %280 = add i8 %279, 48, !dbg !4435
  %281 = getelementptr inbounds i8, i8* %275, i32 1, !dbg !4436
  call void @llvm.dbg.value(metadata i8* %281, metadata !4199, metadata !DIExpression()), !dbg !4208
  store i8 %280, i8* %275, align 1, !dbg !4437
  %282 = mul i32 %278, 10
  %283 = sub i32 %277, %282
  %284 = trunc i32 %283 to i8, !dbg !4438
  %285 = or i8 %284, 48, !dbg !4438
  %286 = getelementptr inbounds i8, i8* %275, i32 2, !dbg !4439
  call void @llvm.dbg.value(metadata i8* %286, metadata !4199, metadata !DIExpression()), !dbg !4208
  store i8 %285, i8* %281, align 1, !dbg !4440
  br label %287, !dbg !4441

287:                                              ; preds = %254, %274
  %288 = phi i8* [ %286, %274 ], [ %255, %254 ], !dbg !4208
  call void @llvm.dbg.value(metadata i8* %288, metadata !4199, metadata !DIExpression()), !dbg !4208
  %289 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 2, i32 0, !dbg !4442
  %290 = load i32, i32* %289, align 4, !dbg !4442
  %291 = icmp sgt i32 %290, 0, !dbg !4443
  br i1 %291, label %296, label %292, !dbg !4444

292:                                              ; preds = %287
  %293 = load i32, i32* %247, align 4, !dbg !4445
  %294 = icmp sgt i32 %293, 0, !dbg !4446
  %295 = select i1 %294, i24 4194304, i24 0, !dbg !4444
  br label %296, !dbg !4444

296:                                              ; preds = %292, %287
  %297 = phi i24 [ 4194304, %287 ], [ %295, %292 ]
  %298 = bitcast %struct.conversion* %1 to i24*, !dbg !4447
  %299 = load i24, i24* %298, align 4, !dbg !4448
  %300 = and i24 %299, -4194305, !dbg !4448
  %301 = or i24 %300, %297, !dbg !4448
  store i24 %301, i24* %298, align 4, !dbg !4448
  store i8* %288, i8** %5, align 4, !dbg !4449
  store i8 0, i8* %288, align 1, !dbg !4450
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %155) #23, !dbg !4451
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %153) #23, !dbg !4451
  br label %302

302:                                              ; preds = %296, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #23, !dbg !4451
  ret i8* %4, !dbg !4451
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #12 !dbg !4452 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4455, metadata !DIExpression()), !dbg !4456
  %2 = add i32 %0, -48, !dbg !4457
  %3 = icmp ult i32 %2, 10, !dbg !4458
  %4 = zext i1 %3 to i32, !dbg !4458
  ret i32 %4, !dbg !4459
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #12 !dbg !4460 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4462, metadata !DIExpression()), !dbg !4463
  %2 = add i32 %0, -65, !dbg !4464
  %3 = icmp ult i32 %2, 26, !dbg !4465
  %4 = zext i1 %3 to i32, !dbg !4465
  ret i32 %4, !dbg !4466
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @_ldiv5(i64* nocapture noundef %0) unnamed_addr #1 !dbg !4467 {
  call void @llvm.dbg.value(metadata i64* %0, metadata !4472, metadata !DIExpression()), !dbg !4477
  %2 = load i64, i64* %0, align 8, !dbg !4478
  call void @llvm.dbg.value(metadata i64 %2, metadata !4473, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4477
  %3 = lshr i64 %2, 32, !dbg !4479
  call void @llvm.dbg.value(metadata i64 %3, metadata !4474, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4477
  call void @llvm.dbg.value(metadata i32 858993459, metadata !4475, metadata !DIExpression()), !dbg !4477
  %4 = tail call i32 asm "", "=r,0"(i32 858993459) #27, !dbg !4480, !srcloc !4481
  call void @llvm.dbg.value(metadata i32 %4, metadata !4475, metadata !DIExpression()), !dbg !4477
  %5 = zext i32 %4 to i64, !dbg !4482
  %6 = mul nuw i64 %5, 4294967297, !dbg !4483
  call void @llvm.dbg.value(metadata i64 %6, metadata !4476, metadata !DIExpression()), !dbg !4477
  %7 = and i64 %2, 4294967295, !dbg !4484
  %8 = mul nuw i64 %7, %5, !dbg !4485
  %9 = add i64 %6, %8, !dbg !4486
  call void @llvm.dbg.value(metadata i64 %9, metadata !4476, metadata !DIExpression()), !dbg !4477
  %10 = lshr i64 %9, 32, !dbg !4487
  call void @llvm.dbg.value(metadata i64 %10, metadata !4476, metadata !DIExpression()), !dbg !4477
  call void @llvm.dbg.value(metadata i64 undef, metadata !4476, metadata !DIExpression()), !dbg !4477
  %11 = mul nuw i64 %3, %5, !dbg !4488
  %12 = add i64 %11, %8, !dbg !4489
  %13 = add i64 %12, %10, !dbg !4490
  call void @llvm.dbg.value(metadata i64 %13, metadata !4476, metadata !DIExpression()), !dbg !4477
  %14 = lshr i64 %13, 32, !dbg !4491
  call void @llvm.dbg.value(metadata i64 %14, metadata !4476, metadata !DIExpression()), !dbg !4477
  %15 = add nuw i64 %14, %11, !dbg !4492
  call void @llvm.dbg.value(metadata i64 %15, metadata !4476, metadata !DIExpression()), !dbg !4477
  store i64 %15, i64* %0, align 8, !dbg !4493
  ret void, !dbg !4494
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @_ldiv10(i64* nocapture noundef %0) unnamed_addr #1 !dbg !4495 {
  call void @llvm.dbg.value(metadata i64* %0, metadata !4497, metadata !DIExpression()), !dbg !4498
  %2 = load i64, i64* %0, align 8, !dbg !4499
  %3 = lshr i64 %2, 1, !dbg !4499
  store i64 %3, i64* %0, align 8, !dbg !4499
  tail call fastcc void @_ldiv5(i64* noundef nonnull %0) #25, !dbg !4500
  ret void, !dbg !4501
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc zeroext i8 @_get_digit(i64* nocapture noundef %0, i32* nocapture noundef %1) unnamed_addr #7 !dbg !4502 {
  call void @llvm.dbg.value(metadata i64* %0, metadata !4506, metadata !DIExpression()), !dbg !4509
  call void @llvm.dbg.value(metadata i32* %1, metadata !4507, metadata !DIExpression()), !dbg !4509
  %3 = load i32, i32* %1, align 4, !dbg !4510
  %4 = icmp sgt i32 %3, 0, !dbg !4512
  br i1 %4, label %5, label %13, !dbg !4513

5:                                                ; preds = %2
  %6 = add nsw i32 %3, -1, !dbg !4514
  store i32 %6, i32* %1, align 4, !dbg !4514
  %7 = load i64, i64* %0, align 8, !dbg !4516
  %8 = mul i64 %7, 10, !dbg !4516
  %9 = lshr i64 %8, 60, !dbg !4517
  %10 = trunc i64 %9 to i8, !dbg !4518
  %11 = or i8 %10, 48, !dbg !4518
  call void @llvm.dbg.value(metadata i8 %11, metadata !4508, metadata !DIExpression()), !dbg !4509
  %12 = and i64 %8, 1152921504606846974, !dbg !4519
  store i64 %12, i64* %0, align 8, !dbg !4519
  br label %13, !dbg !4520

13:                                               ; preds = %2, %5
  %14 = phi i8 [ %11, %5 ], [ 48, %2 ], !dbg !4521
  call void @llvm.dbg.value(metadata i8 %14, metadata !4508, metadata !DIExpression()), !dbg !4509
  ret i8 %14, !dbg !4522
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #12 !dbg !4523 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4527, metadata !DIExpression()), !dbg !4528
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !4529

2:                                                ; preds = %1
  br label %4, !dbg !4530

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !4532

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !4533
  ret i32 %5, !dbg !4534
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !4535 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4537, metadata !DIExpression()), !dbg !4540
  call void @llvm.dbg.value(metadata i8* %1, metadata !4538, metadata !DIExpression()), !dbg !4540
  call void @llvm.dbg.value(metadata i8 1, metadata !4539, metadata !DIExpression()), !dbg !4540
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !4541

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !4539, metadata !DIExpression()), !dbg !4540
  call void @llvm.dbg.value(metadata i8* %5, metadata !4538, metadata !DIExpression()), !dbg !4540
  %6 = load i8, i8* %5, align 1, !dbg !4542
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !4544

7:                                                ; preds = %4
  br label %11, !dbg !4545

8:                                                ; preds = %4
  br label %11, !dbg !4547

9:                                                ; preds = %4
  br label %11, !dbg !4548

10:                                               ; preds = %4
  br label %11, !dbg !4549

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !4550
  %14 = or i24 %13, %12, !dbg !4550
  store i24 %14, i24* %3, align 4, !dbg !4550
  call void @llvm.dbg.value(metadata i8 poison, metadata !4539, metadata !DIExpression()), !dbg !4540
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !4538, metadata !DIExpression()), !dbg !4540
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !4539, metadata !DIExpression()), !dbg !4540
  call void @llvm.dbg.value(metadata i8* %15, metadata !4538, metadata !DIExpression()), !dbg !4540
  %17 = load i24, i24* %3, align 4, !dbg !4551
  %18 = and i24 %17, 68, !dbg !4553
  %19 = icmp eq i24 %18, 68, !dbg !4553
  br i1 %19, label %20, label %22, !dbg !4553

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !4554
  store i24 %21, i24* %3, align 4, !dbg !4554
  br label %22, !dbg !4556

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !4557
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !4558 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4560, metadata !DIExpression()), !dbg !4564
  call void @llvm.dbg.value(metadata i8* %1, metadata !4561, metadata !DIExpression()), !dbg !4564
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !4565
  %5 = load i24, i24* %4, align 4, !dbg !4566
  %6 = or i24 %5, 128, !dbg !4566
  store i24 %6, i24* %4, align 4, !dbg !4566
  call void @llvm.dbg.value(metadata i8* %1, metadata !4561, metadata !DIExpression()), !dbg !4564
  %7 = load i8, i8* %1, align 1, !dbg !4567
  %8 = icmp eq i8 %7, 42, !dbg !4569
  br i1 %8, label %9, label %12, !dbg !4570

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !4571
  store i24 %10, i24* %4, align 4, !dbg !4571
  call void @llvm.dbg.value(metadata i8* %1, metadata !4561, metadata !DIExpression()), !dbg !4564
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4573
  call void @llvm.dbg.value(metadata i8* %11, metadata !4561, metadata !DIExpression()), !dbg !4564
  store i8* %11, i8** %3, align 4, !dbg !4573
  br label %29, !dbg !4574

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !4562, metadata !DIExpression()), !dbg !4564
  call void @llvm.dbg.value(metadata i8** %3, metadata !4561, metadata !DIExpression(DW_OP_deref)), !dbg !4564
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #25, !dbg !4575
  call void @llvm.dbg.value(metadata i32 %13, metadata !4563, metadata !DIExpression()), !dbg !4564
  %14 = load i8*, i8** %3, align 4, !dbg !4576
  call void @llvm.dbg.value(metadata i8* %14, metadata !4561, metadata !DIExpression()), !dbg !4564
  %15 = icmp eq i8* %14, %1, !dbg !4578
  br i1 %15, label %29, label %16, !dbg !4579

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !4580
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4582
  store i32 %13, i32* %18, align 4, !dbg !4583
  %19 = lshr i32 %13, 31, !dbg !4584
  %20 = lshr i24 %17, 1, !dbg !4585
  %21 = and i24 %20, 1, !dbg !4585
  %22 = zext i24 %21 to i32, !dbg !4585
  %23 = or i32 %19, %22, !dbg !4585
  %24 = trunc i32 %23 to i24, !dbg !4585
  %25 = shl nuw nsw i24 %24, 1, !dbg !4585
  %26 = and i24 %17, -131, !dbg !4585
  %27 = or i24 %26, 128, !dbg !4585
  %28 = or i24 %25, %27, !dbg !4585
  store i24 %28, i24* %4, align 4, !dbg !4585
  br label %29, !dbg !4586

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !4564
  ret i8* %30, !dbg !4587
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !4588 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4590, metadata !DIExpression()), !dbg !4593
  call void @llvm.dbg.value(metadata i8* %1, metadata !4591, metadata !DIExpression()), !dbg !4593
  %4 = load i8, i8* %1, align 1, !dbg !4594
  %5 = icmp eq i8 %4, 46, !dbg !4595
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !4596
  %7 = load i24, i24* %6, align 4, !dbg !4597
  %8 = select i1 %5, i24 512, i24 0, !dbg !4597
  %9 = and i24 %7, -513, !dbg !4597
  %10 = or i24 %9, %8, !dbg !4597
  store i24 %10, i24* %6, align 4, !dbg !4597
  br i1 %5, label %11, label %32, !dbg !4598

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !4591, metadata !DIExpression()), !dbg !4593
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4599
  call void @llvm.dbg.value(metadata i8* %12, metadata !4591, metadata !DIExpression()), !dbg !4593
  store i8* %12, i8** %3, align 4, !dbg !4599
  %13 = load i8, i8* %12, align 1, !dbg !4600
  %14 = icmp eq i8 %13, 42, !dbg !4602
  br i1 %14, label %15, label %18, !dbg !4603

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !4604
  store i24 %16, i24* %6, align 4, !dbg !4604
  call void @llvm.dbg.value(metadata i8* %12, metadata !4591, metadata !DIExpression()), !dbg !4593
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4606
  call void @llvm.dbg.value(metadata i8* %17, metadata !4591, metadata !DIExpression()), !dbg !4593
  store i8* %17, i8** %3, align 4, !dbg !4606
  br label %32, !dbg !4607

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !4591, metadata !DIExpression(DW_OP_deref)), !dbg !4593
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #25, !dbg !4608
  call void @llvm.dbg.value(metadata i32 %19, metadata !4592, metadata !DIExpression()), !dbg !4593
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4609
  store i32 %19, i32* %20, align 4, !dbg !4610
  %21 = lshr i32 %19, 31, !dbg !4611
  %22 = load i24, i24* %6, align 4, !dbg !4612
  %23 = lshr i24 %22, 1, !dbg !4612
  %24 = and i24 %23, 1, !dbg !4612
  %25 = zext i24 %24 to i32, !dbg !4612
  %26 = or i32 %21, %25, !dbg !4612
  %27 = trunc i32 %26 to i24, !dbg !4612
  %28 = shl nuw nsw i24 %27, 1, !dbg !4612
  %29 = and i24 %22, -3, !dbg !4612
  %30 = or i24 %28, %29, !dbg !4612
  store i24 %30, i24* %6, align 4, !dbg !4612
  %31 = load i8*, i8** %3, align 4, !dbg !4613
  call void @llvm.dbg.value(metadata i8* %31, metadata !4591, metadata !DIExpression()), !dbg !4593
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !4593
  ret i8* %33, !dbg !4614
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #7 !dbg !4615 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4617, metadata !DIExpression()), !dbg !4619
  call void @llvm.dbg.value(metadata i8* %1, metadata !4618, metadata !DIExpression()), !dbg !4619
  %3 = load i8, i8* %1, align 1, !dbg !4620
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !4621

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4622
  call void @llvm.dbg.value(metadata i8* %5, metadata !4618, metadata !DIExpression()), !dbg !4619
  %6 = load i8, i8* %5, align 1, !dbg !4625
  %7 = icmp eq i8 %6, 104, !dbg !4626
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !4627
  %9 = load i24, i24* %8, align 4, !dbg !4627
  %10 = and i24 %9, -30721, !dbg !4627
  br i1 %7, label %11, label %14, !dbg !4628

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !4629
  store i24 %12, i24* %8, align 4, !dbg !4629
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4631
  call void @llvm.dbg.value(metadata i8* %13, metadata !4618, metadata !DIExpression()), !dbg !4619
  br label %56, !dbg !4632

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !4633
  store i24 %15, i24* %8, align 4, !dbg !4633
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4635
  call void @llvm.dbg.value(metadata i8* %17, metadata !4618, metadata !DIExpression()), !dbg !4619
  %18 = load i8, i8* %17, align 1, !dbg !4637
  %19 = icmp eq i8 %18, 108, !dbg !4638
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !4639
  %21 = load i24, i24* %20, align 4, !dbg !4639
  %22 = and i24 %21, -30721, !dbg !4639
  br i1 %19, label %23, label %26, !dbg !4640

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !4641
  store i24 %24, i24* %20, align 4, !dbg !4641
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4643
  call void @llvm.dbg.value(metadata i8* %25, metadata !4618, metadata !DIExpression()), !dbg !4619
  br label %56, !dbg !4644

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !4645
  store i24 %27, i24* %20, align 4, !dbg !4645
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !4647
  %30 = load i24, i24* %29, align 4, !dbg !4648
  %31 = and i24 %30, -30721, !dbg !4648
  %32 = or i24 %31, 10240, !dbg !4648
  store i24 %32, i24* %29, align 4, !dbg !4648
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4649
  call void @llvm.dbg.value(metadata i8* %33, metadata !4618, metadata !DIExpression()), !dbg !4619
  br label %56, !dbg !4650

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !4651
  %36 = load i24, i24* %35, align 4, !dbg !4652
  %37 = and i24 %36, -30721, !dbg !4652
  %38 = or i24 %37, 12288, !dbg !4652
  store i24 %38, i24* %35, align 4, !dbg !4652
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4653
  call void @llvm.dbg.value(metadata i8* %39, metadata !4618, metadata !DIExpression()), !dbg !4619
  br label %56, !dbg !4654

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !4655
  %42 = load i24, i24* %41, align 4, !dbg !4656
  %43 = and i24 %42, -30721, !dbg !4656
  %44 = or i24 %43, 14336, !dbg !4656
  store i24 %44, i24* %41, align 4, !dbg !4656
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4657
  call void @llvm.dbg.value(metadata i8* %45, metadata !4618, metadata !DIExpression()), !dbg !4619
  br label %56, !dbg !4658

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !4659
  %48 = load i24, i24* %47, align 4, !dbg !4660
  %49 = and i24 %48, -30723, !dbg !4660
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4661
  call void @llvm.dbg.value(metadata i8* %50, metadata !4618, metadata !DIExpression()), !dbg !4619
  %51 = or i24 %49, 16386, !dbg !4662
  store i24 %51, i24* %47, align 4, !dbg !4662
  br label %56, !dbg !4663

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !4664
  %54 = load i24, i24* %53, align 4, !dbg !4665
  %55 = and i24 %54, -30721, !dbg !4665
  store i24 %55, i24* %53, align 4, !dbg !4665
  br label %56, !dbg !4666

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !4618, metadata !DIExpression()), !dbg !4619
  ret i8* %57, !dbg !4667
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #7 !dbg !4668 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4670, metadata !DIExpression()), !dbg !4675
  call void @llvm.dbg.value(metadata i8* %1, metadata !4671, metadata !DIExpression()), !dbg !4675
  call void @llvm.dbg.value(metadata i8 0, metadata !4672, metadata !DIExpression()), !dbg !4675
  call void @llvm.dbg.value(metadata i8* %1, metadata !4671, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4675
  %3 = load i8, i8* %1, align 1, !dbg !4676
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4677
  store i8 %3, i8* %4, align 1, !dbg !4678
  switch i8 %3, label %50 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %36
    i8 115, label %43
    i8 112, label %43
  ], !dbg !4679

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !4680

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !4681
  %9 = load i24, i24* %8, align 4, !dbg !4681
  %10 = and i24 %9, -458753, !dbg !4681
  %11 = or i24 %10, %7, !dbg !4681
  call void @llvm.dbg.label(metadata !4673), !dbg !4682
  %12 = and i24 %9, 30720, !dbg !4683
  %13 = icmp eq i24 %12, 16384, !dbg !4683
  %14 = zext i1 %13 to i24, !dbg !4685
  %15 = or i24 %11, %14, !dbg !4685
  %16 = icmp eq i8 %3, 99, !dbg !4686
  br i1 %16, label %17, label %54, !dbg !4688

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !4689
  %19 = icmp ne i24 %18, 0, !dbg !4689
  call void @llvm.dbg.value(metadata i1 %19, metadata !4672, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4675
  br label %54, !dbg !4691

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !4692
  %22 = load i24, i24* %21, align 4, !dbg !4693
  %23 = and i8 %3, -33, !dbg !4694
  %24 = icmp eq i8 %23, 65, !dbg !4694
  %25 = select i1 %24, i24 32768, i24 0, !dbg !4694
  %26 = and i24 %22, -491521, !dbg !4695
  %27 = or i24 %26, %25, !dbg !4695
  %28 = or i24 %27, 262144, !dbg !4695
  br i1 %24, label %54, label %29, !dbg !4696

29:                                               ; preds = %20
  %30 = lshr i24 %22, 11, !dbg !4697
  %31 = trunc i24 %30 to i4, !dbg !4699
  switch i4 %31, label %34 [
    i4 3, label %32
    i4 0, label %54
    i4 -8, label %54
  ], !dbg !4699

32:                                               ; preds = %29
  %33 = and i24 %28, -227329, !dbg !4700
  br label %54, !dbg !4702

34:                                               ; preds = %29
  %35 = or i24 %27, 262145, !dbg !4703
  br label %54, !dbg !4706

36:                                               ; preds = %2
  %37 = bitcast %struct.conversion* %0 to i24*, !dbg !4707
  %38 = load i24, i24* %37, align 4, !dbg !4708
  %39 = and i24 %38, -458753, !dbg !4708
  %40 = or i24 %39, 196608, !dbg !4708
  %41 = and i24 %38, 30720, !dbg !4709
  %42 = icmp eq i24 %41, 16384, !dbg !4709
  br label %54, !dbg !4711

43:                                               ; preds = %2, %2
  %44 = bitcast %struct.conversion* %0 to i24*, !dbg !4712
  %45 = load i24, i24* %44, align 4, !dbg !4713
  %46 = and i24 %45, -458753, !dbg !4713
  %47 = or i24 %46, 196608, !dbg !4713
  %48 = and i24 %45, 30720, !dbg !4714
  %49 = icmp ne i24 %48, 0, !dbg !4714
  br label %54, !dbg !4716

50:                                               ; preds = %2
  %51 = bitcast %struct.conversion* %0 to i24*, !dbg !4717
  %52 = load i24, i24* %51, align 4, !dbg !4718
  %53 = or i24 %52, 1, !dbg !4718
  br label %54, !dbg !4719

54:                                               ; preds = %43, %36, %29, %29, %20, %32, %34, %17, %6, %50
  %55 = phi i24 [ %47, %43 ], [ %40, %36 ], [ %28, %29 ], [ %28, %29 ], [ %28, %20 ], [ %33, %32 ], [ %35, %34 ], [ %15, %17 ], [ %15, %6 ], [ %53, %50 ], !dbg !4720
  %56 = phi i1 [ %49, %43 ], [ %42, %36 ], [ false, %29 ], [ false, %29 ], [ true, %20 ], [ false, %32 ], [ false, %34 ], [ %19, %17 ], [ false, %6 ], [ false, %50 ]
  %57 = bitcast %struct.conversion* %0 to i24*, !dbg !4721
  %58 = zext i1 %56 to i32
  %59 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4722
  call void @llvm.dbg.value(metadata i8* %59, metadata !4671, metadata !DIExpression()), !dbg !4675
  call void @llvm.dbg.value(metadata i8 poison, metadata !4672, metadata !DIExpression()), !dbg !4675
  %60 = lshr i24 %55, 1, !dbg !4720
  %61 = and i24 %60, 1, !dbg !4720
  %62 = zext i24 %61 to i32, !dbg !4720
  %63 = or i32 %62, %58, !dbg !4720
  %64 = trunc i32 %63 to i24, !dbg !4720
  %65 = shl nuw nsw i24 %64, 1, !dbg !4720
  %66 = and i24 %55, -3, !dbg !4720
  %67 = or i24 %65, %66, !dbg !4720
  store i24 %67, i24* %57, align 4, !dbg !4720
  ret i8* %59, !dbg !4723
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #11 !dbg !4724 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !4728, metadata !DIExpression()), !dbg !4731
  %2 = load i8*, i8** %0, align 4, !dbg !4732
  call void @llvm.dbg.value(metadata i8* %2, metadata !4729, metadata !DIExpression()), !dbg !4731
  call void @llvm.dbg.value(metadata i32 0, metadata !4730, metadata !DIExpression()), !dbg !4731
  %3 = load i8, i8* %2, align 1, !dbg !4733
  %4 = zext i8 %3 to i32, !dbg !4734
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #25, !dbg !4735
  %6 = icmp eq i32 %5, 0, !dbg !4736
  br i1 %6, label %19, label %7, !dbg !4736

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !4730, metadata !DIExpression()), !dbg !4731
  call void @llvm.dbg.value(metadata i8* %10, metadata !4729, metadata !DIExpression()), !dbg !4731
  %11 = mul i32 %9, 10, !dbg !4737
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !4739
  call void @llvm.dbg.value(metadata i8* %12, metadata !4729, metadata !DIExpression()), !dbg !4731
  %13 = add i32 %11, -48, !dbg !4740
  %14 = add i32 %13, %8, !dbg !4741
  call void @llvm.dbg.value(metadata i32 %14, metadata !4730, metadata !DIExpression()), !dbg !4731
  %15 = load i8, i8* %12, align 1, !dbg !4733
  %16 = zext i8 %15 to i32, !dbg !4734
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #25, !dbg !4735
  %18 = icmp eq i32 %17, 0, !dbg !4736
  br i1 %18, label %19, label %7, !dbg !4736, !llvm.loop !4742

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !4731
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !4731
  store i8* %20, i8** %0, align 4, !dbg !4744
  ret i32 %21, !dbg !4745
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !4746 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !4748, !srcloc !4749
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !4750, !srcloc !4751
  tail call void asm sideeffect ".globl\09CONFIG_SENSOR\0A\09.equ\09CONFIG_SENSOR,1\0A\09.type\09CONFIG_SENSOR,%object", ""() #23, !dbg !4752, !srcloc !4753
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !4754, !srcloc !4755
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !4756, !srcloc !4757
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !4758, !srcloc !4759
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,82\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !4760, !srcloc !4761
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,168000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !4762, !srcloc !4763
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !4764, !srcloc !4765
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,1024\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !4766, !srcloc !4767
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !4768, !srcloc !4769
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !4770, !srcloc !4771
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !4772, !srcloc !4773
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !4774, !srcloc !4775
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !4776, !srcloc !4777
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !4778, !srcloc !4779
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !4780, !srcloc !4781
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !4782, !srcloc !4783
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !4784, !srcloc !4785
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #23, !dbg !4786, !srcloc !4787
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !4788, !srcloc !4789
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !4790, !srcloc !4791
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !4792, !srcloc !4793
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #23, !dbg !4794, !srcloc !4795
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !4796, !srcloc !4797
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !4798, !srcloc !4799
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ADAFRUIT_FEATHER_HEADER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ADAFRUIT_FEATHER_HEADER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ADAFRUIT_FEATHER_HEADER_ENABLED,%object", ""() #23, !dbg !4800, !srcloc !4801
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !4802, !srcloc !4803
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #23, !dbg !4804, !srcloc !4805
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !4806, !srcloc !4807
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #23, !dbg !4808, !srcloc !4809
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !4810, !srcloc !4811
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_JEDEC_SPI_NOR_ENABLED\0A\09.equ\09CONFIG_DT_HAS_JEDEC_SPI_NOR_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_JEDEC_SPI_NOR_ENABLED,%object", ""() #23, !dbg !4812, !srcloc !4813
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #23, !dbg !4814, !srcloc !4815
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #23, !dbg !4816, !srcloc !4817
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED,%object", ""() #23, !dbg !4818, !srcloc !4819
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #23, !dbg !4820, !srcloc !4821
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !4822, !srcloc !4823
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #23, !dbg !4824, !srcloc !4825
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #23, !dbg !4826, !srcloc !4827
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #23, !dbg !4828, !srcloc !4829
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #23, !dbg !4830, !srcloc !4831
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,%object", ""() #23, !dbg !4832, !srcloc !4833
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #23, !dbg !4834, !srcloc !4835
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #23, !dbg !4836, !srcloc !4837
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #23, !dbg !4838, !srcloc !4839
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #23, !dbg !4840, !srcloc !4841
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #23, !dbg !4842, !srcloc !4843
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #23, !dbg !4844, !srcloc !4845
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !4846, !srcloc !4847
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #23, !dbg !4848, !srcloc !4849
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #23, !dbg !4850, !srcloc !4851
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED,%object", ""() #23, !dbg !4852, !srcloc !4853
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !4854, !srcloc !4855
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !4856, !srcloc !4857
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !4858, !srcloc !4859
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !4860, !srcloc !4861
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !4862, !srcloc !4863
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !4864, !srcloc !4865
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !4866, !srcloc !4867
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !4868, !srcloc !4869
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !4870, !srcloc !4871
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !4872, !srcloc !4873
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !4874, !srcloc !4875
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !4876, !srcloc !4877
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !4878, !srcloc !4879
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !4880, !srcloc !4881
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !4882, !srcloc !4883
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !4884, !srcloc !4885
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !4886, !srcloc !4887
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !4888, !srcloc !4889
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !4890, !srcloc !4891
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !4892, !srcloc !4893
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !4894, !srcloc !4895
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !4896, !srcloc !4897
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !4898, !srcloc !4899
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !4900, !srcloc !4901
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !4902, !srcloc !4903
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !4904, !srcloc !4905
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !4906, !srcloc !4907
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !4908, !srcloc !4909
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !4910, !srcloc !4911
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !4912, !srcloc !4913
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #23, !dbg !4914, !srcloc !4915
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #23, !dbg !4916, !srcloc !4917
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !4918, !srcloc !4919
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_ADAFRUIT_FEATHER_STM32F405\0A\09.equ\09CONFIG_BOARD_ADAFRUIT_FEATHER_STM32F405,1\0A\09.type\09CONFIG_BOARD_ADAFRUIT_FEATHER_STM32F405,%object", ""() #23, !dbg !4920, !srcloc !4921
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #23, !dbg !4922, !srcloc !4923
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #23, !dbg !4924, !srcloc !4925
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #23, !dbg !4926, !srcloc !4927
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !4928, !srcloc !4929
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #23, !dbg !4930, !srcloc !4931
  tail call void asm sideeffect ".globl\09CONFIG_STM32_CCM\0A\09.equ\09CONFIG_STM32_CCM,1\0A\09.type\09CONFIG_STM32_CCM,%object", ""() #23, !dbg !4932, !srcloc !4933
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F405XG\0A\09.equ\09CONFIG_SOC_STM32F405XG,1\0A\09.type\09CONFIG_SOC_STM32F405XG,%object", ""() #23, !dbg !4934, !srcloc !4935
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !4936, !srcloc !4937
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !4938, !srcloc !4939
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !4940, !srcloc !4941
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !4942, !srcloc !4943
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !4944, !srcloc !4945
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !4946, !srcloc !4947
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !4948, !srcloc !4949
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !4950, !srcloc !4951
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #23, !dbg !4952, !srcloc !4953
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !4954, !srcloc !4955
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !4956, !srcloc !4957
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #23, !dbg !4958, !srcloc !4959
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !4960, !srcloc !4961
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !4962, !srcloc !4963
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !4964, !srcloc !4965
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !4966, !srcloc !4967
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !4968, !srcloc !4969
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !4970, !srcloc !4971
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #23, !dbg !4972, !srcloc !4973
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !4974, !srcloc !4975
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !4976, !srcloc !4977
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !4978, !srcloc !4979
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #23, !dbg !4980, !srcloc !4981
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #23, !dbg !4982, !srcloc !4983
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #23, !dbg !4984, !srcloc !4985
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #23, !dbg !4986, !srcloc !4987
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !4988, !srcloc !4989
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !4990, !srcloc !4991
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !4992, !srcloc !4993
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !4994, !srcloc !4995
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !4996, !srcloc !4997
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #23, !dbg !4998, !srcloc !4999
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #23, !dbg !5000, !srcloc !5001
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #23, !dbg !5002, !srcloc !5003
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #23, !dbg !5004, !srcloc !5005
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #23, !dbg !5006, !srcloc !5007
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !5008, !srcloc !5009
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !5010, !srcloc !5011
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !5012, !srcloc !5013
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !5014, !srcloc !5015
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !5016, !srcloc !5017
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !5018, !srcloc !5019
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !5020, !srcloc !5021
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !5022, !srcloc !5023
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #23, !dbg !5024, !srcloc !5025
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #23, !dbg !5026, !srcloc !5027
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #23, !dbg !5028, !srcloc !5029
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !5030, !srcloc !5031
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !5032, !srcloc !5033
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !5034, !srcloc !5035
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !5036, !srcloc !5037
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !5038, !srcloc !5039
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5040, !srcloc !5041
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !5042, !srcloc !5043
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !5044, !srcloc !5045
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !5046, !srcloc !5047
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #23, !dbg !5048, !srcloc !5049
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #23, !dbg !5050, !srcloc !5051
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #23, !dbg !5052, !srcloc !5053
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #23, !dbg !5054, !srcloc !5055
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #23, !dbg !5056, !srcloc !5057
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !5058, !srcloc !5059
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !5060, !srcloc !5061
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !5062, !srcloc !5063
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !5064, !srcloc !5065
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !5066, !srcloc !5067
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !5068, !srcloc !5069
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !5070, !srcloc !5071
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !5072, !srcloc !5073
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !5074, !srcloc !5075
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !5076, !srcloc !5077
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !5078, !srcloc !5079
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #23, !dbg !5080, !srcloc !5081
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !5082, !srcloc !5083
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !5084, !srcloc !5085
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !5086, !srcloc !5087
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !5088, !srcloc !5089
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !5090, !srcloc !5091
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !5092, !srcloc !5093
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !5094, !srcloc !5095
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !5096, !srcloc !5097
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !5098, !srcloc !5099
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !5100, !srcloc !5101
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !5102, !srcloc !5103
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !5104, !srcloc !5105
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !5106, !srcloc !5107
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !5108, !srcloc !5109
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !5110, !srcloc !5111
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !5112, !srcloc !5113
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !5114, !srcloc !5115
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !5116, !srcloc !5117
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !5118, !srcloc !5119
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !5120, !srcloc !5121
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !5122, !srcloc !5123
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !5124, !srcloc !5125
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !5126, !srcloc !5127
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !5128, !srcloc !5129
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !5130, !srcloc !5131
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5132, !srcloc !5133
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !5134, !srcloc !5135
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !5136, !srcloc !5137
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !5138, !srcloc !5139
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !5140, !srcloc !5141
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !5142, !srcloc !5143
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !5144, !srcloc !5145
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !5146, !srcloc !5147
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !5148, !srcloc !5149
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !5150, !srcloc !5151
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !5152, !srcloc !5153
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #23, !dbg !5154, !srcloc !5155
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !5156, !srcloc !5157
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #23, !dbg !5158, !srcloc !5159
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #23, !dbg !5160, !srcloc !5161
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #23, !dbg !5162, !srcloc !5163
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #23, !dbg !5164, !srcloc !5165
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #23, !dbg !5166, !srcloc !5167
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #23, !dbg !5168, !srcloc !5169
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #23, !dbg !5170, !srcloc !5171
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #23, !dbg !5172, !srcloc !5173
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #23, !dbg !5174, !srcloc !5175
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5176, !srcloc !5177
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #23, !dbg !5178, !srcloc !5179
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5180, !srcloc !5181
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !5182, !srcloc !5183
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !5184, !srcloc !5185
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !5186, !srcloc !5187
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !5188, !srcloc !5189
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #23, !dbg !5190, !srcloc !5191
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,12000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #23, !dbg !5192, !srcloc !5193
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #23, !dbg !5194, !srcloc !5195
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #23, !dbg !5196, !srcloc !5197
  tail call void asm sideeffect ".globl\09CONFIG_SENSOR_INIT_PRIORITY\0A\09.equ\09CONFIG_SENSOR_INIT_PRIORITY,90\0A\09.type\09CONFIG_SENSOR_INIT_PRIORITY,%object", ""() #23, !dbg !5198, !srcloc !5199
  tail call void asm sideeffect ".globl\09CONFIG_TMP112_FULL_SCALE_RUNTIME\0A\09.equ\09CONFIG_TMP112_FULL_SCALE_RUNTIME,1\0A\09.type\09CONFIG_TMP112_FULL_SCALE_RUNTIME,%object", ""() #23, !dbg !5200, !srcloc !5201
  tail call void asm sideeffect ".globl\09CONFIG_TMP112_SAMPLING_FREQUENCY_RUNTIME\0A\09.equ\09CONFIG_TMP112_SAMPLING_FREQUENCY_RUNTIME,1\0A\09.type\09CONFIG_TMP112_SAMPLING_FREQUENCY_RUNTIME,%object", ""() #23, !dbg !5202, !srcloc !5203
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #23, !dbg !5204, !srcloc !5205
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #23, !dbg !5206, !srcloc !5207
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !5208, !srcloc !5209
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !5210, !srcloc !5211
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !5212, !srcloc !5213
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !5214, !srcloc !5215
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !5216, !srcloc !5217
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !5218, !srcloc !5219
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !5220, !srcloc !5221
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !5222, !srcloc !5223
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !5224, !srcloc !5225
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !5226, !srcloc !5227
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !5228, !srcloc !5229
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !5230, !srcloc !5231
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !5232, !srcloc !5233
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !5234, !srcloc !5235
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !5236, !srcloc !5237
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !5238, !srcloc !5239
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FP_SUPPORT\0A\09.equ\09CONFIG_CBPRINTF_FP_SUPPORT,1\0A\09.type\09CONFIG_CBPRINTF_FP_SUPPORT,%object", ""() #23, !dbg !5240, !srcloc !5241
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !5242, !srcloc !5243
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !5244, !srcloc !5245
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !5246, !srcloc !5247
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !5248, !srcloc !5249
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !5250, !srcloc !5251
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !5252, !srcloc !5253
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !5254, !srcloc !5255
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !5256, !srcloc !5257
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !5258, !srcloc !5259
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !5260, !srcloc !5261
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5262, !srcloc !5263
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !5264, !srcloc !5265
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !5266, !srcloc !5267
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !5268, !srcloc !5269
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !5270, !srcloc !5271
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !5272, !srcloc !5273
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !5274, !srcloc !5275
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !5276, !srcloc !5277
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !5278, !srcloc !5279
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !5280, !srcloc !5281
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !5282, !srcloc !5283
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !5284, !srcloc !5285
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !5286, !srcloc !5287
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !5288, !srcloc !5289
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !5290, !srcloc !5291
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !5292, !srcloc !5293
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !5294, !srcloc !5295
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !5296, !srcloc !5297
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !5298, !srcloc !5299
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !5300, !srcloc !5301
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !5302, !srcloc !5303
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !5304, !srcloc !5305
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !5306, !srcloc !5307
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !5308, !srcloc !5309
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !5310, !srcloc !5311
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !5312, !srcloc !5313
  ret void, !dbg !5314
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !5315 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5317, metadata !DIExpression()), !dbg !5319
  tail call fastcc void @LL_FLASH_EnableInstCache() #25, !dbg !5320
  tail call fastcc void @LL_FLASH_EnableDataCache() #25, !dbg !5321
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !5322, !srcloc !5331
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !5322
  call void @llvm.dbg.value(metadata i32 %3, metadata !5328, metadata !DIExpression()) #23, !dbg !5332
  call void @llvm.dbg.value(metadata i32 undef, metadata !5329, metadata !DIExpression()) #23, !dbg !5332
  call void @llvm.dbg.value(metadata i32 %3, metadata !5318, metadata !DIExpression()), !dbg !5319
  call void @llvm.dbg.value(metadata i32 %3, metadata !5333, metadata !DIExpression()) #23, !dbg !5338
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !5340, !srcloc !5341
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !5342
  ret i32 0, !dbg !5343
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #13 !dbg !5344 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5346
  %2 = or i32 %1, 512, !dbg !5346
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5346
  ret void, !dbg !5347
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #13 !dbg !5348 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5349
  %2 = or i32 %1, 1024, !dbg !5349
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5349
  ret void, !dbg !5350
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #12 !dbg !5351 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5353, metadata !DIExpression()), !dbg !5354
  ret i32 0, !dbg !5355
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !5356 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5405, metadata !DIExpression()), !dbg !5407
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !5406, metadata !DIExpression()), !dbg !5407
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #24, !dbg !5408
  ret void, !dbg !5409
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !5410 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5427, metadata !DIExpression()), !dbg !5430
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !5428, metadata !DIExpression()), !dbg !5430
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !5431
  %4 = load i32, i32* %3, align 4, !dbg !5431
  call void @llvm.dbg.value(metadata i32 %4, metadata !5429, metadata !DIExpression()), !dbg !5430
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #25, !dbg !5432
  ret void, !dbg !5433
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !5434 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5438, metadata !DIExpression()), !dbg !5441
  call void @llvm.dbg.value(metadata i8* %0, metadata !5439, metadata !DIExpression()), !dbg !5441
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !5442
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !5442
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !5440, metadata !DIExpression()), !dbg !5443
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !5443
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !5444
  %5 = bitcast i8* %4 to i32*, !dbg !5444
  %6 = load i32, i32* %5, align 4, !dbg !5444
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !5445
  store i32 %6, i32* %7, align 4, !dbg !5446
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #25, !dbg !5447
  unreachable, !dbg !5448
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !5449 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5452, metadata !DIExpression()), !dbg !5453
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #25, !dbg !5454
  ret void, !dbg !5455
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !5456 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5460, metadata !DIExpression()), !dbg !5461
  %2 = icmp sgt i32 %0, -1, !dbg !5462
  br i1 %2, label %3, label %8, !dbg !5464

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !5465, !srcloc !5467
  %4 = and i32 %0, 31, !dbg !5468
  %5 = shl nuw i32 1, %4, !dbg !5469
  %6 = lshr i32 %0, 5, !dbg !5470
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !5471
  store volatile i32 %5, i32* %7, align 4, !dbg !5472
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !5473, !srcloc !5474
  br label %8, !dbg !5475

8:                                                ; preds = %3, %1
  ret void, !dbg !5476
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !5477 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5479, metadata !DIExpression()), !dbg !5480
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #25, !dbg !5481
  ret void, !dbg !5482
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !5483 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5485, metadata !DIExpression()), !dbg !5486
  %2 = icmp sgt i32 %0, -1, !dbg !5487
  br i1 %2, label %3, label %8, !dbg !5489

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !5490
  %5 = shl nuw i32 1, %4, !dbg !5492
  %6 = lshr i32 %0, 5, !dbg !5493
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !5494
  store volatile i32 %5, i32* %7, align 4, !dbg !5495
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !5496, !srcloc !5500
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5501, !srcloc !5504
  br label %8, !dbg !5505

8:                                                ; preds = %3, %1
  ret void, !dbg !5506
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #14 !dbg !5507 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5511, metadata !DIExpression()), !dbg !5512
  %2 = lshr i32 %0, 5, !dbg !5513
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !5514
  %4 = load volatile i32, i32* %3, align 4, !dbg !5514
  %5 = and i32 %0, 31, !dbg !5515
  %6 = shl nuw i32 1, %5, !dbg !5515
  %7 = and i32 %4, %6, !dbg !5516
  ret i32 %7, !dbg !5517
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !5518 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5522, metadata !DIExpression()), !dbg !5525
  call void @llvm.dbg.value(metadata i32 %1, metadata !5523, metadata !DIExpression()), !dbg !5525
  call void @llvm.dbg.value(metadata i32 %2, metadata !5524, metadata !DIExpression()), !dbg !5525
  %4 = add i32 %1, 1, !dbg !5526
  call void @llvm.dbg.value(metadata i32 %4, metadata !5523, metadata !DIExpression()), !dbg !5525
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #25, !dbg !5529
  ret void, !dbg !5530
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5531 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5535, metadata !DIExpression()), !dbg !5537
  call void @llvm.dbg.value(metadata i32 %1, metadata !5536, metadata !DIExpression()), !dbg !5537
  %3 = trunc i32 %1 to i8, !dbg !5538
  %4 = shl i8 %3, 4, !dbg !5538
  %5 = and i32 %0, 15, !dbg !5540
  %6 = add nsw i32 %5, -4, !dbg !5540
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !5540
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !5540
  %9 = icmp slt i32 %0, 0, !dbg !5540
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !5540
  store volatile i8 %4, i8* %10, align 1, !dbg !5538
  ret void, !dbg !5541
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !5542 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5544, metadata !DIExpression()), !dbg !5545
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #24, !dbg !5546
  ret void, !dbg !5547
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !5548 {
  tail call void @z_SysNmiOnReset() #24, !dbg !5550
  tail call void @z_arm_int_exit() #24, !dbg !5551
  ret void, !dbg !5552
}

; Function Attrs: optsize
declare !dbg !5553 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !5554 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #8 !dbg !5556 {
  tail call fastcc void @relocate_vector_table() #25, !dbg !5558
  tail call fastcc void @z_arm_floating_point_init() #25, !dbg !5559
  tail call void @z_bss_zero() #24, !dbg !5560
  tail call void @z_data_copy() #24, !dbg !5561
  tail call void @z_arm_interrupt_init() #24, !dbg !5562
  tail call void @z_cstart() #28, !dbg !5563
  unreachable, !dbg !5563
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !5564 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !5565
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !5566, !srcloc !5569
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5570, !srcloc !5573
  ret void, !dbg !5574
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !5575 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !5576
  %2 = and i32 %1, -15728641, !dbg !5576
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !5576
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #23, !dbg !5577, !srcloc !5584
  call void @llvm.dbg.value(metadata i32 %3, metadata !5582, metadata !DIExpression()) #23, !dbg !5585
  %4 = and i32 %3, -5, !dbg !5586
  call void @llvm.dbg.value(metadata i32 %4, metadata !5587, metadata !DIExpression()) #23, !dbg !5592
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #23, !dbg !5594, !srcloc !5595
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5596, !srcloc !5573
  ret void, !dbg !5598
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !5599 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5602, metadata !DIExpression()), !dbg !5603
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5604
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !5605
  store i32 %0, i32* %3, align 4, !dbg !5606
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !5607
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !5608
  store i32 %4, i32* %5, align 4, !dbg !5609
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5610
  %7 = or i32 %6, 268435456, !dbg !5610
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5610
  call void @llvm.dbg.value(metadata i32 0, metadata !5611, metadata !DIExpression()) #23, !dbg !5614
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !5616, !srcloc !5617
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5618
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !5619
  %10 = load i32, i32* %9, align 4, !dbg !5619
  ret i32 %10, !dbg !5620
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #5 !dbg !5621 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5731, metadata !DIExpression()), !dbg !5739
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !5732, metadata !DIExpression()), !dbg !5739
  call void @llvm.dbg.value(metadata i8* %2, metadata !5733, metadata !DIExpression()), !dbg !5739
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !5734, metadata !DIExpression()), !dbg !5739
  call void @llvm.dbg.value(metadata i8* %4, metadata !5735, metadata !DIExpression()), !dbg !5739
  call void @llvm.dbg.value(metadata i8* %5, metadata !5736, metadata !DIExpression()), !dbg !5739
  call void @llvm.dbg.value(metadata i8* %6, metadata !5737, metadata !DIExpression()), !dbg !5739
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !5740
  call void @llvm.dbg.value(metadata i8* %8, metadata !5738, metadata !DIExpression()), !dbg !5739
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !5741
  %10 = bitcast i8* %9 to i32*, !dbg !5741
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !5742
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !5743
  %12 = bitcast i8* %8 to i32*, !dbg !5744
  store i32 %11, i32* %12, align 4, !dbg !5745
  %13 = ptrtoint i8* %4 to i32, !dbg !5746
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !5747
  %15 = bitcast i8* %14 to i32*, !dbg !5747
  store i32 %13, i32* %15, align 4, !dbg !5748
  %16 = ptrtoint i8* %5 to i32, !dbg !5749
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !5750
  %18 = bitcast i8* %17 to i32*, !dbg !5750
  store i32 %16, i32* %18, align 4, !dbg !5751
  %19 = ptrtoint i8* %6 to i32, !dbg !5752
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !5753
  %21 = bitcast i8* %20 to i32*, !dbg !5753
  store i32 %19, i32* %21, align 4, !dbg !5754
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !5755
  %23 = bitcast i8* %22 to i32*, !dbg !5755
  store i32 16777216, i32* %23, align 4, !dbg !5756
  %24 = ptrtoint i8* %8 to i32, !dbg !5757
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !5758
  store i32 %24, i32* %25, align 8, !dbg !5759
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !5760
  store i32 0, i32* %26, align 4, !dbg !5761
  ret void, !dbg !5762
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !5763 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5768, metadata !DIExpression()), !dbg !5774
  call void @llvm.dbg.value(metadata i32 %1, metadata !5769, metadata !DIExpression()), !dbg !5774
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5775
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !5770, metadata !DIExpression()), !dbg !5774
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !5776
  br i1 %4, label %19, label %5, !dbg !5778

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !5773, metadata !DIExpression()), !dbg !5774
  %6 = icmp eq i32 %0, -22, !dbg !5779
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !5779
  %8 = load i32, i32* %7, align 4, !dbg !5779
  br i1 %6, label %16, label %9, !dbg !5781

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !5779
  %11 = icmp ule i32 %10, %0, !dbg !5779
  %12 = icmp ugt i32 %8, %0, !dbg !5779
  %13 = and i1 %12, %11, !dbg !5779
  %14 = icmp ugt i32 %8, %1, !dbg !5779
  %15 = and i1 %14, %13, !dbg !5779
  br i1 %15, label %18, label %19, !dbg !5779

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !5779
  br i1 %17, label %18, label %19, !dbg !5781

18:                                               ; preds = %9, %16
  br label %19, !dbg !5782

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !5774
  ret i32 %20, !dbg !5784
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #8 !dbg !5785 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5789, metadata !DIExpression()), !dbg !5792
  call void @llvm.dbg.value(metadata i8* %1, metadata !5790, metadata !DIExpression()), !dbg !5792
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !5791, metadata !DIExpression()), !dbg !5792
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5793
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #24, !dbg !5794
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !5795, !srcloc !5796
  unreachable, !dbg !5797
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !5798 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5816, metadata !DIExpression()), !dbg !5826
  call void @llvm.dbg.value(metadata i32 %1, metadata !5817, metadata !DIExpression()), !dbg !5826
  call void @llvm.dbg.value(metadata i32 %2, metadata !5818, metadata !DIExpression()), !dbg !5826
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !5819, metadata !DIExpression()), !dbg !5826
  call void @llvm.dbg.value(metadata i32 0, metadata !5820, metadata !DIExpression()), !dbg !5826
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5827
  %9 = and i32 %8, 511, !dbg !5828
  call void @llvm.dbg.value(metadata i32 %9, metadata !5821, metadata !DIExpression()), !dbg !5826
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !5829
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !5829
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !5830
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #23, !dbg !5830
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !5825, metadata !DIExpression()), !dbg !5831
  call void @llvm.dbg.value(metadata i32 0, metadata !5832, metadata !DIExpression()) #23, !dbg !5835
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !5837, !srcloc !5838
  call void @llvm.dbg.value(metadata i8* %6, metadata !5823, metadata !DIExpression(DW_OP_deref)), !dbg !5826
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #25, !dbg !5839
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !5824, metadata !DIExpression()), !dbg !5826
  call void @llvm.dbg.value(metadata i8* %5, metadata !5822, metadata !DIExpression(DW_OP_deref)), !dbg !5826
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #25, !dbg !5840
  call void @llvm.dbg.value(metadata i32 %12, metadata !5820, metadata !DIExpression()), !dbg !5826
  %13 = load i8, i8* %5, align 1, !dbg !5841, !range !5843
  call void @llvm.dbg.value(metadata i8 %13, metadata !5822, metadata !DIExpression()), !dbg !5826
  %14 = icmp eq i8 %13, 0, !dbg !5841
  br i1 %14, label %15, label %32, !dbg !5844

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !5845
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #24, !dbg !5846
  %18 = load i8, i8* %6, align 1, !dbg !5847, !range !5843
  call void @llvm.dbg.value(metadata i8 %18, metadata !5823, metadata !DIExpression()), !dbg !5826
  %19 = icmp eq i8 %18, 0, !dbg !5847
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !5849
  %21 = load i32, i32* %20, align 4, !dbg !5849
  br i1 %19, label %27, label %22, !dbg !5850

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !5851
  %24 = icmp eq i32 %23, 0, !dbg !5854
  br i1 %24, label %25, label %31, !dbg !5855

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !5856
  br label %29, !dbg !5858

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !5859
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !5849
  br label %31, !dbg !5861

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #24, !dbg !5861
  br label %32, !dbg !5862

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #23, !dbg !5862
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !5862
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !5862
  ret void, !dbg !5862
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #5 !dbg !5863 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5868, metadata !DIExpression()), !dbg !5874
  call void @llvm.dbg.value(metadata i32 %1, metadata !5869, metadata !DIExpression()), !dbg !5874
  call void @llvm.dbg.value(metadata i32 %2, metadata !5870, metadata !DIExpression()), !dbg !5874
  call void @llvm.dbg.value(metadata i8* %3, metadata !5871, metadata !DIExpression()), !dbg !5874
  call void @llvm.dbg.value(metadata i8 0, metadata !5872, metadata !DIExpression()), !dbg !5874
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !5873, metadata !DIExpression()), !dbg !5874
  store i8 0, i8* %3, align 1, !dbg !5875
  %5 = icmp ult i32 %2, -16777216, !dbg !5876
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !5878
  br i1 %8, label %16, label %9, !dbg !5878

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !5879
  %11 = icmp eq i32 %10, 0, !dbg !5879
  br i1 %11, label %12, label %13, !dbg !5881

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !5873, metadata !DIExpression()), !dbg !5874
  store i8 1, i8* %3, align 1, !dbg !5884
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !5874
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !5873, metadata !DIExpression()), !dbg !5874
  br label %16, !dbg !5887

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !5874
  ret %struct.__esf* %17, !dbg !5888
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !5889 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5893, metadata !DIExpression()), !dbg !5897
  call void @llvm.dbg.value(metadata i32 %1, metadata !5894, metadata !DIExpression()), !dbg !5897
  call void @llvm.dbg.value(metadata i8* %2, metadata !5895, metadata !DIExpression()), !dbg !5897
  call void @llvm.dbg.value(metadata i32 0, metadata !5896, metadata !DIExpression()), !dbg !5897
  store i8 0, i8* %2, align 1, !dbg !5898
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !5899

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #25, !dbg !5900
  call void @llvm.dbg.value(metadata i32 %5, metadata !5896, metadata !DIExpression()), !dbg !5897
  br label %11, !dbg !5902

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #25, !dbg !5903
  call void @llvm.dbg.value(metadata i32 %7, metadata !5896, metadata !DIExpression()), !dbg !5897
  br label %11, !dbg !5904

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #25, !dbg !5905
  call void @llvm.dbg.value(metadata i32 0, metadata !5896, metadata !DIExpression()), !dbg !5897
  br label %11, !dbg !5906

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #25, !dbg !5907
  call void @llvm.dbg.value(metadata i32 0, metadata !5896, metadata !DIExpression()), !dbg !5897
  br label %11, !dbg !5908

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #25, !dbg !5909
  br label %11, !dbg !5910

11:                                               ; preds = %4, %6, %8, %9, %10, %3
  %12 = phi i32 [ 0, %3 ], [ %5, %4 ], [ %7, %6 ], [ 0, %8 ], [ 0, %9 ], [ 0, %10 ]
  ret i32 %12, !dbg !5911
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !5912 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5916, metadata !DIExpression()), !dbg !5919
  call void @llvm.dbg.value(metadata i8* %1, metadata !5917, metadata !DIExpression()), !dbg !5919
  call void @llvm.dbg.value(metadata i32 0, metadata !5918, metadata !DIExpression()), !dbg !5919
  store i8 0, i8* %1, align 1, !dbg !5920
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !5921
  %4 = and i32 %3, 2, !dbg !5923
  %5 = icmp eq i32 %4, 0, !dbg !5924
  br i1 %5, label %6, label %33, !dbg !5925

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !5926
  %8 = icmp sgt i32 %7, -1, !dbg !5928
  br i1 %8, label %9, label %33, !dbg !5929

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !5930
  %11 = and i32 %10, 1073741824, !dbg !5932
  %12 = icmp eq i32 %11, 0, !dbg !5933
  br i1 %12, label %33, label %13, !dbg !5934

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #25, !dbg !5935
  br i1 %14, label %15, label %18, !dbg !5938

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !5939
  %17 = load i32, i32* %16, align 4, !dbg !5939
  call void @llvm.dbg.value(metadata i32 %17, metadata !5918, metadata !DIExpression()), !dbg !5919
  br label %33, !dbg !5941

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5942
  %20 = and i32 %19, 255, !dbg !5944
  %21 = icmp eq i32 %20, 0, !dbg !5945
  br i1 %21, label %24, label %22, !dbg !5946

22:                                               ; preds = %18
  %23 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #25, !dbg !5947
  call void @llvm.dbg.value(metadata i32 %23, metadata !5918, metadata !DIExpression()), !dbg !5919
  br label %33, !dbg !5949

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5950
  %26 = and i32 %25, 65280, !dbg !5952
  %27 = icmp eq i32 %26, 0, !dbg !5953
  br i1 %27, label %29, label %28, !dbg !5954

28:                                               ; preds = %24
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #25, !dbg !5955
  call void @llvm.dbg.value(metadata i32 0, metadata !5918, metadata !DIExpression()), !dbg !5919
  br label %33, !dbg !5957

29:                                               ; preds = %24
  %30 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5958
  %31 = icmp ult i32 %30, 65536, !dbg !5960
  br i1 %31, label %33, label %32, !dbg !5961

32:                                               ; preds = %29
  tail call fastcc void @usage_fault() #25, !dbg !5962
  call void @llvm.dbg.value(metadata i32 0, metadata !5918, metadata !DIExpression()), !dbg !5919
  br label %33, !dbg !5964

33:                                               ; preds = %6, %9, %15, %28, %29, %32, %22, %2
  %34 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ %23, %22 ], [ 0, %28 ], [ 0, %32 ], [ 0, %29 ], [ 0, %9 ], !dbg !5919
  call void @llvm.dbg.value(metadata i32 %34, metadata !5918, metadata !DIExpression()), !dbg !5919
  ret i32 %34, !dbg !5965
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !5966 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5968, metadata !DIExpression()), !dbg !5981
  call void @llvm.dbg.value(metadata i32 %1, metadata !5969, metadata !DIExpression()), !dbg !5981
  call void @llvm.dbg.value(metadata i8* %2, metadata !5970, metadata !DIExpression()), !dbg !5981
  call void @llvm.dbg.value(metadata i32 0, metadata !5971, metadata !DIExpression()), !dbg !5981
  call void @llvm.dbg.value(metadata i32 -22, metadata !5972, metadata !DIExpression()), !dbg !5981
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5982
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5984
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5986
  %7 = and i32 %6, 2, !dbg !5987
  %8 = icmp eq i32 %7, 0, !dbg !5988
  br i1 %8, label %19, label %9, !dbg !5989

9:                                                ; preds = %3
  %10 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !5990
  call void @llvm.dbg.value(metadata i32 %10, metadata !5973, metadata !DIExpression()), !dbg !5991
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5992
  %12 = and i32 %11, 128, !dbg !5994
  %13 = icmp eq i32 %12, 0, !dbg !5995
  br i1 %13, label %19, label %14, !dbg !5996

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !5972, metadata !DIExpression()), !dbg !5981
  %15 = icmp eq i32 %1, 0, !dbg !5997
  br i1 %15, label %19, label %16, !dbg !6000

16:                                               ; preds = %14
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6001
  %18 = and i32 %17, -129, !dbg !6001
  store volatile i32 %18, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6001
  br label %19, !dbg !6003

19:                                               ; preds = %9, %16, %14, %3
  %20 = phi i32 [ -22, %3 ], [ %10, %16 ], [ %10, %14 ], [ -22, %9 ], !dbg !5981
  call void @llvm.dbg.value(metadata i32 %20, metadata !5972, metadata !DIExpression()), !dbg !5981
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6004
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6006
  %23 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6008
  %24 = and i32 %23, 16, !dbg !6009
  %25 = icmp eq i32 %24, 0, !dbg !6009
  br i1 %25, label %26, label %30, !dbg !6010

26:                                               ; preds = %19
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6011
  %28 = and i32 %27, 2, !dbg !6012
  %29 = icmp eq i32 %28, 0, !dbg !6012
  br i1 %29, label %39, label %30, !dbg !6013

30:                                               ; preds = %26, %19
  %31 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6014
  %32 = and i32 %31, 2048, !dbg !6015
  %33 = icmp eq i32 %32, 0, !dbg !6015
  br i1 %33, label %39, label %34, !dbg !6016

34:                                               ; preds = %30
  %35 = ptrtoint %struct.__esf* %0 to i32, !dbg !6017
  %36 = tail call i32 @z_check_thread_stack_fail(i32 noundef %20, i32 noundef %35) #24, !dbg !6018
  call void @llvm.dbg.value(metadata i32 %36, metadata !5976, metadata !DIExpression()), !dbg !6019
  %37 = icmp eq i32 %36, 0, !dbg !6020
  br i1 %37, label %39, label %38, !dbg !6022

38:                                               ; preds = %34
  call void @llvm.dbg.value(metadata i32 %36, metadata !6023, metadata !DIExpression()) #23, !dbg !6026
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %36) #23, !dbg !6029, !srcloc !6030
  call void @llvm.dbg.value(metadata i32 2, metadata !5971, metadata !DIExpression()), !dbg !5981
  br label %39, !dbg !6031

39:                                               ; preds = %38, %34, %30, %26
  %40 = phi i32 [ 0, %30 ], [ 0, %26 ], [ 2, %38 ], [ 0, %34 ], !dbg !5981
  call void @llvm.dbg.value(metadata i32 %40, metadata !5971, metadata !DIExpression()), !dbg !5981
  %41 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6032
  %42 = and i32 %41, 32, !dbg !6034
  %43 = icmp eq i32 %42, 0, !dbg !6035
  br i1 %43, label %47, label %44, !dbg !6036

44:                                               ; preds = %39
  %45 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6037
  %46 = and i32 %45, -8193, !dbg !6037
  store volatile i32 %46, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6037
  br label %47, !dbg !6039

47:                                               ; preds = %44, %39
  %48 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6040
  %49 = or i32 %48, 255, !dbg !6040
  store volatile i32 %49, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6040
  store i8 0, i8* %2, align 1, !dbg !6041
  ret i32 %40, !dbg !6042
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !6043 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6047, metadata !DIExpression()), !dbg !6054
  call void @llvm.dbg.value(metadata i32 %0, metadata !6048, metadata !DIExpression()), !dbg !6054
  call void @llvm.dbg.value(metadata i8* %1, metadata !6049, metadata !DIExpression()), !dbg !6054
  call void @llvm.dbg.value(metadata i32 0, metadata !6050, metadata !DIExpression()), !dbg !6054
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6055
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6057
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6059
  %6 = and i32 %5, 512, !dbg !6060
  %7 = icmp eq i32 %6, 0, !dbg !6060
  br i1 %7, label %18, label %8, !dbg !6061

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !6062
  call void @llvm.dbg.value(metadata i32 %9, metadata !6051, metadata !DIExpression()), !dbg !6063
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6064
  %11 = and i32 %10, 32768, !dbg !6066
  %12 = icmp ne i32 %11, 0, !dbg !6067
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !6068
  br i1 %14, label %15, label %18, !dbg !6068

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6069
  %17 = and i32 %16, -32769, !dbg !6069
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6069
  br label %18, !dbg !6073

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6074
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6076
  %21 = and i32 %20, 256, !dbg !6078
  %22 = icmp eq i32 %21, 0, !dbg !6079
  br i1 %22, label %23, label %25, !dbg !6080

23:                                               ; preds = %18
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6081
  br label %25

25:                                               ; preds = %18, %23
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6083
  %27 = or i32 %26, 65280, !dbg !6083
  store volatile i32 %27, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6083
  store i8 0, i8* %1, align 1, !dbg !6084
  ret void, !dbg !6085
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #13 !dbg !6086 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6092, metadata !DIExpression()), !dbg !6094
  call void @llvm.dbg.value(metadata i32 0, metadata !6093, metadata !DIExpression()), !dbg !6094
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6095
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6097
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6099
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6101
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6103
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6105
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6107
  %8 = or i32 %7, -65536, !dbg !6107
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6107
  ret void, !dbg !6108
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #5 !dbg !6109 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6113, metadata !DIExpression()), !dbg !6115
  call void @llvm.dbg.value(metadata i8* %0, metadata !6114, metadata !DIExpression()), !dbg !6115
  store i8 0, i8* %0, align 1, !dbg !6116
  ret void, !dbg !6117
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6118 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6122, metadata !DIExpression()), !dbg !6125
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6126
  %3 = load i32, i32* %2, align 4, !dbg !6126
  %4 = inttoptr i32 %3 to i16*, !dbg !6127
  call void @llvm.dbg.value(metadata i16* %4, metadata !6123, metadata !DIExpression()), !dbg !6125
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6128
  %6 = or i32 %5, 256, !dbg !6128
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6128
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6129, !srcloc !6132
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6133, !srcloc !6136
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !6137
  %8 = load i16, i16* %7, align 2, !dbg !6138
  call void @llvm.dbg.value(metadata i16 %8, metadata !6124, metadata !DIExpression()), !dbg !6125
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6139
  %10 = and i32 %9, -257, !dbg !6139
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6139
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6140, !srcloc !6132
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6142, !srcloc !6136
  %11 = icmp eq i16 %8, -8446, !dbg !6144
  ret i1 %11, !dbg !6146
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #13 !dbg !6147 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6148
  %2 = or i32 %1, 16, !dbg !6148
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6148
  ret void, !dbg !6149
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #13 !dbg !6150 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6153, metadata !DIExpression()), !dbg !6154
  br label %1, !dbg !6155

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !6153, metadata !DIExpression()), !dbg !6154
  tail call fastcc void @__NVIC_SetPriority.14(i32 noundef %2) #25, !dbg !6157
  %3 = add nuw nsw i32 %2, 1, !dbg !6160
  call void @llvm.dbg.value(metadata i32 %3, metadata !6153, metadata !DIExpression()), !dbg !6154
  %4 = icmp eq i32 %3, 82, !dbg !6161
  br i1 %4, label %5, label %1, !dbg !6155, !llvm.loop !6162

5:                                                ; preds = %1
  ret void, !dbg !6164
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.14(i32 noundef %0) unnamed_addr #13 !dbg !6165 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6167, metadata !DIExpression()), !dbg !6169
  call void @llvm.dbg.value(metadata i32 1, metadata !6168, metadata !DIExpression()), !dbg !6169
  %2 = and i32 %0, 15, !dbg !6170
  %3 = add nsw i32 %2, -4, !dbg !6170
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !6170
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6170
  %6 = icmp slt i32 %0, 0, !dbg !6170
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !6170
  store volatile i8 16, i8* %7, align 1, !dbg !6171
  ret void, !dbg !6173
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !6174 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6280, metadata !DIExpression()), !dbg !6281
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6282
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !6284
  br i1 %3, label %4, label %12, !dbg !6285

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !6286, !srcloc !6298
  call void @llvm.dbg.value(metadata i32 %5, metadata !6289, metadata !DIExpression()) #23, !dbg !6299
  %6 = icmp eq i32 %5, 0, !dbg !6300
  br i1 %6, label %12, label %7, !dbg !6301

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6302
  %9 = or i32 %8, 268435456, !dbg !6302
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6302
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6304
  %11 = and i32 %10, -32769, !dbg !6304
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6304
  br label %12, !dbg !6305

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !6306
  ret void, !dbg !6307
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !6308 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #24, !dbg !6309
  ret void, !dbg !6310
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !205 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !329, metadata !DIExpression()), !dbg !6311
  call void @llvm.dbg.value(metadata i8 0, metadata !330, metadata !DIExpression()), !dbg !6311
  call void @llvm.dbg.value(metadata i32 64, metadata !332, metadata !DIExpression()), !dbg !6311
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !6312
  %3 = load i32, i32* %2, align 4, !dbg !6312
  %4 = add i32 %3, -64, !dbg !6314
  call void @llvm.dbg.value(metadata i32 %4, metadata !331, metadata !DIExpression()), !dbg !6311
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !6315
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !6316
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !6317
  call void @llvm.dbg.value(metadata i8 1, metadata !330, metadata !DIExpression()), !dbg !6311
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #24, !dbg !6318
  ret void, !dbg !6319
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !6320 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !6321
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6322, !srcloc !6325
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6326, !srcloc !6329
  ret void, !dbg !6330
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !6331 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #23, !dbg !6332, !srcloc !6335
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !6336
  ret void, !dbg !6337
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #15 !dbg !6338 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6353, metadata !DIExpression()), !dbg !6357
  call void @llvm.dbg.value(metadata i8 %1, metadata !6354, metadata !DIExpression()), !dbg !6357
  call void @llvm.dbg.value(metadata i32 %2, metadata !6355, metadata !DIExpression()), !dbg !6357
  call void @llvm.dbg.value(metadata i32 %3, metadata !6356, metadata !DIExpression()), !dbg !6357
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #25, !dbg !6358
  ret void, !dbg !6360
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !6361 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6366, metadata !DIExpression()), !dbg !6371
  call void @llvm.dbg.value(metadata i8 %1, metadata !6367, metadata !DIExpression()), !dbg !6371
  call void @llvm.dbg.value(metadata i32 undef, metadata !6368, metadata !DIExpression()), !dbg !6371
  call void @llvm.dbg.value(metadata i32 undef, metadata !6369, metadata !DIExpression()), !dbg !6371
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !6372
  call void @llvm.dbg.value(metadata i8 %3, metadata !6370, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6371
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #25, !dbg !6373
  call void @llvm.dbg.value(metadata i32 %4, metadata !6370, metadata !DIExpression()), !dbg !6371
  %5 = trunc i32 %4 to i8, !dbg !6374
  store i8 %5, i8* @static_regions_num, align 1, !dbg !6375
  ret void, !dbg !6376
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #15 !dbg !6377 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6381, metadata !DIExpression()), !dbg !6387
  call void @llvm.dbg.value(metadata i8 %1, metadata !6382, metadata !DIExpression()), !dbg !6387
  call void @llvm.dbg.value(metadata i8 %2, metadata !6383, metadata !DIExpression()), !dbg !6387
  call void @llvm.dbg.value(metadata i1 %3, metadata !6384, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6387
  %5 = zext i8 %2 to i32, !dbg !6388
  call void @llvm.dbg.value(metadata i32 %5, metadata !6386, metadata !DIExpression()), !dbg !6387
  call void @llvm.dbg.value(metadata i32 0, metadata !6385, metadata !DIExpression()), !dbg !6387
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !6386, metadata !DIExpression()), !dbg !6387
  call void @llvm.dbg.value(metadata i32 0, metadata !6385, metadata !DIExpression()), !dbg !6387
  %7 = icmp eq i8 %1, 0, !dbg !6389
  br i1 %7, label %29, label %8, !dbg !6392

8:                                                ; preds = %4, %25
  %9 = phi i32 [ %26, %25 ], [ %5, %4 ]
  %10 = phi i32 [ %27, %25 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6386, metadata !DIExpression()), !dbg !6387
  call void @llvm.dbg.value(metadata i32 %10, metadata !6385, metadata !DIExpression()), !dbg !6387
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !6393
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !6396
  %13 = load i32, i32* %12, align 4, !dbg !6396
  %14 = icmp eq i32 %13, 0, !dbg !6397
  br i1 %14, label %25, label %15, !dbg !6398

15:                                               ; preds = %8
  br i1 %3, label %16, label %19, !dbg !6399

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #25, !dbg !6401
  %18 = icmp eq i32 %17, 0, !dbg !6401
  br i1 %18, label %29, label %19, !dbg !6402

19:                                               ; preds = %16, %15
  %20 = trunc i32 %9 to i8, !dbg !6403
  %21 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %20, %struct.z_arm_mpu_partition* noundef nonnull %11) #25, !dbg !6404
  call void @llvm.dbg.value(metadata i32 %21, metadata !6386, metadata !DIExpression()), !dbg !6387
  %22 = icmp eq i32 %21, -22, !dbg !6405
  br i1 %22, label %29, label %23, !dbg !6407

23:                                               ; preds = %19
  %24 = add nsw i32 %21, 1, !dbg !6408
  call void @llvm.dbg.value(metadata i32 %24, metadata !6386, metadata !DIExpression()), !dbg !6387
  br label %25, !dbg !6409

25:                                               ; preds = %8, %23
  %26 = phi i32 [ %9, %8 ], [ %24, %23 ], !dbg !6387
  call void @llvm.dbg.value(metadata i32 %26, metadata !6386, metadata !DIExpression()), !dbg !6387
  %27 = add nuw nsw i32 %10, 1, !dbg !6410
  call void @llvm.dbg.value(metadata i32 %27, metadata !6385, metadata !DIExpression()), !dbg !6387
  %28 = icmp eq i32 %27, %6, !dbg !6389
  br i1 %28, label %29, label %8, !dbg !6392, !llvm.loop !6411

29:                                               ; preds = %16, %19, %25, %4
  %30 = phi i32 [ %5, %4 ], [ %26, %25 ], [ -22, %19 ], [ -22, %16 ], !dbg !6387
  ret i32 %30, !dbg !6413
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #16 !dbg !6414 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6418, metadata !DIExpression()), !dbg !6420
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !6421
  %3 = load i32, i32* %2, align 4, !dbg !6421
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !6422, !range !6423
  %5 = icmp ult i32 %4, 2, !dbg !6422
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !6424
  br i1 %7, label %8, label %15, !dbg !6424

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !6425
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !6426
  %11 = load i32, i32* %10, align 4, !dbg !6426
  %12 = and i32 %11, %9, !dbg !6427
  %13 = icmp eq i32 %12, 0, !dbg !6428
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !6419, metadata !DIExpression()), !dbg !6420
  ret i32 %16, !dbg !6429
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #15 !dbg !6430 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !6434, metadata !DIExpression()), !dbg !6437
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !6435, metadata !DIExpression()), !dbg !6437
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !6438
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #23, !dbg !6438
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !6436, metadata !DIExpression()), !dbg !6439
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !6440
  %6 = load i32, i32* %5, align 4, !dbg !6440
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !6441
  store i32 %6, i32* %7, align 4, !dbg !6442
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !6443
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !6444
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !6445
  %11 = load i32, i32* %10, align 4, !dbg !6445
  call fastcc void @get_region_attr_from_mpu_partition_info(%union.anon.1* noundef nonnull %8, %union.anon.1* noundef nonnull %9, i32 noundef %11) #25, !dbg !6446
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #25, !dbg !6447
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #23, !dbg !6448
  ret i32 %12, !dbg !6449
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%union.anon.1* nocapture noundef writeonly %0, %union.anon.1* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #17 !dbg !6450 {
  call void @llvm.dbg.value(metadata %union.anon.1* %0, metadata !6457, metadata !DIExpression()), !dbg !6461
  call void @llvm.dbg.value(metadata %union.anon.1* %1, metadata !6458, metadata !DIExpression()), !dbg !6461
  call void @llvm.dbg.value(metadata i32 undef, metadata !6459, metadata !DIExpression()), !dbg !6461
  call void @llvm.dbg.value(metadata i32 %2, metadata !6460, metadata !DIExpression()), !dbg !6461
  %4 = getelementptr inbounds %union.anon.1, %union.anon.1* %1, i32 0, i32 0, !dbg !6462
  %5 = load i32, i32* %4, align 4, !dbg !6462
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #25, !dbg !6463
  %7 = or i32 %6, %5, !dbg !6464
  %8 = getelementptr inbounds %union.anon.1, %union.anon.1* %0, i32 0, i32 0, !dbg !6465
  store i32 %7, i32* %8, align 4, !dbg !6466
  ret void, !dbg !6467
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #13 !dbg !6468 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !6472, metadata !DIExpression()), !dbg !6474
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !6473, metadata !DIExpression()), !dbg !6474
  %3 = zext i8 %0 to i32, !dbg !6475
  %4 = icmp ugt i8 %0, 7, !dbg !6477
  br i1 %4, label %6, label %5, !dbg !6478

5:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #25, !dbg !6479
  br label %6, !dbg !6480

6:                                                ; preds = %2, %5
  %7 = phi i32 [ %3, %5 ], [ -22, %2 ], !dbg !6474
  ret i32 %7, !dbg !6481
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #13 !dbg !6482 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6486, metadata !DIExpression()), !dbg !6488
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !6487, metadata !DIExpression()), !dbg !6488
  tail call fastcc void @set_region_number(i32 noundef %0) #25, !dbg !6489
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !6490
  %4 = load i32, i32* %3, align 4, !dbg !6490
  %5 = and i32 %4, -32, !dbg !6491
  %6 = or i32 %5, %0, !dbg !6492
  %7 = or i32 %6, 16, !dbg !6492
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !6493
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !6494
  %9 = load i32, i32* %8, align 4, !dbg !6494
  %10 = or i32 %9, 1, !dbg !6495
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !6496
  ret void, !dbg !6497
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #13 !dbg !6498 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6501, metadata !DIExpression()), !dbg !6502
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !6503
  ret void, !dbg !6504
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #9 !dbg !6505 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6509, metadata !DIExpression()), !dbg !6510
  %2 = icmp ult i32 %0, 33, !dbg !6511
  br i1 %2, label %11, label %3, !dbg !6513

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !6514
  br i1 %4, label %11, label %5, !dbg !6516

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !6517
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !6518, !range !6423
  %8 = mul nsw i32 %7, -2, !dbg !6519
  %9 = add nsw i32 %8, 62, !dbg !6519
  %10 = and i32 %9, 62, !dbg !6520
  br label %11, !dbg !6521

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !6510
  ret i32 %12, !dbg !6522
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #15 !dbg !6523 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6527, metadata !DIExpression()), !dbg !6529
  call void @llvm.dbg.value(metadata i8 %1, metadata !6528, metadata !DIExpression()), !dbg !6529
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #25, !dbg !6530
  ret void, !dbg !6532
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !6533 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6537, metadata !DIExpression()), !dbg !6544
  call void @llvm.dbg.value(metadata i8 %1, metadata !6538, metadata !DIExpression()), !dbg !6544
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !6545
  call void @llvm.dbg.value(metadata i8 %3, metadata !6539, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6544
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #25, !dbg !6546
  call void @llvm.dbg.value(metadata i32 %4, metadata !6539, metadata !DIExpression()), !dbg !6544
  %5 = icmp ne i32 %4, -22, !dbg !6547
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !6548
  call void @llvm.dbg.value(metadata i32 %4, metadata !6540, metadata !DIExpression()), !dbg !6549
  br i1 %7, label %8, label %12, !dbg !6548

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6540, metadata !DIExpression()), !dbg !6549
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #25, !dbg !6550
  %10 = add i32 %9, 1, !dbg !6553
  call void @llvm.dbg.value(metadata i32 %10, metadata !6540, metadata !DIExpression()), !dbg !6549
  %11 = icmp eq i32 %10, 8, !dbg !6554
  br i1 %11, label %12, label %8, !dbg !6555, !llvm.loop !6556

12:                                               ; preds = %8, %2
  ret void, !dbg !6558
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #13 !dbg !6559 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6562, metadata !DIExpression()), !dbg !6563
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !6564
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !6565
  ret void, !dbg !6566
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !6567 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !6572
  %2 = icmp ugt i32 %1, 8, !dbg !6574
  br i1 %2, label %14, label %3, !dbg !6575

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #25, !dbg !6576
  call void @llvm.dbg.value(metadata i32 0, metadata !6571, metadata !DIExpression()), !dbg !6577
  %4 = icmp eq i32 %1, 0, !dbg !6578
  br i1 %4, label %12, label %5, !dbg !6581

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !6581

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !6571, metadata !DIExpression()), !dbg !6577
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !6582
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #25, !dbg !6584
  %10 = add nuw i32 %8, 1, !dbg !6585
  call void @llvm.dbg.value(metadata i32 %10, metadata !6571, metadata !DIExpression()), !dbg !6577
  %11 = icmp eq i32 %10, %1, !dbg !6578
  br i1 %11, label %12, label %7, !dbg !6581, !llvm.loop !6586

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !6588
  store i8 %13, i8* @static_regions_num, align 1, !dbg !6589
  tail call void @arm_core_mpu_enable() #25, !dbg !6590
  br label %14, !dbg !6591

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !6577
  ret i32 %15, !dbg !6592
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #11 !dbg !6593 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6600, metadata !DIExpression()), !dbg !6603
  call void @llvm.dbg.value(metadata i8* %1, metadata !6601, metadata !DIExpression()), !dbg !6603
  call void @llvm.dbg.value(metadata i8* %0, metadata !6602, metadata !DIExpression()), !dbg !6603
  %3 = load i8, i8* %1, align 1, !dbg !6604
  %4 = icmp eq i8 %3, 0, !dbg !6605
  br i1 %4, label %13, label %5, !dbg !6606

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !6600, metadata !DIExpression()), !dbg !6603
  call void @llvm.dbg.value(metadata i8* %8, metadata !6601, metadata !DIExpression()), !dbg !6603
  store i8 %6, i8* %7, align 1, !dbg !6607
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !6609
  call void @llvm.dbg.value(metadata i8* %9, metadata !6600, metadata !DIExpression()), !dbg !6603
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6610
  call void @llvm.dbg.value(metadata i8* %10, metadata !6601, metadata !DIExpression()), !dbg !6603
  %11 = load i8, i8* %10, align 1, !dbg !6604
  %12 = icmp eq i8 %11, 0, !dbg !6605
  br i1 %12, label %13, label %5, !dbg !6606, !llvm.loop !6611

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !6613
  ret i8* %0, !dbg !6614
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !6615 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6619, metadata !DIExpression()), !dbg !6623
  call void @llvm.dbg.value(metadata i8* %1, metadata !6620, metadata !DIExpression()), !dbg !6623
  call void @llvm.dbg.value(metadata i32 %2, metadata !6621, metadata !DIExpression()), !dbg !6623
  call void @llvm.dbg.value(metadata i8* %0, metadata !6622, metadata !DIExpression()), !dbg !6623
  %4 = icmp eq i32 %2, 0, !dbg !6624
  br i1 %4, label %22, label %5, !dbg !6625

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !6619, metadata !DIExpression()), !dbg !6623
  call void @llvm.dbg.value(metadata i32 %7, metadata !6621, metadata !DIExpression()), !dbg !6623
  call void @llvm.dbg.value(metadata i8* %8, metadata !6620, metadata !DIExpression()), !dbg !6623
  %9 = load i8, i8* %8, align 1, !dbg !6626
  %10 = icmp eq i8 %9, 0, !dbg !6627
  br i1 %10, label %16, label %11, !dbg !6628

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !6629
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6631
  call void @llvm.dbg.value(metadata i8* %12, metadata !6620, metadata !DIExpression()), !dbg !6623
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !6632
  call void @llvm.dbg.value(metadata i8* %13, metadata !6619, metadata !DIExpression()), !dbg !6623
  %14 = add i32 %7, -1, !dbg !6633
  call void @llvm.dbg.value(metadata i32 %14, metadata !6621, metadata !DIExpression()), !dbg !6623
  %15 = icmp eq i32 %14, 0, !dbg !6624
  br i1 %15, label %22, label %5, !dbg !6625, !llvm.loop !6634

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !6619, metadata !DIExpression()), !dbg !6623
  call void @llvm.dbg.value(metadata i32 %18, metadata !6621, metadata !DIExpression()), !dbg !6623
  store i8 0, i8* %17, align 1, !dbg !6636
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !6638
  call void @llvm.dbg.value(metadata i8* %19, metadata !6619, metadata !DIExpression()), !dbg !6623
  %20 = add i32 %18, -1, !dbg !6639
  call void @llvm.dbg.value(metadata i32 %20, metadata !6621, metadata !DIExpression()), !dbg !6623
  %21 = icmp eq i32 %20, 0, !dbg !6640
  br i1 %21, label %22, label %16, !dbg !6641, !llvm.loop !6642

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !6644
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #18 !dbg !6645 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6649, metadata !DIExpression()), !dbg !6652
  call void @llvm.dbg.value(metadata i32 %1, metadata !6650, metadata !DIExpression()), !dbg !6652
  call void @llvm.dbg.value(metadata i32 %1, metadata !6651, metadata !DIExpression()), !dbg !6652
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !6653

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !6649, metadata !DIExpression()), !dbg !6652
  %6 = load i8, i8* %5, align 1, !dbg !6654
  %7 = icmp eq i8 %6, %3, !dbg !6655
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !6656
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !6657
  call void @llvm.dbg.value(metadata i8* %10, metadata !6649, metadata !DIExpression()), !dbg !6652
  br i1 %9, label %11, label %4, !dbg !6656, !llvm.loop !6659

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !6661
  ret i8* %12, !dbg !6662
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #18 !dbg !6663 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6665, metadata !DIExpression()), !dbg !6668
  call void @llvm.dbg.value(metadata i32 %1, metadata !6666, metadata !DIExpression()), !dbg !6668
  call void @llvm.dbg.value(metadata i8* null, metadata !6667, metadata !DIExpression()), !dbg !6668
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !6669

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !6668
  call void @llvm.dbg.value(metadata i8* %6, metadata !6667, metadata !DIExpression()), !dbg !6668
  call void @llvm.dbg.value(metadata i8* %5, metadata !6665, metadata !DIExpression()), !dbg !6668
  %7 = load i8, i8* %5, align 1, !dbg !6670
  %8 = icmp eq i8 %7, %3, !dbg !6673
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !6674
  call void @llvm.dbg.value(metadata i8* %9, metadata !6667, metadata !DIExpression()), !dbg !6668
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !6675
  call void @llvm.dbg.value(metadata i8* %10, metadata !6665, metadata !DIExpression()), !dbg !6668
  %11 = icmp eq i8 %7, 0, !dbg !6676
  br i1 %11, label %12, label %4, !dbg !6676, !llvm.loop !6677

12:                                               ; preds = %4
  ret i8* %9, !dbg !6679
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #18 !dbg !6680 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6684, metadata !DIExpression()), !dbg !6686
  call void @llvm.dbg.value(metadata i32 0, metadata !6685, metadata !DIExpression()), !dbg !6686
  %2 = load i8, i8* %0, align 1, !dbg !6687
  %3 = icmp eq i8 %2, 0, !dbg !6688
  br i1 %3, label %11, label %4, !dbg !6689

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !6685, metadata !DIExpression()), !dbg !6686
  call void @llvm.dbg.value(metadata i8* %6, metadata !6684, metadata !DIExpression()), !dbg !6686
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !6690
  call void @llvm.dbg.value(metadata i8* %7, metadata !6684, metadata !DIExpression()), !dbg !6686
  %8 = add i32 %5, 1, !dbg !6692
  call void @llvm.dbg.value(metadata i32 %8, metadata !6685, metadata !DIExpression()), !dbg !6686
  %9 = load i8, i8* %7, align 1, !dbg !6687
  %10 = icmp eq i8 %9, 0, !dbg !6688
  br i1 %10, label %11, label %4, !dbg !6689, !llvm.loop !6693

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !6686
  ret i32 %12, !dbg !6695
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #18 !dbg !6696 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6700, metadata !DIExpression()), !dbg !6703
  call void @llvm.dbg.value(metadata i32 %1, metadata !6701, metadata !DIExpression()), !dbg !6703
  call void @llvm.dbg.value(metadata i32 0, metadata !6702, metadata !DIExpression()), !dbg !6703
  %3 = load i8, i8* %0, align 1, !dbg !6704
  %4 = icmp ne i8 %3, 0, !dbg !6705
  %5 = icmp ne i32 %1, 0, !dbg !6706
  %6 = and i1 %4, %5, !dbg !6706
  br i1 %6, label %7, label %16, !dbg !6707

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !6702, metadata !DIExpression()), !dbg !6703
  call void @llvm.dbg.value(metadata i8* %9, metadata !6700, metadata !DIExpression()), !dbg !6703
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !6708
  call void @llvm.dbg.value(metadata i8* %10, metadata !6700, metadata !DIExpression()), !dbg !6703
  %11 = add nuw i32 %8, 1, !dbg !6710
  call void @llvm.dbg.value(metadata i32 %11, metadata !6702, metadata !DIExpression()), !dbg !6703
  %12 = load i8, i8* %10, align 1, !dbg !6704
  %13 = icmp ne i8 %12, 0, !dbg !6705
  %14 = icmp ult i32 %11, %1, !dbg !6706
  %15 = select i1 %13, i1 %14, i1 false, !dbg !6706
  br i1 %15, label %7, label %16, !dbg !6707, !llvm.loop !6711

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !6703
  ret i32 %17, !dbg !6713
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #18 !dbg !6714 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6718, metadata !DIExpression()), !dbg !6720
  call void @llvm.dbg.value(metadata i8* %1, metadata !6719, metadata !DIExpression()), !dbg !6720
  %3 = load i8, i8* %0, align 1, !dbg !6721
  %4 = load i8, i8* %1, align 1, !dbg !6722
  %5 = icmp ne i8 %3, %4, !dbg !6723
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !6724
  br i1 %7, label %18, label %8, !dbg !6724

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !6719, metadata !DIExpression()), !dbg !6720
  call void @llvm.dbg.value(metadata i8* %10, metadata !6718, metadata !DIExpression()), !dbg !6720
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6725
  call void @llvm.dbg.value(metadata i8* %11, metadata !6718, metadata !DIExpression()), !dbg !6720
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !6727
  call void @llvm.dbg.value(metadata i8* %12, metadata !6719, metadata !DIExpression()), !dbg !6720
  %13 = load i8, i8* %11, align 1, !dbg !6721
  %14 = load i8, i8* %12, align 1, !dbg !6722
  %15 = icmp ne i8 %13, %14, !dbg !6723
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !6724
  br i1 %17, label %18, label %8, !dbg !6724, !llvm.loop !6728

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !6721
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !6722
  %21 = zext i8 %19 to i32, !dbg !6731
  %22 = zext i8 %20 to i32, !dbg !6732
  %23 = sub nsw i32 %21, %22, !dbg !6733
  ret i32 %23, !dbg !6734
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #18 !dbg !6735 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6739, metadata !DIExpression()), !dbg !6742
  call void @llvm.dbg.value(metadata i8* %1, metadata !6740, metadata !DIExpression()), !dbg !6742
  call void @llvm.dbg.value(metadata i32 %2, metadata !6741, metadata !DIExpression()), !dbg !6742
  %4 = icmp eq i32 %2, 0, !dbg !6743
  br i1 %4, label %23, label %5, !dbg !6743

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !6741, metadata !DIExpression()), !dbg !6742
  call void @llvm.dbg.value(metadata i8* %7, metadata !6740, metadata !DIExpression()), !dbg !6742
  call void @llvm.dbg.value(metadata i8* %8, metadata !6739, metadata !DIExpression()), !dbg !6742
  %9 = load i8, i8* %8, align 1, !dbg !6744
  %10 = load i8, i8* %7, align 1, !dbg !6745
  %11 = icmp ne i8 %9, %10, !dbg !6746
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !6747
  br i1 %13, label %19, label %14, !dbg !6747

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6748
  call void @llvm.dbg.value(metadata i8* %15, metadata !6739, metadata !DIExpression()), !dbg !6742
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !6750
  call void @llvm.dbg.value(metadata i8* %16, metadata !6740, metadata !DIExpression()), !dbg !6742
  %17 = add i32 %6, -1, !dbg !6751
  call void @llvm.dbg.value(metadata i32 %17, metadata !6741, metadata !DIExpression()), !dbg !6742
  %18 = icmp eq i32 %17, 0, !dbg !6743
  br i1 %18, label %23, label %5, !dbg !6743, !llvm.loop !6752

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !6755
  %21 = zext i8 %10 to i32, !dbg !6756
  %22 = sub nsw i32 %20, %21, !dbg !6757
  br label %23, !dbg !6758

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !6758
  ret i32 %24, !dbg !6759
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #11 !dbg !6760 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6765, metadata !DIExpression()), !dbg !6770
  call void @llvm.dbg.value(metadata i8* %1, metadata !6766, metadata !DIExpression()), !dbg !6770
  call void @llvm.dbg.value(metadata i8** %2, metadata !6767, metadata !DIExpression()), !dbg !6770
  %4 = icmp eq i8* %0, null, !dbg !6771
  br i1 %4, label %5, label %7, !dbg !6771

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !6772
  br label %7, !dbg !6771

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !6771
  call void @llvm.dbg.value(metadata i8* %8, metadata !6768, metadata !DIExpression()), !dbg !6770
  %9 = load i8, i8* %8, align 1, !dbg !6773
  %10 = icmp eq i8 %9, 0, !dbg !6773
  br i1 %10, label %33, label %11, !dbg !6774

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !6768, metadata !DIExpression()), !dbg !6770
  %14 = zext i8 %12 to i32, !dbg !6773
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #25, !dbg !6775
  %16 = icmp eq i8* %15, null, !dbg !6774
  br i1 %16, label %21, label %17, !dbg !6776

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !6777
  call void @llvm.dbg.value(metadata i8* %18, metadata !6768, metadata !DIExpression()), !dbg !6770
  %19 = load i8, i8* %18, align 1, !dbg !6773
  %20 = icmp eq i8 %19, 0, !dbg !6773
  br i1 %20, label %33, label %11, !dbg !6774, !llvm.loop !6779

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !6769, metadata !DIExpression()), !dbg !6770
  %24 = zext i8 %22 to i32, !dbg !6781
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #25, !dbg !6782
  %26 = icmp eq i8* %25, null, !dbg !6783
  br i1 %26, label %27, label %31, !dbg !6784

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !6785
  call void @llvm.dbg.value(metadata i8* %28, metadata !6769, metadata !DIExpression()), !dbg !6770
  %29 = load i8, i8* %28, align 1, !dbg !6781
  %30 = icmp eq i8 %29, 0, !dbg !6781
  br i1 %30, label %33, label %21, !dbg !6787, !llvm.loop !6788

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !6790
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !6793
  br label %33, !dbg !6794

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !6770
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !6770
  store i8* %34, i8** %2, align 4, !dbg !6770
  ret i8* %35, !dbg !6795
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #11 !dbg !6796 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6798, metadata !DIExpression()), !dbg !6800
  call void @llvm.dbg.value(metadata i8* %1, metadata !6799, metadata !DIExpression()), !dbg !6800
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !6801
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !6802
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #25, !dbg !6803
  ret i8* %0, !dbg !6804
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !6805 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6807, metadata !DIExpression()), !dbg !6812
  call void @llvm.dbg.value(metadata i8* %1, metadata !6808, metadata !DIExpression()), !dbg !6812
  call void @llvm.dbg.value(metadata i32 %2, metadata !6809, metadata !DIExpression()), !dbg !6812
  call void @llvm.dbg.value(metadata i8* %0, metadata !6810, metadata !DIExpression()), !dbg !6812
  %4 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !6813
  call void @llvm.dbg.value(metadata i32 %4, metadata !6811, metadata !DIExpression()), !dbg !6812
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !6814
  call void @llvm.dbg.value(metadata i8* %5, metadata !6807, metadata !DIExpression()), !dbg !6812
  call void @llvm.dbg.value(metadata i8* %1, metadata !6808, metadata !DIExpression()), !dbg !6812
  call void @llvm.dbg.value(metadata i32 %2, metadata !6809, metadata !DIExpression()), !dbg !6812
  call void @llvm.dbg.value(metadata i32 %2, metadata !6809, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6812
  %6 = icmp eq i32 %2, 0, !dbg !6815
  br i1 %6, label %18, label %7, !dbg !6816

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !6817
  call void @llvm.dbg.value(metadata i8* %9, metadata !6807, metadata !DIExpression()), !dbg !6812
  call void @llvm.dbg.value(metadata i8* %10, metadata !6808, metadata !DIExpression()), !dbg !6812
  %12 = load i8, i8* %10, align 1, !dbg !6818
  %13 = icmp eq i8 %12, 0, !dbg !6819
  br i1 %13, label %18, label %14, !dbg !6820

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6821
  call void @llvm.dbg.value(metadata i8* %15, metadata !6808, metadata !DIExpression()), !dbg !6812
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !6823
  call void @llvm.dbg.value(metadata i8* %16, metadata !6807, metadata !DIExpression()), !dbg !6812
  store i8 %12, i8* %9, align 1, !dbg !6824
  call void @llvm.dbg.value(metadata i32 %11, metadata !6809, metadata !DIExpression()), !dbg !6812
  call void @llvm.dbg.value(metadata i32 %11, metadata !6809, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6812
  %17 = icmp eq i32 %11, 0, !dbg !6815
  br i1 %17, label %18, label %7, !dbg !6816, !llvm.loop !6825

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !6812
  store i8 0, i8* %19, align 1, !dbg !6827
  ret i8* %0, !dbg !6828
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #18 !dbg !6829 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6833, metadata !DIExpression()), !dbg !6838
  call void @llvm.dbg.value(metadata i8* %1, metadata !6834, metadata !DIExpression()), !dbg !6838
  call void @llvm.dbg.value(metadata i32 %2, metadata !6835, metadata !DIExpression()), !dbg !6838
  call void @llvm.dbg.value(metadata i8* %0, metadata !6836, metadata !DIExpression()), !dbg !6838
  call void @llvm.dbg.value(metadata i8* %1, metadata !6837, metadata !DIExpression()), !dbg !6838
  %4 = icmp eq i32 %2, 0, !dbg !6839
  br i1 %4, label %31, label %5, !dbg !6841

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !6837, metadata !DIExpression()), !dbg !6838
  call void @llvm.dbg.value(metadata i8* %0, metadata !6836, metadata !DIExpression()), !dbg !6838
  call void @llvm.dbg.value(metadata i32 %2, metadata !6835, metadata !DIExpression()), !dbg !6838
  %6 = add i32 %2, -1, !dbg !6842
  call void @llvm.dbg.value(metadata i32 %6, metadata !6835, metadata !DIExpression()), !dbg !6838
  %7 = icmp eq i32 %6, 0, !dbg !6843
  br i1 %7, label %23, label %8, !dbg !6844

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !6845
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !6845
  br label %11, !dbg !6845

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !6837, metadata !DIExpression()), !dbg !6838
  call void @llvm.dbg.value(metadata i8* %14, metadata !6836, metadata !DIExpression()), !dbg !6838
  %15 = load i8, i8* %14, align 1, !dbg !6846
  %16 = load i8, i8* %13, align 1, !dbg !6847
  %17 = icmp eq i8 %15, %16, !dbg !6848
  br i1 %17, label %18, label %23, !dbg !6845

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !6849
  call void @llvm.dbg.value(metadata i8* %19, metadata !6836, metadata !DIExpression()), !dbg !6838
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !6851
  call void @llvm.dbg.value(metadata i8* %20, metadata !6837, metadata !DIExpression()), !dbg !6838
  call void @llvm.dbg.value(metadata i32 %12, metadata !6835, metadata !DIExpression()), !dbg !6838
  %21 = add i32 %12, -1, !dbg !6842
  call void @llvm.dbg.value(metadata i32 %21, metadata !6835, metadata !DIExpression()), !dbg !6838
  %22 = icmp eq i32 %21, 0, !dbg !6843
  br i1 %22, label %23, label %11, !dbg !6844, !llvm.loop !6852

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !6838
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !6838
  %26 = load i8, i8* %24, align 1, !dbg !6854
  %27 = zext i8 %26 to i32, !dbg !6854
  %28 = load i8, i8* %25, align 1, !dbg !6855
  %29 = zext i8 %28 to i32, !dbg !6855
  %30 = sub nsw i32 %27, %29, !dbg !6856
  br label %31, !dbg !6857

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !6838
  ret i32 %32, !dbg !6858
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #11 !dbg !6859 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6863, metadata !DIExpression()), !dbg !6868
  call void @llvm.dbg.value(metadata i8* %1, metadata !6864, metadata !DIExpression()), !dbg !6868
  call void @llvm.dbg.value(metadata i32 %2, metadata !6865, metadata !DIExpression()), !dbg !6868
  call void @llvm.dbg.value(metadata i8* %0, metadata !6866, metadata !DIExpression()), !dbg !6868
  call void @llvm.dbg.value(metadata i8* %1, metadata !6867, metadata !DIExpression()), !dbg !6868
  %4 = ptrtoint i8* %0 to i32, !dbg !6869
  %5 = ptrtoint i8* %1 to i32, !dbg !6869
  %6 = sub i32 %4, %5, !dbg !6869
  %7 = icmp ult i32 %6, %2, !dbg !6871
  br i1 %7, label %10, label %8, !dbg !6872

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !6867, metadata !DIExpression()), !dbg !6868
  call void @llvm.dbg.value(metadata i8* %0, metadata !6866, metadata !DIExpression()), !dbg !6868
  call void @llvm.dbg.value(metadata i32 %2, metadata !6865, metadata !DIExpression()), !dbg !6868
  %9 = icmp eq i32 %2, 0, !dbg !6873
  br i1 %9, label %26, label %17, !dbg !6875

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !6865, metadata !DIExpression()), !dbg !6868
  %12 = add i32 %11, -1, !dbg !6876
  call void @llvm.dbg.value(metadata i32 %12, metadata !6865, metadata !DIExpression()), !dbg !6868
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !6879
  %14 = load i8, i8* %13, align 1, !dbg !6879
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !6880
  store i8 %14, i8* %15, align 1, !dbg !6881
  %16 = icmp eq i32 %12, 0, !dbg !6882
  br i1 %16, label %26, label %10, !dbg !6883, !llvm.loop !6884

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !6867, metadata !DIExpression()), !dbg !6868
  call void @llvm.dbg.value(metadata i8* %19, metadata !6866, metadata !DIExpression()), !dbg !6868
  call void @llvm.dbg.value(metadata i32 %20, metadata !6865, metadata !DIExpression()), !dbg !6868
  %21 = load i8, i8* %18, align 1, !dbg !6886
  store i8 %21, i8* %19, align 1, !dbg !6888
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !6889
  call void @llvm.dbg.value(metadata i8* %22, metadata !6866, metadata !DIExpression()), !dbg !6868
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !6890
  call void @llvm.dbg.value(metadata i8* %23, metadata !6867, metadata !DIExpression()), !dbg !6868
  %24 = add i32 %20, -1, !dbg !6891
  call void @llvm.dbg.value(metadata i32 %24, metadata !6865, metadata !DIExpression()), !dbg !6868
  %25 = icmp eq i32 %24, 0, !dbg !6873
  br i1 %25, label %26, label %17, !dbg !6875, !llvm.loop !6892

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !6894
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !6895 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6901, metadata !DIExpression()), !dbg !6906
  call void @llvm.dbg.value(metadata i8* %1, metadata !6902, metadata !DIExpression()), !dbg !6906
  call void @llvm.dbg.value(metadata i32 %2, metadata !6903, metadata !DIExpression()), !dbg !6906
  call void @llvm.dbg.value(metadata i8* %0, metadata !6904, metadata !DIExpression()), !dbg !6906
  call void @llvm.dbg.value(metadata i8* %1, metadata !6905, metadata !DIExpression()), !dbg !6906
  %4 = icmp eq i32 %2, 0, !dbg !6907
  br i1 %4, label %14, label %5, !dbg !6908

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !6905, metadata !DIExpression()), !dbg !6906
  call void @llvm.dbg.value(metadata i8* %7, metadata !6904, metadata !DIExpression()), !dbg !6906
  call void @llvm.dbg.value(metadata i32 %8, metadata !6903, metadata !DIExpression()), !dbg !6906
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !6909
  call void @llvm.dbg.value(metadata i8* %9, metadata !6905, metadata !DIExpression()), !dbg !6906
  %10 = load i8, i8* %6, align 1, !dbg !6911
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !6912
  call void @llvm.dbg.value(metadata i8* %11, metadata !6904, metadata !DIExpression()), !dbg !6906
  store i8 %10, i8* %7, align 1, !dbg !6913
  %12 = add i32 %8, -1, !dbg !6914
  call void @llvm.dbg.value(metadata i32 %12, metadata !6903, metadata !DIExpression()), !dbg !6906
  %13 = icmp eq i32 %12, 0, !dbg !6907
  br i1 %13, label %14, label %5, !dbg !6908, !llvm.loop !6915

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !6917
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !6918 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6922, metadata !DIExpression()), !dbg !6927
  call void @llvm.dbg.value(metadata i32 %1, metadata !6923, metadata !DIExpression()), !dbg !6927
  call void @llvm.dbg.value(metadata i32 %2, metadata !6924, metadata !DIExpression()), !dbg !6927
  call void @llvm.dbg.value(metadata i8* %0, metadata !6925, metadata !DIExpression()), !dbg !6927
  %4 = trunc i32 %1 to i8, !dbg !6928
  call void @llvm.dbg.value(metadata i8 %4, metadata !6926, metadata !DIExpression()), !dbg !6927
  call void @llvm.dbg.value(metadata i32 %2, metadata !6924, metadata !DIExpression()), !dbg !6927
  call void @llvm.dbg.value(metadata i8* %0, metadata !6925, metadata !DIExpression()), !dbg !6927
  %5 = icmp eq i32 %2, 0, !dbg !6929
  br i1 %5, label %12, label %6, !dbg !6930

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !6924, metadata !DIExpression()), !dbg !6927
  call void @llvm.dbg.value(metadata i8* %8, metadata !6925, metadata !DIExpression()), !dbg !6927
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6931
  call void @llvm.dbg.value(metadata i8* %9, metadata !6925, metadata !DIExpression()), !dbg !6927
  store i8 %4, i8* %8, align 1, !dbg !6933
  %10 = add i32 %7, -1, !dbg !6934
  call void @llvm.dbg.value(metadata i32 %10, metadata !6924, metadata !DIExpression()), !dbg !6927
  %11 = icmp eq i32 %10, 0, !dbg !6929
  br i1 %11, label %12, label %6, !dbg !6930, !llvm.loop !6935

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !6937
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !6938 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6942, metadata !DIExpression()), !dbg !6948
  call void @llvm.dbg.value(metadata i32 %1, metadata !6943, metadata !DIExpression()), !dbg !6948
  call void @llvm.dbg.value(metadata i32 %2, metadata !6944, metadata !DIExpression()), !dbg !6948
  %4 = icmp eq i32 %2, 0, !dbg !6949
  br i1 %4, label %17, label %5, !dbg !6950

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !6951

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !6952
  call void @llvm.dbg.value(metadata i8* %9, metadata !6945, metadata !DIExpression()), !dbg !6952
  call void @llvm.dbg.value(metadata i32 %8, metadata !6944, metadata !DIExpression()), !dbg !6948
  call void @llvm.dbg.value(metadata i8* %9, metadata !6945, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6952
  %10 = load i8, i8* %9, align 1, !dbg !6953
  %11 = icmp eq i8 %10, %6, !dbg !6956
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !6957
  call void @llvm.dbg.value(metadata i8* %12, metadata !6945, metadata !DIExpression()), !dbg !6952
  call void @llvm.dbg.value(metadata i32 %13, metadata !6944, metadata !DIExpression()), !dbg !6948
  br i1 %15, label %16, label %7, !dbg !6957, !llvm.loop !6958

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !6960

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !6948
  ret i8* %19, !dbg !6961
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #5 !dbg !6962 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !6964, metadata !DIExpression()), !dbg !6965
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !6966
  ret void, !dbg !6967
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #12 !dbg !6968 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6970, metadata !DIExpression()), !dbg !6971
  ret i32 -1, !dbg !6972
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !6973 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6977, metadata !DIExpression()), !dbg !6979
  call void @llvm.dbg.value(metadata i32* %1, metadata !6978, metadata !DIExpression()), !dbg !6979
  %3 = ptrtoint i32* %1 to i32, !dbg !6980
  %4 = and i32 %3, -2, !dbg !6980
  %5 = icmp eq i32 %4, 2, !dbg !6980
  br i1 %5, label %6, label %9, !dbg !6980

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !6981
  %8 = tail call i32 %7(i32 noundef %0) #24, !dbg !6981
  br label %9, !dbg !6982

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !6982
  ret i32 %10, !dbg !6983
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) #1 !dbg !6984 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6986, metadata !DIExpression()), !dbg !6988
  call void @llvm.dbg.value(metadata i32* %1, metadata !6987, metadata !DIExpression()), !dbg !6988
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #25, !dbg !6989
  ret i32 %3, !dbg !6990
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !6991 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6994, metadata !DIExpression()), !dbg !6996
  call void @llvm.dbg.value(metadata i32* %1, metadata !6995, metadata !DIExpression()), !dbg !6996
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6997, !srcloc !6999
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #25, !dbg !7000
  ret i32 %3, !dbg !7001
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !7002 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7007, metadata !DIExpression()), !dbg !7011
  call void @llvm.dbg.value(metadata i32* %1, metadata !7008, metadata !DIExpression()), !dbg !7011
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !7012
  call void @llvm.dbg.value(metadata i32 %3, metadata !7009, metadata !DIExpression()), !dbg !7011
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #25, !dbg !7013
  call void @llvm.dbg.value(metadata i32 %4, metadata !7010, metadata !DIExpression()), !dbg !7011
  %5 = icmp ne i32 %3, %4, !dbg !7014
  %6 = sext i1 %5 to i32, !dbg !7015
  ret i32 %6, !dbg !7016
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !7017 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7021, metadata !DIExpression()), !dbg !7025
  call void @llvm.dbg.value(metadata i32 %1, metadata !7022, metadata !DIExpression()), !dbg !7025
  call void @llvm.dbg.value(metadata i32 %2, metadata !7023, metadata !DIExpression()), !dbg !7025
  call void @llvm.dbg.value(metadata i32* %3, metadata !7024, metadata !DIExpression()), !dbg !7025
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #25, !dbg !7026
  ret i32 %5, !dbg !7027
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !7028 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7030, metadata !DIExpression()), !dbg !7034
  call void @llvm.dbg.value(metadata i32 %1, metadata !7031, metadata !DIExpression()), !dbg !7034
  call void @llvm.dbg.value(metadata i32 %2, metadata !7032, metadata !DIExpression()), !dbg !7034
  call void @llvm.dbg.value(metadata i32* %3, metadata !7033, metadata !DIExpression()), !dbg !7034
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7035, !srcloc !7037
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #25, !dbg !7038
  ret i32 %5, !dbg !7039
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !7040 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7042, metadata !DIExpression()), !dbg !7050
  call void @llvm.dbg.value(metadata i32 %1, metadata !7043, metadata !DIExpression()), !dbg !7050
  call void @llvm.dbg.value(metadata i32 %2, metadata !7044, metadata !DIExpression()), !dbg !7050
  call void @llvm.dbg.value(metadata i32* %3, metadata !7045, metadata !DIExpression()), !dbg !7050
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !7051
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !7053
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !7053
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !7053
  br i1 %11, label %33, label %12, !dbg !7053

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !7050
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !7050
  call void @llvm.dbg.value(metadata i8* %14, metadata !7048, metadata !DIExpression()), !dbg !7050
  call void @llvm.dbg.value(metadata i32 %13, metadata !7046, metadata !DIExpression()), !dbg !7050
  call void @llvm.dbg.value(metadata i32 %1, metadata !7047, metadata !DIExpression()), !dbg !7050
  br label %15, !dbg !7054

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !7056
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !7050
  call void @llvm.dbg.value(metadata i8* %17, metadata !7048, metadata !DIExpression()), !dbg !7050
  call void @llvm.dbg.value(metadata i32 %16, metadata !7047, metadata !DIExpression()), !dbg !7050
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7057
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7060
  call void @llvm.dbg.value(metadata i8* %19, metadata !7048, metadata !DIExpression()), !dbg !7050
  %20 = load i8, i8* %17, align 1, !dbg !7061
  %21 = zext i8 %20 to i32, !dbg !7062
  %22 = tail call i32 %18(i32 noundef %21) #24, !dbg !7057
  %23 = icmp eq i32 %22, -1, !dbg !7063
  br i1 %23, label %30, label %24, !dbg !7064

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !7065
  call void @llvm.dbg.value(metadata i32 %25, metadata !7047, metadata !DIExpression()), !dbg !7050
  %26 = icmp eq i32 %25, 0, !dbg !7066
  br i1 %26, label %27, label %15, !dbg !7067, !llvm.loop !7068

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !7070
  call void @llvm.dbg.value(metadata i32 %28, metadata !7046, metadata !DIExpression()), !dbg !7050
  %29 = icmp eq i32 %28, 0, !dbg !7071
  br i1 %29, label %30, label %12, !dbg !7072, !llvm.loop !7073

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !7050
  call void @llvm.dbg.value(metadata i32 %31, metadata !7046, metadata !DIExpression()), !dbg !7050
  call void @llvm.dbg.label(metadata !7049), !dbg !7076
  %32 = sub i32 %2, %31, !dbg !7077
  br label %33, !dbg !7078

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !7050
  ret i32 %34, !dbg !7079
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !7080 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7084, metadata !DIExpression()), !dbg !7085
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #25, !dbg !7086
  %3 = icmp eq i32 %2, -1, !dbg !7088
  br i1 %3, label %8, label %4, !dbg !7089

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #25, !dbg !7090
  %6 = icmp eq i32 %5, -1, !dbg !7091
  %7 = sext i1 %6 to i32, !dbg !7090
  br label %8, !dbg !7092

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !7085
  ret i32 %9, !dbg !7093
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fprintf(i32* noalias noundef %0, i8* noalias noundef %1, ...) local_unnamed_addr #1 !dbg !7094 {
  %3 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i32* %0, metadata !7099, metadata !DIExpression()), !dbg !7109
  call void @llvm.dbg.value(metadata i8* %1, metadata !7100, metadata !DIExpression()), !dbg !7109
  %4 = bitcast %struct.__va_list* %3 to i8*, !dbg !7110
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #23, !dbg !7110
  call void @llvm.dbg.declare(metadata %struct.__va_list* %3, metadata !7101, metadata !DIExpression()), !dbg !7111
  call void @llvm.va_start(i8* nonnull %4), !dbg !7112
  %5 = bitcast i32* %0 to i8*, !dbg !7113
  %6 = bitcast %struct.__va_list* %3 to i32*, !dbg !7114
  %7 = load i32, i32* %6, align 4, !dbg !7114
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !7114
  %9 = call fastcc i32 @cbvprintf.29(i8* noundef %5, i8* noundef %1, [1 x i32] %8) #25, !dbg !7114
  call void @llvm.dbg.value(metadata i32 %9, metadata !7108, metadata !DIExpression()), !dbg !7109
  call void @llvm.va_end(i8* nonnull %4), !dbg !7115
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #23, !dbg !7116
  ret i32 %9, !dbg !7117
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbvprintf.29(i8* noundef %0, i8* noundef %1, [1 x i32] %2) unnamed_addr #1 !dbg !7118 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !7125, metadata !DIExpression()), !dbg !7126
  call void @llvm.dbg.value(metadata i32 (...)* bitcast (i32 (i32, i32*)* @fputc to i32 (...)*), metadata !7122, metadata !DIExpression()), !dbg !7126
  call void @llvm.dbg.value(metadata i8* %0, metadata !7123, metadata !DIExpression()), !dbg !7126
  call void @llvm.dbg.value(metadata i8* %1, metadata !7124, metadata !DIExpression()), !dbg !7126
  %4 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef bitcast (i32 (i32, i32*)* @fputc to i32 (...)*), i8* noundef %0, i8* noundef %1, [1 x i32] %2, i32 noundef 0) #24, !dbg !7127
  ret i32 %4, !dbg !7128
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vfprintf(i32* noalias noundef %0, i8* noalias noundef %1, [1 x i32] %2) local_unnamed_addr #1 !dbg !7129 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !7135, metadata !DIExpression()), !dbg !7137
  call void @llvm.dbg.value(metadata i32* %0, metadata !7133, metadata !DIExpression()), !dbg !7137
  call void @llvm.dbg.value(metadata i8* %1, metadata !7134, metadata !DIExpression()), !dbg !7137
  %4 = bitcast i32* %0 to i8*, !dbg !7138
  %5 = tail call fastcc i32 @cbvprintf.29(i8* noundef %4, i8* noundef %1, [1 x i32] %2) #25, !dbg !7139
  call void @llvm.dbg.value(metadata i32 %5, metadata !7136, metadata !DIExpression()), !dbg !7137
  ret i32 %5, !dbg !7140
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @printf(i8* noalias noundef %0, ...) local_unnamed_addr #1 !dbg !7141 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7145, metadata !DIExpression()), !dbg !7148
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !7149
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !7149
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !7146, metadata !DIExpression()), !dbg !7150
  call void @llvm.va_start(i8* nonnull %3), !dbg !7151
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !7152
  %5 = load i32, i32* %4, align 4, !dbg !7152
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !7152
  %7 = call fastcc i32 @cbvprintf.29(i8* noundef nonnull inttoptr (i32 2 to i8*), i8* noundef %0, [1 x i32] %6) #25, !dbg !7152
  call void @llvm.dbg.value(metadata i32 %7, metadata !7147, metadata !DIExpression()), !dbg !7148
  call void @llvm.va_end(i8* nonnull %3), !dbg !7153
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !7154
  ret i32 %7, !dbg !7155
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vprintf(i8* noalias noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !7156 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !7161, metadata !DIExpression()), !dbg !7163
  call void @llvm.dbg.value(metadata i8* %0, metadata !7160, metadata !DIExpression()), !dbg !7163
  %3 = tail call fastcc i32 @cbvprintf.29(i8* noundef nonnull inttoptr (i32 2 to i8*), i8* noundef %0, [1 x i32] %1) #25, !dbg !7164
  call void @llvm.dbg.value(metadata i32 %3, metadata !7162, metadata !DIExpression()), !dbg !7163
  ret i32 %3, !dbg !7165
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !7166 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7168, metadata !DIExpression()), !dbg !7169
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #25, !dbg !7170
  ret void, !dbg !7171
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !7172 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7176, metadata !DIExpression()), !dbg !7182
  call void @llvm.dbg.value(metadata i32 %1, metadata !7177, metadata !DIExpression()), !dbg !7182
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !7178, metadata !DIExpression()), !dbg !7182
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !7183
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !7183
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !7183
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !7179, metadata !DIExpression()), !dbg !7182
  call void @llvm.dbg.value(metadata i32 %0, metadata !7181, metadata !DIExpression()), !dbg !7182
  %7 = icmp slt i32 %0, %1, !dbg !7184
  br i1 %7, label %8, label %22, !dbg !7187

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7181, metadata !DIExpression()), !dbg !7182
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #25, !dbg !7188
  %11 = icmp eq i32 %10, 0, !dbg !7188
  br i1 %11, label %19, label %12, !dbg !7191

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #25, !dbg !7192
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !7194
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !7194
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !7196
  br i1 %15, label %19, label %16, !dbg !7197

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !7198
  %18 = load i8*, i8** %17, align 4, !dbg !7198
  tail call void %14(i32 noundef %9, i8* noundef %18) #24, !dbg !7199
  br label %19, !dbg !7200

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !7201
  call void @llvm.dbg.value(metadata i32 %20, metadata !7181, metadata !DIExpression()), !dbg !7182
  %21 = icmp eq i32 %20, %1, !dbg !7184
  br i1 %21, label %22, label %8, !dbg !7187, !llvm.loop !7202

22:                                               ; preds = %19, %3
  ret void, !dbg !7204
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #14 !dbg !7205 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7207, metadata !DIExpression()), !dbg !7208
  %2 = shl nuw i32 1, %0, !dbg !7209
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #25, !dbg !7212
  ret i32 %3, !dbg !7213
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #13 !dbg !7214 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7218, metadata !DIExpression()), !dbg !7219
  %2 = shl nuw i32 1, %0, !dbg !7220
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #25, !dbg !7223
  ret void, !dbg !7224
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #13 !dbg !7225 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7228, metadata !DIExpression()), !dbg !7229
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !7230
  ret void, !dbg !7231
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #14 !dbg !7232 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7234, metadata !DIExpression()), !dbg !7235
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !7236
  %3 = and i32 %2, %0, !dbg !7236
  %4 = icmp eq i32 %3, %0, !dbg !7237
  %5 = zext i1 %4 to i32, !dbg !7237
  ret i32 %5, !dbg !7238
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !7239 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7241, metadata !DIExpression()), !dbg !7242
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #25, !dbg !7243
  ret void, !dbg !7244
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !7245 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7247, metadata !DIExpression()), !dbg !7248
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #25, !dbg !7249
  ret void, !dbg !7250
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !7251 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7253, metadata !DIExpression()), !dbg !7254
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #25, !dbg !7255
  ret void, !dbg !7256
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !7257 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7259, metadata !DIExpression()), !dbg !7260
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #25, !dbg !7261
  ret void, !dbg !7262
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !7263 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7265, metadata !DIExpression()), !dbg !7266
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #25, !dbg !7267
  ret void, !dbg !7268
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !7269 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7271, metadata !DIExpression()), !dbg !7272
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #25, !dbg !7273
  ret void, !dbg !7274
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !7275 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7277, metadata !DIExpression()), !dbg !7278
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #25, !dbg !7279
  ret void, !dbg !7280
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !7281 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7283, metadata !DIExpression()), !dbg !7284
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #25, !dbg !7285
  ret void, !dbg !7286
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !7287 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7289, metadata !DIExpression()), !dbg !7290
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #25, !dbg !7291
  ret void, !dbg !7292
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !7293 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7295, metadata !DIExpression()), !dbg !7296
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #25, !dbg !7297
  ret void, !dbg !7298
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7299 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7301, metadata !DIExpression()), !dbg !7302
  tail call fastcc void @__stm32_exti_connect_irqs() #25, !dbg !7303
  ret i32 0, !dbg !7304
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !579 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !583, metadata !DIExpression()), !dbg !7305
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #24, !dbg !7306
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #24, !dbg !7308
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #24, !dbg !7310
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #24, !dbg !7312
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #24, !dbg !7314
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #24, !dbg !7316
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #24, !dbg !7318
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #24, !dbg !7320
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #24, !dbg !7322
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #24, !dbg !7324
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #24, !dbg !7326
  ret void, !dbg !7328
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !7329 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7331, metadata !DIExpression()), !dbg !7333
  call void @llvm.dbg.value(metadata i32 0, metadata !7332, metadata !DIExpression()), !dbg !7333
  %2 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !7334
  %3 = load i32, i32* %2, align 4, !dbg !7334
  call void @llvm.dbg.value(metadata i32 %3, metadata !7332, metadata !DIExpression()), !dbg !7333
  %4 = shl nuw i32 1, %0, !dbg !7335
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #25, !dbg !7336
  tail call void @arch_irq_enable(i32 noundef %3) #24, !dbg !7337
  ret void, !dbg !7338
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #13 !dbg !7339 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7341, metadata !DIExpression()), !dbg !7342
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7343
  %3 = or i32 %2, %0, !dbg !7343
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7343
  ret void, !dbg !7344
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #13 !dbg !7345 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7347, metadata !DIExpression()), !dbg !7348
  %2 = icmp slt i32 %0, 32, !dbg !7349
  br i1 %2, label %3, label %5, !dbg !7351

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !7352
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #25, !dbg !7354
  br label %5, !dbg !7355

5:                                                ; preds = %1, %3
  ret void, !dbg !7356
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #13 !dbg !7357 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7359, metadata !DIExpression()), !dbg !7360
  %2 = xor i32 %0, -1, !dbg !7361
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7361
  %4 = and i32 %3, %2, !dbg !7361
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7361
  ret void, !dbg !7362
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #13 !dbg !7363 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7367, metadata !DIExpression()), !dbg !7369
  call void @llvm.dbg.value(metadata i32 %1, metadata !7368, metadata !DIExpression()), !dbg !7369
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !7370

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !7371
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #25, !dbg !7373
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #25, !dbg !7374
  br label %11, !dbg !7375

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !7376
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #25, !dbg !7377
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #25, !dbg !7378
  br label %11, !dbg !7379

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !7380
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #25, !dbg !7381
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #25, !dbg !7382
  br label %11, !dbg !7383

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !7384
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #25, !dbg !7385
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #25, !dbg !7386
  br label %11, !dbg !7387

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !7388
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #13 !dbg !7389 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7391, metadata !DIExpression()), !dbg !7392
  %2 = xor i32 %0, -1, !dbg !7393
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7393
  %4 = and i32 %3, %2, !dbg !7393
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7393
  ret void, !dbg !7394
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #13 !dbg !7395 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7397, metadata !DIExpression()), !dbg !7398
  %2 = xor i32 %0, -1, !dbg !7399
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7399
  %4 = and i32 %3, %2, !dbg !7399
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7399
  ret void, !dbg !7400
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #13 !dbg !7401 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7403, metadata !DIExpression()), !dbg !7404
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7405
  %3 = or i32 %2, %0, !dbg !7405
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7405
  ret void, !dbg !7406
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #13 !dbg !7407 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7409, metadata !DIExpression()), !dbg !7410
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7411
  %3 = or i32 %2, %0, !dbg !7411
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7411
  ret void, !dbg !7412
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #7 !dbg !7413 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7417, metadata !DIExpression()), !dbg !7423
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !7418, metadata !DIExpression()), !dbg !7423
  call void @llvm.dbg.value(metadata i8* %2, metadata !7419, metadata !DIExpression()), !dbg !7423
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_37, metadata !7420, metadata !DIExpression()), !dbg !7423
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !7422, metadata !DIExpression()), !dbg !7423
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !7424
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !7424
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !7426
  br i1 %6, label %7, label %9, !dbg !7427

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !7428
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !7429
  store i8* %2, i8** %8, align 4, !dbg !7430
  br label %9, !dbg !7431

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !7423
  ret i32 %10, !dbg !7432
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #5 !dbg !7433 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7435, metadata !DIExpression()), !dbg !7438
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_37, metadata !7436, metadata !DIExpression()), !dbg !7438
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !7437, metadata !DIExpression()), !dbg !7438
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !7439
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !7440
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !7441
  store i8* null, i8** %3, align 4, !dbg !7442
  ret void, !dbg !7443
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #13 !dbg !7444 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7446, metadata !DIExpression()), !dbg !7451
  call void @llvm.dbg.value(metadata i8* %1, metadata !7447, metadata !DIExpression()), !dbg !7451
  call void @llvm.dbg.value(metadata i8* %1, metadata !7448, metadata !DIExpression()), !dbg !7451
  %3 = bitcast i8* %1 to i32*, !dbg !7452
  %4 = load i32, i32* %3, align 4, !dbg !7452
  %5 = add i32 %4, -169, !dbg !7452
  %6 = icmp ult i32 %5, -121, !dbg !7452
  br i1 %6, label %15, label %7, !dbg !7454

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !7455
  %9 = inttoptr i32 %8 to i32*, !dbg !7456
  call void @llvm.dbg.value(metadata i32* %9, metadata !7449, metadata !DIExpression()), !dbg !7451
  %10 = load volatile i32, i32* %9, align 4, !dbg !7457
  call void @llvm.dbg.value(metadata i32 %10, metadata !7450, metadata !DIExpression()), !dbg !7451
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !7458
  %12 = bitcast i8* %11 to i32*, !dbg !7458
  %13 = load i32, i32* %12, align 4, !dbg !7458
  %14 = or i32 %13, %10, !dbg !7459
  call void @llvm.dbg.value(metadata i32 %14, metadata !7450, metadata !DIExpression()), !dbg !7451
  store volatile i32 %14, i32* %9, align 4, !dbg !7460
  br label %15, !dbg !7461

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !7451
  ret i32 %16, !dbg !7462
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #13 !dbg !7463 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7465, metadata !DIExpression()), !dbg !7470
  call void @llvm.dbg.value(metadata i8* %1, metadata !7466, metadata !DIExpression()), !dbg !7470
  call void @llvm.dbg.value(metadata i8* %1, metadata !7467, metadata !DIExpression()), !dbg !7470
  %3 = bitcast i8* %1 to i32*, !dbg !7471
  %4 = load i32, i32* %3, align 4, !dbg !7471
  %5 = add i32 %4, -169, !dbg !7471
  %6 = icmp ult i32 %5, -121, !dbg !7471
  br i1 %6, label %16, label %7, !dbg !7473

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !7474
  %9 = inttoptr i32 %8 to i32*, !dbg !7475
  call void @llvm.dbg.value(metadata i32* %9, metadata !7468, metadata !DIExpression()), !dbg !7470
  %10 = load volatile i32, i32* %9, align 4, !dbg !7476
  call void @llvm.dbg.value(metadata i32 %10, metadata !7469, metadata !DIExpression()), !dbg !7470
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !7477
  %12 = bitcast i8* %11 to i32*, !dbg !7477
  %13 = load i32, i32* %12, align 4, !dbg !7477
  %14 = xor i32 %13, -1, !dbg !7478
  %15 = and i32 %10, %14, !dbg !7479
  call void @llvm.dbg.value(metadata i32 %15, metadata !7469, metadata !DIExpression()), !dbg !7470
  store volatile i32 %15, i32* %9, align 4, !dbg !7480
  br label %16, !dbg !7481

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !7470
  ret i32 %17, !dbg !7482
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !7483 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7485, metadata !DIExpression()), !dbg !7493
  call void @llvm.dbg.value(metadata i8* %1, metadata !7486, metadata !DIExpression()), !dbg !7493
  call void @llvm.dbg.value(metadata i32* %2, metadata !7487, metadata !DIExpression()), !dbg !7493
  call void @llvm.dbg.value(metadata i8* %1, metadata !7488, metadata !DIExpression()), !dbg !7493
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !7494
  call void @llvm.dbg.value(metadata i32 %4, metadata !7489, metadata !DIExpression()), !dbg !7493
  call void @llvm.dbg.value(metadata i32 undef, metadata !7490, metadata !DIExpression()), !dbg !7493
  call void @llvm.dbg.value(metadata i32 undef, metadata !7491, metadata !DIExpression()), !dbg !7493
  call void @llvm.dbg.value(metadata i32 %4, metadata !7492, metadata !DIExpression()), !dbg !7493
  %5 = bitcast i8* %1 to i32*, !dbg !7495
  %6 = load i32, i32* %5, align 4, !dbg !7495
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !7496

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 4) #25, !dbg !7497
  call void @llvm.dbg.value(metadata i32 %8, metadata !7490, metadata !DIExpression()), !dbg !7493
  br label %19, !dbg !7498

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #25, !dbg !7500
  call void @llvm.dbg.value(metadata i32 %10, metadata !7491, metadata !DIExpression()), !dbg !7493
  br label %19, !dbg !7501

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #24, !dbg !7502
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 2) #25, !dbg !7503
  br label %19, !dbg !7504

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #24, !dbg !7505
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 7) #25, !dbg !7506
  br label %19, !dbg !7507

17:                                               ; preds = %3
  br label %19, !dbg !7508

18:                                               ; preds = %3
  br label %19, !dbg !7509

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 32000, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !7510
  br label %21, !dbg !7511

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !7493
  ret i32 %22, !dbg !7511
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #13 !dbg !7512 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7514, metadata !DIExpression()), !dbg !7522
  call void @llvm.dbg.value(metadata i8* %1, metadata !7515, metadata !DIExpression()), !dbg !7522
  call void @llvm.dbg.value(metadata i8* %2, metadata !7516, metadata !DIExpression()), !dbg !7522
  call void @llvm.dbg.value(metadata i8* %1, metadata !7517, metadata !DIExpression()), !dbg !7522
  %4 = bitcast i8* %1 to i32*, !dbg !7523
  %5 = load i32, i32* %4, align 4, !dbg !7523
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #25, !dbg !7524
  call void @llvm.dbg.value(metadata i32 %6, metadata !7521, metadata !DIExpression()), !dbg !7522
  %7 = icmp slt i32 %6, 0, !dbg !7525
  br i1 %7, label %22, label %8, !dbg !7527

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7517, metadata !DIExpression()), !dbg !7522
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !7528
  %10 = bitcast i8* %9 to i32*, !dbg !7528
  %11 = load i32, i32* %10, align 4, !dbg !7528
  %12 = lshr i32 %11, 16, !dbg !7528
  %13 = and i32 %12, 7, !dbg !7528
  %14 = lshr i32 %11, 8, !dbg !7529
  %15 = and i32 %14, 31, !dbg !7529
  %16 = shl i32 %13, %15, !dbg !7530
  call void @llvm.dbg.value(metadata i32 %16, metadata !7520, metadata !DIExpression()), !dbg !7522
  %17 = and i32 %11, 255, !dbg !7531
  %18 = or i32 %17, 1073887232, !dbg !7532
  %19 = inttoptr i32 %18 to i32*, !dbg !7533
  call void @llvm.dbg.value(metadata i32* %19, metadata !7518, metadata !DIExpression()), !dbg !7522
  %20 = load volatile i32, i32* %19, align 4, !dbg !7534
  call void @llvm.dbg.value(metadata i32 %20, metadata !7519, metadata !DIExpression()), !dbg !7522
  %21 = or i32 %16, %20, !dbg !7535
  call void @llvm.dbg.value(metadata i32 %21, metadata !7519, metadata !DIExpression()), !dbg !7522
  store volatile i32 %21, i32* %19, align 4, !dbg !7536
  br label %22, !dbg !7537

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !7522
  ret i32 %23, !dbg !7538
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #12 !dbg !7539 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7543, metadata !DIExpression()), !dbg !7545
  call void @llvm.dbg.value(metadata i32 0, metadata !7544, metadata !DIExpression()), !dbg !7545
  %2 = add i32 %0, -1, !dbg !7546
  %3 = icmp ult i32 %2, 6, !dbg !7546
  br i1 %3, label %4, label %7, !dbg !7546

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !7546
  %6 = load i32, i32* %5, align 4, !dbg !7546
  call void @llvm.dbg.value(metadata i32 %6, metadata !7544, metadata !DIExpression()), !dbg !7545
  br label %7, !dbg !7547

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !7545
  ret i32 %8, !dbg !7548
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !7549 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7553, metadata !DIExpression()), !dbg !7555
  call void @llvm.dbg.value(metadata i32 %1, metadata !7554, metadata !DIExpression()), !dbg !7555
  %3 = udiv i32 %0, %1, !dbg !7556
  ret i32 %3, !dbg !7557
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !7558 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7562, metadata !DIExpression()), !dbg !7566
  call void @llvm.dbg.value(metadata i32 12, metadata !7563, metadata !DIExpression()), !dbg !7566
  call void @llvm.dbg.value(metadata i32 336, metadata !7564, metadata !DIExpression()), !dbg !7566
  call void @llvm.dbg.value(metadata i32 %1, metadata !7565, metadata !DIExpression()), !dbg !7566
  %3 = mul i32 %0, 336, !dbg !7567
  %4 = mul nsw i32 %1, 12, !dbg !7568
  %5 = udiv i32 %3, %4, !dbg !7569
  ret i32 %5, !dbg !7570
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !7571 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !7573, metadata !DIExpression()), !dbg !7576
  tail call void @config_enable_default_clocks() #24, !dbg !7577
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #24, !dbg !7578
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #25, !dbg !7578
  %4 = lshr i32 %3, 4, !dbg !7578
  %5 = and i32 %4, 15, !dbg !7578
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !7578
  %7 = load i8, i8* %6, align 1, !dbg !7578
  %8 = zext i8 %7 to i32, !dbg !7578
  %9 = lshr i32 %2, %8, !dbg !7578
  call void @llvm.dbg.value(metadata i32 %9, metadata !7574, metadata !DIExpression()), !dbg !7576
  call void @llvm.dbg.value(metadata !DIArgList(i32 168000000, i8 undef), metadata !7575, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !7576
  %10 = icmp ult i32 %9, 168000000, !dbg !7579
  br i1 %10, label %11, label %13, !dbg !7581

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 168000000) #24, !dbg !7582
  br label %13, !dbg !7584

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #25, !dbg !7585
  tail call fastcc void @set_up_plls() #25, !dbg !7586
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #25, !dbg !7587
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #25, !dbg !7590
  br label %14, !dbg !7591

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #25, !dbg !7592
  %16 = icmp eq i32 %15, 8, !dbg !7593
  br i1 %16, label %17, label %14, !dbg !7591, !llvm.loop !7594

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 167999999, !dbg !7596
  br i1 %18, label %19, label %21, !dbg !7598

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 168000000) #24, !dbg !7599
  br label %21, !dbg !7601

21:                                               ; preds = %19, %17
  store i32 168000000, i32* @SystemCoreClock, align 4, !dbg !7602
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #25, !dbg !7603
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #25, !dbg !7604
  ret i32 0, !dbg !7605
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #14 !dbg !7606 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7608
  %2 = and i32 %1, 240, !dbg !7608
  ret i32 %2, !dbg !7609
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #13 !dbg !7610 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #25, !dbg !7611
  tail call fastcc void @LL_RCC_HSE_Enable() #25, !dbg !7616
  br label %1, !dbg !7617

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #25, !dbg !7618
  %3 = icmp eq i32 %2, 1, !dbg !7619
  br i1 %3, label %4, label %1, !dbg !7617, !llvm.loop !7620

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #25, !dbg !7622
  br label %5, !dbg !7625

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #25, !dbg !7626
  %7 = icmp eq i32 %6, 1, !dbg !7627
  br i1 %7, label %8, label %5, !dbg !7625, !llvm.loop !7628

8:                                                ; preds = %5
  ret void, !dbg !7630
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !7631 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #25, !dbg !7632
  %2 = icmp eq i32 %1, 8, !dbg !7634
  br i1 %2, label %3, label %4, !dbg !7635

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #25, !dbg !7636
  tail call fastcc void @stm32_clock_switch_to_hsi() #25, !dbg !7638
  br label %4, !dbg !7639

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #25, !dbg !7640
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7641
  %6 = and i32 %5, -196609, !dbg !7641
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7641
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7642
  %8 = and i32 %7, -251658241, !dbg !7642
  %9 = or i32 %8, 117440512, !dbg !7642
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7642
  tail call void @config_pll_sysclock() #24, !dbg !7643
  tail call fastcc void @LL_RCC_PLL_Enable() #25, !dbg !7644
  br label %10, !dbg !7645

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #25, !dbg !7646
  %12 = icmp eq i32 %11, 1, !dbg !7647
  br i1 %12, label %13, label %10, !dbg !7645, !llvm.loop !7648

13:                                               ; preds = %10
  ret void, !dbg !7650
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #13 !dbg !7651 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7653, metadata !DIExpression()), !dbg !7654
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7655
  %2 = and i32 %1, -241, !dbg !7655
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7655
  ret void, !dbg !7656
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #13 !dbg !7657 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7659, metadata !DIExpression()), !dbg !7660
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7661
  %3 = and i32 %2, -4, !dbg !7661
  %4 = or i32 %3, %0, !dbg !7661
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7661
  ret void, !dbg !7662
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #14 !dbg !7663 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7664
  %2 = and i32 %1, 12, !dbg !7664
  ret i32 %2, !dbg !7665
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #13 !dbg !7666 {
  call void @llvm.dbg.value(metadata i32 5120, metadata !7668, metadata !DIExpression()), !dbg !7669
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7670
  %2 = and i32 %1, -7169, !dbg !7670
  %3 = or i32 %2, 5120, !dbg !7670
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7670
  ret void, !dbg !7671
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #13 !dbg !7672 {
  call void @llvm.dbg.value(metadata i32 32768, metadata !7674, metadata !DIExpression()), !dbg !7675
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7676
  %2 = and i32 %1, -57345, !dbg !7676
  %3 = or i32 %2, 32768, !dbg !7676
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7676
  ret void, !dbg !7677
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #13 !dbg !7678 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #25, !dbg !7679
  %2 = icmp eq i32 %1, 1, !dbg !7681
  br i1 %2, label %7, label %3, !dbg !7682

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #25, !dbg !7683
  br label %4, !dbg !7685

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #25, !dbg !7686
  %6 = icmp eq i32 %5, 1, !dbg !7687
  br i1 %6, label %7, label %4, !dbg !7685, !llvm.loop !7688

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #25, !dbg !7690
  br label %8, !dbg !7691

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #25, !dbg !7692
  %10 = icmp eq i32 %9, 0, !dbg !7693
  br i1 %10, label %11, label %8, !dbg !7691, !llvm.loop !7694

11:                                               ; preds = %8
  ret void, !dbg !7696
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #13 !dbg !7697 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7698
  %2 = and i32 %1, -16777217, !dbg !7698
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7698
  ret void, !dbg !7699
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #13 !dbg !7700 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7701
  %2 = or i32 %1, 16777216, !dbg !7701
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7701
  ret void, !dbg !7702
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #14 !dbg !7703 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7704
  %2 = lshr i32 %1, 25, !dbg !7705
  %3 = and i32 %2, 1, !dbg !7705
  ret i32 %3, !dbg !7706
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #14 !dbg !7707 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7708
  %2 = lshr i32 %1, 1, !dbg !7709
  %3 = and i32 %2, 1, !dbg !7709
  ret i32 %3, !dbg !7710
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #13 !dbg !7711 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7712
  %2 = or i32 %1, 1, !dbg !7712
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7712
  ret void, !dbg !7713
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #13 !dbg !7714 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7715
  %2 = and i32 %1, -262145, !dbg !7715
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7715
  ret void, !dbg !7716
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #13 !dbg !7717 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7718
  %2 = or i32 %1, 65536, !dbg !7718
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7718
  ret void, !dbg !7719
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #14 !dbg !7720 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7721
  %2 = lshr i32 %1, 17, !dbg !7722
  %3 = and i32 %2, 1, !dbg !7722
  ret i32 %3, !dbg !7723
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #13 !dbg !7724 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !7725
  %2 = or i32 %1, 1, !dbg !7725
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !7725
  ret void, !dbg !7726
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #14 !dbg !7727 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !7728
  %2 = lshr i32 %1, 1, !dbg !7729
  %3 = and i32 %2, 1, !dbg !7729
  ret i32 %3, !dbg !7730
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #12 !dbg !7731 {
  ret i32 12000000, !dbg !7733
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #13 !dbg !7737 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #25, !dbg !7738
  ret void, !dbg !7739
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #13 !dbg !7740 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !7744, metadata !DIExpression()), !dbg !7748
  call void @llvm.dbg.value(metadata i32 12, metadata !7745, metadata !DIExpression()), !dbg !7748
  call void @llvm.dbg.value(metadata i32 336, metadata !7746, metadata !DIExpression()), !dbg !7748
  call void @llvm.dbg.value(metadata i32 0, metadata !7747, metadata !DIExpression()), !dbg !7748
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7749
  %2 = and i32 %1, -4227072, !dbg !7749
  %3 = or i32 %2, 4215820, !dbg !7749
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7749
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7750
  %5 = and i32 %4, -196609, !dbg !7750
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7750
  ret void, !dbg !7751
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #15 !dbg !7752 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #25, !dbg !7753
  ret void, !dbg !7754
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #15 !dbg !7755 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !7758, metadata !DIExpression()), !dbg !7760
  %2 = bitcast i32* %1 to i8*, !dbg !7761
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !7761
  call void @llvm.dbg.declare(metadata i32* %1, metadata !7759, metadata !DIExpression()), !dbg !7762
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !7763
  %4 = or i32 %3, 268435456, !dbg !7763
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !7763
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !7764
  %6 = and i32 %5, 268435456, !dbg !7764
  store volatile i32 %6, i32* %1, align 4, !dbg !7765
  %7 = load volatile i32, i32* %1, align 4, !dbg !7766
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !7767
  ret void, !dbg !7767
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7768 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7770, metadata !DIExpression()), !dbg !7771
  %2 = tail call fastcc zeroext i1 @device_is_ready() #25, !dbg !7772
  br i1 %2, label %3, label %4, !dbg !7774

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #25, !dbg !7775
  br label %4, !dbg !7776

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !7771
  ret i32 %5, !dbg !7777
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !7778 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !7782, metadata !DIExpression()), !dbg !7783
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7784, !srcloc !7786
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #25, !dbg !7787
  ret i1 %1, !dbg !7788
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !7789 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #24, !dbg !7790
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #24, !dbg !7791
  ret void, !dbg !7792
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !7793 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7795, metadata !DIExpression()), !dbg !7796
  %2 = icmp eq i32 %0, 10, !dbg !7797
  br i1 %2, label %3, label %4, !dbg !7799

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #25, !dbg !7800
  br label %4, !dbg !7802

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !7803
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #25, !dbg !7804
  ret i32 %0, !dbg !7805
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !7806 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !7809, metadata !DIExpression()), !dbg !7811
  call void @llvm.dbg.value(metadata i8 %0, metadata !7810, metadata !DIExpression()), !dbg !7811
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7812, !srcloc !7814
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #25, !dbg !7815
  ret void, !dbg !7816
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !7817 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !7819, metadata !DIExpression()), !dbg !7822
  call void @llvm.dbg.value(metadata i8 %0, metadata !7820, metadata !DIExpression()), !dbg !7822
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !7823
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !7821, metadata !DIExpression()), !dbg !7822
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !7824
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !7824
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_45, i8 noundef zeroext %0) #24, !dbg !7825
  ret void, !dbg !7826
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !7827 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !7829, metadata !DIExpression()), !dbg !7830
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_45) #24, !dbg !7831
  ret i1 %1, !dbg !7832
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #12 !dbg !7833 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !7880, metadata !DIExpression()), !dbg !7883
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !7881, metadata !DIExpression()), !dbg !7883
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !7882, metadata !DIExpression()), !dbg !7883
  ret void, !dbg !7884
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !7885 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7887, metadata !DIExpression()), !dbg !7892
  call void @llvm.dbg.value(metadata i8 %1, metadata !7888, metadata !DIExpression()), !dbg !7892
  call void @llvm.dbg.value(metadata i32 %2, metadata !7889, metadata !DIExpression()), !dbg !7892
  %5 = bitcast i32* %4 to i8*, !dbg !7893
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !7893
  call void @llvm.dbg.value(metadata i32* %4, metadata !7891, metadata !DIExpression(DW_OP_deref)), !dbg !7892
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #25, !dbg !7894
  call void @llvm.dbg.value(metadata i32 %6, metadata !7890, metadata !DIExpression()), !dbg !7892
  %7 = icmp eq i32 %6, 0, !dbg !7895
  br i1 %7, label %8, label %31, !dbg !7897

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !7890, metadata !DIExpression()), !dbg !7892
  %9 = and i32 %2, 131072, !dbg !7898
  %10 = icmp eq i32 %9, 0, !dbg !7900
  br i1 %10, label %28, label %11, !dbg !7901

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !7902
  %13 = icmp eq i32 %12, 0, !dbg !7905
  br i1 %13, label %18, label %14, !dbg !7906

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !7907
  %16 = shl nuw i32 1, %15, !dbg !7907
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #25, !dbg !7909
  br label %25, !dbg !7910

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !7911
  %20 = icmp eq i32 %19, 0, !dbg !7913
  %21 = zext i8 %1 to i32, !dbg !7892
  br i1 %20, label %25, label %22, !dbg !7914

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !7915
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #25, !dbg !7917
  br label %25, !dbg !7918

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !7919
  %27 = load i32, i32* %4, align 4, !dbg !7920
  call void @llvm.dbg.value(metadata i32 %30, metadata !7891, metadata !DIExpression()), !dbg !7892
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #25, !dbg !7921
  br label %31, !dbg !7922

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !7919
  %30 = load i32, i32* %4, align 4, !dbg !7920
  call void @llvm.dbg.value(metadata i32 %30, metadata !7891, metadata !DIExpression()), !dbg !7892
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #25, !dbg !7921
  call void @llvm.dbg.value(metadata i32 0, metadata !7890, metadata !DIExpression()), !dbg !7892
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !7923
  ret i32 %6, !dbg !7923
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #14 !dbg !7924 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7928, metadata !DIExpression()), !dbg !7933
  call void @llvm.dbg.value(metadata i32* %1, metadata !7929, metadata !DIExpression()), !dbg !7933
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7934
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !7934
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !7934
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !7930, metadata !DIExpression()), !dbg !7933
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !7935
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !7935
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !7935
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !7932, metadata !DIExpression()), !dbg !7933
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #25, !dbg !7936
  store i32 %9, i32* %1, align 4, !dbg !7937
  ret i32 0, !dbg !7938
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #13 !dbg !7939 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7941, metadata !DIExpression()), !dbg !7947
  call void @llvm.dbg.value(metadata i32 %1, metadata !7942, metadata !DIExpression()), !dbg !7947
  call void @llvm.dbg.value(metadata i32 %2, metadata !7943, metadata !DIExpression()), !dbg !7947
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7948
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !7948
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !7948
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !7944, metadata !DIExpression()), !dbg !7947
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !7949
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !7949
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !7949
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !7945, metadata !DIExpression()), !dbg !7947
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #25, !dbg !7950
  call void @llvm.dbg.value(metadata i32 %10, metadata !7946, metadata !DIExpression()), !dbg !7947
  %11 = xor i32 %1, -1, !dbg !7951
  %12 = and i32 %10, %11, !dbg !7952
  %13 = and i32 %2, %1, !dbg !7953
  %14 = or i32 %12, %13, !dbg !7954
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #25, !dbg !7955
  ret i32 0, !dbg !7956
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #13 !dbg !7957 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7959, metadata !DIExpression()), !dbg !7963
  call void @llvm.dbg.value(metadata i32 %1, metadata !7960, metadata !DIExpression()), !dbg !7963
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7964
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !7964
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !7964
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !7961, metadata !DIExpression()), !dbg !7963
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !7965
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !7965
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !7965
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !7962, metadata !DIExpression()), !dbg !7963
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !7966
  store volatile i32 %1, i32* %9, align 4, !dbg !7966
  ret i32 0, !dbg !7967
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #13 !dbg !7968 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7970, metadata !DIExpression()), !dbg !7974
  call void @llvm.dbg.value(metadata i32 %1, metadata !7971, metadata !DIExpression()), !dbg !7974
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7975
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !7975
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !7975
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !7972, metadata !DIExpression()), !dbg !7974
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !7976
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !7976
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !7976
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !7973, metadata !DIExpression()), !dbg !7974
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #25, !dbg !7977
  ret i32 0, !dbg !7978
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #13 !dbg !7979 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7981, metadata !DIExpression()), !dbg !7985
  call void @llvm.dbg.value(metadata i32 %1, metadata !7982, metadata !DIExpression()), !dbg !7985
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7986
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !7986
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !7986
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !7983, metadata !DIExpression()), !dbg !7985
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !7987
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !7987
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !7987
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !7984, metadata !DIExpression()), !dbg !7985
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !7988
  %10 = load volatile i32, i32* %9, align 4, !dbg !7988
  %11 = xor i32 %10, %1, !dbg !7988
  store volatile i32 %11, i32* %9, align 4, !dbg !7988
  ret i32 0, !dbg !7989
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !7990 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7992, metadata !DIExpression()), !dbg !8002
  call void @llvm.dbg.value(metadata i8 %1, metadata !7993, metadata !DIExpression()), !dbg !8002
  call void @llvm.dbg.value(metadata i32 %2, metadata !7994, metadata !DIExpression()), !dbg !8002
  call void @llvm.dbg.value(metadata i32 %3, metadata !7995, metadata !DIExpression()), !dbg !8002
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8003
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !8003
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !8003
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !7996, metadata !DIExpression()), !dbg !8002
  call void @llvm.dbg.value(metadata i8* undef, metadata !7997, metadata !DIExpression()), !dbg !8002
  call void @llvm.dbg.value(metadata i32 0, metadata !7999, metadata !DIExpression()), !dbg !8002
  call void @llvm.dbg.value(metadata i32 0, metadata !8000, metadata !DIExpression()), !dbg !8002
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !8004

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !8005
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #25, !dbg !8009
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !8010
  %12 = load i32, i32* %11, align 4, !dbg !8010
  %13 = icmp eq i32 %10, %12, !dbg !8011
  br i1 %13, label %14, label %29, !dbg !8012

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #24, !dbg !8013
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #24, !dbg !8015
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #24, !dbg !8016
  br label %29, !dbg !8017

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8018
  %17 = load i8*, i8** %16, align 4, !dbg !8018
  call void @llvm.dbg.value(metadata i8* %17, metadata !7997, metadata !DIExpression()), !dbg !8002
  %18 = zext i8 %1 to i32, !dbg !8019
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #24, !dbg !8021
  %20 = icmp eq i32 %19, 0, !dbg !8022
  br i1 %20, label %21, label %29, !dbg !8023

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !8024
  %23 = load i32, i32* %22, align 4, !dbg !8024
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #25, !dbg !8025
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !8026

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !7999, metadata !DIExpression()), !dbg !8002
  br label %27, !dbg !8027

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !7999, metadata !DIExpression()), !dbg !8002
  br label %27, !dbg !8029

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !7999, metadata !DIExpression()), !dbg !8002
  br label %27, !dbg !8030

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !8002
  call void @llvm.dbg.value(metadata i32 %28, metadata !7999, metadata !DIExpression()), !dbg !8002
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #24, !dbg !8031
  tail call void @stm32_exti_enable(i32 noundef %18) #24, !dbg !8032
  br label %29, !dbg !8032

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !8002
  call void @llvm.dbg.value(metadata i32 %30, metadata !8000, metadata !DIExpression()), !dbg !8002
  call void @llvm.dbg.label(metadata !8001), !dbg !8033
  ret i32 %30, !dbg !8034
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #11 !dbg !8035 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8037, metadata !DIExpression()), !dbg !8041
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !8038, metadata !DIExpression()), !dbg !8041
  call void @llvm.dbg.value(metadata i1 %2, metadata !8039, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8041
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8042
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !8042
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !8042
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !8040, metadata !DIExpression()), !dbg !8041
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !8043
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #25, !dbg !8044
  ret i32 %8, !dbg !8045
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #11 !dbg !8046 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8052, metadata !DIExpression()), !dbg !8055
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !8053, metadata !DIExpression()), !dbg !8055
  call void @llvm.dbg.value(metadata i1 %2, metadata !8054, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8055
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #25, !dbg !8056
  br i1 %4, label %10, label %5, !dbg !8058

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !8059
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #25, !dbg !8062
  %8 = or i1 %7, %2, !dbg !8063
  %9 = select i1 %8, i32 0, i32 -22, !dbg !8063
  br i1 %2, label %11, label %13, !dbg !8063

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !8064

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !8065
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #25, !dbg !8068
  br label %13, !dbg !8069

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !8055
  ret i32 %14, !dbg !8070
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #4 !dbg !8071 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8075, metadata !DIExpression()), !dbg !8076
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !8077
  %3 = icmp eq %struct._snode* %2, null, !dbg !8077
  ret i1 %3, !dbg !8077
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #11 !dbg !8078 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8082, metadata !DIExpression()), !dbg !8086
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8083, metadata !DIExpression()), !dbg !8086
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8084, metadata !DIExpression()), !dbg !8086
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !8087
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !8085, metadata !DIExpression()), !dbg !8086
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8084, metadata !DIExpression()), !dbg !8086
  %4 = icmp eq %struct._snode* %3, null, !dbg !8089
  br i1 %4, label %15, label %5, !dbg !8087

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !8085, metadata !DIExpression()), !dbg !8086
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8084, metadata !DIExpression()), !dbg !8086
  %6 = icmp eq %struct._snode* %3, %1, !dbg !8091
  br i1 %6, label %9, label %11, !dbg !8094

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !8085, metadata !DIExpression()), !dbg !8086
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8084, metadata !DIExpression()), !dbg !8086
  %8 = icmp eq %struct._snode* %13, %1, !dbg !8091
  br i1 %8, label %9, label %11, !dbg !8094, !llvm.loop !8095

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #25, !dbg !8096
  br label %15, !dbg !8096

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8085, metadata !DIExpression()), !dbg !8086
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8084, metadata !DIExpression()), !dbg !8086
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #25, !dbg !8089
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !8085, metadata !DIExpression()), !dbg !8086
  %14 = icmp eq %struct._snode* %13, null, !dbg !8089
  br i1 %14, label %15, label %7, !dbg !8087, !llvm.loop !8095

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !8098
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !8099 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8103, metadata !DIExpression()), !dbg !8105
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8104, metadata !DIExpression()), !dbg !8105
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !8106
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #25, !dbg !8106
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #25, !dbg !8106
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #25, !dbg !8107
  %5 = icmp eq %struct._snode* %4, null, !dbg !8107
  br i1 %5, label %6, label %8, !dbg !8106

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !8109
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #25, !dbg !8109
  br label %8, !dbg !8109

8:                                                ; preds = %6, %2
  ret void, !dbg !8106
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #4 !dbg !8111 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8115, metadata !DIExpression()), !dbg !8116
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !8117
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8117
  ret %struct._snode* %3, !dbg !8118
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #5 !dbg !8119 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8123, metadata !DIExpression()), !dbg !8125
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8124, metadata !DIExpression()), !dbg !8125
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !8126
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8127
  ret void, !dbg !8128
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #5 !dbg !8129 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8131, metadata !DIExpression()), !dbg !8133
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8132, metadata !DIExpression()), !dbg !8133
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !8134
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8135
  ret void, !dbg !8136
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #4 !dbg !8137 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8139, metadata !DIExpression()), !dbg !8140
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !8141
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8141
  ret %struct._snode* %3, !dbg !8142
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #5 !dbg !8143 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8145, metadata !DIExpression()), !dbg !8147
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8146, metadata !DIExpression()), !dbg !8147
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !8148
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8149
  ret void, !dbg !8150
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #7 !dbg !8151 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8155, metadata !DIExpression()), !dbg !8158
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8156, metadata !DIExpression()), !dbg !8158
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !8157, metadata !DIExpression()), !dbg !8158
  %4 = icmp eq %struct._snode* %1, null, !dbg !8159
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #25, !dbg !8161
  br i1 %4, label %6, label %11, !dbg !8162

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #25, !dbg !8163
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #25, !dbg !8165
  %8 = icmp eq %struct._snode* %7, %2, !dbg !8165
  br i1 %8, label %9, label %15, !dbg !8163

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !8167
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #25, !dbg !8167
  br label %15, !dbg !8167

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #25, !dbg !8169
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #25, !dbg !8171
  %13 = icmp eq %struct._snode* %12, %2, !dbg !8171
  br i1 %13, label %14, label %15, !dbg !8169

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #25, !dbg !8173
  br label %15, !dbg !8173

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #25, !dbg !8162
  ret void, !dbg !8162
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #4 !dbg !8175 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8179, metadata !DIExpression()), !dbg !8180
  %2 = icmp eq %struct._snode* %0, null, !dbg !8181
  br i1 %2, label %5, label %3, !dbg !8181

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #25, !dbg !8181
  br label %5, !dbg !8181

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !8181
  ret %struct._snode* %6, !dbg !8181
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #4 !dbg !8182 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8184, metadata !DIExpression()), !dbg !8185
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #25, !dbg !8186
  ret %struct._snode* %2, !dbg !8186
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #4 !dbg !8187 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8189, metadata !DIExpression()), !dbg !8190
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !8191
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8191
  ret %struct._snode* %3, !dbg !8192
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !8193 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8195, metadata !DIExpression()), !dbg !8198
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #25, !dbg !8199, !range !8200
  call void @llvm.dbg.value(metadata i32 %2, metadata !8196, metadata !DIExpression()), !dbg !8198
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #25, !dbg !8201
  call void @llvm.dbg.value(metadata i32 %3, metadata !8197, metadata !DIExpression()), !dbg !8198
  ret i32 %3, !dbg !8202
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !8203 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8205, metadata !DIExpression()), !dbg !8208
  call void @llvm.dbg.value(metadata i8* %1, metadata !8206, metadata !DIExpression()), !dbg !8208
  call void @llvm.dbg.value(metadata i8* %1, metadata !8207, metadata !DIExpression()), !dbg !8208
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !8209
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !8209
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8210
  %6 = bitcast i8* %5 to %struct.device**, !dbg !8210
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !8210
  %8 = shl nuw i32 1, %0, !dbg !8211
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #25, !dbg !8212
  ret void, !dbg !8213
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !8214 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !8218, metadata !DIExpression()), !dbg !8224
  call void @llvm.dbg.value(metadata i32 %1, metadata !8219, metadata !DIExpression()), !dbg !8224
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !8220, metadata !DIExpression()), !dbg !8224
  %4 = bitcast i64* %3 to i8*, !dbg !8225
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !8225
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !8222, metadata !DIExpression()), !dbg !8224
  store i64 70368744177732, i64* %3, align 8, !dbg !8226
  call void @llvm.dbg.value(metadata i64* %3, metadata !8222, metadata !DIExpression(DW_OP_deref)), !dbg !8224
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #25, !dbg !8227
  call void @llvm.dbg.value(metadata i32 %5, metadata !8223, metadata !DIExpression()), !dbg !8224
  %6 = icmp eq i32 %5, 0, !dbg !8228
  br i1 %6, label %7, label %8, !dbg !8230

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #25, !dbg !8231
  br label %8, !dbg !8232

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !8233
  ret void, !dbg !8233
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !8234 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !8236, metadata !DIExpression()), !dbg !8239
  call void @llvm.dbg.value(metadata i8* %0, metadata !8237, metadata !DIExpression()), !dbg !8239
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_9, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !8240
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !8238, metadata !DIExpression()), !dbg !8239
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !8241
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !8241
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_9, i8* noundef %0) #24, !dbg !8242
  ret i32 %5, !dbg !8243
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !8244 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8246, metadata !DIExpression()), !dbg !8249
  call void @llvm.dbg.value(metadata i32 %1, metadata !8247, metadata !DIExpression()), !dbg !8249
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #25, !dbg !8250
  call void @llvm.dbg.value(metadata i32 %3, metadata !8248, metadata !DIExpression()), !dbg !8249
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #25, !dbg !8251
  ret void, !dbg !8252
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #12 !dbg !8253 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8257, metadata !DIExpression()), !dbg !8258
  %2 = sdiv i32 %0, 4, !dbg !8259
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !8260
  %6 = add nsw i32 %5, 16, !dbg !8261
  %7 = shl i32 15, %6, !dbg !8262
  %8 = or i32 %7, %2, !dbg !8263
  ret i32 %8, !dbg !8264
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !8265 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8269, metadata !DIExpression()), !dbg !8271
  call void @llvm.dbg.value(metadata i32 %1, metadata !8270, metadata !DIExpression()), !dbg !8271
  %3 = and i32 %1, 255, !dbg !8272
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !8272
  %5 = load volatile i32, i32* %4, align 4, !dbg !8272
  %6 = lshr i32 %1, 16, !dbg !8272
  %7 = xor i32 %6, -1, !dbg !8272
  %8 = and i32 %5, %7, !dbg !8272
  call void @llvm.dbg.value(metadata i32 %6, metadata !8273, metadata !DIExpression()) #23, !dbg !8277
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #27, !dbg !8279, !srcloc !8280
  call void @llvm.dbg.value(metadata i32 %9, metadata !8276, metadata !DIExpression()) #23, !dbg !8277
  call void @llvm.dbg.value(metadata i32 %9, metadata !8281, metadata !DIExpression()) #23, !dbg !8286
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #23, !dbg !8288, !range !6423
  %11 = shl i32 %0, %10, !dbg !8272
  %12 = or i32 %11, %8, !dbg !8272
  store volatile i32 %12, i32* %4, align 4, !dbg !8272
  ret void, !dbg !8289
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !8290 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8294, metadata !DIExpression()), !dbg !8299
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !8295, metadata !DIExpression()), !dbg !8299
  call void @llvm.dbg.value(metadata i32 %2, metadata !8296, metadata !DIExpression()), !dbg !8299
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !8300
  %5 = icmp eq %struct._snode* %4, null, !dbg !8300
  br i1 %5, label %21, label %6, !dbg !8300

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #25, !dbg !8302
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !8298, metadata !DIExpression()), !dbg !8299
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !8297, metadata !DIExpression()), !dbg !8299
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !8303
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !8303
  %11 = load i32, i32* %10, align 4, !dbg !8303
  %12 = and i32 %11, %2, !dbg !8307
  %13 = icmp eq i32 %12, 0, !dbg !8307
  br i1 %13, label %19, label %14, !dbg !8308

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !8297, metadata !DIExpression()), !dbg !8299
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !8309
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !8309
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !8309
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #24, !dbg !8311
  br label %19, !dbg !8312

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !8297, metadata !DIExpression()), !dbg !8299
  %20 = icmp eq %struct._snode* %8, null, !dbg !8313
  br i1 %20, label %21, label %6, !dbg !8313

21:                                               ; preds = %19, %3
  ret void, !dbg !8314
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !8315 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8317, metadata !DIExpression()), !dbg !8318
  %2 = and i32 %0, 255, !dbg !8319
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !8319
  %4 = load volatile i32, i32* %3, align 4, !dbg !8319
  %5 = lshr i32 %0, 16, !dbg !8319
  %6 = and i32 %4, %5, !dbg !8319
  call void @llvm.dbg.value(metadata i32 %5, metadata !8273, metadata !DIExpression()) #23, !dbg !8320
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #27, !dbg !8322, !srcloc !8280
  call void @llvm.dbg.value(metadata i32 %7, metadata !8276, metadata !DIExpression()) #23, !dbg !8320
  call void @llvm.dbg.value(metadata i32 %7, metadata !8281, metadata !DIExpression()) #23, !dbg !8323
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !8325, !range !6423
  %9 = lshr i32 %6, %8, !dbg !8326
  ret i32 %9, !dbg !8327
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !8328 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8333, metadata !DIExpression()), !dbg !8335
  call void @llvm.dbg.value(metadata i32 %1, metadata !8334, metadata !DIExpression()), !dbg !8335
  %3 = shl i32 %1, 16, !dbg !8336
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !8336
  store volatile i32 %3, i32* %4, align 4, !dbg !8336
  ret void, !dbg !8337
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #14 !dbg !8338 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8342, metadata !DIExpression()), !dbg !8343
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !8344
  %3 = load volatile i32, i32* %2, align 4, !dbg !8344
  ret i32 %3, !dbg !8345
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !8346 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8348, metadata !DIExpression()), !dbg !8350
  call void @llvm.dbg.value(metadata i32 %1, metadata !8349, metadata !DIExpression()), !dbg !8350
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !8351
  store volatile i32 %1, i32* %3, align 4, !dbg !8351
  ret void, !dbg !8352
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #14 !dbg !8353 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8355, metadata !DIExpression()), !dbg !8356
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !8357
  %3 = load volatile i32, i32* %2, align 4, !dbg !8357
  ret i32 %3, !dbg !8358
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #7 !dbg !8359 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8363, metadata !DIExpression()), !dbg !8365
  call void @llvm.dbg.value(metadata i32* %1, metadata !8364, metadata !DIExpression()), !dbg !8365
  %3 = and i32 %0, 131072, !dbg !8366
  %4 = icmp eq i32 %3, 0, !dbg !8368
  br i1 %4, label %22, label %5, !dbg !8369

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !8370
  %6 = and i32 %0, 2, !dbg !8372
  %7 = icmp eq i32 %6, 0, !dbg !8374
  br i1 %7, label %11, label %8, !dbg !8375

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !8376
  %10 = icmp eq i32 %9, 0, !dbg !8376
  br i1 %10, label %33, label %11, !dbg !8379

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !8380
  store i32 %12, i32* %1, align 4, !dbg !8380
  %13 = and i32 %0, 16, !dbg !8381
  %14 = icmp eq i32 %13, 0, !dbg !8383
  br i1 %14, label %17, label %15, !dbg !8384

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !8385
  br label %31, !dbg !8387

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !8388
  %19 = icmp eq i32 %18, 0, !dbg !8390
  br i1 %19, label %33, label %20, !dbg !8391

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !8392
  br label %31, !dbg !8394

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !8395
  %24 = icmp eq i32 %23, 0, !dbg !8397
  br i1 %24, label %31, label %25, !dbg !8398

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !8399
  %27 = icmp eq i32 %26, 0, !dbg !8402
  br i1 %27, label %28, label %31, !dbg !8403

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !8404
  br label %33, !dbg !8405

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !8365
  ret i32 %34, !dbg !8405
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !8406 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8410, metadata !DIExpression()), !dbg !8421
  call void @llvm.dbg.value(metadata i32 %1, metadata !8411, metadata !DIExpression()), !dbg !8421
  call void @llvm.dbg.value(metadata i32 %2, metadata !8412, metadata !DIExpression()), !dbg !8421
  call void @llvm.dbg.value(metadata i32 %3, metadata !8413, metadata !DIExpression()), !dbg !8421
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8422
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !8422
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !8422
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !8414, metadata !DIExpression()), !dbg !8421
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !8423
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !8423
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !8423
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !8415, metadata !DIExpression()), !dbg !8421
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #25, !dbg !8424
  call void @llvm.dbg.value(metadata i32 %11, metadata !8416, metadata !DIExpression()), !dbg !8421
  %12 = and i32 %2, 48, !dbg !8425
  call void @llvm.dbg.value(metadata i32 %12, metadata !8417, metadata !DIExpression()), !dbg !8421
  call void @llvm.dbg.value(metadata i32 %2, metadata !8418, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !8421
  call void @llvm.dbg.value(metadata i32 %2, metadata !8419, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !8421
  call void @llvm.dbg.value(metadata i32 %2, metadata !8420, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !8421
  %13 = lshr i32 %2, 6, !dbg !8426
  %14 = and i32 %13, 1, !dbg !8426
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #25, !dbg !8427
  %15 = lshr i32 %2, 7, !dbg !8428
  %16 = and i32 %15, 3, !dbg !8428
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #25, !dbg !8429
  %17 = lshr i32 %2, 9, !dbg !8430
  %18 = and i32 %17, 3, !dbg !8430
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #25, !dbg !8431
  %19 = icmp eq i32 %12, 32, !dbg !8432
  br i1 %19, label %20, label %24, !dbg !8434

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !8435
  br i1 %21, label %22, label %23, !dbg !8438

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #25, !dbg !8439
  br label %24, !dbg !8441

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #25, !dbg !8442
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !8444
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #25, !dbg !8445
  ret void, !dbg !8446
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #12 !dbg !8447 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8449, metadata !DIExpression()), !dbg !8451
  %2 = shl nuw i32 1, %0, !dbg !8452
  call void @llvm.dbg.value(metadata i32 %2, metadata !8450, metadata !DIExpression()), !dbg !8451
  ret i32 %2, !dbg !8453
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #13 !dbg !8454 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8458, metadata !DIExpression()), !dbg !8461
  call void @llvm.dbg.value(metadata i32 %1, metadata !8459, metadata !DIExpression()), !dbg !8461
  call void @llvm.dbg.value(metadata i32 %2, metadata !8460, metadata !DIExpression()), !dbg !8461
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !8462
  %5 = load volatile i32, i32* %4, align 4, !dbg !8462
  %6 = xor i32 %1, -1, !dbg !8462
  %7 = and i32 %5, %6, !dbg !8462
  %8 = mul i32 %2, %1, !dbg !8462
  %9 = or i32 %7, %8, !dbg !8462
  store volatile i32 %9, i32* %4, align 4, !dbg !8462
  ret void, !dbg !8463
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !8464 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8466, metadata !DIExpression()), !dbg !8469
  call void @llvm.dbg.value(metadata i32 %1, metadata !8467, metadata !DIExpression()), !dbg !8469
  call void @llvm.dbg.value(metadata i32 %2, metadata !8468, metadata !DIExpression()), !dbg !8469
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !8470
  %5 = load volatile i32, i32* %4, align 4, !dbg !8470
  call void @llvm.dbg.value(metadata i32 %1, metadata !8273, metadata !DIExpression()) #23, !dbg !8471
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #27, !dbg !8473, !srcloc !8280
  call void @llvm.dbg.value(metadata i32 %6, metadata !8276, metadata !DIExpression()) #23, !dbg !8471
  call void @llvm.dbg.value(metadata i32 %6, metadata !8281, metadata !DIExpression()) #23, !dbg !8474
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !8476, !range !6423
  %8 = shl nuw nsw i32 %7, 1, !dbg !8470
  %9 = shl i32 3, %8, !dbg !8470
  %10 = xor i32 %9, -1, !dbg !8470
  %11 = and i32 %5, %10, !dbg !8470
  call void @llvm.dbg.value(metadata i32 %1, metadata !8273, metadata !DIExpression()) #23, !dbg !8477
  call void @llvm.dbg.value(metadata i32 %6, metadata !8276, metadata !DIExpression()) #23, !dbg !8477
  call void @llvm.dbg.value(metadata i32 %6, metadata !8281, metadata !DIExpression()) #23, !dbg !8479
  %12 = shl i32 %2, %8, !dbg !8470
  %13 = or i32 %11, %12, !dbg !8470
  store volatile i32 %13, i32* %4, align 4, !dbg !8470
  ret void, !dbg !8481
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !8482 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8484, metadata !DIExpression()), !dbg !8487
  call void @llvm.dbg.value(metadata i32 %1, metadata !8485, metadata !DIExpression()), !dbg !8487
  call void @llvm.dbg.value(metadata i32 %2, metadata !8486, metadata !DIExpression()), !dbg !8487
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !8488
  %5 = load volatile i32, i32* %4, align 4, !dbg !8488
  call void @llvm.dbg.value(metadata i32 %1, metadata !8273, metadata !DIExpression()) #23, !dbg !8489
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #27, !dbg !8491, !srcloc !8280
  call void @llvm.dbg.value(metadata i32 %6, metadata !8276, metadata !DIExpression()) #23, !dbg !8489
  call void @llvm.dbg.value(metadata i32 %6, metadata !8281, metadata !DIExpression()) #23, !dbg !8492
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !8494, !range !6423
  %8 = shl nuw nsw i32 %7, 1, !dbg !8488
  %9 = shl i32 3, %8, !dbg !8488
  %10 = xor i32 %9, -1, !dbg !8488
  %11 = and i32 %5, %10, !dbg !8488
  call void @llvm.dbg.value(metadata i32 %1, metadata !8273, metadata !DIExpression()) #23, !dbg !8495
  call void @llvm.dbg.value(metadata i32 %6, metadata !8276, metadata !DIExpression()) #23, !dbg !8495
  call void @llvm.dbg.value(metadata i32 %6, metadata !8281, metadata !DIExpression()) #23, !dbg !8497
  %12 = shl i32 %2, %8, !dbg !8488
  %13 = or i32 %11, %12, !dbg !8488
  store volatile i32 %13, i32* %4, align 4, !dbg !8488
  ret void, !dbg !8499
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !8500 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8502, metadata !DIExpression()), !dbg !8505
  call void @llvm.dbg.value(metadata i32 %1, metadata !8503, metadata !DIExpression()), !dbg !8505
  call void @llvm.dbg.value(metadata i32 %2, metadata !8504, metadata !DIExpression()), !dbg !8505
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !8506
  %5 = load volatile i32, i32* %4, align 4, !dbg !8506
  call void @llvm.dbg.value(metadata i32 %1, metadata !8273, metadata !DIExpression()) #23, !dbg !8507
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #27, !dbg !8509, !srcloc !8280
  call void @llvm.dbg.value(metadata i32 %6, metadata !8276, metadata !DIExpression()) #23, !dbg !8507
  call void @llvm.dbg.value(metadata i32 %6, metadata !8281, metadata !DIExpression()) #23, !dbg !8510
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !8512, !range !6423
  %8 = shl nuw nsw i32 %7, 2, !dbg !8506
  %9 = shl i32 15, %8, !dbg !8506
  %10 = xor i32 %9, -1, !dbg !8506
  %11 = and i32 %5, %10, !dbg !8506
  call void @llvm.dbg.value(metadata i32 %1, metadata !8273, metadata !DIExpression()) #23, !dbg !8513
  call void @llvm.dbg.value(metadata i32 %6, metadata !8276, metadata !DIExpression()) #23, !dbg !8513
  call void @llvm.dbg.value(metadata i32 %6, metadata !8281, metadata !DIExpression()) #23, !dbg !8515
  %12 = shl i32 %2, %8, !dbg !8506
  %13 = or i32 %11, %12, !dbg !8506
  store volatile i32 %13, i32* %4, align 4, !dbg !8506
  ret void, !dbg !8517
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !8518 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8520, metadata !DIExpression()), !dbg !8523
  call void @llvm.dbg.value(metadata i32 %1, metadata !8521, metadata !DIExpression()), !dbg !8523
  call void @llvm.dbg.value(metadata i32 %2, metadata !8522, metadata !DIExpression()), !dbg !8523
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !8524
  %5 = load volatile i32, i32* %4, align 4, !dbg !8524
  %6 = lshr i32 %1, 8, !dbg !8524
  call void @llvm.dbg.value(metadata i32 %6, metadata !8273, metadata !DIExpression()) #23, !dbg !8525
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #27, !dbg !8527, !srcloc !8280
  call void @llvm.dbg.value(metadata i32 %7, metadata !8276, metadata !DIExpression()) #23, !dbg !8525
  call void @llvm.dbg.value(metadata i32 %7, metadata !8281, metadata !DIExpression()) #23, !dbg !8528
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !8530, !range !6423
  %9 = shl nuw nsw i32 %8, 2, !dbg !8524
  %10 = shl i32 15, %9, !dbg !8524
  %11 = xor i32 %10, -1, !dbg !8524
  %12 = and i32 %5, %11, !dbg !8524
  call void @llvm.dbg.value(metadata i32 %6, metadata !8273, metadata !DIExpression()) #23, !dbg !8531
  call void @llvm.dbg.value(metadata i32 %7, metadata !8276, metadata !DIExpression()) #23, !dbg !8531
  call void @llvm.dbg.value(metadata i32 %7, metadata !8281, metadata !DIExpression()) #23, !dbg !8533
  %13 = shl i32 %2, %9, !dbg !8524
  %14 = or i32 %12, %13, !dbg !8524
  store volatile i32 %14, i32* %4, align 4, !dbg !8524
  ret void, !dbg !8535
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !8536 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8538, metadata !DIExpression()), !dbg !8541
  call void @llvm.dbg.value(metadata i32 %1, metadata !8539, metadata !DIExpression()), !dbg !8541
  call void @llvm.dbg.value(metadata i32 %2, metadata !8540, metadata !DIExpression()), !dbg !8541
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !8542
  %5 = load volatile i32, i32* %4, align 4, !dbg !8542
  call void @llvm.dbg.value(metadata i32 %1, metadata !8273, metadata !DIExpression()) #23, !dbg !8543
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #27, !dbg !8545, !srcloc !8280
  call void @llvm.dbg.value(metadata i32 %6, metadata !8276, metadata !DIExpression()) #23, !dbg !8543
  call void @llvm.dbg.value(metadata i32 %6, metadata !8281, metadata !DIExpression()) #23, !dbg !8546
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !8548, !range !6423
  %8 = shl nuw nsw i32 %7, 1, !dbg !8542
  %9 = shl i32 3, %8, !dbg !8542
  %10 = xor i32 %9, -1, !dbg !8542
  %11 = and i32 %5, %10, !dbg !8542
  call void @llvm.dbg.value(metadata i32 %1, metadata !8273, metadata !DIExpression()) #23, !dbg !8549
  call void @llvm.dbg.value(metadata i32 %6, metadata !8276, metadata !DIExpression()) #23, !dbg !8549
  call void @llvm.dbg.value(metadata i32 %6, metadata !8281, metadata !DIExpression()) #23, !dbg !8551
  %12 = shl i32 %2, %8, !dbg !8542
  %13 = or i32 %11, %12, !dbg !8542
  store volatile i32 %13, i32* %4, align 4, !dbg !8542
  ret void, !dbg !8553
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !8554 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8556, metadata !DIExpression()), !dbg !8559
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8560
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !8560
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !8560
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !8557, metadata !DIExpression()), !dbg !8559
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !8561
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !8562
  %6 = tail call fastcc zeroext i1 @device_is_ready.57() #25, !dbg !8563
  br i1 %6, label %7, label %11, !dbg !8565

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #25, !dbg !8566
  call void @llvm.dbg.value(metadata i32 %8, metadata !8558, metadata !DIExpression()), !dbg !8559
  %9 = icmp slt i32 %8, 0, !dbg !8567
  %10 = select i1 %9, i32 %8, i32 0, !dbg !8569
  br label %11, !dbg !8569

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !8559
  ret i32 %12, !dbg !8570
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.57() unnamed_addr #1 !dbg !8571 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !8575, metadata !DIExpression()), !dbg !8576
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8577, !srcloc !8579
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.58() #25, !dbg !8580
  ret i1 %1, !dbg !8581
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8582 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8586, metadata !DIExpression()), !dbg !8591
  call void @llvm.dbg.value(metadata i8 1, metadata !8587, metadata !DIExpression()), !dbg !8591
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !8588, metadata !DIExpression()), !dbg !8591
  call void @llvm.dbg.value(metadata i32 0, metadata !8589, metadata !DIExpression()), !dbg !8591
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !8590, metadata !DIExpression()), !dbg !8591
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8592
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !8592
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !8592
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !8588, metadata !DIExpression()), !dbg !8591
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !8593
  %6 = bitcast %struct.sensor_value* %5 to i8*, !dbg !8596
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #25, !dbg !8597
  call void @llvm.dbg.value(metadata i32 %7, metadata !8589, metadata !DIExpression()), !dbg !8591
  call void @llvm.dbg.value(metadata i32 %7, metadata !8589, metadata !DIExpression()), !dbg !8591
  ret i32 %7, !dbg !8598
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.58() unnamed_addr #1 !dbg !8599 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !8601, metadata !DIExpression()), !dbg !8602
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_9) #24, !dbg !8603
  ret i1 %1, !dbg !8604
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !8605 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8609, metadata !DIExpression()), !dbg !8617
  call void @llvm.dbg.value(metadata i32 %1, metadata !8610, metadata !DIExpression()), !dbg !8617
  call void @llvm.dbg.value(metadata i32 %2, metadata !8611, metadata !DIExpression()), !dbg !8617
  call void @llvm.dbg.value(metadata i32 %3, metadata !8612, metadata !DIExpression()), !dbg !8617
  call void @llvm.dbg.value(metadata i32 0, metadata !8613, metadata !DIExpression()), !dbg !8617
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #25, !dbg !8618
  %5 = icmp eq i32 %3, 17, !dbg !8619
  br i1 %5, label %6, label %14, !dbg !8620

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !8621
  call void @llvm.dbg.value(metadata i32 %7, metadata !8614, metadata !DIExpression()), !dbg !8622
  %8 = icmp eq i32 %7, 0, !dbg !8623
  %9 = shl nuw i32 1, %1, !dbg !8625
  br i1 %8, label %12, label %10, !dbg !8626

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #25, !dbg !8627
  br label %14, !dbg !8629

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #25, !dbg !8630
  br label %14, !dbg !8633

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !8634
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #15 !dbg !8635 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8637, metadata !DIExpression()), !dbg !8641
  call void @llvm.dbg.value(metadata i8* %1, metadata !8638, metadata !DIExpression()), !dbg !8641
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8642
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8642
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8642
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8639, metadata !DIExpression()), !dbg !8641
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8643
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8643
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #25, !dbg !8645
  %9 = icmp eq i32 %8, 0, !dbg !8645
  br i1 %9, label %12, label %10, !dbg !8646

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8647
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #25, !dbg !8649
  br label %12, !dbg !8650

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8651
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #25, !dbg !8653
  %15 = icmp eq i32 %14, 0, !dbg !8653
  br i1 %15, label %19, label %16, !dbg !8654

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8655
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #25, !dbg !8656
  store i8 %18, i8* %1, align 1, !dbg !8657
  br label %19, !dbg !8658

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !8641
  ret i32 %20, !dbg !8659
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !8660 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8662, metadata !DIExpression()), !dbg !8666
  call void @llvm.dbg.value(metadata i8 %1, metadata !8663, metadata !DIExpression()), !dbg !8666
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8667
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8667
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8667
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8664, metadata !DIExpression()), !dbg !8666
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !8668

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8669
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #25, !dbg !8672
  %10 = icmp eq i32 %9, 0, !dbg !8672
  br i1 %10, label %18, label %11, !dbg !8673

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !8674, !srcloc !8681
  call void @llvm.dbg.value(metadata i32 undef, metadata !8677, metadata !DIExpression()) #23, !dbg !8682
  call void @llvm.dbg.value(metadata i32 undef, metadata !8678, metadata !DIExpression()) #23, !dbg !8682
  call void @llvm.dbg.value(metadata i32 undef, metadata !8665, metadata !DIExpression()), !dbg !8666
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8683
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #25, !dbg !8685
  %15 = icmp eq i32 %14, 0, !dbg !8685
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !8674
  br i1 %15, label %17, label %19, !dbg !8686

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !8677, metadata !DIExpression()) #23, !dbg !8682
  call void @llvm.dbg.value(metadata i32 %16, metadata !8665, metadata !DIExpression()), !dbg !8666
  call void @llvm.dbg.value(metadata i32 undef, metadata !8687, metadata !DIExpression()) #23, !dbg !8690
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !8692, !srcloc !8693
  br label %18, !dbg !8694

18:                                               ; preds = %17, %7
  br label %7, !dbg !8669, !llvm.loop !8695

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !8674
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8697
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #25, !dbg !8698
  call void @llvm.dbg.value(metadata i32 %20, metadata !8687, metadata !DIExpression()) #23, !dbg !8699
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !8701, !srcloc !8693
  ret void, !dbg !8702
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #15 !dbg !8703 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8705, metadata !DIExpression()), !dbg !8708
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8709
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8709
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8709
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8706, metadata !DIExpression()), !dbg !8708
  call void @llvm.dbg.value(metadata i32 0, metadata !8707, metadata !DIExpression()), !dbg !8708
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8710
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8710
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #25, !dbg !8712
  %8 = icmp ne i32 %7, 0, !dbg !8712
  %9 = zext i1 %8 to i32, !dbg !8713
  call void @llvm.dbg.value(metadata i32 %9, metadata !8707, metadata !DIExpression()), !dbg !8708
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8714
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #25, !dbg !8716
  %12 = icmp eq i32 %11, 0, !dbg !8716
  %13 = or i32 %9, 2, !dbg !8717
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !8717
  call void @llvm.dbg.value(metadata i32 %14, metadata !8707, metadata !DIExpression()), !dbg !8708
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8718
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #25, !dbg !8720
  %17 = icmp eq i32 %16, 0, !dbg !8720
  %18 = or i32 %14, 4, !dbg !8721
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !8721
  call void @llvm.dbg.value(metadata i32 %19, metadata !8707, metadata !DIExpression()), !dbg !8708
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8722
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #25, !dbg !8724
  %22 = icmp eq i32 %21, 0, !dbg !8724
  %23 = or i32 %19, 8, !dbg !8725
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !8725
  call void @llvm.dbg.value(metadata i32 %24, metadata !8707, metadata !DIExpression()), !dbg !8708
  %25 = and i32 %24, 8, !dbg !8726
  %26 = icmp eq i32 %25, 0, !dbg !8726
  br i1 %26, label %29, label %27, !dbg !8728

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8729
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #25, !dbg !8731
  br label %29, !dbg !8732

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !8733
  %31 = icmp eq i32 %30, 0, !dbg !8733
  br i1 %31, label %34, label %32, !dbg !8735

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8736
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #25, !dbg !8738
  br label %34, !dbg !8739

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !8740
  %36 = icmp eq i32 %35, 0, !dbg !8740
  br i1 %36, label %39, label %37, !dbg !8742

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8743
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #25, !dbg !8745
  br label %39, !dbg !8746

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !8747
  %41 = icmp eq i32 %40, 0, !dbg !8747
  br i1 %41, label %44, label %42, !dbg !8749

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8750
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #25, !dbg !8752
  br label %44, !dbg !8753

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8754
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #25, !dbg !8755
  ret i32 %24, !dbg !8756
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !8757 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8759, metadata !DIExpression()), !dbg !8768
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !8760, metadata !DIExpression()), !dbg !8768
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8769
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8769
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8769
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8761, metadata !DIExpression()), !dbg !8768
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8770
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !8770
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !8770
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !8762, metadata !DIExpression()), !dbg !8768
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !8771
  %10 = load i8, i8* %9, align 4, !dbg !8771
  %11 = zext i8 %10 to i32, !dbg !8772
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #25, !dbg !8773
  call void @llvm.dbg.value(metadata i32 %12, metadata !8764, metadata !DIExpression()), !dbg !8768
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !8774
  %14 = load i8, i8* %13, align 1, !dbg !8774
  %15 = zext i8 %14 to i32, !dbg !8775
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #25, !dbg !8776
  call void @llvm.dbg.value(metadata i32 %16, metadata !8765, metadata !DIExpression()), !dbg !8768
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !8777
  %18 = load i8, i8* %17, align 2, !dbg !8777
  %19 = zext i8 %18 to i32, !dbg !8778
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #25, !dbg !8779
  call void @llvm.dbg.value(metadata i32 %20, metadata !8766, metadata !DIExpression()), !dbg !8768
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !8780
  %22 = load i8, i8* %21, align 1, !dbg !8780
  %23 = zext i8 %22 to i32, !dbg !8781
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #25, !dbg !8782
  call void @llvm.dbg.value(metadata i32 %24, metadata !8767, metadata !DIExpression()), !dbg !8768
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !8783

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !8785
  br i1 %26, label %69, label %27, !dbg !8787

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !8788

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !8789
  br i1 %29, label %65, label %30, !dbg !8789

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !8791
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !8768
  br i1 %31, label %38, label %34, !dbg !8793

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !8794
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
    i32 1073812480, label %36
  ], !dbg !8794

36:                                               ; preds = %34, %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !8797
  br i1 %37, label %38, label %69, !dbg !8798

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8799
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #25, !dbg !8800
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #25, !dbg !8801
  %41 = icmp eq i32 %12, %40, !dbg !8803
  br i1 %41, label %43, label %42, !dbg !8804

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #25, !dbg !8805
  br label %43, !dbg !8807

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #25, !dbg !8808
  %45 = icmp eq i32 %16, %44, !dbg !8810
  br i1 %45, label %47, label %46, !dbg !8811

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #25, !dbg !8812
  br label %47, !dbg !8814

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #25, !dbg !8815
  %49 = icmp eq i32 %20, %48, !dbg !8817
  br i1 %49, label %51, label %50, !dbg !8818

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #25, !dbg !8819
  br label %51, !dbg !8821

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #25, !dbg !8822
  %53 = icmp eq i32 %24, %52, !dbg !8824
  br i1 %53, label %55, label %54, !dbg !8825

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #25, !dbg !8826
  br label %55, !dbg !8828

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !8829
  %57 = load i32, i32* %56, align 4, !dbg !8829
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !8831
  %59 = load i32, i32* %58, align 4, !dbg !8831
  %60 = icmp eq i32 %57, %59, !dbg !8832
  br i1 %60, label %63, label %61, !dbg !8833

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #25, !dbg !8834
  %62 = load i32, i32* %56, align 4, !dbg !8836
  store i32 %62, i32* %58, align 4, !dbg !8837
  br label %63, !dbg !8838

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !8839
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #25, !dbg !8840
  br label %69, !dbg !8841

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !8789
  %67 = and i8 %66, 1, !dbg !8789
  %68 = icmp eq i8 %67, 0, !dbg !8789
  br i1 %68, label %30, label %69, !dbg !8789

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !8768
  ret i32 %70, !dbg !8842
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #20 !dbg !8843 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8845, metadata !DIExpression()), !dbg !8848
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !8846, metadata !DIExpression()), !dbg !8848
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8849
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !8849
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !8849
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !8847, metadata !DIExpression()), !dbg !8848
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !8850
  %7 = load i32, i32* %6, align 4, !dbg !8850
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !8851
  store i32 %7, i32* %8, align 4, !dbg !8852
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #25, !dbg !8853, !range !8854
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #25, !dbg !8855
  %11 = trunc i32 %10 to i8, !dbg !8855
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !8856
  store i8 %11, i8* %12, align 4, !dbg !8857
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #25, !dbg !8858, !range !8859
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #25, !dbg !8860
  %15 = trunc i32 %14 to i8, !dbg !8860
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !8861
  store i8 %15, i8* %16, align 1, !dbg !8862
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #25, !dbg !8863
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #25, !dbg !8864, !range !8854
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #25, !dbg !8865
  %20 = trunc i32 %19 to i8, !dbg !8865
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !8866
  store i8 %20, i8* %21, align 2, !dbg !8867
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #25, !dbg !8868, !range !8869
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #25, !dbg !8870
  %24 = trunc i32 %23 to i8, !dbg !8870
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !8871
  store i8 %24, i8* %25, align 1, !dbg !8872
  ret i32 0, !dbg !8873
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #14 !dbg !8874 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8878, metadata !DIExpression()), !dbg !8880
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8881
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8881
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8881
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8879, metadata !DIExpression()), !dbg !8880
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8882
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8882
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #25, !dbg !8883
  ret i32 %7, !dbg !8884
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #12 !dbg !8885 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8889, metadata !DIExpression()), !dbg !8890
  %2 = icmp eq i32 %0, 1024, !dbg !8891
  %3 = select i1 %2, i32 2, i32 0, !dbg !8891
  %4 = icmp eq i32 %0, 1536, !dbg !8891
  %5 = select i1 %4, i32 1, i32 %3, !dbg !8891
  ret i32 %5, !dbg !8892
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #14 !dbg !8893 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8895, metadata !DIExpression()), !dbg !8897
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8898
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8898
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8898
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8896, metadata !DIExpression()), !dbg !8897
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8899
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8899
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #25, !dbg !8900
  ret i32 %7, !dbg !8901
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #9 !dbg !8902 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8906, metadata !DIExpression()), !dbg !8907
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !8908
  %3 = icmp ult i32 %2, 4, !dbg !8908
  br i1 %3, label %4, label %7, !dbg !8908

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !8908
  %6 = load i32, i32* %5, align 4, !dbg !8908
  br label %7, !dbg !8908

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !8909
  ret i32 %8, !dbg !8911
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #14 !dbg !8912 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8914, metadata !DIExpression()), !dbg !8916
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8917
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8917
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8917
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8915, metadata !DIExpression()), !dbg !8916
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8918
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8918
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #25, !dbg !8919
  ret i32 %7, !dbg !8920
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !8921 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8925, metadata !DIExpression()), !dbg !8927
  call void @llvm.dbg.value(metadata i32 %1, metadata !8926, metadata !DIExpression()), !dbg !8927
  %3 = icmp eq i32 %0, 4096, !dbg !8928
  %4 = icmp eq i32 %1, 0, !dbg !8928
  %5 = select i1 %4, i32 4, i32 3, !dbg !8928
  %6 = select i1 %4, i32 3, i32 2, !dbg !8928
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !8928
  ret i32 %7, !dbg !8929
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #14 !dbg !8930 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8932, metadata !DIExpression()), !dbg !8934
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8935
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8935
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8935
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8933, metadata !DIExpression()), !dbg !8934
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8936
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8936
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #25, !dbg !8937
  ret i32 %7, !dbg !8938
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #12 !dbg !8939 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8943, metadata !DIExpression()), !dbg !8944
  %2 = icmp eq i32 %0, 768, !dbg !8945
  %3 = zext i1 %2 to i32, !dbg !8944
  ret i32 %3, !dbg !8947
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8948 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8953, metadata !DIExpression()), !dbg !8954
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !8955
  %3 = load volatile i32, i32* %2, align 4, !dbg !8955
  %4 = and i32 %3, 768, !dbg !8955
  ret i32 %4, !dbg !8956
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8957 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8959, metadata !DIExpression()), !dbg !8960
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8961
  %3 = load volatile i32, i32* %2, align 4, !dbg !8961
  %4 = and i32 %3, 4096, !dbg !8961
  ret i32 %4, !dbg !8962
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8963 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8965, metadata !DIExpression()), !dbg !8966
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !8967
  %3 = load volatile i32, i32* %2, align 4, !dbg !8967
  %4 = and i32 %3, 12288, !dbg !8967
  ret i32 %4, !dbg !8968
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8969 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8971, metadata !DIExpression()), !dbg !8972
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8973
  %3 = load volatile i32, i32* %2, align 4, !dbg !8973
  %4 = and i32 %3, 1536, !dbg !8973
  ret i32 %4, !dbg !8974
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #12 !dbg !8975 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8979, metadata !DIExpression()), !dbg !8980
  %2 = icmp eq i32 %0, 2, !dbg !8981
  %3 = select i1 %2, i32 1024, i32 0, !dbg !8981
  %4 = icmp eq i32 %0, 1, !dbg !8981
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !8981
  ret i32 %5, !dbg !8982
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #12 !dbg !8983 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8987, metadata !DIExpression()), !dbg !8988
  %2 = icmp ult i32 %0, 3, !dbg !8989
  br i1 %2, label %3, label %6, !dbg !8989

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !8989
  %5 = load i32, i32* %4, align 4, !dbg !8989
  br label %6, !dbg !8989

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !8990
  ret i32 %7, !dbg !8992
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !8993 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8997, metadata !DIExpression()), !dbg !8999
  call void @llvm.dbg.value(metadata i32 %1, metadata !8998, metadata !DIExpression()), !dbg !8999
  %3 = icmp eq i32 %0, 4, !dbg !9000
  %4 = icmp eq i32 %1, 0, !dbg !9000
  %5 = select i1 %4, i32 0, i32 4096, !dbg !9000
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !9000
  ret i32 %6, !dbg !9001
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #12 !dbg !9002 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9006, metadata !DIExpression()), !dbg !9007
  %2 = icmp eq i32 %0, 1, !dbg !9008
  %3 = select i1 %2, i32 768, i32 0, !dbg !9007
  ret i32 %3, !dbg !9010
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !9011 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9015, metadata !DIExpression()), !dbg !9016
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9017
  %3 = load volatile i32, i32* %2, align 4, !dbg !9017
  %4 = and i32 %3, -8193, !dbg !9017
  store volatile i32 %4, i32* %2, align 4, !dbg !9017
  ret void, !dbg !9018
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !9019 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9023, metadata !DIExpression()), !dbg !9026
  call void @llvm.dbg.value(metadata i32 %1, metadata !9024, metadata !DIExpression()), !dbg !9026
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9027
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9027
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9027
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9025, metadata !DIExpression()), !dbg !9026
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9028
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9028
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #25, !dbg !9029
  ret void, !dbg !9030
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !9031 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9033, metadata !DIExpression()), !dbg !9036
  call void @llvm.dbg.value(metadata i32 %1, metadata !9034, metadata !DIExpression()), !dbg !9036
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9037
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9037
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9037
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9035, metadata !DIExpression()), !dbg !9036
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9038
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9038
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #25, !dbg !9039
  ret void, !dbg !9040
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !9041 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9043, metadata !DIExpression()), !dbg !9046
  call void @llvm.dbg.value(metadata i32 %1, metadata !9044, metadata !DIExpression()), !dbg !9046
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9047
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9047
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9047
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9045, metadata !DIExpression()), !dbg !9046
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9048
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9048
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #25, !dbg !9049
  ret void, !dbg !9050
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !9051 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9053, metadata !DIExpression()), !dbg !9056
  call void @llvm.dbg.value(metadata i32 %1, metadata !9054, metadata !DIExpression()), !dbg !9056
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9057
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9057
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9057
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9055, metadata !DIExpression()), !dbg !9056
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9058
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9058
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #25, !dbg !9059
  ret void, !dbg !9060
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !9061 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9063, metadata !DIExpression()), !dbg !9068
  call void @llvm.dbg.value(metadata i32 %1, metadata !9064, metadata !DIExpression()), !dbg !9068
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9069
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !9069
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !9069
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !9065, metadata !DIExpression()), !dbg !9068
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9070
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !9070
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !9070
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !9066, metadata !DIExpression()), !dbg !9068
  %10 = bitcast i32* %3 to i8*, !dbg !9071
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !9071
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !9072
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !9072
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !9076
  %14 = bitcast %struct.sensor_value** %13 to i8**, !dbg !9076
  %15 = load i8*, i8** %14, align 4, !dbg !9076
  call void @llvm.dbg.value(metadata i32* %3, metadata !9067, metadata !DIExpression(DW_OP_deref)), !dbg !9068
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #25, !dbg !9077
  %17 = icmp slt i32 %16, 0, !dbg !9078
  br i1 %17, label %23, label %18, !dbg !9079

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !9080
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !9080
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %20) #25, !dbg !9081
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !9082
  %22 = load i32, i32* %3, align 4, !dbg !9083
  call void @llvm.dbg.value(metadata i32 %22, metadata !9067, metadata !DIExpression()), !dbg !9068
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %21, i32 noundef %22, i32 noundef %1) #25, !dbg !9084
  br label %23, !dbg !9085

23:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !9085
  ret void, !dbg !9085
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !9086 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9088, metadata !DIExpression()), !dbg !9089
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9090
  %3 = load volatile i32, i32* %2, align 4, !dbg !9090
  %4 = or i32 %3, 8192, !dbg !9090
  store volatile i32 %4, i32* %2, align 4, !dbg !9090
  ret void, !dbg !9091
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !9092 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9094, metadata !DIExpression()), !dbg !9098
  call void @llvm.dbg.value(metadata i8* %1, metadata !9095, metadata !DIExpression()), !dbg !9098
  call void @llvm.dbg.value(metadata i32* %2, metadata !9096, metadata !DIExpression()), !dbg !9098
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !9099
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !9099
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !9099
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !9097, metadata !DIExpression()), !dbg !9098
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !9100
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !9100
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !9102
  br i1 %9, label %12, label %10, !dbg !9103

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #24, !dbg !9104
  br label %12, !dbg !9105

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !9098
  ret i32 %13, !dbg !9106
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !9107 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9111, metadata !DIExpression()), !dbg !9113
  call void @llvm.dbg.value(metadata i32 0, metadata !9112, metadata !DIExpression()), !dbg !9113
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9114
  %3 = load volatile i32, i32* %2, align 4, !dbg !9114
  %4 = and i32 %3, -32769, !dbg !9114
  store volatile i32 %4, i32* %2, align 4, !dbg !9114
  ret void, !dbg !9115
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #13 !dbg !9116 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9120, metadata !DIExpression()), !dbg !9124
  call void @llvm.dbg.value(metadata i32 %1, metadata !9121, metadata !DIExpression()), !dbg !9124
  call void @llvm.dbg.value(metadata i32 0, metadata !9122, metadata !DIExpression()), !dbg !9124
  call void @llvm.dbg.value(metadata i32 %2, metadata !9123, metadata !DIExpression()), !dbg !9124
  %4 = zext i32 %1 to i64, !dbg !9125
  %5 = mul nuw nsw i64 %4, 25, !dbg !9125
  %6 = zext i32 %2 to i64, !dbg !9125
  %7 = shl nuw nsw i64 %6, 2, !dbg !9125
  %8 = udiv i64 %5, %7, !dbg !9125
  %9 = trunc i64 %8 to i32, !dbg !9125
  %10 = udiv i32 %9, 100, !dbg !9125
  %11 = shl nuw nsw i32 %10, 4, !dbg !9125
  %12 = mul i32 %10, -100, !dbg !9125
  %13 = add i32 %12, %9, !dbg !9125
  %14 = shl i32 %13, 4, !dbg !9125
  %15 = add i32 %14, 50, !dbg !9125
  %16 = udiv i32 %15, 100, !dbg !9125
  %17 = and i32 %16, 240, !dbg !9125
  %18 = add nuw nsw i32 %17, %11, !dbg !9125
  %19 = and i32 %16, 15, !dbg !9125
  %20 = and i32 %18, 65520, !dbg !9128
  %21 = or i32 %20, %19, !dbg !9128
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !9129
  store volatile i32 %21, i32* %22, align 4, !dbg !9130
  ret void, !dbg !9131
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !9132 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9134, metadata !DIExpression()), !dbg !9136
  call void @llvm.dbg.value(metadata i32 %1, metadata !9135, metadata !DIExpression()), !dbg !9136
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !9137
  %4 = load volatile i32, i32* %3, align 4, !dbg !9137
  %5 = and i32 %4, -769, !dbg !9137
  %6 = or i32 %5, %1, !dbg !9137
  store volatile i32 %6, i32* %3, align 4, !dbg !9137
  ret void, !dbg !9138
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !9139 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9141, metadata !DIExpression()), !dbg !9143
  call void @llvm.dbg.value(metadata i32 %1, metadata !9142, metadata !DIExpression()), !dbg !9143
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9144
  %4 = load volatile i32, i32* %3, align 4, !dbg !9144
  %5 = and i32 %4, -4097, !dbg !9144
  %6 = or i32 %5, %1, !dbg !9144
  store volatile i32 %6, i32* %3, align 4, !dbg !9144
  ret void, !dbg !9145
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !9146 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9148, metadata !DIExpression()), !dbg !9150
  call void @llvm.dbg.value(metadata i32 %1, metadata !9149, metadata !DIExpression()), !dbg !9150
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !9151
  %4 = load volatile i32, i32* %3, align 4, !dbg !9151
  %5 = and i32 %4, -12289, !dbg !9151
  %6 = or i32 %5, %1, !dbg !9151
  store volatile i32 %6, i32* %3, align 4, !dbg !9151
  ret void, !dbg !9152
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !9153 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9155, metadata !DIExpression()), !dbg !9157
  call void @llvm.dbg.value(metadata i32 %1, metadata !9156, metadata !DIExpression()), !dbg !9157
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9158
  %4 = load volatile i32, i32* %3, align 4, !dbg !9158
  %5 = and i32 %4, -1537, !dbg !9158
  %6 = or i32 %5, %1, !dbg !9158
  store volatile i32 %6, i32* %3, align 4, !dbg !9158
  ret void, !dbg !9159
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !9160 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9162, metadata !DIExpression()), !dbg !9163
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9164
  %3 = load volatile i32, i32* %2, align 4, !dbg !9164
  %4 = lshr i32 %3, 3, !dbg !9165
  %5 = and i32 %4, 1, !dbg !9165
  ret i32 %5, !dbg !9166
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !9167 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9169, metadata !DIExpression()), !dbg !9170
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9171
  %3 = load volatile i32, i32* %2, align 4, !dbg !9171
  %4 = and i32 %3, 1, !dbg !9171
  ret i32 %4, !dbg !9172
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !9173 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9175, metadata !DIExpression()), !dbg !9176
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9177
  %3 = load volatile i32, i32* %2, align 4, !dbg !9177
  %4 = lshr i32 %3, 1, !dbg !9178
  %5 = and i32 %4, 1, !dbg !9178
  ret i32 %5, !dbg !9179
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !9180 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9182, metadata !DIExpression()), !dbg !9183
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9184
  %3 = load volatile i32, i32* %2, align 4, !dbg !9184
  %4 = lshr i32 %3, 8, !dbg !9185
  %5 = and i32 %4, 1, !dbg !9185
  ret i32 %5, !dbg !9186
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !9187 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9189, metadata !DIExpression()), !dbg !9190
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9191
  store volatile i32 -257, i32* %2, align 4, !dbg !9191
  ret void, !dbg !9192
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9193 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9195, metadata !DIExpression()), !dbg !9197
  %3 = bitcast i32* %2 to i8*, !dbg !9198
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9198
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9196, metadata !DIExpression()), !dbg !9199
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9200
  %5 = load volatile i32, i32* %4, align 4, !dbg !9200
  store volatile i32 %5, i32* %2, align 4, !dbg !9201
  %6 = load volatile i32, i32* %2, align 4, !dbg !9202
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9203
  %8 = load volatile i32, i32* %7, align 4, !dbg !9203
  store volatile i32 %8, i32* %2, align 4, !dbg !9204
  %9 = load volatile i32, i32* %2, align 4, !dbg !9205
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9206
  ret void, !dbg !9206
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9207 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9209, metadata !DIExpression()), !dbg !9211
  %3 = bitcast i32* %2 to i8*, !dbg !9212
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9212
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9210, metadata !DIExpression()), !dbg !9213
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9214
  %5 = load volatile i32, i32* %4, align 4, !dbg !9214
  store volatile i32 %5, i32* %2, align 4, !dbg !9215
  %6 = load volatile i32, i32* %2, align 4, !dbg !9216
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9217
  %8 = load volatile i32, i32* %7, align 4, !dbg !9217
  store volatile i32 %8, i32* %2, align 4, !dbg !9218
  %9 = load volatile i32, i32* %2, align 4, !dbg !9219
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9220
  ret void, !dbg !9220
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9221 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9223, metadata !DIExpression()), !dbg !9225
  %3 = bitcast i32* %2 to i8*, !dbg !9226
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9226
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9224, metadata !DIExpression()), !dbg !9227
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9228
  %5 = load volatile i32, i32* %4, align 4, !dbg !9228
  store volatile i32 %5, i32* %2, align 4, !dbg !9229
  %6 = load volatile i32, i32* %2, align 4, !dbg !9230
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9231
  %8 = load volatile i32, i32* %7, align 4, !dbg !9231
  store volatile i32 %8, i32* %2, align 4, !dbg !9232
  %9 = load volatile i32, i32* %2, align 4, !dbg !9233
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9234
  ret void, !dbg !9234
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9235 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9237, metadata !DIExpression()), !dbg !9239
  %3 = bitcast i32* %2 to i8*, !dbg !9240
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9240
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9238, metadata !DIExpression()), !dbg !9241
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9242
  %5 = load volatile i32, i32* %4, align 4, !dbg !9242
  store volatile i32 %5, i32* %2, align 4, !dbg !9243
  %6 = load volatile i32, i32* %2, align 4, !dbg !9244
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9245
  %8 = load volatile i32, i32* %7, align 4, !dbg !9245
  store volatile i32 %8, i32* %2, align 4, !dbg !9246
  %9 = load volatile i32, i32* %2, align 4, !dbg !9247
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9248
  ret void, !dbg !9248
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !9249 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9251, metadata !DIExpression()), !dbg !9252
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9253
  %3 = load volatile i32, i32* %2, align 4, !dbg !9253
  %4 = lshr i32 %3, 7, !dbg !9254
  %5 = and i32 %4, 1, !dbg !9254
  ret i32 %5, !dbg !9255
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #13 !dbg !9256 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9260, metadata !DIExpression()), !dbg !9262
  call void @llvm.dbg.value(metadata i8 %1, metadata !9261, metadata !DIExpression()), !dbg !9262
  %3 = zext i8 %1 to i32, !dbg !9263
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9264
  store volatile i32 %3, i32* %4, align 4, !dbg !9265
  ret void, !dbg !9266
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !9267 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9269, metadata !DIExpression()), !dbg !9270
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9271
  %3 = load volatile i32, i32* %2, align 4, !dbg !9271
  %4 = lshr i32 %3, 5, !dbg !9272
  %5 = and i32 %4, 1, !dbg !9272
  ret i32 %5, !dbg !9273
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !9274 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9278, metadata !DIExpression()), !dbg !9279
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9280
  %3 = load volatile i32, i32* %2, align 4, !dbg !9280
  %4 = trunc i32 %3 to i8, !dbg !9281
  ret i8 %4, !dbg !9282
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !9283 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9285, metadata !DIExpression()), !dbg !9291
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9292
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9292
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9292
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9286, metadata !DIExpression()), !dbg !9291
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9293
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !9293
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !9293
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !9287, metadata !DIExpression()), !dbg !9291
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #25, !dbg !9294
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !9295
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !9295
  %10 = tail call fastcc zeroext i1 @device_is_ready.63(%struct.device* noundef %9) #25, !dbg !9297
  br i1 %10, label %11, label %49, !dbg !9298

11:                                               ; preds = %1
  %12 = load %struct.device*, %struct.device** %8, align 4, !dbg !9299
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !9300
  %14 = bitcast %struct.sensor_value** %13 to i8**, !dbg !9300
  %15 = load i8*, i8** %14, align 4, !dbg !9300
  %16 = tail call fastcc i32 @clock_control_on.64(%struct.device* noundef %12, i8* noundef %15) #25, !dbg !9301
  call void @llvm.dbg.value(metadata i32 %16, metadata !9290, metadata !DIExpression()), !dbg !9291
  %17 = icmp eq i32 %16, 0, !dbg !9302
  br i1 %17, label %18, label %49, !dbg !9304

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !9305
  %20 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %19, align 4, !dbg !9305
  %21 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %20) #25, !dbg !9306
  call void @llvm.dbg.value(metadata i32 %21, metadata !9290, metadata !DIExpression()), !dbg !9291
  %22 = icmp slt i32 %21, 0, !dbg !9307
  br i1 %22, label %49, label %23, !dbg !9309

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9310
  %25 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !9310
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %25) #25, !dbg !9311
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !9312
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %26) #25, !dbg !9313
  %27 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !9314
  %28 = load i32, i32* %27, align 4, !dbg !9314
  switch i32 %28, label %30 [
    i32 2, label %31
    i32 1, label %29
  ], !dbg !9316

29:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 1536, metadata !9288, metadata !DIExpression()), !dbg !9291
  call void @llvm.dbg.value(metadata i32 4096, metadata !9289, metadata !DIExpression()), !dbg !9291
  br label %31, !dbg !9317

30:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 0, metadata !9288, metadata !DIExpression()), !dbg !9291
  call void @llvm.dbg.value(metadata i32 0, metadata !9289, metadata !DIExpression()), !dbg !9291
  br label %31

31:                                               ; preds = %23, %29, %30
  %32 = phi i32 [ 1536, %29 ], [ 0, %30 ], [ 1024, %23 ], !dbg !9320
  %33 = phi i32 [ 4096, %29 ], [ 0, %30 ], [ 4096, %23 ], !dbg !9320
  call void @llvm.dbg.value(metadata i32 %33, metadata !9289, metadata !DIExpression()), !dbg !9291
  call void @llvm.dbg.value(metadata i32 %32, metadata !9288, metadata !DIExpression()), !dbg !9291
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !9321
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %34, i32 noundef %33, i32 noundef %32) #25, !dbg !9322
  %35 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !9323
  %36 = load i8, i8* %35, align 4, !dbg !9323, !range !5843
  %37 = icmp eq i8 %36, 0, !dbg !9323
  br i1 %37, label %39, label %38, !dbg !9325

38:                                               ; preds = %31
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #25, !dbg !9326
  br label %39, !dbg !9328

39:                                               ; preds = %38, %31
  %40 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !9329
  %41 = load i32, i32* %40, align 4, !dbg !9329
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %41) #25, !dbg !9330
  %42 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !9331
  %43 = load i8, i8* %42, align 4, !dbg !9331, !range !5843
  %44 = icmp eq i8 %43, 0, !dbg !9331
  br i1 %44, label %47, label %45, !dbg !9333

45:                                               ; preds = %39
  %46 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !9334
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %46) #25, !dbg !9336
  br label %47, !dbg !9337

47:                                               ; preds = %45, %39
  %48 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !9338
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %48) #25, !dbg !9339
  br label %49, !dbg !9340

49:                                               ; preds = %18, %11, %1, %47
  %50 = phi i32 [ 0, %47 ], [ -19, %1 ], [ %16, %11 ], [ %21, %18 ], !dbg !9291
  ret i32 %50, !dbg !9341
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #7 !dbg !9342 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9346, metadata !DIExpression()), !dbg !9350
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9351
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !9351
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !9351
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !9347, metadata !DIExpression()), !dbg !9350
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9348, metadata !DIExpression()), !dbg !9350
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !9352
  store %struct.device* @__device_dts_ord_9, %struct.device** %5, align 4, !dbg !9353
  ret void, !dbg !9354
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.63(%struct.device* noundef %0) unnamed_addr #1 !dbg !9355 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9359, metadata !DIExpression()), !dbg !9360
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9361, !srcloc !9363
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.65(%struct.device* noundef %0) #25, !dbg !9364
  ret i1 %2, !dbg !9365
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.64(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !9366 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9368, metadata !DIExpression()), !dbg !9371
  call void @llvm.dbg.value(metadata i8* %1, metadata !9369, metadata !DIExpression()), !dbg !9371
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !9372
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !9372
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !9372
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !9370, metadata !DIExpression()), !dbg !9371
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !9373
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !9373
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #24, !dbg !9374
  ret i32 %8, !dbg !9375
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !9376 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !9380, metadata !DIExpression()), !dbg !9384
  call void @llvm.dbg.value(metadata i8 0, metadata !9381, metadata !DIExpression()), !dbg !9384
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !9385
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !9385
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !9383, metadata !DIExpression(DW_OP_deref)), !dbg !9384
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #24, !dbg !9386
  call void @llvm.dbg.value(metadata i32 %4, metadata !9382, metadata !DIExpression()), !dbg !9384
  %5 = icmp slt i32 %4, 0, !dbg !9387
  br i1 %5, label %9, label %6, !dbg !9389

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !9390
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !9383, metadata !DIExpression()), !dbg !9384
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #25, !dbg !9391
  br label %9, !dbg !9392

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !9384
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !9393
  ret i32 %10, !dbg !9393
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !9394 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9396, metadata !DIExpression()), !dbg !9400
  call void @llvm.dbg.value(metadata i32 12, metadata !9397, metadata !DIExpression()), !dbg !9400
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !9401

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !9402, metadata !DIExpression()) #23, !dbg !9408
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #23, !dbg !9411, !srcloc !9412
  call void @llvm.dbg.value(metadata i32 %4, metadata !9407, metadata !DIExpression()) #23, !dbg !9408
  %5 = or i32 %4, 12, !dbg !9413
  call void @llvm.dbg.value(metadata i32 %5, metadata !9398, metadata !DIExpression()), !dbg !9414
  call void @llvm.dbg.value(metadata i32 %5, metadata !9415, metadata !DIExpression()) #23, !dbg !9422
  call void @llvm.dbg.value(metadata i32* %2, metadata !9420, metadata !DIExpression()) #23, !dbg !9422
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #23, !dbg !9424, !srcloc !9425
  call void @llvm.dbg.value(metadata i32 %6, metadata !9421, metadata !DIExpression()) #23, !dbg !9422
  %7 = icmp eq i32 %6, 0, !dbg !9401
  br i1 %7, label %8, label %3, !dbg !9413, !llvm.loop !9426

8:                                                ; preds = %3
  ret void, !dbg !9427
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #13 !dbg !9428 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9430, metadata !DIExpression()), !dbg !9434
  call void @llvm.dbg.value(metadata i32 %1, metadata !9431, metadata !DIExpression()), !dbg !9434
  call void @llvm.dbg.value(metadata i32 %2, metadata !9432, metadata !DIExpression()), !dbg !9434
  call void @llvm.dbg.value(metadata i32 0, metadata !9433, metadata !DIExpression()), !dbg !9434
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9435
  %5 = load volatile i32, i32* %4, align 4, !dbg !9435
  %6 = and i32 %5, -5633, !dbg !9435
  %7 = or i32 %2, %1, !dbg !9435
  %8 = or i32 %7, %6, !dbg !9435
  store volatile i32 %8, i32* %4, align 4, !dbg !9435
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !9436
  %10 = load volatile i32, i32* %9, align 4, !dbg !9436
  %11 = and i32 %10, -12289, !dbg !9436
  store volatile i32 %11, i32* %9, align 4, !dbg !9436
  ret void, !dbg !9437
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !9438 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9440, metadata !DIExpression()), !dbg !9441
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !9442
  %3 = load volatile i32, i32* %2, align 4, !dbg !9442
  %4 = or i32 %3, 8, !dbg !9442
  store volatile i32 %4, i32* %2, align 4, !dbg !9442
  ret void, !dbg !9443
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !9444 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !9448, metadata !DIExpression()), !dbg !9451
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !9449, metadata !DIExpression()), !dbg !9451
  call void @llvm.dbg.value(metadata i32 0, metadata !9450, metadata !DIExpression()), !dbg !9451
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !9452
  %3 = load %struct.sensor_value*, %struct.sensor_value** %2, align 4, !dbg !9452
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !9453
  %5 = load i8, i8* %4, align 4, !dbg !9453
  %6 = tail call i32 @pinctrl_configure_pins(%struct.sensor_value* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #24, !dbg !9454
  ret i32 %6, !dbg !9455
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.65(%struct.device* noundef %0) unnamed_addr #1 !dbg !9456 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9458, metadata !DIExpression()), !dbg !9459
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #24, !dbg !9460
  ret i1 %2, !dbg !9461
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #13 !dbg !9462 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9464, metadata !DIExpression()), !dbg !9465
  tail call fastcc void @__NVIC_SetPriority.67() #25, !dbg !9466
  store i32 16799, i32* @last_load, align 4, !dbg !9467
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !9468
  store volatile i32 16799, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !9469
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9470
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9471
  %3 = or i32 %2, 7, !dbg !9471
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9471
  ret i32 0, !dbg !9472
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.67() unnamed_addr #13 !dbg !9473 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !9475, metadata !DIExpression()), !dbg !9477
  call void @llvm.dbg.value(metadata i32 1, metadata !9476, metadata !DIExpression()), !dbg !9477
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !9478
  ret void, !dbg !9481
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !9482 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9484, metadata !DIExpression()), !dbg !9486
  %2 = tail call fastcc i32 @elapsed() #25, !dbg !9487
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !9488
  %4 = load i32, i32* @cycle_count, align 4, !dbg !9489
  %5 = add i32 %4, %3, !dbg !9489
  store i32 %5, i32* @cycle_count, align 4, !dbg !9489
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !9490
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !9491
  %7 = sub i32 %5, %6, !dbg !9494
  %8 = udiv i32 %7, 16800, !dbg !9495
  call void @llvm.dbg.value(metadata i32 %8, metadata !9485, metadata !DIExpression()), !dbg !9486
  %9 = mul nuw i32 %8, 16800, !dbg !9496
  %10 = add i32 %9, %6, !dbg !9497
  store i32 %10, i32* @announced_cycles, align 4, !dbg !9497
  tail call void @sys_clock_announce(i32 noundef %8) #24, !dbg !9498
  tail call void @z_arm_int_exit() #24, !dbg !9499
  ret void, !dbg !9500
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #13 !dbg !9501 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9506
  call void @llvm.dbg.value(metadata i32 %1, metadata !9503, metadata !DIExpression()), !dbg !9507
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9508
  call void @llvm.dbg.value(metadata i32 %2, metadata !9504, metadata !DIExpression()), !dbg !9507
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9509
  call void @llvm.dbg.value(metadata i32 %3, metadata !9505, metadata !DIExpression()), !dbg !9507
  %4 = and i32 %2, 65536, !dbg !9510
  %5 = icmp ne i32 %4, 0, !dbg !9510
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !9512
  %8 = load i32, i32* @last_load, align 4, !dbg !9507
  br i1 %7, label %9, label %13, !dbg !9512

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !9513
  %11 = add i32 %10, %8, !dbg !9513
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !9513
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9515
  br label %13, !dbg !9516

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !9517
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !9518
  %16 = add i32 %14, %15, !dbg !9519
  ret i32 %16, !dbg !9520
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !9521 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9525, metadata !DIExpression()), !dbg !9538
  call void @llvm.dbg.value(metadata i1 %1, metadata !9526, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9538
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !9539
  br i1 %4, label %5, label %8, !dbg !9539

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9541
  %7 = and i32 %6, -2, !dbg !9541
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9541
  store i32 -16777216, i32* @last_load, align 4, !dbg !9543
  br label %54, !dbg !9544

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !9545
  call void @llvm.dbg.value(metadata i32 %9, metadata !9530, metadata !DIExpression()), !dbg !9538
  br i1 %3, label %18, label %10, !dbg !9546

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !9546
  call void @llvm.dbg.value(metadata i32 undef, metadata !9525, metadata !DIExpression()), !dbg !9538
  %12 = icmp slt i32 %11, 1, !dbg !9547
  br i1 %12, label %18, label %13, !dbg !9547

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 997, !dbg !9547
  %15 = select i1 %14, i32 %11, i32 997, !dbg !9547
  %16 = mul nuw nsw i32 %15, 16800, !dbg !9547
  %17 = add nuw nsw i32 %16, 16799, !dbg !9547
  br label %18, !dbg !9547

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 16799, %10 ], [ 16749599, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !9525, metadata !DIExpression()), !dbg !9538
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9548, metadata !DIExpression()) #23, !dbg !9555
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9557, !srcloc !9563
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !9557
  call void @llvm.dbg.value(metadata i32 %21, metadata !9560, metadata !DIExpression()) #23, !dbg !9564
  call void @llvm.dbg.value(metadata i32 undef, metadata !9561, metadata !DIExpression()) #23, !dbg !9564
  call void @llvm.dbg.value(metadata i32 %21, metadata !9554, metadata !DIExpression()) #23, !dbg !9555
  call void @llvm.dbg.value(metadata i32 %21, metadata !9531, metadata !DIExpression()), !dbg !9538
  %22 = tail call fastcc i32 @elapsed() #25, !dbg !9565
  call void @llvm.dbg.value(metadata i32 %22, metadata !9536, metadata !DIExpression()), !dbg !9538
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9566
  call void @llvm.dbg.value(metadata i32 %23, metadata !9528, metadata !DIExpression()), !dbg !9538
  %24 = load i32, i32* @cycle_count, align 4, !dbg !9567
  %25 = add i32 %24, %22, !dbg !9567
  store i32 %25, i32* @cycle_count, align 4, !dbg !9567
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !9568
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !9569
  %27 = sub i32 %25, %26, !dbg !9570
  call void @llvm.dbg.value(metadata i32 %27, metadata !9537, metadata !DIExpression()), !dbg !9538
  %28 = icmp slt i32 %27, 0, !dbg !9571
  br i1 %28, label %38, label %29, !dbg !9573

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !9527, metadata !DIExpression()), !dbg !9538
  call void @llvm.dbg.value(metadata i32 undef, metadata !9527, metadata !DIExpression()), !dbg !9538
  %30 = add nuw i32 %19, %27, !dbg !9574
  %31 = urem i32 %30, 16800, !dbg !9576
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !9527, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9538
  %32 = sub nuw nsw i32 %19, %31, !dbg !9577
  call void @llvm.dbg.value(metadata i32 %32, metadata !9527, metadata !DIExpression()), !dbg !9538
  %33 = icmp ugt i32 %32, 1050, !dbg !9578
  br i1 %33, label %34, label %36, !dbg !9578

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !9527, metadata !DIExpression()), !dbg !9538
  %35 = icmp ugt i32 %32, 16749600, !dbg !9579
  br i1 %35, label %38, label %36, !dbg !9581

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1050, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1050, %18 ], [ 16749600, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !9582
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9583
  call void @llvm.dbg.value(metadata i32 %40, metadata !9529, metadata !DIExpression()), !dbg !9538
  %41 = add nsw i32 %39, -1, !dbg !9584
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !9585
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9586
  %42 = icmp ult i32 %23, %40, !dbg !9587
  br i1 %42, label %43, label %48, !dbg !9589

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !9590
  %45 = add i32 %23, %9, !dbg !9592
  %46 = sub i32 %45, %40, !dbg !9593
  %47 = add i32 %46, %44, !dbg !9590
  br label %52, !dbg !9594

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !9595
  %50 = load i32, i32* @cycle_count, align 4, !dbg !9597
  %51 = add i32 %49, %50, !dbg !9597
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !9598
  store i32 %53, i32* @cycle_count, align 4, !dbg !9598
  call void @llvm.dbg.value(metadata i32 %21, metadata !9599, metadata !DIExpression()) #23, !dbg !9605
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9604, metadata !DIExpression()) #23, !dbg !9605
  call void @llvm.dbg.value(metadata i32 %21, metadata !9607, metadata !DIExpression()) #23, !dbg !9610
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #23, !dbg !9612, !srcloc !9613
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !9614
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !9615 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9548, metadata !DIExpression()) #23, !dbg !9619
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9621, !srcloc !9563
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !9621
  call void @llvm.dbg.value(metadata i32 %2, metadata !9560, metadata !DIExpression()) #23, !dbg !9623
  call void @llvm.dbg.value(metadata i32 undef, metadata !9561, metadata !DIExpression()) #23, !dbg !9623
  call void @llvm.dbg.value(metadata i32 %2, metadata !9554, metadata !DIExpression()) #23, !dbg !9619
  call void @llvm.dbg.value(metadata i32 %2, metadata !9617, metadata !DIExpression()), !dbg !9624
  %3 = tail call fastcc i32 @elapsed() #25, !dbg !9625
  %4 = load i32, i32* @cycle_count, align 4, !dbg !9626
  %5 = add i32 %4, %3, !dbg !9627
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !9628
  %7 = sub i32 %5, %6, !dbg !9629
  call void @llvm.dbg.value(metadata i32 %7, metadata !9618, metadata !DIExpression()), !dbg !9624
  call void @llvm.dbg.value(metadata i32 %2, metadata !9599, metadata !DIExpression()) #23, !dbg !9630
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9604, metadata !DIExpression()) #23, !dbg !9630
  call void @llvm.dbg.value(metadata i32 %2, metadata !9607, metadata !DIExpression()) #23, !dbg !9632
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !9634, !srcloc !9613
  %8 = udiv i32 %7, 16800, !dbg !9635
  ret i32 %8, !dbg !9636
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !9637 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9548, metadata !DIExpression()) #23, !dbg !9641
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9643, !srcloc !9563
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !9643
  call void @llvm.dbg.value(metadata i32 %2, metadata !9560, metadata !DIExpression()) #23, !dbg !9645
  call void @llvm.dbg.value(metadata i32 undef, metadata !9561, metadata !DIExpression()) #23, !dbg !9645
  call void @llvm.dbg.value(metadata i32 %2, metadata !9554, metadata !DIExpression()) #23, !dbg !9641
  call void @llvm.dbg.value(metadata i32 %2, metadata !9639, metadata !DIExpression()), !dbg !9646
  %3 = tail call fastcc i32 @elapsed() #25, !dbg !9647
  %4 = load i32, i32* @cycle_count, align 4, !dbg !9648
  %5 = add i32 %4, %3, !dbg !9649
  call void @llvm.dbg.value(metadata i32 %5, metadata !9640, metadata !DIExpression()), !dbg !9646
  call void @llvm.dbg.value(metadata i32 %2, metadata !9599, metadata !DIExpression()) #23, !dbg !9650
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9604, metadata !DIExpression()) #23, !dbg !9650
  call void @llvm.dbg.value(metadata i32 %2, metadata !9607, metadata !DIExpression()) #23, !dbg !9652
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !9654, !srcloc !9613
  ret i32 %5, !dbg !9655
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #13 !dbg !9656 {
  %1 = load i32, i32* @last_load, align 4, !dbg !9657
  %2 = icmp eq i32 %1, -16777216, !dbg !9659
  br i1 %2, label %3, label %6, !dbg !9660

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9661
  %5 = or i32 %4, 1, !dbg !9661
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9661
  br label %6, !dbg !9663

6:                                                ; preds = %3, %0
  ret void, !dbg !9664
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #13 !dbg !9665 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9666
  %2 = and i32 %1, -2, !dbg !9666
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9666
  ret void, !dbg !9667
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #11 !dbg !9668 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !9694, metadata !DIExpression()), !dbg !9697
  call void @llvm.dbg.value(metadata i8 %1, metadata !9695, metadata !DIExpression()), !dbg !9697
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !9696, metadata !DIExpression()), !dbg !9697
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !9698
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !9698
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !9697
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !9699
  %8 = load i8, i8* %6, align 4, !dbg !9700
  %9 = zext i8 %8 to i32, !dbg !9701
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !9701
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !9702
  br i1 %11, label %18, label %24, !dbg !9703

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !9697
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !9699
  %14 = load i8, i8* %6, align 4, !dbg !9700
  %15 = zext i8 %14 to i32, !dbg !9701
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !9701
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !9702
  br i1 %17, label %18, label %24, !dbg !9703, !llvm.loop !9704

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !9706
  %21 = load i8, i8* %20, align 1, !dbg !9706
  %22 = icmp eq i8 %21, %1, !dbg !9709
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !9710
  br i1 %22, label %24, label %12, !dbg !9711

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !9697
  ret i32 %25, !dbg !9712
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct.sensor_value* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !9713 {
  call void @llvm.dbg.value(metadata %struct.sensor_value* %0, metadata !9724, metadata !DIExpression()), !dbg !9740
  call void @llvm.dbg.value(metadata i8 %1, metadata !9725, metadata !DIExpression()), !dbg !9740
  call void @llvm.dbg.value(metadata i32 %2, metadata !9726, metadata !DIExpression()), !dbg !9740
  call void @llvm.dbg.value(metadata i32 0, metadata !9729, metadata !DIExpression()), !dbg !9740
  call void @llvm.dbg.value(metadata i32 0, metadata !9730, metadata !DIExpression()), !dbg !9740
  call void @llvm.dbg.value(metadata i8 0, metadata !9731, metadata !DIExpression()), !dbg !9741
  %4 = icmp eq i8 %1, 0, !dbg !9742
  br i1 %4, label %35, label %5, !dbg !9743

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !9742
  br label %9, !dbg !9743

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !9731, metadata !DIExpression()), !dbg !9741
  call void @llvm.dbg.value(metadata i32 %29, metadata !9729, metadata !DIExpression()), !dbg !9740
  %8 = icmp eq i32 %34, %6, !dbg !9742
  br i1 %8, label %35, label %9, !dbg !9743, !llvm.loop !9744

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !9731, metadata !DIExpression()), !dbg !9741
  call void @llvm.dbg.value(metadata i32 %11, metadata !9729, metadata !DIExpression()), !dbg !9740
  %12 = getelementptr inbounds %struct.sensor_value, %struct.sensor_value* %0, i32 %10, i32 0, !dbg !9746
  %13 = load i32, i32* %12, align 4, !dbg !9746
  call void @llvm.dbg.value(metadata i32 %13, metadata !9728, metadata !DIExpression()), !dbg !9740
  %14 = and i32 %13, 31, !dbg !9747
  %15 = icmp ult i32 %14, 16, !dbg !9748
  br i1 %15, label %16, label %20, !dbg !9749

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct.sensor_value, %struct.sensor_value* %0, i32 %10, i32 1, !dbg !9750
  %18 = load i32, i32* %17, align 4, !dbg !9750
  %19 = or i32 %18, 32, !dbg !9752
  call void @llvm.dbg.value(metadata i32 %19, metadata !9729, metadata !DIExpression()), !dbg !9740
  br label %28, !dbg !9753

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !9754

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct.sensor_value, %struct.sensor_value* %0, i32 %10, i32 1, !dbg !9755
  %23 = load i32, i32* %22, align 4, !dbg !9755
  call void @llvm.dbg.value(metadata i32 %23, metadata !9733, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !9756
  %24 = lshr i32 %23, 7, !dbg !9757
  %25 = and i32 %24, 16, !dbg !9757
  %26 = or i32 %25, %23, !dbg !9757
  call void @llvm.dbg.value(metadata i32 %26, metadata !9729, metadata !DIExpression()), !dbg !9740
  br label %28, !dbg !9758

27:                                               ; preds = %20
  br label %28, !dbg !9759

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !9740
  call void @llvm.dbg.value(metadata i32 %29, metadata !9729, metadata !DIExpression()), !dbg !9740
  %30 = lshr i32 %13, 5, !dbg !9759
  %31 = and i32 %30, 255, !dbg !9759
  call void @llvm.dbg.value(metadata i32 %31, metadata !9727, metadata !DIExpression()), !dbg !9740
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #25, !dbg !9760
  call void @llvm.dbg.value(metadata i32 %32, metadata !9730, metadata !DIExpression()), !dbg !9740
  %33 = icmp slt i32 %32, 0, !dbg !9761
  %34 = add nuw nsw i32 %10, 1, !dbg !9763
  call void @llvm.dbg.value(metadata i32 %34, metadata !9731, metadata !DIExpression()), !dbg !9741
  br i1 %33, label %35, label %7, !dbg !9764

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !9765
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9766 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9770, metadata !DIExpression()), !dbg !9774
  call void @llvm.dbg.value(metadata i32 %1, metadata !9771, metadata !DIExpression()), !dbg !9774
  call void @llvm.dbg.value(metadata i32 %2, metadata !9772, metadata !DIExpression()), !dbg !9774
  %4 = icmp ugt i32 %0, 175, !dbg !9775
  br i1 %4, label %16, label %5, !dbg !9777

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !9778
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !9779
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !9779
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !9773, metadata !DIExpression()), !dbg !9774
  %9 = add nsw i32 %6, -9, !dbg !9780
  %10 = icmp ult i32 %9, 2, !dbg !9780
  br i1 %10, label %16, label %11, !dbg !9782

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.72(%struct.device* noundef %8) #25, !dbg !9783
  br i1 %12, label %13, label %16, !dbg !9784

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !9785
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #24, !dbg !9786
  br label %16, !dbg !9787

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !9774
  ret i32 %17, !dbg !9788
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.72(%struct.device* noundef %0) unnamed_addr #1 !dbg !9789 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9793, metadata !DIExpression()), !dbg !9794
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9795, !srcloc !9797
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.73(%struct.device* noundef %0) #25, !dbg !9798
  ret i1 %2, !dbg !9799
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.73(%struct.device* noundef %0) unnamed_addr #1 !dbg !9800 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9802, metadata !DIExpression()), !dbg !9803
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #24, !dbg !9804
  ret i1 %2, !dbg !9805
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #12 !dbg !9806 {
  ret void, !dbg !9807
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #14 !dbg !9808 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9810, metadata !DIExpression()), !dbg !9815
  call void @llvm.dbg.value(metadata i32 0, metadata !9811, metadata !DIExpression()), !dbg !9815
  call void @llvm.dbg.value(metadata i32 2, metadata !9812, metadata !DIExpression()), !dbg !9815
  call void @llvm.dbg.value(metadata i32 0, metadata !9813, metadata !DIExpression()), !dbg !9815
  call void @llvm.dbg.value(metadata i32 2, metadata !9814, metadata !DIExpression()), !dbg !9815
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9816
  %2 = and i32 %1, 12, !dbg !9817
  call void @llvm.dbg.value(metadata i32 %2, metadata !9810, metadata !DIExpression()), !dbg !9815
  switch i32 %2, label %21 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !9818

3:                                                ; preds = %0
  br label %21, !dbg !9819

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9821
  call void @llvm.dbg.value(metadata i32 %5, metadata !9813, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !9815
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9822
  %7 = and i32 %6, 63, !dbg !9823
  call void @llvm.dbg.value(metadata i32 %7, metadata !9814, metadata !DIExpression()), !dbg !9815
  %8 = and i32 %5, 4194304, !dbg !9824
  %9 = icmp eq i32 %8, 0, !dbg !9824
  %10 = select i1 %9, i32 16000000, i32 12000000
  %11 = udiv i32 %10, %7, !dbg !9826
  %12 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9826
  %13 = lshr i32 %12, 6, !dbg !9826
  %14 = and i32 %13, 511, !dbg !9826
  %15 = mul i32 %14, %11, !dbg !9826
  call void @llvm.dbg.value(metadata i32 %15, metadata !9811, metadata !DIExpression()), !dbg !9815
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9827
  %17 = lshr i32 %16, 15, !dbg !9828
  %18 = and i32 %17, 6, !dbg !9828
  %19 = add nuw nsw i32 %18, 2, !dbg !9828
  call void @llvm.dbg.value(metadata i32 %19, metadata !9812, metadata !DIExpression()), !dbg !9815
  %20 = udiv i32 %15, %19, !dbg !9829
  br label %21, !dbg !9830

21:                                               ; preds = %0, %4, %3
  %22 = phi i32 [ %20, %4 ], [ 12000000, %3 ], [ 16000000, %0 ]
  store i32 %22, i32* @SystemCoreClock, align 4, !dbg !9831
  %23 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9832
  %24 = lshr i32 %23, 4, !dbg !9833
  %25 = and i32 %24, 15, !dbg !9833
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %25, !dbg !9834
  %27 = load i8, i8* %26, align 1, !dbg !9834
  %28 = zext i8 %27 to i32, !dbg !9834
  call void @llvm.dbg.value(metadata i32 %28, metadata !9810, metadata !DIExpression()), !dbg !9815
  %29 = lshr i32 %22, %28, !dbg !9835
  store i32 %29, i32* @SystemCoreClock, align 4, !dbg !9835
  ret void, !dbg !9836
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !9837 {
  ret i32 0, !dbg !9842
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !9843 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !9869, metadata !DIExpression()), !dbg !9880
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !9881
  br i1 %3, label %311, label %4, !dbg !9883

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !9884
  %6 = load i32, i32* %5, align 4, !dbg !9884
  %7 = and i32 %6, 1, !dbg !9886
  %8 = icmp eq i32 %7, 0, !dbg !9887
  br i1 %8, label %66, label %9, !dbg !9888

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9889
  %11 = and i32 %10, 12, !dbg !9889
  %12 = icmp eq i32 %11, 4, !dbg !9892
  br i1 %12, label %21, label %13, !dbg !9893

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9894
  %15 = and i32 %14, 12, !dbg !9894
  %16 = icmp eq i32 %15, 8, !dbg !9895
  br i1 %16, label %17, label %29, !dbg !9896

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9897
  %19 = and i32 %18, 4194304, !dbg !9898
  %20 = icmp eq i32 %19, 0, !dbg !9899
  br i1 %20, label %29, label %21, !dbg !9900

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9901
  %23 = and i32 %22, 131072, !dbg !9901
  %24 = icmp eq i32 %23, 0, !dbg !9901
  br i1 %24, label %66, label %25, !dbg !9904

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !9905
  %27 = load i32, i32* %26, align 4, !dbg !9905
  %28 = icmp eq i32 %27, 0, !dbg !9906
  br i1 %28, label %311, label %66, !dbg !9907

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !9908
  %31 = load i32, i32* %30, align 4, !dbg !9908
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !9912

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9913
  %34 = or i32 %33, 65536, !dbg !9913
  br label %45, !dbg !9913

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9915
  %37 = or i32 %36, 262144, !dbg !9915
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9915
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9915
  %39 = or i32 %38, 65536, !dbg !9915
  br label %45, !dbg !9915

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9918
  %42 = and i32 %41, -65537, !dbg !9918
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9918
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9918
  %44 = and i32 %43, -262145, !dbg !9918
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9920
  %47 = load i32, i32* %30, align 4, !dbg !9921
  %48 = icmp eq i32 %47, 0, !dbg !9923
  %49 = tail call i32 @HAL_GetTick() #24, !dbg !9924
  call void @llvm.dbg.value(metadata i32 %49, metadata !9870, metadata !DIExpression()), !dbg !9880
  call void @llvm.dbg.value(metadata i32 %49, metadata !9870, metadata !DIExpression()), !dbg !9880
  br i1 %48, label %58, label %50, !dbg !9925

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9926
  %52 = and i32 %51, 131072, !dbg !9928
  %53 = icmp eq i32 %52, 0, !dbg !9928
  br i1 %53, label %54, label %66, !dbg !9929

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #24, !dbg !9930
  %56 = sub i32 %55, %49, !dbg !9933
  %57 = icmp ugt i32 %56, 100, !dbg !9934
  br i1 %57, label %311, label %50, !dbg !9935, !llvm.loop !9936

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9938
  %60 = and i32 %59, 131072, !dbg !9938
  %61 = icmp eq i32 %60, 0, !dbg !9938
  br i1 %61, label %66, label %62, !dbg !9940

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #24, !dbg !9941
  %64 = sub i32 %63, %49, !dbg !9944
  %65 = icmp ugt i32 %64, 100, !dbg !9945
  br i1 %65, label %311, label %58, !dbg !9946, !llvm.loop !9947

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !9949
  %68 = and i32 %67, 2, !dbg !9951
  %69 = icmp eq i32 %68, 0, !dbg !9952
  br i1 %69, label %121, label %70, !dbg !9953

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9954
  %72 = and i32 %71, 12, !dbg !9954
  %73 = icmp eq i32 %72, 0, !dbg !9957
  br i1 %73, label %82, label %74, !dbg !9958

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9959
  %76 = and i32 %75, 12, !dbg !9959
  %77 = icmp eq i32 %76, 8, !dbg !9960
  br i1 %77, label %78, label %90, !dbg !9961

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9962
  %80 = and i32 %79, 4194304, !dbg !9963
  %81 = icmp eq i32 %80, 0, !dbg !9964
  br i1 %81, label %82, label %90, !dbg !9965

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9966
  %84 = and i32 %83, 2, !dbg !9966
  %85 = icmp eq i32 %84, 0, !dbg !9966
  br i1 %85, label %114, label %86, !dbg !9969

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !9970
  %88 = load i32, i32* %87, align 4, !dbg !9970
  %89 = icmp eq i32 %88, 1, !dbg !9971
  br i1 %89, label %114, label %311, !dbg !9972

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !9973
  %92 = load i32, i32* %91, align 4, !dbg !9973
  %93 = icmp eq i32 %92, 0, !dbg !9976
  br i1 %93, label %104, label %94, !dbg !9977

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !9978
  %95 = tail call i32 @HAL_GetTick() #24, !dbg !9980
  call void @llvm.dbg.value(metadata i32 %95, metadata !9870, metadata !DIExpression()), !dbg !9880
  br label %96, !dbg !9981

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9982
  %98 = and i32 %97, 2, !dbg !9983
  %99 = icmp eq i32 %98, 0, !dbg !9983
  br i1 %99, label %100, label %114, !dbg !9981

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #24, !dbg !9984
  %102 = sub i32 %101, %95, !dbg !9987
  %103 = icmp ugt i32 %102, 2, !dbg !9988
  br i1 %103, label %311, label %96, !dbg !9989, !llvm.loop !9990

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !9992
  %105 = tail call i32 @HAL_GetTick() #24, !dbg !9994
  call void @llvm.dbg.value(metadata i32 %105, metadata !9870, metadata !DIExpression()), !dbg !9880
  br label %106, !dbg !9995

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9996
  %108 = and i32 %107, 2, !dbg !9996
  %109 = icmp eq i32 %108, 0, !dbg !9996
  br i1 %109, label %121, label %110, !dbg !9995

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #24, !dbg !9997
  %112 = sub i32 %111, %105, !dbg !10000
  %113 = icmp ugt i32 %112, 2, !dbg !10001
  br i1 %113, label %311, label %106, !dbg !10002, !llvm.loop !10003

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10005
  %116 = and i32 %115, -249, !dbg !10005
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !10005
  %118 = load i32, i32* %117, align 4, !dbg !10005
  %119 = shl i32 %118, 3, !dbg !10005
  %120 = or i32 %119, %116, !dbg !10005
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10005
  br label %121, !dbg !10006

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !10006
  %123 = and i32 %122, 8, !dbg !10008
  %124 = icmp eq i32 %123, 0, !dbg !10009
  br i1 %124, label %149, label %125, !dbg !10010

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !10011
  %127 = load i32, i32* %126, align 4, !dbg !10011
  %128 = icmp eq i32 %127, 0, !dbg !10014
  br i1 %128, label %139, label %129, !dbg !10015

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !10016
  %130 = tail call i32 @HAL_GetTick() #24, !dbg !10018
  call void @llvm.dbg.value(metadata i32 %130, metadata !9870, metadata !DIExpression()), !dbg !9880
  br label %131, !dbg !10019

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10020
  %133 = and i32 %132, 2, !dbg !10021
  %134 = icmp eq i32 %133, 0, !dbg !10021
  br i1 %134, label %135, label %149, !dbg !10019

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #24, !dbg !10022
  %137 = sub i32 %136, %130, !dbg !10025
  %138 = icmp ugt i32 %137, 2, !dbg !10026
  br i1 %138, label %311, label %131, !dbg !10027, !llvm.loop !10028

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !10030
  %140 = tail call i32 @HAL_GetTick() #24, !dbg !10032
  call void @llvm.dbg.value(metadata i32 %140, metadata !9870, metadata !DIExpression()), !dbg !9880
  br label %141, !dbg !10033

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10034
  %143 = and i32 %142, 2, !dbg !10034
  %144 = icmp eq i32 %143, 0, !dbg !10034
  br i1 %144, label %149, label %145, !dbg !10033

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #24, !dbg !10035
  %147 = sub i32 %146, %140, !dbg !10038
  %148 = icmp ugt i32 %147, 2, !dbg !10039
  br i1 %148, label %311, label %141, !dbg !10040, !llvm.loop !10041

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !10043
  %151 = and i32 %150, 4, !dbg !10044
  %152 = icmp eq i32 %151, 0, !dbg !10045
  br i1 %152, label %221, label %153, !dbg !10046

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !9872, metadata !DIExpression()), !dbg !10047
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10048
  %155 = and i32 %154, 268435456, !dbg !10048
  %156 = icmp eq i32 %155, 0, !dbg !10048
  br i1 %156, label %157, label %164, !dbg !10049

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !10050
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !10050
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9876, metadata !DIExpression()), !dbg !10050
  store volatile i32 0, i32* %2, align 4, !dbg !10050
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10050
  %160 = or i32 %159, 268435456, !dbg !10050
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10050
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10050
  %162 = and i32 %161, 268435456, !dbg !10050
  store volatile i32 %162, i32* %2, align 4, !dbg !10050
  %163 = load volatile i32, i32* %2, align 4, !dbg !10050
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !10051
  call void @llvm.dbg.value(metadata i32 1, metadata !9872, metadata !DIExpression()), !dbg !10047
  br label %164, !dbg !10052

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !9872, metadata !DIExpression()), !dbg !10047
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10053
  %166 = and i32 %165, 256, !dbg !10053
  %167 = icmp eq i32 %166, 0, !dbg !10053
  br i1 %167, label %168, label %180, !dbg !10055

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10056
  %170 = or i32 %169, 256, !dbg !10056
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10056
  %171 = tail call i32 @HAL_GetTick() #24, !dbg !10058
  call void @llvm.dbg.value(metadata i32 %171, metadata !9870, metadata !DIExpression()), !dbg !9880
  br label %172, !dbg !10059

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10060
  %174 = and i32 %173, 256, !dbg !10060
  %175 = icmp eq i32 %174, 0, !dbg !10060
  br i1 %175, label %176, label %180, !dbg !10059

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #24, !dbg !10061
  %178 = sub i32 %177, %171, !dbg !10064
  %179 = icmp ugt i32 %178, 2, !dbg !10065
  br i1 %179, label %311, label %172, !dbg !10066, !llvm.loop !10067

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !10069
  %182 = load i32, i32* %181, align 4, !dbg !10069
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !10072

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10073
  %185 = or i32 %184, 1, !dbg !10073
  br label %196, !dbg !10073

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10075
  %188 = or i32 %187, 4, !dbg !10075
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10075
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10075
  %190 = or i32 %189, 1, !dbg !10075
  br label %196, !dbg !10075

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10078
  %193 = and i32 %192, -2, !dbg !10078
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10078
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10078
  %195 = and i32 %194, -5, !dbg !10078
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10080
  %198 = load i32, i32* %181, align 4, !dbg !10081
  %199 = icmp eq i32 %198, 0, !dbg !10083
  %200 = tail call i32 @HAL_GetTick() #24, !dbg !10084
  call void @llvm.dbg.value(metadata i32 %200, metadata !9870, metadata !DIExpression()), !dbg !9880
  call void @llvm.dbg.value(metadata i32 %200, metadata !9870, metadata !DIExpression()), !dbg !9880
  br i1 %199, label %209, label %201, !dbg !10085

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10086
  %203 = and i32 %202, 2, !dbg !10088
  %204 = icmp eq i32 %203, 0, !dbg !10088
  br i1 %204, label %205, label %217, !dbg !10089

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #24, !dbg !10090
  %207 = sub i32 %206, %200, !dbg !10093
  %208 = icmp ugt i32 %207, 5000, !dbg !10094
  br i1 %208, label %311, label %201, !dbg !10095, !llvm.loop !10096

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10098
  %211 = and i32 %210, 2, !dbg !10098
  %212 = icmp eq i32 %211, 0, !dbg !10098
  br i1 %212, label %217, label %213, !dbg !10100

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #24, !dbg !10101
  %215 = sub i32 %214, %200, !dbg !10104
  %216 = icmp ugt i32 %215, 5000, !dbg !10105
  br i1 %216, label %311, label %209, !dbg !10106, !llvm.loop !10107

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !10109

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10110
  %220 = and i32 %219, -268435457, !dbg !10110
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10110
  br label %221, !dbg !10113

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !10114
  %223 = load i32, i32* %222, align 4, !dbg !10114
  %224 = icmp eq i32 %223, 0, !dbg !10116
  br i1 %224, label %310, label %225, !dbg !10117

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10118
  %227 = and i32 %226, 12, !dbg !10118
  %228 = icmp eq i32 %227, 8, !dbg !10121
  br i1 %228, label %277, label %229, !dbg !10122

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !10123
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !10126
  %231 = tail call i32 @HAL_GetTick() #24, !dbg !10126
  call void @llvm.dbg.value(metadata i32 %231, metadata !9870, metadata !DIExpression()), !dbg !9880
  call void @llvm.dbg.value(metadata i32 %231, metadata !9870, metadata !DIExpression()), !dbg !9880
  br i1 %230, label %232, label %269, !dbg !10127

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10128
  %234 = and i32 %233, 33554432, !dbg !10128
  %235 = icmp eq i32 %234, 0, !dbg !10128
  br i1 %235, label %240, label %236, !dbg !10130

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #24, !dbg !10131
  %238 = sub i32 %237, %231, !dbg !10134
  %239 = icmp ugt i32 %238, 2, !dbg !10135
  br i1 %239, label %311, label %232, !dbg !10136, !llvm.loop !10137

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !10139
  %242 = load i32, i32* %241, align 4, !dbg !10139
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !10139
  %244 = load i32, i32* %243, align 4, !dbg !10139
  %245 = or i32 %244, %242, !dbg !10139
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !10139
  %247 = load i32, i32* %246, align 4, !dbg !10139
  %248 = shl i32 %247, 6, !dbg !10139
  %249 = or i32 %245, %248, !dbg !10139
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !10139
  %251 = load i32, i32* %250, align 4, !dbg !10139
  %252 = shl i32 %251, 15, !dbg !10139
  %253 = add i32 %252, -65536, !dbg !10139
  %254 = and i32 %253, -65536, !dbg !10139
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !10139
  %256 = load i32, i32* %255, align 4, !dbg !10139
  %257 = shl i32 %256, 24, !dbg !10139
  %258 = or i32 %249, %257, !dbg !10139
  %259 = or i32 %258, %254, !dbg !10139
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10139
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !10140
  %260 = tail call i32 @HAL_GetTick() #24, !dbg !10141
  call void @llvm.dbg.value(metadata i32 %260, metadata !9870, metadata !DIExpression()), !dbg !9880
  br label %261, !dbg !10142

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10143
  %263 = and i32 %262, 33554432, !dbg !10144
  %264 = icmp eq i32 %263, 0, !dbg !10144
  br i1 %264, label %265, label %310, !dbg !10142

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #24, !dbg !10145
  %267 = sub i32 %266, %260, !dbg !10148
  %268 = icmp ugt i32 %267, 2, !dbg !10149
  br i1 %268, label %311, label %261, !dbg !10150, !llvm.loop !10151

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10153
  %271 = and i32 %270, 33554432, !dbg !10153
  %272 = icmp eq i32 %271, 0, !dbg !10153
  br i1 %272, label %310, label %273, !dbg !10155

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #24, !dbg !10156
  %275 = sub i32 %274, %231, !dbg !10159
  %276 = icmp ugt i32 %275, 2, !dbg !10160
  br i1 %276, label %311, label %269, !dbg !10161, !llvm.loop !10162

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !10164
  br i1 %278, label %311, label %279, !dbg !10167

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10168
  call void @llvm.dbg.value(metadata i32 %280, metadata !9871, metadata !DIExpression()), !dbg !9880
  %281 = and i32 %280, 4194304, !dbg !10170
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !10172
  %283 = load i32, i32* %282, align 4, !dbg !10172
  %284 = icmp eq i32 %281, %283, !dbg !10173
  br i1 %284, label %285, label %311, !dbg !10174

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !10175
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !10176
  %288 = load i32, i32* %287, align 4, !dbg !10176
  %289 = icmp eq i32 %286, %288, !dbg !10177
  br i1 %289, label %290, label %311, !dbg !10178

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !10179
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !10180
  %293 = load i32, i32* %292, align 4, !dbg !10180
  %294 = shl i32 %293, 6, !dbg !10181
  %295 = icmp eq i32 %291, %294, !dbg !10182
  br i1 %295, label %296, label %311, !dbg !10183

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !10184
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !10185
  %299 = load i32, i32* %298, align 4, !dbg !10185
  %300 = shl i32 %299, 15, !dbg !10186
  %301 = add i32 %300, -65536, !dbg !10186
  %302 = and i32 %301, -65536, !dbg !10186
  %303 = icmp eq i32 %297, %302, !dbg !10187
  br i1 %303, label %304, label %311, !dbg !10188

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !10189
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !10190
  %307 = load i32, i32* %306, align 4, !dbg !10190
  %308 = shl i32 %307, 24, !dbg !10191
  %309 = icmp eq i32 %305, %308, !dbg !10192
  br i1 %309, label %310, label %311, !dbg !10193

310:                                              ; preds = %269, %261, %304, %221
  br label %311, !dbg !10194

311:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %277, %86, %25, %1, %310
  %312 = phi i32 [ 0, %310 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !9880
  ret i32 %312, !dbg !10195
}

; Function Attrs: optsize
declare !dbg !10196 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !10198 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !10211, metadata !DIExpression()), !dbg !10214
  call void @llvm.dbg.value(metadata i32 %1, metadata !10212, metadata !DIExpression()), !dbg !10214
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !10215
  br i1 %3, label %115, label %4, !dbg !10217

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10218
  %6 = and i32 %5, 7, !dbg !10218
  %7 = icmp ult i32 %6, %1, !dbg !10220
  br i1 %7, label %8, label %13, !dbg !10221

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !10222
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !10222
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10224
  %11 = and i32 %10, 7, !dbg !10224
  %12 = icmp eq i32 %11, %1, !dbg !10226
  br i1 %12, label %13, label %115, !dbg !10227

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !10228
  %15 = load i32, i32* %14, align 4, !dbg !10228
  %16 = and i32 %15, 2, !dbg !10230
  %17 = icmp eq i32 %16, 0, !dbg !10231
  br i1 %17, label %39, label %18, !dbg !10232

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !10233
  %20 = icmp eq i32 %19, 0, !dbg !10236
  br i1 %20, label %25, label %21, !dbg !10237

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10238
  %23 = or i32 %22, 7168, !dbg !10238
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10238
  %24 = load i32, i32* %14, align 4, !dbg !10240
  br label %25, !dbg !10242

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !10240
  %27 = and i32 %26, 8, !dbg !10243
  %28 = icmp eq i32 %27, 0, !dbg !10244
  br i1 %28, label %32, label %29, !dbg !10245

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10246
  %31 = or i32 %30, 57344, !dbg !10246
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10246
  br label %32, !dbg !10248

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10249
  %34 = and i32 %33, -241, !dbg !10249
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !10249
  %36 = load i32, i32* %35, align 4, !dbg !10249
  %37 = or i32 %34, %36, !dbg !10249
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10249
  %38 = load i32, i32* %14, align 4, !dbg !10250
  br label %39, !dbg !10252

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !10250
  %41 = and i32 %40, 1, !dbg !10253
  %42 = icmp eq i32 %41, 0, !dbg !10254
  br i1 %42, label %73, label %43, !dbg !10255

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !10256
  %45 = load i32, i32* %44, align 4, !dbg !10256
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !10259

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10260
  %48 = and i32 %47, 131072, !dbg !10263
  %49 = icmp eq i32 %48, 0, !dbg !10263
  br i1 %49, label %115, label %58, !dbg !10264

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10265
  %52 = and i32 %51, 33554432, !dbg !10269
  %53 = icmp eq i32 %52, 0, !dbg !10269
  br i1 %53, label %115, label %58, !dbg !10270

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10271
  %56 = and i32 %55, 2, !dbg !10274
  %57 = icmp eq i32 %56, 0, !dbg !10274
  br i1 %57, label %115, label %58, !dbg !10275

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10276
  %60 = and i32 %59, -4, !dbg !10276
  %61 = or i32 %60, %45, !dbg !10276
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10276
  %62 = tail call i32 @HAL_GetTick() #24, !dbg !10277
  call void @llvm.dbg.value(metadata i32 %62, metadata !10213, metadata !DIExpression()), !dbg !10214
  br label %63, !dbg !10278

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10279
  %65 = and i32 %64, 12, !dbg !10279
  %66 = load i32, i32* %44, align 4, !dbg !10280
  %67 = shl i32 %66, 2, !dbg !10281
  %68 = icmp eq i32 %65, %67, !dbg !10282
  br i1 %68, label %73, label %69, !dbg !10278

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #24, !dbg !10283
  %71 = sub i32 %70, %62, !dbg !10286
  %72 = icmp ugt i32 %71, 5000, !dbg !10287
  br i1 %72, label %115, label %63, !dbg !10288, !llvm.loop !10289

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10291
  %75 = and i32 %74, 7, !dbg !10291
  %76 = icmp ugt i32 %75, %1, !dbg !10293
  br i1 %76, label %77, label %82, !dbg !10294

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !10295
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !10295
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10297
  %80 = and i32 %79, 7, !dbg !10297
  %81 = icmp eq i32 %80, %1, !dbg !10299
  br i1 %81, label %82, label %115, !dbg !10300

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !10301
  %84 = and i32 %83, 4, !dbg !10303
  %85 = icmp eq i32 %84, 0, !dbg !10304
  br i1 %85, label %93, label %86, !dbg !10305

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10306
  %88 = and i32 %87, -7169, !dbg !10306
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !10306
  %90 = load i32, i32* %89, align 4, !dbg !10306
  %91 = or i32 %88, %90, !dbg !10306
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10306
  %92 = load i32, i32* %14, align 4, !dbg !10308
  br label %93, !dbg !10310

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !10308
  %95 = and i32 %94, 8, !dbg !10311
  %96 = icmp eq i32 %95, 0, !dbg !10312
  br i1 %96, label %104, label %97, !dbg !10313

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10314
  %99 = and i32 %98, -57345, !dbg !10314
  %100 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !10314
  %101 = load i32, i32* %100, align 4, !dbg !10314
  %102 = shl i32 %101, 3, !dbg !10314
  %103 = or i32 %102, %99, !dbg !10314
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10314
  br label %104, !dbg !10316

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !10317
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10318
  %107 = lshr i32 %106, 4, !dbg !10319
  %108 = and i32 %107, 15, !dbg !10319
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !10320
  %110 = load i8, i8* %109, align 1, !dbg !10320
  %111 = zext i8 %110 to i32, !dbg !10320
  %112 = lshr i32 %105, %111, !dbg !10321
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !10322
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !10323
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #24, !dbg !10324
  br label %115, !dbg !10325

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !10214
  ret i32 %116, !dbg !10326
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !10327 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10329, metadata !DIExpression()), !dbg !10333
  call void @llvm.dbg.value(metadata i32 0, metadata !10330, metadata !DIExpression()), !dbg !10333
  call void @llvm.dbg.value(metadata i32 0, metadata !10331, metadata !DIExpression()), !dbg !10333
  call void @llvm.dbg.value(metadata i32 0, metadata !10332, metadata !DIExpression()), !dbg !10333
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10334
  %2 = and i32 %1, 12, !dbg !10335
  switch i32 %2, label %24 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !10336

3:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 12000000, metadata !10332, metadata !DIExpression()), !dbg !10333
  br label %24, !dbg !10337

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10340
  %6 = and i32 %5, 63, !dbg !10342
  call void @llvm.dbg.value(metadata i32 %6, metadata !10329, metadata !DIExpression()), !dbg !10333
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10343
  %8 = and i32 %7, 4194304, !dbg !10343
  %9 = icmp eq i32 %8, 0, !dbg !10345
  %10 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10346
  %11 = lshr i32 %10, 6, !dbg !10346
  %12 = and i32 %11, 511, !dbg !10346
  %13 = zext i32 %12 to i64, !dbg !10346
  %14 = select i1 %9, i64 16000000, i64 12000000
  %15 = mul nuw nsw i64 %14, %13, !dbg !10346
  %16 = zext i32 %6 to i64, !dbg !10346
  %17 = udiv i64 %15, %16, !dbg !10346
  %18 = trunc i64 %17 to i32, !dbg !10346
  call void @llvm.dbg.value(metadata i32 %18, metadata !10330, metadata !DIExpression()), !dbg !10333
  %19 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10347
  %20 = lshr i32 %19, 15, !dbg !10348
  %21 = and i32 %20, 6, !dbg !10348
  %22 = add nuw nsw i32 %21, 2, !dbg !10348
  call void @llvm.dbg.value(metadata i32 %22, metadata !10331, metadata !DIExpression()), !dbg !10333
  %23 = udiv i32 %18, %22, !dbg !10349
  call void @llvm.dbg.value(metadata i32 %23, metadata !10332, metadata !DIExpression()), !dbg !10333
  br label %24, !dbg !10350

24:                                               ; preds = %0, %4, %3
  %25 = phi i32 [ %23, %4 ], [ 12000000, %3 ], [ 16000000, %0 ], !dbg !10351
  call void @llvm.dbg.value(metadata i32 %25, metadata !10332, metadata !DIExpression()), !dbg !10333
  ret i32 %25, !dbg !10352
}

; Function Attrs: optsize
declare !dbg !10353 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10356 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !10360, metadata !DIExpression()), !dbg !10380
  call void @llvm.dbg.value(metadata i32 %1, metadata !10361, metadata !DIExpression()), !dbg !10380
  call void @llvm.dbg.value(metadata i32 %2, metadata !10362, metadata !DIExpression()), !dbg !10380
  %7 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !10381
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #23, !dbg !10381
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !10363, metadata !DIExpression()), !dbg !10382
  %8 = icmp eq i32 %0, 0, !dbg !10383
  br i1 %8, label %9, label %23, !dbg !10384

9:                                                ; preds = %3
  %10 = bitcast i32* %5 to i8*, !dbg !10385
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10), !dbg !10385
  call void @llvm.dbg.declare(metadata i32* %5, metadata !10373, metadata !DIExpression()), !dbg !10385
  store volatile i32 0, i32* %5, align 4, !dbg !10385
  %11 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !10385
  %12 = or i32 %11, 1, !dbg !10385
  store volatile i32 %12, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !10385
  %13 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !10385
  %14 = and i32 %13, 1, !dbg !10385
  store volatile i32 %14, i32* %5, align 4, !dbg !10385
  %15 = load volatile i32, i32* %5, align 4, !dbg !10385
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !10386
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !10387
  store i32 256, i32* %16, align 4, !dbg !10388
  %17 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !10389
  store i32 2, i32* %17, align 4, !dbg !10390
  %18 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !10391
  store i32 3, i32* %18, align 4, !dbg !10392
  %19 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !10393
  store i32 0, i32* %19, align 4, !dbg !10394
  %20 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !10395
  store i32 0, i32* %20, align 4, !dbg !10396
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #24, !dbg !10397
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10398
  %22 = and i32 %21, -123731969, !dbg !10398
  br label %38, !dbg !10399

23:                                               ; preds = %3
  %24 = bitcast i32* %6 to i8*, !dbg !10400
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24), !dbg !10400
  call void @llvm.dbg.declare(metadata i32* %6, metadata !10377, metadata !DIExpression()), !dbg !10400
  store volatile i32 0, i32* %6, align 4, !dbg !10400
  %25 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !10400
  %26 = or i32 %25, 4, !dbg !10400
  store volatile i32 %26, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !10400
  %27 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !10400
  %28 = and i32 %27, 4, !dbg !10400
  store volatile i32 %28, i32* %6, align 4, !dbg !10400
  %29 = load volatile i32, i32* %6, align 4, !dbg !10400
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24), !dbg !10401
  %30 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !10402
  store i32 512, i32* %30, align 4, !dbg !10403
  %31 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !10404
  store i32 2, i32* %31, align 4, !dbg !10405
  %32 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !10406
  store i32 3, i32* %32, align 4, !dbg !10407
  %33 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !10408
  store i32 0, i32* %33, align 4, !dbg !10409
  %34 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !10410
  store i32 0, i32* %34, align 4, !dbg !10411
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073874944 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #24, !dbg !10412
  %35 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10413
  %36 = and i32 %35, 134217727, !dbg !10413
  %37 = shl i32 %2, 3, !dbg !10413
  br label %38

38:                                               ; preds = %23, %9
  %39 = phi i32 [ %37, %23 ], [ %2, %9 ]
  %40 = phi i32 [ %36, %23 ], [ %22, %9 ]
  %41 = or i32 %39, %1, !dbg !10414
  %42 = or i32 %41, %40, !dbg !10414
  store volatile i32 %42, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10414
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #23, !dbg !10415
  ret void, !dbg !10415
}

; Function Attrs: optsize
declare !dbg !10416 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #13 !dbg !10420 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !10421
  ret void, !dbg !10422
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #13 !dbg !10423 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !10424
  ret void, !dbg !10425
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #4 !dbg !10426 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !10427
  ret i32 %1, !dbg !10428
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #14 !dbg !10429 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #25, !dbg !10430
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10431
  %3 = lshr i32 %2, 10, !dbg !10432
  %4 = and i32 %3, 7, !dbg !10432
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !10433
  %6 = load i8, i8* %5, align 1, !dbg !10433
  %7 = zext i8 %6 to i32, !dbg !10433
  %8 = lshr i32 %1, %7, !dbg !10434
  ret i32 %8, !dbg !10435
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #14 !dbg !10436 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #25, !dbg !10437
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10438
  %3 = lshr i32 %2, 13, !dbg !10439
  %4 = and i32 %3, 7, !dbg !10439
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !10440
  %6 = load i8, i8* %5, align 1, !dbg !10440
  %7 = zext i8 %6 to i32, !dbg !10440
  %8 = lshr i32 %1, %7, !dbg !10441
  ret i32 %8, !dbg !10442
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !10443 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !10447, metadata !DIExpression()), !dbg !10448
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !10449
  store i32 15, i32* %2, align 4, !dbg !10450
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10451
  %4 = and i32 %3, 262144, !dbg !10453
  %5 = icmp eq i32 %4, 0, !dbg !10454
  br i1 %5, label %8, label %6, !dbg !10455

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10456
  store i32 327680, i32* %7, align 4, !dbg !10458
  br label %15, !dbg !10459

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10460
  %10 = and i32 %9, 65536, !dbg !10462
  %11 = icmp eq i32 %10, 0, !dbg !10463
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10464
  br i1 %11, label %14, label %13, !dbg !10465

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !10466
  br label %15, !dbg !10468

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !10469
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10471
  %17 = and i32 %16, 1, !dbg !10473
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !10474
  store i32 %17, i32* %18, align 4, !dbg !10476
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10477
  %20 = lshr i32 %19, 3, !dbg !10478
  %21 = and i32 %20, 31, !dbg !10478
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !10479
  store i32 %21, i32* %22, align 4, !dbg !10480
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10481
  %24 = and i32 %23, 4, !dbg !10483
  %25 = icmp eq i32 %24, 0, !dbg !10484
  br i1 %25, label %28, label %26, !dbg !10485

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !10486
  store i32 5, i32* %27, align 4, !dbg !10488
  br label %35, !dbg !10489

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10490
  %30 = and i32 %29, 1, !dbg !10492
  %31 = icmp eq i32 %30, 0, !dbg !10493
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !10494
  br i1 %31, label %34, label %33, !dbg !10495

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !10496
  br label %35, !dbg !10498

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !10499
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10501
  %37 = and i32 %36, 1, !dbg !10503
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !10504
  store i32 %37, i32* %38, align 4, !dbg !10506
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10507
  %40 = and i32 %39, 16777216, !dbg !10509
  %41 = icmp eq i32 %40, 0, !dbg !10510
  %42 = select i1 %41, i32 1, i32 2, !dbg !10511
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !10512
  store i32 %42, i32* %43, align 4, !dbg !10514
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10515
  %45 = and i32 %44, 4194304, !dbg !10516
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !10517
  store i32 %45, i32* %46, align 4, !dbg !10518
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10519
  %48 = and i32 %47, 63, !dbg !10520
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !10521
  store i32 %48, i32* %49, align 4, !dbg !10522
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10523
  %51 = lshr i32 %50, 6, !dbg !10524
  %52 = and i32 %51, 511, !dbg !10524
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !10525
  store i32 %52, i32* %53, align 4, !dbg !10526
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10527
  %55 = shl i32 %54, 1, !dbg !10528
  %56 = and i32 %55, 393216, !dbg !10528
  %57 = add nuw nsw i32 %56, 131072, !dbg !10528
  %58 = lshr exact i32 %57, 16, !dbg !10529
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !10530
  store i32 %58, i32* %59, align 4, !dbg !10531
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10532
  %61 = lshr i32 %60, 24, !dbg !10533
  %62 = and i32 %61, 15, !dbg !10533
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !10534
  store i32 %62, i32* %63, align 4, !dbg !10535
  ret void, !dbg !10536
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #14 !dbg !10537 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !10541, metadata !DIExpression()), !dbg !10543
  call void @llvm.dbg.value(metadata i32* %1, metadata !10542, metadata !DIExpression()), !dbg !10543
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !10544
  store i32 15, i32* %3, align 4, !dbg !10545
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10546
  %5 = and i32 %4, 3, !dbg !10547
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !10548
  store i32 %5, i32* %6, align 4, !dbg !10549
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10550
  %8 = and i32 %7, 240, !dbg !10551
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !10552
  store i32 %8, i32* %9, align 4, !dbg !10553
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10554
  %11 = and i32 %10, 7168, !dbg !10555
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !10556
  store i32 %11, i32* %12, align 4, !dbg !10557
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10558
  %14 = lshr i32 %13, 3, !dbg !10559
  %15 = and i32 %14, 7168, !dbg !10559
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !10560
  store i32 %15, i32* %16, align 4, !dbg !10561
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10562
  %18 = and i32 %17, 7, !dbg !10563
  store i32 %18, i32* %1, align 4, !dbg !10564
  ret void, !dbg !10565
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !10566 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !10567
  %2 = and i32 %1, 128, !dbg !10567
  %3 = icmp eq i32 %2, 0, !dbg !10567
  br i1 %3, label %5, label %4, !dbg !10569

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #25, !dbg !10570
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !10572
  br label %5, !dbg !10573

5:                                                ; preds = %4, %0
  ret void, !dbg !10574
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !10575 {
  ret void, !dbg !10576
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #13 !dbg !10577 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10580, metadata !DIExpression()), !dbg !10581
  tail call fastcc void @LL_InitTick(i32 noundef %0) #25, !dbg !10582
  ret void, !dbg !10583
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #13 !dbg !10584 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10587, metadata !DIExpression()), !dbg !10589
  call void @llvm.dbg.value(metadata i32 1000, metadata !10588, metadata !DIExpression()), !dbg !10589
  %2 = udiv i32 %0, 1000, !dbg !10590
  %3 = add nsw i32 %2, -1, !dbg !10591
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10592
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10593
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10594
  ret void, !dbg !10595
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #15 !dbg !10596 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !10598, metadata !DIExpression()), !dbg !10600
  %3 = bitcast i32* %2 to i8*, !dbg !10601
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10601
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10599, metadata !DIExpression()), !dbg !10602
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10603
  store volatile i32 %4, i32* %2, align 4, !dbg !10602
  %5 = load volatile i32, i32* %2, align 4, !dbg !10604
  %6 = icmp eq i32 %0, -1, !dbg !10605
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !10598, metadata !DIExpression()), !dbg !10600
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !10600
  call void @llvm.dbg.value(metadata i32 %8, metadata !10598, metadata !DIExpression()), !dbg !10600
  br label %9, !dbg !10607

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !10598, metadata !DIExpression()), !dbg !10600
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10608
  call void @llvm.dbg.value(metadata i32 undef, metadata !10598, metadata !DIExpression()), !dbg !10600
  %12 = shl i32 %11, 15, !dbg !10600
  %13 = ashr i32 %12, 31, !dbg !10600
  %14 = add i32 %13, %10, !dbg !10600
  call void @llvm.dbg.value(metadata i32 %14, metadata !10598, metadata !DIExpression()), !dbg !10600
  %15 = icmp eq i32 %14, 0, !dbg !10607
  br i1 %15, label %16, label %9, !dbg !10607

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10611
  ret void, !dbg !10611
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #5 !dbg !10612 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10614, metadata !DIExpression()), !dbg !10615
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !10616
  ret void, !dbg !10617
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #13 !dbg !10618 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10623, metadata !DIExpression()), !dbg !10628
  call void @llvm.dbg.value(metadata i32 0, metadata !10626, metadata !DIExpression()), !dbg !10628
  call void @llvm.dbg.value(metadata i32 0, metadata !10627, metadata !DIExpression()), !dbg !10628
  %2 = icmp eq i32 %0, 0, !dbg !10629
  br i1 %2, label %52, label %3, !dbg !10631

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #25, !dbg !10632
  %5 = icmp eq i32 %4, 16384, !dbg !10635
  br i1 %5, label %6, label %21, !dbg !10636

6:                                                ; preds = %3
  %7 = icmp ult i32 %0, 150000001, !dbg !10637
  %8 = select i1 %7, i32 0, i32 5, !dbg !10640
  call void @llvm.dbg.value(metadata i32 %8, metadata !10626, metadata !DIExpression()), !dbg !10628
  %9 = add i32 %0, -120000001, !dbg !10641
  %10 = icmp ult i32 %9, 30000000, !dbg !10641
  %11 = select i1 %10, i32 4, i32 %8, !dbg !10641
  call void @llvm.dbg.value(metadata i32 %11, metadata !10626, metadata !DIExpression()), !dbg !10628
  %12 = icmp ult i32 %9, -30000000, !dbg !10643
  %13 = select i1 %12, i32 %11, i32 3, !dbg !10643
  call void @llvm.dbg.value(metadata i32 %13, metadata !10626, metadata !DIExpression()), !dbg !10628
  %14 = icmp ugt i32 %0, 60000000, !dbg !10645
  %15 = icmp eq i32 %13, 0
  %16 = and i1 %14, %15, !dbg !10647
  br i1 %16, label %21, label %17, !dbg !10647

17:                                               ; preds = %6
  %18 = icmp ugt i32 %0, 30000000, !dbg !10648
  %19 = and i1 %18, %15, !dbg !10651
  %20 = select i1 %19, i32 1, i32 %13, !dbg !10651
  br label %21, !dbg !10651

21:                                               ; preds = %17, %6, %3
  %22 = phi i32 [ 0, %3 ], [ 2, %6 ], [ %20, %17 ], !dbg !10628
  call void @llvm.dbg.value(metadata i32 %22, metadata !10626, metadata !DIExpression()), !dbg !10628
  %23 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #25, !dbg !10652
  %24 = icmp eq i32 %23, 0, !dbg !10654
  br i1 %24, label %25, label %41, !dbg !10655

25:                                               ; preds = %21
  %26 = icmp ugt i32 %0, 12000000, !dbg !10656
  %27 = icmp eq i32 %22, 0
  %28 = and i1 %26, %27, !dbg !10659
  %29 = select i1 %28, i32 4, i32 %22, !dbg !10659
  call void @llvm.dbg.value(metadata i32 %29, metadata !10626, metadata !DIExpression()), !dbg !10628
  %30 = icmp ugt i32 %0, 90000000, !dbg !10660
  %31 = icmp eq i32 %29, 0
  %32 = and i1 %30, %31, !dbg !10662
  %33 = select i1 %32, i32 3, i32 %29, !dbg !10662
  call void @llvm.dbg.value(metadata i32 %33, metadata !10626, metadata !DIExpression()), !dbg !10628
  %34 = icmp ugt i32 %0, 60000000, !dbg !10663
  %35 = icmp eq i32 %33, 0
  %36 = and i1 %34, %35, !dbg !10665
  br i1 %36, label %41, label %37, !dbg !10665

37:                                               ; preds = %25
  %38 = icmp ugt i32 %0, 30000000, !dbg !10666
  %39 = and i1 %38, %35, !dbg !10669
  %40 = select i1 %39, i32 1, i32 %33, !dbg !10669
  br label %41, !dbg !10669

41:                                               ; preds = %37, %25, %21
  %42 = phi i32 [ %22, %21 ], [ 2, %25 ], [ %40, %37 ], !dbg !10670
  call void @llvm.dbg.value(metadata i32 %42, metadata !10626, metadata !DIExpression()), !dbg !10628
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %42) #25, !dbg !10671
  call void @llvm.dbg.value(metadata i32 2, metadata !10624, metadata !DIExpression()), !dbg !10628
  br label %43, !dbg !10672

43:                                               ; preds = %43, %41
  %44 = phi i32 [ 2, %41 ], [ %46, %43 ], !dbg !10670
  call void @llvm.dbg.value(metadata i32 %44, metadata !10624, metadata !DIExpression()), !dbg !10628
  %45 = tail call fastcc i32 @LL_FLASH_GetLatency() #25, !dbg !10673
  call void @llvm.dbg.value(metadata i32 %45, metadata !10625, metadata !DIExpression()), !dbg !10628
  %46 = add nsw i32 %44, -1, !dbg !10675
  call void @llvm.dbg.value(metadata i32 %46, metadata !10624, metadata !DIExpression()), !dbg !10628
  %47 = icmp ne i32 %45, %42, !dbg !10676
  %48 = icmp ne i32 %46, 0, !dbg !10677
  %49 = select i1 %47, i1 %48, i1 false, !dbg !10677
  br i1 %49, label %43, label %50, !dbg !10678, !llvm.loop !10679

50:                                               ; preds = %43
  %51 = zext i1 %47 to i32
  br label %52

52:                                               ; preds = %50, %1
  %53 = phi i32 [ 1, %1 ], [ %51, %50 ], !dbg !10681
  call void @llvm.dbg.value(metadata i32 %53, metadata !10627, metadata !DIExpression()), !dbg !10628
  ret i32 %53, !dbg !10682
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #14 !dbg !10683 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10685
  %2 = and i32 %1, 16384, !dbg !10685
  ret i32 %2, !dbg !10686
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #13 !dbg !10687 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10689, metadata !DIExpression()), !dbg !10690
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10691
  %3 = and i32 %2, -8, !dbg !10691
  %4 = or i32 %3, %0, !dbg !10691
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10691
  ret void, !dbg !10692
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #14 !dbg !10693 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10694
  %2 = and i32 %1, 7, !dbg !10694
  ret i32 %2, !dbg !10695
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !10696 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !10714, metadata !DIExpression()), !dbg !10718
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !10715, metadata !DIExpression()), !dbg !10718
  call void @llvm.dbg.value(metadata i32 0, metadata !10716, metadata !DIExpression()), !dbg !10718
  call void @llvm.dbg.value(metadata i32 0, metadata !10717, metadata !DIExpression()), !dbg !10718
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #25, !dbg !10719
  %4 = icmp eq i32 %3, 0, !dbg !10721
  br i1 %4, label %5, label %21, !dbg !10722

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #25, !dbg !10723
  call void @llvm.dbg.value(metadata i32 %6, metadata !10717, metadata !DIExpression()), !dbg !10718
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.82() #25, !dbg !10725
  %8 = icmp eq i32 %7, 1, !dbg !10727
  br i1 %8, label %13, label %9, !dbg !10728

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.83() #25, !dbg !10729
  br label %10, !dbg !10731

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.82() #25, !dbg !10732
  %12 = icmp eq i32 %11, 1, !dbg !10733
  br i1 %12, label %13, label %10, !dbg !10731, !llvm.loop !10734

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !10736
  %15 = load i32, i32* %14, align 4, !dbg !10736
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !10737
  %17 = load i32, i32* %16, align 4, !dbg !10737
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !10738
  %19 = load i32, i32* %18, align 4, !dbg !10738
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.84(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #25, !dbg !10739
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #25, !dbg !10740
  call void @llvm.dbg.value(metadata i32 %20, metadata !10716, metadata !DIExpression()), !dbg !10718
  br label %21, !dbg !10741

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !10742
  call void @llvm.dbg.value(metadata i32 %22, metadata !10716, metadata !DIExpression()), !dbg !10718
  ret i32 %22, !dbg !10743
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #14 !dbg !10744 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10748, metadata !DIExpression()), !dbg !10749
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.86() #25, !dbg !10750
  %2 = icmp ne i32 %1, 0, !dbg !10752
  call void @llvm.dbg.value(metadata i1 %2, metadata !10748, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10749
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #25, !dbg !10753
  %4 = icmp ne i32 %3, 0, !dbg !10755
  %5 = select i1 %4, i1 true, i1 %2, !dbg !10756
  %6 = zext i1 %5 to i32, !dbg !10756
  call void @llvm.dbg.value(metadata i32 %6, metadata !10748, metadata !DIExpression()), !dbg !10749
  ret i32 %6, !dbg !10757
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #4 !dbg !10758 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10762, metadata !DIExpression()), !dbg !10765
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !10763, metadata !DIExpression()), !dbg !10765
  call void @llvm.dbg.value(metadata i32 0, metadata !10764, metadata !DIExpression()), !dbg !10765
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !10766
  %4 = load i32, i32* %3, align 4, !dbg !10766
  %5 = and i32 %4, 63, !dbg !10767
  %6 = udiv i32 %0, %5, !dbg !10768
  call void @llvm.dbg.value(metadata i32 %6, metadata !10764, metadata !DIExpression()), !dbg !10765
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !10769
  %8 = load i32, i32* %7, align 4, !dbg !10769
  %9 = and i32 %8, 511, !dbg !10770
  %10 = mul i32 %9, %6, !dbg !10771
  call void @llvm.dbg.value(metadata i32 %10, metadata !10764, metadata !DIExpression()), !dbg !10765
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !10772
  %12 = load i32, i32* %11, align 4, !dbg !10772
  %13 = lshr i32 %12, 15, !dbg !10773
  %14 = and i32 %13, 131070, !dbg !10773
  %15 = add nuw nsw i32 %14, 2, !dbg !10773
  %16 = udiv i32 %10, %15, !dbg !10774
  call void @llvm.dbg.value(metadata i32 %16, metadata !10764, metadata !DIExpression()), !dbg !10765
  ret i32 %16, !dbg !10775
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.82() unnamed_addr #14 !dbg !10776 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10777
  %2 = lshr i32 %1, 1, !dbg !10778
  %3 = and i32 %2, 1, !dbg !10778
  ret i32 %3, !dbg !10779
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.83() unnamed_addr #13 !dbg !10780 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10781
  %2 = or i32 %1, 1, !dbg !10781
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10781
  ret void, !dbg !10782
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.84(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #13 !dbg !10783 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10785, metadata !DIExpression()), !dbg !10789
  call void @llvm.dbg.value(metadata i32 %1, metadata !10786, metadata !DIExpression()), !dbg !10789
  call void @llvm.dbg.value(metadata i32 %2, metadata !10787, metadata !DIExpression()), !dbg !10789
  call void @llvm.dbg.value(metadata i32 %3, metadata !10788, metadata !DIExpression()), !dbg !10789
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10790
  %6 = and i32 %5, -4227072, !dbg !10790
  %7 = or i32 %1, %0, !dbg !10790
  %8 = shl i32 %2, 6, !dbg !10790
  %9 = or i32 %7, %8, !dbg !10790
  %10 = or i32 %9, %6, !dbg !10790
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10790
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10791
  %12 = and i32 %11, -196609, !dbg !10791
  %13 = or i32 %12, %3, !dbg !10791
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10791
  ret void, !dbg !10792
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #13 !dbg !10793 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10797, metadata !DIExpression()), !dbg !10801
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !10798, metadata !DIExpression()), !dbg !10801
  call void @llvm.dbg.value(metadata i32 0, metadata !10799, metadata !DIExpression()), !dbg !10801
  call void @llvm.dbg.value(metadata i32 0, metadata !10800, metadata !DIExpression()), !dbg !10801
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !10802
  %4 = load i32, i32* %3, align 4, !dbg !10802
  %5 = lshr i32 %4, 4, !dbg !10802
  %6 = and i32 %5, 15, !dbg !10802
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !10802
  %8 = load i8, i8* %7, align 1, !dbg !10802
  %9 = zext i8 %8 to i32, !dbg !10802
  %10 = lshr i32 %0, %9, !dbg !10802
  call void @llvm.dbg.value(metadata i32 %10, metadata !10800, metadata !DIExpression()), !dbg !10801
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !10803
  %12 = icmp ult i32 %11, %10, !dbg !10805
  br i1 %12, label %13, label %16, !dbg !10806

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #25, !dbg !10807
  call void @llvm.dbg.value(metadata i32 %14, metadata !10799, metadata !DIExpression()), !dbg !10801
  %15 = icmp eq i32 %14, 0, !dbg !10809
  br i1 %15, label %16, label %30, !dbg !10811

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.85() #25, !dbg !10812
  br label %17, !dbg !10814

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.86() #25, !dbg !10815
  %19 = icmp eq i32 %18, 1, !dbg !10816
  br i1 %19, label %20, label %17, !dbg !10814, !llvm.loop !10817

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !10819
  tail call fastcc void @LL_RCC_SetAHBPrescaler.87(i32 noundef %21) #25, !dbg !10820
  tail call fastcc void @LL_RCC_SetSysClkSource.88() #25, !dbg !10821
  br label %22, !dbg !10822

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.89() #25, !dbg !10823
  %24 = icmp eq i32 %23, 8, !dbg !10824
  br i1 %24, label %25, label %22, !dbg !10822, !llvm.loop !10825

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !10827
  %27 = load i32, i32* %26, align 4, !dbg !10827
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.90(i32 noundef %27) #25, !dbg !10828
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !10829
  %29 = load i32, i32* %28, align 4, !dbg !10829
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.91(i32 noundef %29) #25, !dbg !10830
  br label %30, !dbg !10831

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !10832
  %33 = icmp ugt i32 %32, %10, !dbg !10834
  br i1 %33, label %34, label %36, !dbg !10835

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #25, !dbg !10836
  call void @llvm.dbg.value(metadata i32 %35, metadata !10799, metadata !DIExpression()), !dbg !10801
  br label %36, !dbg !10838

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !10801
  call void @llvm.dbg.value(metadata i32 %37, metadata !10799, metadata !DIExpression()), !dbg !10801
  %38 = icmp eq i32 %37, 0, !dbg !10839
  br i1 %38, label %39, label %40, !dbg !10841

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #25, !dbg !10842
  br label %40, !dbg !10844

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !10845
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.85() unnamed_addr #13 !dbg !10846 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10847
  %2 = or i32 %1, 16777216, !dbg !10847
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10847
  ret void, !dbg !10848
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.86() unnamed_addr #14 !dbg !10849 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10850
  %2 = lshr i32 %1, 25, !dbg !10851
  %3 = and i32 %2, 1, !dbg !10851
  ret i32 %3, !dbg !10852
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.87(i32 noundef %0) unnamed_addr #13 !dbg !10853 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10855, metadata !DIExpression()), !dbg !10856
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10857
  %3 = and i32 %2, -241, !dbg !10857
  %4 = or i32 %3, %0, !dbg !10857
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10857
  ret void, !dbg !10858
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.88() unnamed_addr #13 !dbg !10859 {
  call void @llvm.dbg.value(metadata i32 2, metadata !10861, metadata !DIExpression()), !dbg !10862
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10863
  %2 = and i32 %1, -4, !dbg !10863
  %3 = or i32 %2, 2, !dbg !10863
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10863
  ret void, !dbg !10864
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.89() unnamed_addr #14 !dbg !10865 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10866
  %2 = and i32 %1, 12, !dbg !10866
  ret i32 %2, !dbg !10867
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.90(i32 noundef %0) unnamed_addr #13 !dbg !10868 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10870, metadata !DIExpression()), !dbg !10871
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10872
  %3 = and i32 %2, -7169, !dbg !10872
  %4 = or i32 %3, %0, !dbg !10872
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10872
  ret void, !dbg !10873
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.91(i32 noundef %0) unnamed_addr #13 !dbg !10874 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10876, metadata !DIExpression()), !dbg !10877
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10878
  %3 = and i32 %2, -57345, !dbg !10878
  %4 = or i32 %3, %0, !dbg !10878
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10878
  ret void, !dbg !10879
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #14 !dbg !10880 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10881
  %2 = lshr i32 %1, 27, !dbg !10882
  %3 = and i32 %2, 1, !dbg !10882
  ret i32 %3, !dbg !10883
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #13 !dbg !10884 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10888, metadata !DIExpression()), !dbg !10894
  call void @llvm.dbg.value(metadata i32 %1, metadata !10889, metadata !DIExpression()), !dbg !10894
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !10890, metadata !DIExpression()), !dbg !10894
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !10891, metadata !DIExpression()), !dbg !10894
  call void @llvm.dbg.value(metadata i32 0, metadata !10892, metadata !DIExpression()), !dbg !10894
  call void @llvm.dbg.value(metadata i32 0, metadata !10893, metadata !DIExpression()), !dbg !10894
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #25, !dbg !10895
  %6 = icmp eq i32 %5, 0, !dbg !10897
  br i1 %6, label %7, label %27, !dbg !10898

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #25, !dbg !10899
  call void @llvm.dbg.value(metadata i32 %8, metadata !10893, metadata !DIExpression()), !dbg !10894
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.92() #25, !dbg !10901
  %10 = icmp eq i32 %9, 1, !dbg !10903
  br i1 %10, label %19, label %11, !dbg !10904

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !10905
  br i1 %12, label %13, label %14, !dbg !10908

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #25, !dbg !10909
  br label %15, !dbg !10911

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.93() #25, !dbg !10912
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.94() #25, !dbg !10914
  br label %16, !dbg !10915

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.92() #25, !dbg !10916
  %18 = icmp eq i32 %17, 1, !dbg !10917
  br i1 %18, label %19, label %16, !dbg !10915, !llvm.loop !10918

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !10920
  %21 = load i32, i32* %20, align 4, !dbg !10920
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !10921
  %23 = load i32, i32* %22, align 4, !dbg !10921
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !10922
  %25 = load i32, i32* %24, align 4, !dbg !10922
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.84(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #25, !dbg !10923
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #25, !dbg !10924
  call void @llvm.dbg.value(metadata i32 %26, metadata !10892, metadata !DIExpression()), !dbg !10894
  br label %27, !dbg !10925

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !10926
  call void @llvm.dbg.value(metadata i32 %28, metadata !10892, metadata !DIExpression()), !dbg !10894
  ret i32 %28, !dbg !10927
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.92() unnamed_addr #14 !dbg !10928 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10929
  %2 = lshr i32 %1, 17, !dbg !10930
  %3 = and i32 %2, 1, !dbg !10930
  ret i32 %3, !dbg !10931
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #13 !dbg !10932 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10933
  %2 = or i32 %1, 262144, !dbg !10933
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10933
  ret void, !dbg !10934
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.93() unnamed_addr #13 !dbg !10935 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10936
  %2 = and i32 %1, -262145, !dbg !10936
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10936
  ret void, !dbg !10937
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.94() unnamed_addr #13 !dbg !10938 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10939
  %2 = or i32 %1, 65536, !dbg !10939
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10939
  ret void, !dbg !10940
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #21 !dbg !10941 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !10944, metadata !DIExpression()), !dbg !10960
  call void @llvm.dbg.value(metadata i32 undef, metadata !10944, metadata !DIExpression()), !dbg !10960
  call void @llvm.dbg.value(metadata i32 undef, metadata !10944, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !10960
  ret void, !dbg !10961
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !10962 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10966, metadata !DIExpression()), !dbg !10968
  %2 = icmp eq i8* %0, null, !dbg !10969
  br i1 %2, label %29, label %3, !dbg !10971

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !10972
  %5 = icmp eq i8 %4, 0, !dbg !10973
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !10974
  br i1 %6, label %29, label %8, !dbg !10974

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !10967, metadata !DIExpression()), !dbg !10968
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !10975

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !10967, metadata !DIExpression()), !dbg !10968
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #25, !dbg !10977
  br i1 %10, label %11, label %15, !dbg !10982

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !10983
  %13 = load i8*, i8** %12, align 4, !dbg !10983
  %14 = icmp eq i8* %13, %0, !dbg !10984
  br i1 %14, label %29, label %15, !dbg !10985

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !10986
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !10967, metadata !DIExpression()), !dbg !10968
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !10987
  br i1 %17, label %7, label %8, !dbg !10988, !llvm.loop !10989

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !10967, metadata !DIExpression()), !dbg !10968
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #25, !dbg !10991
  br i1 %20, label %21, label %26, !dbg !10995

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !10996
  %23 = load i8*, i8** %22, align 4, !dbg !10996
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #24, !dbg !10997
  %25 = icmp eq i32 %24, 0, !dbg !10998
  br i1 %25, label %29, label %26, !dbg !10999

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !11000
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !10967, metadata !DIExpression()), !dbg !10968
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !11001
  br i1 %28, label %29, label %18, !dbg !10975, !llvm.loop !11002

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !10968
  ret %struct.device* %30, !dbg !11004
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #4 !dbg !11005 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11009, metadata !DIExpression()), !dbg !11010
  %2 = icmp eq %struct.device* %0, null, !dbg !11011
  br i1 %2, label %14, label %3, !dbg !11013

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !11014
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !11014
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !11015
  %7 = load i8, i8* %6, align 1, !dbg !11015
  %8 = and i8 %7, 1, !dbg !11015
  %9 = icmp eq i8 %8, 0, !dbg !11015
  br i1 %9, label %14, label %10, !dbg !11016

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !11017
  %12 = load i8, i8* %11, align 1, !dbg !11017
  %13 = icmp eq i8 %12, 0, !dbg !11018
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !11010
  ret i1 %15, !dbg !11019
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #5 !dbg !11020 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !11025, metadata !DIExpression()), !dbg !11026
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !11027
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !11028
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !11029 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11037, metadata !DIExpression()), !dbg !11042
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !11038, metadata !DIExpression()), !dbg !11042
  call void @llvm.dbg.value(metadata i8* %2, metadata !11039, metadata !DIExpression()), !dbg !11042
  %5 = bitcast i32* %4 to i8*, !dbg !11043
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11043
  call void @llvm.dbg.value(metadata i32 0, metadata !11040, metadata !DIExpression()), !dbg !11042
  store i32 0, i32* %4, align 4, !dbg !11044
  call void @llvm.dbg.value(metadata i32* %4, metadata !11040, metadata !DIExpression(DW_OP_deref)), !dbg !11042
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #25, !dbg !11045
  call void @llvm.dbg.value(metadata i16* %6, metadata !11041, metadata !DIExpression()), !dbg !11042
  %7 = load i32, i32* %4, align 4, !dbg !11046
  call void @llvm.dbg.value(metadata i32 %7, metadata !11040, metadata !DIExpression()), !dbg !11042
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #25, !dbg !11047
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11048
  ret i32 %8, !dbg !11049
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #11 !dbg !11050 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11054, metadata !DIExpression()), !dbg !11060
  call void @llvm.dbg.value(metadata i32* %1, metadata !11055, metadata !DIExpression()), !dbg !11060
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !11061
  %4 = load i16*, i16** %3, align 4, !dbg !11061
  call void @llvm.dbg.value(metadata i16* %4, metadata !11056, metadata !DIExpression()), !dbg !11060
  %5 = icmp eq i16* %4, null, !dbg !11062
  br i1 %5, label %14, label %6, !dbg !11063

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !11064
  call void @llvm.dbg.value(metadata i32 %7, metadata !11057, metadata !DIExpression()), !dbg !11064
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !11065
  %9 = load i16, i16* %8, align 2, !dbg !11065
  %10 = add i16 %9, -32767, !dbg !11066
  %11 = icmp ult i16 %10, 2, !dbg !11066
  %12 = add i32 %7, 1, !dbg !11067
  call void @llvm.dbg.value(metadata i32 %12, metadata !11057, metadata !DIExpression()), !dbg !11064
  br i1 %11, label %13, label %6, !dbg !11066, !llvm.loop !11069

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !11072
  br label %14, !dbg !11073

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !11074
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !11075 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !11079, metadata !DIExpression()), !dbg !11090
  call void @llvm.dbg.value(metadata i32 %1, metadata !11080, metadata !DIExpression()), !dbg !11090
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !11081, metadata !DIExpression()), !dbg !11090
  call void @llvm.dbg.value(metadata i8* %3, metadata !11082, metadata !DIExpression()), !dbg !11090
  call void @llvm.dbg.value(metadata i32 0, metadata !11083, metadata !DIExpression()), !dbg !11091
  %5 = icmp eq i32 %1, 0, !dbg !11092
  br i1 %5, label %16, label %8, !dbg !11093

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !11083, metadata !DIExpression()), !dbg !11091
  %7 = icmp eq i32 %15, %1, !dbg !11092
  br i1 %7, label %16, label %8, !dbg !11093, !llvm.loop !11094

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !11083, metadata !DIExpression()), !dbg !11091
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !11096
  %11 = load i16, i16* %10, align 2, !dbg !11096
  call void @llvm.dbg.value(metadata i16 %11, metadata !11085, metadata !DIExpression()), !dbg !11097
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #25, !dbg !11098
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !11088, metadata !DIExpression()), !dbg !11097
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #24, !dbg !11099
  call void @llvm.dbg.value(metadata i32 %13, metadata !11089, metadata !DIExpression()), !dbg !11097
  %14 = icmp slt i32 %13, 0, !dbg !11100
  %15 = add nuw i32 %9, 1, !dbg !11102
  call void @llvm.dbg.value(metadata i32 %15, metadata !11083, metadata !DIExpression()), !dbg !11091
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !11103
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #12 !dbg !11104 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !11108, metadata !DIExpression()), !dbg !11111
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !11109, metadata !DIExpression()), !dbg !11111
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !11110, metadata !DIExpression()), !dbg !11111
  %2 = sext i16 %0 to i32, !dbg !11112
  %3 = icmp slt i16 %0, 1, !dbg !11114
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !11115
  %6 = add nsw i32 %2, -1, !dbg !11115
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !11115
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !11115
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !11109, metadata !DIExpression()), !dbg !11111
  ret %struct.device* %8, !dbg !11116
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !11117 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11119, metadata !DIExpression()), !dbg !11124
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !11120, metadata !DIExpression()), !dbg !11124
  call void @llvm.dbg.value(metadata i8* %2, metadata !11121, metadata !DIExpression()), !dbg !11124
  %5 = bitcast i32* %4 to i8*, !dbg !11125
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11125
  call void @llvm.dbg.value(metadata i32 0, metadata !11122, metadata !DIExpression()), !dbg !11124
  store i32 0, i32* %4, align 4, !dbg !11126
  call void @llvm.dbg.value(metadata i32* %4, metadata !11122, metadata !DIExpression(DW_OP_deref)), !dbg !11124
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #25, !dbg !11127
  call void @llvm.dbg.value(metadata i16* %6, metadata !11123, metadata !DIExpression()), !dbg !11124
  %7 = load i32, i32* %4, align 4, !dbg !11128
  call void @llvm.dbg.value(metadata i32 %7, metadata !11122, metadata !DIExpression()), !dbg !11124
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #25, !dbg !11129
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11130
  ret i32 %8, !dbg !11131
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #11 !dbg !11132 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11134, metadata !DIExpression()), !dbg !11139
  call void @llvm.dbg.value(metadata i32* %1, metadata !11135, metadata !DIExpression()), !dbg !11139
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !11140
  %4 = load i16*, i16** %3, align 4, !dbg !11140
  call void @llvm.dbg.value(metadata i16* %4, metadata !11136, metadata !DIExpression()), !dbg !11139
  call void @llvm.dbg.value(metadata i32 0, metadata !11137, metadata !DIExpression()), !dbg !11139
  call void @llvm.dbg.value(metadata i32 0, metadata !11138, metadata !DIExpression()), !dbg !11139
  %5 = icmp eq i16* %4, null, !dbg !11141
  br i1 %5, label %22, label %6, !dbg !11143

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !11137, metadata !DIExpression()), !dbg !11139
  call void @llvm.dbg.value(metadata i16* %8, metadata !11136, metadata !DIExpression()), !dbg !11139
  %9 = load i16, i16* %8, align 2, !dbg !11144
  %10 = icmp eq i16 %9, -32768, !dbg !11148
  call void @llvm.dbg.value(metadata i32 undef, metadata !11137, metadata !DIExpression()), !dbg !11139
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !11149
  call void @llvm.dbg.value(metadata i16* %11, metadata !11136, metadata !DIExpression()), !dbg !11139
  %12 = zext i1 %10 to i32, !dbg !11150
  %13 = add i32 %7, %12, !dbg !11150
  call void @llvm.dbg.value(metadata i32 %13, metadata !11137, metadata !DIExpression()), !dbg !11139
  %14 = icmp eq i32 %13, 2, !dbg !11151
  br i1 %14, label %15, label %6, !dbg !11152

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !11139
  call void @llvm.dbg.value(metadata i32 %16, metadata !11138, metadata !DIExpression()), !dbg !11139
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !11153
  %18 = load i16, i16* %17, align 2, !dbg !11153
  %19 = icmp eq i16 %18, 32767, !dbg !11154
  %20 = add i32 %16, 1, !dbg !11155
  call void @llvm.dbg.value(metadata i32 %20, metadata !11138, metadata !DIExpression()), !dbg !11139
  br i1 %19, label %21, label %15, !dbg !11157, !llvm.loop !11158

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !11160
  br label %22, !dbg !11161

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !11162
  call void @llvm.dbg.value(metadata i16* %23, metadata !11136, metadata !DIExpression()), !dbg !11139
  ret i16* %23, !dbg !11163
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #4 !dbg !11164 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11167
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !11168
  ret i32* %2, !dbg !11169
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #12 !dbg !11170 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !11318, metadata !DIExpression()), !dbg !11321
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !11319, metadata !DIExpression()), !dbg !11321
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !11320, metadata !DIExpression()), !dbg !11321
  ret void, !dbg !11322
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #12 !dbg !11323 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11327, metadata !DIExpression()), !dbg !11329
  call void @llvm.dbg.value(metadata i32 %1, metadata !11328, metadata !DIExpression()), !dbg !11329
  ret void, !dbg !11330
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #12 !dbg !11331 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11335, metadata !DIExpression()), !dbg !11337
  call void @llvm.dbg.value(metadata i32 %1, metadata !11336, metadata !DIExpression()), !dbg !11337
  ret void, !dbg !11338
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #12 !dbg !11339 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11343, metadata !DIExpression()), !dbg !11345
  call void @llvm.dbg.value(metadata i8* %1, metadata !11344, metadata !DIExpression()), !dbg !11345
  ret i32 -134, !dbg !11346
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #12 !dbg !11347 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11351, metadata !DIExpression()), !dbg !11353
  call void @llvm.dbg.value(metadata i8* %1, metadata !11352, metadata !DIExpression()), !dbg !11353
  ret i32 -134, !dbg !11354
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #8 !dbg !11355 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11358, metadata !DIExpression()), !dbg !11359
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11360, !srcloc !11366
  call void @llvm.dbg.value(metadata i32 undef, metadata !11363, metadata !DIExpression()) #23, !dbg !11367
  call void @llvm.dbg.value(metadata i32 undef, metadata !11364, metadata !DIExpression()) #23, !dbg !11367
  br label %3, !dbg !11368

3:                                                ; preds = %3, %1
  br label %3, !dbg !11369, !llvm.loop !11372
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !11375 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11379, metadata !DIExpression()), !dbg !11381
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !11380, metadata !DIExpression()), !dbg !11381
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !11382
  unreachable, !dbg !11382
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #8 !dbg !11383 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11385, metadata !DIExpression()), !dbg !11386
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !11387
  unreachable, !dbg !11387
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !11388 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11390, metadata !DIExpression()), !dbg !11394
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !11391, metadata !DIExpression()), !dbg !11394
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11395, !srcloc !11366
  call void @llvm.dbg.value(metadata i32 undef, metadata !11363, metadata !DIExpression()) #23, !dbg !11397
  call void @llvm.dbg.value(metadata i32 undef, metadata !11364, metadata !DIExpression()) #23, !dbg !11397
  call void @llvm.dbg.value(metadata i32 undef, metadata !11392, metadata !DIExpression()), !dbg !11394
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !11393, metadata !DIExpression()), !dbg !11394
  %4 = icmp eq %struct.__esf* %1, null, !dbg !11398
  br i1 %4, label %6, label %5, !dbg !11400

5:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #25, !dbg !11401
  br label %7, !dbg !11402

6:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #25, !dbg !11401
  br label %7, !dbg !11405

7:                                                ; preds = %6, %5
  %8 = extractvalue { i32, i32 } %3, 0, !dbg !11395
  call void @llvm.dbg.value(metadata i32 %8, metadata !11363, metadata !DIExpression()) #23, !dbg !11397
  call void @llvm.dbg.value(metadata i32 %8, metadata !11392, metadata !DIExpression()), !dbg !11394
  %9 = tail call fastcc %struct.k_thread* @k_current_get.103() #26, !dbg !11407
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !11393, metadata !DIExpression()), !dbg !11394
  call void @llvm.dbg.value(metadata i32 undef, metadata !11408, metadata !DIExpression()) #23, !dbg !11411
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !11413, !srcloc !11414
  tail call fastcc void @k_thread_abort.104(%struct.k_thread* noundef %9) #25, !dbg !11415
  ret void, !dbg !11418
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.103() unnamed_addr #9 !dbg !11419 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.105() #26, !dbg !11423
  ret %struct.k_thread* %1, !dbg !11424
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.104(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !11425 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11429, metadata !DIExpression()), !dbg !11430
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11431, !srcloc !11433
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !11434
  ret void, !dbg !11435
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.105() unnamed_addr #9 !dbg !11436 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11437, !srcloc !11439
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #24, !dbg !11440
  ret %struct.k_thread* %1, !dbg !11441
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11442 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11446, metadata !DIExpression()), !dbg !11449
  call void @llvm.dbg.value(metadata i32 %1, metadata !11447, metadata !DIExpression()), !dbg !11449
  call void @llvm.dbg.value(metadata i32 %2, metadata !11448, metadata !DIExpression()), !dbg !11449
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #24, !dbg !11450
  ret void, !dbg !11451
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11452 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11456, metadata !DIExpression()), !dbg !11459
  call void @llvm.dbg.value(metadata i8* %1, metadata !11457, metadata !DIExpression()), !dbg !11459
  call void @llvm.dbg.value(metadata i32 %2, metadata !11458, metadata !DIExpression()), !dbg !11459
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #24, !dbg !11460
  ret void, !dbg !11461
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !11462 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #25, !dbg !11463
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__ccm_bss_end to i32), i32 ptrtoint ([0 x i8]* @__ccm_bss_start to i32))) #25, !dbg !11464
  ret void, !dbg !11465
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !11466 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11468, metadata !DIExpression()), !dbg !11469
  tail call fastcc void @init_idle_thread(i32 noundef %0) #25, !dbg !11470
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !11471
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !11472
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !11473
  %4 = trunc i32 %0 to i8, !dbg !11474
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !11475
  store i8 %4, i8* %5, align 4, !dbg !11476
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !11477
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #25, !dbg !11478
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !11479
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !11480
  store i8* %8, i8** %9, align 4, !dbg !11481
  ret void, !dbg !11482
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !11483 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11485, metadata !DIExpression()), !dbg !11491
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !11492
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !11486, metadata !DIExpression()), !dbg !11491
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !11493
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !11487, metadata !DIExpression()), !dbg !11491
  call void @llvm.dbg.value(metadata i8* null, metadata !11490, metadata !DIExpression()), !dbg !11491
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !11494
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !11495
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #24, !dbg !11496
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #25, !dbg !11497
  ret void, !dbg !11498
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #12 !dbg !11499 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !11503, metadata !DIExpression()), !dbg !11504
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !11505
  ret i8* %2, !dbg !11506
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !11507 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11512, metadata !DIExpression()), !dbg !11513
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11514
  %3 = load i8, i8* %2, align 1, !dbg !11515
  %4 = and i8 %3, -5, !dbg !11515
  store i8 %4, i8* %2, align 1, !dbg !11515
  ret void, !dbg !11516
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #8 !dbg !11517 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #25, !dbg !11520
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #24, !dbg !11521
  %3 = ptrtoint i8* %2 to i32, !dbg !11530
  %4 = add i32 %3, 2048, !dbg !11531
  call void @llvm.dbg.value(metadata i32 %4, metadata !11525, metadata !DIExpression()) #23, !dbg !11532
  call void @llvm.dbg.value(metadata i32 %4, metadata !11533, metadata !DIExpression()) #23, !dbg !11536
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !11538, !srcloc !11539
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !11540
  %6 = or i32 %5, 512, !dbg !11540
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !11540
  tail call fastcc void @__NVIC_SetPriority.112(i32 noundef -2, i32 noundef 255) #24, !dbg !11541
  tail call fastcc void @__NVIC_SetPriority.112(i32 noundef -5, i32 noundef 0) #24, !dbg !11544
  tail call fastcc void @__NVIC_SetPriority.112(i32 noundef -12, i32 noundef 0) #24, !dbg !11545
  tail call fastcc void @__NVIC_SetPriority.112(i32 noundef -11, i32 noundef 0) #24, !dbg !11546
  tail call fastcc void @__NVIC_SetPriority.112(i32 noundef -10, i32 noundef 0) #24, !dbg !11547
  tail call fastcc void @__NVIC_SetPriority.112(i32 noundef -4, i32 noundef 0) #24, !dbg !11548
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !11549
  %8 = or i32 %7, 458752, !dbg !11549
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !11549
  tail call void @z_arm_fault_init() #24, !dbg !11550
  tail call void @z_arm_cpu_idle_init() #24, !dbg !11551
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !11552
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !11555
  %9 = tail call i32 @z_arm_mpu_init() #24, !dbg !11556
  tail call void @z_arm_configure_static_mpu_regions() #24, !dbg !11557
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !11558
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #23, !dbg !11558
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !11519, metadata !DIExpression()), !dbg !11559
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #25, !dbg !11560
  call void @z_device_state_init() #24, !dbg !11561
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #25, !dbg !11562
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #25, !dbg !11563
  %11 = call fastcc i8* @prepare_multithreading() #25, !dbg !11564
  call fastcc void @switch_to_main_thread(i8* noundef %11) #29, !dbg !11565
  unreachable, !dbg !11565
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !1879 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1883, metadata !DIExpression()), !dbg !11566
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !11567
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !11567
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !1884, metadata !DIExpression()), !dbg !11566
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !1884, metadata !DIExpression()), !dbg !11566
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !11568
  br i1 %7, label %8, label %35, !dbg !11569

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !1884, metadata !DIExpression()), !dbg !11566
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !11570
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !11570
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !1894, metadata !DIExpression()), !dbg !11571
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !11572
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !11572
  %14 = tail call i32 %13(%struct.device* noundef %11) #24, !dbg !11573
  call void @llvm.dbg.value(metadata i32 %14, metadata !1898, metadata !DIExpression()), !dbg !11571
  %15 = icmp eq %struct.device* %11, null, !dbg !11574
  br i1 %15, label %32, label %16, !dbg !11576

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !11577
  br i1 %17, label %26, label %18, !dbg !11580

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !11581
  call void @llvm.dbg.value(metadata i32 %19, metadata !1898, metadata !DIExpression()), !dbg !11571
  %20 = icmp ult i32 %19, 255, !dbg !11583
  %21 = select i1 %20, i32 %19, i32 255, !dbg !11583
  call void @llvm.dbg.value(metadata i32 %21, metadata !1898, metadata !DIExpression()), !dbg !11571
  %22 = trunc i32 %21 to i8, !dbg !11584
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !11585
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !11585
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !11586
  store i8 %22, i8* %25, align 1, !dbg !11587
  br label %26, !dbg !11588

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !11589
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !11589
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !11590
  %30 = load i8, i8* %29, align 1, !dbg !11591
  %31 = or i8 %30, 1, !dbg !11591
  store i8 %31, i8* %29, align 1, !dbg !11591
  br label %32, !dbg !11592

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !11593
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !1884, metadata !DIExpression()), !dbg !11566
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !11568
  br i1 %34, label %8, label %35, !dbg !11569, !llvm.loop !11594

35:                                               ; preds = %32, %1
  ret void, !dbg !11596
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.112(i32 noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !11597 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11599, metadata !DIExpression()), !dbg !11601
  call void @llvm.dbg.value(metadata i32 %1, metadata !11600, metadata !DIExpression()), !dbg !11601
  %3 = trunc i32 %1 to i8, !dbg !11602
  %4 = shl i8 %3, 4, !dbg !11602
  %5 = and i32 %0, 15, !dbg !11605
  %6 = add nsw i32 %5, -4, !dbg !11606
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !11607
  store volatile i8 %4, i8* %7, align 1, !dbg !11608
  ret void, !dbg !11609
}

; Function Attrs: optsize
declare !dbg !11610 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #5 !dbg !11611 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11614, metadata !DIExpression()), !dbg !11615
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11616
  store i8 1, i8* %2, align 1, !dbg !11617
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !11618
  store i8 1, i8* %3, align 4, !dbg !11619
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !11620
  store i32 0, i32* %4, align 4, !dbg !11621
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !11622
  store i32 0, i32* %5, align 4, !dbg !11623
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !11624
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !11625
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11626
  ret void, !dbg !11627
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !11628 {
  tail call void @z_sched_init() #24, !dbg !11633
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !11634
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.113, i32 0, i32 0)) #24, !dbg !11635
  call void @llvm.dbg.value(metadata i8* %1, metadata !11632, metadata !DIExpression()), !dbg !11636
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !11637
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !11638
  tail call void @z_init_cpu(i32 noundef 0) #25, !dbg !11639
  ret i8* %1, !dbg !11640
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #8 !dbg !11641 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11645, metadata !DIExpression()), !dbg !11646
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #24, !dbg !11647
  unreachable, !dbg !11648
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !11649 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11651, metadata !DIExpression()), !dbg !11654
  call void @llvm.dbg.value(metadata i8* %1, metadata !11652, metadata !DIExpression()), !dbg !11654
  call void @llvm.dbg.value(metadata i8* %2, metadata !11653, metadata !DIExpression()), !dbg !11654
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !11655
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #25, !dbg !11656
  tail call void @boot_banner() #24, !dbg !11657
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #25, !dbg !11658
  tail call void @z_init_static_threads() #24, !dbg !11659
  tail call void @main() #24, !dbg !11660
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !11661
  %5 = and i8 %4, -2, !dbg !11661
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !11661
  ret void, !dbg !11662
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #12 !dbg !11663 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !11673, metadata !DIExpression()), !dbg !11675
  call void @llvm.dbg.value(metadata i8* %1, metadata !11674, metadata !DIExpression()), !dbg !11675
  ret void, !dbg !11676
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #12 !dbg !11677 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !11679, metadata !DIExpression()), !dbg !11681
  call void @llvm.dbg.value(metadata i8* %1, metadata !11680, metadata !DIExpression()), !dbg !11681
  ret void, !dbg !11682
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !11683 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !11684, !srcloc !11691
  call void @llvm.dbg.value(metadata i32 %1, metadata !11687, metadata !DIExpression()) #23, !dbg !11692
  %2 = icmp ne i32 %1, 0, !dbg !11693
  ret i1 %2, !dbg !11694
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #7 !dbg !11695 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11696
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !11697
  %3 = load i8, i8* %2, align 4, !dbg !11698
  %4 = or i8 %3, 1, !dbg !11698
  store i8 %4, i8* %2, align 4, !dbg !11698
  ret void, !dbg !11699
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #7 !dbg !11700 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11701
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !11702
  %3 = load i8, i8* %2, align 4, !dbg !11703
  %4 = and i8 %3, -2, !dbg !11703
  store i8 %4, i8* %2, align 4, !dbg !11703
  ret void, !dbg !11704
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #4 !dbg !11705 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11706
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !11707
  %3 = load i8, i8* %2, align 4, !dbg !11707
  %4 = and i8 %3, 1, !dbg !11708
  %5 = icmp ne i8 %4, 0, !dbg !11709
  ret i1 %5, !dbg !11710
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #12 !dbg !11711 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11715, metadata !DIExpression()), !dbg !11717
  call void @llvm.dbg.value(metadata i8* %1, metadata !11716, metadata !DIExpression()), !dbg !11717
  ret i32 -88, !dbg !11718
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #12 !dbg !11719 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11723, metadata !DIExpression()), !dbg !11724
  ret i8* null, !dbg !11725
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #12 !dbg !11726 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11730, metadata !DIExpression()), !dbg !11733
  call void @llvm.dbg.value(metadata i8* %1, metadata !11731, metadata !DIExpression()), !dbg !11733
  call void @llvm.dbg.value(metadata i32 %2, metadata !11732, metadata !DIExpression()), !dbg !11733
  ret i32 -88, !dbg !11734
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !1905 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2019, metadata !DIExpression()), !dbg !11735
  call void @llvm.dbg.value(metadata i8* %1, metadata !2020, metadata !DIExpression()), !dbg !11735
  call void @llvm.dbg.value(metadata i32 %2, metadata !2021, metadata !DIExpression()), !dbg !11735
  call void @llvm.dbg.value(metadata i32 0, metadata !2022, metadata !DIExpression()), !dbg !11735
  call void @llvm.dbg.value(metadata i8 undef, metadata !2024, metadata !DIExpression()), !dbg !11735
  %4 = icmp eq i8* %1, null, !dbg !11736
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !11738
  br i1 %6, label %46, label %7, !dbg !11738

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11739
  %9 = load i8, i8* %8, align 1, !dbg !11739
  call void @llvm.dbg.value(metadata i8 %9, metadata !2024, metadata !DIExpression()), !dbg !11735
  %10 = add i32 %2, -1, !dbg !11740
  call void @llvm.dbg.value(metadata i32 %10, metadata !2021, metadata !DIExpression()), !dbg !11735
  call void @llvm.dbg.value(metadata i8 0, metadata !2025, metadata !DIExpression()), !dbg !11741
  call void @llvm.dbg.value(metadata i8 %9, metadata !2024, metadata !DIExpression()), !dbg !11735
  call void @llvm.dbg.value(metadata i32 0, metadata !2022, metadata !DIExpression()), !dbg !11735
  %11 = icmp eq i8 %9, 0, !dbg !11742
  br i1 %11, label %12, label %15, !dbg !11744

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !11745
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !11746
  store i8 0, i8* %14, align 1, !dbg !11747
  br label %46, !dbg !11748

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2025, metadata !DIExpression()), !dbg !11741
  call void @llvm.dbg.value(metadata i8 %17, metadata !2024, metadata !DIExpression()), !dbg !11735
  call void @llvm.dbg.value(metadata i32 %18, metadata !2022, metadata !DIExpression()), !dbg !11735
  %19 = zext i8 %17 to i32, !dbg !11749
  %20 = zext i8 %16 to i32, !dbg !11750
  %21 = shl nuw i32 1, %20, !dbg !11750
  call void @llvm.dbg.value(metadata i32 %21, metadata !2023, metadata !DIExpression()), !dbg !11735
  %22 = and i32 %21, %19, !dbg !11752
  %23 = icmp eq i32 %22, 0, !dbg !11754
  br i1 %23, label %42, label %24, !dbg !11755

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !11756
  %26 = sub i32 %10, %18, !dbg !11757
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !11758
  %28 = load i8*, i8** %27, align 4, !dbg !11758
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !11759
  %30 = load i32, i32* %29, align 4, !dbg !11759
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #25, !dbg !11760
  %32 = add i32 %31, %18, !dbg !11761
  call void @llvm.dbg.value(metadata i32 %32, metadata !2022, metadata !DIExpression()), !dbg !11735
  %33 = trunc i32 %21 to i8, !dbg !11762
  %34 = xor i8 %33, -1, !dbg !11762
  %35 = and i8 %17, %34, !dbg !11762
  call void @llvm.dbg.value(metadata i8 %35, metadata !2024, metadata !DIExpression()), !dbg !11735
  %36 = icmp eq i8 %35, 0, !dbg !11763
  br i1 %36, label %12, label %37, !dbg !11765

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !11766
  %39 = sub i32 %10, %32, !dbg !11768
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.114, i32 0, i32 0), i32 noundef 1) #25, !dbg !11769
  %41 = add i32 %40, %32, !dbg !11770
  call void @llvm.dbg.value(metadata i32 %41, metadata !2022, metadata !DIExpression()), !dbg !11735
  br label %42, !dbg !11771

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !11735
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !11735
  call void @llvm.dbg.value(metadata i8 %44, metadata !2024, metadata !DIExpression()), !dbg !11735
  call void @llvm.dbg.value(metadata i32 %43, metadata !2022, metadata !DIExpression()), !dbg !11735
  %45 = add i8 %16, 1, !dbg !11772
  call void @llvm.dbg.value(metadata i8 %45, metadata !2025, metadata !DIExpression()), !dbg !11741
  br label %15, !dbg !11744

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.115, i32 0, i32 0), %3 ], !dbg !11735
  ret i8* %47, !dbg !11773
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !11774 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11778, metadata !DIExpression()), !dbg !11783
  call void @llvm.dbg.value(metadata i32 %1, metadata !11779, metadata !DIExpression()), !dbg !11783
  call void @llvm.dbg.value(metadata i8* %2, metadata !11780, metadata !DIExpression()), !dbg !11783
  call void @llvm.dbg.value(metadata i32 %3, metadata !11781, metadata !DIExpression()), !dbg !11783
  %5 = icmp ult i32 %1, %3, !dbg !11784
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !11784
  call void @llvm.dbg.value(metadata i32 %6, metadata !11782, metadata !DIExpression()), !dbg !11783
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #24, !dbg !11785
  ret i32 %6, !dbg !11786
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !11787 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11791, metadata !DIExpression()), !dbg !11792
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #24, !dbg !11793
  ret void, !dbg !11794
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !11795 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11804, metadata !DIExpression()), !dbg !11815
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !11805, metadata !DIExpression()), !dbg !11815
  call void @llvm.dbg.value(metadata i32 %2, metadata !11806, metadata !DIExpression()), !dbg !11815
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !11807, metadata !DIExpression()), !dbg !11815
  call void @llvm.dbg.value(metadata i8* %4, metadata !11808, metadata !DIExpression()), !dbg !11815
  call void @llvm.dbg.value(metadata i8* %5, metadata !11809, metadata !DIExpression()), !dbg !11815
  call void @llvm.dbg.value(metadata i8* %6, metadata !11810, metadata !DIExpression()), !dbg !11815
  call void @llvm.dbg.value(metadata i32 %7, metadata !11811, metadata !DIExpression()), !dbg !11815
  call void @llvm.dbg.value(metadata i32 %8, metadata !11812, metadata !DIExpression()), !dbg !11815
  call void @llvm.dbg.value(metadata i8* undef, metadata !11813, metadata !DIExpression()), !dbg !11815
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !11816
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %11) #25, !dbg !11817
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !11818
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #25, !dbg !11819
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #25, !dbg !11820
  call void @llvm.dbg.value(metadata i8* %13, metadata !11814, metadata !DIExpression()), !dbg !11815
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #24, !dbg !11821
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !11822
  store i8* null, i8** %14, align 4, !dbg !11823
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11824
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !11824
  br i1 %16, label %20, label %17, !dbg !11826

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !11827
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !11827
  br label %20, !dbg !11828

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !11815
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !11829
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !11831
  ret i8* %13, !dbg !11832
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #5 !dbg !11833 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !11838, metadata !DIExpression()), !dbg !11839
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !11840
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #25, !dbg !11841
  ret void, !dbg !11842
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #5 !dbg !11843 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !11848, metadata !DIExpression()), !dbg !11852
  call void @llvm.dbg.value(metadata i32 %1, metadata !11849, metadata !DIExpression()), !dbg !11852
  call void @llvm.dbg.value(metadata i32 %2, metadata !11850, metadata !DIExpression()), !dbg !11852
  call void @llvm.dbg.value(metadata i32 %3, metadata !11851, metadata !DIExpression()), !dbg !11852
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !11853
  store %union.anon* null, %union.anon** %5, align 8, !dbg !11854
  %6 = trunc i32 %3 to i8, !dbg !11855
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !11856
  store i8 %6, i8* %7, align 4, !dbg !11857
  %8 = trunc i32 %2 to i8, !dbg !11858
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !11859
  store i8 %8, i8* %9, align 1, !dbg !11860
  %10 = trunc i32 %1 to i8, !dbg !11861
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !11862
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !11862
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !11862
  store i8 %10, i8* %13, align 2, !dbg !11863
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !11864
  store i8 0, i8* %14, align 1, !dbg !11865
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #25, !dbg !11866
  ret void, !dbg !11867
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #5 !dbg !11868 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11872, metadata !DIExpression()), !dbg !11880
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !11873, metadata !DIExpression()), !dbg !11880
  call void @llvm.dbg.value(metadata i32 %2, metadata !11874, metadata !DIExpression()), !dbg !11880
  call void @llvm.dbg.value(metadata i32 0, metadata !11879, metadata !DIExpression()), !dbg !11880
  %4 = add i32 %2, 7, !dbg !11881
  %5 = and i32 %4, -8, !dbg !11881
  %6 = add i32 %5, 64, !dbg !11881
  call void @llvm.dbg.value(metadata i32 %6, metadata !11875, metadata !DIExpression()), !dbg !11880
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.125(%struct.z_thread_stack_element* noundef %1) #25, !dbg !11883
  call void @llvm.dbg.value(metadata i8* %7, metadata !11878, metadata !DIExpression()), !dbg !11880
  call void @llvm.dbg.value(metadata i32 %5, metadata !11876, metadata !DIExpression()), !dbg !11880
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !11884
  call void @llvm.dbg.value(metadata i8* %8, metadata !11877, metadata !DIExpression()), !dbg !11880
  call void @llvm.dbg.value(metadata i32 0, metadata !11879, metadata !DIExpression()), !dbg !11880
  %9 = ptrtoint i8* %7 to i32, !dbg !11885
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !11886
  store i32 %9, i32* %10, align 4, !dbg !11887
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !11888
  store i32 %5, i32* %11, align 4, !dbg !11889
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !11890
  store i32 0, i32* %12, align 4, !dbg !11891
  call void @llvm.dbg.value(metadata i8* %8, metadata !11877, metadata !DIExpression()), !dbg !11880
  ret i8* %8, !dbg !11892
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.125(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #12 !dbg !11893 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !11897, metadata !DIExpression()), !dbg !11898
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !11899
  ret i8* %2, !dbg !11900
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #5 !dbg !11901 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !11906, metadata !DIExpression()), !dbg !11907
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !11908
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !11909
  ret void, !dbg !11910
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #5 !dbg !11911 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !11913, metadata !DIExpression()), !dbg !11914
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !11915
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #25, !dbg !11916
  ret void, !dbg !11917
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #5 !dbg !11918 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11922, metadata !DIExpression()), !dbg !11923
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11924
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !11925
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11926
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !11927
  ret void, !dbg !11928
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #5 !dbg !11929 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11934, metadata !DIExpression()), !dbg !11935
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11936
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !11937
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11938
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !11939
  ret void, !dbg !11940
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !11941 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !11958, metadata !DIExpression()), !dbg !11959
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11949, metadata !DIExpression()), !dbg !11959
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !11950, metadata !DIExpression()), !dbg !11959
  call void @llvm.dbg.value(metadata i32 %2, metadata !11951, metadata !DIExpression()), !dbg !11959
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !11952, metadata !DIExpression()), !dbg !11959
  call void @llvm.dbg.value(metadata i8* %4, metadata !11953, metadata !DIExpression()), !dbg !11959
  call void @llvm.dbg.value(metadata i8* %5, metadata !11954, metadata !DIExpression()), !dbg !11959
  call void @llvm.dbg.value(metadata i8* %6, metadata !11955, metadata !DIExpression()), !dbg !11959
  call void @llvm.dbg.value(metadata i32 %7, metadata !11956, metadata !DIExpression()), !dbg !11959
  call void @llvm.dbg.value(metadata i32 %8, metadata !11957, metadata !DIExpression()), !dbg !11959
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #25, !dbg !11960
  %13 = icmp eq i64 %11, -1, !dbg !11961
  br i1 %13, label %15, label %14, !dbg !11963

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #25, !dbg !11964
  br label %15, !dbg !11966

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !11967
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !11968 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !11973, metadata !DIExpression()), !dbg !11974
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11972, metadata !DIExpression()), !dbg !11974
  %4 = icmp eq i64 %3, 0, !dbg !11975
  br i1 %4, label %5, label %6, !dbg !11977

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #25, !dbg !11978
  br label %7, !dbg !11980

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #25, !dbg !11981
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !11983
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !11984 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11988, metadata !DIExpression()), !dbg !11989
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11990, !srcloc !11992
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #25, !dbg !11993
  ret void, !dbg !11994
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !11995 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !11998, metadata !DIExpression()), !dbg !11999
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11997, metadata !DIExpression()), !dbg !11999
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12000
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #24, !dbg !12001
  ret void, !dbg !12002
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !12003 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12005, metadata !DIExpression()), !dbg !12025
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !12026

1:                                                ; preds = %2
  tail call void @k_sched_lock() #24, !dbg !12027
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12023, metadata !DIExpression()), !dbg !12028
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !12029

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !12005, metadata !DIExpression()), !dbg !12025
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !12030
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !12030
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !12033
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !12033
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !12034
  %9 = load i32, i32* %8, align 4, !dbg !12034
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !12035
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !12035
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !12036
  %13 = load i8*, i8** %12, align 4, !dbg !12036
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !12037
  %15 = load i8*, i8** %14, align 4, !dbg !12037
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !12038
  %17 = load i8*, i8** %16, align 4, !dbg !12038
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !12039
  %19 = load i32, i32* %18, align 4, !dbg !12039
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !12040
  %21 = load i32, i32* %20, align 4, !dbg !12040
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #25, !dbg !12041
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !12042
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !12043
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !12044
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !12044
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !12045
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !12005, metadata !DIExpression()), !dbg !12025
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12046
  br i1 %27, label %2, label %1, !dbg !12026, !llvm.loop !12048

28:                                               ; preds = %0
  tail call void @k_sched_lock() #24, !dbg !12027
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12023, metadata !DIExpression()), !dbg !12028
  br label %29, !dbg !12029

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #24, !dbg !12050
  ret void, !dbg !12051

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !12023, metadata !DIExpression()), !dbg !12028
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !12052
  %33 = load i32, i32* %32, align 4, !dbg !12052
  %34 = icmp eq i32 %33, -1, !dbg !12056
  br i1 %34, label %43, label %35, !dbg !12057

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !12058
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !12058
  %38 = icmp sgt i32 %33, 0, !dbg !12060
  %39 = select i1 %38, i32 %33, i32 0, !dbg !12060
  %40 = zext i32 %39 to i64, !dbg !12060
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %40) #25, !dbg !12060
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !12061
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #25, !dbg !12061
  br label %43, !dbg !12062

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !12063
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !12023, metadata !DIExpression()), !dbg !12028
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12064
  br i1 %45, label %30, label %29, !dbg !12029, !llvm.loop !12066
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #12 !dbg !12068 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !12073, metadata !DIExpression()), !dbg !12074
  call void @llvm.dbg.value(metadata i64 %0, metadata !12075, metadata !DIExpression()), !dbg !12092
  call void @llvm.dbg.value(metadata i32 1000, metadata !12080, metadata !DIExpression()), !dbg !12092
  call void @llvm.dbg.value(metadata i32 10000, metadata !12081, metadata !DIExpression()), !dbg !12092
  call void @llvm.dbg.value(metadata i8 1, metadata !12082, metadata !DIExpression()), !dbg !12092
  call void @llvm.dbg.value(metadata i8 0, metadata !12083, metadata !DIExpression()), !dbg !12092
  call void @llvm.dbg.value(metadata i8 1, metadata !12084, metadata !DIExpression()), !dbg !12092
  call void @llvm.dbg.value(metadata i8 0, metadata !12085, metadata !DIExpression()), !dbg !12092
  call void @llvm.dbg.value(metadata i8 1, metadata !12086, metadata !DIExpression()), !dbg !12092
  call void @llvm.dbg.value(metadata i8 0, metadata !12087, metadata !DIExpression()), !dbg !12092
  call void @llvm.dbg.value(metadata i64 0, metadata !12088, metadata !DIExpression()), !dbg !12092
  call void @llvm.dbg.value(metadata i64 0, metadata !12088, metadata !DIExpression()), !dbg !12092
  %2 = mul i64 %0, 10, !dbg !12094
  ret i64 %2, !dbg !12100
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #8 !dbg !12101 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !12103, metadata !DIExpression()), !dbg !12107
  call void @llvm.dbg.value(metadata i8* %1, metadata !12104, metadata !DIExpression()), !dbg !12107
  call void @llvm.dbg.value(metadata i8* %2, metadata !12105, metadata !DIExpression()), !dbg !12107
  call void @llvm.dbg.value(metadata i8* %3, metadata !12106, metadata !DIExpression()), !dbg !12107
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12108
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !12109
  %7 = load i8, i8* %6, align 4, !dbg !12110
  %8 = or i8 %7, 4, !dbg !12110
  store i8 %8, i8* %6, align 4, !dbg !12110
  tail call void @z_thread_essential_clear() #25, !dbg !12111
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #28, !dbg !12112
  unreachable, !dbg !12112
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #12 !dbg !12113 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12117, metadata !DIExpression()), !dbg !12118
  ret i32 -134, !dbg !12119
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #12 !dbg !12120 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12124, metadata !DIExpression()), !dbg !12126
  call void @llvm.dbg.value(metadata i32 %1, metadata !12125, metadata !DIExpression()), !dbg !12126
  ret i32 -134, !dbg !12127
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #12 !dbg !12128 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12135, metadata !DIExpression()), !dbg !12137
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !12136, metadata !DIExpression()), !dbg !12137
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !12138
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !12140
  %6 = select i1 %5, i32 -22, i32 0, !dbg !12137
  ret i32 %6, !dbg !12141
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #12 !dbg !12142 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !12146, metadata !DIExpression()), !dbg !12147
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !12148
  %3 = select i1 %2, i32 -22, i32 0, !dbg !12147
  ret i32 %3, !dbg !12150
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !12151 {
  tail call void @sys_clock_idle_exit() #24, !dbg !12153
  ret void, !dbg !12154
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #8 !dbg !12155 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12157, metadata !DIExpression()), !dbg !12160
  call void @llvm.dbg.value(metadata i8* %1, metadata !12158, metadata !DIExpression()), !dbg !12160
  call void @llvm.dbg.value(metadata i8* %2, metadata !12159, metadata !DIExpression()), !dbg !12160
  br label %4, !dbg !12161

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12162, !srcloc !12169
  call void @llvm.dbg.value(metadata i32 undef, metadata !12165, metadata !DIExpression()) #23, !dbg !12170
  call void @llvm.dbg.value(metadata i32 undef, metadata !12166, metadata !DIExpression()) #23, !dbg !12170
  tail call fastcc void @k_cpu_idle() #25, !dbg !12171
  br label %4, !dbg !12161, !llvm.loop !12172
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !12174 {
  tail call void @arch_cpu_idle() #24, !dbg !12175
  ret void, !dbg !12176
}

; Function Attrs: optsize
declare !dbg !12177 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #4 !dbg !12178 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12182, metadata !DIExpression()), !dbg !12186
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12183, metadata !DIExpression()), !dbg !12186
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !12187
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !12187
  %5 = load i8, i8* %4, align 2, !dbg !12187
  call void @llvm.dbg.value(metadata i8 %5, metadata !12184, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !12186
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !12188
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !12188
  %8 = load i8, i8* %7, align 2, !dbg !12188
  call void @llvm.dbg.value(metadata i8 %8, metadata !12185, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !12186
  %9 = icmp eq i8 %8, %5, !dbg !12189
  %10 = sext i8 %5 to i32, !dbg !12191
  %11 = sext i8 %8 to i32, !dbg !12191
  %12 = sub nsw i32 %11, %10, !dbg !12191
  %13 = select i1 %9, i32 0, i32 %12, !dbg !12191
  ret i32 %13, !dbg !12192
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !12193 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12197, metadata !DIExpression()), !dbg !12198
  %2 = tail call fastcc i32 @slice_time() #25, !dbg !12199
  %3 = icmp eq i32 %2, 0, !dbg !12201
  br i1 %3, label %8, label %4, !dbg !12202

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #24, !dbg !12203
  %6 = add i32 %5, %2, !dbg !12205
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12206
  %7 = tail call fastcc i32 @slice_time() #25, !dbg !12207
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #24, !dbg !12208
  br label %8, !dbg !12209

8:                                                ; preds = %4, %1
  ret void, !dbg !12210
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #4 !dbg !12211 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12215, metadata !DIExpression()), !dbg !12217
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !12218
  call void @llvm.dbg.value(metadata i32 %1, metadata !12216, metadata !DIExpression()), !dbg !12217
  ret i32 %1, !dbg !12219
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12220 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12224, metadata !DIExpression()), !dbg !12233
  call void @llvm.dbg.value(metadata i32 %1, metadata !12225, metadata !DIExpression()), !dbg !12233
  call void @llvm.dbg.value(metadata i32 0, metadata !12226, metadata !DIExpression()), !dbg !12234
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12235, metadata !DIExpression()) #23, !dbg !12242
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12244, !srcloc !12250
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !12244
  call void @llvm.dbg.value(metadata i32 %4, metadata !12247, metadata !DIExpression()) #23, !dbg !12251
  call void @llvm.dbg.value(metadata i32 undef, metadata !12248, metadata !DIExpression()) #23, !dbg !12251
  call void @llvm.dbg.value(metadata i32 %4, metadata !12241, metadata !DIExpression()) #23, !dbg !12242
  call void @llvm.dbg.value(metadata i32 %4, metadata !12232, metadata !DIExpression()), !dbg !12234
  call void @llvm.dbg.value(metadata i32 undef, metadata !12226, metadata !DIExpression()), !dbg !12234
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12252
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #25, !dbg !12255
  %6 = icmp sgt i32 %0, 0, !dbg !12256
  %7 = icmp sgt i32 %5, 2, !dbg !12258
  %8 = select i1 %7, i32 %5, i32 2, !dbg !12258
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !12258
  store i32 %9, i32* @slice_ticks, align 4, !dbg !12259
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !12260
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !12261
  call void @llvm.dbg.value(metadata i32 %4, metadata !12262, metadata !DIExpression()) #23, !dbg !12268
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12267, metadata !DIExpression()) #23, !dbg !12268
  call void @llvm.dbg.value(metadata i32 %4, metadata !12270, metadata !DIExpression()) #23, !dbg !12273
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !12275, !srcloc !12276
  call void @llvm.dbg.value(metadata i32 1, metadata !12226, metadata !DIExpression()), !dbg !12234
  call void @llvm.dbg.value(metadata i32 undef, metadata !12226, metadata !DIExpression()), !dbg !12234
  ret void, !dbg !12277
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #12 !dbg !12278 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12280, metadata !DIExpression()), !dbg !12281
  call void @llvm.dbg.value(metadata i32 %0, metadata !12282, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12297
  call void @llvm.dbg.value(metadata i32 1000, metadata !12285, metadata !DIExpression()), !dbg !12297
  call void @llvm.dbg.value(metadata i32 10000, metadata !12286, metadata !DIExpression()), !dbg !12297
  call void @llvm.dbg.value(metadata i8 1, metadata !12287, metadata !DIExpression()), !dbg !12297
  call void @llvm.dbg.value(metadata i1 true, metadata !12288, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12297
  call void @llvm.dbg.value(metadata i1 true, metadata !12289, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12297
  call void @llvm.dbg.value(metadata i8 0, metadata !12290, metadata !DIExpression()), !dbg !12297
  call void @llvm.dbg.value(metadata i1 true, metadata !12291, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12297
  call void @llvm.dbg.value(metadata i1 false, metadata !12292, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12297
  call void @llvm.dbg.value(metadata i64 0, metadata !12293, metadata !DIExpression()), !dbg !12297
  call void @llvm.dbg.value(metadata i64 0, metadata !12293, metadata !DIExpression()), !dbg !12297
  %2 = mul i32 %0, 10, !dbg !12299
  ret i32 %2, !dbg !12305
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !12306 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12308, metadata !DIExpression()), !dbg !12310
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12235, metadata !DIExpression()) #23, !dbg !12311
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12313, !srcloc !12250
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12313
  call void @llvm.dbg.value(metadata i32 %3, metadata !12247, metadata !DIExpression()) #23, !dbg !12315
  call void @llvm.dbg.value(metadata i32 undef, metadata !12248, metadata !DIExpression()) #23, !dbg !12315
  call void @llvm.dbg.value(metadata i32 %3, metadata !12241, metadata !DIExpression()) #23, !dbg !12311
  call void @llvm.dbg.value(metadata i32 %3, metadata !12309, metadata !DIExpression()), !dbg !12310
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !12316
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12318
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !12319
  br i1 %6, label %7, label %8, !dbg !12320

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !12321
  call void @llvm.dbg.value(metadata i32 %3, metadata !12262, metadata !DIExpression()) #23, !dbg !12323
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12267, metadata !DIExpression()) #23, !dbg !12323
  call void @llvm.dbg.value(metadata i32 %3, metadata !12270, metadata !DIExpression()) #23, !dbg !12325
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12327, !srcloc !12276
  br label %24, !dbg !12328

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !12329
  %9 = tail call fastcc i32 @slice_time() #25, !dbg !12330
  %10 = icmp eq i32 %9, 0, !dbg !12330
  br i1 %10, label %21, label %11, !dbg !12332

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #25, !dbg !12333
  br i1 %12, label %13, label %21, !dbg !12334

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12335
  %15 = icmp sgt i32 %14, %0, !dbg !12338
  br i1 %15, label %19, label %16, !dbg !12339

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !12340
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #25, !dbg !12340
  call void @llvm.dbg.value(metadata i32 %18, metadata !12309, metadata !DIExpression()), !dbg !12310
  br label %22, !dbg !12342

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !12343
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12343
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12345
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !12310
  call void @llvm.dbg.value(metadata i32 %23, metadata !12309, metadata !DIExpression()), !dbg !12310
  call void @llvm.dbg.value(metadata i32 %23, metadata !12262, metadata !DIExpression()) #23, !dbg !12347
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12267, metadata !DIExpression()) #23, !dbg !12347
  call void @llvm.dbg.value(metadata i32 %23, metadata !12270, metadata !DIExpression()) #23, !dbg !12349
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #23, !dbg !12351, !srcloc !12276
  br label %24, !dbg !12352

24:                                               ; preds = %22, %7
  ret void, !dbg !12352
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #4 !dbg !12353 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12357, metadata !DIExpression()), !dbg !12359
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #25, !dbg !12360
  %3 = icmp eq i32 %2, 0, !dbg !12360
  br i1 %3, label %16, label %4, !dbg !12361

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #25, !dbg !12362
  br i1 %5, label %16, label %6, !dbg !12363

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !12364
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !12364
  %9 = load i8, i8* %8, align 2, !dbg !12364
  %10 = sext i8 %9 to i32, !dbg !12365
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !12366
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #25, !dbg !12367
  br i1 %12, label %16, label %13, !dbg !12368

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #25, !dbg !12369
  %15 = xor i1 %14, true, !dbg !12370
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !12359
  call void @llvm.dbg.value(metadata i1 %17, metadata !12358, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12359
  ret i1 %17, !dbg !12371
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !12372 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12376, metadata !DIExpression()), !dbg !12378
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12379
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12377, metadata !DIExpression()), !dbg !12378
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #25, !dbg !12380
  br i1 %3, label %5, label %4, !dbg !12382

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #25, !dbg !12383
  br label %5, !dbg !12385

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !12376, metadata !DIExpression()), !dbg !12378
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !12386
  ret i32 %6, !dbg !12387
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !12388 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12390, metadata !DIExpression()), !dbg !12392
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12393
  %3 = load i8, i8* %2, align 1, !dbg !12393
  call void @llvm.dbg.value(metadata i8 %3, metadata !12391, metadata !DIExpression()), !dbg !12392
  %4 = and i8 %3, 31, !dbg !12394
  %5 = icmp ne i8 %4, 0, !dbg !12395
  ret i1 %5, !dbg !12396
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12397 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12399, metadata !DIExpression()), !dbg !12400
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !12401
  br i1 %2, label %3, label %7, !dbg !12403

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12404, metadata !DIExpression()) #23, !dbg !12407
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12410
  %5 = load i8, i8* %4, align 1, !dbg !12411
  %6 = and i8 %5, 127, !dbg !12411
  store i8 %6, i8* %4, align 1, !dbg !12411
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12412, metadata !DIExpression()) #23, !dbg !12415
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !12419
  br label %7, !dbg !12420

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12421, metadata !DIExpression()) #23, !dbg !12424
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12426
  %9 = load i8, i8* %8, align 1, !dbg !12427
  %10 = or i8 %9, -128, !dbg !12427
  store i8 %10, i8* %8, align 1, !dbg !12427
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12428, metadata !DIExpression()) #23, !dbg !12431
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12435, metadata !DIExpression()) #23, !dbg !12443
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12441, metadata !DIExpression()) #23, !dbg !12443
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !12445
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !12442, metadata !DIExpression()) #23, !dbg !12443
  %12 = icmp eq %struct._dnode* %11, null, !dbg !12447
  br i1 %12, label %23, label %13, !dbg !12445

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !12442, metadata !DIExpression()) #23, !dbg !12443
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !12449
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !12442, metadata !DIExpression()) #23, !dbg !12443
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #24, !dbg !12450
  %17 = icmp sgt i32 %16, 0, !dbg !12453
  br i1 %17, label %18, label %20, !dbg !12454

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12455
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #24, !dbg !12457
  br label %25, !dbg !12458

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #24, !dbg !12447
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !12442, metadata !DIExpression()) #23, !dbg !12443
  %22 = icmp eq %struct._dnode* %21, null, !dbg !12447
  br i1 %22, label %23, label %13, !dbg !12445, !llvm.loop !12459

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12461
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #24, !dbg !12462
  br label %25, !dbg !12463

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12464
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !12465
  %28 = zext i1 %27 to i32, !dbg !12465
  tail call fastcc void @update_cache(i32 noundef %28) #25, !dbg !12466
  ret void, !dbg !12467
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !12468 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12470, metadata !DIExpression()), !dbg !12471
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #25, !dbg !12472
  ret i1 %2, !dbg !12473
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #7 !dbg !12474 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !12476, metadata !DIExpression()), !dbg !12478
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12477, metadata !DIExpression()), !dbg !12478
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !12479
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #25, !dbg !12480
  ret void, !dbg !12481
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !12482 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12486, metadata !DIExpression()), !dbg !12487
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #25, !dbg !12488
  br i1 %2, label %6, label %3, !dbg !12488

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12489
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !12489
  br label %6, !dbg !12488

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !12488
  ret %struct._dnode* %7, !dbg !12490
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !12491 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12495, metadata !DIExpression()), !dbg !12499
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12496, metadata !DIExpression()), !dbg !12499
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12500
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !12500
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !12497, metadata !DIExpression()), !dbg !12499
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !12501
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !12502
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !12503
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !12504
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !12505
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !12506
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !12507
  ret void, !dbg !12508
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #4 !dbg !12509 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12513, metadata !DIExpression()), !dbg !12515
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12514, metadata !DIExpression()), !dbg !12515
  %3 = icmp eq %struct._dnode* %1, null, !dbg !12516
  br i1 %3, label %6, label %4, !dbg !12517

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #25, !dbg !12518
  br label %6, !dbg !12517

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !12517
  ret %struct._dnode* %7, !dbg !12519
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !12520 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12524, metadata !DIExpression()), !dbg !12527
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12525, metadata !DIExpression()), !dbg !12527
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12528
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !12528
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !12526, metadata !DIExpression()), !dbg !12527
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !12529
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !12530
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !12531
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !12532
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !12533
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !12534
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !12535
  ret void, !dbg !12536
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !12537 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12539, metadata !DIExpression()), !dbg !12541
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !12542
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12549, metadata !DIExpression()) #23, !dbg !12551
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !12552
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !12553
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !12553
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !12540, metadata !DIExpression()), !dbg !12541
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !12554, metadata !DIExpression()) #23, !dbg !12560
  call void @llvm.dbg.value(metadata i32 %0, metadata !12559, metadata !DIExpression()) #23, !dbg !12560
  %6 = icmp eq i32 %0, 0, !dbg !12563
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12565
  br i1 %6, label %8, label %15, !dbg !12566

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #24, !dbg !12567
  br i1 %9, label %15, label %10, !dbg !12569

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #24, !dbg !12570
  br i1 %11, label %15, label %12, !dbg !12572

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #24, !dbg !12573
  %14 = icmp eq i32 %13, 0, !dbg !12573
  br i1 %14, label %18, label %15, !dbg !12575

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !12576
  br i1 %16, label %18, label %17, !dbg !12579

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !12580
  br label %18, !dbg !12582

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !12565
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12565
  ret void, !dbg !12583
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #4 !dbg !12584 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12588, metadata !DIExpression()), !dbg !12591
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12589, metadata !DIExpression()), !dbg !12591
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #25, !dbg !12592
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !12590, metadata !DIExpression()), !dbg !12591
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !12589, metadata !DIExpression()), !dbg !12591
  ret %struct.k_thread* %3, !dbg !12593
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !12594 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12596, metadata !DIExpression()), !dbg !12597
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12598
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !12599
  %4 = xor i1 %3, true, !dbg !12600
  ret i1 %4, !dbg !12601
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !12602 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12604, metadata !DIExpression()), !dbg !12605
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !12606
  %3 = load i16, i16* %2, align 2, !dbg !12606
  %4 = icmp ult i16 %3, 128, !dbg !12607
  %5 = zext i1 %4 to i32, !dbg !12607
  ret i32 %5, !dbg !12608
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #4 !dbg !12609 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !12615, metadata !DIExpression()), !dbg !12616
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !12617
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #25, !dbg !12618
  %4 = xor i1 %3, true, !dbg !12619
  ret i1 %4, !dbg !12620
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #4 !dbg !12621 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12627, metadata !DIExpression()), !dbg !12628
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12629
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !12629
  %4 = icmp ne %struct._dnode* %3, null, !dbg !12630
  ret i1 %4, !dbg !12631
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #4 !dbg !12632 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12634, metadata !DIExpression()), !dbg !12636
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12635, metadata !DIExpression()), !dbg !12636
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12637
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !12637
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !12638
  br i1 %5, label %9, label %6, !dbg !12639

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !12640
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !12640
  br label %9, !dbg !12639

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !12639
  ret %struct._dnode* %10, !dbg !12641
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #4 !dbg !12642 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12646, metadata !DIExpression()), !dbg !12647
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12648
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !12648
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !12649
  ret i1 %4, !dbg !12650
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #7 !dbg !12651 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12655, metadata !DIExpression()), !dbg !12658
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12659
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !12659
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !12656, metadata !DIExpression()), !dbg !12658
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12660
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !12660
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !12657, metadata !DIExpression()), !dbg !12658
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !12661
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !12662
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !12663
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !12664
  tail call fastcc void @sys_dnode_init.130(%struct._dnode* noundef %0) #25, !dbg !12665
  ret void, !dbg !12666
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.130(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #5 !dbg !12667 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12669, metadata !DIExpression()), !dbg !12670
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12671
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !12672
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12673
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !12674
  ret void, !dbg !12675
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !12676 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12680, metadata !DIExpression()), !dbg !12682
  call void @llvm.dbg.value(metadata i32 128, metadata !12681, metadata !DIExpression()), !dbg !12682
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12683
  %3 = load i8, i8* %2, align 1, !dbg !12683
  %4 = icmp slt i8 %3, 0, !dbg !12684
  ret i1 %4, !dbg !12685
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !12686 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12690, metadata !DIExpression()), !dbg !12692
  call void @llvm.dbg.value(metadata i32 %1, metadata !12691, metadata !DIExpression()), !dbg !12692
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #25, !dbg !12693
  ret i1 %3, !dbg !12694
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #12 !dbg !12695 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12697, metadata !DIExpression()), !dbg !12698
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !12699
  ret i1 %2, !dbg !12700
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !12701 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12703, metadata !DIExpression()), !dbg !12705
  call void @llvm.dbg.value(metadata i32 %1, metadata !12704, metadata !DIExpression()), !dbg !12705
  %3 = icmp slt i32 %0, %1, !dbg !12706
  ret i1 %3, !dbg !12707
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12708 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12710, metadata !DIExpression()), !dbg !12714
  call void @llvm.dbg.value(metadata i32 0, metadata !12711, metadata !DIExpression()), !dbg !12715
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12235, metadata !DIExpression()) #23, !dbg !12716
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12718, !srcloc !12250
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12718
  call void @llvm.dbg.value(metadata i32 %3, metadata !12247, metadata !DIExpression()) #23, !dbg !12720
  call void @llvm.dbg.value(metadata i32 undef, metadata !12248, metadata !DIExpression()) #23, !dbg !12720
  call void @llvm.dbg.value(metadata i32 %3, metadata !12241, metadata !DIExpression()) #23, !dbg !12716
  call void @llvm.dbg.value(metadata i32 %3, metadata !12713, metadata !DIExpression()), !dbg !12715
  call void @llvm.dbg.value(metadata i32 undef, metadata !12711, metadata !DIExpression()), !dbg !12715
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !12721
  call void @llvm.dbg.value(metadata i32 %3, metadata !12262, metadata !DIExpression()) #23, !dbg !12726
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12267, metadata !DIExpression()) #23, !dbg !12726
  call void @llvm.dbg.value(metadata i32 %3, metadata !12270, metadata !DIExpression()) #23, !dbg !12728
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12730, !srcloc !12276
  call void @llvm.dbg.value(metadata i32 1, metadata !12711, metadata !DIExpression()), !dbg !12715
  call void @llvm.dbg.value(metadata i32 undef, metadata !12711, metadata !DIExpression()), !dbg !12715
  ret void, !dbg !12731
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12732 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12734, metadata !DIExpression()), !dbg !12735
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !12736
  br i1 %2, label %24, label %3, !dbg !12738

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #25, !dbg !12739
  br i1 %4, label %5, label %24, !dbg !12740

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12421, metadata !DIExpression()) #23, !dbg !12741
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12744
  %7 = load i8, i8* %6, align 1, !dbg !12745
  %8 = or i8 %7, -128, !dbg !12745
  store i8 %8, i8* %6, align 1, !dbg !12745
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12428, metadata !DIExpression()) #23, !dbg !12746
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12435, metadata !DIExpression()) #23, !dbg !12748
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12441, metadata !DIExpression()) #23, !dbg !12748
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !12750
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !12442, metadata !DIExpression()) #23, !dbg !12748
  %10 = icmp eq %struct._dnode* %9, null, !dbg !12751
  br i1 %10, label %21, label %11, !dbg !12750

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !12442, metadata !DIExpression()) #23, !dbg !12748
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !12752
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !12442, metadata !DIExpression()) #23, !dbg !12748
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #24, !dbg !12753
  %15 = icmp sgt i32 %14, 0, !dbg !12754
  br i1 %15, label %16, label %18, !dbg !12755

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12756
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #24, !dbg !12757
  br label %23, !dbg !12758

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #24, !dbg !12751
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !12442, metadata !DIExpression()) #23, !dbg !12748
  %20 = icmp eq %struct._dnode* %19, null, !dbg !12751
  br i1 %20, label %21, label %11, !dbg !12750, !llvm.loop !12759

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12761
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #24, !dbg !12762
  br label %23, !dbg !12763

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #25, !dbg !12764
  br label %24, !dbg !12765

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !12766
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !12767 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12769, metadata !DIExpression()), !dbg !12770
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #25, !dbg !12771
  br i1 %2, label %6, label %3, !dbg !12772

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #25, !dbg !12773
  %5 = xor i1 %4, true, !dbg !12772
  br label %6, !dbg !12772

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !12774
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12775 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12777, metadata !DIExpression()), !dbg !12781
  call void @llvm.dbg.value(metadata i32 0, metadata !12778, metadata !DIExpression()), !dbg !12782
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12235, metadata !DIExpression()) #23, !dbg !12783
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12785, !srcloc !12250
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12785
  call void @llvm.dbg.value(metadata i32 %3, metadata !12247, metadata !DIExpression()) #23, !dbg !12787
  call void @llvm.dbg.value(metadata i32 undef, metadata !12248, metadata !DIExpression()) #23, !dbg !12787
  call void @llvm.dbg.value(metadata i32 %3, metadata !12241, metadata !DIExpression()) #23, !dbg !12783
  call void @llvm.dbg.value(metadata i32 %3, metadata !12780, metadata !DIExpression()), !dbg !12782
  call void @llvm.dbg.value(metadata i32 undef, metadata !12778, metadata !DIExpression()), !dbg !12782
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #25, !dbg !12788
  call void @llvm.dbg.value(metadata i32 %3, metadata !12262, metadata !DIExpression()) #23, !dbg !12791
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12267, metadata !DIExpression()) #23, !dbg !12791
  call void @llvm.dbg.value(metadata i32 %3, metadata !12270, metadata !DIExpression()) #23, !dbg !12793
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12795, !srcloc !12276
  call void @llvm.dbg.value(metadata i32 1, metadata !12778, metadata !DIExpression()), !dbg !12782
  call void @llvm.dbg.value(metadata i32 undef, metadata !12778, metadata !DIExpression()), !dbg !12782
  ret void, !dbg !12796
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12797 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12799, metadata !DIExpression()), !dbg !12801
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12235, metadata !DIExpression()) #23, !dbg !12802
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12804, !srcloc !12250
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12804
  call void @llvm.dbg.value(metadata i32 %3, metadata !12247, metadata !DIExpression()) #23, !dbg !12806
  call void @llvm.dbg.value(metadata i32 undef, metadata !12248, metadata !DIExpression()) #23, !dbg !12806
  call void @llvm.dbg.value(metadata i32 %3, metadata !12241, metadata !DIExpression()) #23, !dbg !12802
  call void @llvm.dbg.value(metadata i32 %3, metadata !12800, metadata !DIExpression()), !dbg !12801
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #25, !dbg !12807
  br i1 %4, label %5, label %6, !dbg !12809

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !12262, metadata !DIExpression()) #23, !dbg !12810
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12267, metadata !DIExpression()) #23, !dbg !12810
  call void @llvm.dbg.value(metadata i32 %3, metadata !12270, metadata !DIExpression()) #23, !dbg !12813
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12815, !srcloc !12276
  br label %8, !dbg !12816

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.135(%struct.k_thread* noundef %0) #25, !dbg !12817
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !12818
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !12819
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #25, !dbg !12819
  br label %8, !dbg !12820

8:                                                ; preds = %6, %5
  ret void, !dbg !12820
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !12821 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12823, metadata !DIExpression()), !dbg !12824
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12825
  %3 = load i8, i8* %2, align 1, !dbg !12825
  %4 = and i8 %3, 4, !dbg !12826
  %5 = icmp eq i8 %4, 0, !dbg !12827
  ret i1 %5, !dbg !12828
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.135(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !12829 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12831, metadata !DIExpression()), !dbg !12832
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12833
  %3 = load i8, i8* %2, align 1, !dbg !12834
  %4 = and i8 %3, -5, !dbg !12834
  store i8 %4, i8* %2, align 1, !dbg !12834
  ret void, !dbg !12835
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !12836 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !12839, metadata !DIExpression()), !dbg !12840
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12838, metadata !DIExpression()), !dbg !12840
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #25, !dbg !12841
  br i1 %4, label %5, label %9, !dbg !12843

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #25, !dbg !12844
  br i1 %6, label %7, label %9, !dbg !12845

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !12846, metadata !DIExpression()) #23, !dbg !12852
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12851, metadata !DIExpression()) #23, !dbg !12852
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #24, !dbg !12855
  br label %10, !dbg !12856

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !12262, metadata !DIExpression()) #23, !dbg !12857
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12267, metadata !DIExpression()) #23, !dbg !12857
  call void @llvm.dbg.value(metadata i32 %3, metadata !12270, metadata !DIExpression()) #23, !dbg !12860
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12862, !srcloc !12276
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !12863
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !12864 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12868, metadata !DIExpression()), !dbg !12869
  call void @llvm.dbg.value(metadata i32 %0, metadata !12870, metadata !DIExpression()), !dbg !12875
  %2 = icmp eq i32 %0, 0, !dbg !12877
  br i1 %2, label %3, label %6, !dbg !12878

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !12879, !srcloc !12886
  call void @llvm.dbg.value(metadata i32 %4, metadata !12882, metadata !DIExpression()) #23, !dbg !12887
  %5 = icmp eq i32 %4, 0, !dbg !12888
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !12869
  ret i1 %7, !dbg !12889
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #4 !dbg !12890 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12893
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12892, metadata !DIExpression()), !dbg !12894
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12895
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !12896
  ret i1 %3, !dbg !12897
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !12898 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12900, metadata !DIExpression()), !dbg !12902
  %2 = tail call i32 @arch_swap(i32 noundef %0) #24, !dbg !12903
  call void @llvm.dbg.value(metadata i32 %2, metadata !12901, metadata !DIExpression()), !dbg !12902
  ret i32 %2, !dbg !12904
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12905 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12907, metadata !DIExpression()), !dbg !12911
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !12912
  call void @llvm.dbg.value(metadata i32 0, metadata !12908, metadata !DIExpression()), !dbg !12913
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12235, metadata !DIExpression()) #23, !dbg !12914
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12916, !srcloc !12250
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !12916
  call void @llvm.dbg.value(metadata i32 %4, metadata !12247, metadata !DIExpression()) #23, !dbg !12918
  call void @llvm.dbg.value(metadata i32 undef, metadata !12248, metadata !DIExpression()) #23, !dbg !12918
  call void @llvm.dbg.value(metadata i32 %4, metadata !12241, metadata !DIExpression()) #23, !dbg !12914
  call void @llvm.dbg.value(metadata i32 %4, metadata !12910, metadata !DIExpression()), !dbg !12913
  call void @llvm.dbg.value(metadata i32 undef, metadata !12908, metadata !DIExpression()), !dbg !12913
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !12919
  br i1 %5, label %6, label %10, !dbg !12923

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12404, metadata !DIExpression()) #23, !dbg !12924
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12927
  %8 = load i8, i8* %7, align 1, !dbg !12928
  %9 = and i8 %8, 127, !dbg !12928
  store i8 %9, i8* %7, align 1, !dbg !12928
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12412, metadata !DIExpression()) #23, !dbg !12929
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !12931
  br label %10, !dbg !12932

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #25, !dbg !12933
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12934
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !12935
  %13 = zext i1 %12 to i32, !dbg !12935
  tail call fastcc void @update_cache(i32 noundef %13) #25, !dbg !12936
  call void @llvm.dbg.value(metadata i32 %4, metadata !12262, metadata !DIExpression()) #23, !dbg !12937
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12267, metadata !DIExpression()) #23, !dbg !12937
  call void @llvm.dbg.value(metadata i32 %4, metadata !12270, metadata !DIExpression()) #23, !dbg !12939
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !12941, !srcloc !12276
  call void @llvm.dbg.value(metadata i32 1, metadata !12908, metadata !DIExpression()), !dbg !12913
  call void @llvm.dbg.value(metadata i32 undef, metadata !12908, metadata !DIExpression()), !dbg !12913
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12942
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !12944
  br i1 %15, label %16, label %17, !dbg !12945

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !12946
  br label %17, !dbg !12948

17:                                               ; preds = %16, %10
  ret void, !dbg !12949
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12950 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12952, metadata !DIExpression()), !dbg !12953
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12954
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !12955
  ret i32 %3, !dbg !12956
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !12957 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12959, metadata !DIExpression()), !dbg !12960
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12961
  %3 = load i8, i8* %2, align 1, !dbg !12962
  %4 = or i8 %3, 16, !dbg !12962
  store i8 %4, i8* %2, align 1, !dbg !12962
  ret void, !dbg !12963
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !12964 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12965, !srcloc !12250
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12965
  call void @llvm.dbg.value(metadata i32 %2, metadata !12247, metadata !DIExpression()) #23, !dbg !12967
  call void @llvm.dbg.value(metadata i32 undef, metadata !12248, metadata !DIExpression()) #23, !dbg !12967
  tail call void @z_reschedule_irqlock(i32 noundef %2) #25, !dbg !12968
  ret void, !dbg !12969
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !12970 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12972, metadata !DIExpression()), !dbg !12973
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #25, !dbg !12974
  br i1 %2, label %3, label %5, !dbg !12976

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #25, !dbg !12977
  br label %6, !dbg !12979

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !12270, metadata !DIExpression()) #23, !dbg !12980
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !12983, !srcloc !12276
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !12984
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12985 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12987, metadata !DIExpression()), !dbg !12989
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12235, metadata !DIExpression()) #23, !dbg !12990
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12992, !srcloc !12250
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12992
  call void @llvm.dbg.value(metadata i32 %3, metadata !12247, metadata !DIExpression()) #23, !dbg !12994
  call void @llvm.dbg.value(metadata i32 undef, metadata !12248, metadata !DIExpression()) #23, !dbg !12994
  call void @llvm.dbg.value(metadata i32 %3, metadata !12241, metadata !DIExpression()) #23, !dbg !12990
  call void @llvm.dbg.value(metadata i32 %3, metadata !12988, metadata !DIExpression()), !dbg !12989
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #25, !dbg !12995
  br i1 %4, label %6, label %5, !dbg !12997

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !12262, metadata !DIExpression()) #23, !dbg !12998
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12267, metadata !DIExpression()) #23, !dbg !12998
  call void @llvm.dbg.value(metadata i32 %3, metadata !12270, metadata !DIExpression()) #23, !dbg !13001
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13003, !srcloc !12276
  br label %8, !dbg !13004

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #25, !dbg !13005
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !13006
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !13007
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #25, !dbg !13007
  br label %8, !dbg !13008

8:                                                ; preds = %6, %5
  ret void, !dbg !13008
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !13009 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13011, metadata !DIExpression()), !dbg !13012
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13013
  %3 = load i8, i8* %2, align 1, !dbg !13013
  %4 = and i8 %3, 16, !dbg !13014
  %5 = icmp ne i8 %4, 0, !dbg !13015
  ret i1 %5, !dbg !13016
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !13017 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13019, metadata !DIExpression()), !dbg !13020
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13021
  %3 = load i8, i8* %2, align 1, !dbg !13022
  %4 = and i8 %3, -17, !dbg !13022
  store i8 %4, i8* %2, align 1, !dbg !13022
  ret void, !dbg !13023
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !13024 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13034, metadata !DIExpression()), !dbg !13038
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13032, metadata !DIExpression()), !dbg !13038
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !13033, metadata !DIExpression()), !dbg !13038
  call void @llvm.dbg.value(metadata i32 0, metadata !13035, metadata !DIExpression()), !dbg !13039
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12235, metadata !DIExpression()) #23, !dbg !13040
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13042, !srcloc !12250
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !13042
  call void @llvm.dbg.value(metadata i32 %5, metadata !12247, metadata !DIExpression()) #23, !dbg !13044
  call void @llvm.dbg.value(metadata i32 undef, metadata !12248, metadata !DIExpression()) #23, !dbg !13044
  call void @llvm.dbg.value(metadata i32 %5, metadata !12241, metadata !DIExpression()) #23, !dbg !13040
  call void @llvm.dbg.value(metadata i32 %5, metadata !13037, metadata !DIExpression()), !dbg !13039
  call void @llvm.dbg.value(metadata i32 undef, metadata !13035, metadata !DIExpression()), !dbg !13039
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #25, !dbg !13045
  call void @llvm.dbg.value(metadata i32 %5, metadata !12262, metadata !DIExpression()) #23, !dbg !13048
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12267, metadata !DIExpression()) #23, !dbg !13048
  call void @llvm.dbg.value(metadata i32 %5, metadata !12270, metadata !DIExpression()) #23, !dbg !13050
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #23, !dbg !13052, !srcloc !12276
  call void @llvm.dbg.value(metadata i32 1, metadata !13035, metadata !DIExpression()), !dbg !13039
  call void @llvm.dbg.value(metadata i32 undef, metadata !13035, metadata !DIExpression()), !dbg !13039
  ret void, !dbg !13053
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !13054 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13058, metadata !DIExpression()), !dbg !13059
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13056, metadata !DIExpression()), !dbg !13059
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !13057, metadata !DIExpression()), !dbg !13059
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #25, !dbg !13060
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #25, !dbg !13061
  ret void, !dbg !13062
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !13063 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13067, metadata !DIExpression()), !dbg !13069
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !13068, metadata !DIExpression()), !dbg !13069
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #25, !dbg !13070
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #25, !dbg !13071
  %3 = icmp eq %union.anon* %1, null, !dbg !13072
  br i1 %3, label %21, label %4, !dbg !13074

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !13075
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !13077
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !13078
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !12435, metadata !DIExpression()) #23, !dbg !13079
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12441, metadata !DIExpression()) #23, !dbg !13079
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #24, !dbg !13081
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !12442, metadata !DIExpression()) #23, !dbg !13079
  %8 = icmp eq %struct._dnode* %7, null, !dbg !13082
  br i1 %8, label %19, label %9, !dbg !13081

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !12442, metadata !DIExpression()) #23, !dbg !13079
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !13083
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !12442, metadata !DIExpression()) #23, !dbg !13079
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #24, !dbg !13084
  %13 = icmp sgt i32 %12, 0, !dbg !13085
  br i1 %13, label %14, label %16, !dbg !13086

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13087
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #24, !dbg !13088
  br label %21, !dbg !13089

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #24, !dbg !13082
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !12442, metadata !DIExpression()) #23, !dbg !13079
  %18 = icmp eq %struct._dnode* %17, null, !dbg !13082
  br i1 %18, label %19, label %9, !dbg !13081, !llvm.loop !13090

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13092
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #24, !dbg !13093
  br label %21, !dbg !13094

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !13095
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13096 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13101, metadata !DIExpression()), !dbg !13102
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13100, metadata !DIExpression()), !dbg !13102
  %4 = icmp eq i64 %3, -1, !dbg !13103
  br i1 %4, label %6, label %5, !dbg !13105

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.136(%struct.k_thread* noundef %0, [1 x i64] %1) #25, !dbg !13106
  br label %6, !dbg !13108

6:                                                ; preds = %5, %2
  ret void, !dbg !13109
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.136(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13110 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13113, metadata !DIExpression()), !dbg !13114
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13112, metadata !DIExpression()), !dbg !13114
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13115
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #24, !dbg !13116
  ret void, !dbg !13117
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !13118 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13120, metadata !DIExpression()), !dbg !13128
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !13129
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !13129
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !13121, metadata !DIExpression()), !dbg !13128
  call void @llvm.dbg.value(metadata i32 0, metadata !13122, metadata !DIExpression()), !dbg !13130
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12235, metadata !DIExpression()) #23, !dbg !13131
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13133, !srcloc !12250
  call void @llvm.dbg.value(metadata i32 undef, metadata !12247, metadata !DIExpression()) #23, !dbg !13135
  call void @llvm.dbg.value(metadata i32 undef, metadata !12248, metadata !DIExpression()) #23, !dbg !13135
  call void @llvm.dbg.value(metadata i32 undef, metadata !12241, metadata !DIExpression()) #23, !dbg !13131
  call void @llvm.dbg.value(metadata i32 undef, metadata !13124, metadata !DIExpression()), !dbg !13130
  call void @llvm.dbg.value(metadata i32 undef, metadata !13122, metadata !DIExpression()), !dbg !13130
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !13136
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !13137
  %7 = load i8, i8* %6, align 1, !dbg !13137
  %8 = and i8 %7, 40, !dbg !13138
  %9 = icmp eq i8 %8, 0, !dbg !13138
  call void @llvm.dbg.value(metadata i1 %9, metadata !13125, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13139
  br i1 %9, label %10, label %17, !dbg !13140

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !13141
  %12 = bitcast void (%struct._timeout*)** %11 to %union.anon**, !dbg !13141
  %13 = load %union.anon*, %union.anon** %12, align 8, !dbg !13141
  %14 = icmp eq %union.anon* %13, null, !dbg !13145
  br i1 %14, label %16, label %15, !dbg !13146

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #25, !dbg !13147
  br label %16, !dbg !13149

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.135(%struct.k_thread* noundef nonnull %3) #25, !dbg !13150
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #25, !dbg !13151
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #25, !dbg !13152
  br label %17, !dbg !13153

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !13133
  call void @llvm.dbg.value(metadata i32 %18, metadata !12247, metadata !DIExpression()) #23, !dbg !13135
  call void @llvm.dbg.value(metadata i32 %18, metadata !12241, metadata !DIExpression()) #23, !dbg !13131
  call void @llvm.dbg.value(metadata i32 %18, metadata !13124, metadata !DIExpression()), !dbg !13130
  call void @llvm.dbg.value(metadata i32 undef, metadata !12262, metadata !DIExpression()) #23, !dbg !13154
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12267, metadata !DIExpression()) #23, !dbg !13154
  call void @llvm.dbg.value(metadata i32 undef, metadata !12270, metadata !DIExpression()) #23, !dbg !13156
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !13158, !srcloc !12276
  call void @llvm.dbg.value(metadata i32 1, metadata !13122, metadata !DIExpression()), !dbg !13130
  call void @llvm.dbg.value(metadata i32 undef, metadata !13122, metadata !DIExpression()), !dbg !13130
  ret void, !dbg !13159
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !13160 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13162, metadata !DIExpression()), !dbg !13163
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !13164
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #25, !dbg !13165
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !13166
  store %union.anon* null, %union.anon** %2, align 8, !dbg !13167
  ret void, !dbg !13168
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !13169 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13171, metadata !DIExpression()), !dbg !13172
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13173
  %3 = load i8, i8* %2, align 1, !dbg !13174
  %4 = and i8 %3, -3, !dbg !13174
  store i8 %4, i8* %2, align 1, !dbg !13174
  ret void, !dbg !13175
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13176 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13178, metadata !DIExpression()), !dbg !13179
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !13180
  br i1 %2, label %3, label %7, !dbg !13182

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12404, metadata !DIExpression()) #23, !dbg !13183
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13186
  %5 = load i8, i8* %4, align 1, !dbg !13187
  %6 = and i8 %5, 127, !dbg !13187
  store i8 %6, i8* %4, align 1, !dbg !13187
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12412, metadata !DIExpression()) #23, !dbg !13188
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !13190
  br label %7, !dbg !13191

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13192
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !13193
  %10 = zext i1 %9 to i32, !dbg !13193
  tail call fastcc void @update_cache(i32 noundef %10) #25, !dbg !13194
  ret void, !dbg !13195
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !13196 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13198, metadata !DIExpression()), !dbg !13199
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13200
  %3 = load i8, i8* %2, align 1, !dbg !13201
  %4 = or i8 %3, 2, !dbg !13201
  store i8 %4, i8* %2, align 1, !dbg !13201
  ret void, !dbg !13202
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #22 !dbg !13203 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13205, metadata !DIExpression()), !dbg !13209
  call void @llvm.dbg.value(metadata i32 0, metadata !13206, metadata !DIExpression()), !dbg !13210
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12235, metadata !DIExpression()) #23, !dbg !13211
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13213, !srcloc !12250
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13213
  call void @llvm.dbg.value(metadata i32 %3, metadata !12247, metadata !DIExpression()) #23, !dbg !13215
  call void @llvm.dbg.value(metadata i32 undef, metadata !12248, metadata !DIExpression()) #23, !dbg !13215
  call void @llvm.dbg.value(metadata i32 %3, metadata !12241, metadata !DIExpression()) #23, !dbg !13211
  call void @llvm.dbg.value(metadata i32 %3, metadata !13208, metadata !DIExpression()), !dbg !13210
  call void @llvm.dbg.value(metadata i32 undef, metadata !13206, metadata !DIExpression()), !dbg !13210
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !13216
  call void @llvm.dbg.value(metadata i32 %3, metadata !12262, metadata !DIExpression()) #23, !dbg !13219
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12267, metadata !DIExpression()) #23, !dbg !13219
  call void @llvm.dbg.value(metadata i32 %3, metadata !12270, metadata !DIExpression()) #23, !dbg !13221
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13223, !srcloc !12276
  call void @llvm.dbg.value(metadata i32 1, metadata !13206, metadata !DIExpression()), !dbg !13210
  call void @llvm.dbg.value(metadata i32 undef, metadata !13206, metadata !DIExpression()), !dbg !13210
  ret void, !dbg !13224
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !13225 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13231, metadata !DIExpression()), !dbg !13236
  call void @llvm.dbg.value(metadata i32 %0, metadata !13229, metadata !DIExpression()), !dbg !13236
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !13230, metadata !DIExpression()), !dbg !13236
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13237
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #25, !dbg !13238
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13239
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !13240
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #25, !dbg !13241
  call void @llvm.dbg.value(metadata i32 %6, metadata !13232, metadata !DIExpression()), !dbg !13236
  call void @llvm.dbg.value(metadata i32 0, metadata !13233, metadata !DIExpression()), !dbg !13242
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12235, metadata !DIExpression()) #23, !dbg !13243
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13245, !srcloc !12250
  call void @llvm.dbg.value(metadata i32 undef, metadata !12247, metadata !DIExpression()) #23, !dbg !13247
  call void @llvm.dbg.value(metadata i32 undef, metadata !12248, metadata !DIExpression()) #23, !dbg !13247
  call void @llvm.dbg.value(metadata i32 undef, metadata !12241, metadata !DIExpression()) #23, !dbg !13243
  call void @llvm.dbg.value(metadata i32 undef, metadata !13235, metadata !DIExpression()), !dbg !13242
  call void @llvm.dbg.value(metadata i32 undef, metadata !13233, metadata !DIExpression()), !dbg !13242
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !13248
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13252
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !13253
  br i1 %10, label %11, label %12, !dbg !13254

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !13255
  br label %12, !dbg !13257

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !13245
  call void @llvm.dbg.value(metadata i32 %13, metadata !12247, metadata !DIExpression()) #23, !dbg !13247
  call void @llvm.dbg.value(metadata i32 %13, metadata !12241, metadata !DIExpression()) #23, !dbg !13243
  call void @llvm.dbg.value(metadata i32 %13, metadata !13235, metadata !DIExpression()), !dbg !13242
  call void @llvm.dbg.value(metadata i32 undef, metadata !12262, metadata !DIExpression()) #23, !dbg !13258
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12267, metadata !DIExpression()) #23, !dbg !13258
  call void @llvm.dbg.value(metadata i32 undef, metadata !12270, metadata !DIExpression()) #23, !dbg !13260
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !13262, !srcloc !12276
  call void @llvm.dbg.value(metadata i32 1, metadata !13233, metadata !DIExpression()), !dbg !13242
  call void @llvm.dbg.value(metadata i32 undef, metadata !13233, metadata !DIExpression()), !dbg !13242
  ret i32 %6, !dbg !13263
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !13264 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13269, metadata !DIExpression()), !dbg !13272
  call void @llvm.dbg.value(metadata i64 undef, metadata !13271, metadata !DIExpression()), !dbg !13272
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13268, metadata !DIExpression()), !dbg !13272
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !13270, metadata !DIExpression()), !dbg !13272
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13273
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !13274
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12235, metadata !DIExpression()) #23, !dbg !13275
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13277, !srcloc !12250
  call void @llvm.dbg.value(metadata i32 undef, metadata !12247, metadata !DIExpression()) #23, !dbg !13279
  call void @llvm.dbg.value(metadata i32 undef, metadata !12248, metadata !DIExpression()) #23, !dbg !13279
  call void @llvm.dbg.value(metadata i32 undef, metadata !12241, metadata !DIExpression()) #23, !dbg !13275
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13280
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %union.anon* noundef %2, [1 x i64] %3) #25, !dbg !13281
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !12846, metadata !DIExpression()) #23, !dbg !13282
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12851, metadata !DIExpression()) #23, !dbg !13282
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #24, !dbg !13284
  ret i32 %9, !dbg !13285
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !13286 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13290, metadata !DIExpression()), !dbg !13295
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13291, metadata !DIExpression()), !dbg !13295
  call void @llvm.dbg.value(metadata i32 0, metadata !13292, metadata !DIExpression()), !dbg !13296
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12235, metadata !DIExpression()) #23, !dbg !13297
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13299, !srcloc !12250
  call void @llvm.dbg.value(metadata i32 undef, metadata !12247, metadata !DIExpression()) #23, !dbg !13301
  call void @llvm.dbg.value(metadata i32 undef, metadata !12248, metadata !DIExpression()) #23, !dbg !13301
  call void @llvm.dbg.value(metadata i32 undef, metadata !12241, metadata !DIExpression()) #23, !dbg !13297
  call void @llvm.dbg.value(metadata i32 undef, metadata !13294, metadata !DIExpression()), !dbg !13296
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13291, metadata !DIExpression()), !dbg !13295
  call void @llvm.dbg.value(metadata i32 undef, metadata !13292, metadata !DIExpression()), !dbg !13296
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #25, !dbg !13302
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13291, metadata !DIExpression()), !dbg !13295
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !13305
  br i1 %5, label %7, label %6, !dbg !13307

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #25, !dbg !13308
  br label %7, !dbg !13310

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !13299
  call void @llvm.dbg.value(metadata i32 %8, metadata !12247, metadata !DIExpression()) #23, !dbg !13301
  call void @llvm.dbg.value(metadata i32 %8, metadata !12241, metadata !DIExpression()) #23, !dbg !13297
  call void @llvm.dbg.value(metadata i32 %8, metadata !13294, metadata !DIExpression()), !dbg !13296
  call void @llvm.dbg.value(metadata i32 undef, metadata !12262, metadata !DIExpression()) #23, !dbg !13311
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12267, metadata !DIExpression()) #23, !dbg !13311
  call void @llvm.dbg.value(metadata i32 undef, metadata !12270, metadata !DIExpression()) #23, !dbg !13313
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !13315, !srcloc !12276
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13291, metadata !DIExpression()), !dbg !13295
  call void @llvm.dbg.value(metadata i32 undef, metadata !13292, metadata !DIExpression()), !dbg !13296
  ret %struct.k_thread* %4, !dbg !13316
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !13317 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13319, metadata !DIExpression()), !dbg !13324
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13320, metadata !DIExpression()), !dbg !13324
  call void @llvm.dbg.value(metadata i32 0, metadata !13321, metadata !DIExpression()), !dbg !13325
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12235, metadata !DIExpression()) #23, !dbg !13326
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13328, !srcloc !12250
  call void @llvm.dbg.value(metadata i32 undef, metadata !12247, metadata !DIExpression()) #23, !dbg !13330
  call void @llvm.dbg.value(metadata i32 undef, metadata !12248, metadata !DIExpression()) #23, !dbg !13330
  call void @llvm.dbg.value(metadata i32 undef, metadata !12241, metadata !DIExpression()) #23, !dbg !13326
  call void @llvm.dbg.value(metadata i32 undef, metadata !13323, metadata !DIExpression()), !dbg !13325
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13320, metadata !DIExpression()), !dbg !13324
  call void @llvm.dbg.value(metadata i32 undef, metadata !13321, metadata !DIExpression()), !dbg !13325
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #25, !dbg !13331
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13320, metadata !DIExpression()), !dbg !13324
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !13334
  br i1 %5, label %8, label %6, !dbg !13336

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #25, !dbg !13337
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #25, !dbg !13339
  br label %8, !dbg !13340

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !13328
  call void @llvm.dbg.value(metadata i32 %9, metadata !12247, metadata !DIExpression()) #23, !dbg !13330
  call void @llvm.dbg.value(metadata i32 %9, metadata !12241, metadata !DIExpression()) #23, !dbg !13326
  call void @llvm.dbg.value(metadata i32 %9, metadata !13323, metadata !DIExpression()), !dbg !13325
  call void @llvm.dbg.value(metadata i32 undef, metadata !12262, metadata !DIExpression()) #23, !dbg !13341
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12267, metadata !DIExpression()) #23, !dbg !13341
  call void @llvm.dbg.value(metadata i32 undef, metadata !12270, metadata !DIExpression()) #23, !dbg !13343
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !13345, !srcloc !12276
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13320, metadata !DIExpression()), !dbg !13324
  call void @llvm.dbg.value(metadata i32 undef, metadata !13321, metadata !DIExpression()), !dbg !13325
  ret %struct.k_thread* %4, !dbg !13346
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13347 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13349, metadata !DIExpression()), !dbg !13350
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13205, metadata !DIExpression()) #23, !dbg !13351
  call void @llvm.dbg.value(metadata i32 0, metadata !13206, metadata !DIExpression()) #23, !dbg !13353
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12235, metadata !DIExpression()) #23, !dbg !13354
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13356, !srcloc !12250
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13356
  call void @llvm.dbg.value(metadata i32 %3, metadata !12247, metadata !DIExpression()) #23, !dbg !13358
  call void @llvm.dbg.value(metadata i32 undef, metadata !12248, metadata !DIExpression()) #23, !dbg !13358
  call void @llvm.dbg.value(metadata i32 %3, metadata !12241, metadata !DIExpression()) #23, !dbg !13354
  call void @llvm.dbg.value(metadata i32 %3, metadata !13208, metadata !DIExpression()) #23, !dbg !13353
  call void @llvm.dbg.value(metadata i32 undef, metadata !13206, metadata !DIExpression()) #23, !dbg !13353
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !13359
  call void @llvm.dbg.value(metadata i32 %3, metadata !12262, metadata !DIExpression()) #23, !dbg !13360
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12267, metadata !DIExpression()) #23, !dbg !13360
  call void @llvm.dbg.value(metadata i32 %3, metadata !12270, metadata !DIExpression()) #23, !dbg !13362
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13364, !srcloc !12276
  call void @llvm.dbg.value(metadata i32 1, metadata !13206, metadata !DIExpression()) #23, !dbg !13353
  call void @llvm.dbg.value(metadata i32 undef, metadata !13206, metadata !DIExpression()) #23, !dbg !13353
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !13365
  ret void, !dbg !13366
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13367 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13369, metadata !DIExpression()), !dbg !13375
  call void @llvm.dbg.value(metadata i32 %1, metadata !13370, metadata !DIExpression()), !dbg !13375
  call void @llvm.dbg.value(metadata i8 0, metadata !13371, metadata !DIExpression()), !dbg !13375
  call void @llvm.dbg.value(metadata i32 0, metadata !13372, metadata !DIExpression()), !dbg !13376
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12235, metadata !DIExpression()) #23, !dbg !13377
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13379, !srcloc !12250
  call void @llvm.dbg.value(metadata i32 undef, metadata !12247, metadata !DIExpression()) #23, !dbg !13381
  call void @llvm.dbg.value(metadata i32 undef, metadata !12248, metadata !DIExpression()) #23, !dbg !13381
  call void @llvm.dbg.value(metadata i32 undef, metadata !12241, metadata !DIExpression()) #23, !dbg !13377
  call void @llvm.dbg.value(metadata i32 undef, metadata !13374, metadata !DIExpression()), !dbg !13376
  call void @llvm.dbg.value(metadata i8 poison, metadata !13371, metadata !DIExpression()), !dbg !13375
  call void @llvm.dbg.value(metadata i32 undef, metadata !13372, metadata !DIExpression()), !dbg !13376
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #25, !dbg !13382
  call void @llvm.dbg.value(metadata i1 %6, metadata !13371, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13375
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !13385

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12404, metadata !DIExpression()) #23, !dbg !13386
  %11 = load i8, i8* %4, align 1, !dbg !13392
  %12 = and i8 %11, 127, !dbg !13392
  store i8 %12, i8* %4, align 1, !dbg !13392
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12412, metadata !DIExpression()) #23, !dbg !13393
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !13395
  store i8 %9, i8* %8, align 2, !dbg !13396
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12421, metadata !DIExpression()) #23, !dbg !13397
  %13 = load i8, i8* %4, align 1, !dbg !13399
  %14 = or i8 %13, -128, !dbg !13399
  store i8 %14, i8* %4, align 1, !dbg !13399
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12428, metadata !DIExpression()) #23, !dbg !13400
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12435, metadata !DIExpression()) #23, !dbg !13402
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12441, metadata !DIExpression()) #23, !dbg !13402
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !13404
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !12442, metadata !DIExpression()) #23, !dbg !13402
  %16 = icmp eq %struct._dnode* %15, null, !dbg !13405
  br i1 %16, label %26, label %17, !dbg !13404

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !12442, metadata !DIExpression()) #23, !dbg !13402
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !13406
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !12442, metadata !DIExpression()) #23, !dbg !13402
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #24, !dbg !13407
  %21 = icmp sgt i32 %20, 0, !dbg !13408
  br i1 %21, label %22, label %23, !dbg !13409

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #24, !dbg !13410
  br label %27, !dbg !13411

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #24, !dbg !13405
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !12442, metadata !DIExpression()) #23, !dbg !13402
  %25 = icmp eq %struct._dnode* %24, null, !dbg !13405
  br i1 %25, label %26, label %17, !dbg !13404, !llvm.loop !13412

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #24, !dbg !13414
  br label %27, !dbg !13415

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !13416
  br label %29, !dbg !13417

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !13418
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !13379
  call void @llvm.dbg.value(metadata i32 %30, metadata !12247, metadata !DIExpression()) #23, !dbg !13381
  call void @llvm.dbg.value(metadata i32 %30, metadata !12241, metadata !DIExpression()) #23, !dbg !13377
  call void @llvm.dbg.value(metadata i32 %30, metadata !13374, metadata !DIExpression()), !dbg !13376
  call void @llvm.dbg.value(metadata i32 undef, metadata !12262, metadata !DIExpression()) #23, !dbg !13420
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12267, metadata !DIExpression()) #23, !dbg !13420
  call void @llvm.dbg.value(metadata i32 undef, metadata !12270, metadata !DIExpression()) #23, !dbg !13422
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #23, !dbg !13424, !srcloc !12276
  call void @llvm.dbg.value(metadata i8 poison, metadata !13371, metadata !DIExpression()), !dbg !13375
  call void @llvm.dbg.value(metadata i32 undef, metadata !13372, metadata !DIExpression()), !dbg !13376
  ret i1 %6, !dbg !13425
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13426 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13430, metadata !DIExpression()), !dbg !13433
  call void @llvm.dbg.value(metadata i32 %1, metadata !13431, metadata !DIExpression()), !dbg !13433
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #25, !dbg !13434
  call void @llvm.dbg.value(metadata i1 %3, metadata !13432, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13433
  br i1 %3, label %4, label %12, !dbg !13435

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13437
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !13438
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !13438
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !13438
  %9 = load i8, i8* %8, align 1, !dbg !13438
  %10 = icmp eq i8 %9, 0, !dbg !13439
  br i1 %10, label %11, label %12, !dbg !13440

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !13441
  br label %12, !dbg !13443

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !13444
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !13445 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13447, metadata !DIExpression()), !dbg !13450
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12235, metadata !DIExpression()) #23, !dbg !13451
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13453, !srcloc !12250
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !13453
  call void @llvm.dbg.value(metadata i32 %2, metadata !12247, metadata !DIExpression()) #23, !dbg !13455
  call void @llvm.dbg.value(metadata i32 undef, metadata !12248, metadata !DIExpression()) #23, !dbg !13455
  call void @llvm.dbg.value(metadata i32 %2, metadata !12241, metadata !DIExpression()) #23, !dbg !13451
  call void @llvm.dbg.value(metadata i32 %2, metadata !13449, metadata !DIExpression()), !dbg !13450
  call void @llvm.dbg.value(metadata i32 undef, metadata !13447, metadata !DIExpression()), !dbg !13450
  tail call fastcc void @z_sched_lock() #25, !dbg !13456
  call void @llvm.dbg.value(metadata i32 %2, metadata !12262, metadata !DIExpression()) #23, !dbg !13459
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12267, metadata !DIExpression()) #23, !dbg !13459
  call void @llvm.dbg.value(metadata i32 %2, metadata !12270, metadata !DIExpression()) #23, !dbg !13461
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !13463, !srcloc !12276
  call void @llvm.dbg.value(metadata i32 1, metadata !13447, metadata !DIExpression()), !dbg !13450
  call void @llvm.dbg.value(metadata i32 undef, metadata !13447, metadata !DIExpression()), !dbg !13450
  ret void, !dbg !13464
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !13465 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13466
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !13467
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !13467
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !13467
  %5 = load i8, i8* %4, align 1, !dbg !13468
  %6 = add i8 %5, -1, !dbg !13468
  store i8 %6, i8* %4, align 1, !dbg !13468
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13469, !srcloc !13471
  ret void, !dbg !13472
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !13473 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13475, metadata !DIExpression()), !dbg !13478
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12235, metadata !DIExpression()) #23, !dbg !13479
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13481, !srcloc !12250
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !13481
  call void @llvm.dbg.value(metadata i32 %2, metadata !12247, metadata !DIExpression()) #23, !dbg !13483
  call void @llvm.dbg.value(metadata i32 undef, metadata !12248, metadata !DIExpression()) #23, !dbg !13483
  call void @llvm.dbg.value(metadata i32 %2, metadata !12241, metadata !DIExpression()) #23, !dbg !13479
  call void @llvm.dbg.value(metadata i32 %2, metadata !13477, metadata !DIExpression()), !dbg !13478
  call void @llvm.dbg.value(metadata i32 undef, metadata !13475, metadata !DIExpression()), !dbg !13478
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13484
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !13487
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !13487
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !13487
  %7 = load i8, i8* %6, align 1, !dbg !13488
  %8 = add i8 %7, 1, !dbg !13488
  store i8 %8, i8* %6, align 1, !dbg !13488
  tail call fastcc void @update_cache(i32 noundef 0) #25, !dbg !13489
  call void @llvm.dbg.value(metadata i32 %2, metadata !12262, metadata !DIExpression()) #23, !dbg !13490
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12267, metadata !DIExpression()) #23, !dbg !13490
  call void @llvm.dbg.value(metadata i32 %2, metadata !12270, metadata !DIExpression()) #23, !dbg !13492
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !13494, !srcloc !12276
  call void @llvm.dbg.value(metadata i32 1, metadata !13475, metadata !DIExpression()), !dbg !13478
  call void @llvm.dbg.value(metadata i32 undef, metadata !13475, metadata !DIExpression()), !dbg !13478
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !13495
  ret void, !dbg !13496
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #4 !dbg !13497 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13498
  ret %struct.k_thread* %1, !dbg !13499
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #4 !dbg !13500 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !13504, metadata !DIExpression()), !dbg !13509
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !13505, metadata !DIExpression()), !dbg !13509
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !13510
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !13506, metadata !DIExpression()), !dbg !13509
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !13511
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13507, metadata !DIExpression()), !dbg !13509
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #25, !dbg !13512
  call void @llvm.dbg.value(metadata i32 %5, metadata !13508, metadata !DIExpression()), !dbg !13509
  %6 = icmp sgt i32 %5, 0, !dbg !13513
  br i1 %6, label %17, label %7, !dbg !13515

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !13516
  br i1 %8, label %17, label %9, !dbg !13518

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !13519
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !13519
  %12 = load i32, i32* %11, align 8, !dbg !13519
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !13521
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !13521
  %15 = load i32, i32* %14, align 8, !dbg !13521
  %16 = icmp ult i32 %12, %15, !dbg !13522
  br label %17, !dbg !13523

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !13524
  ret i1 %18, !dbg !13525
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !13526 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !13543, metadata !DIExpression()), !dbg !13558
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13544, metadata !DIExpression()), !dbg !13558
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !13559
  %5 = load i32, i32* %4, align 4, !dbg !13560
  %6 = add nsw i32 %5, 1, !dbg !13560
  store i32 %6, i32* %4, align 4, !dbg !13560
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !13561
  store i32 %5, i32* %7, align 8, !dbg !13562
  %8 = load i32, i32* %4, align 4, !dbg !13563
  %9 = icmp eq i32 %8, 0, !dbg !13564
  br i1 %9, label %10, label %32, !dbg !13565

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !13566
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #23, !dbg !13566
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !13546, metadata !DIExpression()), !dbg !13566
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !13566
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !13566
  %14 = load i32, i32* %13, align 4, !dbg !13566
  %15 = shl i32 %14, 2, !dbg !13566
  %16 = alloca i8, i32 %15, align 8, !dbg !13566
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !13566
  store i8* %16, i8** %17, align 4, !dbg !13566
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !13566
  %19 = alloca i8, i32 %14, align 8, !dbg !13566
  store i8* %19, i8** %18, align 4, !dbg !13566
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !13566
  store i32 -1, i32* %20, align 4, !dbg !13566
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #24, !dbg !13567
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !13555, metadata !DIExpression()), !dbg !13568
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !13545, metadata !DIExpression()), !dbg !13558
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !13569
  br i1 %22, label %23, label %24, !dbg !13566

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #23, !dbg !13569
  br label %32, !dbg !13570

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !13545, metadata !DIExpression()), !dbg !13558
  %26 = load i32, i32* %4, align 4, !dbg !13571
  %27 = add nsw i32 %26, 1, !dbg !13571
  store i32 %27, i32* %4, align 4, !dbg !13571
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !13573
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !13573
  store i32 %26, i32* %29, align 8, !dbg !13574
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #24, !dbg !13567
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !13555, metadata !DIExpression()), !dbg !13568
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !13545, metadata !DIExpression()), !dbg !13558
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !13569
  br i1 %31, label %23, label %24, !dbg !13566, !llvm.loop !13575

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !13577
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !13578
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #24, !dbg !13579
  ret void, !dbg !13580
}

; Function Attrs: optsize
declare !dbg !13581 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !13586 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !13589 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !13591, metadata !DIExpression()), !dbg !13593
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13592, metadata !DIExpression()), !dbg !13593
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !13594
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !13595
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #24, !dbg !13596
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !13597
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !13597
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !13599
  br i1 %7, label %8, label %10, !dbg !13600

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !13601
  store i32 0, i32* %9, align 4, !dbg !13603
  br label %10, !dbg !13604

10:                                               ; preds = %8, %2
  ret void, !dbg !13605
}

; Function Attrs: optsize
declare !dbg !13606 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !13607 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !13611, metadata !DIExpression()), !dbg !13614
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13612, metadata !DIExpression()), !dbg !13614
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !13615
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #25, !dbg !13616
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !13613, metadata !DIExpression()), !dbg !13614
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13612, metadata !DIExpression()), !dbg !13614
  ret %struct.k_thread* %4, !dbg !13617
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !13618 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !13622, metadata !DIExpression()), !dbg !13623
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #24, !dbg !13624
  ret %struct.rbnode* %2, !dbg !13625
}

; Function Attrs: optsize
declare !dbg !13626 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #16 !dbg !13629 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !13641, metadata !DIExpression()), !dbg !13645
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !13646
  %3 = load i32, i32* %2, align 4, !dbg !13646
  %4 = icmp eq i32 %3, 0, !dbg !13648
  br i1 %4, label %10, label %5, !dbg !13649

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13642, metadata !DIExpression()), !dbg !13645
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !13650, !range !6423
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !13651
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !13643, metadata !DIExpression()), !dbg !13645
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #25, !dbg !13652
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !13644, metadata !DIExpression()), !dbg !13645
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !13642, metadata !DIExpression()), !dbg !13645
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !13645
  ret %struct.k_thread* %11, !dbg !13653
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !13654 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13658, metadata !DIExpression()), !dbg !13661
  call void @llvm.dbg.value(metadata i32 0, metadata !13659, metadata !DIExpression()), !dbg !13661
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !13662
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13660, metadata !DIExpression()), !dbg !13661
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !13663
  br i1 %3, label %8, label %4, !dbg !13664

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !13665
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !13667
  call void @llvm.dbg.value(metadata i32 1, metadata !13659, metadata !DIExpression()), !dbg !13661
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !13662
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13660, metadata !DIExpression()), !dbg !13661
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !13663
  br i1 %7, label %8, label %4, !dbg !13664, !llvm.loop !13668

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !13661
  ret i32 %9, !dbg !13670
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #4 !dbg !13671 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13673, metadata !DIExpression()), !dbg !13674
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !13675
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #25, !dbg !13676
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !13677
  ret %struct.k_thread* %4, !dbg !13678
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #5 !dbg !13679 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !13688, metadata !DIExpression()), !dbg !13689
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !13690
  tail call fastcc void @sys_dlist_init.143(%struct._dnode* noundef nonnull %2) #25, !dbg !13691
  ret void, !dbg !13692
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.143(%struct._dnode* noundef %0) unnamed_addr #5 !dbg !13693 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13697, metadata !DIExpression()), !dbg !13698
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13699
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13700
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13701
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13702
  ret void, !dbg !13703
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !13704 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #25, !dbg !13705
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #25, !dbg !13706
  ret void, !dbg !13707
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #4 !dbg !13708 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13713, metadata !DIExpression()), !dbg !13714
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13715
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !13715
  %4 = load i8, i8* %3, align 2, !dbg !13715
  %5 = sext i8 %4 to i32, !dbg !13716
  ret i32 %5, !dbg !13717
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13718 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13722, metadata !DIExpression()), !dbg !13725
  call void @llvm.dbg.value(metadata i32 %1, metadata !13723, metadata !DIExpression()), !dbg !13725
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13724, metadata !DIExpression()), !dbg !13725
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #25, !dbg !13726
  ret void, !dbg !13727
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !13728 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #25, !dbg !13729
  br i1 %1, label %8, label %2, !dbg !13730

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #24, !dbg !13731
  br i1 %3, label %8, label %4, !dbg !13732

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13733
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #25, !dbg !13734
  %7 = xor i1 %6, true, !dbg !13732
  br label %8, !dbg !13732

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !13735
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #4 !dbg !13736 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !13737, !range !5843
  %2 = icmp eq i8 %1, 0, !dbg !13737
  ret i1 %2, !dbg !13738
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !13739 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12235, metadata !DIExpression()) #23, !dbg !13742
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13744, !srcloc !12250
  call void @llvm.dbg.value(metadata i32 undef, metadata !12247, metadata !DIExpression()) #23, !dbg !13746
  call void @llvm.dbg.value(metadata i32 undef, metadata !12248, metadata !DIExpression()) #23, !dbg !13746
  call void @llvm.dbg.value(metadata i32 undef, metadata !12241, metadata !DIExpression()) #23, !dbg !13742
  call void @llvm.dbg.value(metadata i32 undef, metadata !13741, metadata !DIExpression()), !dbg !13747
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13748
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12404, metadata !DIExpression()) #23, !dbg !13751
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !13753
  %4 = load i8, i8* %3, align 1, !dbg !13754
  %5 = and i8 %4, 127, !dbg !13754
  store i8 %5, i8* %3, align 1, !dbg !13754
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12412, metadata !DIExpression()) #23, !dbg !13755
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #24, !dbg !13757
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13758
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !12421, metadata !DIExpression()) #23, !dbg !13759
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !13761
  %8 = load i8, i8* %7, align 1, !dbg !13762
  %9 = or i8 %8, -128, !dbg !13762
  store i8 %9, i8* %7, align 1, !dbg !13762
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !12428, metadata !DIExpression()) #23, !dbg !13763
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12435, metadata !DIExpression()) #23, !dbg !13765
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !12441, metadata !DIExpression()) #23, !dbg !13765
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !13767
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !12442, metadata !DIExpression()) #23, !dbg !13765
  %11 = icmp eq %struct._dnode* %10, null, !dbg !13768
  br i1 %11, label %22, label %12, !dbg !13767

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !12442, metadata !DIExpression()) #23, !dbg !13765
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !13769
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !12442, metadata !DIExpression()) #23, !dbg !13765
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #24, !dbg !13770
  %16 = icmp sgt i32 %15, 0, !dbg !13771
  br i1 %16, label %17, label %19, !dbg !13772

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !13773
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #24, !dbg !13774
  br label %24, !dbg !13775

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #24, !dbg !13768
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !12442, metadata !DIExpression()) #23, !dbg !13765
  %21 = icmp eq %struct._dnode* %20, null, !dbg !13768
  br i1 %21, label %22, label %12, !dbg !13767, !llvm.loop !13776

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !13778
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #24, !dbg !13779
  br label %24, !dbg !13780

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !13744
  call void @llvm.dbg.value(metadata i32 %25, metadata !12247, metadata !DIExpression()) #23, !dbg !13746
  call void @llvm.dbg.value(metadata i32 %25, metadata !12241, metadata !DIExpression()) #23, !dbg !13742
  call void @llvm.dbg.value(metadata i32 %25, metadata !13741, metadata !DIExpression()), !dbg !13747
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !13781
  call void @llvm.dbg.value(metadata i32 undef, metadata !12846, metadata !DIExpression()) #23, !dbg !13782
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12851, metadata !DIExpression()) #23, !dbg !13782
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #24, !dbg !13784
  ret void, !dbg !13785
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !13786 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !13790, metadata !DIExpression()), !dbg !13793
  %3 = icmp eq i64 %2, -1, !dbg !13794
  br i1 %3, label %4, label %6, !dbg !13796

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13797
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #25, !dbg !13799
  br label %11, !dbg !13800

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !13791, metadata !DIExpression()), !dbg !13793
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #25, !dbg !13801
  %8 = sext i32 %7 to i64, !dbg !13801
  call void @llvm.dbg.value(metadata i64 %8, metadata !13791, metadata !DIExpression()), !dbg !13793
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #25, !dbg !13802
  %10 = trunc i64 %9 to i32, !dbg !13802
  call void @llvm.dbg.value(metadata i32 %10, metadata !13792, metadata !DIExpression()), !dbg !13793
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !13793
  ret i32 %12, !dbg !13803
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13804 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13808, metadata !DIExpression()), !dbg !13809
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13810, !srcloc !13812
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #25, !dbg !13813
  ret void, !dbg !13814
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !13815 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13819, metadata !DIExpression()), !dbg !13823
  %2 = icmp eq i64 %0, 0, !dbg !13824
  br i1 %2, label %3, label %4, !dbg !13826

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #25, !dbg !13827
  br label %29, !dbg !13829

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !13821, metadata !DIExpression()), !dbg !13823
  %5 = icmp sgt i64 %0, -3, !dbg !13830
  br i1 %5, label %6, label %10, !dbg !13832

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #24, !dbg !13833
  %8 = trunc i64 %0 to i32, !dbg !13835
  %9 = add i32 %7, %8, !dbg !13835
  call void @llvm.dbg.value(metadata i32 %9, metadata !13820, metadata !DIExpression()), !dbg !13823
  br label %13, !dbg !13836

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !13837
  %12 = sub i32 -2, %11, !dbg !13837
  call void @llvm.dbg.value(metadata i32 %12, metadata !13820, metadata !DIExpression()), !dbg !13823
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !13839
  call void @llvm.dbg.value(metadata i32 %14, metadata !13820, metadata !DIExpression()), !dbg !13823
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12235, metadata !DIExpression()) #23, !dbg !13840
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13842, !srcloc !12250
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !13842
  call void @llvm.dbg.value(metadata i32 %16, metadata !12247, metadata !DIExpression()) #23, !dbg !13844
  call void @llvm.dbg.value(metadata i32 undef, metadata !12248, metadata !DIExpression()) #23, !dbg !13844
  call void @llvm.dbg.value(metadata i32 %16, metadata !12241, metadata !DIExpression()) #23, !dbg !13840
  call void @llvm.dbg.value(metadata i32 %16, metadata !13822, metadata !DIExpression()), !dbg !13823
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13845
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !13846
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #25, !dbg !13847
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13848
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !13849
  tail call fastcc void @z_add_thread_timeout.136(%struct.k_thread* noundef %18, [1 x i64] %19) #25, !dbg !13849
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13850
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #25, !dbg !13851
  call void @llvm.dbg.value(metadata i32 %16, metadata !12846, metadata !DIExpression()) #23, !dbg !13852
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12851, metadata !DIExpression()) #23, !dbg !13852
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #24, !dbg !13854
  %22 = zext i32 %14 to i64, !dbg !13855
  %23 = tail call i32 @sys_clock_tick_get_32() #24, !dbg !13856
  %24 = zext i32 %23 to i64, !dbg !13856
  %25 = sub nsw i64 %22, %24, !dbg !13857
  call void @llvm.dbg.value(metadata i64 %25, metadata !13819, metadata !DIExpression()), !dbg !13823
  %26 = icmp sgt i64 %25, 0, !dbg !13858
  %27 = select i1 %26, i64 %25, i64 0, !dbg !13858
  %28 = trunc i64 %27 to i32, !dbg !13858
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !13823
  ret i32 %30, !dbg !13859
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #12 !dbg !13860 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13862, metadata !DIExpression()), !dbg !13863
  call void @llvm.dbg.value(metadata i64 %0, metadata !12282, metadata !DIExpression()), !dbg !13864
  call void @llvm.dbg.value(metadata i32 10000, metadata !12285, metadata !DIExpression()), !dbg !13864
  call void @llvm.dbg.value(metadata i32 1000, metadata !12286, metadata !DIExpression()), !dbg !13864
  call void @llvm.dbg.value(metadata i8 1, metadata !12287, metadata !DIExpression()), !dbg !13864
  call void @llvm.dbg.value(metadata i1 false, metadata !12288, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13864
  call void @llvm.dbg.value(metadata i1 false, metadata !12289, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13864
  call void @llvm.dbg.value(metadata i8 0, metadata !12290, metadata !DIExpression()), !dbg !13864
  call void @llvm.dbg.value(metadata i1 false, metadata !12291, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13864
  call void @llvm.dbg.value(metadata i1 true, metadata !12292, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13864
  call void @llvm.dbg.value(metadata i64 0, metadata !12293, metadata !DIExpression()), !dbg !13864
  call void @llvm.dbg.value(metadata i64 0, metadata !12293, metadata !DIExpression()), !dbg !13864
  call void @llvm.dbg.value(metadata i64 %0, metadata !12282, metadata !DIExpression()), !dbg !13864
  %2 = udiv i64 %0, 10, !dbg !13866
  ret i64 %2, !dbg !13870
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !13871 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13872, !srcloc !13874
  tail call void @z_impl_k_yield() #25, !dbg !13875
  ret void, !dbg !13876
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !13877 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13881, metadata !DIExpression()), !dbg !13883
  %2 = sext i32 %0 to i64, !dbg !13884
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #25, !dbg !13885
  call void @llvm.dbg.value(metadata i64 %3, metadata !13882, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13883
  %4 = shl i64 %3, 32, !dbg !13886
  %5 = ashr exact i64 %4, 32, !dbg !13886
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #25, !dbg !13887
  call void @llvm.dbg.value(metadata i32 %6, metadata !13882, metadata !DIExpression()), !dbg !13883
  %7 = sext i32 %6 to i64, !dbg !13888
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #25, !dbg !13889
  %9 = trunc i64 %8 to i32, !dbg !13889
  ret i32 %9, !dbg !13890
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #12 !dbg !13891 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13893, metadata !DIExpression()), !dbg !13894
  call void @llvm.dbg.value(metadata i64 %0, metadata !12282, metadata !DIExpression()), !dbg !13895
  call void @llvm.dbg.value(metadata i32 1000000, metadata !12285, metadata !DIExpression()), !dbg !13895
  call void @llvm.dbg.value(metadata i32 10000, metadata !12286, metadata !DIExpression()), !dbg !13895
  call void @llvm.dbg.value(metadata i8 1, metadata !12287, metadata !DIExpression()), !dbg !13895
  call void @llvm.dbg.value(metadata i1 false, metadata !12288, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13895
  call void @llvm.dbg.value(metadata i1 true, metadata !12289, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13895
  call void @llvm.dbg.value(metadata i8 0, metadata !12290, metadata !DIExpression()), !dbg !13895
  call void @llvm.dbg.value(metadata i1 false, metadata !12291, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13895
  call void @llvm.dbg.value(metadata i1 true, metadata !12292, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13895
  call void @llvm.dbg.value(metadata i64 0, metadata !12293, metadata !DIExpression()), !dbg !13895
  call void @llvm.dbg.value(metadata i64 0, metadata !12293, metadata !DIExpression()), !dbg !13895
  %2 = add i64 %0, 99, !dbg !13897
  call void @llvm.dbg.value(metadata i64 %2, metadata !12282, metadata !DIExpression()), !dbg !13895
  %3 = udiv i64 %2, 100, !dbg !13898
  ret i64 %3, !dbg !13899
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #12 !dbg !13900 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13902, metadata !DIExpression()), !dbg !13903
  call void @llvm.dbg.value(metadata i64 %0, metadata !12282, metadata !DIExpression()), !dbg !13904
  call void @llvm.dbg.value(metadata i32 10000, metadata !12285, metadata !DIExpression()), !dbg !13904
  call void @llvm.dbg.value(metadata i32 1000000, metadata !12286, metadata !DIExpression()), !dbg !13904
  call void @llvm.dbg.value(metadata i8 1, metadata !12287, metadata !DIExpression()), !dbg !13904
  call void @llvm.dbg.value(metadata i1 false, metadata !12288, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13904
  call void @llvm.dbg.value(metadata i1 false, metadata !12289, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13904
  call void @llvm.dbg.value(metadata i8 0, metadata !12290, metadata !DIExpression()), !dbg !13904
  call void @llvm.dbg.value(metadata i1 true, metadata !12291, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13904
  call void @llvm.dbg.value(metadata i1 false, metadata !12292, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13904
  call void @llvm.dbg.value(metadata i64 0, metadata !12293, metadata !DIExpression()), !dbg !13904
  call void @llvm.dbg.value(metadata i64 0, metadata !12293, metadata !DIExpression()), !dbg !13904
  %2 = mul i64 %0, 100, !dbg !13906
  ret i64 %2, !dbg !13908
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13909 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13911, metadata !DIExpression()), !dbg !13912
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #25, !dbg !13913
  br i1 %2, label %14, label %3, !dbg !13915

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !13916
  %5 = icmp slt i32 %4, 0, !dbg !13918
  br i1 %5, label %6, label %10, !dbg !13919

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13920
  %8 = load i8, i8* %7, align 1, !dbg !13920
  %9 = icmp eq i8 %8, 16, !dbg !13923
  br i1 %9, label %10, label %14, !dbg !13924

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #25, !dbg !13925
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #25, !dbg !13926
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13927, !srcloc !12886
  call void @llvm.dbg.value(metadata i32 %11, metadata !12882, metadata !DIExpression()) #23, !dbg !13931
  %12 = icmp eq i32 %11, 0, !dbg !13932
  br i1 %12, label %13, label %14, !dbg !13933

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !13934
  br label %14, !dbg !13936

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !13937
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !13938 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13940, metadata !DIExpression()), !dbg !13941
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13942
  %3 = load i8, i8* %2, align 1, !dbg !13942
  %4 = and i8 %3, 2, !dbg !13943
  %5 = icmp ne i8 %4, 0, !dbg !13944
  ret i1 %5, !dbg !13945
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #4 !dbg !13946 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13951
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13950, metadata !DIExpression()), !dbg !13952
  ret %struct.k_thread* %1, !dbg !13953
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !13954 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13955, !srcloc !12886
  call void @llvm.dbg.value(metadata i32 %1, metadata !12882, metadata !DIExpression()) #23, !dbg !13958
  %2 = icmp eq i32 %1, 0, !dbg !13959
  br i1 %2, label %3, label %8, !dbg !13960

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13961
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #25, !dbg !13962
  %6 = icmp ne i32 %5, 0, !dbg !13960
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !13963
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13964 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13966, metadata !DIExpression()), !dbg !13968
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12235, metadata !DIExpression()) #23, !dbg !13969
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13971, !srcloc !12250
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13971
  call void @llvm.dbg.value(metadata i32 %3, metadata !12247, metadata !DIExpression()) #23, !dbg !13973
  call void @llvm.dbg.value(metadata i32 undef, metadata !12248, metadata !DIExpression()) #23, !dbg !13973
  call void @llvm.dbg.value(metadata i32 %3, metadata !12241, metadata !DIExpression()) #23, !dbg !13969
  call void @llvm.dbg.value(metadata i32 %3, metadata !13967, metadata !DIExpression()), !dbg !13968
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !13974
  %5 = load i8, i8* %4, align 4, !dbg !13974
  %6 = and i8 %5, 1, !dbg !13976
  %7 = icmp eq i8 %6, 0, !dbg !13977
  br i1 %7, label %9, label %8, !dbg !13978

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !12262, metadata !DIExpression()) #23, !dbg !13979
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12267, metadata !DIExpression()) #23, !dbg !13979
  call void @llvm.dbg.value(metadata i32 %3, metadata !12270, metadata !DIExpression()) #23, !dbg !13982
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13984, !srcloc !12276
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !13985, !srcloc !13987
  br label %24, !dbg !13988

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13989
  %11 = load i8, i8* %10, align 1, !dbg !13989
  %12 = and i8 %11, 8, !dbg !13991
  %13 = icmp eq i8 %12, 0, !dbg !13992
  br i1 %13, label %15, label %14, !dbg !13993

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !12262, metadata !DIExpression()) #23, !dbg !13994
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12267, metadata !DIExpression()) #23, !dbg !13994
  call void @llvm.dbg.value(metadata i32 %3, metadata !12270, metadata !DIExpression()) #23, !dbg !13997
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13999, !srcloc !12276
  br label %24, !dbg !14000

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #25, !dbg !14001
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14002
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !14004
  br i1 %17, label %18, label %23, !dbg !14005

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14006, !srcloc !12886
  call void @llvm.dbg.value(metadata i32 %19, metadata !12882, metadata !DIExpression()) #23, !dbg !14009
  %20 = icmp eq i32 %19, 0, !dbg !14010
  br i1 %20, label %21, label %23, !dbg !14011

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !12846, metadata !DIExpression()) #23, !dbg !14012
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12851, metadata !DIExpression()) #23, !dbg !14012
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #24, !dbg !14015
  br label %23, !dbg !14016

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !12262, metadata !DIExpression()) #23, !dbg !14017
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12267, metadata !DIExpression()) #23, !dbg !14017
  call void @llvm.dbg.value(metadata i32 %3, metadata !12270, metadata !DIExpression()) #23, !dbg !14019
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14021, !srcloc !12276
  br label %24, !dbg !14022

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !14022
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14023 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14025, metadata !DIExpression()), !dbg !14026
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14027
  %3 = load i8, i8* %2, align 1, !dbg !14027
  %4 = and i8 %3, 8, !dbg !14029
  %5 = icmp eq i8 %4, 0, !dbg !14030
  br i1 %5, label %6, label %20, !dbg !14031

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !14032
  %8 = or i8 %7, 8, !dbg !14032
  store i8 %8, i8* %2, align 1, !dbg !14032
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #25, !dbg !14034
  br i1 %9, label %10, label %12, !dbg !14036

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12404, metadata !DIExpression()) #23, !dbg !14037
  %11 = and i8 %8, 95, !dbg !14040
  store i8 %11, i8* %2, align 1, !dbg !14040
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12412, metadata !DIExpression()) #23, !dbg !14041
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #24, !dbg !14043
  br label %12, !dbg !14044

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14045
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !14045
  %15 = icmp eq %union.anon* %14, null, !dbg !14047
  br i1 %15, label %17, label %16, !dbg !14048

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #25, !dbg !14049
  br label %17, !dbg !14051

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #25, !dbg !14052
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14053
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #25, !dbg !14054
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !14055
  br label %20, !dbg !14056

20:                                               ; preds = %17, %1
  ret void, !dbg !14057
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !14058 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14062, metadata !DIExpression()), !dbg !14064
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !14065
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14063, metadata !DIExpression()), !dbg !14064
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14066
  br i1 %3, label %10, label %4, !dbg !14067

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #25, !dbg !14068
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #25, !dbg !14070
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14071, metadata !DIExpression()), !dbg !14077
  call void @llvm.dbg.value(metadata i32 0, metadata !14076, metadata !DIExpression()), !dbg !14077
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !14079
  store i32 0, i32* %7, align 4, !dbg !14080
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !14081
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !14065
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !14063, metadata !DIExpression()), !dbg !14064
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !14066
  br i1 %9, label %10, label %4, !dbg !14067, !llvm.loop !14082

10:                                               ; preds = %4, %1
  ret void, !dbg !14084
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !14085 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14090, metadata !DIExpression()), !dbg !14093
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14089, metadata !DIExpression()), !dbg !14093
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12235, metadata !DIExpression()) #23, !dbg !14094
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14096, !srcloc !12250
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14096
  call void @llvm.dbg.value(metadata i32 %4, metadata !12247, metadata !DIExpression()) #23, !dbg !14098
  call void @llvm.dbg.value(metadata i32 undef, metadata !12248, metadata !DIExpression()) #23, !dbg !14098
  call void @llvm.dbg.value(metadata i32 %4, metadata !12241, metadata !DIExpression()) #23, !dbg !14094
  call void @llvm.dbg.value(metadata i32 %4, metadata !14091, metadata !DIExpression()), !dbg !14093
  call void @llvm.dbg.value(metadata i32 0, metadata !14092, metadata !DIExpression()), !dbg !14093
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14099
  %6 = load i8, i8* %5, align 1, !dbg !14099
  %7 = and i8 %6, 8, !dbg !14101
  %8 = icmp eq i8 %7, 0, !dbg !14102
  br i1 %8, label %9, label %24, !dbg !14103

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !14090, metadata !DIExpression()), !dbg !14093
  %11 = icmp eq i64 %10, 0, !dbg !14104
  br i1 %11, label %24, label %12, !dbg !14106

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14107
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !14109
  br i1 %14, label %24, label %15, !dbg !14110

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14111
  %17 = load %union.anon*, %union.anon** %16, align 8, !dbg !14111
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !14112
  %19 = icmp eq %union.anon* %17, %18, !dbg !14113
  br i1 %19, label %24, label %20, !dbg !14114

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14115
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %union.anon* noundef nonnull %21) #25, !dbg !14117
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14118
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #25, !dbg !14119
  call void @llvm.dbg.value(metadata i32 %4, metadata !12846, metadata !DIExpression()) #23, !dbg !14120
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12851, metadata !DIExpression()) #23, !dbg !14120
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #24, !dbg !14122
  call void @llvm.dbg.value(metadata i32 %23, metadata !14092, metadata !DIExpression()), !dbg !14093
  br label %26, !dbg !14123

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !14124
  call void @llvm.dbg.value(metadata i32 %25, metadata !14092, metadata !DIExpression()), !dbg !14093
  call void @llvm.dbg.value(metadata i32 %4, metadata !12262, metadata !DIExpression()) #23, !dbg !14125
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12267, metadata !DIExpression()) #23, !dbg !14125
  call void @llvm.dbg.value(metadata i32 %4, metadata !12270, metadata !DIExpression()) #23, !dbg !14127
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !14129, !srcloc !12276
  br label %26, !dbg !14130

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !14093
  ret i32 %27, !dbg !14131
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !14132 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14136, metadata !DIExpression()), !dbg !14144
  call void @llvm.dbg.value(metadata i32 %1, metadata !14137, metadata !DIExpression()), !dbg !14144
  call void @llvm.dbg.value(metadata i8* %2, metadata !14138, metadata !DIExpression()), !dbg !14144
  call void @llvm.dbg.value(metadata i8 0, metadata !14140, metadata !DIExpression()), !dbg !14144
  call void @llvm.dbg.value(metadata i32 0, metadata !14141, metadata !DIExpression()), !dbg !14145
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12235, metadata !DIExpression()) #23, !dbg !14146
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14148, !srcloc !12250
  call void @llvm.dbg.value(metadata i32 undef, metadata !12247, metadata !DIExpression()) #23, !dbg !14150
  call void @llvm.dbg.value(metadata i32 undef, metadata !12248, metadata !DIExpression()) #23, !dbg !14150
  call void @llvm.dbg.value(metadata i32 undef, metadata !12241, metadata !DIExpression()) #23, !dbg !14146
  call void @llvm.dbg.value(metadata i32 undef, metadata !14143, metadata !DIExpression()), !dbg !14145
  call void @llvm.dbg.value(metadata i8 poison, metadata !14140, metadata !DIExpression()), !dbg !14144
  call void @llvm.dbg.value(metadata i32 undef, metadata !14141, metadata !DIExpression()), !dbg !14145
  %5 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #25, !dbg !14151
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14139, metadata !DIExpression()), !dbg !14144
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !14154
  br i1 %7, label %12, label %8, !dbg !14156

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14157, metadata !DIExpression()), !dbg !14165
  call void @llvm.dbg.value(metadata i32 %1, metadata !14163, metadata !DIExpression()), !dbg !14165
  call void @llvm.dbg.value(metadata i8* %2, metadata !14164, metadata !DIExpression()), !dbg !14165
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14071, metadata !DIExpression()), !dbg !14168
  call void @llvm.dbg.value(metadata i32 %1, metadata !14076, metadata !DIExpression()), !dbg !14168
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !14170
  store i32 %1, i32* %9, align 4, !dbg !14171
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !14172
  store i8* %2, i8** %10, align 4, !dbg !14173
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #25, !dbg !14174
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #25, !dbg !14175
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #25, !dbg !14176
  call void @llvm.dbg.value(metadata i8 1, metadata !14140, metadata !DIExpression()), !dbg !14144
  br label %12, !dbg !14177

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !14148
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !14148
  call void @llvm.dbg.value(metadata i32 %14, metadata !12247, metadata !DIExpression()) #23, !dbg !14150
  call void @llvm.dbg.value(metadata i32 %14, metadata !12241, metadata !DIExpression()) #23, !dbg !14146
  call void @llvm.dbg.value(metadata i32 %14, metadata !14143, metadata !DIExpression()), !dbg !14145
  call void @llvm.dbg.value(metadata i8 poison, metadata !14140, metadata !DIExpression()), !dbg !14144
  call void @llvm.dbg.value(metadata i32 undef, metadata !12262, metadata !DIExpression()) #23, !dbg !14178
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12267, metadata !DIExpression()) #23, !dbg !14178
  call void @llvm.dbg.value(metadata i32 undef, metadata !12270, metadata !DIExpression()) #23, !dbg !14180
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !14182, !srcloc !12276
  call void @llvm.dbg.value(metadata i32 undef, metadata !14141, metadata !DIExpression()), !dbg !14145
  ret i1 %13, !dbg !14183
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !14184 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14190, metadata !DIExpression()), !dbg !14195
  call void @llvm.dbg.value(metadata i64 undef, metadata !14192, metadata !DIExpression()), !dbg !14195
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14189, metadata !DIExpression()), !dbg !14195
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !14191, metadata !DIExpression()), !dbg !14195
  call void @llvm.dbg.value(metadata i8** %4, metadata !14193, metadata !DIExpression()), !dbg !14195
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #25, !dbg !14196
  call void @llvm.dbg.value(metadata i32 %6, metadata !14194, metadata !DIExpression()), !dbg !14195
  %7 = icmp eq i8** %4, null, !dbg !14197
  br i1 %7, label %12, label %8, !dbg !14199

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14200
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !14202
  %11 = load i8*, i8** %10, align 4, !dbg !14202
  store i8* %11, i8** %4, align 4, !dbg !14203
  br label %12, !dbg !14204

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !14205
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !14206 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #24, !dbg !14208
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #24, !dbg !14209
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_data_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_data_rom_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__ccm_data_end to i32), i32 ptrtoint ([0 x i8]* @__ccm_data_start to i32))) #24, !dbg !14210
  ret void, !dbg !14211
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14212 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !14222, metadata !DIExpression()), !dbg !14239
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14220, metadata !DIExpression()), !dbg !14239
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !14221, metadata !DIExpression()), !dbg !14239
  %5 = icmp eq i64 %4, -1, !dbg !14240
  br i1 %5, label %55, label %6, !dbg !14242

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !14243
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !14244
  call void @llvm.dbg.value(metadata i32 0, metadata !14223, metadata !DIExpression()), !dbg !14245
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14246, metadata !DIExpression()) #23, !dbg !14253
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14255, !srcloc !14261
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !14255
  call void @llvm.dbg.value(metadata i32 %9, metadata !14258, metadata !DIExpression()) #23, !dbg !14262
  call void @llvm.dbg.value(metadata i32 undef, metadata !14259, metadata !DIExpression()) #23, !dbg !14262
  call void @llvm.dbg.value(metadata i32 %9, metadata !14252, metadata !DIExpression()) #23, !dbg !14253
  call void @llvm.dbg.value(metadata i32 %9, metadata !14229, metadata !DIExpression()), !dbg !14245
  call void @llvm.dbg.value(metadata i32 undef, metadata !14223, metadata !DIExpression()), !dbg !14245
  %10 = icmp slt i64 %4, -1, !dbg !14263
  br i1 %10, label %11, label %17, !dbg !14264

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !14265
  %13 = add i64 %4, %12, !dbg !14266
  %14 = sub i64 -2, %13, !dbg !14266
  call void @llvm.dbg.value(metadata i64 %14, metadata !14233, metadata !DIExpression()), !dbg !14267
  %15 = icmp sgt i64 %14, 1, !dbg !14268
  %16 = select i1 %15, i64 %14, i64 1, !dbg !14268
  br label %22, !dbg !14269

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !14270
  %19 = tail call fastcc i32 @elapsed.156() #25, !dbg !14272
  %20 = sext i32 %19 to i64, !dbg !14272
  %21 = add nsw i64 %18, %20, !dbg !14273
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !14274
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !14275
  store i64 %23, i64* %24, align 8, !dbg !14276
  %25 = tail call fastcc %struct._timeout* @first() #25, !dbg !14277
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !14230, metadata !DIExpression()), !dbg !14279
  %26 = icmp eq %struct._timeout* %25, null, !dbg !14280
  br i1 %26, label %42, label %27, !dbg !14280

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !14281
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !14230, metadata !DIExpression()), !dbg !14279
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !14285
  %31 = load i64, i64* %30, align 8, !dbg !14285
  %32 = icmp slt i64 %28, %31, !dbg !14286
  br i1 %32, label %33, label %38, !dbg !14287

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !14285
  %35 = sub nsw i64 %31, %28, !dbg !14288
  store i64 %35, i64* %34, align 8, !dbg !14288
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !14290
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14291
  tail call fastcc void @sys_dlist_insert.157(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #25, !dbg !14292
  br label %44, !dbg !14293

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !14294
  store i64 %39, i64* %24, align 8, !dbg !14294
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #25, !dbg !14295
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !14230, metadata !DIExpression()), !dbg !14279
  %41 = icmp eq %struct._timeout* %40, null, !dbg !14280
  br i1 %41, label %42, label %27, !dbg !14280, !llvm.loop !14296

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14298
  tail call fastcc void @sys_dlist_append.158(%struct._dnode* noundef %43) #25, !dbg !14301
  br label %44, !dbg !14302

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #25, !dbg !14303
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !14304
  br i1 %46, label %47, label %54, !dbg !14305

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #25, !dbg !14306
  call void @llvm.dbg.value(metadata i32 %48, metadata !14236, metadata !DIExpression()), !dbg !14307
  %49 = icmp ne i32 %48, 0, !dbg !14308
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !14310
  br i1 %52, label %54, label %53, !dbg !14310

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #24, !dbg !14311
  br label %54, !dbg !14313

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !14314, metadata !DIExpression()) #23, !dbg !14320
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14319, metadata !DIExpression()) #23, !dbg !14320
  call void @llvm.dbg.value(metadata i32 %9, metadata !14322, metadata !DIExpression()) #23, !dbg !14325
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14327, !srcloc !14328
  call void @llvm.dbg.value(metadata i32 undef, metadata !14223, metadata !DIExpression()), !dbg !14245
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !14329
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.156() unnamed_addr #1 !dbg !14330 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !14333
  %2 = icmp eq i32 %1, 0, !dbg !14334
  br i1 %2, label %3, label %5, !dbg !14333

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #24, !dbg !14335
  br label %5, !dbg !14333

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !14333
  ret i32 %6, !dbg !14336
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #4 !dbg !14337 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.161() #25, !dbg !14343
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14341, metadata !DIExpression()), !dbg !14344
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !14345
  ret %struct._timeout* %2, !dbg !14346
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.157(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !14347 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14351, metadata !DIExpression()), !dbg !14355
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14352, metadata !DIExpression()), !dbg !14355
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14356
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14356
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14353, metadata !DIExpression()), !dbg !14355
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14357
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14358
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14359
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14360
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14361
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14362
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14363
  ret void, !dbg !14364
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #4 !dbg !14365 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14369, metadata !DIExpression()), !dbg !14371
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14372
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.159(%struct._dnode* noundef %2) #25, !dbg !14373
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14370, metadata !DIExpression()), !dbg !14371
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !14374
  ret %struct._timeout* %4, !dbg !14375
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.158(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !14376 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14381, metadata !DIExpression()), !dbg !14384
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14382, metadata !DIExpression()), !dbg !14384
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !14385
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !14383, metadata !DIExpression()), !dbg !14384
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14386
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !14387
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14388
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !14389
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !14390
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !14391
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !14392
  ret void, !dbg !14393
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !14394 {
  %1 = tail call fastcc %struct._timeout* @first() #25, !dbg !14399
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !14396, metadata !DIExpression()), !dbg !14400
  %2 = tail call fastcc i32 @elapsed.156() #25, !dbg !14401
  call void @llvm.dbg.value(metadata i32 %2, metadata !14397, metadata !DIExpression()), !dbg !14400
  %3 = icmp eq %struct._timeout* %1, null, !dbg !14402
  br i1 %3, label %14, label %4, !dbg !14404

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !14405
  %6 = load i64, i64* %5, align 8, !dbg !14405
  %7 = sext i32 %2 to i64, !dbg !14406
  %8 = sub nsw i64 %6, %7, !dbg !14407
  %9 = icmp sgt i64 %8, 2147483647, !dbg !14408
  br i1 %9, label %14, label %10, !dbg !14409

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !14410
  %12 = select i1 %11, i64 %8, i64 0, !dbg !14410
  %13 = trunc i64 %12 to i32, !dbg !14410
  call void @llvm.dbg.value(metadata i32 %13, metadata !14398, metadata !DIExpression()), !dbg !14400
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !14412
  call void @llvm.dbg.value(metadata i32 %15, metadata !14398, metadata !DIExpression()), !dbg !14400
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14413
  %17 = icmp ne i32 %16, 0, !dbg !14415
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !14416
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !14416
  call void @llvm.dbg.value(metadata i32 %20, metadata !14398, metadata !DIExpression()), !dbg !14400
  ret i32 %20, !dbg !14417
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.159(%struct._dnode* noundef readonly %0) unnamed_addr #4 !dbg !14418 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14422, metadata !DIExpression()), !dbg !14424
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14423, metadata !DIExpression()), !dbg !14424
  %2 = icmp eq %struct._dnode* %0, null, !dbg !14425
  br i1 %2, label %5, label %3, !dbg !14426

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.160(%struct._dnode* noundef nonnull %0) #25, !dbg !14427
  br label %5, !dbg !14426

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !14426
  ret %struct._dnode* %6, !dbg !14428
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.160(%struct._dnode* noundef readonly %0) unnamed_addr #4 !dbg !14429 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14431, metadata !DIExpression()), !dbg !14433
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14432, metadata !DIExpression()), !dbg !14433
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !14434
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !14435
  br i1 %3, label %7, label %4, !dbg !14436

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14437
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !14437
  br label %7, !dbg !14436

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !14436
  ret %struct._dnode* %8, !dbg !14438
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.161() unnamed_addr #4 !dbg !14439 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14443, metadata !DIExpression()), !dbg !14444
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.162() #25, !dbg !14445
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !14445
  ret %struct._dnode* %3, !dbg !14446
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.162() unnamed_addr #4 !dbg !14447 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14451, metadata !DIExpression()), !dbg !14452
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !14453
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !14454
  ret i1 %2, !dbg !14455
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !14456 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14460, metadata !DIExpression()), !dbg !14465
  call void @llvm.dbg.value(metadata i32 -22, metadata !14461, metadata !DIExpression()), !dbg !14465
  call void @llvm.dbg.value(metadata i32 0, metadata !14462, metadata !DIExpression()), !dbg !14466
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14246, metadata !DIExpression()) #23, !dbg !14467
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14469, !srcloc !14261
  call void @llvm.dbg.value(metadata i32 undef, metadata !14258, metadata !DIExpression()) #23, !dbg !14471
  call void @llvm.dbg.value(metadata i32 undef, metadata !14259, metadata !DIExpression()) #23, !dbg !14471
  call void @llvm.dbg.value(metadata i32 undef, metadata !14252, metadata !DIExpression()) #23, !dbg !14467
  call void @llvm.dbg.value(metadata i32 undef, metadata !14464, metadata !DIExpression()), !dbg !14466
  call void @llvm.dbg.value(metadata i32 -22, metadata !14461, metadata !DIExpression()), !dbg !14465
  call void @llvm.dbg.value(metadata i32 undef, metadata !14462, metadata !DIExpression()), !dbg !14466
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !14461, metadata !DIExpression()), !dbg !14465
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.165(%struct._dnode* noundef %3) #25, !dbg !14472
  br i1 %4, label %5, label %6, !dbg !14476

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #25, !dbg !14477
  call void @llvm.dbg.value(metadata i32 0, metadata !14461, metadata !DIExpression()), !dbg !14465
  br label %6, !dbg !14479

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !14465
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !14469
  call void @llvm.dbg.value(metadata i32 %8, metadata !14258, metadata !DIExpression()) #23, !dbg !14471
  call void @llvm.dbg.value(metadata i32 %8, metadata !14252, metadata !DIExpression()) #23, !dbg !14467
  call void @llvm.dbg.value(metadata i32 %8, metadata !14464, metadata !DIExpression()), !dbg !14466
  call void @llvm.dbg.value(metadata i32 %7, metadata !14461, metadata !DIExpression()), !dbg !14465
  call void @llvm.dbg.value(metadata i32 undef, metadata !14314, metadata !DIExpression()) #23, !dbg !14480
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14319, metadata !DIExpression()) #23, !dbg !14480
  call void @llvm.dbg.value(metadata i32 undef, metadata !14322, metadata !DIExpression()) #23, !dbg !14482
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !14484, !srcloc !14328
  call void @llvm.dbg.value(metadata i32 undef, metadata !14462, metadata !DIExpression()), !dbg !14466
  ret i32 %7, !dbg !14485
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.165(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #4 !dbg !14486 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14492, metadata !DIExpression()), !dbg !14493
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14494
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14494
  %4 = icmp ne %struct._dnode* %3, null, !dbg !14495
  ret i1 %4, !dbg !14496
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #7 !dbg !14497 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14499, metadata !DIExpression()), !dbg !14500
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #25, !dbg !14501
  %3 = icmp eq %struct._timeout* %2, null, !dbg !14503
  br i1 %3, label %10, label %4, !dbg !14504

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !14505
  %6 = load i64, i64* %5, align 8, !dbg !14505
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !14507
  %8 = load i64, i64* %7, align 8, !dbg !14508
  %9 = add nsw i64 %8, %6, !dbg !14508
  store i64 %9, i64* %7, align 8, !dbg !14508
  br label %10, !dbg !14509

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14510
  tail call fastcc void @sys_dlist_remove.166(%struct._dnode* noundef %11) #25, !dbg !14511
  ret void, !dbg !14512
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.166(%struct._dnode* nocapture noundef %0) unnamed_addr #7 !dbg !14513 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14517, metadata !DIExpression()), !dbg !14520
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14521
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14521
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14518, metadata !DIExpression()), !dbg !14520
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14522
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14522
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !14519, metadata !DIExpression()), !dbg !14520
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !14523
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !14524
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !14525
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !14526
  tail call fastcc void @sys_dnode_init.167(%struct._dnode* noundef %0) #25, !dbg !14527
  ret void, !dbg !14528
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.167(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #5 !dbg !14529 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14531, metadata !DIExpression()), !dbg !14532
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14533
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14534
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14535
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14536
  ret void, !dbg !14537
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !14538 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14544, metadata !DIExpression()), !dbg !14549
  call void @llvm.dbg.value(metadata i64 0, metadata !14545, metadata !DIExpression()), !dbg !14549
  call void @llvm.dbg.value(metadata i32 0, metadata !14546, metadata !DIExpression()), !dbg !14550
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14246, metadata !DIExpression()) #23, !dbg !14551
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14553, !srcloc !14261
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14553
  call void @llvm.dbg.value(metadata i32 %3, metadata !14258, metadata !DIExpression()) #23, !dbg !14555
  call void @llvm.dbg.value(metadata i32 undef, metadata !14259, metadata !DIExpression()) #23, !dbg !14555
  call void @llvm.dbg.value(metadata i32 %3, metadata !14252, metadata !DIExpression()) #23, !dbg !14551
  call void @llvm.dbg.value(metadata i32 %3, metadata !14548, metadata !DIExpression()), !dbg !14550
  call void @llvm.dbg.value(metadata i64 0, metadata !14545, metadata !DIExpression()), !dbg !14549
  call void @llvm.dbg.value(metadata i32 undef, metadata !14546, metadata !DIExpression()), !dbg !14550
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #25, !dbg !14556
  call void @llvm.dbg.value(metadata i64 %4, metadata !14545, metadata !DIExpression()), !dbg !14549
  call void @llvm.dbg.value(metadata i32 %3, metadata !14314, metadata !DIExpression()) #23, !dbg !14559
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14319, metadata !DIExpression()) #23, !dbg !14559
  call void @llvm.dbg.value(metadata i32 %3, metadata !14322, metadata !DIExpression()) #23, !dbg !14561
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14563, !srcloc !14328
  call void @llvm.dbg.value(metadata i32 undef, metadata !14546, metadata !DIExpression()), !dbg !14550
  ret i64 %4, !dbg !14564
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !14565 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14567, metadata !DIExpression()), !dbg !14571
  call void @llvm.dbg.value(metadata i64 0, metadata !14568, metadata !DIExpression()), !dbg !14571
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.168(%struct._timeout* noundef %0) #25, !dbg !14572
  br i1 %2, label %21, label %3, !dbg !14574

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #25, !dbg !14575
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !14569, metadata !DIExpression()), !dbg !14576
  call void @llvm.dbg.value(metadata i64 0, metadata !14568, metadata !DIExpression()), !dbg !14571
  %5 = icmp eq %struct._timeout* %4, null, !dbg !14577
  br i1 %5, label %16, label %6, !dbg !14579

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !14569, metadata !DIExpression()), !dbg !14576
  call void @llvm.dbg.value(metadata i64 %8, metadata !14568, metadata !DIExpression()), !dbg !14571
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !14580
  %10 = load i64, i64* %9, align 8, !dbg !14580
  %11 = add nsw i64 %10, %8, !dbg !14582
  call void @llvm.dbg.value(metadata i64 %11, metadata !14568, metadata !DIExpression()), !dbg !14571
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !14583
  br i1 %12, label %16, label %13, !dbg !14585

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #25, !dbg !14586
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !14569, metadata !DIExpression()), !dbg !14576
  call void @llvm.dbg.value(metadata i64 %11, metadata !14568, metadata !DIExpression()), !dbg !14571
  %15 = icmp eq %struct._timeout* %14, null, !dbg !14577
  br i1 %15, label %16, label %6, !dbg !14579, !llvm.loop !14587

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !14571
  call void @llvm.dbg.value(metadata i64 %17, metadata !14568, metadata !DIExpression()), !dbg !14571
  %18 = tail call fastcc i32 @elapsed.156() #25, !dbg !14589
  %19 = sext i32 %18 to i64, !dbg !14589
  %20 = sub nsw i64 %17, %19, !dbg !14590
  br label %21, !dbg !14591

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !14571
  ret i64 %22, !dbg !14592
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.168(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #4 !dbg !14593 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14597, metadata !DIExpression()), !dbg !14598
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14599
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.165(%struct._dnode* noundef %2) #25, !dbg !14600
  %4 = xor i1 %3, true, !dbg !14601
  ret i1 %4, !dbg !14602
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !14603 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14605, metadata !DIExpression()), !dbg !14610
  call void @llvm.dbg.value(metadata i64 0, metadata !14606, metadata !DIExpression()), !dbg !14610
  call void @llvm.dbg.value(metadata i32 0, metadata !14607, metadata !DIExpression()), !dbg !14611
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14246, metadata !DIExpression()) #23, !dbg !14612
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14614, !srcloc !14261
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14614
  call void @llvm.dbg.value(metadata i32 %3, metadata !14258, metadata !DIExpression()) #23, !dbg !14616
  call void @llvm.dbg.value(metadata i32 undef, metadata !14259, metadata !DIExpression()) #23, !dbg !14616
  call void @llvm.dbg.value(metadata i32 %3, metadata !14252, metadata !DIExpression()) #23, !dbg !14612
  call void @llvm.dbg.value(metadata i32 %3, metadata !14609, metadata !DIExpression()), !dbg !14611
  call void @llvm.dbg.value(metadata i64 0, metadata !14606, metadata !DIExpression()), !dbg !14610
  call void @llvm.dbg.value(metadata i32 undef, metadata !14607, metadata !DIExpression()), !dbg !14611
  %4 = load i64, i64* @curr_tick, align 8, !dbg !14617
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #25, !dbg !14620
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !14606, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !14610
  call void @llvm.dbg.value(metadata i32 %3, metadata !14314, metadata !DIExpression()) #23, !dbg !14621
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14319, metadata !DIExpression()) #23, !dbg !14621
  call void @llvm.dbg.value(metadata i32 %3, metadata !14322, metadata !DIExpression()) #23, !dbg !14623
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14625, !srcloc !14328
  call void @llvm.dbg.value(metadata i32 undef, metadata !14607, metadata !DIExpression()), !dbg !14611
  %6 = add i64 %5, %4, !dbg !14626
  ret i64 %6, !dbg !14627
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !14628 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !14630, metadata !DIExpression()), !dbg !14634
  call void @llvm.dbg.value(metadata i32 0, metadata !14631, metadata !DIExpression()), !dbg !14635
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14246, metadata !DIExpression()) #23, !dbg !14636
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14638, !srcloc !14261
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14638
  call void @llvm.dbg.value(metadata i32 %2, metadata !14258, metadata !DIExpression()) #23, !dbg !14640
  call void @llvm.dbg.value(metadata i32 undef, metadata !14259, metadata !DIExpression()) #23, !dbg !14640
  call void @llvm.dbg.value(metadata i32 %2, metadata !14252, metadata !DIExpression()) #23, !dbg !14636
  call void @llvm.dbg.value(metadata i32 %2, metadata !14633, metadata !DIExpression()), !dbg !14635
  call void @llvm.dbg.value(metadata i32 -1, metadata !14630, metadata !DIExpression()), !dbg !14634
  call void @llvm.dbg.value(metadata i32 undef, metadata !14631, metadata !DIExpression()), !dbg !14635
  %3 = tail call fastcc i32 @next_timeout() #25, !dbg !14641
  call void @llvm.dbg.value(metadata i32 %3, metadata !14630, metadata !DIExpression()), !dbg !14634
  call void @llvm.dbg.value(metadata i32 %2, metadata !14314, metadata !DIExpression()) #23, !dbg !14644
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14319, metadata !DIExpression()) #23, !dbg !14644
  call void @llvm.dbg.value(metadata i32 %2, metadata !14322, metadata !DIExpression()) #23, !dbg !14646
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !14648, !srcloc !14328
  call void @llvm.dbg.value(metadata i32 undef, metadata !14631, metadata !DIExpression()), !dbg !14635
  ret i32 %3, !dbg !14649
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !14650 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14652, metadata !DIExpression()), !dbg !14662
  call void @llvm.dbg.value(metadata i1 %1, metadata !14653, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14662
  call void @llvm.dbg.value(metadata i32 0, metadata !14654, metadata !DIExpression()), !dbg !14663
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14246, metadata !DIExpression()) #23, !dbg !14664
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14666, !srcloc !14261
  call void @llvm.dbg.value(metadata i32 undef, metadata !14258, metadata !DIExpression()) #23, !dbg !14668
  call void @llvm.dbg.value(metadata i32 undef, metadata !14259, metadata !DIExpression()) #23, !dbg !14668
  call void @llvm.dbg.value(metadata i32 undef, metadata !14252, metadata !DIExpression()) #23, !dbg !14664
  call void @llvm.dbg.value(metadata i32 undef, metadata !14656, metadata !DIExpression()), !dbg !14663
  call void @llvm.dbg.value(metadata i32 undef, metadata !14654, metadata !DIExpression()), !dbg !14663
  %4 = tail call fastcc i32 @next_timeout() #25, !dbg !14669
  call void @llvm.dbg.value(metadata i32 %4, metadata !14657, metadata !DIExpression()), !dbg !14670
  call void @llvm.dbg.value(metadata i1 undef, metadata !14660, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14670
  %5 = icmp slt i32 %4, 2, !dbg !14671
  call void @llvm.dbg.value(metadata i1 %5, metadata !14661, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14670
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !14672
  call void @llvm.dbg.value(metadata i1 %6, metadata !14660, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14670
  br i1 %7, label %11, label %8, !dbg !14672

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !14674
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !14674
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #24, !dbg !14676
  br label %11, !dbg !14677

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !14666
  call void @llvm.dbg.value(metadata i32 %12, metadata !14258, metadata !DIExpression()) #23, !dbg !14668
  call void @llvm.dbg.value(metadata i32 %12, metadata !14252, metadata !DIExpression()) #23, !dbg !14664
  call void @llvm.dbg.value(metadata i32 %12, metadata !14656, metadata !DIExpression()), !dbg !14663
  call void @llvm.dbg.value(metadata i32 undef, metadata !14314, metadata !DIExpression()) #23, !dbg !14678
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14319, metadata !DIExpression()) #23, !dbg !14678
  call void @llvm.dbg.value(metadata i32 undef, metadata !14322, metadata !DIExpression()) #23, !dbg !14680
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !14682, !srcloc !14328
  call void @llvm.dbg.value(metadata i32 1, metadata !14654, metadata !DIExpression()), !dbg !14663
  call void @llvm.dbg.value(metadata i32 undef, metadata !14654, metadata !DIExpression()), !dbg !14663
  ret void, !dbg !14683
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !14684 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14688, metadata !DIExpression()), !dbg !14693
  tail call void @z_time_slice(i32 noundef %0) #24, !dbg !14694
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14246, metadata !DIExpression()) #23, !dbg !14695
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14697, !srcloc !14261
  call void @llvm.dbg.value(metadata i32 undef, metadata !14258, metadata !DIExpression()) #23, !dbg !14699
  call void @llvm.dbg.value(metadata i32 undef, metadata !14259, metadata !DIExpression()) #23, !dbg !14699
  call void @llvm.dbg.value(metadata i32 undef, metadata !14252, metadata !DIExpression()) #23, !dbg !14695
  call void @llvm.dbg.value(metadata i32 undef, metadata !14689, metadata !DIExpression()), !dbg !14693
  store i32 %0, i32* @announce_remaining, align 4, !dbg !14693
  call void @llvm.dbg.value(metadata i32 undef, metadata !14689, metadata !DIExpression()), !dbg !14693
  %3 = tail call fastcc %struct._timeout* @first() #25, !dbg !14700
  %4 = icmp eq %struct._timeout* %3, null, !dbg !14701
  br i1 %4, label %28, label %5, !dbg !14702

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !14703
  %10 = load i64, i64* %9, align 8, !dbg !14703
  %11 = sext i32 %8 to i64, !dbg !14704
  %12 = icmp sgt i64 %10, %11, !dbg !14705
  br i1 %12, label %26, label %13, !dbg !14706

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !14693
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !14690, metadata !DIExpression()), !dbg !14707
  %15 = trunc i64 %10 to i32, !dbg !14708
  call void @llvm.dbg.value(metadata i32 %15, metadata !14692, metadata !DIExpression()), !dbg !14707
  %16 = sext i32 %15 to i64, !dbg !14709
  %17 = load i64, i64* @curr_tick, align 8, !dbg !14710
  %18 = add i64 %17, %16, !dbg !14710
  store i64 %18, i64* @curr_tick, align 8, !dbg !14710
  store i64 0, i64* %9, align 8, !dbg !14711
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #25, !dbg !14712
  call void @llvm.dbg.value(metadata i32 %14, metadata !14314, metadata !DIExpression()) #23, !dbg !14713
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14319, metadata !DIExpression()) #23, !dbg !14713
  call void @llvm.dbg.value(metadata i32 %14, metadata !14322, metadata !DIExpression()) #23, !dbg !14715
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !14717, !srcloc !14328
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !14718
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !14718
  tail call void %20(%struct._timeout* noundef nonnull %6) #24, !dbg !14719
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14246, metadata !DIExpression()) #23, !dbg !14720
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14722, !srcloc !14261
  call void @llvm.dbg.value(metadata i32 undef, metadata !14258, metadata !DIExpression()) #23, !dbg !14724
  call void @llvm.dbg.value(metadata i32 undef, metadata !14259, metadata !DIExpression()) #23, !dbg !14724
  call void @llvm.dbg.value(metadata i32 undef, metadata !14252, metadata !DIExpression()) #23, !dbg !14720
  call void @llvm.dbg.value(metadata i32 undef, metadata !14689, metadata !DIExpression()), !dbg !14693
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !14725
  %23 = sub nsw i32 %22, %15, !dbg !14725
  store i32 %23, i32* @announce_remaining, align 4, !dbg !14693
  call void @llvm.dbg.value(metadata i32 undef, metadata !14689, metadata !DIExpression()), !dbg !14693
  %24 = tail call fastcc %struct._timeout* @first() #25, !dbg !14700
  %25 = icmp eq %struct._timeout* %24, null, !dbg !14701
  br i1 %25, label %28, label %5, !dbg !14702, !llvm.loop !14726

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !14728
  store i64 %27, i64* %9, align 8, !dbg !14728
  br label %32, !dbg !14731

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !14693
  %31 = sext i32 %30 to i64, !dbg !14732
  br label %32, !dbg !14732

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !14732
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !14693
  %36 = load i64, i64* @curr_tick, align 8, !dbg !14733
  %37 = add i64 %36, %33, !dbg !14733
  store i64 %37, i64* @curr_tick, align 8, !dbg !14733
  store i32 0, i32* @announce_remaining, align 4, !dbg !14734
  %38 = tail call fastcc i32 @next_timeout() #25, !dbg !14735
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #24, !dbg !14736
  call void @llvm.dbg.value(metadata i32 %35, metadata !14314, metadata !DIExpression()) #23, !dbg !14737
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14319, metadata !DIExpression()) #23, !dbg !14737
  call void @llvm.dbg.value(metadata i32 %35, metadata !14322, metadata !DIExpression()) #23, !dbg !14739
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #23, !dbg !14741, !srcloc !14328
  ret void, !dbg !14742
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !14743 {
  call void @llvm.dbg.value(metadata i64 0, metadata !14747, metadata !DIExpression()), !dbg !14751
  call void @llvm.dbg.value(metadata i32 0, metadata !14748, metadata !DIExpression()), !dbg !14752
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14246, metadata !DIExpression()) #23, !dbg !14753
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14755, !srcloc !14261
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14755
  call void @llvm.dbg.value(metadata i32 %2, metadata !14258, metadata !DIExpression()) #23, !dbg !14757
  call void @llvm.dbg.value(metadata i32 undef, metadata !14259, metadata !DIExpression()) #23, !dbg !14757
  call void @llvm.dbg.value(metadata i32 %2, metadata !14252, metadata !DIExpression()) #23, !dbg !14753
  call void @llvm.dbg.value(metadata i32 %2, metadata !14750, metadata !DIExpression()), !dbg !14752
  call void @llvm.dbg.value(metadata i64 0, metadata !14747, metadata !DIExpression()), !dbg !14751
  call void @llvm.dbg.value(metadata i32 undef, metadata !14748, metadata !DIExpression()), !dbg !14752
  %3 = load i64, i64* @curr_tick, align 8, !dbg !14758
  %4 = tail call fastcc i32 @elapsed.156() #25, !dbg !14761
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !14747, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !14751
  call void @llvm.dbg.value(metadata i32 %2, metadata !14314, metadata !DIExpression()) #23, !dbg !14762
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14319, metadata !DIExpression()) #23, !dbg !14762
  call void @llvm.dbg.value(metadata i32 %2, metadata !14322, metadata !DIExpression()) #23, !dbg !14764
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !14766, !srcloc !14328
  call void @llvm.dbg.value(metadata i32 undef, metadata !14748, metadata !DIExpression()), !dbg !14752
  %5 = sext i32 %4 to i64, !dbg !14761
  %6 = add i64 %3, %5, !dbg !14767
  ret i64 %6, !dbg !14768
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !14769 {
  %1 = tail call i64 @sys_clock_tick_get() #25, !dbg !14770
  %2 = trunc i64 %1 to i32, !dbg !14771
  ret i32 %2, !dbg !14772
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !14773 {
  %1 = tail call i64 @sys_clock_tick_get() #25, !dbg !14774
  ret i64 %1, !dbg !14775
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !14776 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14778, metadata !DIExpression()), !dbg !14785
  %2 = icmp eq i32 %0, 0, !dbg !14786
  br i1 %2, label %10, label %3, !dbg !14788

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #25, !dbg !14789
  call void @llvm.dbg.value(metadata i32 %4, metadata !14779, metadata !DIExpression()), !dbg !14785
  %5 = mul i32 %0, 168, !dbg !14790
  call void @llvm.dbg.value(metadata i32 %5, metadata !14780, metadata !DIExpression()), !dbg !14785
  br label %6, !dbg !14791

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #25, !dbg !14792
  call void @llvm.dbg.value(metadata i32 %7, metadata !14781, metadata !DIExpression()), !dbg !14793
  %8 = sub i32 %7, %4, !dbg !14794
  %9 = icmp ult i32 %8, %5, !dbg !14796
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !14797
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !14798 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #25, !dbg !14799
  ret i32 %1, !dbg !14800
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !14801 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #24, !dbg !14803
  ret i32 %1, !dbg !14804
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !14805 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !14809, metadata !DIExpression()), !dbg !14811
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !14812

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #25, !dbg !14813
  br label %14, !dbg !14817

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !14810, metadata !DIExpression()), !dbg !14811
  %6 = icmp slt i64 %2, -1, !dbg !14818
  br i1 %6, label %7, label %9, !dbg !14821

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !14822
  br label %14, !dbg !14823

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #25, !dbg !14825
  %11 = icmp ugt i64 %2, 1, !dbg !14826
  %12 = select i1 %11, i64 %2, i64 1, !dbg !14826
  %13 = add nsw i64 %10, %12, !dbg !14827
  br label %14, !dbg !14828

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !14829
  ret i64 %15, !dbg !14830
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !14831 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.177, i32 0, i32 0)) #24, !dbg !14833
  ret void, !dbg !14834
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { nofree nosync nounwind willreturn }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { argmemonly nofree nounwind willreturn writeonly }
attributes #11 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin nounwind optsize "no-builtins" }
attributes #25 = { nobuiltin optsize "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #27 = { nounwind readnone }
attributes #28 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #29 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!616, !2, !2182, !2184, !27, !2349, !2351, !2389, !111, !168, !2391, !2402, !2448, !2450, !2478, !2506, !2549, !2621, !2666, !197, !351, !2694, !387, !2699, !397, !422, !650, !2702, !785, !851, !1167, !1386, !2739, !1501, !1591, !2741, !2825, !2888, !1641, !2891, !1648, !2010, !2909, !2030, !2911, !2145, !2914}
!llvm.ident = !{!2916, !2916, !2916, !2916, !2916, !2916, !2916, !2916, !2916, !2916, !2916, !2916, !2916, !2916, !2916, !2916, !2916, !2916, !2916, !2916, !2916, !2916, !2916, !2916, !2916, !2916, !2916, !2916, !2916, !2916, !2916, !2916, !2916, !2916, !2916, !2916, !2916, !2916, !2916, !2916, !2916, !2916, !2916, !2916, !2916, !2916, !2916}
!llvm.module.flags = !{!2917, !2918, !2919, !2920, !2921, !2922, !2923, !2924, !2925}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/sensor/thermometer/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/sensor/thermometer")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 94, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/sensor/thermometer")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 5248, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 82)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 2624, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "_char_out", scope: !27, file: !105, line: 54, type: !106, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !104, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/sensor/thermometer")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !{!25}
!105 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!107 = !DISubroutineType(types: !108)
!108 = !{!103, !103}
!109 = !DIGlobalVariableExpression(var: !110, expr: !DIExpression())
!110 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !111, file: !129, line: 56, type: !130, isLocal: true, isDefinition: true, align: 32)
!111 = distinct !DICompileUnit(language: DW_LANG_C99, file: !112, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !113, globals: !128, splitDebugInlining: false, nameTableKind: None)
!112 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/sensor/thermometer")
!113 = !{!114}
!114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 32)
!115 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !116, line: 369, baseType: !117)
!116 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f405xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!117 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 360, size: 224, elements: !118)
!118 = !{!119, !122, !123, !124, !125, !126, !127}
!119 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !117, file: !116, line: 362, baseType: !120, size: 32)
!120 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !121)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !117, file: !116, line: 363, baseType: !120, size: 32, offset: 32)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !117, file: !116, line: 364, baseType: !120, size: 32, offset: 64)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !117, file: !116, line: 365, baseType: !120, size: 32, offset: 96)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !117, file: !116, line: 366, baseType: !120, size: 32, offset: 128)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !117, file: !116, line: 367, baseType: !120, size: 32, offset: 160)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !117, file: !116, line: 368, baseType: !120, size: 32, offset: 192)
!128 = !{!109}
!129 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!130 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !131)
!131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !133)
!132 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!133 = !{!134, !165}
!134 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !131, file: !132, line: 60, baseType: !135, size: 32)
!135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 32)
!136 = !DISubroutineType(types: !137)
!137 = !{!103, !138}
!138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !139, size: 32)
!139 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !140)
!140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !142)
!141 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!142 = !{!143, !147, !148, !149, !158, !159}
!143 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !140, file: !141, line: 380, baseType: !144, size: 32)
!144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !145, size: 32)
!145 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !146)
!146 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !140, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !140, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !140, file: !141, line: 386, baseType: !150, size: 32, offset: 96)
!150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 32)
!151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !152)
!152 = !{!153, !156}
!153 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !151, file: !141, line: 359, baseType: !154, size: 8)
!154 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !155)
!155 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !151, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!157 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !140, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !140, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !161, size: 32)
!161 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !162)
!162 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !141, line: 43, baseType: !163)
!163 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !164)
!164 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !131, file: !132, line: 65, baseType: !138, size: 32, offset: 32)
!166 = !DIGlobalVariableExpression(var: !167, expr: !DIExpression())
!167 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !168, file: !171, line: 71, type: !172, isLocal: true, isDefinition: true, align: 32)
!168 = distinct !DICompileUnit(language: DW_LANG_C99, file: !169, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !170, splitDebugInlining: false, nameTableKind: None)
!169 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/sensor/thermometer")
!170 = !{!166}
!171 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!172 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !173)
!173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !174)
!174 = !{!175, !194}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !173, file: !132, line: 60, baseType: !176, size: 32)
!176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !177, size: 32)
!177 = !DISubroutineType(types: !178)
!178 = !{!103, !179}
!179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 32)
!180 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !181)
!181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !182)
!182 = !{!183, !184, !185, !186, !192, !193}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !181, file: !141, line: 380, baseType: !144, size: 32)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !181, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !181, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !181, file: !141, line: 386, baseType: !187, size: 32, offset: 96)
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !188, size: 32)
!188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !189)
!189 = !{!190, !191}
!190 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !188, file: !141, line: 359, baseType: !154, size: 8)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !188, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !181, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !181, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !173, file: !132, line: 65, baseType: !179, size: 32, offset: 32)
!195 = !DIGlobalVariableExpression(var: !196, expr: !DIExpression())
!196 = distinct !DIGlobalVariable(name: "static_regions", scope: !197, file: !206, line: 62, type: !347, isLocal: true, isDefinition: true)
!197 = distinct !DICompileUnit(language: DW_LANG_C99, file: !198, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !199, globals: !202, splitDebugInlining: false, nameTableKind: None)
!198 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/sensor/thermometer")
!199 = !{!200, !103, !121, !102}
!200 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !201, line: 214, baseType: !32)
!201 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!202 = !{!203, !195}
!203 = !DIGlobalVariableExpression(var: !204, expr: !DIExpression())
!204 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !205, file: !206, line: 198, type: !333, isLocal: true, isDefinition: true)
!205 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !206, file: !206, line: 175, type: !207, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !328)
!206 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!207 = !DISubroutineType(types: !208)
!208 = !{null, !209}
!209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 32)
!210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !212)
!211 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!212 = !{!213, !282, !295, !296, !297, !298, !304, !323}
!213 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !210, file: !211, line: 247, baseType: !214, size: 384)
!214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !215)
!215 = !{!216, !244, !252, !253, !254, !267, !268, !269}
!216 = !DIDerivedType(tag: DW_TAG_member, scope: !214, file: !211, line: 60, baseType: !217, size: 64)
!217 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !214, file: !211, line: 60, size: 64, elements: !218)
!218 = !{!219, !235}
!219 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !217, file: !211, line: 61, baseType: !220, size: 64)
!220 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !222)
!221 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !223)
!223 = !{!224, !230}
!224 = !DIDerivedType(tag: DW_TAG_member, scope: !222, file: !221, line: 38, baseType: !225, size: 32)
!225 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !222, file: !221, line: 38, size: 32, elements: !226)
!226 = !{!227, !229}
!227 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !225, file: !221, line: 39, baseType: !228, size: 32)
!228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 32)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !225, file: !221, line: 40, baseType: !228, size: 32)
!230 = !DIDerivedType(tag: DW_TAG_member, scope: !222, file: !221, line: 42, baseType: !231, size: 32, offset: 32)
!231 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !222, file: !221, line: 42, size: 32, elements: !232)
!232 = !{!233, !234}
!233 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !231, file: !221, line: 43, baseType: !228, size: 32)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !231, file: !221, line: 44, baseType: !228, size: 32)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !217, file: !211, line: 62, baseType: !236, size: 64)
!236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !238)
!237 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!238 = !{!239}
!239 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !236, file: !237, line: 50, baseType: !240, size: 64)
!240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !241, size: 64, elements: !242)
!241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !236, size: 32)
!242 = !{!243}
!243 = !DISubrange(count: 2)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !214, file: !211, line: 68, baseType: !245, size: 32, offset: 64)
!245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !246, size: 32)
!246 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !248)
!247 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!248 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !249)
!249 = !{!250}
!250 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !248, file: !247, line: 232, baseType: !251, size: 64)
!251 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !222)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !214, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !214, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!254 = !DIDerivedType(tag: DW_TAG_member, scope: !214, file: !211, line: 90, baseType: !255, size: 16, offset: 112)
!255 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !214, file: !211, line: 90, size: 16, elements: !256)
!256 = !{!257, !264}
!257 = !DIDerivedType(tag: DW_TAG_member, scope: !255, file: !211, line: 91, baseType: !258, size: 16)
!258 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !255, file: !211, line: 91, size: 16, elements: !259)
!259 = !{!260, !263}
!260 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !258, file: !211, line: 96, baseType: !261, size: 8)
!261 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !262)
!262 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !258, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !255, file: !211, line: 100, baseType: !265, size: 16)
!265 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !266)
!266 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !214, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !214, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !214, file: !211, line: 131, baseType: !270, size: 192, offset: 192)
!270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !271)
!271 = !{!272, !273, !279}
!272 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !270, file: !247, line: 245, baseType: !220, size: 64)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !270, file: !247, line: 246, baseType: !274, size: 32, offset: 64)
!274 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !275)
!275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !276, size: 32)
!276 = !DISubroutineType(types: !277)
!277 = !{null, !278}
!278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 32)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !270, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!280 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !281)
!281 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !210, file: !211, line: 250, baseType: !283, size: 288, offset: 384)
!283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !285)
!284 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!285 = !{!286, !287, !288, !289, !290, !291, !292, !293, !294}
!286 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !283, file: !284, line: 26, baseType: !121, size: 32)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !283, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !283, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !283, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !283, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !283, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !283, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !283, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !283, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !210, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !210, file: !211, line: 256, baseType: !246, size: 64, offset: 704)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !210, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !210, file: !211, line: 300, baseType: !299, size: 96, offset: 800)
!299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !300)
!300 = !{!301, !302, !303}
!301 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !299, file: !211, line: 153, baseType: !22, size: 32)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !299, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !299, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !210, file: !211, line: 325, baseType: !305, size: 32, offset: 896)
!305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !306, size: 32)
!306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !308)
!307 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!308 = !{!309, !318, !319}
!309 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !306, file: !307, line: 5074, baseType: !310, size: 96)
!310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !312)
!311 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!312 = !{!313, !316, !317}
!313 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !310, file: !311, line: 57, baseType: !314, size: 32)
!314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !315, size: 32)
!315 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !311, line: 57, flags: DIFlagFwdDecl)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !310, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !310, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !306, file: !307, line: 5075, baseType: !246, size: 64, offset: 96)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !306, file: !307, line: 5076, baseType: !320, offset: 160)
!320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!321 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!322 = !{}
!323 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !210, file: !211, line: 343, baseType: !324, size: 64, offset: 928)
!324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !325)
!325 = !{!326, !327}
!326 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !324, file: !284, line: 63, baseType: !121, size: 32)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !324, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!328 = !{!329, !330, !331, !332}
!329 = !DILocalVariable(name: "thread", arg: 1, scope: !205, file: !206, line: 175, type: !209)
!330 = !DILocalVariable(name: "region_num", scope: !205, file: !206, line: 200, type: !154)
!331 = !DILocalVariable(name: "guard_start", scope: !205, file: !206, line: 265, type: !22)
!332 = !DILocalVariable(name: "guard_size", scope: !205, file: !206, line: 266, type: !200)
!333 = !DICompositeType(tag: DW_TAG_array_type, baseType: !334, size: 96, elements: !345)
!334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !335, line: 52, size: 96, elements: !336)
!335 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!336 = !{!337, !338, !339}
!337 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !334, file: !335, line: 53, baseType: !22, size: 32)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !334, file: !335, line: 54, baseType: !200, size: 32, offset: 32)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !334, file: !335, line: 55, baseType: !340, size: 32, offset: 64)
!340 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !341, line: 151, baseType: !342)
!341 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!342 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !341, line: 149, size: 32, elements: !343)
!343 = !{!344}
!344 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !342, file: !341, line: 150, baseType: !121, size: 32)
!345 = !{!346}
!346 = !DISubrange(count: 1)
!347 = !DICompositeType(tag: DW_TAG_array_type, baseType: !348, size: 96, elements: !345)
!348 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !334)
!349 = !DIGlobalVariableExpression(var: !350, expr: !DIExpression())
!350 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !351, file: !384, line: 39, type: !154, isLocal: true, isDefinition: true)
!351 = distinct !DICompileUnit(language: DW_LANG_C99, file: !352, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !353, globals: !383, splitDebugInlining: false, nameTableKind: None)
!352 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/sensor/thermometer")
!353 = !{!354, !102, !103, !371, !154}
!354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !355, size: 32)
!355 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !356, line: 1226, baseType: !357)
!356 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!357 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 1213, size: 352, elements: !358)
!358 = !{!359, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370}
!359 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !357, file: !356, line: 1215, baseType: !360, size: 32)
!360 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !120)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !357, file: !356, line: 1216, baseType: !120, size: 32, offset: 32)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !357, file: !356, line: 1217, baseType: !120, size: 32, offset: 64)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !357, file: !356, line: 1218, baseType: !120, size: 32, offset: 96)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !357, file: !356, line: 1219, baseType: !120, size: 32, offset: 128)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !357, file: !356, line: 1220, baseType: !120, size: 32, offset: 160)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !357, file: !356, line: 1221, baseType: !120, size: 32, offset: 192)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !357, file: !356, line: 1222, baseType: !120, size: 32, offset: 224)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !357, file: !356, line: 1223, baseType: !120, size: 32, offset: 256)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !357, file: !356, line: 1224, baseType: !120, size: 32, offset: 288)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !357, file: !356, line: 1225, baseType: !120, size: 32, offset: 320)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !372, size: 32)
!372 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !373)
!373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !374, line: 27, size: 96, elements: !375)
!374 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!375 = !{!376, !377, !378}
!376 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !373, file: !374, line: 29, baseType: !121, size: 32)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !373, file: !374, line: 31, baseType: !144, size: 32, offset: 32)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !373, file: !374, line: 37, baseType: !379, size: 32, offset: 64)
!379 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !341, line: 146, baseType: !380)
!380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !341, line: 141, size: 32, elements: !381)
!381 = !{!382}
!382 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !380, file: !341, line: 143, baseType: !121, size: 32)
!383 = !{!349}
!384 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!385 = !DIGlobalVariableExpression(var: !386, expr: !DIExpression())
!386 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !387, file: !394, line: 21, type: !106, isLocal: true, isDefinition: true)
!387 = distinct !DICompileUnit(language: DW_LANG_C99, file: !388, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !389, globals: !393, splitDebugInlining: false, nameTableKind: None)
!388 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/sensor/thermometer")
!389 = !{!390, !103, !102}
!390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !391, size: 32)
!391 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !392, line: 22, baseType: !103)
!392 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!393 = !{!385}
!394 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!395 = !DIGlobalVariableExpression(var: !396, expr: !DIExpression())
!396 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !397, file: !402, line: 13, type: !419, isLocal: true, isDefinition: true)
!397 = distinct !DICompileUnit(language: DW_LANG_C99, file: !398, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !399, splitDebugInlining: false, nameTableKind: None)
!398 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/sensor/thermometer")
!399 = !{!400, !395}
!400 = !DIGlobalVariableExpression(var: !401, expr: !DIExpression())
!401 = distinct !DIGlobalVariable(name: "mpu_config", scope: !397, file: !402, line: 37, type: !403, isLocal: false, isDefinition: true)
!402 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!403 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !404)
!404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !374, line: 41, size: 64, elements: !405)
!405 = !{!406, !407}
!406 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !404, file: !374, line: 43, baseType: !121, size: 32)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !404, file: !374, line: 45, baseType: !408, size: 32, offset: 32)
!408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !409, size: 32)
!409 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !410)
!410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !374, line: 27, size: 96, elements: !411)
!411 = !{!412, !413, !414}
!412 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !410, file: !374, line: 29, baseType: !121, size: 32)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !410, file: !374, line: 31, baseType: !144, size: 32, offset: 32)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !410, file: !374, line: 37, baseType: !415, size: 32, offset: 64)
!415 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !341, line: 146, baseType: !416)
!416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !341, line: 141, size: 32, elements: !417)
!417 = !{!418}
!418 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !416, file: !341, line: 143, baseType: !121, size: 32)
!419 = !DICompositeType(tag: DW_TAG_array_type, baseType: !409, size: 192, elements: !242)
!420 = !DIGlobalVariableExpression(var: !421, expr: !DIExpression())
!421 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !422, file: !527, line: 72, type: !611, isLocal: true, isDefinition: true)
!422 = distinct !DICompileUnit(language: DW_LANG_C99, file: !423, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !424, retainedTypes: !513, globals: !524, splitDebugInlining: false, nameTableKind: None)
!423 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/sensor/thermometer")
!424 = !{!30, !425}
!425 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !116, line: 65, baseType: !103, size: 32, elements: !426)
!426 = !{!427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512}
!427 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!428 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!429 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!430 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!431 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!432 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!433 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!434 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!435 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!436 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!437 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!438 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!439 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!440 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!441 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!442 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!443 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!444 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!445 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!446 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!447 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!448 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!449 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!450 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!451 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!452 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!453 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!454 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!455 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!456 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!457 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!458 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!459 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!460 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!461 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!462 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!463 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!464 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!465 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!466 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!467 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!468 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!469 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!470 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!471 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!472 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!473 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!474 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!475 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!476 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!477 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!478 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!479 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!480 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!481 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!482 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!483 = !DIEnumerator(name: "FSMC_IRQn", value: 48)
!484 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!485 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!486 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!487 = !DIEnumerator(name: "UART4_IRQn", value: 52)
!488 = !DIEnumerator(name: "UART5_IRQn", value: 53)
!489 = !DIEnumerator(name: "TIM6_DAC_IRQn", value: 54)
!490 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!491 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!492 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!493 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!494 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!495 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!496 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!497 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!498 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!499 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!500 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!501 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!502 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!503 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!504 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!505 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!506 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!507 = !DIEnumerator(name: "OTG_HS_EP1_OUT_IRQn", value: 74)
!508 = !DIEnumerator(name: "OTG_HS_EP1_IN_IRQn", value: 75)
!509 = !DIEnumerator(name: "OTG_HS_WKUP_IRQn", value: 76)
!510 = !DIEnumerator(name: "OTG_HS_IRQn", value: 77)
!511 = !DIEnumerator(name: "RNG_IRQn", value: 80)
!512 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!513 = !{!200, !103, !102, !514}
!514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !515, size: 32)
!515 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !116, line: 354, baseType: !516)
!516 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 346, size: 192, elements: !517)
!517 = !{!518, !519, !520, !521, !522, !523}
!518 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !516, file: !116, line: 348, baseType: !120, size: 32)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !516, file: !116, line: 349, baseType: !120, size: 32, offset: 32)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !516, file: !116, line: 350, baseType: !120, size: 32, offset: 64)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !516, file: !116, line: 351, baseType: !120, size: 32, offset: 96)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !516, file: !116, line: 352, baseType: !120, size: 32, offset: 128)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !516, file: !116, line: 353, baseType: !120, size: 32, offset: 160)
!524 = !{!525, !531, !547, !558, !575, !420, !577, !591, !593, !595, !597, !599, !601, !603, !605, !607, !609}
!525 = !DIGlobalVariableExpression(var: !526, expr: !DIExpression())
!526 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_37", scope: !422, file: !527, line: 424, type: !528, isLocal: false, isDefinition: true, align: 16)
!527 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!528 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 64, elements: !529)
!529 = !{!530}
!530 = !DISubrange(count: 4)
!531 = !DIGlobalVariableExpression(var: !532, expr: !DIExpression())
!532 = distinct !DIGlobalVariable(name: "__device_dts_ord_37", scope: !422, file: !527, line: 424, type: !533, isLocal: false, isDefinition: true, align: 32)
!533 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !534)
!534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !535)
!535 = !{!536, !537, !538, !539, !545, !546}
!536 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !534, file: !141, line: 380, baseType: !144, size: 32)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !534, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !534, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !534, file: !141, line: 386, baseType: !540, size: 32, offset: 96)
!540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !541, size: 32)
!541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !542)
!542 = !{!543, !544}
!543 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !541, file: !141, line: 359, baseType: !154, size: 8)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !541, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !534, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !534, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!547 = !DIGlobalVariableExpression(var: !548, expr: !DIExpression())
!548 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_37", scope: !422, file: !527, line: 424, type: !549, isLocal: true, isDefinition: true, align: 32)
!549 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !550)
!550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !551)
!551 = !{!552, !557}
!552 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !550, file: !132, line: 60, baseType: !553, size: 32)
!553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !554, size: 32)
!554 = !DISubroutineType(types: !555)
!555 = !{!103, !556}
!556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !533, size: 32)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !550, file: !132, line: 65, baseType: !556, size: 32, offset: 32)
!558 = !DIGlobalVariableExpression(var: !559, expr: !DIExpression())
!559 = distinct !DIGlobalVariable(name: "exti_data", scope: !422, file: !527, line: 423, type: !560, isLocal: true, isDefinition: true)
!560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !527, line: 107, size: 1472, elements: !561)
!561 = !{!562}
!562 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !560, file: !527, line: 109, baseType: !563, size: 1472)
!563 = !DICompositeType(tag: DW_TAG_array_type, baseType: !564, size: 1472, elements: !573)
!564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !527, line: 101, size: 64, elements: !565)
!565 = !{!566, !572}
!566 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !564, file: !527, line: 102, baseType: !567, size: 32)
!567 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !568, line: 63, baseType: !569)
!568 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !570, size: 32)
!570 = !DISubroutineType(types: !571)
!571 = !{null, !103, !102}
!572 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !564, file: !527, line: 103, baseType: !102, size: 32, offset: 32)
!573 = !{!574}
!574 = !DISubrange(count: 23)
!575 = !DIGlobalVariableExpression(var: !576, expr: !DIExpression())
!576 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_37", scope: !422, file: !527, line: 424, type: !541, isLocal: true, isDefinition: true, align: 8)
!577 = !DIGlobalVariableExpression(var: !578, expr: !DIExpression())
!578 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !579, file: !527, line: 493, type: !584, isLocal: true, isDefinition: true, align: 32)
!579 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !527, file: !527, line: 460, type: !580, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !582)
!580 = !DISubroutineType(types: !581)
!581 = !{null, !556}
!582 = !{!583}
!583 = !DILocalVariable(name: "dev", arg: 1, scope: !579, file: !527, line: 460, type: !556)
!584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !585)
!585 = !{!586, !588, !589, !590}
!586 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !584, file: !10, line: 55, baseType: !587, size: 32)
!587 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !584, file: !10, line: 57, baseType: !587, size: 32, offset: 32)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !584, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !584, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!591 = !DIGlobalVariableExpression(var: !592, expr: !DIExpression())
!592 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !579, file: !527, line: 497, type: !584, isLocal: true, isDefinition: true, align: 32)
!593 = !DIGlobalVariableExpression(var: !594, expr: !DIExpression())
!594 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !579, file: !527, line: 507, type: !584, isLocal: true, isDefinition: true, align: 32)
!595 = !DIGlobalVariableExpression(var: !596, expr: !DIExpression())
!596 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !579, file: !527, line: 512, type: !584, isLocal: true, isDefinition: true, align: 32)
!597 = !DIGlobalVariableExpression(var: !598, expr: !DIExpression())
!598 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !579, file: !527, line: 516, type: !584, isLocal: true, isDefinition: true, align: 32)
!599 = !DIGlobalVariableExpression(var: !600, expr: !DIExpression())
!600 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !579, file: !527, line: 523, type: !584, isLocal: true, isDefinition: true, align: 32)
!601 = !DIGlobalVariableExpression(var: !602, expr: !DIExpression())
!602 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !579, file: !527, line: 527, type: !584, isLocal: true, isDefinition: true, align: 32)
!603 = !DIGlobalVariableExpression(var: !604, expr: !DIExpression())
!604 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !579, file: !527, line: 581, type: !584, isLocal: true, isDefinition: true, align: 32)
!605 = !DIGlobalVariableExpression(var: !606, expr: !DIExpression())
!606 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !579, file: !527, line: 586, type: !584, isLocal: true, isDefinition: true, align: 32)
!607 = !DIGlobalVariableExpression(var: !608, expr: !DIExpression())
!608 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !579, file: !527, line: 591, type: !584, isLocal: true, isDefinition: true, align: 32)
!609 = !DIGlobalVariableExpression(var: !610, expr: !DIExpression())
!610 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !579, file: !527, line: 595, type: !584, isLocal: true, isDefinition: true, align: 32)
!611 = !DICompositeType(tag: DW_TAG_array_type, baseType: !612, size: 736, elements: !573)
!612 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !613)
!613 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !116, line: 155, baseType: !425)
!614 = !DIGlobalVariableExpression(var: !615, expr: !DIExpression())
!615 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_37", scope: !616, file: !621, line: 23, type: !645, isLocal: false, isDefinition: true, align: 16)
!616 = distinct !DICompileUnit(language: DW_LANG_C99, file: !617, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !618, splitDebugInlining: false, nameTableKind: None)
!617 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/sensor/thermometer/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/sensor/thermometer")
!618 = !{!619, !614, !625, !627, !629, !631, !633, !635, !637, !639, !641, !643}
!619 = !DIGlobalVariableExpression(var: !620, expr: !DIExpression())
!620 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !616, file: !621, line: 18, type: !622, isLocal: false, isDefinition: true, align: 16)
!621 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/sensor/thermometer")
!622 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 208, elements: !623)
!623 = !{!624}
!624 = !DISubrange(count: 13)
!625 = !DIGlobalVariableExpression(var: !626, expr: !DIExpression())
!626 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !616, file: !621, line: 30, type: !528, isLocal: false, isDefinition: true, align: 16)
!627 = !DIGlobalVariableExpression(var: !628, expr: !DIExpression())
!628 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !616, file: !621, line: 37, type: !528, isLocal: false, isDefinition: true, align: 16)
!629 = !DIGlobalVariableExpression(var: !630, expr: !DIExpression())
!630 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !616, file: !621, line: 44, type: !528, isLocal: false, isDefinition: true, align: 16)
!631 = !DIGlobalVariableExpression(var: !632, expr: !DIExpression())
!632 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !616, file: !621, line: 51, type: !528, isLocal: false, isDefinition: true, align: 16)
!633 = !DIGlobalVariableExpression(var: !634, expr: !DIExpression())
!634 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !616, file: !621, line: 58, type: !528, isLocal: false, isDefinition: true, align: 16)
!635 = !DIGlobalVariableExpression(var: !636, expr: !DIExpression())
!636 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !616, file: !621, line: 65, type: !528, isLocal: false, isDefinition: true, align: 16)
!637 = !DIGlobalVariableExpression(var: !638, expr: !DIExpression())
!638 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_21", scope: !616, file: !621, line: 72, type: !528, isLocal: false, isDefinition: true, align: 16)
!639 = !DIGlobalVariableExpression(var: !640, expr: !DIExpression())
!640 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !616, file: !621, line: 79, type: !528, isLocal: false, isDefinition: true, align: 16)
!641 = !DIGlobalVariableExpression(var: !642, expr: !DIExpression())
!642 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_74", scope: !616, file: !621, line: 86, type: !528, isLocal: false, isDefinition: true, align: 16)
!643 = !DIGlobalVariableExpression(var: !644, expr: !DIExpression())
!644 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !616, file: !621, line: 93, type: !528, isLocal: false, isDefinition: true, align: 16)
!645 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 48, elements: !646)
!646 = !{!647}
!647 = !DISubrange(count: 3)
!648 = !DIGlobalVariableExpression(var: !649, expr: !DIExpression())
!649 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !650, file: !711, line: 398, type: !744, isLocal: true, isDefinition: true)
!650 = distinct !DICompileUnit(language: DW_LANG_C99, file: !651, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !652, retainedTypes: !665, globals: !708, splitDebugInlining: false, nameTableKind: None)
!651 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/sensor/thermometer")
!652 = !{!653, !30, !658}
!653 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !654, line: 197, baseType: !32, size: 32, elements: !655)
!654 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!655 = !{!656, !657}
!656 = !DIEnumerator(name: "SUCCESS", value: 0)
!657 = !DIEnumerator(name: "ERROR", value: 1)
!658 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !659, line: 44, baseType: !32, size: 32, elements: !660)
!659 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!660 = !{!661, !662, !663, !664}
!661 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!662 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!663 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!664 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!665 = !{!102, !103, !121, !666, !701, !707}
!666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !667, size: 32)
!667 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 532, baseType: !668)
!668 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 500, size: 1088, elements: !669)
!669 = !{!670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700}
!670 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !668, file: !116, line: 502, baseType: !120, size: 32)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !668, file: !116, line: 503, baseType: !120, size: 32, offset: 32)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !668, file: !116, line: 504, baseType: !120, size: 32, offset: 64)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !668, file: !116, line: 505, baseType: !120, size: 32, offset: 96)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !668, file: !116, line: 506, baseType: !120, size: 32, offset: 128)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !668, file: !116, line: 507, baseType: !120, size: 32, offset: 160)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !668, file: !116, line: 508, baseType: !120, size: 32, offset: 192)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !668, file: !116, line: 509, baseType: !121, size: 32, offset: 224)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !668, file: !116, line: 510, baseType: !120, size: 32, offset: 256)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !668, file: !116, line: 511, baseType: !120, size: 32, offset: 288)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !668, file: !116, line: 512, baseType: !681, size: 64, offset: 320)
!681 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 64, elements: !242)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !668, file: !116, line: 513, baseType: !120, size: 32, offset: 384)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !668, file: !116, line: 514, baseType: !120, size: 32, offset: 416)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !668, file: !116, line: 515, baseType: !120, size: 32, offset: 448)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !668, file: !116, line: 516, baseType: !121, size: 32, offset: 480)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !668, file: !116, line: 517, baseType: !120, size: 32, offset: 512)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !668, file: !116, line: 518, baseType: !120, size: 32, offset: 544)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !668, file: !116, line: 519, baseType: !681, size: 64, offset: 576)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !668, file: !116, line: 520, baseType: !120, size: 32, offset: 640)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !668, file: !116, line: 521, baseType: !120, size: 32, offset: 672)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !668, file: !116, line: 522, baseType: !120, size: 32, offset: 704)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !668, file: !116, line: 523, baseType: !121, size: 32, offset: 736)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !668, file: !116, line: 524, baseType: !120, size: 32, offset: 768)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !668, file: !116, line: 525, baseType: !120, size: 32, offset: 800)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !668, file: !116, line: 526, baseType: !681, size: 64, offset: 832)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !668, file: !116, line: 527, baseType: !120, size: 32, offset: 896)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !668, file: !116, line: 528, baseType: !120, size: 32, offset: 928)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !668, file: !116, line: 529, baseType: !681, size: 64, offset: 960)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !668, file: !116, line: 530, baseType: !120, size: 32, offset: 1024)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !668, file: !116, line: 531, baseType: !120, size: 32, offset: 1056)
!701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !702, size: 32)
!702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !703, line: 343, size: 64, elements: !704)
!703 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!704 = !{!705, !706}
!705 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !702, file: !703, line: 344, baseType: !121, size: 32)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !702, file: !703, line: 345, baseType: !121, size: 32, offset: 32)
!707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 32)
!708 = !{!709, !715, !731, !742, !648}
!709 = !DIGlobalVariableExpression(var: !710, expr: !DIExpression())
!710 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !650, file: !711, line: 752, type: !712, isLocal: false, isDefinition: true, align: 16)
!711 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!712 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 928, elements: !713)
!713 = !{!714}
!714 = !DISubrange(count: 58)
!715 = !DIGlobalVariableExpression(var: !716, expr: !DIExpression())
!716 = distinct !DIGlobalVariable(name: "__device_dts_ord_9", scope: !650, file: !711, line: 752, type: !717, isLocal: false, isDefinition: true, align: 32)
!717 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !718)
!718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !719)
!719 = !{!720, !721, !722, !723, !729, !730}
!720 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !718, file: !141, line: 380, baseType: !144, size: 32)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !718, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !718, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !718, file: !141, line: 386, baseType: !724, size: 32, offset: 96)
!724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !725, size: 32)
!725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !726)
!726 = !{!727, !728}
!727 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !725, file: !141, line: 359, baseType: !154, size: 8)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !725, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !718, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !718, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!731 = !DIGlobalVariableExpression(var: !732, expr: !DIExpression())
!732 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_9", scope: !650, file: !711, line: 752, type: !733, isLocal: true, isDefinition: true, align: 32)
!733 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !734)
!734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !735)
!735 = !{!736, !741}
!736 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !734, file: !132, line: 60, baseType: !737, size: 32)
!737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !738, size: 32)
!738 = !DISubroutineType(types: !739)
!739 = !{!103, !740}
!740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !717, size: 32)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !734, file: !132, line: 65, baseType: !740, size: 32, offset: 32)
!742 = !DIGlobalVariableExpression(var: !743, expr: !DIExpression())
!743 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_9", scope: !650, file: !711, line: 752, type: !725, isLocal: true, isDefinition: true, align: 8)
!744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !659, line: 100, size: 224, elements: !745)
!745 = !{!746, !752, !753, !762, !767, !772, !778}
!746 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !744, file: !659, line: 101, baseType: !747, size: 32)
!747 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !659, line: 76, baseType: !748)
!748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !749, size: 32)
!749 = !DISubroutineType(types: !750)
!750 = !{!103, !740, !751}
!751 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !659, line: 56, baseType: !102)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !744, file: !659, line: 102, baseType: !747, size: 32, offset: 32)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !744, file: !659, line: 103, baseType: !754, size: 32, offset: 64)
!754 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !659, line: 83, baseType: !755)
!755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !756, size: 32)
!756 = !DISubroutineType(types: !757)
!757 = !{!103, !740, !751, !758, !102}
!758 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !659, line: 72, baseType: !759)
!759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !760, size: 32)
!760 = !DISubroutineType(types: !761)
!761 = !{null, !740, !751, !102}
!762 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !744, file: !659, line: 104, baseType: !763, size: 32, offset: 96)
!763 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !659, line: 79, baseType: !764)
!764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !765, size: 32)
!765 = !DISubroutineType(types: !766)
!766 = !{!103, !740, !751, !707}
!767 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !744, file: !659, line: 105, baseType: !768, size: 32, offset: 128)
!768 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !659, line: 88, baseType: !769)
!769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !770, size: 32)
!770 = !DISubroutineType(types: !771)
!771 = !{!658, !740, !751}
!772 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !744, file: !659, line: 106, baseType: !773, size: 32, offset: 160)
!773 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !659, line: 92, baseType: !774)
!774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !775, size: 32)
!775 = !DISubroutineType(types: !776)
!776 = !{!103, !740, !751, !777}
!777 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !659, line: 64, baseType: !102)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !744, file: !659, line: 107, baseType: !779, size: 32, offset: 192)
!779 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !659, line: 96, baseType: !780)
!780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !781, size: 32)
!781 = !DISubroutineType(types: !782)
!782 = !{!103, !740, !751, !102}
!783 = !DIGlobalVariableExpression(var: !784, expr: !DIExpression())
!784 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !785, file: !842, line: 603, type: !844, isLocal: true, isDefinition: true, align: 32)
!785 = distinct !DICompileUnit(language: DW_LANG_C99, file: !786, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !787, globals: !839, splitDebugInlining: false, nameTableKind: None)
!786 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/sensor/thermometer")
!787 = !{!102, !103, !788}
!788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !789, size: 32)
!789 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !790)
!790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !791, line: 336, size: 160, elements: !792)
!791 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!792 = !{!793, !813, !817, !821, !834}
!793 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !790, file: !791, line: 365, baseType: !794, size: 32)
!794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !795, size: 32)
!795 = !DISubroutineType(types: !796)
!796 = !{!103, !797, !812}
!797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !798, size: 32)
!798 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !799)
!799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !800)
!800 = !{!801, !802, !803, !804, !810, !811}
!801 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !799, file: !141, line: 380, baseType: !144, size: 32)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !799, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !799, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !799, file: !141, line: 386, baseType: !805, size: 32, offset: 96)
!805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !806, size: 32)
!806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !807)
!807 = !{!808, !809}
!808 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !806, file: !141, line: 359, baseType: !154, size: 8)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !806, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !799, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !799, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !155, size: 32)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !790, file: !791, line: 366, baseType: !814, size: 32, offset: 32)
!814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !815, size: 32)
!815 = !DISubroutineType(types: !816)
!816 = !{null, !797, !155}
!817 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !790, file: !791, line: 374, baseType: !818, size: 32, offset: 64)
!818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !819, size: 32)
!819 = !DISubroutineType(types: !820)
!820 = !{!103, !797}
!821 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !790, file: !791, line: 377, baseType: !822, size: 32, offset: 96)
!822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !823, size: 32)
!823 = !DISubroutineType(types: !824)
!824 = !{!103, !797, !825}
!825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !826, size: 32)
!826 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !827)
!827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !791, line: 122, size: 64, elements: !828)
!828 = !{!829, !830, !831, !832, !833}
!829 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !827, file: !791, line: 123, baseType: !121, size: 32)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !827, file: !791, line: 124, baseType: !154, size: 8, offset: 32)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !827, file: !791, line: 125, baseType: !154, size: 8, offset: 40)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !827, file: !791, line: 126, baseType: !154, size: 8, offset: 48)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !827, file: !791, line: 127, baseType: !154, size: 8, offset: 56)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !790, file: !791, line: 379, baseType: !835, size: 32, offset: 128)
!835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !836, size: 32)
!836 = !DISubroutineType(types: !837)
!837 = !{!103, !797, !838}
!838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !827, size: 32)
!839 = !{!783, !840}
!840 = !DIGlobalVariableExpression(var: !841, expr: !DIExpression())
!841 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !785, file: !842, line: 38, type: !843, isLocal: true, isDefinition: true)
!842 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!843 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !797)
!844 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !845)
!845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !846)
!846 = !{!847, !848}
!847 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !845, file: !132, line: 60, baseType: !818, size: 32)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !845, file: !132, line: 65, baseType: !797, size: 32, offset: 32)
!849 = !DIGlobalVariableExpression(var: !850, expr: !DIExpression())
!850 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !851, file: !1021, line: 762, type: !1140, isLocal: true, isDefinition: true)
!851 = distinct !DICompileUnit(language: DW_LANG_C99, file: !852, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !853, retainedTypes: !871, globals: !1018, splitDebugInlining: false, nameTableKind: None)
!852 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/sensor/thermometer")
!853 = !{!30, !854, !860, !865, !658}
!854 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !855, line: 506, baseType: !32, size: 32, elements: !856)
!855 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!856 = !{!857, !858, !859}
!857 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!858 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!859 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!860 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !855, line: 512, baseType: !32, size: 32, elements: !861)
!861 = !{!862, !863, !864}
!862 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!863 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!864 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!865 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !568, line: 43, baseType: !32, size: 32, elements: !866)
!866 = !{!867, !868, !869, !870}
!867 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!868 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!869 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!870 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!871 = !{!102, !103, !872, !942, !947, !907, !860, !854, !952, !953, !121, !967, !922, !977, !978, !979}
!872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !873, size: 32)
!873 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !874)
!874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !855, line: 523, size: 288, elements: !875)
!875 = !{!876, !897, !903, !908, !912, !913, !914, !918, !938}
!876 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !874, file: !855, line: 524, baseType: !877, size: 32)
!877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !878, size: 32)
!878 = !DISubroutineType(types: !879)
!879 = !{!103, !880, !895, !896}
!880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !881, size: 32)
!881 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !882)
!882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !883)
!883 = !{!884, !885, !886, !887, !893, !894}
!884 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !882, file: !141, line: 380, baseType: !144, size: 32)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !882, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !882, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !882, file: !141, line: 386, baseType: !888, size: 32, offset: 96)
!888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !889, size: 32)
!889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !890)
!890 = !{!891, !892}
!891 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !889, file: !141, line: 359, baseType: !154, size: 8)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !889, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !882, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !882, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!895 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !855, line: 237, baseType: !154)
!896 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !855, line: 257, baseType: !121)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !874, file: !855, line: 530, baseType: !898, size: 32, offset: 32)
!898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !899, size: 32)
!899 = !DISubroutineType(types: !900)
!900 = !{!103, !880, !901}
!901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !902, size: 32)
!902 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !855, line: 229, baseType: !121)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !874, file: !855, line: 532, baseType: !904, size: 32, offset: 64)
!904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !905, size: 32)
!905 = !DISubroutineType(types: !906)
!906 = !{!103, !880, !907, !902}
!907 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !855, line: 216, baseType: !121)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !874, file: !855, line: 535, baseType: !909, size: 32, offset: 96)
!909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !910, size: 32)
!910 = !DISubroutineType(types: !911)
!911 = !{!103, !880, !907}
!912 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !874, file: !855, line: 537, baseType: !909, size: 32, offset: 128)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !874, file: !855, line: 539, baseType: !909, size: 32, offset: 160)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !874, file: !855, line: 541, baseType: !915, size: 32, offset: 192)
!915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !916, size: 32)
!916 = !DISubroutineType(types: !917)
!917 = !{!103, !880, !895, !854, !860}
!918 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !874, file: !855, line: 544, baseType: !919, size: 32, offset: 224)
!919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !920, size: 32)
!920 = !DISubroutineType(types: !921)
!921 = !{!103, !880, !922, !157}
!922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !923, size: 32)
!923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !855, line: 478, size: 96, elements: !924)
!924 = !{!925, !932, !937}
!925 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !923, file: !855, line: 482, baseType: !926, size: 32)
!926 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !927, line: 33, baseType: !928)
!927 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !927, line: 29, size: 32, elements: !929)
!929 = !{!930}
!930 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !928, file: !927, line: 30, baseType: !931, size: 32)
!931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !928, size: 32)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !923, file: !855, line: 485, baseType: !933, size: 32, offset: 32)
!933 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !855, line: 464, baseType: !934)
!934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !935, size: 32)
!935 = !DISubroutineType(types: !936)
!936 = !{null, !880, !922, !907}
!937 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !923, file: !855, line: 493, baseType: !907, size: 32, offset: 64)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !874, file: !855, line: 547, baseType: !939, size: 32, offset: 256)
!939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !940, size: 32)
!940 = !DISubroutineType(types: !941)
!941 = !{!121, !880}
!942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !943, size: 32)
!943 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !944)
!944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !855, line: 428, size: 32, elements: !945)
!945 = !{!946}
!946 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !944, file: !855, line: 434, baseType: !907, size: 32)
!947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !948, size: 32)
!948 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !949)
!949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !855, line: 441, size: 32, elements: !950)
!950 = !{!951}
!951 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !949, file: !855, line: 447, baseType: !907, size: 32)
!952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !949, size: 32)
!953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !954, size: 32)
!954 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !116, line: 441, baseType: !955)
!955 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 430, size: 320, elements: !956)
!956 = !{!957, !958, !959, !960, !961, !962, !963, !964, !965}
!957 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !955, file: !116, line: 432, baseType: !120, size: 32)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !955, file: !116, line: 433, baseType: !120, size: 32, offset: 32)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !955, file: !116, line: 434, baseType: !120, size: 32, offset: 64)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !955, file: !116, line: 435, baseType: !120, size: 32, offset: 96)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !955, file: !116, line: 436, baseType: !120, size: 32, offset: 128)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !955, file: !116, line: 437, baseType: !120, size: 32, offset: 160)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !955, file: !116, line: 438, baseType: !120, size: 32, offset: 192)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !955, file: !116, line: 439, baseType: !120, size: 32, offset: 224)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !955, file: !116, line: 440, baseType: !966, size: 64, offset: 256)
!966 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 64, elements: !242)
!967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !968, size: 32)
!968 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !116, line: 454, baseType: !969)
!969 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 447, size: 288, elements: !970)
!970 = !{!971, !972, !973, !975, !976}
!971 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !969, file: !116, line: 449, baseType: !120, size: 32)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !969, file: !116, line: 450, baseType: !120, size: 32, offset: 32)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !969, file: !116, line: 451, baseType: !974, size: 128, offset: 64)
!974 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 128, elements: !529)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !969, file: !116, line: 452, baseType: !681, size: 64, offset: 192)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !969, file: !116, line: 453, baseType: !120, size: 32, offset: 256)
!977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !146, size: 32)
!978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !751, size: 32)
!979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !980, size: 32)
!980 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !981)
!981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !659, line: 100, size: 224, elements: !982)
!982 = !{!983, !988, !989, !998, !1003, !1008, !1013}
!983 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !981, file: !659, line: 101, baseType: !984, size: 32)
!984 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !659, line: 76, baseType: !985)
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 32)
!986 = !DISubroutineType(types: !987)
!987 = !{!103, !880, !751}
!988 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !981, file: !659, line: 102, baseType: !984, size: 32, offset: 32)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !981, file: !659, line: 103, baseType: !990, size: 32, offset: 64)
!990 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !659, line: 83, baseType: !991)
!991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 32)
!992 = !DISubroutineType(types: !993)
!993 = !{!103, !880, !751, !994, !102}
!994 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !659, line: 72, baseType: !995)
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 32)
!996 = !DISubroutineType(types: !997)
!997 = !{null, !880, !751, !102}
!998 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !981, file: !659, line: 104, baseType: !999, size: 32, offset: 96)
!999 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !659, line: 79, baseType: !1000)
!1000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1001, size: 32)
!1001 = !DISubroutineType(types: !1002)
!1002 = !{!103, !880, !751, !707}
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !981, file: !659, line: 105, baseType: !1004, size: 32, offset: 128)
!1004 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !659, line: 88, baseType: !1005)
!1005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1006, size: 32)
!1006 = !DISubroutineType(types: !1007)
!1007 = !{!658, !880, !751}
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !981, file: !659, line: 106, baseType: !1009, size: 32, offset: 160)
!1009 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !659, line: 92, baseType: !1010)
!1010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1011, size: 32)
!1011 = !DISubroutineType(types: !1012)
!1012 = !{!103, !880, !751, !777}
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !981, file: !659, line: 107, baseType: !1014, size: 32, offset: 192)
!1014 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !659, line: 96, baseType: !1015)
!1015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1016, size: 32)
!1016 = !DISubroutineType(types: !1017)
!1017 = !{!103, !880, !751, !102}
!1018 = !{!1019, !1025, !1027, !1037, !1042, !1044, !1046, !1048, !1050, !1052, !1054, !1056, !1058, !1060, !1062, !1064, !1066, !1068, !1070, !1072, !1074, !1076, !1078, !1080, !1082, !1084, !1086, !1088, !1102, !1104, !1106, !1108, !1110, !1112, !1114, !1116, !1118, !1120, !1122, !1124, !1126, !1128, !1130, !1132, !1134, !849, !1136, !1138, !1151, !1153, !1155, !1157, !1159, !1161, !1163}
!1019 = !DIGlobalVariableExpression(var: !1020, expr: !DIExpression())
!1020 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_74", scope: !851, file: !1021, line: 762, type: !1022, isLocal: false, isDefinition: true, align: 16)
!1021 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1022 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 96, elements: !1023)
!1023 = !{!1024}
!1024 = !DISubrange(count: 6)
!1025 = !DIGlobalVariableExpression(var: !1026, expr: !DIExpression())
!1026 = distinct !DIGlobalVariable(name: "__device_dts_ord_74", scope: !851, file: !1021, line: 762, type: !881, isLocal: false, isDefinition: true, align: 32)
!1027 = !DIGlobalVariableExpression(var: !1028, expr: !DIExpression())
!1028 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_74", scope: !851, file: !1021, line: 762, type: !1029, isLocal: true, isDefinition: true, align: 32)
!1029 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1030)
!1030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1031)
!1031 = !{!1032, !1036}
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1030, file: !132, line: 60, baseType: !1033, size: 32)
!1033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1034, size: 32)
!1034 = !DISubroutineType(types: !1035)
!1035 = !{!103, !880}
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1030, file: !132, line: 65, baseType: !880, size: 32, offset: 32)
!1037 = !DIGlobalVariableExpression(var: !1038, expr: !DIExpression())
!1038 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !851, file: !1021, line: 766, type: !1039, isLocal: false, isDefinition: true, align: 16)
!1039 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 80, elements: !1040)
!1040 = !{!1041}
!1041 = !DISubrange(count: 5)
!1042 = !DIGlobalVariableExpression(var: !1043, expr: !DIExpression())
!1043 = distinct !DIGlobalVariable(name: "__device_dts_ord_67", scope: !851, file: !1021, line: 766, type: !881, isLocal: false, isDefinition: true, align: 32)
!1044 = !DIGlobalVariableExpression(var: !1045, expr: !DIExpression())
!1045 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_67", scope: !851, file: !1021, line: 766, type: !1029, isLocal: true, isDefinition: true, align: 32)
!1046 = !DIGlobalVariableExpression(var: !1047, expr: !DIExpression())
!1047 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_21", scope: !851, file: !1021, line: 770, type: !1022, isLocal: false, isDefinition: true, align: 16)
!1048 = !DIGlobalVariableExpression(var: !1049, expr: !DIExpression())
!1049 = distinct !DIGlobalVariable(name: "__device_dts_ord_21", scope: !851, file: !1021, line: 770, type: !881, isLocal: false, isDefinition: true, align: 32)
!1050 = !DIGlobalVariableExpression(var: !1051, expr: !DIExpression())
!1051 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_21", scope: !851, file: !1021, line: 770, type: !1029, isLocal: true, isDefinition: true, align: 32)
!1052 = !DIGlobalVariableExpression(var: !1053, expr: !DIExpression())
!1053 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !851, file: !1021, line: 774, type: !1039, isLocal: false, isDefinition: true, align: 16)
!1054 = !DIGlobalVariableExpression(var: !1055, expr: !DIExpression())
!1055 = distinct !DIGlobalVariable(name: "__device_dts_ord_68", scope: !851, file: !1021, line: 774, type: !881, isLocal: false, isDefinition: true, align: 32)
!1056 = !DIGlobalVariableExpression(var: !1057, expr: !DIExpression())
!1057 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_68", scope: !851, file: !1021, line: 774, type: !1029, isLocal: true, isDefinition: true, align: 32)
!1058 = !DIGlobalVariableExpression(var: !1059, expr: !DIExpression())
!1059 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !851, file: !1021, line: 778, type: !1039, isLocal: false, isDefinition: true, align: 16)
!1060 = !DIGlobalVariableExpression(var: !1061, expr: !DIExpression())
!1061 = distinct !DIGlobalVariable(name: "__device_dts_ord_69", scope: !851, file: !1021, line: 778, type: !881, isLocal: false, isDefinition: true, align: 32)
!1062 = !DIGlobalVariableExpression(var: !1063, expr: !DIExpression())
!1063 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_69", scope: !851, file: !1021, line: 778, type: !1029, isLocal: true, isDefinition: true, align: 32)
!1064 = !DIGlobalVariableExpression(var: !1065, expr: !DIExpression())
!1065 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !851, file: !1021, line: 782, type: !1039, isLocal: false, isDefinition: true, align: 16)
!1066 = !DIGlobalVariableExpression(var: !1067, expr: !DIExpression())
!1067 = distinct !DIGlobalVariable(name: "__device_dts_ord_70", scope: !851, file: !1021, line: 782, type: !881, isLocal: false, isDefinition: true, align: 32)
!1068 = !DIGlobalVariableExpression(var: !1069, expr: !DIExpression())
!1069 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_70", scope: !851, file: !1021, line: 782, type: !1029, isLocal: true, isDefinition: true, align: 32)
!1070 = !DIGlobalVariableExpression(var: !1071, expr: !DIExpression())
!1071 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !851, file: !1021, line: 786, type: !1039, isLocal: false, isDefinition: true, align: 16)
!1072 = !DIGlobalVariableExpression(var: !1073, expr: !DIExpression())
!1073 = distinct !DIGlobalVariable(name: "__device_dts_ord_71", scope: !851, file: !1021, line: 786, type: !881, isLocal: false, isDefinition: true, align: 32)
!1074 = !DIGlobalVariableExpression(var: !1075, expr: !DIExpression())
!1075 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_71", scope: !851, file: !1021, line: 786, type: !1029, isLocal: true, isDefinition: true, align: 32)
!1076 = !DIGlobalVariableExpression(var: !1077, expr: !DIExpression())
!1077 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !851, file: !1021, line: 790, type: !1039, isLocal: false, isDefinition: true, align: 16)
!1078 = !DIGlobalVariableExpression(var: !1079, expr: !DIExpression())
!1079 = distinct !DIGlobalVariable(name: "__device_dts_ord_72", scope: !851, file: !1021, line: 790, type: !881, isLocal: false, isDefinition: true, align: 32)
!1080 = !DIGlobalVariableExpression(var: !1081, expr: !DIExpression())
!1081 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_72", scope: !851, file: !1021, line: 790, type: !1029, isLocal: true, isDefinition: true, align: 32)
!1082 = !DIGlobalVariableExpression(var: !1083, expr: !DIExpression())
!1083 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !851, file: !1021, line: 794, type: !1039, isLocal: false, isDefinition: true, align: 16)
!1084 = !DIGlobalVariableExpression(var: !1085, expr: !DIExpression())
!1085 = distinct !DIGlobalVariable(name: "__device_dts_ord_73", scope: !851, file: !1021, line: 794, type: !881, isLocal: false, isDefinition: true, align: 32)
!1086 = !DIGlobalVariableExpression(var: !1087, expr: !DIExpression())
!1087 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_73", scope: !851, file: !1021, line: 794, type: !1029, isLocal: true, isDefinition: true, align: 32)
!1088 = !DIGlobalVariableExpression(var: !1089, expr: !DIExpression())
!1089 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !851, file: !1021, line: 762, type: !1090, isLocal: true, isDefinition: true)
!1090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1091, line: 237, size: 128, elements: !1092)
!1091 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1092 = !{!1093, !1094, !1095}
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1090, file: !1091, line: 239, baseType: !949, size: 32)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1090, file: !1091, line: 241, baseType: !880, size: 32, offset: 32)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1090, file: !1091, line: 243, baseType: !1096, size: 64, offset: 64)
!1096 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !927, line: 40, baseType: !1097)
!1097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !927, line: 35, size: 64, elements: !1098)
!1098 = !{!1099, !1101}
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1097, file: !927, line: 36, baseType: !1100, size: 32)
!1100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 32)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1097, file: !927, line: 37, baseType: !1100, size: 32, offset: 32)
!1102 = !DIGlobalVariableExpression(var: !1103, expr: !DIExpression())
!1103 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_74", scope: !851, file: !1021, line: 762, type: !889, isLocal: true, isDefinition: true, align: 8)
!1104 = !DIGlobalVariableExpression(var: !1105, expr: !DIExpression())
!1105 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !851, file: !1021, line: 766, type: !1090, isLocal: true, isDefinition: true)
!1106 = !DIGlobalVariableExpression(var: !1107, expr: !DIExpression())
!1107 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_67", scope: !851, file: !1021, line: 766, type: !889, isLocal: true, isDefinition: true, align: 8)
!1108 = !DIGlobalVariableExpression(var: !1109, expr: !DIExpression())
!1109 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !851, file: !1021, line: 770, type: !1090, isLocal: true, isDefinition: true)
!1110 = !DIGlobalVariableExpression(var: !1111, expr: !DIExpression())
!1111 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_21", scope: !851, file: !1021, line: 770, type: !889, isLocal: true, isDefinition: true, align: 8)
!1112 = !DIGlobalVariableExpression(var: !1113, expr: !DIExpression())
!1113 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !851, file: !1021, line: 774, type: !1090, isLocal: true, isDefinition: true)
!1114 = !DIGlobalVariableExpression(var: !1115, expr: !DIExpression())
!1115 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_68", scope: !851, file: !1021, line: 774, type: !889, isLocal: true, isDefinition: true, align: 8)
!1116 = !DIGlobalVariableExpression(var: !1117, expr: !DIExpression())
!1117 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !851, file: !1021, line: 778, type: !1090, isLocal: true, isDefinition: true)
!1118 = !DIGlobalVariableExpression(var: !1119, expr: !DIExpression())
!1119 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_69", scope: !851, file: !1021, line: 778, type: !889, isLocal: true, isDefinition: true, align: 8)
!1120 = !DIGlobalVariableExpression(var: !1121, expr: !DIExpression())
!1121 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !851, file: !1021, line: 782, type: !1090, isLocal: true, isDefinition: true)
!1122 = !DIGlobalVariableExpression(var: !1123, expr: !DIExpression())
!1123 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_70", scope: !851, file: !1021, line: 782, type: !889, isLocal: true, isDefinition: true, align: 8)
!1124 = !DIGlobalVariableExpression(var: !1125, expr: !DIExpression())
!1125 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !851, file: !1021, line: 786, type: !1090, isLocal: true, isDefinition: true)
!1126 = !DIGlobalVariableExpression(var: !1127, expr: !DIExpression())
!1127 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_71", scope: !851, file: !1021, line: 786, type: !889, isLocal: true, isDefinition: true, align: 8)
!1128 = !DIGlobalVariableExpression(var: !1129, expr: !DIExpression())
!1129 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !851, file: !1021, line: 790, type: !1090, isLocal: true, isDefinition: true)
!1130 = !DIGlobalVariableExpression(var: !1131, expr: !DIExpression())
!1131 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_72", scope: !851, file: !1021, line: 790, type: !889, isLocal: true, isDefinition: true, align: 8)
!1132 = !DIGlobalVariableExpression(var: !1133, expr: !DIExpression())
!1133 = distinct !DIGlobalVariable(name: "gpio_stm32_data_i", scope: !851, file: !1021, line: 794, type: !1090, isLocal: true, isDefinition: true)
!1134 = !DIGlobalVariableExpression(var: !1135, expr: !DIExpression())
!1135 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_73", scope: !851, file: !1021, line: 794, type: !889, isLocal: true, isDefinition: true, align: 8)
!1136 = !DIGlobalVariableExpression(var: !1137, expr: !DIExpression())
!1137 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !851, file: !1021, line: 656, type: !873, isLocal: true, isDefinition: true)
!1138 = !DIGlobalVariableExpression(var: !1139, expr: !DIExpression())
!1139 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !851, file: !1021, line: 766, type: !1140, isLocal: true, isDefinition: true)
!1140 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1141)
!1141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1091, line: 224, size: 160, elements: !1142)
!1142 = !{!1143, !1144, !1145, !1146}
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1141, file: !1091, line: 226, baseType: !944, size: 32)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1141, file: !1091, line: 228, baseType: !707, size: 32, offset: 32)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1141, file: !1091, line: 230, baseType: !103, size: 32, offset: 64)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1141, file: !1091, line: 231, baseType: !1147, size: 64, offset: 96)
!1147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !703, line: 343, size: 64, elements: !1148)
!1148 = !{!1149, !1150}
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1147, file: !703, line: 344, baseType: !121, size: 32)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1147, file: !703, line: 345, baseType: !121, size: 32, offset: 32)
!1151 = !DIGlobalVariableExpression(var: !1152, expr: !DIExpression())
!1152 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !851, file: !1021, line: 770, type: !1140, isLocal: true, isDefinition: true)
!1153 = !DIGlobalVariableExpression(var: !1154, expr: !DIExpression())
!1154 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !851, file: !1021, line: 774, type: !1140, isLocal: true, isDefinition: true)
!1155 = !DIGlobalVariableExpression(var: !1156, expr: !DIExpression())
!1156 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !851, file: !1021, line: 778, type: !1140, isLocal: true, isDefinition: true)
!1157 = !DIGlobalVariableExpression(var: !1158, expr: !DIExpression())
!1158 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !851, file: !1021, line: 782, type: !1140, isLocal: true, isDefinition: true)
!1159 = !DIGlobalVariableExpression(var: !1160, expr: !DIExpression())
!1160 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !851, file: !1021, line: 786, type: !1140, isLocal: true, isDefinition: true)
!1161 = !DIGlobalVariableExpression(var: !1162, expr: !DIExpression())
!1162 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !851, file: !1021, line: 790, type: !1140, isLocal: true, isDefinition: true)
!1163 = !DIGlobalVariableExpression(var: !1164, expr: !DIExpression())
!1164 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_i", scope: !851, file: !1021, line: 794, type: !1140, isLocal: true, isDefinition: true)
!1165 = !DIGlobalVariableExpression(var: !1166, expr: !DIExpression())
!1166 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1167, file: !1308, line: 1914, type: !1369, isLocal: true, isDefinition: true)
!1167 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1168, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1169, retainedTypes: !1202, globals: !1305, splitDebugInlining: false, nameTableKind: None)
!1168 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/sensor/thermometer")
!1169 = !{!30, !1170, !1177, !1184, !1191, !1197, !658}
!1170 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !791, line: 47, baseType: !32, size: 32, elements: !1171)
!1171 = !{!1172, !1173, !1174, !1175, !1176}
!1172 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1173 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1174 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1175 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1176 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1177 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !791, line: 75, baseType: !32, size: 32, elements: !1178)
!1178 = !{!1179, !1180, !1181, !1182, !1183}
!1179 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1180 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1181 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1182 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1183 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1184 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !791, line: 92, baseType: !32, size: 32, elements: !1185)
!1185 = !{!1186, !1187, !1188, !1189, !1190}
!1186 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1187 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1188 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1189 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1190 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1191 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !791, line: 84, baseType: !32, size: 32, elements: !1192)
!1192 = !{!1193, !1194, !1195, !1196}
!1193 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1194 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1195 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1196 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1197 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !791, line: 107, baseType: !32, size: 32, elements: !1198)
!1198 = !{!1199, !1200, !1201}
!1199 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1200 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1201 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1202 = !{!102, !103, !1203, !155, !154, !1252, !121, !751, !1263, !265, !1302, !1304}
!1203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1204, size: 32)
!1204 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1205)
!1205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !791, line: 336, size: 160, elements: !1206)
!1206 = !{!1207, !1226, !1230, !1234, !1247}
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1205, file: !791, line: 365, baseType: !1208, size: 32)
!1208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1209, size: 32)
!1209 = !DISubroutineType(types: !1210)
!1210 = !{!103, !1211, !812}
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1212, size: 32)
!1212 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1213)
!1213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1214)
!1214 = !{!1215, !1216, !1217, !1218, !1224, !1225}
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1213, file: !141, line: 380, baseType: !144, size: 32)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1213, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1213, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1213, file: !141, line: 386, baseType: !1219, size: 32, offset: 96)
!1219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1220, size: 32)
!1220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1221)
!1221 = !{!1222, !1223}
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1220, file: !141, line: 359, baseType: !154, size: 8)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1220, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1213, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1213, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1205, file: !791, line: 366, baseType: !1227, size: 32, offset: 32)
!1227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1228, size: 32)
!1228 = !DISubroutineType(types: !1229)
!1229 = !{null, !1211, !155}
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1205, file: !791, line: 374, baseType: !1231, size: 32, offset: 64)
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 32)
!1232 = !DISubroutineType(types: !1233)
!1233 = !{!103, !1211}
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1205, file: !791, line: 377, baseType: !1235, size: 32, offset: 96)
!1235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1236, size: 32)
!1236 = !DISubroutineType(types: !1237)
!1237 = !{!103, !1211, !1238}
!1238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1239, size: 32)
!1239 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1240)
!1240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !791, line: 122, size: 64, elements: !1241)
!1241 = !{!1242, !1243, !1244, !1245, !1246}
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1240, file: !791, line: 123, baseType: !121, size: 32)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1240, file: !791, line: 124, baseType: !154, size: 8, offset: 32)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1240, file: !791, line: 125, baseType: !154, size: 8, offset: 40)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1240, file: !791, line: 126, baseType: !154, size: 8, offset: 48)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1240, file: !791, line: 127, baseType: !154, size: 8, offset: 56)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1205, file: !791, line: 379, baseType: !1248, size: 32, offset: 128)
!1248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1249, size: 32)
!1249 = !DISubroutineType(types: !1250)
!1250 = !{!103, !1211, !1251}
!1251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1240, size: 32)
!1252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1253, size: 32)
!1253 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !116, line: 670, baseType: !1254)
!1254 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 661, size: 224, elements: !1255)
!1255 = !{!1256, !1257, !1258, !1259, !1260, !1261, !1262}
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1254, file: !116, line: 663, baseType: !120, size: 32)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1254, file: !116, line: 664, baseType: !120, size: 32, offset: 32)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1254, file: !116, line: 665, baseType: !120, size: 32, offset: 64)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1254, file: !116, line: 666, baseType: !120, size: 32, offset: 96)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1254, file: !116, line: 667, baseType: !120, size: 32, offset: 128)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1254, file: !116, line: 668, baseType: !120, size: 32, offset: 160)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1254, file: !116, line: 669, baseType: !120, size: 32, offset: 192)
!1263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1264, size: 32)
!1264 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1265)
!1265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !659, line: 100, size: 224, elements: !1266)
!1266 = !{!1267, !1272, !1273, !1282, !1287, !1292, !1297}
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1265, file: !659, line: 101, baseType: !1268, size: 32)
!1268 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !659, line: 76, baseType: !1269)
!1269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1270, size: 32)
!1270 = !DISubroutineType(types: !1271)
!1271 = !{!103, !1211, !751}
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1265, file: !659, line: 102, baseType: !1268, size: 32, offset: 32)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1265, file: !659, line: 103, baseType: !1274, size: 32, offset: 64)
!1274 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !659, line: 83, baseType: !1275)
!1275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1276, size: 32)
!1276 = !DISubroutineType(types: !1277)
!1277 = !{!103, !1211, !751, !1278, !102}
!1278 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !659, line: 72, baseType: !1279)
!1279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1280, size: 32)
!1280 = !DISubroutineType(types: !1281)
!1281 = !{null, !1211, !751, !102}
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1265, file: !659, line: 104, baseType: !1283, size: 32, offset: 96)
!1283 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !659, line: 79, baseType: !1284)
!1284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1285, size: 32)
!1285 = !DISubroutineType(types: !1286)
!1286 = !{!103, !1211, !751, !707}
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1265, file: !659, line: 105, baseType: !1288, size: 32, offset: 128)
!1288 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !659, line: 88, baseType: !1289)
!1289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1290, size: 32)
!1290 = !DISubroutineType(types: !1291)
!1291 = !{!658, !1211, !751}
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1265, file: !659, line: 106, baseType: !1293, size: 32, offset: 160)
!1293 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !659, line: 92, baseType: !1294)
!1294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1295, size: 32)
!1295 = !DISubroutineType(types: !1296)
!1296 = !{!103, !1211, !751, !777}
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1265, file: !659, line: 107, baseType: !1298, size: 32, offset: 192)
!1298 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !659, line: 96, baseType: !1299)
!1299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1300, size: 32)
!1300 = !DISubroutineType(types: !1301)
!1301 = !{!103, !1211, !751, !102}
!1302 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !1303)
!1303 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!1304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 32)
!1305 = !{!1306, !1312, !1314, !1321, !1165, !1323, !1331, !1354, !1357, !1360, !1362}
!1306 = !DIGlobalVariableExpression(var: !1307, expr: !DIExpression())
!1307 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1167, file: !1308, line: 1914, type: !1309, isLocal: false, isDefinition: true, align: 16)
!1308 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1309 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 128, elements: !1310)
!1310 = !{!1311}
!1311 = !DISubrange(count: 8)
!1312 = !DIGlobalVariableExpression(var: !1313, expr: !DIExpression())
!1313 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1167, file: !1308, line: 1914, type: !1212, isLocal: false, isDefinition: true, align: 32)
!1314 = !DIGlobalVariableExpression(var: !1315, expr: !DIExpression())
!1315 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1167, file: !1308, line: 1914, type: !1316, isLocal: true, isDefinition: true, align: 32)
!1316 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1317)
!1317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1318)
!1318 = !{!1319, !1320}
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1317, file: !132, line: 60, baseType: !1231, size: 32)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1317, file: !132, line: 65, baseType: !1211, size: 32, offset: 32)
!1321 = !DIGlobalVariableExpression(var: !1322, expr: !DIExpression())
!1322 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1167, file: !1308, line: 1914, type: !1220, isLocal: true, isDefinition: true, align: 8)
!1323 = !DIGlobalVariableExpression(var: !1324, expr: !DIExpression())
!1324 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1167, file: !1308, line: 1914, type: !1325, isLocal: true, isDefinition: true)
!1325 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1326, size: 64, elements: !345)
!1326 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1327)
!1327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !703, line: 343, size: 64, elements: !1328)
!1328 = !{!1329, !1330}
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1327, file: !703, line: 344, baseType: !121, size: 32)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1327, file: !703, line: 345, baseType: !121, size: 32, offset: 32)
!1331 = !DIGlobalVariableExpression(var: !1332, expr: !DIExpression())
!1332 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1167, file: !1308, line: 1914, type: !1333, isLocal: true, isDefinition: true)
!1333 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1334)
!1334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1335, line: 60, size: 64, elements: !1336)
!1335 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1336 = !{!1337, !1353}
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1334, file: !1335, line: 69, baseType: !1338, size: 32)
!1338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1339, size: 32)
!1339 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1340)
!1340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1335, line: 50, size: 64, elements: !1341)
!1341 = !{!1342, !1351, !1352}
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1340, file: !1335, line: 52, baseType: !1343, size: 32)
!1343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1344, size: 32)
!1344 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1345)
!1345 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1346, line: 37, baseType: !1347)
!1346 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1346, line: 32, size: 64, elements: !1348)
!1348 = !{!1349, !1350}
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1347, file: !1346, line: 34, baseType: !121, size: 32)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1347, file: !1346, line: 36, baseType: !121, size: 32, offset: 32)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1340, file: !1335, line: 54, baseType: !154, size: 8, offset: 32)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1340, file: !1335, line: 56, baseType: !154, size: 8, offset: 40)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1334, file: !1335, line: 71, baseType: !154, size: 8, offset: 32)
!1354 = !DIGlobalVariableExpression(var: !1355, expr: !DIExpression())
!1355 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1167, file: !1308, line: 1914, type: !1356, isLocal: true, isDefinition: true)
!1356 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1339, size: 64, elements: !345)
!1357 = !DIGlobalVariableExpression(var: !1358, expr: !DIExpression())
!1358 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1167, file: !1308, line: 1914, type: !1359, isLocal: true, isDefinition: true)
!1359 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1344, size: 128, elements: !242)
!1360 = !DIGlobalVariableExpression(var: !1361, expr: !DIExpression())
!1361 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1167, file: !1308, line: 1539, type: !1204, isLocal: true, isDefinition: true)
!1362 = !DIGlobalVariableExpression(var: !1363, expr: !DIExpression())
!1363 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1167, file: !1308, line: 1914, type: !1364, isLocal: true, isDefinition: true)
!1364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1365, line: 74, size: 64, elements: !1366)
!1365 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1366 = !{!1367, !1368}
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1364, file: !1365, line: 76, baseType: !121, size: 32)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1364, file: !1365, line: 78, baseType: !1211, size: 32, offset: 32)
!1369 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1370)
!1370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1365, line: 22, size: 224, elements: !1371)
!1371 = !{!1372, !1373, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382}
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1370, file: !1365, line: 24, baseType: !1252, size: 32)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1370, file: !1365, line: 26, baseType: !1374, size: 32, offset: 32)
!1374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1326, size: 32)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1370, file: !1365, line: 28, baseType: !200, size: 32, offset: 64)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1370, file: !1365, line: 30, baseType: !157, size: 8, offset: 96)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1370, file: !1365, line: 32, baseType: !103, size: 32, offset: 128)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1370, file: !1365, line: 34, baseType: !157, size: 8, offset: 160)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1370, file: !1365, line: 36, baseType: !157, size: 8, offset: 168)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1370, file: !1365, line: 38, baseType: !157, size: 8, offset: 176)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1370, file: !1365, line: 40, baseType: !157, size: 8, offset: 184)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1370, file: !1365, line: 41, baseType: !1383, size: 32, offset: 192)
!1383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1333, size: 32)
!1384 = !DIGlobalVariableExpression(var: !1385, expr: !DIExpression())
!1385 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1386, file: !1466, line: 65, type: !120, isLocal: true, isDefinition: true)
!1386 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1387, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1388, retainedTypes: !1389, globals: !1463, splitDebugInlining: false, nameTableKind: None)
!1387 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/sensor/thermometer")
!1388 = !{!425}
!1389 = !{!1390, !1392, !587, !154, !121, !1400, !1431}
!1390 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !1391, line: 46, baseType: !280)
!1391 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1393, size: 32)
!1393 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !356, line: 770, baseType: !1394)
!1394 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 764, size: 128, elements: !1395)
!1395 = !{!1396, !1397, !1398, !1399}
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1394, file: !356, line: 766, baseType: !120, size: 32)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1394, file: !356, line: 767, baseType: !120, size: 32, offset: 32)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1394, file: !356, line: 768, baseType: !120, size: 32, offset: 64)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1394, file: !356, line: 769, baseType: !360, size: 32, offset: 96)
!1400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1401, size: 32)
!1401 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !356, line: 426, baseType: !1402)
!1402 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 411, size: 28704, elements: !1403)
!1403 = !{!1404, !1406, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1421, !1426, !1430}
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1402, file: !356, line: 413, baseType: !1405, size: 256)
!1405 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 256, elements: !1310)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1402, file: !356, line: 414, baseType: !1407, size: 768, offset: 256)
!1407 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 768, elements: !1408)
!1408 = !{!1409}
!1409 = !DISubrange(count: 24)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1402, file: !356, line: 415, baseType: !1405, size: 256, offset: 1024)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1402, file: !356, line: 416, baseType: !1407, size: 768, offset: 1280)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1402, file: !356, line: 417, baseType: !1405, size: 256, offset: 2048)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1402, file: !356, line: 418, baseType: !1407, size: 768, offset: 2304)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1402, file: !356, line: 419, baseType: !1405, size: 256, offset: 3072)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1402, file: !356, line: 420, baseType: !1407, size: 768, offset: 3328)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1402, file: !356, line: 421, baseType: !1405, size: 256, offset: 4096)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1402, file: !356, line: 422, baseType: !1418, size: 1792, offset: 4352)
!1418 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 1792, elements: !1419)
!1419 = !{!1420}
!1420 = !DISubrange(count: 56)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1402, file: !356, line: 423, baseType: !1422, size: 1920, offset: 6144)
!1422 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1423, size: 1920, elements: !1424)
!1423 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !154)
!1424 = !{!1425}
!1425 = !DISubrange(count: 240)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1402, file: !356, line: 424, baseType: !1427, size: 20608, offset: 8064)
!1427 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 20608, elements: !1428)
!1428 = !{!1429}
!1429 = !DISubrange(count: 644)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1402, file: !356, line: 425, baseType: !120, size: 32, offset: 28672)
!1431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1432, size: 32)
!1432 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !1433)
!1433 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !1434)
!1434 = !{!1435, !1436, !1437, !1438, !1439, !1440, !1441, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1454, !1455, !1456, !1458, !1460, !1462}
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1433, file: !356, line: 447, baseType: !360, size: 32)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1433, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1433, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1433, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1433, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1433, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1433, file: !356, line: 453, baseType: !1442, size: 96, offset: 192)
!1442 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1423, size: 96, elements: !1443)
!1443 = !{!1444}
!1444 = !DISubrange(count: 12)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1433, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1433, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1433, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1433, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1433, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1433, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1433, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1433, file: !356, line: 461, baseType: !1453, size: 64, offset: 512)
!1453 = !DICompositeType(tag: DW_TAG_array_type, baseType: !360, size: 64, elements: !242)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1433, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1433, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1433, file: !356, line: 464, baseType: !1457, size: 128, offset: 640)
!1457 = !DICompositeType(tag: DW_TAG_array_type, baseType: !360, size: 128, elements: !529)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1433, file: !356, line: 465, baseType: !1459, size: 160, offset: 768)
!1459 = !DICompositeType(tag: DW_TAG_array_type, baseType: !360, size: 160, elements: !1040)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1433, file: !356, line: 466, baseType: !1461, size: 160, offset: 928)
!1461 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 160, elements: !1040)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1433, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!1463 = !{!1464, !1490, !1493, !1495, !1497, !1384}
!1464 = !DIGlobalVariableExpression(var: !1465, expr: !DIExpression())
!1465 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1386, file: !1466, line: 285, type: !1467, isLocal: true, isDefinition: true, align: 32)
!1466 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1467 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1468)
!1468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1469)
!1469 = !{!1470, !1489}
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1468, file: !132, line: 60, baseType: !1471, size: 32)
!1471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1472, size: 32)
!1472 = !DISubroutineType(types: !1473)
!1473 = !{!103, !1474}
!1474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1475, size: 32)
!1475 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1476)
!1476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1477)
!1477 = !{!1478, !1479, !1480, !1481, !1487, !1488}
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1476, file: !141, line: 380, baseType: !144, size: 32)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1476, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1476, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1476, file: !141, line: 386, baseType: !1482, size: 32, offset: 96)
!1482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1483, size: 32)
!1483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1484)
!1484 = !{!1485, !1486}
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1483, file: !141, line: 359, baseType: !154, size: 8)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1483, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1476, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1476, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1468, file: !132, line: 65, baseType: !1474, size: 32, offset: 32)
!1490 = !DIGlobalVariableExpression(var: !1491, expr: !DIExpression())
!1491 = distinct !DIGlobalVariable(name: "lock", scope: !1386, file: !1466, line: 34, type: !1492, isLocal: true, isDefinition: true)
!1492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!1493 = !DIGlobalVariableExpression(var: !1494, expr: !DIExpression())
!1494 = distinct !DIGlobalVariable(name: "last_load", scope: !1386, file: !1466, line: 36, type: !121, isLocal: true, isDefinition: true)
!1495 = !DIGlobalVariableExpression(var: !1496, expr: !DIExpression())
!1496 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1386, file: !1466, line: 48, type: !121, isLocal: true, isDefinition: true)
!1497 = !DIGlobalVariableExpression(var: !1498, expr: !DIExpression())
!1498 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1386, file: !1466, line: 54, type: !121, isLocal: true, isDefinition: true)
!1499 = !DIGlobalVariableExpression(var: !1500, expr: !DIExpression())
!1500 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1501, file: !1583, line: 22, type: !1585, isLocal: true, isDefinition: true)
!1501 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1502, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1503, retainedTypes: !1504, globals: !1580, splitDebugInlining: false, nameTableKind: None)
!1502 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/sensor/thermometer")
!1503 = !{!854, !860}
!1504 = !{!1505, !1569, !1574, !907, !860, !854, !1579, !102}
!1505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1506, size: 32)
!1506 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1507)
!1507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !855, line: 523, size: 288, elements: !1508)
!1508 = !{!1509, !1528, !1532, !1536, !1540, !1541, !1542, !1546, !1565}
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1507, file: !855, line: 524, baseType: !1510, size: 32)
!1510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1511, size: 32)
!1511 = !DISubroutineType(types: !1512)
!1512 = !{!103, !1513, !895, !896}
!1513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1514, size: 32)
!1514 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1515)
!1515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1516)
!1516 = !{!1517, !1518, !1519, !1520, !1526, !1527}
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1515, file: !141, line: 380, baseType: !144, size: 32)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1515, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1515, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1515, file: !141, line: 386, baseType: !1521, size: 32, offset: 96)
!1521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1522, size: 32)
!1522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1523)
!1523 = !{!1524, !1525}
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1522, file: !141, line: 359, baseType: !154, size: 8)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1522, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1515, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1515, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1507, file: !855, line: 530, baseType: !1529, size: 32, offset: 32)
!1529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1530, size: 32)
!1530 = !DISubroutineType(types: !1531)
!1531 = !{!103, !1513, !901}
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1507, file: !855, line: 532, baseType: !1533, size: 32, offset: 64)
!1533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1534, size: 32)
!1534 = !DISubroutineType(types: !1535)
!1535 = !{!103, !1513, !907, !902}
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1507, file: !855, line: 535, baseType: !1537, size: 32, offset: 96)
!1537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1538, size: 32)
!1538 = !DISubroutineType(types: !1539)
!1539 = !{!103, !1513, !907}
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1507, file: !855, line: 537, baseType: !1537, size: 32, offset: 128)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1507, file: !855, line: 539, baseType: !1537, size: 32, offset: 160)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1507, file: !855, line: 541, baseType: !1543, size: 32, offset: 192)
!1543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1544, size: 32)
!1544 = !DISubroutineType(types: !1545)
!1545 = !{!103, !1513, !895, !854, !860}
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1507, file: !855, line: 544, baseType: !1547, size: 32, offset: 224)
!1547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1548, size: 32)
!1548 = !DISubroutineType(types: !1549)
!1549 = !{!103, !1513, !1550, !157}
!1550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1551, size: 32)
!1551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !855, line: 478, size: 96, elements: !1552)
!1552 = !{!1553, !1559, !1564}
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1551, file: !855, line: 482, baseType: !1554, size: 32)
!1554 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !927, line: 33, baseType: !1555)
!1555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !927, line: 29, size: 32, elements: !1556)
!1556 = !{!1557}
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1555, file: !927, line: 30, baseType: !1558, size: 32)
!1558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1555, size: 32)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1551, file: !855, line: 485, baseType: !1560, size: 32, offset: 32)
!1560 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !855, line: 464, baseType: !1561)
!1561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1562, size: 32)
!1562 = !DISubroutineType(types: !1563)
!1563 = !{null, !1513, !1550, !907}
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1551, file: !855, line: 493, baseType: !907, size: 32, offset: 64)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1507, file: !855, line: 547, baseType: !1566, size: 32, offset: 256)
!1566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1567, size: 32)
!1567 = !DISubroutineType(types: !1568)
!1568 = !{!121, !1513}
!1569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1570, size: 32)
!1570 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1571)
!1571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !855, line: 428, size: 32, elements: !1572)
!1572 = !{!1573}
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1571, file: !855, line: 434, baseType: !907, size: 32)
!1574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1575, size: 32)
!1575 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1576)
!1576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !855, line: 441, size: 32, elements: !1577)
!1577 = !{!1578}
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1576, file: !855, line: 447, baseType: !907, size: 32)
!1579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1576, size: 32)
!1580 = !{!1581, !1499}
!1581 = !DIGlobalVariableExpression(var: !1582, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1582 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1501, file: !1583, line: 37, type: !1584, isLocal: true, isDefinition: true)
!1583 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1584 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !200)
!1585 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1586, size: 352, elements: !1587)
!1586 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1513)
!1587 = !{!1588}
!1588 = !DISubrange(count: 11)
!1589 = !DIGlobalVariableExpression(var: !1590, expr: !DIExpression())
!1590 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1591, file: !1631, line: 139, type: !1638, isLocal: false, isDefinition: true)
!1591 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1592, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1593, globals: !1628, splitDebugInlining: false, nameTableKind: None)
!1592 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/sensor/thermometer")
!1593 = !{!1594}
!1594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1595, size: 32)
!1595 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 532, baseType: !1596)
!1596 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 500, size: 1088, elements: !1597)
!1597 = !{!1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627}
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1596, file: !116, line: 502, baseType: !120, size: 32)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1596, file: !116, line: 503, baseType: !120, size: 32, offset: 32)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1596, file: !116, line: 504, baseType: !120, size: 32, offset: 64)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1596, file: !116, line: 505, baseType: !120, size: 32, offset: 96)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1596, file: !116, line: 506, baseType: !120, size: 32, offset: 128)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1596, file: !116, line: 507, baseType: !120, size: 32, offset: 160)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1596, file: !116, line: 508, baseType: !120, size: 32, offset: 192)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1596, file: !116, line: 509, baseType: !121, size: 32, offset: 224)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1596, file: !116, line: 510, baseType: !120, size: 32, offset: 256)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1596, file: !116, line: 511, baseType: !120, size: 32, offset: 288)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1596, file: !116, line: 512, baseType: !681, size: 64, offset: 320)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1596, file: !116, line: 513, baseType: !120, size: 32, offset: 384)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1596, file: !116, line: 514, baseType: !120, size: 32, offset: 416)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1596, file: !116, line: 515, baseType: !120, size: 32, offset: 448)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1596, file: !116, line: 516, baseType: !121, size: 32, offset: 480)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1596, file: !116, line: 517, baseType: !120, size: 32, offset: 512)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1596, file: !116, line: 518, baseType: !120, size: 32, offset: 544)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1596, file: !116, line: 519, baseType: !681, size: 64, offset: 576)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1596, file: !116, line: 520, baseType: !120, size: 32, offset: 640)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1596, file: !116, line: 521, baseType: !120, size: 32, offset: 672)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1596, file: !116, line: 522, baseType: !120, size: 32, offset: 704)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1596, file: !116, line: 523, baseType: !121, size: 32, offset: 736)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1596, file: !116, line: 524, baseType: !120, size: 32, offset: 768)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1596, file: !116, line: 525, baseType: !120, size: 32, offset: 800)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1596, file: !116, line: 526, baseType: !681, size: 64, offset: 832)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1596, file: !116, line: 527, baseType: !120, size: 32, offset: 896)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1596, file: !116, line: 528, baseType: !120, size: 32, offset: 928)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1596, file: !116, line: 529, baseType: !681, size: 64, offset: 960)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1596, file: !116, line: 530, baseType: !120, size: 32, offset: 1024)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1596, file: !116, line: 531, baseType: !120, size: 32, offset: 1056)
!1628 = !{!1629, !1632, !1589}
!1629 = !DIGlobalVariableExpression(var: !1630, expr: !DIExpression())
!1630 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1591, file: !1631, line: 137, type: !121, isLocal: false, isDefinition: true)
!1631 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1632 = !DIGlobalVariableExpression(var: !1633, expr: !DIExpression())
!1633 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1591, file: !1631, line: 138, type: !1634, isLocal: false, isDefinition: true)
!1634 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1635, size: 128, elements: !1636)
!1635 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !154)
!1636 = !{!1637}
!1637 = !DISubrange(count: 16)
!1638 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1635, size: 64, elements: !1310)
!1639 = !DIGlobalVariableExpression(var: !1640, expr: !DIExpression())
!1640 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1641, file: !1644, line: 23, type: !1645, isLocal: false, isDefinition: true)
!1641 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1642, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !1643, splitDebugInlining: false, nameTableKind: None)
!1642 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/sensor/thermometer")
!1643 = !{!1639}
!1644 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1645 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!1646 = !DIGlobalVariableExpression(var: !1647, expr: !DIExpression())
!1647 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1648, file: !1652, line: 86, type: !1900, isLocal: false, isDefinition: true, align: 512)
!1648 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1649, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1650, retainedTypes: !1659, globals: !1733, splitDebugInlining: false, nameTableKind: None)
!1649 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/sensor/thermometer")
!1650 = !{!1651, !30, !425}
!1651 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1652, line: 63, baseType: !32, size: 32, elements: !1653)
!1652 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1653 = !{!1654, !1655, !1656, !1657, !1658}
!1654 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1655 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1656 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1657 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1658 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1659 = !{!22, !200, !102, !103, !1660, !977, !121, !1691, !587, !154, !1716}
!1660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1661, size: 32)
!1661 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1662)
!1662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1663, line: 51, size: 64, elements: !1664)
!1663 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1664 = !{!1665, !1686}
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1662, file: !1663, line: 52, baseType: !1666, size: 32)
!1666 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1663, line: 38, baseType: !1667)
!1667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1668, size: 32)
!1668 = !DISubroutineType(types: !1669)
!1669 = !{!103, !1670, !1685, !265}
!1670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1671, size: 32)
!1671 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1672)
!1672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1673)
!1673 = !{!1674, !1675, !1676, !1677, !1683, !1684}
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1672, file: !141, line: 380, baseType: !144, size: 32)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1672, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1672, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1672, file: !141, line: 386, baseType: !1678, size: 32, offset: 96)
!1678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1679, size: 32)
!1679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1680)
!1680 = !{!1681, !1682}
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1679, file: !141, line: 359, baseType: !154, size: 8)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1679, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1672, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1672, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 32)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1662, file: !1663, line: 53, baseType: !1687, size: 32, offset: 32)
!1687 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1663, line: 47, baseType: !1688)
!1688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1689, size: 32)
!1689 = !DISubroutineType(types: !1690)
!1690 = !{!103, !1670, !1685, !265, !121}
!1691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1692, size: 32)
!1692 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !1693)
!1693 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !1694)
!1694 = !{!1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715}
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1693, file: !356, line: 447, baseType: !360, size: 32)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1693, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1693, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1693, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1693, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1693, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1693, file: !356, line: 453, baseType: !1442, size: 96, offset: 192)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1693, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1693, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1693, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1693, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1693, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1693, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1693, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1693, file: !356, line: 461, baseType: !1453, size: 64, offset: 512)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1693, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1693, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1693, file: !356, line: 464, baseType: !1457, size: 128, offset: 640)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1693, file: !356, line: 465, baseType: !1459, size: 160, offset: 768)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1693, file: !356, line: 466, baseType: !1461, size: 160, offset: 928)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1693, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!1716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1717, size: 32)
!1717 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !356, line: 426, baseType: !1718)
!1718 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 411, size: 28704, elements: !1719)
!1719 = !{!1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732}
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1718, file: !356, line: 413, baseType: !1405, size: 256)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1718, file: !356, line: 414, baseType: !1407, size: 768, offset: 256)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1718, file: !356, line: 415, baseType: !1405, size: 256, offset: 1024)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1718, file: !356, line: 416, baseType: !1407, size: 768, offset: 1280)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1718, file: !356, line: 417, baseType: !1405, size: 256, offset: 2048)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1718, file: !356, line: 418, baseType: !1407, size: 768, offset: 2304)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1718, file: !356, line: 419, baseType: !1405, size: 256, offset: 3072)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1718, file: !356, line: 420, baseType: !1407, size: 768, offset: 3328)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1718, file: !356, line: 421, baseType: !1405, size: 256, offset: 4096)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1718, file: !356, line: 422, baseType: !1418, size: 1792, offset: 4352)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1718, file: !356, line: 423, baseType: !1422, size: 1920, offset: 6144)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1718, file: !356, line: 424, baseType: !1427, size: 20608, offset: 8064)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1718, file: !356, line: 425, baseType: !120, size: 32, offset: 28672)
!1733 = !{!1734, !1856, !1865, !1867, !1646, !1870, !1872, !1877}
!1734 = !DIGlobalVariableExpression(var: !1735, expr: !DIExpression())
!1735 = distinct !DIGlobalVariable(name: "_kernel", scope: !1648, file: !1652, line: 40, type: !1736, isLocal: false, isDefinition: true)
!1736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !247, line: 158, size: 288, elements: !1737)
!1737 = !{!1738, !1851}
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1736, file: !247, line: 159, baseType: !1739, size: 192)
!1739 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1740, size: 192, elements: !345)
!1740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !247, line: 100, size: 192, elements: !1741)
!1741 = !{!1742, !1743, !1744, !1845, !1846, !1847, !1848}
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1740, file: !247, line: 102, baseType: !121, size: 32)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1740, file: !247, line: 105, baseType: !977, size: 32, offset: 32)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1740, file: !247, line: 108, baseType: !1745, size: 32, offset: 64)
!1745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1746, size: 32)
!1746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !1747)
!1747 = !{!1748, !1806, !1818, !1819, !1820, !1821, !1827, !1840}
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1746, file: !211, line: 247, baseType: !1749, size: 384)
!1749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !1750)
!1750 = !{!1751, !1775, !1782, !1783, !1784, !1793, !1794, !1795}
!1751 = !DIDerivedType(tag: DW_TAG_member, scope: !1749, file: !211, line: 60, baseType: !1752, size: 64)
!1752 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1749, file: !211, line: 60, size: 64, elements: !1753)
!1753 = !{!1754, !1769}
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1752, file: !211, line: 61, baseType: !1755, size: 64)
!1755 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !1756)
!1756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !1757)
!1757 = !{!1758, !1764}
!1758 = !DIDerivedType(tag: DW_TAG_member, scope: !1756, file: !221, line: 38, baseType: !1759, size: 32)
!1759 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1756, file: !221, line: 38, size: 32, elements: !1760)
!1760 = !{!1761, !1763}
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1759, file: !221, line: 39, baseType: !1762, size: 32)
!1762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1756, size: 32)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1759, file: !221, line: 40, baseType: !1762, size: 32)
!1764 = !DIDerivedType(tag: DW_TAG_member, scope: !1756, file: !221, line: 42, baseType: !1765, size: 32, offset: 32)
!1765 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1756, file: !221, line: 42, size: 32, elements: !1766)
!1766 = !{!1767, !1768}
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1765, file: !221, line: 43, baseType: !1762, size: 32)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1765, file: !221, line: 44, baseType: !1762, size: 32)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1752, file: !211, line: 62, baseType: !1770, size: 64)
!1770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !1771)
!1771 = !{!1772}
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1770, file: !237, line: 50, baseType: !1773, size: 64)
!1773 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1774, size: 64, elements: !242)
!1774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1770, size: 32)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1749, file: !211, line: 68, baseType: !1776, size: 32, offset: 64)
!1776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1777, size: 32)
!1777 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !1778)
!1778 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !1779)
!1779 = !{!1780}
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1778, file: !247, line: 232, baseType: !1781, size: 64)
!1781 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !1756)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1749, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1749, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!1784 = !DIDerivedType(tag: DW_TAG_member, scope: !1749, file: !211, line: 90, baseType: !1785, size: 16, offset: 112)
!1785 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1749, file: !211, line: 90, size: 16, elements: !1786)
!1786 = !{!1787, !1792}
!1787 = !DIDerivedType(tag: DW_TAG_member, scope: !1785, file: !211, line: 91, baseType: !1788, size: 16)
!1788 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1785, file: !211, line: 91, size: 16, elements: !1789)
!1789 = !{!1790, !1791}
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1788, file: !211, line: 96, baseType: !261, size: 8)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1788, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1785, file: !211, line: 100, baseType: !265, size: 16)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1749, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1749, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1749, file: !211, line: 131, baseType: !1796, size: 192, offset: 192)
!1796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !1797)
!1797 = !{!1798, !1799, !1805}
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1796, file: !247, line: 245, baseType: !1755, size: 64)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1796, file: !247, line: 246, baseType: !1800, size: 32, offset: 64)
!1800 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !1801)
!1801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1802, size: 32)
!1802 = !DISubroutineType(types: !1803)
!1803 = !{null, !1804}
!1804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1796, size: 32)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1796, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1746, file: !211, line: 250, baseType: !1807, size: 288, offset: 384)
!1807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !1808)
!1808 = !{!1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817}
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1807, file: !284, line: 26, baseType: !121, size: 32)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1807, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1807, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1807, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1807, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1807, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1807, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1807, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1807, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1746, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1746, file: !211, line: 256, baseType: !1777, size: 64, offset: 704)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1746, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1746, file: !211, line: 300, baseType: !1822, size: 96, offset: 800)
!1822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !1823)
!1823 = !{!1824, !1825, !1826}
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1822, file: !211, line: 153, baseType: !22, size: 32)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1822, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1822, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1746, file: !211, line: 325, baseType: !1828, size: 32, offset: 896)
!1828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1829, size: 32)
!1829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !1830)
!1830 = !{!1831, !1837, !1838}
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1829, file: !307, line: 5074, baseType: !1832, size: 96)
!1832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !1833)
!1833 = !{!1834, !1835, !1836}
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1832, file: !311, line: 57, baseType: !314, size: 32)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !1832, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !1832, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1829, file: !307, line: 5075, baseType: !1777, size: 64, offset: 96)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1829, file: !307, line: 5076, baseType: !1839, offset: 160)
!1839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1746, file: !211, line: 343, baseType: !1841, size: 64, offset: 928)
!1841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !1842)
!1842 = !{!1843, !1844}
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !1841, file: !284, line: 63, baseType: !121, size: 32)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !1841, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1740, file: !247, line: 111, baseType: !1745, size: 32, offset: 96)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1740, file: !247, line: 124, baseType: !103, size: 32, offset: 128)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1740, file: !247, line: 127, baseType: !154, size: 8, offset: 160)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1740, file: !247, line: 153, baseType: !1849, offset: 168)
!1849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !1850, line: 33, elements: !322)
!1850 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1736, file: !247, line: 170, baseType: !1852, size: 96, offset: 192)
!1852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !247, line: 83, size: 96, elements: !1853)
!1853 = !{!1854, !1855}
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1852, file: !247, line: 86, baseType: !1745, size: 32)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !1852, file: !247, line: 90, baseType: !1781, size: 64, offset: 32)
!1856 = !DIGlobalVariableExpression(var: !1857, expr: !DIExpression())
!1857 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1648, file: !1652, line: 43, type: !1858, isLocal: false, isDefinition: true, align: 512)
!1858 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1859, size: 8704, elements: !1863)
!1859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1860, line: 47, size: 8, elements: !1861)
!1860 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1861 = !{!1862}
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1859, file: !1860, line: 48, baseType: !146, size: 8)
!1863 = !{!1864}
!1864 = !DISubrange(count: 1088)
!1865 = !DIGlobalVariableExpression(var: !1866, expr: !DIExpression())
!1866 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1648, file: !1652, line: 44, type: !1746, isLocal: false, isDefinition: true)
!1867 = !DIGlobalVariableExpression(var: !1868, expr: !DIExpression())
!1868 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1648, file: !1652, line: 48, type: !1869, isLocal: false, isDefinition: true)
!1869 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1746, size: 1024, elements: !345)
!1870 = !DIGlobalVariableExpression(var: !1871, expr: !DIExpression())
!1871 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1648, file: !1652, line: 217, type: !157, isLocal: false, isDefinition: true)
!1872 = !DIGlobalVariableExpression(var: !1873, expr: !DIExpression())
!1873 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1648, file: !1652, line: 50, type: !1874, isLocal: true, isDefinition: true, align: 512)
!1874 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1859, size: 3072, elements: !1875)
!1875 = !{!346, !1876}
!1876 = !DISubrange(count: 384)
!1877 = !DIGlobalVariableExpression(var: !1878, expr: !DIExpression())
!1878 = distinct !DIGlobalVariable(name: "levels", scope: !1879, file: !1652, line: 232, type: !1899, isLocal: true, isDefinition: true)
!1879 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1652, file: !1652, line: 230, type: !1880, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1648, retainedNodes: !1882)
!1880 = !DISubroutineType(types: !1881)
!1881 = !{null, !1651}
!1882 = !{!1883, !1884, !1894, !1898}
!1883 = !DILocalVariable(name: "level", arg: 1, scope: !1879, file: !1652, line: 230, type: !1651)
!1884 = !DILocalVariable(name: "entry", scope: !1879, file: !1652, line: 244, type: !1885)
!1885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1886, size: 32)
!1886 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1887)
!1887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1888)
!1888 = !{!1889, !1893}
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1887, file: !132, line: 60, baseType: !1890, size: 32)
!1890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1891, size: 32)
!1891 = !DISubroutineType(types: !1892)
!1892 = !{!103, !1670}
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1887, file: !132, line: 65, baseType: !1670, size: 32, offset: 32)
!1894 = !DILocalVariable(name: "dev", scope: !1895, file: !1652, line: 247, type: !1670)
!1895 = distinct !DILexicalBlock(scope: !1896, file: !1652, line: 246, column: 64)
!1896 = distinct !DILexicalBlock(scope: !1897, file: !1652, line: 246, column: 2)
!1897 = distinct !DILexicalBlock(scope: !1879, file: !1652, line: 246, column: 2)
!1898 = !DILocalVariable(name: "rc", scope: !1895, file: !1652, line: 248, type: !103)
!1899 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1885, size: 192, elements: !1023)
!1900 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1859, size: 16896, elements: !1901)
!1901 = !{!346, !1902}
!1902 = !DISubrange(count: 2112)
!1903 = !DIGlobalVariableExpression(var: !1904, expr: !DIExpression())
!1904 = distinct !DIGlobalVariable(name: "states_str", scope: !1905, file: !1906, line: 276, type: !2027, isLocal: true, isDefinition: true)
!1905 = distinct !DISubprogram(name: "k_thread_state_str", scope: !1906, file: !1906, line: 271, type: !1907, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2010, retainedNodes: !2018)
!1906 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1907 = !DISubroutineType(types: !1908)
!1908 = !{!144, !1909, !977, !200}
!1909 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !211, line: 347, baseType: !1910)
!1910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1911, size: 32)
!1911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !1912)
!1912 = !{!1913, !1971, !1983, !1984, !1985, !1986, !1992, !2005}
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1911, file: !211, line: 247, baseType: !1914, size: 384)
!1914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !1915)
!1915 = !{!1916, !1940, !1947, !1948, !1949, !1958, !1959, !1960}
!1916 = !DIDerivedType(tag: DW_TAG_member, scope: !1914, file: !211, line: 60, baseType: !1917, size: 64)
!1917 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1914, file: !211, line: 60, size: 64, elements: !1918)
!1918 = !{!1919, !1934}
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1917, file: !211, line: 61, baseType: !1920, size: 64)
!1920 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !1921)
!1921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !1922)
!1922 = !{!1923, !1929}
!1923 = !DIDerivedType(tag: DW_TAG_member, scope: !1921, file: !221, line: 38, baseType: !1924, size: 32)
!1924 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1921, file: !221, line: 38, size: 32, elements: !1925)
!1925 = !{!1926, !1928}
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1924, file: !221, line: 39, baseType: !1927, size: 32)
!1927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1921, size: 32)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1924, file: !221, line: 40, baseType: !1927, size: 32)
!1929 = !DIDerivedType(tag: DW_TAG_member, scope: !1921, file: !221, line: 42, baseType: !1930, size: 32, offset: 32)
!1930 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1921, file: !221, line: 42, size: 32, elements: !1931)
!1931 = !{!1932, !1933}
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1930, file: !221, line: 43, baseType: !1927, size: 32)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1930, file: !221, line: 44, baseType: !1927, size: 32)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1917, file: !211, line: 62, baseType: !1935, size: 64)
!1935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !1936)
!1936 = !{!1937}
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1935, file: !237, line: 50, baseType: !1938, size: 64)
!1938 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1939, size: 64, elements: !242)
!1939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1935, size: 32)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1914, file: !211, line: 68, baseType: !1941, size: 32, offset: 64)
!1941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1942, size: 32)
!1942 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !1943)
!1943 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !1944)
!1944 = !{!1945}
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1943, file: !247, line: 232, baseType: !1946, size: 64)
!1946 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !1921)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1914, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1914, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!1949 = !DIDerivedType(tag: DW_TAG_member, scope: !1914, file: !211, line: 90, baseType: !1950, size: 16, offset: 112)
!1950 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1914, file: !211, line: 90, size: 16, elements: !1951)
!1951 = !{!1952, !1957}
!1952 = !DIDerivedType(tag: DW_TAG_member, scope: !1950, file: !211, line: 91, baseType: !1953, size: 16)
!1953 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1950, file: !211, line: 91, size: 16, elements: !1954)
!1954 = !{!1955, !1956}
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1953, file: !211, line: 96, baseType: !261, size: 8)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1953, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1950, file: !211, line: 100, baseType: !265, size: 16)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1914, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1914, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1914, file: !211, line: 131, baseType: !1961, size: 192, offset: 192)
!1961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !1962)
!1962 = !{!1963, !1964, !1970}
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1961, file: !247, line: 245, baseType: !1920, size: 64)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1961, file: !247, line: 246, baseType: !1965, size: 32, offset: 64)
!1965 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !1966)
!1966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1967, size: 32)
!1967 = !DISubroutineType(types: !1968)
!1968 = !{null, !1969}
!1969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1961, size: 32)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1961, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1911, file: !211, line: 250, baseType: !1972, size: 288, offset: 384)
!1972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !1973)
!1973 = !{!1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982}
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1972, file: !284, line: 26, baseType: !121, size: 32)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1972, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1972, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1972, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1972, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1972, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1972, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1972, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1972, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1911, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1911, file: !211, line: 256, baseType: !1942, size: 64, offset: 704)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1911, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1911, file: !211, line: 300, baseType: !1987, size: 96, offset: 800)
!1987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !1988)
!1988 = !{!1989, !1990, !1991}
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1987, file: !211, line: 153, baseType: !22, size: 32)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1987, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1987, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1911, file: !211, line: 325, baseType: !1993, size: 32, offset: 896)
!1993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1994, size: 32)
!1994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !1995)
!1995 = !{!1996, !2002, !2003}
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1994, file: !307, line: 5074, baseType: !1997, size: 96)
!1997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !1998)
!1998 = !{!1999, !2000, !2001}
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1997, file: !311, line: 57, baseType: !314, size: 32)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !1997, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !1997, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1994, file: !307, line: 5075, baseType: !1942, size: 64, offset: 96)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1994, file: !307, line: 5076, baseType: !2004, offset: 160)
!2004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1911, file: !211, line: 343, baseType: !2006, size: 64, offset: 928)
!2006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !2007)
!2007 = !{!2008, !2009}
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2006, file: !284, line: 63, baseType: !121, size: 32)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2006, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!2010 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2011, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2012, globals: !2014, splitDebugInlining: false, nameTableKind: None)
!2011 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/sensor/thermometer")
!2012 = !{!102, !144, !1390, !154, !103, !2013, !24, !200, !977, !22, !121, !1302}
!2013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1920, size: 32)
!2014 = !{!1903, !2015}
!2015 = !DIGlobalVariableExpression(var: !2016, expr: !DIExpression())
!2016 = distinct !DIGlobalVariable(name: "states_sz", scope: !1905, file: !1906, line: 279, type: !2017, isLocal: true, isDefinition: true)
!2017 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1584, size: 256, elements: !1310)
!2018 = !{!2019, !2020, !2021, !2022, !2023, !2024, !2025}
!2019 = !DILocalVariable(name: "thread_id", arg: 1, scope: !1905, file: !1906, line: 271, type: !1909)
!2020 = !DILocalVariable(name: "buf", arg: 2, scope: !1905, file: !1906, line: 271, type: !977)
!2021 = !DILocalVariable(name: "buf_size", arg: 3, scope: !1905, file: !1906, line: 271, type: !200)
!2022 = !DILocalVariable(name: "off", scope: !1905, file: !1906, line: 273, type: !200)
!2023 = !DILocalVariable(name: "bit", scope: !1905, file: !1906, line: 274, type: !154)
!2024 = !DILocalVariable(name: "thread_state", scope: !1905, file: !1906, line: 275, type: !154)
!2025 = !DILocalVariable(name: "index", scope: !2026, file: !1906, line: 293, type: !154)
!2026 = distinct !DILexicalBlock(scope: !1905, file: !1906, line: 293, column: 2)
!2027 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 256, elements: !1310)
!2028 = !DIGlobalVariableExpression(var: !2029, expr: !DIExpression())
!2029 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2030, file: !2138, line: 56, type: !2127, isLocal: false, isDefinition: true)
!2030 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2031, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2032, globals: !2135, splitDebugInlining: false, nameTableKind: None)
!2031 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/sensor/thermometer")
!2032 = !{!2033, !977, !102, !2133, !1685, !1390, !587, !103, !121, !1302, !2134}
!2033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2034, size: 32)
!2034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !2035)
!2035 = !{!2036, !2094, !2106, !2107, !2108, !2109, !2115, !2128}
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2034, file: !211, line: 247, baseType: !2037, size: 384)
!2037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !2038)
!2038 = !{!2039, !2063, !2070, !2071, !2072, !2081, !2082, !2083}
!2039 = !DIDerivedType(tag: DW_TAG_member, scope: !2037, file: !211, line: 60, baseType: !2040, size: 64)
!2040 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2037, file: !211, line: 60, size: 64, elements: !2041)
!2041 = !{!2042, !2057}
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2040, file: !211, line: 61, baseType: !2043, size: 64)
!2043 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !2044)
!2044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !2045)
!2045 = !{!2046, !2052}
!2046 = !DIDerivedType(tag: DW_TAG_member, scope: !2044, file: !221, line: 38, baseType: !2047, size: 32)
!2047 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2044, file: !221, line: 38, size: 32, elements: !2048)
!2048 = !{!2049, !2051}
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2047, file: !221, line: 39, baseType: !2050, size: 32)
!2050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2044, size: 32)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2047, file: !221, line: 40, baseType: !2050, size: 32)
!2052 = !DIDerivedType(tag: DW_TAG_member, scope: !2044, file: !221, line: 42, baseType: !2053, size: 32, offset: 32)
!2053 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2044, file: !221, line: 42, size: 32, elements: !2054)
!2054 = !{!2055, !2056}
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2053, file: !221, line: 43, baseType: !2050, size: 32)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2053, file: !221, line: 44, baseType: !2050, size: 32)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2040, file: !211, line: 62, baseType: !2058, size: 64)
!2058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !2059)
!2059 = !{!2060}
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2058, file: !237, line: 50, baseType: !2061, size: 64)
!2061 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2062, size: 64, elements: !242)
!2062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2058, size: 32)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2037, file: !211, line: 68, baseType: !2064, size: 32, offset: 64)
!2064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2065, size: 32)
!2065 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !2066)
!2066 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !2067)
!2067 = !{!2068}
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2066, file: !247, line: 232, baseType: !2069, size: 64)
!2069 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !2044)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2037, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2037, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!2072 = !DIDerivedType(tag: DW_TAG_member, scope: !2037, file: !211, line: 90, baseType: !2073, size: 16, offset: 112)
!2073 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2037, file: !211, line: 90, size: 16, elements: !2074)
!2074 = !{!2075, !2080}
!2075 = !DIDerivedType(tag: DW_TAG_member, scope: !2073, file: !211, line: 91, baseType: !2076, size: 16)
!2076 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2073, file: !211, line: 91, size: 16, elements: !2077)
!2077 = !{!2078, !2079}
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2076, file: !211, line: 96, baseType: !261, size: 8)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2076, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2073, file: !211, line: 100, baseType: !265, size: 16)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2037, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2037, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2037, file: !211, line: 131, baseType: !2084, size: 192, offset: 192)
!2084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !2085)
!2085 = !{!2086, !2087, !2093}
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2084, file: !247, line: 245, baseType: !2043, size: 64)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2084, file: !247, line: 246, baseType: !2088, size: 32, offset: 64)
!2088 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !2089)
!2089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2090, size: 32)
!2090 = !DISubroutineType(types: !2091)
!2091 = !{null, !2092}
!2092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2084, size: 32)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2084, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2034, file: !211, line: 250, baseType: !2095, size: 288, offset: 384)
!2095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !2096)
!2096 = !{!2097, !2098, !2099, !2100, !2101, !2102, !2103, !2104, !2105}
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2095, file: !284, line: 26, baseType: !121, size: 32)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2095, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2095, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2095, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2095, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2095, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2095, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2095, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2095, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2034, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2034, file: !211, line: 256, baseType: !2065, size: 64, offset: 704)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2034, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2034, file: !211, line: 300, baseType: !2110, size: 96, offset: 800)
!2110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !2111)
!2111 = !{!2112, !2113, !2114}
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2110, file: !211, line: 153, baseType: !22, size: 32)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2110, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2110, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2034, file: !211, line: 325, baseType: !2116, size: 32, offset: 896)
!2116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2117, size: 32)
!2117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !2118)
!2118 = !{!2119, !2125, !2126}
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2117, file: !307, line: 5074, baseType: !2120, size: 96)
!2120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !2121)
!2121 = !{!2122, !2123, !2124}
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2120, file: !311, line: 57, baseType: !314, size: 32)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2120, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2120, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2117, file: !307, line: 5075, baseType: !2065, size: 64, offset: 96)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2117, file: !307, line: 5076, baseType: !2127, offset: 160)
!2127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2034, file: !211, line: 343, baseType: !2129, size: 64, offset: 928)
!2129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !2130)
!2130 = !{!2131, !2132}
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2129, file: !284, line: 63, baseType: !121, size: 32)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2129, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!2133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2062, size: 32)
!2134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2043, size: 32)
!2135 = !{!2028, !2136, !2139, !2141}
!2136 = !DIGlobalVariableExpression(var: !2137, expr: !DIExpression())
!2137 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2030, file: !2138, line: 404, type: !103, isLocal: true, isDefinition: true)
!2138 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2139 = !DIGlobalVariableExpression(var: !2140, expr: !DIExpression())
!2140 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2030, file: !2138, line: 405, type: !103, isLocal: true, isDefinition: true)
!2141 = !DIGlobalVariableExpression(var: !2142, expr: !DIExpression())
!2142 = distinct !DIGlobalVariable(name: "pending_current", scope: !2030, file: !2138, line: 425, type: !2033, isLocal: true, isDefinition: true)
!2143 = !DIGlobalVariableExpression(var: !2144, expr: !DIExpression())
!2144 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2145, file: !2175, line: 15, type: !1302, isLocal: true, isDefinition: true)
!2145 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2146, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2147, globals: !2172, splitDebugInlining: false, nameTableKind: None)
!2146 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/sensor/thermometer")
!2147 = !{!1390, !102, !587, !121, !1302, !103, !2148, !977, !280}
!2148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2149, size: 32)
!2149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !2150)
!2150 = !{!2151, !2166, !2171}
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2149, file: !247, line: 245, baseType: !2152, size: 64)
!2152 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !2153)
!2153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !2154)
!2154 = !{!2155, !2161}
!2155 = !DIDerivedType(tag: DW_TAG_member, scope: !2153, file: !221, line: 38, baseType: !2156, size: 32)
!2156 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2153, file: !221, line: 38, size: 32, elements: !2157)
!2157 = !{!2158, !2160}
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2156, file: !221, line: 39, baseType: !2159, size: 32)
!2159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2153, size: 32)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2156, file: !221, line: 40, baseType: !2159, size: 32)
!2161 = !DIDerivedType(tag: DW_TAG_member, scope: !2153, file: !221, line: 42, baseType: !2162, size: 32, offset: 32)
!2162 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2153, file: !221, line: 42, size: 32, elements: !2163)
!2163 = !{!2164, !2165}
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2162, file: !221, line: 43, baseType: !2159, size: 32)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2162, file: !221, line: 44, baseType: !2159, size: 32)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2149, file: !247, line: 246, baseType: !2167, size: 32, offset: 64)
!2167 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !2168)
!2168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2169, size: 32)
!2169 = !DISubroutineType(types: !2170)
!2170 = !{null, !2148}
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2149, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!2172 = !{!2143, !2173, !2177, !2179}
!2173 = !DIGlobalVariableExpression(var: !2174, expr: !DIExpression())
!2174 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2145, file: !2175, line: 19, type: !2176, isLocal: true, isDefinition: true)
!2175 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!2177 = !DIGlobalVariableExpression(var: !2178, expr: !DIExpression())
!2178 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2145, file: !2175, line: 25, type: !103, isLocal: true, isDefinition: true)
!2179 = !DIGlobalVariableExpression(var: !2180, expr: !DIExpression())
!2180 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2145, file: !2175, line: 17, type: !2181, isLocal: true, isDefinition: true)
!2181 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !2153)
!2182 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2183, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2183 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/sensor/thermometer")
!2184 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2185, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2186, retainedTypes: !2286, splitDebugInlining: false, nameTableKind: None)
!2185 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/sensor/thermometer/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/sensor/thermometer")
!2186 = !{!2187, !30, !2251, !2271}
!2187 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sensor_channel", file: !2188, line: 53, baseType: !32, size: 32, elements: !2189)
!2188 = !DIFile(filename: "zephyr/include/zephyr/drivers/sensor.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2189 = !{!2190, !2191, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2209, !2210, !2211, !2212, !2213, !2214, !2215, !2216, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249, !2250}
!2190 = !DIEnumerator(name: "SENSOR_CHAN_ACCEL_X", value: 0)
!2191 = !DIEnumerator(name: "SENSOR_CHAN_ACCEL_Y", value: 1)
!2192 = !DIEnumerator(name: "SENSOR_CHAN_ACCEL_Z", value: 2)
!2193 = !DIEnumerator(name: "SENSOR_CHAN_ACCEL_XYZ", value: 3)
!2194 = !DIEnumerator(name: "SENSOR_CHAN_GYRO_X", value: 4)
!2195 = !DIEnumerator(name: "SENSOR_CHAN_GYRO_Y", value: 5)
!2196 = !DIEnumerator(name: "SENSOR_CHAN_GYRO_Z", value: 6)
!2197 = !DIEnumerator(name: "SENSOR_CHAN_GYRO_XYZ", value: 7)
!2198 = !DIEnumerator(name: "SENSOR_CHAN_MAGN_X", value: 8)
!2199 = !DIEnumerator(name: "SENSOR_CHAN_MAGN_Y", value: 9)
!2200 = !DIEnumerator(name: "SENSOR_CHAN_MAGN_Z", value: 10)
!2201 = !DIEnumerator(name: "SENSOR_CHAN_MAGN_XYZ", value: 11)
!2202 = !DIEnumerator(name: "SENSOR_CHAN_DIE_TEMP", value: 12)
!2203 = !DIEnumerator(name: "SENSOR_CHAN_AMBIENT_TEMP", value: 13)
!2204 = !DIEnumerator(name: "SENSOR_CHAN_PRESS", value: 14)
!2205 = !DIEnumerator(name: "SENSOR_CHAN_PROX", value: 15)
!2206 = !DIEnumerator(name: "SENSOR_CHAN_HUMIDITY", value: 16)
!2207 = !DIEnumerator(name: "SENSOR_CHAN_LIGHT", value: 17)
!2208 = !DIEnumerator(name: "SENSOR_CHAN_IR", value: 18)
!2209 = !DIEnumerator(name: "SENSOR_CHAN_RED", value: 19)
!2210 = !DIEnumerator(name: "SENSOR_CHAN_GREEN", value: 20)
!2211 = !DIEnumerator(name: "SENSOR_CHAN_BLUE", value: 21)
!2212 = !DIEnumerator(name: "SENSOR_CHAN_ALTITUDE", value: 22)
!2213 = !DIEnumerator(name: "SENSOR_CHAN_PM_1_0", value: 23)
!2214 = !DIEnumerator(name: "SENSOR_CHAN_PM_2_5", value: 24)
!2215 = !DIEnumerator(name: "SENSOR_CHAN_PM_10", value: 25)
!2216 = !DIEnumerator(name: "SENSOR_CHAN_DISTANCE", value: 26)
!2217 = !DIEnumerator(name: "SENSOR_CHAN_CO2", value: 27)
!2218 = !DIEnumerator(name: "SENSOR_CHAN_VOC", value: 28)
!2219 = !DIEnumerator(name: "SENSOR_CHAN_GAS_RES", value: 29)
!2220 = !DIEnumerator(name: "SENSOR_CHAN_VOLTAGE", value: 30)
!2221 = !DIEnumerator(name: "SENSOR_CHAN_CURRENT", value: 31)
!2222 = !DIEnumerator(name: "SENSOR_CHAN_POWER", value: 32)
!2223 = !DIEnumerator(name: "SENSOR_CHAN_RESISTANCE", value: 33)
!2224 = !DIEnumerator(name: "SENSOR_CHAN_ROTATION", value: 34)
!2225 = !DIEnumerator(name: "SENSOR_CHAN_POS_DX", value: 35)
!2226 = !DIEnumerator(name: "SENSOR_CHAN_POS_DY", value: 36)
!2227 = !DIEnumerator(name: "SENSOR_CHAN_POS_DZ", value: 37)
!2228 = !DIEnumerator(name: "SENSOR_CHAN_RPM", value: 38)
!2229 = !DIEnumerator(name: "SENSOR_CHAN_GAUGE_VOLTAGE", value: 39)
!2230 = !DIEnumerator(name: "SENSOR_CHAN_GAUGE_AVG_CURRENT", value: 40)
!2231 = !DIEnumerator(name: "SENSOR_CHAN_GAUGE_STDBY_CURRENT", value: 41)
!2232 = !DIEnumerator(name: "SENSOR_CHAN_GAUGE_MAX_LOAD_CURRENT", value: 42)
!2233 = !DIEnumerator(name: "SENSOR_CHAN_GAUGE_TEMP", value: 43)
!2234 = !DIEnumerator(name: "SENSOR_CHAN_GAUGE_STATE_OF_CHARGE", value: 44)
!2235 = !DIEnumerator(name: "SENSOR_CHAN_GAUGE_FULL_CHARGE_CAPACITY", value: 45)
!2236 = !DIEnumerator(name: "SENSOR_CHAN_GAUGE_REMAINING_CHARGE_CAPACITY", value: 46)
!2237 = !DIEnumerator(name: "SENSOR_CHAN_GAUGE_NOM_AVAIL_CAPACITY", value: 47)
!2238 = !DIEnumerator(name: "SENSOR_CHAN_GAUGE_FULL_AVAIL_CAPACITY", value: 48)
!2239 = !DIEnumerator(name: "SENSOR_CHAN_GAUGE_AVG_POWER", value: 49)
!2240 = !DIEnumerator(name: "SENSOR_CHAN_GAUGE_STATE_OF_HEALTH", value: 50)
!2241 = !DIEnumerator(name: "SENSOR_CHAN_GAUGE_TIME_TO_EMPTY", value: 51)
!2242 = !DIEnumerator(name: "SENSOR_CHAN_GAUGE_TIME_TO_FULL", value: 52)
!2243 = !DIEnumerator(name: "SENSOR_CHAN_GAUGE_CYCLE_COUNT", value: 53)
!2244 = !DIEnumerator(name: "SENSOR_CHAN_GAUGE_DESIGN_VOLTAGE", value: 54)
!2245 = !DIEnumerator(name: "SENSOR_CHAN_GAUGE_DESIRED_VOLTAGE", value: 55)
!2246 = !DIEnumerator(name: "SENSOR_CHAN_GAUGE_DESIRED_CHARGING_CURRENT", value: 56)
!2247 = !DIEnumerator(name: "SENSOR_CHAN_ALL", value: 57)
!2248 = !DIEnumerator(name: "SENSOR_CHAN_COMMON_COUNT", value: 58)
!2249 = !DIEnumerator(name: "SENSOR_CHAN_PRIV_START", value: 58)
!2250 = !DIEnumerator(name: "SENSOR_CHAN_MAX", value: 32767)
!2251 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sensor_attribute", file: !2188, line: 274, baseType: !32, size: 32, elements: !2252)
!2252 = !{!2253, !2254, !2255, !2256, !2257, !2258, !2259, !2260, !2261, !2262, !2263, !2264, !2265, !2266, !2267, !2268, !2269, !2270}
!2253 = !DIEnumerator(name: "SENSOR_ATTR_SAMPLING_FREQUENCY", value: 0)
!2254 = !DIEnumerator(name: "SENSOR_ATTR_LOWER_THRESH", value: 1)
!2255 = !DIEnumerator(name: "SENSOR_ATTR_UPPER_THRESH", value: 2)
!2256 = !DIEnumerator(name: "SENSOR_ATTR_SLOPE_TH", value: 3)
!2257 = !DIEnumerator(name: "SENSOR_ATTR_SLOPE_DUR", value: 4)
!2258 = !DIEnumerator(name: "SENSOR_ATTR_HYSTERESIS", value: 5)
!2259 = !DIEnumerator(name: "SENSOR_ATTR_OVERSAMPLING", value: 6)
!2260 = !DIEnumerator(name: "SENSOR_ATTR_FULL_SCALE", value: 7)
!2261 = !DIEnumerator(name: "SENSOR_ATTR_OFFSET", value: 8)
!2262 = !DIEnumerator(name: "SENSOR_ATTR_CALIB_TARGET", value: 9)
!2263 = !DIEnumerator(name: "SENSOR_ATTR_CONFIGURATION", value: 10)
!2264 = !DIEnumerator(name: "SENSOR_ATTR_CALIBRATION", value: 11)
!2265 = !DIEnumerator(name: "SENSOR_ATTR_FEATURE_MASK", value: 12)
!2266 = !DIEnumerator(name: "SENSOR_ATTR_ALERT", value: 13)
!2267 = !DIEnumerator(name: "SENSOR_ATTR_FF_DUR", value: 14)
!2268 = !DIEnumerator(name: "SENSOR_ATTR_COMMON_COUNT", value: 15)
!2269 = !DIEnumerator(name: "SENSOR_ATTR_PRIV_START", value: 15)
!2270 = !DIEnumerator(name: "SENSOR_ATTR_MAX", value: 32767)
!2271 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sensor_trigger_type", file: !2188, line: 203, baseType: !32, size: 32, elements: !2272)
!2272 = !{!2273, !2274, !2275, !2276, !2277, !2278, !2279, !2280, !2281, !2282, !2283, !2284, !2285}
!2273 = !DIEnumerator(name: "SENSOR_TRIG_TIMER", value: 0)
!2274 = !DIEnumerator(name: "SENSOR_TRIG_DATA_READY", value: 1)
!2275 = !DIEnumerator(name: "SENSOR_TRIG_DELTA", value: 2)
!2276 = !DIEnumerator(name: "SENSOR_TRIG_NEAR_FAR", value: 3)
!2277 = !DIEnumerator(name: "SENSOR_TRIG_THRESHOLD", value: 4)
!2278 = !DIEnumerator(name: "SENSOR_TRIG_TAP", value: 5)
!2279 = !DIEnumerator(name: "SENSOR_TRIG_DOUBLE_TAP", value: 6)
!2280 = !DIEnumerator(name: "SENSOR_TRIG_FREEFALL", value: 7)
!2281 = !DIEnumerator(name: "SENSOR_TRIG_MOTION", value: 8)
!2282 = !DIEnumerator(name: "SENSOR_TRIG_STATIONARY", value: 9)
!2283 = !DIEnumerator(name: "SENSOR_TRIG_COMMON_COUNT", value: 10)
!2284 = !DIEnumerator(name: "SENSOR_TRIG_PRIV_START", value: 10)
!2285 = !DIEnumerator(name: "SENSOR_TRIG_MAX", value: 32767)
!2286 = !{!1390, !102, !103, !2287, !2348, !121, !1302}
!2287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2288, size: 32)
!2288 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2289)
!2289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sensor_driver_api", file: !2188, line: 397, size: 160, elements: !2290)
!2290 = !{!2291, !2317, !2323, !2338, !2343}
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "attr_set", scope: !2289, file: !2188, line: 398, baseType: !2292, size: 32)
!2292 = !DIDerivedType(tag: DW_TAG_typedef, name: "sensor_attr_set_t", file: !2188, line: 354, baseType: !2293)
!2293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2294, size: 32)
!2294 = !DISubroutineType(types: !2295)
!2295 = !{!103, !2296, !2187, !2251, !2311}
!2296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2297, size: 32)
!2297 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2298)
!2298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !2299)
!2299 = !{!2300, !2301, !2302, !2303, !2309, !2310}
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2298, file: !141, line: 380, baseType: !144, size: 32)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2298, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2298, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2298, file: !141, line: 386, baseType: !2304, size: 32, offset: 96)
!2304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2305, size: 32)
!2305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !2306)
!2306 = !{!2307, !2308}
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2305, file: !141, line: 359, baseType: !154, size: 8)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2305, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2298, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2298, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!2311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2312, size: 32)
!2312 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2313)
!2313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sensor_value", file: !2188, line: 43, size: 64, elements: !2314)
!2314 = !{!2315, !2316}
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "val1", scope: !2313, file: !2188, line: 45, baseType: !587, size: 32)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !2313, file: !2188, line: 47, baseType: !587, size: 32, offset: 32)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "attr_get", scope: !2289, file: !2188, line: 399, baseType: !2318, size: 32, offset: 32)
!2318 = !DIDerivedType(tag: DW_TAG_typedef, name: "sensor_attr_get_t", file: !2188, line: 365, baseType: !2319)
!2319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2320, size: 32)
!2320 = !DISubroutineType(types: !2321)
!2321 = !{!103, !2296, !2187, !2251, !2322}
!2322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2313, size: 32)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "trigger_set", scope: !2289, file: !2188, line: 400, baseType: !2324, size: 32, offset: 64)
!2324 = !DIDerivedType(tag: DW_TAG_typedef, name: "sensor_trigger_set_t", file: !2188, line: 376, baseType: !2325)
!2325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2326, size: 32)
!2326 = !DISubroutineType(types: !2327)
!2327 = !{!103, !2296, !2328, !2334}
!2328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2329, size: 32)
!2329 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2330)
!2330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sensor_trigger", file: !2188, line: 264, size: 64, elements: !2331)
!2331 = !{!2332, !2333}
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2330, file: !2188, line: 266, baseType: !2271, size: 32)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "chan", scope: !2330, file: !2188, line: 268, baseType: !2187, size: 32, offset: 32)
!2334 = !DIDerivedType(tag: DW_TAG_typedef, name: "sensor_trigger_handler_t", file: !2188, line: 345, baseType: !2335)
!2335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2336, size: 32)
!2336 = !DISubroutineType(types: !2337)
!2337 = !{null, !2296, !2328}
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fetch", scope: !2289, file: !2188, line: 401, baseType: !2339, size: 32, offset: 96)
!2339 = !DIDerivedType(tag: DW_TAG_typedef, name: "sensor_sample_fetch_t", file: !2188, line: 385, baseType: !2340)
!2340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2341, size: 32)
!2341 = !DISubroutineType(types: !2342)
!2342 = !{!103, !2296, !2187}
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "channel_get", scope: !2289, file: !2188, line: 402, baseType: !2344, size: 32, offset: 128)
!2344 = !DIDerivedType(tag: DW_TAG_typedef, name: "sensor_channel_get_t", file: !2188, line: 393, baseType: !2345)
!2345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2346, size: 32)
!2346 = !DISubroutineType(types: !2347)
!2347 = !{!103, !2296, !2187, !2322}
!2348 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2349 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2350, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2350 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/sensor/thermometer")
!2351 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2352, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2353, retainedTypes: !2373, splitDebugInlining: false, nameTableKind: None)
!2352 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/sensor/thermometer")
!2353 = !{!2354, !2362}
!2354 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2355, line: 69, baseType: !32, size: 32, elements: !2356)
!2355 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2356 = !{!2357, !2358, !2359, !2360, !2361}
!2357 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2358 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2359 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2360 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2361 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2362 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2355, line: 56, baseType: !32, size: 32, elements: !2363)
!2363 = !{!2364, !2365, !2366, !2367, !2368, !2369, !2370, !2371, !2372}
!2364 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2365 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2366 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2367 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2368 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2369 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2370 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2371 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2372 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2373 = !{!103, !2354, !2362, !2374, !262, !164, !2376, !2377, !155, !266, !144, !200, !102, !22, !32, !2379, !2380, !2381, !2382, !2383, !281, !2384, !2375, !2385, !2386, !2387, !2388, !121, !1302}
!2374 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2355, line: 31, baseType: !2375)
!2375 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !281)
!2376 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !201, line: 329, baseType: !32)
!2377 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2355, line: 32, baseType: !2378)
!2378 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !1303)
!2379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!2380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 32)
!2381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 32)
!2382 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!2383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2382, size: 32)
!2384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !281, size: 32)
!2385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2375, size: 32)
!2386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 32)
!2387 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !201, line: 145, baseType: !103)
!2388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2387, size: 32)
!2389 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2390, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2390 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/sensor/thermometer/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/sensor/thermometer")
!2391 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2392, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2393, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2392 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/sensor/thermometer")
!2393 = !{!2394, !30}
!2394 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2395, line: 27, baseType: !32, size: 32, elements: !2396)
!2395 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2396 = !{!2397, !2398, !2399, !2400, !2401}
!2397 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2398 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2399 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2400 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2401 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2402 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2403, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2404, retainedTypes: !2405, splitDebugInlining: false, nameTableKind: None)
!2403 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/sensor/thermometer")
!2404 = !{!425, !2394, !30}
!2405 = !{!613, !2406, !102, !103, !587, !121, !154, !2423}
!2406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2407, size: 32)
!2407 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !356, line: 426, baseType: !2408)
!2408 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 411, size: 28704, elements: !2409)
!2409 = !{!2410, !2411, !2412, !2413, !2414, !2415, !2416, !2417, !2418, !2419, !2420, !2421, !2422}
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2408, file: !356, line: 413, baseType: !1405, size: 256)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2408, file: !356, line: 414, baseType: !1407, size: 768, offset: 256)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2408, file: !356, line: 415, baseType: !1405, size: 256, offset: 1024)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2408, file: !356, line: 416, baseType: !1407, size: 768, offset: 1280)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2408, file: !356, line: 417, baseType: !1405, size: 256, offset: 2048)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2408, file: !356, line: 418, baseType: !1407, size: 768, offset: 2304)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2408, file: !356, line: 419, baseType: !1405, size: 256, offset: 3072)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2408, file: !356, line: 420, baseType: !1407, size: 768, offset: 3328)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2408, file: !356, line: 421, baseType: !1405, size: 256, offset: 4096)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2408, file: !356, line: 422, baseType: !1418, size: 1792, offset: 4352)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2408, file: !356, line: 423, baseType: !1422, size: 1920, offset: 6144)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2408, file: !356, line: 424, baseType: !1427, size: 20608, offset: 8064)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2408, file: !356, line: 425, baseType: !120, size: 32, offset: 28672)
!2423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2424, size: 32)
!2424 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !2425)
!2425 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !2426)
!2426 = !{!2427, !2428, !2429, !2430, !2431, !2432, !2433, !2434, !2435, !2436, !2437, !2438, !2439, !2440, !2441, !2442, !2443, !2444, !2445, !2446, !2447}
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2425, file: !356, line: 447, baseType: !360, size: 32)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2425, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2425, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2425, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2425, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2425, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2425, file: !356, line: 453, baseType: !1442, size: 96, offset: 192)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2425, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2425, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2425, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2425, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2425, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2425, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2425, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2425, file: !356, line: 461, baseType: !1453, size: 64, offset: 512)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2425, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2425, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2425, file: !356, line: 464, baseType: !1457, size: 128, offset: 640)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2425, file: !356, line: 465, baseType: !1459, size: 160, offset: 768)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2425, file: !356, line: 466, baseType: !1461, size: 160, offset: 928)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2425, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!2448 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2449, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2449 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/sensor/thermometer")
!2450 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2451, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2452, splitDebugInlining: false, nameTableKind: None)
!2451 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/sensor/thermometer")
!2452 = !{!102, !103, !22, !2453}
!2453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2454, size: 32)
!2454 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !2455)
!2455 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !2456)
!2456 = !{!2457, !2458, !2459, !2460, !2461, !2462, !2463, !2464, !2465, !2466, !2467, !2468, !2469, !2470, !2471, !2472, !2473, !2474, !2475, !2476, !2477}
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2455, file: !356, line: 447, baseType: !360, size: 32)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2455, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2455, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2455, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2455, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2455, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2455, file: !356, line: 453, baseType: !1442, size: 96, offset: 192)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2455, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2455, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2455, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2455, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2455, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2455, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2455, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2455, file: !356, line: 461, baseType: !1453, size: 64, offset: 512)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2455, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2455, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2455, file: !356, line: 464, baseType: !1457, size: 128, offset: 640)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2455, file: !356, line: 465, baseType: !1459, size: 160, offset: 768)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2455, file: !356, line: 466, baseType: !1461, size: 160, offset: 928)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2455, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!2478 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2479, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2480, splitDebugInlining: false, nameTableKind: None)
!2479 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/sensor/thermometer")
!2480 = !{!2481, !102, !103}
!2481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2482, size: 32)
!2482 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !2483)
!2483 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !2484)
!2484 = !{!2485, !2486, !2487, !2488, !2489, !2490, !2491, !2492, !2493, !2494, !2495, !2496, !2497, !2498, !2499, !2500, !2501, !2502, !2503, !2504, !2505}
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2483, file: !356, line: 447, baseType: !360, size: 32)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2483, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2483, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2483, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2483, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2483, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2483, file: !356, line: 453, baseType: !1442, size: 96, offset: 192)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2483, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2483, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2483, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2483, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2483, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2483, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2483, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2483, file: !356, line: 461, baseType: !1453, size: 64, offset: 512)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2483, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2483, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2483, file: !356, line: 464, baseType: !1457, size: 128, offset: 640)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2483, file: !356, line: 465, baseType: !1459, size: 160, offset: 768)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2483, file: !356, line: 466, baseType: !1461, size: 160, offset: 928)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2483, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!2506 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2507, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2508, splitDebugInlining: false, nameTableKind: None)
!2507 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/sensor/thermometer")
!2508 = !{!2509, !121, !102, !103}
!2509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2510, size: 32)
!2510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2511, line: 98, size: 256, elements: !2512)
!2511 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2512 = !{!2513, !2518, !2523, !2528, !2533, !2538, !2543, !2548}
!2513 = !DIDerivedType(tag: DW_TAG_member, scope: !2510, file: !2511, line: 99, baseType: !2514, size: 32)
!2514 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2510, file: !2511, line: 99, size: 32, elements: !2515)
!2515 = !{!2516, !2517}
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2514, file: !2511, line: 99, baseType: !121, size: 32)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2514, file: !2511, line: 99, baseType: !121, size: 32)
!2518 = !DIDerivedType(tag: DW_TAG_member, scope: !2510, file: !2511, line: 100, baseType: !2519, size: 32, offset: 32)
!2519 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2510, file: !2511, line: 100, size: 32, elements: !2520)
!2520 = !{!2521, !2522}
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2519, file: !2511, line: 100, baseType: !121, size: 32)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2519, file: !2511, line: 100, baseType: !121, size: 32)
!2523 = !DIDerivedType(tag: DW_TAG_member, scope: !2510, file: !2511, line: 101, baseType: !2524, size: 32, offset: 64)
!2524 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2510, file: !2511, line: 101, size: 32, elements: !2525)
!2525 = !{!2526, !2527}
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2524, file: !2511, line: 101, baseType: !121, size: 32)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2524, file: !2511, line: 101, baseType: !121, size: 32)
!2528 = !DIDerivedType(tag: DW_TAG_member, scope: !2510, file: !2511, line: 102, baseType: !2529, size: 32, offset: 96)
!2529 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2510, file: !2511, line: 102, size: 32, elements: !2530)
!2530 = !{!2531, !2532}
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2529, file: !2511, line: 102, baseType: !121, size: 32)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2529, file: !2511, line: 102, baseType: !121, size: 32)
!2533 = !DIDerivedType(tag: DW_TAG_member, scope: !2510, file: !2511, line: 103, baseType: !2534, size: 32, offset: 128)
!2534 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2510, file: !2511, line: 103, size: 32, elements: !2535)
!2535 = !{!2536, !2537}
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2534, file: !2511, line: 103, baseType: !121, size: 32)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2534, file: !2511, line: 103, baseType: !121, size: 32)
!2538 = !DIDerivedType(tag: DW_TAG_member, scope: !2510, file: !2511, line: 104, baseType: !2539, size: 32, offset: 160)
!2539 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2510, file: !2511, line: 104, size: 32, elements: !2540)
!2540 = !{!2541, !2542}
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2539, file: !2511, line: 104, baseType: !121, size: 32)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2539, file: !2511, line: 104, baseType: !121, size: 32)
!2543 = !DIDerivedType(tag: DW_TAG_member, scope: !2510, file: !2511, line: 105, baseType: !2544, size: 32, offset: 192)
!2544 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2510, file: !2511, line: 105, size: 32, elements: !2545)
!2545 = !{!2546, !2547}
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2544, file: !2511, line: 105, baseType: !121, size: 32)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2544, file: !2511, line: 105, baseType: !121, size: 32)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2510, file: !2511, line: 106, baseType: !121, size: 32, offset: 224)
!2549 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2550, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2393, retainedTypes: !2551, splitDebugInlining: false, nameTableKind: None)
!2550 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/sensor/thermometer")
!2551 = !{!2552, !102, !103, !2577, !2620, !121}
!2552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2553, size: 32)
!2553 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !2554)
!2554 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !2555)
!2555 = !{!2556, !2557, !2558, !2559, !2560, !2561, !2562, !2563, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573, !2574, !2575, !2576}
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2554, file: !356, line: 447, baseType: !360, size: 32)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2554, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2554, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2554, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2554, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2554, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2554, file: !356, line: 453, baseType: !1442, size: 96, offset: 192)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2554, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2554, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2554, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2554, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2554, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2554, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2554, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2554, file: !356, line: 461, baseType: !1453, size: 64, offset: 512)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2554, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2554, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2554, file: !356, line: 464, baseType: !1457, size: 128, offset: 640)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2554, file: !356, line: 465, baseType: !1459, size: 160, offset: 768)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2554, file: !356, line: 466, baseType: !1461, size: 160, offset: 928)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2554, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!2577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2578, size: 32)
!2578 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2511, line: 141, baseType: !2579)
!2579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2511, line: 97, size: 256, elements: !2580)
!2580 = !{!2581}
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2579, file: !2511, line: 107, baseType: !2582, size: 256)
!2582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2511, line: 98, size: 256, elements: !2583)
!2583 = !{!2584, !2589, !2594, !2599, !2604, !2609, !2614, !2619}
!2584 = !DIDerivedType(tag: DW_TAG_member, scope: !2582, file: !2511, line: 99, baseType: !2585, size: 32)
!2585 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2582, file: !2511, line: 99, size: 32, elements: !2586)
!2586 = !{!2587, !2588}
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2585, file: !2511, line: 99, baseType: !121, size: 32)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2585, file: !2511, line: 99, baseType: !121, size: 32)
!2589 = !DIDerivedType(tag: DW_TAG_member, scope: !2582, file: !2511, line: 100, baseType: !2590, size: 32, offset: 32)
!2590 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2582, file: !2511, line: 100, size: 32, elements: !2591)
!2591 = !{!2592, !2593}
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2590, file: !2511, line: 100, baseType: !121, size: 32)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2590, file: !2511, line: 100, baseType: !121, size: 32)
!2594 = !DIDerivedType(tag: DW_TAG_member, scope: !2582, file: !2511, line: 101, baseType: !2595, size: 32, offset: 64)
!2595 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2582, file: !2511, line: 101, size: 32, elements: !2596)
!2596 = !{!2597, !2598}
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2595, file: !2511, line: 101, baseType: !121, size: 32)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2595, file: !2511, line: 101, baseType: !121, size: 32)
!2599 = !DIDerivedType(tag: DW_TAG_member, scope: !2582, file: !2511, line: 102, baseType: !2600, size: 32, offset: 96)
!2600 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2582, file: !2511, line: 102, size: 32, elements: !2601)
!2601 = !{!2602, !2603}
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2600, file: !2511, line: 102, baseType: !121, size: 32)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2600, file: !2511, line: 102, baseType: !121, size: 32)
!2604 = !DIDerivedType(tag: DW_TAG_member, scope: !2582, file: !2511, line: 103, baseType: !2605, size: 32, offset: 128)
!2605 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2582, file: !2511, line: 103, size: 32, elements: !2606)
!2606 = !{!2607, !2608}
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2605, file: !2511, line: 103, baseType: !121, size: 32)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2605, file: !2511, line: 103, baseType: !121, size: 32)
!2609 = !DIDerivedType(tag: DW_TAG_member, scope: !2582, file: !2511, line: 104, baseType: !2610, size: 32, offset: 160)
!2610 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2582, file: !2511, line: 104, size: 32, elements: !2611)
!2611 = !{!2612, !2613}
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2610, file: !2511, line: 104, baseType: !121, size: 32)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2610, file: !2511, line: 104, baseType: !121, size: 32)
!2614 = !DIDerivedType(tag: DW_TAG_member, scope: !2582, file: !2511, line: 105, baseType: !2615, size: 32, offset: 192)
!2615 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2582, file: !2511, line: 105, size: 32, elements: !2616)
!2616 = !{!2617, !2618}
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2615, file: !2511, line: 105, baseType: !121, size: 32)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2615, file: !2511, line: 105, baseType: !121, size: 32)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2582, file: !2511, line: 106, baseType: !121, size: 32, offset: 224)
!2620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 32)
!2621 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2622, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1388, retainedTypes: !2623, splitDebugInlining: false, nameTableKind: None)
!2622 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/sensor/thermometer")
!2623 = !{!613, !587, !154, !121, !2624, !2641}
!2624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2625, size: 32)
!2625 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !356, line: 426, baseType: !2626)
!2626 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 411, size: 28704, elements: !2627)
!2627 = !{!2628, !2629, !2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640}
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2626, file: !356, line: 413, baseType: !1405, size: 256)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2626, file: !356, line: 414, baseType: !1407, size: 768, offset: 256)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2626, file: !356, line: 415, baseType: !1405, size: 256, offset: 1024)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2626, file: !356, line: 416, baseType: !1407, size: 768, offset: 1280)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2626, file: !356, line: 417, baseType: !1405, size: 256, offset: 2048)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2626, file: !356, line: 418, baseType: !1407, size: 768, offset: 2304)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2626, file: !356, line: 419, baseType: !1405, size: 256, offset: 3072)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2626, file: !356, line: 420, baseType: !1407, size: 768, offset: 3328)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2626, file: !356, line: 421, baseType: !1405, size: 256, offset: 4096)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2626, file: !356, line: 422, baseType: !1418, size: 1792, offset: 4352)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2626, file: !356, line: 423, baseType: !1422, size: 1920, offset: 6144)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2626, file: !356, line: 424, baseType: !1427, size: 20608, offset: 8064)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2626, file: !356, line: 425, baseType: !120, size: 32, offset: 28672)
!2641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2642, size: 32)
!2642 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !2643)
!2643 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !2644)
!2644 = !{!2645, !2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658, !2659, !2660, !2661, !2662, !2663, !2664, !2665}
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2643, file: !356, line: 447, baseType: !360, size: 32)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2643, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2643, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2643, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2643, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2643, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2643, file: !356, line: 453, baseType: !1442, size: 96, offset: 192)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2643, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2643, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2643, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2643, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2643, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2643, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2643, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2643, file: !356, line: 461, baseType: !1453, size: 64, offset: 512)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2643, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2643, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2643, file: !356, line: 464, baseType: !1457, size: 128, offset: 640)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2643, file: !356, line: 465, baseType: !1459, size: 160, offset: 768)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2643, file: !356, line: 466, baseType: !1461, size: 160, offset: 928)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2643, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!2666 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2667, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2668, splitDebugInlining: false, nameTableKind: None)
!2667 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/sensor/thermometer")
!2668 = !{!2669, !102, !103}
!2669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2670, size: 32)
!2670 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !2671)
!2671 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !2672)
!2672 = !{!2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690, !2691, !2692, !2693}
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2671, file: !356, line: 447, baseType: !360, size: 32)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2671, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2671, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2671, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2671, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2671, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2671, file: !356, line: 453, baseType: !1442, size: 96, offset: 192)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2671, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2671, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2671, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2671, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2671, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2671, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2671, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2671, file: !356, line: 461, baseType: !1453, size: 64, offset: 512)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2671, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2671, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2671, file: !356, line: 464, baseType: !1457, size: 128, offset: 640)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2671, file: !356, line: 465, baseType: !1459, size: 160, offset: 768)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2671, file: !356, line: 466, baseType: !1461, size: 160, offset: 928)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2671, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!2694 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2695, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2696, splitDebugInlining: false, nameTableKind: None)
!2695 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/sensor/thermometer")
!2696 = !{!146, !977, !200, !812, !2697, !155, !102}
!2697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2698, size: 32)
!2698 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !155)
!2699 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2700, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2701, splitDebugInlining: false, nameTableKind: None)
!2700 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/fprintf.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/sensor/thermometer")
!2701 = !{!102, !390}
!2702 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2703, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2704, splitDebugInlining: false, nameTableKind: None)
!2703 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/sensor/thermometer")
!2704 = !{!2705}
!2705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2706, size: 32)
!2706 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 532, baseType: !2707)
!2707 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 500, size: 1088, elements: !2708)
!2708 = !{!2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718, !2719, !2720, !2721, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738}
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2707, file: !116, line: 502, baseType: !120, size: 32)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2707, file: !116, line: 503, baseType: !120, size: 32, offset: 32)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2707, file: !116, line: 504, baseType: !120, size: 32, offset: 64)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2707, file: !116, line: 505, baseType: !120, size: 32, offset: 96)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2707, file: !116, line: 506, baseType: !120, size: 32, offset: 128)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2707, file: !116, line: 507, baseType: !120, size: 32, offset: 160)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2707, file: !116, line: 508, baseType: !120, size: 32, offset: 192)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2707, file: !116, line: 509, baseType: !121, size: 32, offset: 224)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2707, file: !116, line: 510, baseType: !120, size: 32, offset: 256)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2707, file: !116, line: 511, baseType: !120, size: 32, offset: 288)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2707, file: !116, line: 512, baseType: !681, size: 64, offset: 320)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2707, file: !116, line: 513, baseType: !120, size: 32, offset: 384)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2707, file: !116, line: 514, baseType: !120, size: 32, offset: 416)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2707, file: !116, line: 515, baseType: !120, size: 32, offset: 448)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2707, file: !116, line: 516, baseType: !121, size: 32, offset: 480)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2707, file: !116, line: 517, baseType: !120, size: 32, offset: 512)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2707, file: !116, line: 518, baseType: !120, size: 32, offset: 544)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2707, file: !116, line: 519, baseType: !681, size: 64, offset: 576)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2707, file: !116, line: 520, baseType: !120, size: 32, offset: 640)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2707, file: !116, line: 521, baseType: !120, size: 32, offset: 672)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2707, file: !116, line: 522, baseType: !120, size: 32, offset: 704)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2707, file: !116, line: 523, baseType: !121, size: 32, offset: 736)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2707, file: !116, line: 524, baseType: !120, size: 32, offset: 768)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2707, file: !116, line: 525, baseType: !120, size: 32, offset: 800)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2707, file: !116, line: 526, baseType: !681, size: 64, offset: 832)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2707, file: !116, line: 527, baseType: !120, size: 32, offset: 896)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2707, file: !116, line: 528, baseType: !120, size: 32, offset: 928)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2707, file: !116, line: 529, baseType: !681, size: 64, offset: 960)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2707, file: !116, line: 530, baseType: !120, size: 32, offset: 1024)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2707, file: !116, line: 531, baseType: !120, size: 32, offset: 1056)
!2739 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2740, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2740 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/sensor/thermometer")
!2741 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2742, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2743, retainedTypes: !2759, splitDebugInlining: false, nameTableKind: None)
!2742 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/sensor/thermometer")
!2743 = !{!2744, !2751, !2755}
!2744 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2745, line: 38, baseType: !32, size: 32, elements: !2746)
!2745 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2746 = !{!2747, !2748, !2749, !2750}
!2747 = !DIEnumerator(name: "HAL_OK", value: 0)
!2748 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2749 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2750 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2751 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !654, line: 184, baseType: !32, size: 32, elements: !2752)
!2752 = !{!2753, !2754}
!2753 = !DIEnumerator(name: "RESET", value: 0)
!2754 = !DIEnumerator(name: "SET", value: 1)
!2755 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !654, line: 190, baseType: !32, size: 32, elements: !2756)
!2756 = !{!2757, !2758}
!2757 = !DIEnumerator(name: "DISABLE", value: 0)
!2758 = !DIEnumerator(name: "ENABLE", value: 1)
!2759 = !{!102, !2760, !154, !121, !1304, !2794, !2800, !2811, !265, !2812, !1302}
!2760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2761, size: 32)
!2761 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 532, baseType: !2762)
!2762 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 500, size: 1088, elements: !2763)
!2763 = !{!2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779, !2780, !2781, !2782, !2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793}
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2762, file: !116, line: 502, baseType: !120, size: 32)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2762, file: !116, line: 503, baseType: !120, size: 32, offset: 32)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2762, file: !116, line: 504, baseType: !120, size: 32, offset: 64)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2762, file: !116, line: 505, baseType: !120, size: 32, offset: 96)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2762, file: !116, line: 506, baseType: !120, size: 32, offset: 128)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2762, file: !116, line: 507, baseType: !120, size: 32, offset: 160)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2762, file: !116, line: 508, baseType: !120, size: 32, offset: 192)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2762, file: !116, line: 509, baseType: !121, size: 32, offset: 224)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2762, file: !116, line: 510, baseType: !120, size: 32, offset: 256)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2762, file: !116, line: 511, baseType: !120, size: 32, offset: 288)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2762, file: !116, line: 512, baseType: !681, size: 64, offset: 320)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2762, file: !116, line: 513, baseType: !120, size: 32, offset: 384)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2762, file: !116, line: 514, baseType: !120, size: 32, offset: 416)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2762, file: !116, line: 515, baseType: !120, size: 32, offset: 448)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2762, file: !116, line: 516, baseType: !121, size: 32, offset: 480)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2762, file: !116, line: 517, baseType: !120, size: 32, offset: 512)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2762, file: !116, line: 518, baseType: !120, size: 32, offset: 544)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2762, file: !116, line: 519, baseType: !681, size: 64, offset: 576)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2762, file: !116, line: 520, baseType: !120, size: 32, offset: 640)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2762, file: !116, line: 521, baseType: !120, size: 32, offset: 672)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2762, file: !116, line: 522, baseType: !120, size: 32, offset: 704)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2762, file: !116, line: 523, baseType: !121, size: 32, offset: 736)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2762, file: !116, line: 524, baseType: !120, size: 32, offset: 768)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2762, file: !116, line: 525, baseType: !120, size: 32, offset: 800)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2762, file: !116, line: 526, baseType: !681, size: 64, offset: 832)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2762, file: !116, line: 527, baseType: !120, size: 32, offset: 896)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2762, file: !116, line: 528, baseType: !120, size: 32, offset: 928)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2762, file: !116, line: 529, baseType: !681, size: 64, offset: 960)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2762, file: !116, line: 530, baseType: !120, size: 32, offset: 1024)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2762, file: !116, line: 531, baseType: !120, size: 32, offset: 1056)
!2794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2795, size: 32)
!2795 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !116, line: 494, baseType: !2796)
!2796 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 490, size: 64, elements: !2797)
!2797 = !{!2798, !2799}
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2796, file: !116, line: 492, baseType: !120, size: 32)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2796, file: !116, line: 493, baseType: !120, size: 32, offset: 32)
!2800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2801, size: 32)
!2801 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !116, line: 369, baseType: !2802)
!2802 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 360, size: 224, elements: !2803)
!2803 = !{!2804, !2805, !2806, !2807, !2808, !2809, !2810}
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2802, file: !116, line: 362, baseType: !120, size: 32)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2802, file: !116, line: 363, baseType: !120, size: 32, offset: 32)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2802, file: !116, line: 364, baseType: !120, size: 32, offset: 64)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2802, file: !116, line: 365, baseType: !120, size: 32, offset: 96)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2802, file: !116, line: 366, baseType: !120, size: 32, offset: 128)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2802, file: !116, line: 367, baseType: !120, size: 32, offset: 160)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2802, file: !116, line: 368, baseType: !120, size: 32, offset: 192)
!2811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1423, size: 32)
!2812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2813, size: 32)
!2813 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !116, line: 441, baseType: !2814)
!2814 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 430, size: 320, elements: !2815)
!2815 = !{!2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824}
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !2814, file: !116, line: 432, baseType: !120, size: 32)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !2814, file: !116, line: 433, baseType: !120, size: 32, offset: 32)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !2814, file: !116, line: 434, baseType: !120, size: 32, offset: 64)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !2814, file: !116, line: 435, baseType: !120, size: 32, offset: 96)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !2814, file: !116, line: 436, baseType: !120, size: 32, offset: 128)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !2814, file: !116, line: 437, baseType: !120, size: 32, offset: 160)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !2814, file: !116, line: 438, baseType: !120, size: 32, offset: 192)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !2814, file: !116, line: 439, baseType: !120, size: 32, offset: 224)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !2814, file: !116, line: 440, baseType: !966, size: 64, offset: 256)
!2825 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2826, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2827, retainedTypes: !2828, splitDebugInlining: false, nameTableKind: None)
!2826 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/sensor/thermometer")
!2827 = !{!653}
!2828 = !{!2829, !121, !2837, !2843, !2854}
!2829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2830, size: 32)
!2830 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !356, line: 770, baseType: !2831)
!2831 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 764, size: 128, elements: !2832)
!2832 = !{!2833, !2834, !2835, !2836}
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2831, file: !356, line: 766, baseType: !120, size: 32)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2831, file: !356, line: 767, baseType: !120, size: 32, offset: 32)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2831, file: !356, line: 768, baseType: !120, size: 32, offset: 64)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2831, file: !356, line: 769, baseType: !360, size: 32, offset: 96)
!2837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2838, size: 32)
!2838 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !116, line: 494, baseType: !2839)
!2839 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 490, size: 64, elements: !2840)
!2840 = !{!2841, !2842}
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2839, file: !116, line: 492, baseType: !120, size: 32)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2839, file: !116, line: 493, baseType: !120, size: 32, offset: 32)
!2843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2844, size: 32)
!2844 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !116, line: 369, baseType: !2845)
!2845 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 360, size: 224, elements: !2846)
!2846 = !{!2847, !2848, !2849, !2850, !2851, !2852, !2853}
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2845, file: !116, line: 362, baseType: !120, size: 32)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2845, file: !116, line: 363, baseType: !120, size: 32, offset: 32)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2845, file: !116, line: 364, baseType: !120, size: 32, offset: 64)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2845, file: !116, line: 365, baseType: !120, size: 32, offset: 96)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2845, file: !116, line: 366, baseType: !120, size: 32, offset: 128)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2845, file: !116, line: 367, baseType: !120, size: 32, offset: 160)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2845, file: !116, line: 368, baseType: !120, size: 32, offset: 192)
!2854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2855, size: 32)
!2855 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 532, baseType: !2856)
!2856 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 500, size: 1088, elements: !2857)
!2857 = !{!2858, !2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887}
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2856, file: !116, line: 502, baseType: !120, size: 32)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2856, file: !116, line: 503, baseType: !120, size: 32, offset: 32)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2856, file: !116, line: 504, baseType: !120, size: 32, offset: 64)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2856, file: !116, line: 505, baseType: !120, size: 32, offset: 96)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2856, file: !116, line: 506, baseType: !120, size: 32, offset: 128)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2856, file: !116, line: 507, baseType: !120, size: 32, offset: 160)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2856, file: !116, line: 508, baseType: !120, size: 32, offset: 192)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2856, file: !116, line: 509, baseType: !121, size: 32, offset: 224)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2856, file: !116, line: 510, baseType: !120, size: 32, offset: 256)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2856, file: !116, line: 511, baseType: !120, size: 32, offset: 288)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2856, file: !116, line: 512, baseType: !681, size: 64, offset: 320)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2856, file: !116, line: 513, baseType: !120, size: 32, offset: 384)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2856, file: !116, line: 514, baseType: !120, size: 32, offset: 416)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2856, file: !116, line: 515, baseType: !120, size: 32, offset: 448)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2856, file: !116, line: 516, baseType: !121, size: 32, offset: 480)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2856, file: !116, line: 517, baseType: !120, size: 32, offset: 512)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2856, file: !116, line: 518, baseType: !120, size: 32, offset: 544)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2856, file: !116, line: 519, baseType: !681, size: 64, offset: 576)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2856, file: !116, line: 520, baseType: !120, size: 32, offset: 640)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2856, file: !116, line: 521, baseType: !120, size: 32, offset: 672)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2856, file: !116, line: 522, baseType: !120, size: 32, offset: 704)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2856, file: !116, line: 523, baseType: !121, size: 32, offset: 736)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2856, file: !116, line: 524, baseType: !120, size: 32, offset: 768)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2856, file: !116, line: 525, baseType: !120, size: 32, offset: 800)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2856, file: !116, line: 526, baseType: !681, size: 64, offset: 832)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2856, file: !116, line: 527, baseType: !120, size: 32, offset: 896)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2856, file: !116, line: 528, baseType: !120, size: 32, offset: 928)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2856, file: !116, line: 529, baseType: !681, size: 64, offset: 960)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2856, file: !116, line: 530, baseType: !120, size: 32, offset: 1024)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2856, file: !116, line: 531, baseType: !120, size: 32, offset: 1056)
!2888 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2889, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2890, splitDebugInlining: false, nameTableKind: None)
!2889 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/sensor/thermometer")
!2890 = !{!102, !200}
!2891 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2892, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2893, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2892 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/sensor/thermometer")
!2893 = !{!2894, !2901, !30}
!2894 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !2895, line: 14, baseType: !32, size: 32, elements: !2896)
!2895 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2896 = !{!2897, !2898, !2899, !2900}
!2897 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!2898 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!2899 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!2900 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!2901 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !2895, line: 42, baseType: !32, size: 32, elements: !2902)
!2902 = !{!2903, !2904, !2905, !2906, !2907, !2908}
!2903 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!2904 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!2905 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!2906 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!2907 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!2908 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!2909 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2910, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2910 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/sensor/thermometer")
!2911 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2912, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2913, splitDebugInlining: false, nameTableKind: None)
!2912 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/sensor/thermometer")
!2913 = !{!22, !102, !103}
!2914 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2915, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2915 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/sensor/thermometer")
!2916 = !{!"Ubuntu clang version 14.0.6"}
!2917 = !{i32 7, !"Dwarf Version", i32 4}
!2918 = !{i32 2, !"Debug Info Version", i32 3}
!2919 = !{i32 1, !"wchar_size", i32 4}
!2920 = !{i32 1, !"min_enum_size", i32 4}
!2921 = !{i32 1, !"branch-target-enforcement", i32 0}
!2922 = !{i32 1, !"sign-return-address", i32 0}
!2923 = !{i32 1, !"sign-return-address-all", i32 0}
!2924 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!2925 = !{i32 7, !"frame-pointer", i32 2}
!2926 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !2927, file: !2927, line: 26, type: !2928, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2182, retainedNodes: !322)
!2927 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2928 = !DISubroutineType(types: !2929)
!2929 = !{null}
!2930 = !DILocation(line: 28, column: 1, scope: !2926)
!2931 = !{i64 2155117667, i64 2155117687, i64 2155117750}
!2932 = !DILocation(line: 29, column: 1, scope: !2926)
!2933 = !{i64 2155118082, i64 2155118102, i64 2155118165}
!2934 = !DILocation(line: 30, column: 1, scope: !2926)
!2935 = !{i64 2155118501, i64 2155118521, i64 2155118584}
!2936 = !DILocation(line: 31, column: 1, scope: !2926)
!2937 = !{i64 2155118920, i64 2155118940, i64 2155119003}
!2938 = !DILocation(line: 33, column: 1, scope: !2926)
!2939 = !{i64 2155119212, i64 2155119232, i64 2155119295}
!2940 = !DILocation(line: 35, column: 1, scope: !2926)
!2941 = !{i64 2155119537, i64 2155119557, i64 2155119620}
!2942 = !DILocation(line: 50, column: 1, scope: !2926)
!2943 = !{i64 2155119964, i64 2155119984, i64 2155120047}
!2944 = !DILocation(line: 54, column: 1, scope: !2926)
!2945 = !{i64 2155120403, i64 2155120423, i64 2155120486}
!2946 = !DILocation(line: 61, column: 1, scope: !2926)
!2947 = !{i64 2155120720, i64 2155120740, i64 2155120803}
!2948 = !DILocation(line: 63, column: 1, scope: !2926)
!2949 = !{i64 2155121100, i64 2155121120, i64 2155121183}
!2950 = !DILocation(line: 64, column: 1, scope: !2926)
!2951 = !{i64 2155121622, i64 2155121642, i64 2155121705}
!2952 = !DILocation(line: 65, column: 1, scope: !2926)
!2953 = !{i64 2155122120, i64 2155122140, i64 2155122203}
!2954 = !DILocation(line: 66, column: 1, scope: !2926)
!2955 = !{i64 2155122602, i64 2155122622, i64 2155122685}
!2956 = !DILocation(line: 67, column: 1, scope: !2926)
!2957 = !{i64 2155123109, i64 2155123129, i64 2155123192}
!2958 = !DILocation(line: 68, column: 1, scope: !2926)
!2959 = !{i64 2155123597, i64 2155123617, i64 2155123680}
!2960 = !DILocation(line: 70, column: 1, scope: !2926)
!2961 = !{i64 2155124065, i64 2155124085, i64 2155124148}
!2962 = !DILocation(line: 71, column: 1, scope: !2926)
!2963 = !{i64 2155124507, i64 2155124527, i64 2155124590}
!2964 = !DILocation(line: 72, column: 1, scope: !2926)
!2965 = !{i64 2155124965, i64 2155124985, i64 2155125048}
!2966 = !DILocation(line: 79, column: 1, scope: !2926)
!2967 = !{i64 2155125419, i64 2155125439, i64 2155125502}
!2968 = !DILocation(line: 80, column: 1, scope: !2926)
!2969 = !{i64 2155125930, i64 2155125950, i64 2155126013}
!2970 = !DILocation(line: 82, column: 1, scope: !2926)
!2971 = !{i64 2155130482, i64 2155130502, i64 2155130565}
!2972 = !DILocation(line: 97, column: 1, scope: !2926)
!2973 = !{i64 2155130819, i64 2155130839, i64 2155130902}
!2974 = !DILocation(line: 99, column: 1, scope: !2926)
!2975 = !{i64 2155131037, i64 2155131057, i64 2155131120}
!2976 = !DILocation(line: 102, column: 1, scope: !2926)
!2977 = !{i64 2155131294, i64 2155131314, i64 2155131377}
!2978 = !DILocation(line: 105, column: 1, scope: !2926)
!2979 = !{i64 2155131534, i64 2155131554, i64 2155131617}
!2980 = !DILocation(line: 115, column: 1, scope: !2926)
!2981 = !{i64 2155131873, i64 2155131893, i64 2155131956}
!2982 = !DILocation(line: 118, column: 1, scope: !2926)
!2983 = !{i64 2155132217, i64 2155132237, i64 2155132300}
!2984 = !DILocation(line: 32, column: 1, scope: !2985)
!2985 = !DILexicalBlockFile(scope: !2926, file: !2986, discriminator: 0)
!2986 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2987 = !{i64 2155132573, i64 2155132593, i64 2155132656}
!2988 = !DILocation(line: 33, column: 1, scope: !2985)
!2989 = !{i64 2155133085, i64 2155133105, i64 2155133168}
!2990 = !DILocation(line: 53, column: 1, scope: !2985)
!2991 = !{i64 2155133593, i64 2155133613, i64 2155133676}
!2992 = !DILocation(line: 54, column: 1, scope: !2985)
!2993 = !{i64 2155134011, i64 2155134031, i64 2155134094}
!2994 = !DILocation(line: 55, column: 1, scope: !2985)
!2995 = !{i64 2155134429, i64 2155134449, i64 2155134512}
!2996 = !DILocation(line: 56, column: 1, scope: !2985)
!2997 = !{i64 2155134847, i64 2155134867, i64 2155134930}
!2998 = !DILocation(line: 57, column: 1, scope: !2985)
!2999 = !{i64 2155135265, i64 2155135285, i64 2155135348}
!3000 = !DILocation(line: 58, column: 1, scope: !2985)
!3001 = !{i64 2155135683, i64 2155135703, i64 2155135766}
!3002 = !DILocation(line: 59, column: 1, scope: !2985)
!3003 = !{i64 2155136101, i64 2155136121, i64 2155136184}
!3004 = !DILocation(line: 60, column: 1, scope: !2985)
!3005 = !{i64 2155136525, i64 2155136545, i64 2155136608}
!3006 = !DILocation(line: 61, column: 1, scope: !2985)
!3007 = !{i64 2155136842, i64 2155136862, i64 2155136925}
!3008 = !DILocation(line: 70, column: 1, scope: !2985)
!3009 = !{i64 2155137071, i64 2155137091, i64 2155137154}
!3010 = !DILocation(line: 72, column: 1, scope: !2985)
!3011 = !{i64 2155137403, i64 2155137423, i64 2155137486}
!3012 = !DILocation(line: 73, column: 1, scope: !2985)
!3013 = !{i64 2155137853, i64 2155137873, i64 2155137936}
!3014 = !DILocation(line: 74, column: 1, scope: !2985)
!3015 = !{i64 2155138303, i64 2155138323, i64 2155138386}
!3016 = !DILocation(line: 75, column: 1, scope: !2985)
!3017 = !{i64 2155138753, i64 2155138773, i64 2155138836}
!3018 = !DILocation(line: 76, column: 1, scope: !2985)
!3019 = !{i64 2155139203, i64 2155139223, i64 2155139286}
!3020 = !DILocation(line: 77, column: 1, scope: !2985)
!3021 = !{i64 2155139653, i64 2155139673, i64 2155139736}
!3022 = !DILocation(line: 78, column: 1, scope: !2985)
!3023 = !{i64 2155144164, i64 2155144184, i64 2155144247}
!3024 = !DILocation(line: 79, column: 1, scope: !2985)
!3025 = !{i64 2155144614, i64 2155144634, i64 2155144697}
!3026 = !DILocation(line: 80, column: 1, scope: !2985)
!3027 = !{i64 2155145067, i64 2155145087, i64 2155145150}
!3028 = !DILocation(line: 84, column: 1, scope: !2985)
!3029 = !{i64 2155145399, i64 2155145419, i64 2155145482}
!3030 = !DILocation(line: 91, column: 1, scope: !2985)
!3031 = !{i64 2155145796, i64 2155145816, i64 2155145879}
!3032 = !DILocation(line: 93, column: 1, scope: !2985)
!3033 = !{i64 2155146163, i64 2155146183, i64 2155146246}
!3034 = !DILocation(line: 106, column: 1, scope: !2985)
!3035 = !{i64 2155146433, i64 2155146453, i64 2155146516}
!3036 = !DILocation(line: 11, column: 1, scope: !3037)
!3037 = !DILexicalBlockFile(scope: !2926, file: !3038, discriminator: 0)
!3038 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3039 = distinct !DISubprogram(name: "main", scope: !3040, file: !3040, line: 11, type: !2928, scopeLine: 12, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2184, retainedNodes: !3041)
!3040 = !DIFile(filename: "zephyr/samples/sensor/thermometer/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3041 = !{!3042, !3043, !3045}
!3042 = !DILocalVariable(name: "temp_dev", scope: !3039, file: !3040, line: 13, type: !2296)
!3043 = !DILocalVariable(name: "r", scope: !3044, file: !3040, line: 27, type: !103)
!3044 = distinct !DILexicalBlock(scope: !3039, file: !3040, line: 26, column: 12)
!3045 = !DILocalVariable(name: "temp_value", scope: !3044, file: !3040, line: 28, type: !2313)
!3046 = !DILocation(line: 15, column: 2, scope: !3039)
!3047 = !DILocation(line: 17, column: 13, scope: !3039)
!3048 = !DILocation(line: 0, scope: !3039)
!3049 = !DILocation(line: 18, column: 7, scope: !3050)
!3050 = distinct !DILexicalBlock(scope: !3039, file: !3040, line: 18, column: 6)
!3051 = !DILocation(line: 18, column: 6, scope: !3039)
!3052 = !DILocation(line: 19, column: 3, scope: !3053)
!3053 = distinct !DILexicalBlock(scope: !3050, file: !3040, line: 18, column: 17)
!3054 = !DILocation(line: 20, column: 3, scope: !3053)
!3055 = !DILocation(line: 24, column: 29, scope: !3039)
!3056 = !DILocation(line: 23, column: 2, scope: !3039)
!3057 = !DILocation(line: 28, column: 3, scope: !3044)
!3058 = !DILocation(line: 28, column: 23, scope: !3044)
!3059 = !DILocation(line: 30, column: 7, scope: !3044)
!3060 = !DILocation(line: 0, scope: !3044)
!3061 = !DILocation(line: 31, column: 7, scope: !3062)
!3062 = distinct !DILexicalBlock(scope: !3044, file: !3040, line: 31, column: 7)
!3063 = !DILocation(line: 31, column: 7, scope: !3044)
!3064 = !DILocation(line: 32, column: 4, scope: !3065)
!3065 = distinct !DILexicalBlock(scope: !3062, file: !3040, line: 31, column: 10)
!3066 = !DILocation(line: 33, column: 4, scope: !3065)
!3067 = !DILocation(line: 36, column: 7, scope: !3044)
!3068 = !DILocation(line: 38, column: 7, scope: !3069)
!3069 = distinct !DILexicalBlock(scope: !3044, file: !3040, line: 38, column: 7)
!3070 = !DILocation(line: 38, column: 7, scope: !3044)
!3071 = !DILocation(line: 39, column: 4, scope: !3072)
!3072 = distinct !DILexicalBlock(scope: !3069, file: !3040, line: 38, column: 10)
!3073 = !DILocation(line: 40, column: 4, scope: !3072)
!3074 = !DILocation(line: 47, column: 2, scope: !3039)
!3075 = !DILocation(line: 44, column: 10, scope: !3044)
!3076 = !DILocation(line: 43, column: 3, scope: !3044)
!3077 = !DILocation(line: 46, column: 3, scope: !3044)
!3078 = !DILocation(line: 48, column: 1, scope: !3039)
!3079 = distinct !DISubprogram(name: "device_get_binding", scope: !3080, file: !3080, line: 24, type: !3081, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2184, retainedNodes: !3083)
!3080 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/sensor/thermometer")
!3081 = !DISubroutineType(types: !3082)
!3082 = !{!2296, !144}
!3083 = !{!3084}
!3084 = !DILocalVariable(name: "name", arg: 1, scope: !3079, file: !3080, line: 24, type: !144)
!3085 = !DILocation(line: 0, scope: !3079)
!3086 = !DILocation(line: 32, column: 2, scope: !3087)
!3087 = distinct !DILexicalBlock(scope: !3079, file: !3080, line: 32, column: 2)
!3088 = !{i64 2155037393}
!3089 = !DILocation(line: 33, column: 9, scope: !3079)
!3090 = !DILocation(line: 33, column: 2, scope: !3079)
!3091 = distinct !DISubprogram(name: "sensor_sample_fetch", scope: !3092, file: !3092, line: 76, type: !3093, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2184, retainedNodes: !3095)
!3092 = !DIFile(filename: "zephyr/include/generated/syscalls/sensor.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/sensor/thermometer")
!3093 = !DISubroutineType(types: !3094)
!3094 = !{!103, !2296}
!3095 = !{!3096}
!3096 = !DILocalVariable(name: "dev", arg: 1, scope: !3091, file: !3092, line: 76, type: !2296)
!3097 = !DILocation(line: 0, scope: !3091)
!3098 = !DILocation(line: 84, column: 2, scope: !3099)
!3099 = distinct !DILexicalBlock(scope: !3091, file: !3092, line: 84, column: 2)
!3100 = !{i64 2155043931}
!3101 = !DILocation(line: 85, column: 9, scope: !3091)
!3102 = !DILocation(line: 85, column: 2, scope: !3091)
!3103 = distinct !DISubprogram(name: "sensor_channel_get", scope: !3092, file: !3092, line: 123, type: !2346, scopeLine: 124, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2184, retainedNodes: !3104)
!3104 = !{!3105, !3106, !3107}
!3105 = !DILocalVariable(name: "dev", arg: 1, scope: !3103, file: !3092, line: 123, type: !2296)
!3106 = !DILocalVariable(name: "chan", arg: 2, scope: !3103, file: !3092, line: 123, type: !2187)
!3107 = !DILocalVariable(name: "val", arg: 3, scope: !3103, file: !3092, line: 123, type: !2322)
!3108 = !DILocation(line: 0, scope: !3103)
!3109 = !DILocation(line: 133, column: 2, scope: !3110)
!3110 = distinct !DILexicalBlock(scope: !3103, file: !3092, line: 133, column: 2)
!3111 = !{i64 2155044067}
!3112 = !DILocation(line: 134, column: 9, scope: !3103)
!3113 = !DILocation(line: 134, column: 2, scope: !3103)
!3114 = distinct !DISubprogram(name: "sensor_value_to_double", scope: !2188, file: !2188, line: 669, type: !3115, scopeLine: 670, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2184, retainedNodes: !3117)
!3115 = !DISubroutineType(types: !3116)
!3116 = !{!2348, !2311}
!3117 = !{!3118}
!3118 = !DILocalVariable(name: "val", arg: 1, scope: !3114, file: !2188, line: 669, type: !2311)
!3119 = !DILocation(line: 0, scope: !3114)
!3120 = !DILocation(line: 671, column: 22, scope: !3114)
!3121 = !DILocation(line: 671, column: 9, scope: !3114)
!3122 = !DILocation(line: 671, column: 42, scope: !3114)
!3123 = !DILocation(line: 671, column: 29, scope: !3114)
!3124 = !DILocation(line: 671, column: 47, scope: !3114)
!3125 = !DILocation(line: 671, column: 27, scope: !3114)
!3126 = !DILocation(line: 671, column: 2, scope: !3114)
!3127 = distinct !DISubprogram(name: "k_sleep", scope: !3128, file: !3128, line: 91, type: !3129, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2184, retainedNodes: !3135)
!3128 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/sensor/thermometer")
!3129 = !DISubroutineType(types: !3130)
!3130 = !{!587, !3131}
!3131 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1391, line: 67, baseType: !3132)
!3132 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1391, line: 65, size: 64, elements: !3133)
!3133 = !{!3134}
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3132, file: !1391, line: 66, baseType: !1390, size: 64)
!3135 = !{!3136}
!3136 = !DILocalVariable(name: "timeout", arg: 1, scope: !3127, file: !3128, line: 91, type: !3131)
!3137 = !DILocation(line: 0, scope: !3127)
!3138 = !DILocation(line: 99, column: 2, scope: !3139)
!3139 = distinct !DILexicalBlock(scope: !3127, file: !3128, line: 99, column: 2)
!3140 = !{i64 2154837470}
!3141 = !DILocation(line: 100, column: 9, scope: !3127)
!3142 = !DILocation(line: 100, column: 2, scope: !3127)
!3143 = distinct !DISubprogram(name: "z_impl_sensor_channel_get", scope: !2188, file: !2188, line: 582, type: !2346, scopeLine: 585, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2184, retainedNodes: !3144)
!3144 = !{!3145, !3146, !3147, !3148}
!3145 = !DILocalVariable(name: "dev", arg: 1, scope: !3143, file: !2188, line: 582, type: !2296)
!3146 = !DILocalVariable(name: "chan", arg: 2, scope: !3143, file: !2188, line: 583, type: !2187)
!3147 = !DILocalVariable(name: "val", arg: 3, scope: !3143, file: !2188, line: 584, type: !2322)
!3148 = !DILocalVariable(name: "api", scope: !3143, file: !2188, line: 586, type: !2287)
!3149 = !DILocation(line: 0, scope: !3143)
!3150 = !DILocation(line: 587, column: 42, scope: !3143)
!3151 = !DILocation(line: 589, column: 14, scope: !3143)
!3152 = !DILocation(line: 589, column: 9, scope: !3143)
!3153 = !DILocation(line: 589, column: 2, scope: !3143)
!3154 = distinct !DISubprogram(name: "z_impl_sensor_sample_fetch", scope: !2188, file: !2188, line: 518, type: !3093, scopeLine: 519, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2184, retainedNodes: !3155)
!3155 = !{!3156, !3157}
!3156 = !DILocalVariable(name: "dev", arg: 1, scope: !3154, file: !2188, line: 518, type: !2296)
!3157 = !DILocalVariable(name: "api", scope: !3154, file: !2188, line: 520, type: !2287)
!3158 = !DILocation(line: 0, scope: !3154)
!3159 = !DILocation(line: 521, column: 42, scope: !3154)
!3160 = !DILocation(line: 523, column: 14, scope: !3154)
!3161 = !DILocation(line: 523, column: 9, scope: !3154)
!3162 = !DILocation(line: 523, column: 2, scope: !3154)
!3163 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !105, file: !105, line: 45, type: !107, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3164)
!3164 = !{!3165}
!3165 = !DILocalVariable(name: "c", arg: 1, scope: !3163, file: !105, line: 45, type: !103)
!3166 = !DILocation(line: 0, scope: !3163)
!3167 = !DILocation(line: 50, column: 2, scope: !3163)
!3168 = distinct !DISubprogram(name: "__printk_hook_install", scope: !105, file: !105, line: 63, type: !3169, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3171)
!3169 = !DISubroutineType(types: !3170)
!3170 = !{null, !106}
!3171 = !{!3172}
!3172 = !DILocalVariable(name: "fn", arg: 1, scope: !3168, file: !105, line: 63, type: !106)
!3173 = !DILocation(line: 0, scope: !3168)
!3174 = !DILocation(line: 65, column: 12, scope: !3168)
!3175 = !DILocation(line: 66, column: 1, scope: !3168)
!3176 = distinct !DISubprogram(name: "__printk_get_hook", scope: !105, file: !105, line: 76, type: !3177, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !322)
!3177 = !DISubroutineType(types: !3178)
!3178 = !{!102}
!3179 = !DILocation(line: 78, column: 9, scope: !3176)
!3180 = !DILocation(line: 78, column: 2, scope: !3176)
!3181 = distinct !DISubprogram(name: "vprintk", scope: !105, file: !105, line: 113, type: !3182, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3191)
!3182 = !DISubroutineType(types: !3183)
!3183 = !{null, !144, !3184}
!3184 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3185, line: 99, baseType: !3186)
!3185 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3186 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3185, line: 40, baseType: !3187)
!3187 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !105, baseType: !3188)
!3188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3189)
!3189 = !{!3190}
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3188, file: !105, line: 79, baseType: !102, size: 32)
!3191 = !{!3192, !3193, !3194}
!3192 = !DILocalVariable(name: "fmt", arg: 1, scope: !3181, file: !105, line: 113, type: !144)
!3193 = !DILocalVariable(name: "ap", arg: 2, scope: !3181, file: !105, line: 113, type: !3184)
!3194 = !DILocalVariable(name: "ctx", scope: !3195, file: !105, line: 121, type: !3197)
!3195 = distinct !DILexicalBlock(scope: !3196, file: !105, line: 120, column: 27)
!3196 = distinct !DILexicalBlock(scope: !3181, file: !105, line: 120, column: 6)
!3197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !105, line: 81, size: 32, elements: !3198)
!3198 = !{!3199, !3200}
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !3197, file: !105, line: 85, baseType: !32, size: 32)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3197, file: !105, line: 86, baseType: !3201, offset: 32)
!3201 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, elements: !3202)
!3202 = !{!3203}
!3203 = !DISubrange(count: 0)
!3204 = !DILocation(line: 0, scope: !3181)
!3205 = !DILocation(line: 148, column: 3, scope: !3206)
!3206 = distinct !DILexicalBlock(scope: !3196, file: !105, line: 138, column: 9)
!3207 = !DILocation(line: 155, column: 1, scope: !3181)
!3208 = distinct !DISubprogram(name: "char_out", scope: !105, file: !105, line: 107, type: !3209, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3211)
!3209 = !DISubroutineType(types: !3210)
!3210 = !{!103, !103, !102}
!3211 = !{!3212, !3213}
!3212 = !DILocalVariable(name: "c", arg: 1, scope: !3208, file: !105, line: 107, type: !103)
!3213 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3208, file: !105, line: 107, type: !102)
!3214 = !DILocation(line: 0, scope: !3208)
!3215 = !DILocation(line: 110, column: 9, scope: !3208)
!3216 = !DILocation(line: 110, column: 2, scope: !3208)
!3217 = distinct !DISubprogram(name: "cbvprintf", scope: !3218, file: !3218, line: 739, type: !3219, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3225)
!3218 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3219 = !DISubroutineType(types: !3220)
!3220 = !{!103, !3221, !102, !144, !3184}
!3221 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3218, line: 297, baseType: !3222)
!3222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3223, size: 32)
!3223 = !DISubroutineType(types: !3224)
!3224 = !{!103, null}
!3225 = !{!3226, !3227, !3228, !3229}
!3226 = !DILocalVariable(name: "out", arg: 1, scope: !3217, file: !3218, line: 739, type: !3221)
!3227 = !DILocalVariable(name: "ctx", arg: 2, scope: !3217, file: !3218, line: 739, type: !102)
!3228 = !DILocalVariable(name: "format", arg: 3, scope: !3217, file: !3218, line: 739, type: !144)
!3229 = !DILocalVariable(name: "ap", arg: 4, scope: !3217, file: !3218, line: 739, type: !3184)
!3230 = !DILocation(line: 0, scope: !3217)
!3231 = !DILocation(line: 741, column: 9, scope: !3217)
!3232 = !DILocation(line: 741, column: 2, scope: !3217)
!3233 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !105, file: !105, line: 157, type: !3234, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3236)
!3234 = !DISubroutineType(types: !3235)
!3235 = !{null, !977, !200}
!3236 = !{!3237, !3238, !3239}
!3237 = !DILocalVariable(name: "c", arg: 1, scope: !3233, file: !105, line: 157, type: !977)
!3238 = !DILocalVariable(name: "n", arg: 2, scope: !3233, file: !105, line: 157, type: !200)
!3239 = !DILocalVariable(name: "i", scope: !3233, file: !105, line: 159, type: !200)
!3240 = !DILocation(line: 0, scope: !3233)
!3241 = !DILocation(line: 164, column: 16, scope: !3242)
!3242 = distinct !DILexicalBlock(scope: !3243, file: !105, line: 164, column: 2)
!3243 = distinct !DILexicalBlock(scope: !3233, file: !105, line: 164, column: 2)
!3244 = !DILocation(line: 164, column: 2, scope: !3243)
!3245 = !DILocation(line: 165, column: 3, scope: !3246)
!3246 = distinct !DILexicalBlock(scope: !3242, file: !105, line: 164, column: 26)
!3247 = !DILocation(line: 165, column: 13, scope: !3246)
!3248 = !DILocation(line: 164, column: 22, scope: !3242)
!3249 = distinct !{!3249, !3244, !3250}
!3250 = !DILocation(line: 166, column: 2, scope: !3243)
!3251 = !DILocation(line: 171, column: 1, scope: !3233)
!3252 = distinct !DISubprogram(name: "printk", scope: !105, file: !105, line: 203, type: !3253, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3255)
!3253 = !DISubroutineType(types: !3254)
!3254 = !{null, !144, null}
!3255 = !{!3256, !3257}
!3256 = !DILocalVariable(name: "fmt", arg: 1, scope: !3252, file: !105, line: 203, type: !144)
!3257 = !DILocalVariable(name: "ap", scope: !3252, file: !105, line: 205, type: !3184)
!3258 = !DILocation(line: 0, scope: !3252)
!3259 = !DILocation(line: 205, column: 2, scope: !3252)
!3260 = !DILocation(line: 205, column: 10, scope: !3252)
!3261 = !DILocation(line: 207, column: 2, scope: !3252)
!3262 = !DILocation(line: 209, column: 2, scope: !3252)
!3263 = !DILocation(line: 211, column: 2, scope: !3252)
!3264 = !DILocation(line: 212, column: 1, scope: !3252)
!3265 = distinct !DISubprogram(name: "snprintk", scope: !105, file: !105, line: 239, type: !3266, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3268)
!3266 = !DISubroutineType(types: !3267)
!3267 = !{!103, !977, !200, !144, null}
!3268 = !{!3269, !3270, !3271, !3272, !3273}
!3269 = !DILocalVariable(name: "str", arg: 1, scope: !3265, file: !105, line: 239, type: !977)
!3270 = !DILocalVariable(name: "size", arg: 2, scope: !3265, file: !105, line: 239, type: !200)
!3271 = !DILocalVariable(name: "fmt", arg: 3, scope: !3265, file: !105, line: 239, type: !144)
!3272 = !DILocalVariable(name: "ap", scope: !3265, file: !105, line: 241, type: !3184)
!3273 = !DILocalVariable(name: "ret", scope: !3265, file: !105, line: 242, type: !103)
!3274 = !DILocation(line: 0, scope: !3265)
!3275 = !DILocation(line: 241, column: 2, scope: !3265)
!3276 = !DILocation(line: 241, column: 10, scope: !3265)
!3277 = !DILocation(line: 244, column: 2, scope: !3265)
!3278 = !DILocation(line: 245, column: 8, scope: !3265)
!3279 = !DILocation(line: 246, column: 2, scope: !3265)
!3280 = !DILocation(line: 249, column: 1, scope: !3265)
!3281 = !DILocation(line: 248, column: 2, scope: !3265)
!3282 = distinct !DISubprogram(name: "vsnprintk", scope: !105, file: !105, line: 251, type: !3283, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3285)
!3283 = !DISubroutineType(types: !3284)
!3284 = !{!103, !977, !200, !144, !3184}
!3285 = !{!3286, !3287, !3288, !3289, !3290}
!3286 = !DILocalVariable(name: "str", arg: 1, scope: !3282, file: !105, line: 251, type: !977)
!3287 = !DILocalVariable(name: "size", arg: 2, scope: !3282, file: !105, line: 251, type: !200)
!3288 = !DILocalVariable(name: "fmt", arg: 3, scope: !3282, file: !105, line: 251, type: !144)
!3289 = !DILocalVariable(name: "ap", arg: 4, scope: !3282, file: !105, line: 251, type: !3184)
!3290 = !DILocalVariable(name: "ctx", scope: !3282, file: !105, line: 253, type: !3291)
!3291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !105, line: 217, size: 96, elements: !3292)
!3292 = !{!3293, !3294, !3295}
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3291, file: !105, line: 218, baseType: !977, size: 32)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3291, file: !105, line: 219, baseType: !103, size: 32, offset: 32)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3291, file: !105, line: 220, baseType: !103, size: 32, offset: 64)
!3296 = !DILocation(line: 0, scope: !3282)
!3297 = !DILocation(line: 253, column: 2, scope: !3282)
!3298 = !DILocation(line: 253, column: 21, scope: !3282)
!3299 = !DILocation(line: 253, column: 27, scope: !3282)
!3300 = !DILocation(line: 255, column: 2, scope: !3282)
!3301 = !DILocation(line: 257, column: 10, scope: !3302)
!3302 = distinct !DILexicalBlock(scope: !3282, file: !105, line: 257, column: 6)
!3303 = !DILocation(line: 257, column: 22, scope: !3302)
!3304 = !DILocation(line: 257, column: 16, scope: !3302)
!3305 = !DILocation(line: 257, column: 6, scope: !3282)
!3306 = !DILocation(line: 258, column: 3, scope: !3307)
!3307 = distinct !DILexicalBlock(scope: !3302, file: !105, line: 257, column: 27)
!3308 = !DILocation(line: 258, column: 18, scope: !3307)
!3309 = !DILocation(line: 259, column: 2, scope: !3307)
!3310 = !DILocation(line: 262, column: 1, scope: !3282)
!3311 = !DILocation(line: 261, column: 2, scope: !3282)
!3312 = distinct !DISubprogram(name: "str_out", scope: !105, file: !105, line: 223, type: !3313, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3316)
!3313 = !DISubroutineType(types: !3314)
!3314 = !{!103, !103, !3315}
!3315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3291, size: 32)
!3316 = !{!3317, !3318}
!3317 = !DILocalVariable(name: "c", arg: 1, scope: !3312, file: !105, line: 223, type: !103)
!3318 = !DILocalVariable(name: "ctx", arg: 2, scope: !3312, file: !105, line: 223, type: !3315)
!3319 = !DILocation(line: 0, scope: !3312)
!3320 = !DILocation(line: 225, column: 11, scope: !3321)
!3321 = distinct !DILexicalBlock(scope: !3312, file: !105, line: 225, column: 6)
!3322 = !DILocation(line: 225, column: 15, scope: !3321)
!3323 = !DILocation(line: 0, scope: !3321)
!3324 = !DILocation(line: 225, column: 23, scope: !3321)
!3325 = !DILocation(line: 225, column: 45, scope: !3321)
!3326 = !DILocation(line: 225, column: 37, scope: !3321)
!3327 = !DILocation(line: 225, column: 6, scope: !3312)
!3328 = !DILocation(line: 226, column: 8, scope: !3329)
!3329 = distinct !DILexicalBlock(scope: !3321, file: !105, line: 225, column: 50)
!3330 = !DILocation(line: 226, column: 13, scope: !3329)
!3331 = !DILocation(line: 227, column: 3, scope: !3329)
!3332 = !DILocation(line: 230, column: 29, scope: !3333)
!3333 = distinct !DILexicalBlock(scope: !3312, file: !105, line: 230, column: 6)
!3334 = !DILocation(line: 230, column: 17, scope: !3333)
!3335 = !DILocation(line: 230, column: 6, scope: !3312)
!3336 = !DILocation(line: 231, column: 22, scope: !3337)
!3337 = distinct !DILexicalBlock(scope: !3333, file: !105, line: 230, column: 34)
!3338 = !DILocation(line: 231, column: 3, scope: !3337)
!3339 = !DILocation(line: 231, column: 26, scope: !3337)
!3340 = !DILocation(line: 232, column: 2, scope: !3337)
!3341 = !DILocation(line: 233, column: 28, scope: !3342)
!3342 = distinct !DILexicalBlock(scope: !3333, file: !105, line: 232, column: 9)
!3343 = !DILocation(line: 233, column: 22, scope: !3342)
!3344 = !DILocation(line: 233, column: 3, scope: !3342)
!3345 = !DILocation(line: 233, column: 26, scope: !3342)
!3346 = !DILocation(line: 237, column: 1, scope: !3312)
!3347 = distinct !DISubprogram(name: "z_thread_entry", scope: !3348, file: !3348, line: 30, type: !3349, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !3356)
!3348 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3349 = !DISubroutineType(types: !3350)
!3350 = !{null, !3351, !102, !102, !102}
!3351 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !3352, line: 46, baseType: !3353)
!3352 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3354, size: 32)
!3354 = !DISubroutineType(types: !3355)
!3355 = !{null, !102, !102, !102}
!3356 = !{!3357, !3358, !3359, !3360}
!3357 = !DILocalVariable(name: "entry", arg: 1, scope: !3347, file: !3348, line: 30, type: !3351)
!3358 = !DILocalVariable(name: "p1", arg: 2, scope: !3347, file: !3348, line: 31, type: !102)
!3359 = !DILocalVariable(name: "p2", arg: 3, scope: !3347, file: !3348, line: 31, type: !102)
!3360 = !DILocalVariable(name: "p3", arg: 4, scope: !3347, file: !3348, line: 31, type: !102)
!3361 = !DILocation(line: 0, scope: !3347)
!3362 = !DILocation(line: 36, column: 2, scope: !3347)
!3363 = !DILocation(line: 38, column: 17, scope: !3347)
!3364 = !DILocation(line: 38, column: 2, scope: !3347)
!3365 = !DILocation(line: 45, column: 2, scope: !3347)
!3366 = distinct !DISubprogram(name: "k_current_get", scope: !307, file: !307, line: 530, type: !3367, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !322)
!3367 = !DISubroutineType(types: !3368)
!3368 = !{!3369}
!3369 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !211, line: 347, baseType: !3370)
!3370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3371, size: 32)
!3371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !3372)
!3372 = !{!3373, !3431, !3443, !3444, !3445, !3446, !3452, !3465}
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3371, file: !211, line: 247, baseType: !3374, size: 384)
!3374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !3375)
!3375 = !{!3376, !3400, !3407, !3408, !3409, !3418, !3419, !3420}
!3376 = !DIDerivedType(tag: DW_TAG_member, scope: !3374, file: !211, line: 60, baseType: !3377, size: 64)
!3377 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3374, file: !211, line: 60, size: 64, elements: !3378)
!3378 = !{!3379, !3394}
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3377, file: !211, line: 61, baseType: !3380, size: 64)
!3380 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !3381)
!3381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !3382)
!3382 = !{!3383, !3389}
!3383 = !DIDerivedType(tag: DW_TAG_member, scope: !3381, file: !221, line: 38, baseType: !3384, size: 32)
!3384 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3381, file: !221, line: 38, size: 32, elements: !3385)
!3385 = !{!3386, !3388}
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3384, file: !221, line: 39, baseType: !3387, size: 32)
!3387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3381, size: 32)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3384, file: !221, line: 40, baseType: !3387, size: 32)
!3389 = !DIDerivedType(tag: DW_TAG_member, scope: !3381, file: !221, line: 42, baseType: !3390, size: 32, offset: 32)
!3390 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3381, file: !221, line: 42, size: 32, elements: !3391)
!3391 = !{!3392, !3393}
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3390, file: !221, line: 43, baseType: !3387, size: 32)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3390, file: !221, line: 44, baseType: !3387, size: 32)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3377, file: !211, line: 62, baseType: !3395, size: 64)
!3395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !3396)
!3396 = !{!3397}
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3395, file: !237, line: 50, baseType: !3398, size: 64)
!3398 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3399, size: 64, elements: !242)
!3399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3395, size: 32)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3374, file: !211, line: 68, baseType: !3401, size: 32, offset: 64)
!3401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3402, size: 32)
!3402 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !3403)
!3403 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !3404)
!3404 = !{!3405}
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3403, file: !247, line: 232, baseType: !3406, size: 64)
!3406 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !3381)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3374, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3374, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!3409 = !DIDerivedType(tag: DW_TAG_member, scope: !3374, file: !211, line: 90, baseType: !3410, size: 16, offset: 112)
!3410 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3374, file: !211, line: 90, size: 16, elements: !3411)
!3411 = !{!3412, !3417}
!3412 = !DIDerivedType(tag: DW_TAG_member, scope: !3410, file: !211, line: 91, baseType: !3413, size: 16)
!3413 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3410, file: !211, line: 91, size: 16, elements: !3414)
!3414 = !{!3415, !3416}
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3413, file: !211, line: 96, baseType: !261, size: 8)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3413, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3410, file: !211, line: 100, baseType: !265, size: 16)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3374, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3374, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3374, file: !211, line: 131, baseType: !3421, size: 192, offset: 192)
!3421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !3422)
!3422 = !{!3423, !3424, !3430}
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3421, file: !247, line: 245, baseType: !3380, size: 64)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3421, file: !247, line: 246, baseType: !3425, size: 32, offset: 64)
!3425 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !3426)
!3426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3427, size: 32)
!3427 = !DISubroutineType(types: !3428)
!3428 = !{null, !3429}
!3429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3421, size: 32)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3421, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3371, file: !211, line: 250, baseType: !3432, size: 288, offset: 384)
!3432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !3433)
!3433 = !{!3434, !3435, !3436, !3437, !3438, !3439, !3440, !3441, !3442}
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3432, file: !284, line: 26, baseType: !121, size: 32)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3432, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3432, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3432, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3432, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3432, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3432, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3432, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3432, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3371, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3371, file: !211, line: 256, baseType: !3402, size: 64, offset: 704)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3371, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3371, file: !211, line: 300, baseType: !3447, size: 96, offset: 800)
!3447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !3448)
!3448 = !{!3449, !3450, !3451}
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3447, file: !211, line: 153, baseType: !22, size: 32)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3447, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3447, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3371, file: !211, line: 325, baseType: !3453, size: 32, offset: 896)
!3453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3454, size: 32)
!3454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !3455)
!3455 = !{!3456, !3462, !3463}
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3454, file: !307, line: 5074, baseType: !3457, size: 96)
!3457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !3458)
!3458 = !{!3459, !3460, !3461}
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3457, file: !311, line: 57, baseType: !314, size: 32)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3457, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3457, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3454, file: !307, line: 5075, baseType: !3402, size: 64, offset: 96)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3454, file: !307, line: 5076, baseType: !3464, offset: 160)
!3464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3371, file: !211, line: 343, baseType: !3466, size: 64, offset: 928)
!3466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !3467)
!3467 = !{!3468, !3469}
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3466, file: !284, line: 63, baseType: !121, size: 32)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3466, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!3470 = !DILocation(line: 535, column: 9, scope: !3366)
!3471 = !DILocation(line: 535, column: 2, scope: !3366)
!3472 = distinct !DISubprogram(name: "k_thread_abort", scope: !3128, file: !3128, line: 188, type: !3473, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !3475)
!3473 = !DISubroutineType(types: !3474)
!3474 = !{null, !3369}
!3475 = !{!3476}
!3476 = !DILocalVariable(name: "thread", arg: 1, scope: !3472, file: !3128, line: 188, type: !3369)
!3477 = !DILocation(line: 0, scope: !3472)
!3478 = !DILocation(line: 197, column: 2, scope: !3479)
!3479 = distinct !DILexicalBlock(scope: !3472, file: !3128, line: 197, column: 2)
!3480 = !{i64 2154838095}
!3481 = !DILocation(line: 198, column: 2, scope: !3472)
!3482 = !DILocation(line: 199, column: 1, scope: !3472)
!3483 = distinct !DISubprogram(name: "z_current_get", scope: !3128, file: !3128, line: 173, type: !3367, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2349, retainedNodes: !322)
!3484 = !DILocation(line: 180, column: 2, scope: !3485)
!3485 = distinct !DILexicalBlock(scope: !3483, file: !3128, line: 180, column: 2)
!3486 = !{i64 2154838027}
!3487 = !DILocation(line: 181, column: 9, scope: !3483)
!3488 = !DILocation(line: 181, column: 2, scope: !3483)
!3489 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2355, file: !2355, line: 1338, type: !3490, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !3498)
!3490 = !DISubroutineType(types: !3491)
!3491 = !{!103, !3221, !102, !144, !3492, !121}
!3492 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3185, line: 99, baseType: !3493)
!3493 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3185, line: 40, baseType: !3494)
!3494 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2355, baseType: !3495)
!3495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3496)
!3496 = !{!3497}
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3495, file: !2355, baseType: !102, size: 32)
!3498 = !{!3499, !3500, !3501, !3502, !3503, !3504, !3508, !3509, !3510, !3512, !3517, !3561, !3564, !3567, !3568, !3569, !3570, !3571, !3572, !3573, !3576, !3577, !3578, !3582, !3585, !3587, !3590, !3591, !3592, !3597, !3603, !3606, !3610, !3613, !3618, !3622, !3627, !3631, !3634, !3637, !3640, !3642, !3647, !3651, !3654, !3656, !3659}
!3499 = !DILocalVariable(name: "out", arg: 1, scope: !3489, file: !2355, line: 1338, type: !3221)
!3500 = !DILocalVariable(name: "ctx", arg: 2, scope: !3489, file: !2355, line: 1338, type: !102)
!3501 = !DILocalVariable(name: "fp", arg: 3, scope: !3489, file: !2355, line: 1338, type: !144)
!3502 = !DILocalVariable(name: "ap", arg: 4, scope: !3489, file: !2355, line: 1339, type: !3492)
!3503 = !DILocalVariable(name: "flags", arg: 5, scope: !3489, file: !2355, line: 1339, type: !121)
!3504 = !DILocalVariable(name: "buf", scope: !3489, file: !2355, line: 1341, type: !3505)
!3505 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, size: 200, elements: !3506)
!3506 = !{!3507}
!3507 = !DISubrange(count: 25)
!3508 = !DILocalVariable(name: "count", scope: !3489, file: !2355, line: 1342, type: !200)
!3509 = !DILocalVariable(name: "sint", scope: !3489, file: !2355, line: 1343, type: !2374)
!3510 = !DILocalVariable(name: "tagged_ap", scope: !3489, file: !2355, line: 1345, type: !3511)
!3511 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !157)
!3512 = !DILocalVariable(name: "rc", scope: !3513, file: !2355, line: 1377, type: !103)
!3513 = distinct !DILexicalBlock(scope: !3514, file: !2355, line: 1377, column: 4)
!3514 = distinct !DILexicalBlock(scope: !3515, file: !2355, line: 1376, column: 19)
!3515 = distinct !DILexicalBlock(scope: !3516, file: !2355, line: 1376, column: 7)
!3516 = distinct !DILexicalBlock(scope: !3489, file: !2355, line: 1375, column: 19)
!3517 = !DILocalVariable(name: "state", scope: !3516, file: !2355, line: 1395, type: !3518)
!3518 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3489, file: !2355, line: 1392, size: 192, elements: !3519)
!3519 = !{!3520, !3529}
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3518, file: !2355, line: 1393, baseType: !3521, size: 64)
!3521 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2355, line: 166, size: 64, elements: !3522)
!3522 = !{!3523, !3524, !3525, !3526, !3528}
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !3521, file: !2355, line: 168, baseType: !2374, size: 64)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !3521, file: !2355, line: 171, baseType: !2377, size: 64)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !3521, file: !2355, line: 174, baseType: !2348, size: 64)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !3521, file: !2355, line: 177, baseType: !3527, size: 64)
!3527 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3521, file: !2355, line: 180, baseType: !102, size: 32)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !3518, file: !2355, line: 1394, baseType: !3530, size: 96, offset: 64)
!3530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2355, line: 189, size: 96, elements: !3531)
!3531 = !{!3532, !3533, !3534, !3535, !3536, !3537, !3538, !3539, !3540, !3541, !3542, !3543, !3544, !3545, !3546, !3547, !3548, !3549, !3550, !3551, !3556}
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !3530, file: !2355, line: 191, baseType: !157, size: 1, flags: DIFlagBitField, extraData: i64 0)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !3530, file: !2355, line: 194, baseType: !157, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !3530, file: !2355, line: 197, baseType: !157, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !3530, file: !2355, line: 200, baseType: !157, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !3530, file: !2355, line: 203, baseType: !157, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !3530, file: !2355, line: 206, baseType: !157, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !3530, file: !2355, line: 209, baseType: !157, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !3530, file: !2355, line: 212, baseType: !157, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !3530, file: !2355, line: 219, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !3530, file: !2355, line: 222, baseType: !157, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !3530, file: !2355, line: 229, baseType: !157, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !3530, file: !2355, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !3530, file: !2355, line: 238, baseType: !157, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !3530, file: !2355, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !3530, file: !2355, line: 244, baseType: !157, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !3530, file: !2355, line: 247, baseType: !157, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !3530, file: !2355, line: 252, baseType: !157, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !3530, file: !2355, line: 257, baseType: !157, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !3530, file: !2355, line: 260, baseType: !155, size: 8, offset: 24)
!3551 = !DIDerivedType(tag: DW_TAG_member, scope: !3530, file: !2355, line: 262, baseType: !3552, size: 32, offset: 32)
!3552 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3530, file: !2355, line: 262, size: 32, elements: !3553)
!3553 = !{!3554, !3555}
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !3552, file: !2355, line: 267, baseType: !103, size: 32)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !3552, file: !2355, line: 289, baseType: !103, size: 32)
!3556 = !DIDerivedType(tag: DW_TAG_member, scope: !3530, file: !2355, line: 292, baseType: !3557, size: 32, offset: 64)
!3557 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3530, file: !2355, line: 292, size: 32, elements: !3558)
!3558 = !{!3559, !3560}
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !3557, file: !2355, line: 297, baseType: !103, size: 32)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !3557, file: !2355, line: 306, baseType: !103, size: 32)
!3561 = !DILocalVariable(name: "conv", scope: !3516, file: !2355, line: 1400, type: !3562)
!3562 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3563)
!3563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3530, size: 32)
!3564 = !DILocalVariable(name: "value", scope: !3516, file: !2355, line: 1401, type: !3565)
!3565 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3566)
!3566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3521, size: 32)
!3567 = !DILocalVariable(name: "sp", scope: !3516, file: !2355, line: 1402, type: !144)
!3568 = !DILocalVariable(name: "width", scope: !3516, file: !2355, line: 1403, type: !103)
!3569 = !DILocalVariable(name: "precision", scope: !3516, file: !2355, line: 1404, type: !103)
!3570 = !DILocalVariable(name: "bps", scope: !3516, file: !2355, line: 1405, type: !144)
!3571 = !DILocalVariable(name: "bpe", scope: !3516, file: !2355, line: 1406, type: !144)
!3572 = !DILocalVariable(name: "sign", scope: !3516, file: !2355, line: 1407, type: !146)
!3573 = !DILocalVariable(name: "arg", scope: !3574, file: !2355, line: 1432, type: !103)
!3574 = distinct !DILexicalBlock(scope: !3575, file: !2355, line: 1431, column: 24)
!3575 = distinct !DILexicalBlock(scope: !3516, file: !2355, line: 1431, column: 7)
!3576 = !DILocalVariable(name: "specifier_cat", scope: !3516, file: !2355, line: 1468, type: !2354)
!3577 = !DILocalVariable(name: "length_mod", scope: !3516, file: !2355, line: 1470, type: !2362)
!3578 = !DILocalVariable(name: "rc", scope: !3579, file: !2355, line: 1575, type: !103)
!3579 = distinct !DILexicalBlock(scope: !3580, file: !2355, line: 1575, column: 4)
!3580 = distinct !DILexicalBlock(scope: !3581, file: !2355, line: 1574, column: 43)
!3581 = distinct !DILexicalBlock(scope: !3516, file: !2355, line: 1574, column: 7)
!3582 = !DILocalVariable(name: "rc", scope: !3583, file: !2355, line: 1584, type: !103)
!3583 = distinct !DILexicalBlock(scope: !3584, file: !2355, line: 1584, column: 4)
!3584 = distinct !DILexicalBlock(scope: !3516, file: !2355, line: 1582, column: 28)
!3585 = !DILocalVariable(name: "len", scope: !3586, file: !2355, line: 1589, type: !200)
!3586 = distinct !DILexicalBlock(scope: !3584, file: !2355, line: 1586, column: 13)
!3587 = !DILocalVariable(name: "len", scope: !3588, file: !2355, line: 1641, type: !200)
!3588 = distinct !DILexicalBlock(scope: !3589, file: !2355, line: 1640, column: 24)
!3589 = distinct !DILexicalBlock(scope: !3584, file: !2355, line: 1640, column: 8)
!3590 = !DILocalVariable(name: "nj_len", scope: !3516, file: !2355, line: 1722, type: !200)
!3591 = !DILocalVariable(name: "pad_len", scope: !3516, file: !2355, line: 1723, type: !103)
!3592 = !DILocalVariable(name: "pad", scope: !3593, file: !2355, line: 1751, type: !146)
!3593 = distinct !DILexicalBlock(scope: !3594, file: !2355, line: 1750, column: 26)
!3594 = distinct !DILexicalBlock(scope: !3595, file: !2355, line: 1750, column: 8)
!3595 = distinct !DILexicalBlock(scope: !3596, file: !2355, line: 1747, column: 18)
!3596 = distinct !DILexicalBlock(scope: !3516, file: !2355, line: 1747, column: 7)
!3597 = !DILocalVariable(name: "rc", scope: !3598, file: !2355, line: 1758, type: !103)
!3598 = distinct !DILexicalBlock(scope: !3599, file: !2355, line: 1758, column: 7)
!3599 = distinct !DILexicalBlock(scope: !3600, file: !2355, line: 1757, column: 21)
!3600 = distinct !DILexicalBlock(scope: !3601, file: !2355, line: 1757, column: 10)
!3601 = distinct !DILexicalBlock(scope: !3602, file: !2355, line: 1756, column: 26)
!3602 = distinct !DILexicalBlock(scope: !3593, file: !2355, line: 1756, column: 9)
!3603 = !DILocalVariable(name: "rc", scope: !3604, file: !2355, line: 1765, type: !103)
!3604 = distinct !DILexicalBlock(scope: !3605, file: !2355, line: 1765, column: 6)
!3605 = distinct !DILexicalBlock(scope: !3593, file: !2355, line: 1764, column: 25)
!3606 = !DILocalVariable(name: "rc", scope: !3607, file: !2355, line: 1774, type: !103)
!3607 = distinct !DILexicalBlock(scope: !3608, file: !2355, line: 1774, column: 4)
!3608 = distinct !DILexicalBlock(scope: !3609, file: !2355, line: 1773, column: 18)
!3609 = distinct !DILexicalBlock(scope: !3516, file: !2355, line: 1773, column: 7)
!3610 = !DILocalVariable(name: "cp", scope: !3611, file: !2355, line: 1778, type: !144)
!3611 = distinct !DILexicalBlock(scope: !3612, file: !2355, line: 1777, column: 63)
!3612 = distinct !DILexicalBlock(scope: !3516, file: !2355, line: 1777, column: 7)
!3613 = !DILocalVariable(name: "rc", scope: !3614, file: !2355, line: 1783, type: !103)
!3614 = distinct !DILexicalBlock(scope: !3615, file: !2355, line: 1783, column: 6)
!3615 = distinct !DILexicalBlock(scope: !3616, file: !2355, line: 1782, column: 24)
!3616 = distinct !DILexicalBlock(scope: !3617, file: !2355, line: 1780, column: 27)
!3617 = distinct !DILexicalBlock(scope: !3611, file: !2355, line: 1780, column: 8)
!3618 = !DILocalVariable(name: "rc", scope: !3619, file: !2355, line: 1787, type: !103)
!3619 = distinct !DILexicalBlock(scope: !3620, file: !2355, line: 1787, column: 6)
!3620 = distinct !DILexicalBlock(scope: !3621, file: !2355, line: 1786, column: 41)
!3621 = distinct !DILexicalBlock(scope: !3617, file: !2355, line: 1785, column: 11)
!3622 = !DILocalVariable(name: "rc", scope: !3623, file: !2355, line: 1793, type: !103)
!3623 = distinct !DILexicalBlock(scope: !3624, file: !2355, line: 1793, column: 7)
!3624 = distinct !DILexicalBlock(scope: !3625, file: !2355, line: 1792, column: 28)
!3625 = distinct !DILexicalBlock(scope: !3626, file: !2355, line: 1791, column: 28)
!3626 = distinct !DILexicalBlock(scope: !3621, file: !2355, line: 1791, column: 9)
!3627 = !DILocalVariable(name: "rc", scope: !3628, file: !2355, line: 1798, type: !103)
!3628 = distinct !DILexicalBlock(scope: !3629, file: !2355, line: 1798, column: 6)
!3629 = distinct !DILexicalBlock(scope: !3630, file: !2355, line: 1797, column: 21)
!3630 = distinct !DILexicalBlock(scope: !3621, file: !2355, line: 1797, column: 9)
!3631 = !DILocalVariable(name: "rc", scope: !3632, file: !2355, line: 1803, type: !103)
!3632 = distinct !DILexicalBlock(scope: !3633, file: !2355, line: 1803, column: 7)
!3633 = distinct !DILexicalBlock(scope: !3629, file: !2355, line: 1802, column: 28)
!3634 = !DILocalVariable(name: "rc", scope: !3635, file: !2355, line: 1807, type: !103)
!3635 = distinct !DILexicalBlock(scope: !3636, file: !2355, line: 1807, column: 6)
!3636 = distinct !DILexicalBlock(scope: !3621, file: !2355, line: 1806, column: 41)
!3637 = !DILocalVariable(name: "rc", scope: !3638, file: !2355, line: 1813, type: !103)
!3638 = distinct !DILexicalBlock(scope: !3639, file: !2355, line: 1813, column: 5)
!3639 = distinct !DILexicalBlock(scope: !3611, file: !2355, line: 1812, column: 26)
!3640 = !DILocalVariable(name: "rc", scope: !3641, file: !2355, line: 1816, type: !103)
!3641 = distinct !DILexicalBlock(scope: !3611, file: !2355, line: 1816, column: 4)
!3642 = !DILocalVariable(name: "rc", scope: !3643, file: !2355, line: 1819, type: !103)
!3643 = distinct !DILexicalBlock(scope: !3644, file: !2355, line: 1819, column: 5)
!3644 = distinct !DILexicalBlock(scope: !3645, file: !2355, line: 1818, column: 44)
!3645 = distinct !DILexicalBlock(scope: !3646, file: !2355, line: 1818, column: 8)
!3646 = distinct !DILexicalBlock(scope: !3612, file: !2355, line: 1817, column: 10)
!3647 = !DILocalVariable(name: "rc", scope: !3648, file: !2355, line: 1823, type: !103)
!3648 = distinct !DILexicalBlock(scope: !3649, file: !2355, line: 1823, column: 5)
!3649 = distinct !DILexicalBlock(scope: !3650, file: !2355, line: 1822, column: 26)
!3650 = distinct !DILexicalBlock(scope: !3646, file: !2355, line: 1822, column: 8)
!3651 = !DILocalVariable(name: "rc", scope: !3652, file: !2355, line: 1828, type: !103)
!3652 = distinct !DILexicalBlock(scope: !3653, file: !2355, line: 1828, column: 5)
!3653 = distinct !DILexicalBlock(scope: !3646, file: !2355, line: 1827, column: 26)
!3654 = !DILocalVariable(name: "rc", scope: !3655, file: !2355, line: 1831, type: !103)
!3655 = distinct !DILexicalBlock(scope: !3646, file: !2355, line: 1831, column: 4)
!3656 = !DILocalVariable(name: "rc", scope: !3657, file: !2355, line: 1836, type: !103)
!3657 = distinct !DILexicalBlock(scope: !3658, file: !2355, line: 1836, column: 4)
!3658 = distinct !DILexicalBlock(scope: !3516, file: !2355, line: 1835, column: 21)
!3659 = !DILabel(scope: !3584, name: "prec_int_pad0", file: !2355, line: 1634)
!3660 = !DILocation(line: 0, scope: !3489)
!3661 = !DILocation(line: 1341, column: 2, scope: !3489)
!3662 = !DILocation(line: 1341, column: 7, scope: !3489)
!3663 = !DILocation(line: 1375, column: 2, scope: !3489)
!3664 = !DILocation(line: 1342, column: 9, scope: !3489)
!3665 = !DILocation(line: 1375, column: 9, scope: !3489)
!3666 = !DILocation(line: 1377, column: 4, scope: !3513)
!3667 = !DILocation(line: 0, scope: !3513)
!3668 = !DILocation(line: 1377, column: 4, scope: !3669)
!3669 = distinct !DILexicalBlock(scope: !3513, file: !2355, line: 1377, column: 4)
!3670 = distinct !{!3670, !3663, !3671}
!3671 = !DILocation(line: 1839, column: 2, scope: !3489)
!3672 = !DILocation(line: 1392, column: 3, scope: !3516)
!3673 = !DILocation(line: 1395, column: 5, scope: !3516)
!3674 = !DILocation(line: 0, scope: !3516)
!3675 = !DILocation(line: 1406, column: 3, scope: !3516)
!3676 = !DILocation(line: 1406, column: 15, scope: !3516)
!3677 = !DILocation(line: 1407, column: 3, scope: !3516)
!3678 = !DILocation(line: 1407, column: 8, scope: !3516)
!3679 = !DILocation(line: 1409, column: 8, scope: !3516)
!3680 = !DILocation(line: 1414, column: 13, scope: !3681)
!3681 = distinct !DILexicalBlock(scope: !3516, file: !2355, line: 1414, column: 7)
!3682 = !DILocation(line: 1414, column: 7, scope: !3516)
!3683 = !DILocation(line: 1415, column: 12, scope: !3684)
!3684 = distinct !DILexicalBlock(scope: !3681, file: !2355, line: 1414, column: 25)
!3685 = !DILocation(line: 1417, column: 14, scope: !3686)
!3686 = distinct !DILexicalBlock(scope: !3684, file: !2355, line: 1417, column: 8)
!3687 = !DILocation(line: 1417, column: 8, scope: !3684)
!3688 = !DILocation(line: 1418, column: 21, scope: !3689)
!3689 = distinct !DILexicalBlock(scope: !3686, file: !2355, line: 1417, column: 19)
!3690 = !DILocation(line: 1419, column: 13, scope: !3689)
!3691 = !DILocation(line: 1420, column: 4, scope: !3689)
!3692 = !DILocation(line: 1421, column: 20, scope: !3693)
!3693 = distinct !DILexicalBlock(scope: !3681, file: !2355, line: 1421, column: 14)
!3694 = !DILocation(line: 1421, column: 14, scope: !3681)
!3695 = !DILocation(line: 1431, column: 13, scope: !3575)
!3696 = !DILocation(line: 1431, column: 7, scope: !3516)
!3697 = !DILocation(line: 1432, column: 14, scope: !3574)
!3698 = !DILocation(line: 0, scope: !3574)
!3699 = !DILocation(line: 1434, column: 12, scope: !3700)
!3700 = distinct !DILexicalBlock(scope: !3574, file: !2355, line: 1434, column: 8)
!3701 = !DILocation(line: 1434, column: 8, scope: !3574)
!3702 = !DILocation(line: 1435, column: 24, scope: !3703)
!3703 = distinct !DILexicalBlock(scope: !3700, file: !2355, line: 1434, column: 17)
!3704 = !DILocation(line: 1436, column: 4, scope: !3703)
!3705 = !DILocation(line: 1439, column: 20, scope: !3706)
!3706 = distinct !DILexicalBlock(scope: !3575, file: !2355, line: 1439, column: 14)
!3707 = !DILocation(line: 1439, column: 14, scope: !3575)
!3708 = !DILocation(line: 1453, column: 17, scope: !3709)
!3709 = distinct !DILexicalBlock(scope: !3516, file: !2355, line: 1452, column: 7)
!3710 = !DILocation(line: 1448, column: 20, scope: !3516)
!3711 = !DILocation(line: 1449, column: 22, scope: !3516)
!3712 = !DILocation(line: 1454, column: 7, scope: !3709)
!3713 = !DILocation(line: 1469, column: 37, scope: !3516)
!3714 = !DILocation(line: 1471, column: 34, scope: !3516)
!3715 = !DILocation(line: 1478, column: 7, scope: !3516)
!3716 = !DILocation(line: 1479, column: 4, scope: !3717)
!3717 = distinct !DILexicalBlock(scope: !3718, file: !2355, line: 1478, column: 40)
!3718 = distinct !DILexicalBlock(scope: !3516, file: !2355, line: 1478, column: 7)
!3719 = !DILocation(line: 1484, column: 19, scope: !3720)
!3720 = distinct !DILexicalBlock(scope: !3717, file: !2355, line: 1479, column: 24)
!3721 = !DILocation(line: 1484, column: 17, scope: !3720)
!3722 = !DILocation(line: 1485, column: 5, scope: !3720)
!3723 = !DILocation(line: 1492, column: 20, scope: !3724)
!3724 = distinct !DILexicalBlock(scope: !3725, file: !2355, line: 1491, column: 12)
!3725 = distinct !DILexicalBlock(scope: !3720, file: !2355, line: 1487, column: 9)
!3726 = !DILocation(line: 1492, column: 18, scope: !3724)
!3727 = !DILocation(line: 1494, column: 5, scope: !3720)
!3728 = !DILocation(line: 1497, column: 23, scope: !3720)
!3729 = !DILocation(line: 1496, column: 17, scope: !3720)
!3730 = !DILocation(line: 1498, column: 5, scope: !3720)
!3731 = !DILocation(line: 1501, column: 23, scope: !3720)
!3732 = !DILocation(line: 1500, column: 17, scope: !3720)
!3733 = !DILocation(line: 1502, column: 5, scope: !3720)
!3734 = !DILocation(line: 1513, column: 23, scope: !3720)
!3735 = !DILocation(line: 1513, column: 6, scope: !3720)
!3736 = !DILocation(line: 1512, column: 17, scope: !3720)
!3737 = !DILocation(line: 1514, column: 5, scope: !3720)
!3738 = !DILocation(line: 0, scope: !3720)
!3739 = !DILocation(line: 1516, column: 8, scope: !3717)
!3740 = !DILocation(line: 1517, column: 19, scope: !3741)
!3741 = distinct !DILexicalBlock(scope: !3742, file: !2355, line: 1516, column: 33)
!3742 = distinct !DILexicalBlock(scope: !3717, file: !2355, line: 1516, column: 8)
!3743 = !DILocation(line: 1517, column: 17, scope: !3741)
!3744 = !DILocation(line: 1518, column: 4, scope: !3741)
!3745 = !DILocation(line: 1519, column: 19, scope: !3746)
!3746 = distinct !DILexicalBlock(scope: !3747, file: !2355, line: 1518, column: 39)
!3747 = distinct !DILexicalBlock(scope: !3742, file: !2355, line: 1518, column: 15)
!3748 = !DILocation(line: 1519, column: 17, scope: !3746)
!3749 = !DILocation(line: 1520, column: 4, scope: !3746)
!3750 = !DILocation(line: 1522, column: 4, scope: !3751)
!3751 = distinct !DILexicalBlock(scope: !3752, file: !2355, line: 1521, column: 47)
!3752 = distinct !DILexicalBlock(scope: !3718, file: !2355, line: 1521, column: 14)
!3753 = !DILocation(line: 1527, column: 19, scope: !3754)
!3754 = distinct !DILexicalBlock(scope: !3751, file: !2355, line: 1522, column: 24)
!3755 = !DILocation(line: 1527, column: 17, scope: !3754)
!3756 = !DILocation(line: 1528, column: 5, scope: !3754)
!3757 = !DILocation(line: 0, scope: !3758)
!3758 = distinct !DILexicalBlock(scope: !3754, file: !2355, line: 1530, column: 9)
!3759 = !DILocation(line: 1540, column: 23, scope: !3754)
!3760 = !DILocation(line: 1539, column: 17, scope: !3754)
!3761 = !DILocation(line: 1542, column: 5, scope: !3754)
!3762 = !DILocation(line: 1545, column: 23, scope: !3754)
!3763 = !DILocation(line: 1544, column: 17, scope: !3754)
!3764 = !DILocation(line: 1547, column: 5, scope: !3754)
!3765 = !DILocation(line: 1551, column: 23, scope: !3754)
!3766 = !DILocation(line: 1551, column: 6, scope: !3754)
!3767 = !DILocation(line: 1550, column: 17, scope: !3754)
!3768 = !DILocation(line: 1552, column: 5, scope: !3754)
!3769 = !DILocation(line: 0, scope: !3754)
!3770 = !DILocation(line: 1554, column: 8, scope: !3751)
!3771 = !DILocation(line: 1555, column: 19, scope: !3772)
!3772 = distinct !DILexicalBlock(scope: !3773, file: !2355, line: 1554, column: 33)
!3773 = distinct !DILexicalBlock(scope: !3751, file: !2355, line: 1554, column: 8)
!3774 = !DILocation(line: 1555, column: 17, scope: !3772)
!3775 = !DILocation(line: 1556, column: 4, scope: !3772)
!3776 = !DILocation(line: 1557, column: 19, scope: !3777)
!3777 = distinct !DILexicalBlock(scope: !3778, file: !2355, line: 1556, column: 39)
!3778 = distinct !DILexicalBlock(scope: !3773, file: !2355, line: 1556, column: 15)
!3779 = !DILocation(line: 1557, column: 17, scope: !3777)
!3780 = !DILocation(line: 1558, column: 4, scope: !3777)
!3781 = !DILocation(line: 0, scope: !3782)
!3782 = distinct !DILexicalBlock(scope: !3783, file: !2355, line: 1560, column: 8)
!3783 = distinct !DILexicalBlock(scope: !3784, file: !2355, line: 1559, column: 45)
!3784 = distinct !DILexicalBlock(scope: !3752, file: !2355, line: 1559, column: 14)
!3785 = !DILocation(line: 1566, column: 17, scope: !3786)
!3786 = distinct !DILexicalBlock(scope: !3787, file: !2355, line: 1565, column: 46)
!3787 = distinct !DILexicalBlock(scope: !3784, file: !2355, line: 1565, column: 14)
!3788 = !DILocation(line: 1566, column: 15, scope: !3786)
!3789 = !DILocation(line: 1567, column: 3, scope: !3786)
!3790 = !DILocation(line: 1574, column: 21, scope: !3581)
!3791 = !DILocation(line: 1575, column: 4, scope: !3579)
!3792 = !DILocation(line: 0, scope: !3579)
!3793 = !DILocation(line: 1575, column: 4, scope: !3794)
!3794 = distinct !DILexicalBlock(scope: !3579, file: !2355, line: 1575, column: 4)
!3795 = !DILocation(line: 1582, column: 17, scope: !3516)
!3796 = !DILocation(line: 1582, column: 3, scope: !3516)
!3797 = !DILocation(line: 1584, column: 4, scope: !3583)
!3798 = !DILocation(line: 0, scope: !3583)
!3799 = !DILocation(line: 1584, column: 4, scope: !3800)
!3800 = distinct !DILexicalBlock(scope: !3583, file: !2355, line: 1584, column: 4)
!3801 = !DILocation(line: 1587, column: 31, scope: !3586)
!3802 = !DILocation(line: 1591, column: 18, scope: !3803)
!3803 = distinct !DILexicalBlock(scope: !3586, file: !2355, line: 1591, column: 8)
!3804 = !DILocation(line: 1591, column: 8, scope: !3586)
!3805 = !DILocation(line: 1592, column: 11, scope: !3806)
!3806 = distinct !DILexicalBlock(scope: !3803, file: !2355, line: 1591, column: 24)
!3807 = !DILocation(line: 0, scope: !3586)
!3808 = !DILocation(line: 1593, column: 4, scope: !3806)
!3809 = !DILocation(line: 1594, column: 11, scope: !3810)
!3810 = distinct !DILexicalBlock(scope: !3803, file: !2355, line: 1593, column: 11)
!3811 = !DILocation(line: 1604, column: 51, scope: !3584)
!3812 = !DILocation(line: 1604, column: 13, scope: !3584)
!3813 = !DILocation(line: 1604, column: 11, scope: !3584)
!3814 = !DILocation(line: 1605, column: 8, scope: !3584)
!3815 = !DILocation(line: 1606, column: 4, scope: !3584)
!3816 = !DILocation(line: 1609, column: 14, scope: !3817)
!3817 = distinct !DILexicalBlock(scope: !3584, file: !2355, line: 1609, column: 8)
!3818 = !DILocation(line: 1609, column: 8, scope: !3584)
!3819 = !DILocation(line: 1610, column: 10, scope: !3820)
!3820 = distinct !DILexicalBlock(scope: !3817, file: !2355, line: 1609, column: 25)
!3821 = !DILocation(line: 1611, column: 4, scope: !3820)
!3822 = !DILocation(line: 1611, column: 21, scope: !3823)
!3823 = distinct !DILexicalBlock(scope: !3817, file: !2355, line: 1611, column: 15)
!3824 = !DILocation(line: 1611, column: 15, scope: !3817)
!3825 = !DILocation(line: 1612, column: 10, scope: !3826)
!3826 = distinct !DILexicalBlock(scope: !3823, file: !2355, line: 1611, column: 33)
!3827 = !DILocation(line: 1613, column: 4, scope: !3826)
!3828 = !DILocation(line: 1619, column: 18, scope: !3584)
!3829 = !DILocation(line: 1620, column: 13, scope: !3830)
!3830 = distinct !DILexicalBlock(scope: !3584, file: !2355, line: 1620, column: 8)
!3831 = !DILocation(line: 1620, column: 8, scope: !3584)
!3832 = !DILocation(line: 1621, column: 10, scope: !3833)
!3833 = distinct !DILexicalBlock(scope: !3830, file: !2355, line: 1620, column: 18)
!3834 = !DILocation(line: 1622, column: 36, scope: !3833)
!3835 = !DILocation(line: 1622, column: 17, scope: !3833)
!3836 = !DILocation(line: 1623, column: 4, scope: !3833)
!3837 = !DILocation(line: 1632, column: 29, scope: !3584)
!3838 = !DILocation(line: 1632, column: 10, scope: !3584)
!3839 = !DILocation(line: 1632, column: 4, scope: !3584)
!3840 = !DILocation(line: 0, scope: !3584)
!3841 = !DILocation(line: 1634, column: 3, scope: !3584)
!3842 = !DILocation(line: 1640, column: 18, scope: !3589)
!3843 = !DILocation(line: 1640, column: 8, scope: !3584)
!3844 = !DILocation(line: 1641, column: 22, scope: !3588)
!3845 = !DILocation(line: 0, scope: !3588)
!3846 = !DILocation(line: 1646, column: 21, scope: !3588)
!3847 = !DILocation(line: 1649, column: 13, scope: !3848)
!3848 = distinct !DILexicalBlock(scope: !3588, file: !2355, line: 1649, column: 9)
!3849 = !DILocation(line: 1649, column: 9, scope: !3588)
!3850 = !DILocation(line: 1650, column: 35, scope: !3851)
!3851 = distinct !DILexicalBlock(scope: !3848, file: !2355, line: 1649, column: 34)
!3852 = !DILocation(line: 1650, column: 23, scope: !3851)
!3853 = !DILocation(line: 1651, column: 5, scope: !3851)
!3854 = !DILocation(line: 1660, column: 15, scope: !3855)
!3855 = distinct !DILexicalBlock(scope: !3584, file: !2355, line: 1660, column: 8)
!3856 = !DILocation(line: 1660, column: 19, scope: !3855)
!3857 = !DILocation(line: 1660, column: 8, scope: !3584)
!3858 = !DILocation(line: 1661, column: 23, scope: !3859)
!3859 = distinct !DILexicalBlock(scope: !3855, file: !2355, line: 1660, column: 28)
!3860 = !DILocation(line: 1661, column: 11, scope: !3859)
!3861 = !DILocation(line: 1665, column: 22, scope: !3859)
!3862 = !DILocation(line: 1666, column: 21, scope: !3859)
!3863 = !DILocation(line: 1668, column: 5, scope: !3859)
!3864 = !DILocation(line: 1672, column: 8, scope: !3584)
!3865 = !DILocation(line: 1674, column: 4, scope: !3584)
!3866 = !DILocation(line: 1677, column: 30, scope: !3867)
!3867 = distinct !DILexicalBlock(scope: !3868, file: !2355, line: 1676, column: 49)
!3868 = distinct !DILexicalBlock(scope: !3584, file: !2355, line: 1676, column: 8)
!3869 = !DILocation(line: 1677, column: 5, scope: !3867)
!3870 = !DILocation(line: 1680, column: 4, scope: !3584)
!3871 = !DILocation(line: 1684, column: 31, scope: !3872)
!3872 = distinct !DILexicalBlock(scope: !3873, file: !2355, line: 1683, column: 48)
!3873 = distinct !DILexicalBlock(scope: !3584, file: !2355, line: 1683, column: 8)
!3874 = !DILocation(line: 1684, column: 11, scope: !3872)
!3875 = !DILocation(line: 1722, column: 20, scope: !3516)
!3876 = !DILocation(line: 1725, column: 7, scope: !3877)
!3877 = distinct !DILexicalBlock(scope: !3516, file: !2355, line: 1725, column: 7)
!3878 = !DILocation(line: 1687, column: 4, scope: !3584)
!3879 = !DILocation(line: 0, scope: !3803)
!3880 = !DILocation(line: 1597, column: 14, scope: !3586)
!3881 = !DILocation(line: 1597, column: 8, scope: !3586)
!3882 = !DILocation(line: 1699, column: 11, scope: !3883)
!3883 = distinct !DILexicalBlock(scope: !3516, file: !2355, line: 1699, column: 7)
!3884 = !DILocation(line: 1699, column: 7, scope: !3516)
!3885 = !DILocation(line: 1725, column: 12, scope: !3877)
!3886 = !DILocation(line: 1729, column: 13, scope: !3887)
!3887 = distinct !DILexicalBlock(scope: !3516, file: !2355, line: 1729, column: 7)
!3888 = !DILocation(line: 1747, column: 13, scope: !3596)
!3889 = !DILocation(line: 1747, column: 7, scope: !3516)
!3890 = !DILocation(line: 1722, column: 24, scope: !3516)
!3891 = !DILocation(line: 1725, column: 7, scope: !3516)
!3892 = !DILocation(line: 1729, column: 7, scope: !3516)
!3893 = !DILocation(line: 1736, column: 13, scope: !3894)
!3894 = distinct !DILexicalBlock(scope: !3516, file: !2355, line: 1736, column: 7)
!3895 = !DILocation(line: 1735, column: 19, scope: !3516)
!3896 = !DILocation(line: 1736, column: 7, scope: !3516)
!3897 = !DILocation(line: 1748, column: 10, scope: !3595)
!3898 = !DILocation(line: 1750, column: 15, scope: !3594)
!3899 = !DILocation(line: 1750, column: 8, scope: !3595)
!3900 = !DILocation(line: 0, scope: !3593)
!3901 = !DILocation(line: 1756, column: 15, scope: !3602)
!3902 = !DILocation(line: 1756, column: 9, scope: !3593)
!3903 = !DILocation(line: 1757, column: 10, scope: !3600)
!3904 = !DILocation(line: 1758, column: 7, scope: !3598)
!3905 = !DILocation(line: 0, scope: !3598)
!3906 = !DILocation(line: 1758, column: 7, scope: !3907)
!3907 = distinct !DILexicalBlock(scope: !3598, file: !2355, line: 1758, column: 7)
!3908 = !DILocation(line: 1759, column: 12, scope: !3599)
!3909 = !DILocation(line: 1760, column: 6, scope: !3599)
!3910 = !DILocation(line: 1764, column: 5, scope: !3593)
!3911 = !DILocation(line: 0, scope: !3595)
!3912 = !DILocation(line: 1764, column: 20, scope: !3593)
!3913 = !DILocation(line: 1764, column: 17, scope: !3593)
!3914 = !DILocation(line: 1765, column: 6, scope: !3604)
!3915 = !DILocation(line: 0, scope: !3604)
!3916 = !DILocation(line: 1765, column: 6, scope: !3917)
!3917 = distinct !DILexicalBlock(scope: !3604, file: !2355, line: 1765, column: 6)
!3918 = distinct !{!3918, !3910, !3919}
!3919 = !DILocation(line: 1766, column: 5, scope: !3593)
!3920 = !DILocation(line: 1773, column: 7, scope: !3609)
!3921 = !DILocation(line: 1773, column: 12, scope: !3609)
!3922 = !DILocation(line: 1773, column: 7, scope: !3516)
!3923 = !DILocation(line: 1774, column: 4, scope: !3607)
!3924 = !DILocation(line: 0, scope: !3607)
!3925 = !DILocation(line: 1774, column: 4, scope: !3926)
!3926 = distinct !DILexicalBlock(scope: !3607, file: !2355, line: 1774, column: 4)
!3927 = !DILocation(line: 1777, column: 55, scope: !3612)
!3928 = !DILocation(line: 1777, column: 7, scope: !3516)
!3929 = !DILocation(line: 0, scope: !3611)
!3930 = !DILocation(line: 1780, column: 14, scope: !3617)
!3931 = !DILocation(line: 1780, column: 8, scope: !3611)
!3932 = !DILocation(line: 1782, column: 12, scope: !3616)
!3933 = !DILocation(line: 1782, column: 16, scope: !3616)
!3934 = !DILocation(line: 1782, column: 5, scope: !3616)
!3935 = !DILocation(line: 1783, column: 6, scope: !3614)
!3936 = !DILocation(line: 0, scope: !3614)
!3937 = !DILocation(line: 1783, column: 6, scope: !3938)
!3938 = distinct !DILexicalBlock(scope: !3614, file: !2355, line: 1783, column: 6)
!3939 = distinct !{!3939, !3934, !3940}
!3940 = !DILocation(line: 1784, column: 5, scope: !3616)
!3941 = !DILocation(line: 1786, column: 35, scope: !3621)
!3942 = !DILocation(line: 1786, column: 20, scope: !3621)
!3943 = !DILocation(line: 1786, column: 12, scope: !3621)
!3944 = !DILocation(line: 1786, column: 5, scope: !3621)
!3945 = !DILocation(line: 1787, column: 6, scope: !3619)
!3946 = !DILocation(line: 0, scope: !3619)
!3947 = !DILocation(line: 1787, column: 6, scope: !3948)
!3948 = distinct !DILexicalBlock(scope: !3619, file: !2355, line: 1787, column: 6)
!3949 = distinct !{!3949, !3944, !3950}
!3950 = !DILocation(line: 1788, column: 5, scope: !3621)
!3951 = !DILocation(line: 1790, column: 21, scope: !3621)
!3952 = !DILocation(line: 1791, column: 16, scope: !3626)
!3953 = !DILocation(line: 1791, column: 9, scope: !3621)
!3954 = !DILocation(line: 1792, column: 6, scope: !3625)
!3955 = !DILocation(line: 0, scope: !3621)
!3956 = !DILocation(line: 1792, column: 23, scope: !3625)
!3957 = !DILocation(line: 1792, column: 20, scope: !3625)
!3958 = !DILocation(line: 1793, column: 7, scope: !3623)
!3959 = !DILocation(line: 0, scope: !3623)
!3960 = !DILocation(line: 1793, column: 7, scope: !3961)
!3961 = distinct !DILexicalBlock(scope: !3623, file: !2355, line: 1793, column: 7)
!3962 = distinct !{!3962, !3954, !3963}
!3963 = !DILocation(line: 1794, column: 6, scope: !3625)
!3964 = !DILocation(line: 1797, column: 9, scope: !3630)
!3965 = !DILocation(line: 1797, column: 13, scope: !3630)
!3966 = !DILocation(line: 1797, column: 9, scope: !3621)
!3967 = !DILocation(line: 1806, column: 5, scope: !3621)
!3968 = !DILocation(line: 1798, column: 6, scope: !3628)
!3969 = !DILocation(line: 0, scope: !3628)
!3970 = !DILocation(line: 1798, column: 6, scope: !3971)
!3971 = distinct !DILexicalBlock(scope: !3628, file: !2355, line: 1798, column: 6)
!3972 = !DILocation(line: 1802, column: 23, scope: !3629)
!3973 = !DILocation(line: 1802, column: 6, scope: !3629)
!3974 = !DILocation(line: 1802, column: 20, scope: !3629)
!3975 = !DILocation(line: 1803, column: 7, scope: !3632)
!3976 = !DILocation(line: 0, scope: !3632)
!3977 = !DILocation(line: 1803, column: 7, scope: !3978)
!3978 = distinct !DILexicalBlock(scope: !3632, file: !2355, line: 1803, column: 7)
!3979 = distinct !{!3979, !3973, !3980}
!3980 = !DILocation(line: 1804, column: 6, scope: !3629)
!3981 = !DILocation(line: 1806, column: 35, scope: !3621)
!3982 = !DILocation(line: 1806, column: 20, scope: !3621)
!3983 = !DILocation(line: 1806, column: 12, scope: !3621)
!3984 = !DILocation(line: 1807, column: 6, scope: !3635)
!3985 = !DILocation(line: 0, scope: !3635)
!3986 = !DILocation(line: 1807, column: 6, scope: !3987)
!3987 = distinct !DILexicalBlock(scope: !3635, file: !2355, line: 1807, column: 6)
!3988 = distinct !{!3988, !3967, !3989}
!3989 = !DILocation(line: 1808, column: 5, scope: !3621)
!3990 = !DILocation(line: 1811, column: 20, scope: !3611)
!3991 = !DILocation(line: 1812, column: 4, scope: !3611)
!3992 = !DILocation(line: 1812, column: 21, scope: !3611)
!3993 = !DILocation(line: 1812, column: 18, scope: !3611)
!3994 = !DILocation(line: 1813, column: 5, scope: !3638)
!3995 = !DILocation(line: 0, scope: !3638)
!3996 = !DILocation(line: 1813, column: 5, scope: !3997)
!3997 = distinct !DILexicalBlock(scope: !3638, file: !2355, line: 1813, column: 5)
!3998 = distinct !{!3998, !3991, !3999}
!3999 = !DILocation(line: 1814, column: 4, scope: !3611)
!4000 = !DILocation(line: 1816, column: 4, scope: !3641)
!4001 = !DILocation(line: 0, scope: !3641)
!4002 = !DILocation(line: 1816, column: 4, scope: !4003)
!4003 = distinct !DILexicalBlock(scope: !3641, file: !2355, line: 1816, column: 4)
!4004 = !DILocation(line: 1818, column: 8, scope: !3645)
!4005 = !DILocation(line: 1818, column: 27, scope: !3645)
!4006 = !DILocation(line: 1818, column: 25, scope: !3645)
!4007 = !DILocation(line: 1818, column: 8, scope: !3646)
!4008 = !DILocation(line: 1819, column: 5, scope: !3643)
!4009 = !DILocation(line: 0, scope: !3643)
!4010 = !DILocation(line: 1819, column: 5, scope: !4011)
!4011 = distinct !DILexicalBlock(scope: !3643, file: !2355, line: 1819, column: 5)
!4012 = !DILocation(line: 1822, column: 14, scope: !3650)
!4013 = !DILocation(line: 1822, column: 8, scope: !3646)
!4014 = !DILocation(line: 1823, column: 5, scope: !3648)
!4015 = !DILocation(line: 0, scope: !3648)
!4016 = !DILocation(line: 1823, column: 5, scope: !4017)
!4017 = distinct !DILexicalBlock(scope: !3648, file: !2355, line: 1823, column: 5)
!4018 = !DILocation(line: 1826, column: 20, scope: !3646)
!4019 = !DILocation(line: 1827, column: 4, scope: !3646)
!4020 = !DILocation(line: 0, scope: !3646)
!4021 = !DILocation(line: 1827, column: 21, scope: !3646)
!4022 = !DILocation(line: 1827, column: 18, scope: !3646)
!4023 = !DILocation(line: 1828, column: 5, scope: !3652)
!4024 = !DILocation(line: 0, scope: !3652)
!4025 = !DILocation(line: 1828, column: 5, scope: !4026)
!4026 = distinct !DILexicalBlock(scope: !3652, file: !2355, line: 1828, column: 5)
!4027 = distinct !{!4027, !4019, !4028}
!4028 = !DILocation(line: 1829, column: 4, scope: !3646)
!4029 = !DILocation(line: 1831, column: 4, scope: !3655)
!4030 = !DILocation(line: 0, scope: !3655)
!4031 = !DILocation(line: 1831, column: 4, scope: !4032)
!4032 = distinct !DILexicalBlock(scope: !3655, file: !2355, line: 1831, column: 4)
!4033 = !DILocation(line: 1835, column: 16, scope: !3516)
!4034 = !DILocation(line: 1835, column: 3, scope: !3516)
!4035 = !DILocation(line: 1836, column: 4, scope: !3657)
!4036 = !DILocation(line: 0, scope: !3657)
!4037 = !DILocation(line: 1836, column: 4, scope: !4038)
!4038 = distinct !DILexicalBlock(scope: !3657, file: !2355, line: 1836, column: 4)
!4039 = !DILocation(line: 1837, column: 4, scope: !3658)
!4040 = distinct !{!4040, !4034, !4041}
!4041 = !DILocation(line: 1838, column: 3, scope: !3516)
!4042 = !DILocation(line: 1844, column: 1, scope: !3489)
!4043 = distinct !DISubprogram(name: "extract_conversion", scope: !2355, file: !2355, line: 642, type: !4044, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !4046)
!4044 = !DISubroutineType(types: !4045)
!4045 = !{!144, !3563, !144}
!4046 = !{!4047, !4048}
!4047 = !DILocalVariable(name: "conv", arg: 1, scope: !4043, file: !2355, line: 642, type: !3563)
!4048 = !DILocalVariable(name: "sp", arg: 2, scope: !4043, file: !2355, line: 643, type: !144)
!4049 = !DILocation(line: 0, scope: !4043)
!4050 = !DILocation(line: 645, column: 10, scope: !4043)
!4051 = !DILocation(line: 653, column: 2, scope: !4043)
!4052 = !DILocation(line: 654, column: 6, scope: !4053)
!4053 = distinct !DILexicalBlock(scope: !4043, file: !2355, line: 654, column: 6)
!4054 = !DILocation(line: 654, column: 10, scope: !4053)
!4055 = !DILocation(line: 654, column: 6, scope: !4043)
!4056 = !DILocation(line: 655, column: 24, scope: !4057)
!4057 = distinct !DILexicalBlock(scope: !4053, file: !2355, line: 654, column: 18)
!4058 = !DILocation(line: 655, column: 19, scope: !4057)
!4059 = !DILocation(line: 656, column: 3, scope: !4057)
!4060 = !DILocation(line: 659, column: 7, scope: !4043)
!4061 = !DILocation(line: 660, column: 7, scope: !4043)
!4062 = !DILocation(line: 661, column: 7, scope: !4043)
!4063 = !DILocation(line: 662, column: 7, scope: !4043)
!4064 = !DILocation(line: 663, column: 7, scope: !4043)
!4065 = !DILocation(line: 665, column: 2, scope: !4043)
!4066 = !DILocation(line: 666, column: 1, scope: !4043)
!4067 = distinct !DISubprogram(name: "outs", scope: !2355, file: !2355, line: 1319, type: !4068, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !4070)
!4068 = !DISubroutineType(types: !4069)
!4069 = !{!103, !3221, !102, !144, !144}
!4070 = !{!4071, !4072, !4073, !4074, !4075, !4076}
!4071 = !DILocalVariable(name: "out", arg: 1, scope: !4067, file: !2355, line: 1319, type: !3221)
!4072 = !DILocalVariable(name: "ctx", arg: 2, scope: !4067, file: !2355, line: 1320, type: !102)
!4073 = !DILocalVariable(name: "sp", arg: 3, scope: !4067, file: !2355, line: 1321, type: !144)
!4074 = !DILocalVariable(name: "ep", arg: 4, scope: !4067, file: !2355, line: 1322, type: !144)
!4075 = !DILocalVariable(name: "count", scope: !4067, file: !2355, line: 1324, type: !200)
!4076 = !DILocalVariable(name: "rc", scope: !4077, file: !2355, line: 1327, type: !103)
!4077 = distinct !DILexicalBlock(scope: !4067, file: !2355, line: 1326, column: 45)
!4078 = !DILocation(line: 0, scope: !4067)
!4079 = !DILocation(line: 1326, column: 2, scope: !4067)
!4080 = !DILocation(line: 1324, column: 9, scope: !4067)
!4081 = !DILocation(line: 1326, column: 13, scope: !4067)
!4082 = !DILocation(line: 1326, column: 19, scope: !4067)
!4083 = !DILocation(line: 1327, column: 21, scope: !4077)
!4084 = !DILocation(line: 1326, column: 36, scope: !4067)
!4085 = !DILocation(line: 1326, column: 39, scope: !4067)
!4086 = !DILocation(line: 1327, column: 24, scope: !4077)
!4087 = !DILocation(line: 1327, column: 16, scope: !4077)
!4088 = !DILocation(line: 1327, column: 12, scope: !4077)
!4089 = !DILocation(line: 0, scope: !4077)
!4090 = !DILocation(line: 1329, column: 10, scope: !4091)
!4091 = distinct !DILexicalBlock(scope: !4077, file: !2355, line: 1329, column: 7)
!4092 = !DILocation(line: 1329, column: 7, scope: !4077)
!4093 = distinct !{!4093, !4079, !4094}
!4094 = !DILocation(line: 1333, column: 2, scope: !4067)
!4095 = !DILocation(line: 1336, column: 1, scope: !4067)
!4096 = distinct !DISubprogram(name: "encode_uint", scope: !2355, file: !2355, line: 788, type: !4097, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !4099)
!4097 = !DISubroutineType(types: !4098)
!4098 = !{!977, !2377, !3563, !977, !144}
!4099 = !{!4100, !4101, !4102, !4103, !4104, !4105, !4107, !4108}
!4100 = !DILocalVariable(name: "value", arg: 1, scope: !4096, file: !2355, line: 788, type: !2377)
!4101 = !DILocalVariable(name: "conv", arg: 2, scope: !4096, file: !2355, line: 789, type: !3563)
!4102 = !DILocalVariable(name: "bps", arg: 3, scope: !4096, file: !2355, line: 790, type: !977)
!4103 = !DILocalVariable(name: "bpe", arg: 4, scope: !4096, file: !2355, line: 791, type: !144)
!4104 = !DILocalVariable(name: "upcase", scope: !4096, file: !2355, line: 793, type: !157)
!4105 = !DILocalVariable(name: "radix", scope: !4096, file: !2355, line: 794, type: !4106)
!4106 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!4107 = !DILocalVariable(name: "bp", scope: !4096, file: !2355, line: 795, type: !977)
!4108 = !DILocalVariable(name: "lsv", scope: !4109, file: !2355, line: 798, type: !32)
!4109 = distinct !DILexicalBlock(scope: !4096, file: !2355, line: 797, column: 5)
!4110 = !DILocation(line: 0, scope: !4096)
!4111 = !DILocation(line: 793, column: 35, scope: !4096)
!4112 = !DILocation(line: 793, column: 24, scope: !4096)
!4113 = !DILocation(line: 793, column: 16, scope: !4096)
!4114 = !DILocation(line: 794, column: 29, scope: !4096)
!4115 = !DILocation(line: 795, column: 24, scope: !4096)
!4116 = !DILocation(line: 795, column: 17, scope: !4096)
!4117 = !DILocation(line: 797, column: 2, scope: !4096)
!4118 = !DILocation(line: 802, column: 9, scope: !4109)
!4119 = !DILocation(line: 798, column: 22, scope: !4109)
!4120 = !DILocation(line: 0, scope: !4109)
!4121 = !DILocation(line: 800, column: 16, scope: !4109)
!4122 = !DILocation(line: 800, column: 11, scope: !4109)
!4123 = !DILocation(line: 800, column: 4, scope: !4109)
!4124 = !DILocation(line: 800, column: 9, scope: !4109)
!4125 = !DILocation(line: 803, column: 18, scope: !4096)
!4126 = !DILocation(line: 803, column: 24, scope: !4096)
!4127 = !DILocation(line: 803, column: 2, scope: !4109)
!4128 = distinct !{!4128, !4117, !4129}
!4129 = !DILocation(line: 803, column: 37, scope: !4096)
!4130 = !DILocation(line: 808, column: 12, scope: !4131)
!4131 = distinct !DILexicalBlock(scope: !4096, file: !2355, line: 808, column: 6)
!4132 = !DILocation(line: 808, column: 6, scope: !4096)
!4133 = !DILocation(line: 809, column: 7, scope: !4134)
!4134 = distinct !DILexicalBlock(scope: !4131, file: !2355, line: 808, column: 23)
!4135 = !DILocation(line: 813, column: 3, scope: !4136)
!4136 = distinct !DILexicalBlock(scope: !4137, file: !2355, line: 811, column: 27)
!4137 = distinct !DILexicalBlock(scope: !4138, file: !2355, line: 811, column: 14)
!4138 = distinct !DILexicalBlock(scope: !4134, file: !2355, line: 809, column: 7)
!4139 = !DILocation(line: 0, scope: !4138)
!4140 = !DILocation(line: 818, column: 2, scope: !4096)
!4141 = distinct !DISubprogram(name: "store_count", scope: !2355, file: !2355, line: 1280, type: !4142, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !4146)
!4142 = !DISubroutineType(types: !4143)
!4143 = !{null, !4144, !102, !103}
!4144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4145, size: 32)
!4145 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3530)
!4146 = !{!4147, !4148, !4149}
!4147 = !DILocalVariable(name: "conv", arg: 1, scope: !4141, file: !2355, line: 1280, type: !4144)
!4148 = !DILocalVariable(name: "dp", arg: 2, scope: !4141, file: !2355, line: 1281, type: !102)
!4149 = !DILocalVariable(name: "count", arg: 3, scope: !4141, file: !2355, line: 1282, type: !103)
!4150 = !DILocation(line: 0, scope: !4141)
!4151 = !DILocation(line: 1284, column: 38, scope: !4141)
!4152 = !DILocation(line: 1284, column: 2, scope: !4141)
!4153 = !DILocation(line: 1286, column: 4, scope: !4154)
!4154 = distinct !DILexicalBlock(scope: !4141, file: !2355, line: 1284, column: 50)
!4155 = !DILocation(line: 1286, column: 14, scope: !4154)
!4156 = !DILocation(line: 1287, column: 3, scope: !4154)
!4157 = !DILocation(line: 1289, column: 24, scope: !4154)
!4158 = !DILocation(line: 1289, column: 22, scope: !4154)
!4159 = !DILocation(line: 1290, column: 3, scope: !4154)
!4160 = !DILocation(line: 1292, column: 18, scope: !4154)
!4161 = !DILocation(line: 1292, column: 4, scope: !4154)
!4162 = !DILocation(line: 1292, column: 16, scope: !4154)
!4163 = !DILocation(line: 1293, column: 3, scope: !4154)
!4164 = !DILocation(line: 1295, column: 4, scope: !4154)
!4165 = !DILocation(line: 1295, column: 15, scope: !4154)
!4166 = !DILocation(line: 1296, column: 3, scope: !4154)
!4167 = !DILocation(line: 1298, column: 22, scope: !4154)
!4168 = !DILocation(line: 1298, column: 4, scope: !4154)
!4169 = !DILocation(line: 1298, column: 20, scope: !4154)
!4170 = !DILocation(line: 1299, column: 3, scope: !4154)
!4171 = !DILocation(line: 1301, column: 21, scope: !4154)
!4172 = !DILocation(line: 1301, column: 4, scope: !4154)
!4173 = !DILocation(line: 1301, column: 19, scope: !4154)
!4174 = !DILocation(line: 1302, column: 3, scope: !4154)
!4175 = !DILocation(line: 1304, column: 4, scope: !4154)
!4176 = !DILocation(line: 1304, column: 17, scope: !4154)
!4177 = !DILocation(line: 1305, column: 3, scope: !4154)
!4178 = !DILocation(line: 1307, column: 4, scope: !4154)
!4179 = !DILocation(line: 1307, column: 20, scope: !4154)
!4180 = !DILocation(line: 1308, column: 3, scope: !4154)
!4181 = !DILocation(line: 1316, column: 1, scope: !4141)
!4182 = distinct !DISubprogram(name: "encode_float", scope: !2355, file: !2355, line: 866, type: !4183, scopeLine: 872, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !4186)
!4183 = !DISubroutineType(types: !4184)
!4184 = !{!977, !2348, !3563, !103, !977, !977, !4185}
!4185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 32)
!4186 = !{!4187, !4188, !4189, !4190, !4191, !4192, !4193, !4198, !4199, !4200, !4201, !4202, !4203, !4204, !4205, !4206, !4207}
!4187 = !DILocalVariable(name: "value", arg: 1, scope: !4182, file: !2355, line: 866, type: !2348)
!4188 = !DILocalVariable(name: "conv", arg: 2, scope: !4182, file: !2355, line: 867, type: !3563)
!4189 = !DILocalVariable(name: "precision", arg: 3, scope: !4182, file: !2355, line: 868, type: !103)
!4190 = !DILocalVariable(name: "sign", arg: 4, scope: !4182, file: !2355, line: 869, type: !977)
!4191 = !DILocalVariable(name: "bps", arg: 5, scope: !4182, file: !2355, line: 870, type: !977)
!4192 = !DILocalVariable(name: "bpe", arg: 6, scope: !4182, file: !2355, line: 871, type: !4185)
!4193 = !DILocalVariable(name: "u", scope: !4182, file: !2355, line: 876, type: !4194)
!4194 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4182, file: !2355, line: 873, size: 64, elements: !4195)
!4195 = !{!4196, !4197}
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "u64", scope: !4194, file: !2355, line: 874, baseType: !1302, size: 64)
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4194, file: !2355, line: 875, baseType: !2348, size: 64)
!4198 = !DILocalVariable(name: "prune_zero", scope: !4182, file: !2355, line: 879, type: !157)
!4199 = !DILocalVariable(name: "buf", scope: !4182, file: !2355, line: 880, type: !977)
!4200 = !DILocalVariable(name: "c", scope: !4182, file: !2355, line: 898, type: !146)
!4201 = !DILocalVariable(name: "expo", scope: !4182, file: !2355, line: 899, type: !103)
!4202 = !DILocalVariable(name: "fract", scope: !4182, file: !2355, line: 900, type: !1302)
!4203 = !DILocalVariable(name: "is_subnormal", scope: !4182, file: !2355, line: 901, type: !157)
!4204 = !DILocalVariable(name: "decexp", scope: !4182, file: !2355, line: 1083, type: !103)
!4205 = !DILocalVariable(name: "decimals", scope: !4182, file: !2355, line: 1145, type: !103)
!4206 = !DILocalVariable(name: "digit_count", scope: !4182, file: !2355, line: 1155, type: !103)
!4207 = !DILocalVariable(name: "round", scope: !4182, file: !2355, line: 1162, type: !1302)
!4208 = !DILocation(line: 0, scope: !4182)
!4209 = !DILocation(line: 876, column: 8, scope: !4182)
!4210 = !DILocation(line: 885, column: 26, scope: !4211)
!4211 = distinct !DILexicalBlock(scope: !4182, file: !2355, line: 885, column: 6)
!4212 = !DILocation(line: 885, column: 6, scope: !4182)
!4213 = !DILocation(line: 887, column: 19, scope: !4214)
!4214 = distinct !DILexicalBlock(scope: !4211, file: !2355, line: 887, column: 13)
!4215 = !DILocation(line: 887, column: 13, scope: !4211)
!4216 = !DILocation(line: 889, column: 19, scope: !4217)
!4217 = distinct !DILexicalBlock(scope: !4214, file: !2355, line: 889, column: 13)
!4218 = !DILocation(line: 889, column: 13, scope: !4214)
!4219 = !DILocation(line: 0, scope: !4211)
!4220 = !DILocation(line: 898, column: 17, scope: !4182)
!4221 = !DILocation(line: 899, column: 20, scope: !4182)
!4222 = !DILocation(line: 899, column: 13, scope: !4182)
!4223 = !DILocation(line: 900, column: 2, scope: !4182)
!4224 = !DILocation(line: 900, column: 25, scope: !4182)
!4225 = !DILocation(line: 901, column: 28, scope: !4182)
!4226 = !DILocation(line: 901, column: 34, scope: !4182)
!4227 = !DILocation(line: 906, column: 11, scope: !4228)
!4228 = distinct !DILexicalBlock(scope: !4182, file: !2355, line: 906, column: 6)
!4229 = !DILocation(line: 906, column: 6, scope: !4182)
!4230 = !DILocation(line: 907, column: 13, scope: !4231)
!4231 = distinct !DILexicalBlock(scope: !4232, file: !2355, line: 907, column: 7)
!4232 = distinct !DILexicalBlock(scope: !4228, file: !2355, line: 906, column: 39)
!4233 = !DILocation(line: 0, scope: !4231)
!4234 = !DILocation(line: 907, column: 7, scope: !4232)
!4235 = !DILocation(line: 930, column: 9, scope: !4232)
!4236 = !DILocation(line: 930, column: 19, scope: !4232)
!4237 = !DILocation(line: 932, column: 8, scope: !4232)
!4238 = !DILocation(line: 933, column: 3, scope: !4232)
!4239 = !DILocation(line: 937, column: 8, scope: !4240)
!4240 = distinct !DILexicalBlock(scope: !4182, file: !2355, line: 937, column: 6)
!4241 = !DILocation(line: 937, column: 6, scope: !4182)
!4242 = !DILocation(line: 1054, column: 8, scope: !4182)
!4243 = !DILocation(line: 1058, column: 7, scope: !4244)
!4244 = distinct !DILexicalBlock(scope: !4182, file: !2355, line: 1058, column: 6)
!4245 = !DILocation(line: 1058, column: 12, scope: !4244)
!4246 = !DILocation(line: 1058, column: 21, scope: !4244)
!4247 = !DILocation(line: 1058, column: 6, scope: !4182)
!4248 = !DILocation(line: 1059, column: 7, scope: !4249)
!4249 = distinct !DILexicalBlock(scope: !4244, file: !2355, line: 1058, column: 27)
!4250 = !DILocation(line: 1063, column: 19, scope: !4251)
!4251 = distinct !DILexicalBlock(scope: !4252, file: !2355, line: 1059, column: 21)
!4252 = distinct !DILexicalBlock(scope: !4249, file: !2355, line: 1059, column: 7)
!4253 = !DILocation(line: 1063, column: 36, scope: !4251)
!4254 = !DILocation(line: 1064, column: 9, scope: !4255)
!4255 = distinct !DILexicalBlock(scope: !4251, file: !2355, line: 1063, column: 42)
!4256 = !DILocation(line: 1063, column: 4, scope: !4251)
!4257 = distinct !{!4257, !4256, !4258}
!4258 = !DILocation(line: 1065, column: 4, scope: !4251)
!4259 = !DILocation(line: 1072, column: 9, scope: !4249)
!4260 = !DILocation(line: 899, column: 6, scope: !4182)
!4261 = !DILocation(line: 1071, column: 8, scope: !4249)
!4262 = !DILocation(line: 1085, column: 14, scope: !4182)
!4263 = !DILocation(line: 1085, column: 2, scope: !4182)
!4264 = !DILocation(line: 1090, column: 3, scope: !4265)
!4265 = distinct !DILexicalBlock(scope: !4182, file: !2355, line: 1085, column: 20)
!4266 = !DILocation(line: 1101, column: 14, scope: !4182)
!4267 = !DILocation(line: 1101, column: 2, scope: !4182)
!4268 = !DILocation(line: 1091, column: 10, scope: !4269)
!4269 = distinct !DILexicalBlock(scope: !4265, file: !2355, line: 1090, column: 6)
!4270 = !DILocation(line: 1092, column: 8, scope: !4269)
!4271 = !DILocation(line: 1093, column: 29, scope: !4265)
!4272 = !DILocation(line: 1093, column: 12, scope: !4265)
!4273 = !DILocation(line: 1093, column: 36, scope: !4265)
!4274 = !DILocation(line: 1093, column: 3, scope: !4269)
!4275 = distinct !{!4275, !4264, !4276}
!4276 = !DILocation(line: 1093, column: 56, scope: !4265)
!4277 = !DILocation(line: 1096, column: 9, scope: !4265)
!4278 = !DILocation(line: 1097, column: 7, scope: !4265)
!4279 = !DILocation(line: 1098, column: 9, scope: !4265)
!4280 = distinct !{!4280, !4263, !4281}
!4281 = !DILocation(line: 1099, column: 2, scope: !4182)
!4282 = !DILocation(line: 1110, column: 9, scope: !4283)
!4283 = distinct !DILexicalBlock(scope: !4182, file: !2355, line: 1101, column: 19)
!4284 = !DILocation(line: 1114, column: 10, scope: !4285)
!4285 = distinct !DILexicalBlock(scope: !4283, file: !2355, line: 1113, column: 6)
!4286 = distinct !{!4286, !4267, !4287}
!4287 = !DILocation(line: 1117, column: 2, scope: !4182)
!4288 = !DILocation(line: 1107, column: 9, scope: !4283)
!4289 = !DILocation(line: 1108, column: 3, scope: !4283)
!4290 = !DILocation(line: 1109, column: 7, scope: !4283)
!4291 = !DILocation(line: 1113, column: 3, scope: !4283)
!4292 = !DILocation(line: 0, scope: !4283)
!4293 = !DILocation(line: 1115, column: 8, scope: !4285)
!4294 = !DILocation(line: 1116, column: 12, scope: !4283)
!4295 = !DILocation(line: 1116, column: 3, scope: !4285)
!4296 = !DILocation(line: 1124, column: 8, scope: !4182)
!4297 = !DILocation(line: 1124, column: 15, scope: !4182)
!4298 = !DILocation(line: 1126, column: 17, scope: !4299)
!4299 = distinct !DILexicalBlock(scope: !4182, file: !2355, line: 1126, column: 6)
!4300 = !DILocation(line: 1131, column: 14, scope: !4301)
!4301 = distinct !DILexicalBlock(scope: !4302, file: !2355, line: 1131, column: 7)
!4302 = distinct !DILexicalBlock(scope: !4299, file: !2355, line: 1126, column: 32)
!4303 = !DILocation(line: 1131, column: 25, scope: !4301)
!4304 = !DILocation(line: 1132, column: 6, scope: !4305)
!4305 = distinct !DILexicalBlock(scope: !4301, file: !2355, line: 1131, column: 48)
!4306 = !DILocation(line: 1133, column: 18, scope: !4307)
!4307 = distinct !DILexicalBlock(scope: !4305, file: !2355, line: 1133, column: 8)
!4308 = !DILocation(line: 1133, column: 8, scope: !4305)
!4309 = !DILocation(line: 1138, column: 14, scope: !4310)
!4310 = distinct !DILexicalBlock(scope: !4301, file: !2355, line: 1136, column: 10)
!4311 = !DILocation(line: 0, scope: !4301)
!4312 = !DILocation(line: 1140, column: 14, scope: !4313)
!4313 = distinct !DILexicalBlock(scope: !4302, file: !2355, line: 1140, column: 7)
!4314 = !DILocation(line: 1140, column: 24, scope: !4313)
!4315 = !DILocation(line: 1146, column: 8, scope: !4316)
!4316 = distinct !DILexicalBlock(scope: !4182, file: !2355, line: 1146, column: 6)
!4317 = !DILocation(line: 1146, column: 6, scope: !4182)
!4318 = !DILocation(line: 1155, column: 2, scope: !4182)
!4319 = !DILocation(line: 1155, column: 6, scope: !4182)
!4320 = !DILocation(line: 1157, column: 6, scope: !4182)
!4321 = !DILocation(line: 1162, column: 2, scope: !4182)
!4322 = !DILocation(line: 1162, column: 11, scope: !4182)
!4323 = !DILocation(line: 1163, column: 2, scope: !4182)
!4324 = !DILocation(line: 1163, column: 17, scope: !4182)
!4325 = !DILocation(line: 1164, column: 3, scope: !4326)
!4326 = distinct !DILexicalBlock(scope: !4182, file: !2355, line: 1163, column: 21)
!4327 = distinct !{!4327, !4323, !4328}
!4328 = !DILocation(line: 1165, column: 2, scope: !4182)
!4329 = !DILocation(line: 1166, column: 11, scope: !4182)
!4330 = !DILocation(line: 1166, column: 8, scope: !4182)
!4331 = !DILocation(line: 1168, column: 12, scope: !4332)
!4332 = distinct !DILexicalBlock(scope: !4182, file: !2355, line: 1168, column: 6)
!4333 = !DILocation(line: 1168, column: 6, scope: !4182)
!4334 = !DILocation(line: 1169, column: 3, scope: !4335)
!4335 = distinct !DILexicalBlock(scope: !4332, file: !2355, line: 1168, column: 26)
!4336 = !DILocation(line: 1170, column: 9, scope: !4335)
!4337 = !DILocation(line: 1171, column: 2, scope: !4335)
!4338 = !DILocation(line: 1173, column: 6, scope: !4182)
!4339 = !DILocation(line: 1174, column: 14, scope: !4340)
!4340 = distinct !DILexicalBlock(scope: !4341, file: !2355, line: 1174, column: 7)
!4341 = distinct !DILexicalBlock(scope: !4342, file: !2355, line: 1173, column: 16)
!4342 = distinct !DILexicalBlock(scope: !4182, file: !2355, line: 1173, column: 6)
!4343 = !DILocation(line: 1174, column: 7, scope: !4341)
!4344 = !DILocation(line: 1177, column: 14, scope: !4345)
!4345 = distinct !DILexicalBlock(scope: !4346, file: !2355, line: 1176, column: 42)
!4346 = distinct !DILexicalBlock(scope: !4340, file: !2355, line: 1174, column: 19)
!4347 = !DILocation(line: 1177, column: 9, scope: !4345)
!4348 = !DILocation(line: 1177, column: 12, scope: !4345)
!4349 = !DILocation(line: 1178, column: 11, scope: !4345)
!4350 = !DILocation(line: 1176, column: 18, scope: !4346)
!4351 = !DILocation(line: 1176, column: 22, scope: !4346)
!4352 = !DILocation(line: 1176, column: 4, scope: !4346)
!4353 = distinct !{!4353, !4352, !4354}
!4354 = !DILocation(line: 1179, column: 4, scope: !4346)
!4355 = !DILocation(line: 1181, column: 10, scope: !4346)
!4356 = !DILocation(line: 1181, column: 21, scope: !4346)
!4357 = !DILocation(line: 1184, column: 3, scope: !4346)
!4358 = !DILocation(line: 1185, column: 8, scope: !4359)
!4359 = distinct !DILexicalBlock(scope: !4340, file: !2355, line: 1184, column: 10)
!4360 = !DILocation(line: 1185, column: 11, scope: !4359)
!4361 = !DILocation(line: 1191, column: 13, scope: !4362)
!4362 = distinct !DILexicalBlock(scope: !4341, file: !2355, line: 1191, column: 7)
!4363 = !DILocation(line: 1191, column: 23, scope: !4362)
!4364 = !DILocation(line: 1192, column: 8, scope: !4365)
!4365 = distinct !DILexicalBlock(scope: !4362, file: !2355, line: 1191, column: 43)
!4366 = !DILocation(line: 1192, column: 11, scope: !4365)
!4367 = !DILocation(line: 1193, column: 3, scope: !4365)
!4368 = !DILocation(line: 1195, column: 14, scope: !4369)
!4369 = distinct !DILexicalBlock(scope: !4341, file: !2355, line: 1195, column: 7)
!4370 = !DILocation(line: 1195, column: 18, scope: !4369)
!4371 = !DILocation(line: 1196, column: 23, scope: !4372)
!4372 = distinct !DILexicalBlock(scope: !4369, file: !2355, line: 1195, column: 36)
!4373 = !DILocation(line: 1196, column: 10, scope: !4372)
!4374 = !DILocation(line: 1197, column: 25, scope: !4375)
!4375 = distinct !DILexicalBlock(scope: !4372, file: !2355, line: 1197, column: 8)
!4376 = !DILocation(line: 1197, column: 8, scope: !4372)
!4377 = !DILocation(line: 0, scope: !4372)
!4378 = !DILocation(line: 1201, column: 14, scope: !4372)
!4379 = !DILocation(line: 1202, column: 21, scope: !4372)
!4380 = !DILocation(line: 1203, column: 3, scope: !4372)
!4381 = !DILocation(line: 1208, column: 10, scope: !4382)
!4382 = distinct !DILexicalBlock(scope: !4342, file: !2355, line: 1204, column: 9)
!4383 = !DILocation(line: 1208, column: 8, scope: !4382)
!4384 = !DILocation(line: 1209, column: 11, scope: !4385)
!4385 = distinct !DILexicalBlock(scope: !4382, file: !2355, line: 1209, column: 7)
!4386 = !DILocation(line: 1209, column: 14, scope: !4385)
!4387 = !DILocation(line: 1209, column: 7, scope: !4382)
!4388 = !DILocation(line: 1216, column: 13, scope: !4389)
!4389 = distinct !DILexicalBlock(scope: !4382, file: !2355, line: 1216, column: 7)
!4390 = !DILocation(line: 1216, column: 23, scope: !4389)
!4391 = !DILocation(line: 1217, column: 8, scope: !4392)
!4392 = distinct !DILexicalBlock(scope: !4389, file: !2355, line: 1216, column: 43)
!4393 = !DILocation(line: 1217, column: 11, scope: !4392)
!4394 = !DILocation(line: 1218, column: 3, scope: !4392)
!4395 = !DILocation(line: 0, scope: !4342)
!4396 = !DILocation(line: 1221, column: 19, scope: !4182)
!4397 = !DILocation(line: 1221, column: 23, scope: !4182)
!4398 = !DILocation(line: 1221, column: 2, scope: !4182)
!4399 = !DILocation(line: 1222, column: 12, scope: !4400)
!4400 = distinct !DILexicalBlock(scope: !4182, file: !2355, line: 1221, column: 43)
!4401 = !DILocation(line: 1222, column: 7, scope: !4400)
!4402 = !DILocation(line: 1222, column: 10, scope: !4400)
!4403 = !DILocation(line: 1223, column: 12, scope: !4400)
!4404 = distinct !{!4404, !4398, !4405}
!4405 = !DILocation(line: 1224, column: 2, scope: !4182)
!4406 = !DILocation(line: 1226, column: 8, scope: !4182)
!4407 = !DILocation(line: 1226, column: 21, scope: !4182)
!4408 = !DILocation(line: 1228, column: 6, scope: !4182)
!4409 = !DILocation(line: 1229, column: 22, scope: !4410)
!4410 = distinct !DILexicalBlock(scope: !4411, file: !2355, line: 1228, column: 18)
!4411 = distinct !DILexicalBlock(scope: !4182, file: !2355, line: 1228, column: 6)
!4412 = !DILocation(line: 1230, column: 3, scope: !4410)
!4413 = !DILocation(line: 1230, column: 11, scope: !4410)
!4414 = !DILocation(line: 1230, column: 10, scope: !4410)
!4415 = !DILocation(line: 1239, column: 17, scope: !4416)
!4416 = distinct !DILexicalBlock(scope: !4182, file: !2355, line: 1239, column: 6)
!4417 = !DILocation(line: 1240, column: 7, scope: !4418)
!4418 = distinct !DILexicalBlock(scope: !4416, file: !2355, line: 1239, column: 32)
!4419 = !DILocation(line: 1240, column: 10, scope: !4418)
!4420 = !DILocation(line: 1241, column: 14, scope: !4421)
!4421 = distinct !DILexicalBlock(scope: !4418, file: !2355, line: 1241, column: 7)
!4422 = !DILocation(line: 1241, column: 7, scope: !4418)
!4423 = !DILocation(line: 0, scope: !4421)
!4424 = !DILocation(line: 1249, column: 14, scope: !4425)
!4425 = distinct !DILexicalBlock(scope: !4418, file: !2355, line: 1249, column: 7)
!4426 = !DILocation(line: 1249, column: 7, scope: !4418)
!4427 = !DILocation(line: 1250, column: 21, scope: !4428)
!4428 = distinct !DILexicalBlock(scope: !4425, file: !2355, line: 1249, column: 22)
!4429 = !DILocation(line: 1250, column: 13, scope: !4428)
!4430 = !DILocation(line: 1250, column: 8, scope: !4428)
!4431 = !DILocation(line: 1250, column: 11, scope: !4428)
!4432 = !DILocation(line: 1252, column: 3, scope: !4428)
!4433 = !DILocation(line: 0, scope: !4418)
!4434 = !DILocation(line: 1254, column: 20, scope: !4418)
!4435 = !DILocation(line: 1254, column: 12, scope: !4418)
!4436 = !DILocation(line: 1254, column: 7, scope: !4418)
!4437 = !DILocation(line: 1254, column: 10, scope: !4418)
!4438 = !DILocation(line: 1255, column: 12, scope: !4418)
!4439 = !DILocation(line: 1255, column: 7, scope: !4418)
!4440 = !DILocation(line: 1255, column: 10, scope: !4418)
!4441 = !DILocation(line: 1256, column: 2, scope: !4418)
!4442 = !DILocation(line: 1259, column: 24, scope: !4182)
!4443 = !DILocation(line: 1259, column: 35, scope: !4182)
!4444 = !DILocation(line: 1260, column: 3, scope: !4182)
!4445 = !DILocation(line: 1260, column: 13, scope: !4182)
!4446 = !DILocation(line: 1260, column: 26, scope: !4182)
!4447 = !DILocation(line: 1259, column: 8, scope: !4182)
!4448 = !DILocation(line: 1259, column: 15, scope: !4182)
!4449 = !DILocation(line: 1266, column: 7, scope: !4182)
!4450 = !DILocation(line: 1267, column: 7, scope: !4182)
!4451 = !DILocation(line: 1269, column: 1, scope: !4182)
!4452 = distinct !DISubprogram(name: "isdigit", scope: !4453, file: !4453, line: 43, type: !107, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !4454)
!4453 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4454 = !{!4455}
!4455 = !DILocalVariable(name: "a", arg: 1, scope: !4452, file: !4453, line: 43, type: !103)
!4456 = !DILocation(line: 0, scope: !4452)
!4457 = !DILocation(line: 45, column: 29, scope: !4452)
!4458 = !DILocation(line: 45, column: 45, scope: !4452)
!4459 = !DILocation(line: 45, column: 2, scope: !4452)
!4460 = distinct !DISubprogram(name: "isupper", scope: !4453, file: !4453, line: 16, type: !107, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !4461)
!4461 = !{!4462}
!4462 = !DILocalVariable(name: "a", arg: 1, scope: !4460, file: !4453, line: 16, type: !103)
!4463 = !DILocation(line: 0, scope: !4460)
!4464 = !DILocation(line: 18, column: 29, scope: !4460)
!4465 = !DILocation(line: 18, column: 45, scope: !4460)
!4466 = !DILocation(line: 18, column: 2, scope: !4460)
!4467 = distinct !DISubprogram(name: "_ldiv5", scope: !2355, file: !2355, line: 702, type: !4468, scopeLine: 703, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !4471)
!4468 = !DISubroutineType(types: !4469)
!4469 = !{null, !4470}
!4470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1302, size: 32)
!4471 = !{!4472, !4473, !4474, !4475, !4476}
!4472 = !DILocalVariable(name: "v", arg: 1, scope: !4467, file: !2355, line: 702, type: !4470)
!4473 = !DILocalVariable(name: "v_lo", scope: !4467, file: !2355, line: 704, type: !121)
!4474 = !DILocalVariable(name: "v_hi", scope: !4467, file: !2355, line: 705, type: !121)
!4475 = !DILocalVariable(name: "m", scope: !4467, file: !2355, line: 706, type: !121)
!4476 = !DILocalVariable(name: "result", scope: !4467, file: !2355, line: 707, type: !1302)
!4477 = !DILocation(line: 0, scope: !4467)
!4478 = !DILocation(line: 704, column: 18, scope: !4467)
!4479 = !DILocation(line: 705, column: 21, scope: !4467)
!4480 = !DILocation(line: 714, column: 2, scope: !4467)
!4481 = !{i64 17322}
!4482 = !DILocation(line: 720, column: 12, scope: !4467)
!4483 = !DILocation(line: 720, column: 31, scope: !4467)
!4484 = !DILocation(line: 723, column: 12, scope: !4467)
!4485 = !DILocation(line: 723, column: 27, scope: !4467)
!4486 = !DILocation(line: 723, column: 9, scope: !4467)
!4487 = !DILocation(line: 724, column: 9, scope: !4467)
!4488 = !DILocation(line: 726, column: 27, scope: !4467)
!4489 = !DILocation(line: 725, column: 9, scope: !4467)
!4490 = !DILocation(line: 726, column: 9, scope: !4467)
!4491 = !DILocation(line: 727, column: 9, scope: !4467)
!4492 = !DILocation(line: 728, column: 9, scope: !4467)
!4493 = !DILocation(line: 730, column: 5, scope: !4467)
!4494 = !DILocation(line: 731, column: 1, scope: !4467)
!4495 = distinct !DISubprogram(name: "_ldiv10", scope: !2355, file: !2355, line: 736, type: !4468, scopeLine: 737, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !4496)
!4496 = !{!4497}
!4497 = !DILocalVariable(name: "v", arg: 1, scope: !4495, file: !2355, line: 736, type: !4470)
!4498 = !DILocation(line: 0, scope: !4495)
!4499 = !DILocation(line: 738, column: 5, scope: !4495)
!4500 = !DILocation(line: 739, column: 2, scope: !4495)
!4501 = !DILocation(line: 740, column: 1, scope: !4495)
!4502 = distinct !DISubprogram(name: "_get_digit", scope: !2355, file: !2355, line: 745, type: !4503, scopeLine: 746, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !4505)
!4503 = !DISubroutineType(types: !4504)
!4504 = !{!146, !4470, !2379}
!4505 = !{!4506, !4507, !4508}
!4506 = !DILocalVariable(name: "fr", arg: 1, scope: !4502, file: !2355, line: 745, type: !4470)
!4507 = !DILocalVariable(name: "digit_count", arg: 2, scope: !4502, file: !2355, line: 745, type: !2379)
!4508 = !DILocalVariable(name: "rval", scope: !4502, file: !2355, line: 747, type: !146)
!4509 = !DILocation(line: 0, scope: !4502)
!4510 = !DILocation(line: 749, column: 6, scope: !4511)
!4511 = distinct !DILexicalBlock(scope: !4502, file: !2355, line: 749, column: 6)
!4512 = !DILocation(line: 749, column: 19, scope: !4511)
!4513 = !DILocation(line: 749, column: 6, scope: !4502)
!4514 = !DILocation(line: 750, column: 3, scope: !4515)
!4515 = distinct !DILexicalBlock(scope: !4511, file: !2355, line: 749, column: 24)
!4516 = !DILocation(line: 751, column: 7, scope: !4515)
!4517 = !DILocation(line: 752, column: 16, scope: !4515)
!4518 = !DILocation(line: 752, column: 10, scope: !4515)
!4519 = !DILocation(line: 753, column: 7, scope: !4515)
!4520 = !DILocation(line: 754, column: 2, scope: !4515)
!4521 = !DILocation(line: 0, scope: !4511)
!4522 = !DILocation(line: 758, column: 2, scope: !4502)
!4523 = distinct !DISubprogram(name: "conversion_radix", scope: !2355, file: !2355, line: 761, type: !4524, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !4526)
!4524 = !DISubroutineType(types: !4525)
!4525 = !{!200, !146}
!4526 = !{!4527}
!4527 = !DILocalVariable(name: "specifier", arg: 1, scope: !4523, file: !2355, line: 761, type: !146)
!4528 = !DILocation(line: 0, scope: !4523)
!4529 = !DILocation(line: 763, column: 2, scope: !4523)
!4530 = !DILocation(line: 770, column: 3, scope: !4531)
!4531 = distinct !DILexicalBlock(scope: !4523, file: !2355, line: 763, column: 21)
!4532 = !DILocation(line: 774, column: 3, scope: !4531)
!4533 = !DILocation(line: 0, scope: !4531)
!4534 = !DILocation(line: 776, column: 1, scope: !4523)
!4535 = distinct !DISubprogram(name: "extract_flags", scope: !2355, file: !2355, line: 339, type: !4044, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !4536)
!4536 = !{!4537, !4538, !4539}
!4537 = !DILocalVariable(name: "conv", arg: 1, scope: !4535, file: !2355, line: 339, type: !3563)
!4538 = !DILocalVariable(name: "sp", arg: 2, scope: !4535, file: !2355, line: 340, type: !144)
!4539 = !DILocalVariable(name: "loop", scope: !4535, file: !2355, line: 342, type: !157)
!4540 = !DILocation(line: 0, scope: !4535)
!4541 = !DILocation(line: 344, column: 2, scope: !4535)
!4542 = !DILocation(line: 345, column: 11, scope: !4543)
!4543 = distinct !DILexicalBlock(scope: !4535, file: !2355, line: 344, column: 5)
!4544 = !DILocation(line: 345, column: 3, scope: !4543)
!4545 = !DILocation(line: 351, column: 4, scope: !4546)
!4546 = distinct !DILexicalBlock(scope: !4543, file: !2355, line: 345, column: 16)
!4547 = !DILocation(line: 354, column: 4, scope: !4546)
!4548 = !DILocation(line: 357, column: 4, scope: !4546)
!4549 = !DILocation(line: 360, column: 4, scope: !4546)
!4550 = !DILocation(line: 0, scope: !4546)
!4551 = !DILocation(line: 370, column: 12, scope: !4552)
!4552 = distinct !DILexicalBlock(scope: !4535, file: !2355, line: 370, column: 6)
!4553 = !DILocation(line: 370, column: 22, scope: !4552)
!4554 = !DILocation(line: 371, column: 19, scope: !4555)
!4555 = distinct !DILexicalBlock(scope: !4552, file: !2355, line: 370, column: 42)
!4556 = !DILocation(line: 372, column: 2, scope: !4555)
!4557 = !DILocation(line: 376, column: 2, scope: !4535)
!4558 = distinct !DISubprogram(name: "extract_width", scope: !2355, file: !2355, line: 388, type: !4044, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !4559)
!4559 = !{!4560, !4561, !4562, !4563}
!4560 = !DILocalVariable(name: "conv", arg: 1, scope: !4558, file: !2355, line: 388, type: !3563)
!4561 = !DILocalVariable(name: "sp", arg: 2, scope: !4558, file: !2355, line: 389, type: !144)
!4562 = !DILocalVariable(name: "wp", scope: !4558, file: !2355, line: 398, type: !144)
!4563 = !DILocalVariable(name: "width", scope: !4558, file: !2355, line: 399, type: !200)
!4564 = !DILocation(line: 0, scope: !4558)
!4565 = !DILocation(line: 391, column: 8, scope: !4558)
!4566 = !DILocation(line: 391, column: 22, scope: !4558)
!4567 = !DILocation(line: 393, column: 6, scope: !4568)
!4568 = distinct !DILexicalBlock(scope: !4558, file: !2355, line: 393, column: 6)
!4569 = !DILocation(line: 393, column: 10, scope: !4568)
!4570 = !DILocation(line: 393, column: 6, scope: !4558)
!4571 = !DILocation(line: 394, column: 20, scope: !4572)
!4572 = distinct !DILexicalBlock(scope: !4568, file: !2355, line: 393, column: 18)
!4573 = !DILocation(line: 395, column: 10, scope: !4572)
!4574 = !DILocation(line: 395, column: 3, scope: !4572)
!4575 = !DILocation(line: 399, column: 17, scope: !4558)
!4576 = !DILocation(line: 401, column: 6, scope: !4577)
!4577 = distinct !DILexicalBlock(scope: !4558, file: !2355, line: 401, column: 6)
!4578 = !DILocation(line: 401, column: 9, scope: !4577)
!4579 = !DILocation(line: 401, column: 6, scope: !4558)
!4580 = !DILocation(line: 402, column: 23, scope: !4581)
!4581 = distinct !DILexicalBlock(scope: !4577, file: !2355, line: 401, column: 16)
!4582 = !DILocation(line: 403, column: 9, scope: !4581)
!4583 = !DILocation(line: 403, column: 21, scope: !4581)
!4584 = !DILocation(line: 405, column: 11, scope: !4581)
!4585 = !DILocation(line: 404, column: 21, scope: !4581)
!4586 = !DILocation(line: 406, column: 2, scope: !4581)
!4587 = !DILocation(line: 409, column: 1, scope: !4558)
!4588 = distinct !DISubprogram(name: "extract_prec", scope: !2355, file: !2355, line: 420, type: !4044, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !4589)
!4589 = !{!4590, !4591, !4592}
!4590 = !DILocalVariable(name: "conv", arg: 1, scope: !4588, file: !2355, line: 420, type: !3563)
!4591 = !DILocalVariable(name: "sp", arg: 2, scope: !4588, file: !2355, line: 421, type: !144)
!4592 = !DILocalVariable(name: "prec", scope: !4588, file: !2355, line: 435, type: !200)
!4593 = !DILocation(line: 0, scope: !4588)
!4594 = !DILocation(line: 423, column: 24, scope: !4588)
!4595 = !DILocation(line: 423, column: 28, scope: !4588)
!4596 = !DILocation(line: 423, column: 8, scope: !4588)
!4597 = !DILocation(line: 423, column: 21, scope: !4588)
!4598 = !DILocation(line: 425, column: 6, scope: !4588)
!4599 = !DILocation(line: 428, column: 2, scope: !4588)
!4600 = !DILocation(line: 430, column: 6, scope: !4601)
!4601 = distinct !DILexicalBlock(scope: !4588, file: !2355, line: 430, column: 6)
!4602 = !DILocation(line: 430, column: 10, scope: !4601)
!4603 = !DILocation(line: 430, column: 6, scope: !4588)
!4604 = !DILocation(line: 431, column: 19, scope: !4605)
!4605 = distinct !DILexicalBlock(scope: !4601, file: !2355, line: 430, column: 18)
!4606 = !DILocation(line: 432, column: 10, scope: !4605)
!4607 = !DILocation(line: 432, column: 3, scope: !4605)
!4608 = !DILocation(line: 435, column: 16, scope: !4588)
!4609 = !DILocation(line: 437, column: 8, scope: !4588)
!4610 = !DILocation(line: 437, column: 19, scope: !4588)
!4611 = !DILocation(line: 439, column: 10, scope: !4588)
!4612 = !DILocation(line: 438, column: 20, scope: !4588)
!4613 = !DILocation(line: 441, column: 9, scope: !4588)
!4614 = !DILocation(line: 442, column: 1, scope: !4588)
!4615 = distinct !DISubprogram(name: "extract_length", scope: !2355, file: !2355, line: 453, type: !4044, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !4616)
!4616 = !{!4617, !4618}
!4617 = !DILocalVariable(name: "conv", arg: 1, scope: !4615, file: !2355, line: 453, type: !3563)
!4618 = !DILocalVariable(name: "sp", arg: 2, scope: !4615, file: !2355, line: 454, type: !144)
!4619 = !DILocation(line: 0, scope: !4615)
!4620 = !DILocation(line: 456, column: 10, scope: !4615)
!4621 = !DILocation(line: 456, column: 2, scope: !4615)
!4622 = !DILocation(line: 458, column: 8, scope: !4623)
!4623 = distinct !DILexicalBlock(scope: !4624, file: !2355, line: 458, column: 7)
!4624 = distinct !DILexicalBlock(scope: !4615, file: !2355, line: 456, column: 15)
!4625 = !DILocation(line: 458, column: 7, scope: !4623)
!4626 = !DILocation(line: 458, column: 13, scope: !4623)
!4627 = !DILocation(line: 0, scope: !4623)
!4628 = !DILocation(line: 458, column: 7, scope: !4624)
!4629 = !DILocation(line: 459, column: 21, scope: !4630)
!4630 = distinct !DILexicalBlock(scope: !4623, file: !2355, line: 458, column: 21)
!4631 = !DILocation(line: 460, column: 4, scope: !4630)
!4632 = !DILocation(line: 461, column: 3, scope: !4630)
!4633 = !DILocation(line: 462, column: 21, scope: !4634)
!4634 = distinct !DILexicalBlock(scope: !4623, file: !2355, line: 461, column: 10)
!4635 = !DILocation(line: 466, column: 8, scope: !4636)
!4636 = distinct !DILexicalBlock(scope: !4624, file: !2355, line: 466, column: 7)
!4637 = !DILocation(line: 466, column: 7, scope: !4636)
!4638 = !DILocation(line: 466, column: 13, scope: !4636)
!4639 = !DILocation(line: 0, scope: !4636)
!4640 = !DILocation(line: 466, column: 7, scope: !4624)
!4641 = !DILocation(line: 467, column: 21, scope: !4642)
!4642 = distinct !DILexicalBlock(scope: !4636, file: !2355, line: 466, column: 21)
!4643 = !DILocation(line: 468, column: 4, scope: !4642)
!4644 = !DILocation(line: 469, column: 3, scope: !4642)
!4645 = !DILocation(line: 470, column: 21, scope: !4646)
!4646 = distinct !DILexicalBlock(scope: !4636, file: !2355, line: 469, column: 10)
!4647 = !DILocation(line: 474, column: 9, scope: !4624)
!4648 = !DILocation(line: 474, column: 20, scope: !4624)
!4649 = !DILocation(line: 475, column: 3, scope: !4624)
!4650 = !DILocation(line: 476, column: 3, scope: !4624)
!4651 = !DILocation(line: 478, column: 9, scope: !4624)
!4652 = !DILocation(line: 478, column: 20, scope: !4624)
!4653 = !DILocation(line: 479, column: 3, scope: !4624)
!4654 = !DILocation(line: 480, column: 3, scope: !4624)
!4655 = !DILocation(line: 482, column: 9, scope: !4624)
!4656 = !DILocation(line: 482, column: 20, scope: !4624)
!4657 = !DILocation(line: 483, column: 3, scope: !4624)
!4658 = !DILocation(line: 484, column: 3, scope: !4624)
!4659 = !DILocation(line: 486, column: 9, scope: !4624)
!4660 = !DILocation(line: 486, column: 20, scope: !4624)
!4661 = !DILocation(line: 487, column: 3, scope: !4624)
!4662 = !DILocation(line: 492, column: 21, scope: !4624)
!4663 = !DILocation(line: 493, column: 3, scope: !4624)
!4664 = !DILocation(line: 495, column: 9, scope: !4624)
!4665 = !DILocation(line: 495, column: 20, scope: !4624)
!4666 = !DILocation(line: 496, column: 3, scope: !4624)
!4667 = !DILocation(line: 498, column: 2, scope: !4615)
!4668 = distinct !DISubprogram(name: "extract_specifier", scope: !2355, file: !2355, line: 513, type: !4044, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !4669)
!4669 = !{!4670, !4671, !4672, !4673}
!4670 = !DILocalVariable(name: "conv", arg: 1, scope: !4668, file: !2355, line: 513, type: !3563)
!4671 = !DILocalVariable(name: "sp", arg: 2, scope: !4668, file: !2355, line: 514, type: !144)
!4672 = !DILocalVariable(name: "unsupported", scope: !4668, file: !2355, line: 516, type: !157)
!4673 = !DILabel(scope: !4674, name: "int_conv", file: !2355, line: 526)
!4674 = distinct !DILexicalBlock(scope: !4668, file: !2355, line: 520, column: 27)
!4675 = !DILocation(line: 0, scope: !4668)
!4676 = !DILocation(line: 518, column: 20, scope: !4668)
!4677 = !DILocation(line: 518, column: 8, scope: !4668)
!4678 = !DILocation(line: 518, column: 18, scope: !4668)
!4679 = !DILocation(line: 520, column: 2, scope: !4668)
!4680 = !DILocation(line: 525, column: 3, scope: !4674)
!4681 = !DILocation(line: 0, scope: !4674)
!4682 = !DILocation(line: 526, column: 1, scope: !4674)
!4683 = !DILocation(line: 528, column: 24, scope: !4684)
!4684 = distinct !DILexicalBlock(scope: !4674, file: !2355, line: 528, column: 7)
!4685 = !DILocation(line: 528, column: 7, scope: !4674)
!4686 = !DILocation(line: 535, column: 23, scope: !4687)
!4687 = distinct !DILexicalBlock(scope: !4674, file: !2355, line: 535, column: 7)
!4688 = !DILocation(line: 535, column: 7, scope: !4674)
!4689 = !DILocation(line: 536, column: 36, scope: !4690)
!4690 = distinct !DILexicalBlock(scope: !4687, file: !2355, line: 535, column: 31)
!4691 = !DILocation(line: 537, column: 3, scope: !4690)
!4692 = !DILocation(line: 570, column: 9, scope: !4674)
!4693 = !DILocation(line: 570, column: 23, scope: !4674)
!4694 = !DILocation(line: 580, column: 4, scope: !4674)
!4695 = !DILocation(line: 579, column: 21, scope: !4674)
!4696 = !DILocation(line: 581, column: 7, scope: !4674)
!4697 = !DILocation(line: 590, column: 13, scope: !4698)
!4698 = distinct !DILexicalBlock(scope: !4674, file: !2355, line: 590, column: 7)
!4699 = !DILocation(line: 590, column: 7, scope: !4674)
!4700 = !DILocation(line: 591, column: 21, scope: !4701)
!4701 = distinct !DILexicalBlock(scope: !4698, file: !2355, line: 590, column: 37)
!4702 = !DILocation(line: 592, column: 3, scope: !4701)
!4703 = !DILocation(line: 594, column: 18, scope: !4704)
!4704 = distinct !DILexicalBlock(scope: !4705, file: !2355, line: 593, column: 48)
!4705 = distinct !DILexicalBlock(scope: !4698, file: !2355, line: 592, column: 14)
!4706 = !DILocation(line: 595, column: 3, scope: !4704)
!4707 = !DILocation(line: 603, column: 9, scope: !4674)
!4708 = !DILocation(line: 603, column: 23, scope: !4674)
!4709 = !DILocation(line: 605, column: 24, scope: !4710)
!4710 = distinct !DILexicalBlock(scope: !4674, file: !2355, line: 605, column: 7)
!4711 = !DILocation(line: 605, column: 7, scope: !4674)
!4712 = !DILocation(line: 612, column: 9, scope: !4674)
!4713 = !DILocation(line: 612, column: 23, scope: !4674)
!4714 = !DILocation(line: 619, column: 24, scope: !4715)
!4715 = distinct !DILexicalBlock(scope: !4674, file: !2355, line: 619, column: 7)
!4716 = !DILocation(line: 619, column: 7, scope: !4674)
!4717 = !DILocation(line: 625, column: 9, scope: !4674)
!4718 = !DILocation(line: 625, column: 17, scope: !4674)
!4719 = !DILocation(line: 626, column: 3, scope: !4674)
!4720 = !DILocation(line: 629, column: 20, scope: !4668)
!4721 = !DILocation(line: 629, column: 8, scope: !4668)
!4722 = !DILocation(line: 518, column: 23, scope: !4668)
!4723 = !DILocation(line: 631, column: 2, scope: !4668)
!4724 = distinct !DISubprogram(name: "extract_decimal", scope: !2355, file: !2355, line: 318, type: !4725, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !4727)
!4725 = !DISubroutineType(types: !4726)
!4726 = !{!200, !4185}
!4727 = !{!4728, !4729, !4730}
!4728 = !DILocalVariable(name: "str", arg: 1, scope: !4724, file: !2355, line: 318, type: !4185)
!4729 = !DILocalVariable(name: "sp", scope: !4724, file: !2355, line: 320, type: !144)
!4730 = !DILocalVariable(name: "val", scope: !4724, file: !2355, line: 321, type: !200)
!4731 = !DILocation(line: 0, scope: !4724)
!4732 = !DILocation(line: 320, column: 19, scope: !4724)
!4733 = !DILocation(line: 323, column: 37, scope: !4724)
!4734 = !DILocation(line: 323, column: 17, scope: !4724)
!4735 = !DILocation(line: 323, column: 9, scope: !4724)
!4736 = !DILocation(line: 323, column: 2, scope: !4724)
!4737 = !DILocation(line: 324, column: 13, scope: !4738)
!4738 = distinct !DILexicalBlock(scope: !4724, file: !2355, line: 323, column: 43)
!4739 = !DILocation(line: 324, column: 24, scope: !4738)
!4740 = !DILocation(line: 324, column: 19, scope: !4738)
!4741 = !DILocation(line: 324, column: 27, scope: !4738)
!4742 = distinct !{!4742, !4736, !4743}
!4743 = !DILocation(line: 325, column: 2, scope: !4724)
!4744 = !DILocation(line: 326, column: 7, scope: !4724)
!4745 = !DILocation(line: 327, column: 2, scope: !4724)
!4746 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !4747, file: !4747, line: 9, type: !2928, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2389, retainedNodes: !322)
!4747 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/sensor/thermometer")
!4748 = !DILocation(line: 11, column: 1, scope: !4746)
!4749 = !{i64 2147561784, i64 2147561827, i64 2147561867}
!4750 = !DILocation(line: 12, column: 1, scope: !4746)
!4751 = !{i64 2147566011, i64 2147566054, i64 2147566094}
!4752 = !DILocation(line: 13, column: 1, scope: !4746)
!4753 = !{i64 2147566220, i64 2147566263, i64 2147566303}
!4754 = !DILocation(line: 14, column: 1, scope: !4746)
!4755 = !{i64 2147566392, i64 2147566435, i64 2147566475}
!4756 = !DILocation(line: 15, column: 1, scope: !4746)
!4757 = !{i64 2147566561, i64 2147566604, i64 2147566644}
!4758 = !DILocation(line: 16, column: 1, scope: !4746)
!4759 = !{i64 2147566724, i64 2147566767, i64 2147566807}
!4760 = !DILocation(line: 17, column: 1, scope: !4746)
!4761 = !{i64 2147566908, i64 2147566951, i64 2147566991}
!4762 = !DILocation(line: 18, column: 1, scope: !4746)
!4763 = !{i64 2147567087, i64 2147567130, i64 2147567170}
!4764 = !DILocation(line: 19, column: 1, scope: !4746)
!4765 = !{i64 2147567330, i64 2147567373, i64 2147567413}
!4766 = !DILocation(line: 20, column: 1, scope: !4746)
!4767 = !{i64 2147567565, i64 2147567608, i64 2147567648}
!4768 = !DILocation(line: 21, column: 1, scope: !4746)
!4769 = !{i64 2147567752, i64 2147567795, i64 2147567835}
!4770 = !DILocation(line: 22, column: 1, scope: !4746)
!4771 = !{i64 2147567968, i64 2147568011, i64 2147568051}
!4772 = !DILocation(line: 23, column: 1, scope: !4746)
!4773 = !{i64 2147568171, i64 2147568214, i64 2147568254}
!4774 = !DILocation(line: 24, column: 1, scope: !4746)
!4775 = !{i64 2147568374, i64 2147568417, i64 2147568457}
!4776 = !DILocation(line: 25, column: 1, scope: !4746)
!4777 = !{i64 2147568549, i64 2147568592, i64 2147568632}
!4778 = !DILocation(line: 26, column: 1, scope: !4746)
!4779 = !{i64 2147568757, i64 2147568800, i64 2147568840}
!4780 = !DILocation(line: 27, column: 1, scope: !4746)
!4781 = !{i64 2147568961, i64 2147569004, i64 2147569044}
!4782 = !DILocation(line: 28, column: 1, scope: !4746)
!4783 = !{i64 2147569154, i64 2147569197, i64 2147569237}
!4784 = !DILocation(line: 29, column: 1, scope: !4746)
!4785 = !{i64 2147569356, i64 2147569399, i64 2147569439}
!4786 = !DILocation(line: 30, column: 1, scope: !4746)
!4787 = !{i64 2147569583, i64 2147569626, i64 2147569666}
!4788 = !DILocation(line: 31, column: 1, scope: !4746)
!4789 = !{i64 2147569785, i64 2147569828, i64 2147569868}
!4790 = !DILocation(line: 32, column: 1, scope: !4746)
!4791 = !{i64 2147570000, i64 2147570043, i64 2147570083}
!4792 = !DILocation(line: 33, column: 1, scope: !4746)
!4793 = !{i64 2147570172, i64 2147570215, i64 2147570255}
!4794 = !DILocation(line: 34, column: 1, scope: !4746)
!4795 = !{i64 2147570374, i64 2147570417, i64 2147570457}
!4796 = !DILocation(line: 35, column: 1, scope: !4746)
!4797 = !{i64 2147570600, i64 2147570643, i64 2147570683}
!4798 = !DILocation(line: 36, column: 1, scope: !4746)
!4799 = !{i64 2147570799, i64 2147570842, i64 2147570882}
!4800 = !DILocation(line: 37, column: 1, scope: !4746)
!4801 = !{i64 2147570974, i64 2147571017, i64 2147571057}
!4802 = !DILocation(line: 38, column: 1, scope: !4746)
!4803 = !{i64 2147571242, i64 2147571285, i64 2147571325}
!4804 = !DILocation(line: 39, column: 1, scope: !4746)
!4805 = !{i64 2147571495, i64 2147571538, i64 2147571578}
!4806 = !DILocation(line: 40, column: 1, scope: !4746)
!4807 = !{i64 2147571736, i64 2147571779, i64 2147571819}
!4808 = !DILocation(line: 41, column: 1, scope: !4746)
!4809 = !{i64 2147571971, i64 2147572014, i64 2147572054}
!4810 = !DILocation(line: 42, column: 1, scope: !4746)
!4811 = !{i64 2147572203, i64 2147572246, i64 2147572286}
!4812 = !DILocation(line: 43, column: 1, scope: !4746)
!4813 = !{i64 2147572429, i64 2147572472, i64 2147572512}
!4814 = !DILocation(line: 44, column: 1, scope: !4746)
!4815 = !{i64 2147572667, i64 2147572710, i64 2147572750}
!4816 = !DILocation(line: 45, column: 1, scope: !4746)
!4817 = !{i64 2147572893, i64 2147572936, i64 2147572976}
!4818 = !DILocation(line: 46, column: 1, scope: !4746)
!4819 = !{i64 2147573128, i64 2147573171, i64 2147573211}
!4820 = !DILocation(line: 47, column: 1, scope: !4746)
!4821 = !{i64 2147573363, i64 2147573406, i64 2147573446}
!4822 = !DILocation(line: 48, column: 1, scope: !4746)
!4823 = !{i64 2147573601, i64 2147573644, i64 2147573684}
!4824 = !DILocation(line: 49, column: 1, scope: !4746)
!4825 = !{i64 2147573875, i64 2147573918, i64 2147573958}
!4826 = !DILocation(line: 50, column: 1, scope: !4746)
!4827 = !{i64 2147574113, i64 2147574156, i64 2147574196}
!4828 = !DILocation(line: 51, column: 1, scope: !4746)
!4829 = !{i64 2147574366, i64 2147574409, i64 2147574449}
!4830 = !DILocation(line: 52, column: 1, scope: !4746)
!4831 = !{i64 2147574610, i64 2147574653, i64 2147574693}
!4832 = !DILocation(line: 53, column: 1, scope: !4746)
!4833 = !{i64 2147578921, i64 2147578964, i64 2147579004}
!4834 = !DILocation(line: 54, column: 1, scope: !4746)
!4835 = !{i64 2147579162, i64 2147579205, i64 2147579245}
!4836 = !DILocation(line: 55, column: 1, scope: !4746)
!4837 = !{i64 2147579409, i64 2147579452, i64 2147579492}
!4838 = !DILocation(line: 56, column: 1, scope: !4746)
!4839 = !{i64 2147579644, i64 2147579687, i64 2147579727}
!4840 = !DILocation(line: 57, column: 1, scope: !4746)
!4841 = !{i64 2147579879, i64 2147579922, i64 2147579962}
!4842 = !DILocation(line: 58, column: 1, scope: !4746)
!4843 = !{i64 2147580114, i64 2147580157, i64 2147580197}
!4844 = !DILocation(line: 59, column: 1, scope: !4746)
!4845 = !{i64 2147580352, i64 2147580395, i64 2147580435}
!4846 = !DILocation(line: 60, column: 1, scope: !4746)
!4847 = !{i64 2147580593, i64 2147580636, i64 2147580676}
!4848 = !DILocation(line: 61, column: 1, scope: !4746)
!4849 = !{i64 2147580873, i64 2147580916, i64 2147580956}
!4850 = !DILocation(line: 62, column: 1, scope: !4746)
!4851 = !{i64 2147581132, i64 2147581175, i64 2147581215}
!4852 = !DILocation(line: 63, column: 1, scope: !4746)
!4853 = !{i64 2147581370, i64 2147581413, i64 2147581453}
!4854 = !DILocation(line: 64, column: 1, scope: !4746)
!4855 = !{i64 2147581629, i64 2147581672, i64 2147581712}
!4856 = !DILocation(line: 65, column: 1, scope: !4746)
!4857 = !{i64 2147581858, i64 2147581901, i64 2147581941}
!4858 = !DILocation(line: 66, column: 1, scope: !4746)
!4859 = !{i64 2147582066, i64 2147582109, i64 2147582149}
!4860 = !DILocation(line: 67, column: 1, scope: !4746)
!4861 = !{i64 2147582277, i64 2147582320, i64 2147582360}
!4862 = !DILocation(line: 68, column: 1, scope: !4746)
!4863 = !{i64 2147582512, i64 2147582555, i64 2147582595}
!4864 = !DILocation(line: 69, column: 1, scope: !4746)
!4865 = !{i64 2147582741, i64 2147582784, i64 2147582824}
!4866 = !DILocation(line: 70, column: 1, scope: !4746)
!4867 = !{i64 2147582979, i64 2147583022, i64 2147583062}
!4868 = !DILocation(line: 71, column: 1, scope: !4746)
!4869 = !{i64 2147583211, i64 2147583254, i64 2147583294}
!4870 = !DILocation(line: 72, column: 1, scope: !4746)
!4871 = !{i64 2147583437, i64 2147583480, i64 2147583520}
!4872 = !DILocation(line: 73, column: 1, scope: !4746)
!4873 = !{i64 2147583654, i64 2147583697, i64 2147583737}
!4874 = !DILocation(line: 74, column: 1, scope: !4746)
!4875 = !{i64 2147583886, i64 2147583929, i64 2147583969}
!4876 = !DILocation(line: 75, column: 1, scope: !4746)
!4877 = !{i64 2147584112, i64 2147584155, i64 2147584195}
!4878 = !DILocation(line: 76, column: 1, scope: !4746)
!4879 = !{i64 2147584326, i64 2147584369, i64 2147584409}
!4880 = !DILocation(line: 77, column: 1, scope: !4746)
!4881 = !{i64 2147584546, i64 2147584589, i64 2147584629}
!4882 = !DILocation(line: 78, column: 1, scope: !4746)
!4883 = !{i64 2147584778, i64 2147584821, i64 2147584861}
!4884 = !DILocation(line: 79, column: 1, scope: !4746)
!4885 = !{i64 2147584986, i64 2147585029, i64 2147585069}
!4886 = !DILocation(line: 80, column: 1, scope: !4746)
!4887 = !{i64 2147585191, i64 2147585234, i64 2147585274}
!4888 = !DILocation(line: 81, column: 1, scope: !4746)
!4889 = !{i64 2147585408, i64 2147585451, i64 2147585491}
!4890 = !DILocation(line: 82, column: 1, scope: !4746)
!4891 = !{i64 2147585622, i64 2147585665, i64 2147585705}
!4892 = !DILocation(line: 83, column: 1, scope: !4746)
!4893 = !{i64 2147585848, i64 2147585891, i64 2147585931}
!4894 = !DILocation(line: 84, column: 1, scope: !4746)
!4895 = !{i64 2147586068, i64 2147586111, i64 2147586151}
!4896 = !DILocation(line: 85, column: 1, scope: !4746)
!4897 = !{i64 2147586273, i64 2147586316, i64 2147586356}
!4898 = !DILocation(line: 86, column: 1, scope: !4746)
!4899 = !{i64 2147586505, i64 2147586548, i64 2147586588}
!4900 = !DILocation(line: 87, column: 1, scope: !4746)
!4901 = !{i64 2147586740, i64 2147586783, i64 2147586823}
!4902 = !DILocation(line: 88, column: 1, scope: !4746)
!4903 = !{i64 2147591051, i64 2147591094, i64 2147591134}
!4904 = !DILocation(line: 89, column: 1, scope: !4746)
!4905 = !{i64 2147591301, i64 2147591344, i64 2147591384}
!4906 = !DILocation(line: 90, column: 1, scope: !4746)
!4907 = !{i64 2147591539, i64 2147591582, i64 2147591622}
!4908 = !DILocation(line: 91, column: 1, scope: !4746)
!4909 = !{i64 2147591750, i64 2147591793, i64 2147591833}
!4910 = !DILocation(line: 92, column: 1, scope: !4746)
!4911 = !{i64 2147591967, i64 2147592010, i64 2147592050}
!4912 = !DILocation(line: 93, column: 1, scope: !4746)
!4913 = !{i64 2147592163, i64 2147592206, i64 2147592246}
!4914 = !DILocation(line: 94, column: 1, scope: !4746)
!4915 = !{i64 2147592365, i64 2147592408, i64 2147592448}
!4916 = !DILocation(line: 95, column: 1, scope: !4746)
!4917 = !{i64 2147592558, i64 2147592601, i64 2147592641}
!4918 = !DILocation(line: 96, column: 1, scope: !4746)
!4919 = !{i64 2147592766, i64 2147592809, i64 2147592849}
!4920 = !DILocation(line: 97, column: 1, scope: !4746)
!4921 = !{i64 2147592962, i64 2147593005, i64 2147593045}
!4922 = !DILocation(line: 98, column: 1, scope: !4746)
!4923 = !{i64 2147593212, i64 2147593255, i64 2147593295}
!4924 = !DILocation(line: 99, column: 1, scope: !4746)
!4925 = !{i64 2147593423, i64 2147593466, i64 2147593506}
!4926 = !DILocation(line: 100, column: 1, scope: !4746)
!4927 = !{i64 2147593622, i64 2147593665, i64 2147593705}
!4928 = !DILocation(line: 101, column: 1, scope: !4746)
!4929 = !{i64 2147593797, i64 2147593840, i64 2147593880}
!4930 = !DILocation(line: 102, column: 1, scope: !4746)
!4931 = !{i64 2147593981, i64 2147594024, i64 2147594064}
!4932 = !DILocation(line: 103, column: 1, scope: !4746)
!4933 = !{i64 2147594183, i64 2147594226, i64 2147594266}
!4934 = !DILocation(line: 104, column: 1, scope: !4746)
!4935 = !{i64 2147594364, i64 2147594407, i64 2147594447}
!4936 = !DILocation(line: 105, column: 1, scope: !4746)
!4937 = !{i64 2147594563, i64 2147594606, i64 2147594646}
!4938 = !DILocation(line: 106, column: 1, scope: !4746)
!4939 = !{i64 2147594729, i64 2147594772, i64 2147594812}
!4940 = !DILocation(line: 107, column: 1, scope: !4746)
!4941 = !{i64 2147594913, i64 2147594956, i64 2147594996}
!4942 = !DILocation(line: 108, column: 1, scope: !4746)
!4943 = !{i64 2147595103, i64 2147595146, i64 2147595186}
!4944 = !DILocation(line: 109, column: 1, scope: !4746)
!4945 = !{i64 2147595287, i64 2147595330, i64 2147595370}
!4946 = !DILocation(line: 110, column: 1, scope: !4746)
!4947 = !{i64 2147595501, i64 2147595544, i64 2147595584}
!4948 = !DILocation(line: 111, column: 1, scope: !4746)
!4949 = !{i64 2147595712, i64 2147595755, i64 2147595795}
!4950 = !DILocation(line: 112, column: 1, scope: !4746)
!4951 = !{i64 2147595935, i64 2147595978, i64 2147596018}
!4952 = !DILocation(line: 113, column: 1, scope: !4746)
!4953 = !{i64 2147596119, i64 2147596162, i64 2147596202}
!4954 = !DILocation(line: 114, column: 1, scope: !4746)
!4955 = !{i64 2147596333, i64 2147596376, i64 2147596416}
!4956 = !DILocation(line: 115, column: 1, scope: !4746)
!4957 = !{i64 2147596499, i64 2147596542, i64 2147596582}
!4958 = !DILocation(line: 116, column: 1, scope: !4746)
!4959 = !{i64 2147596680, i64 2147596723, i64 2147596763}
!4960 = !DILocation(line: 117, column: 1, scope: !4746)
!4961 = !{i64 2147596873, i64 2147596916, i64 2147596956}
!4962 = !DILocation(line: 118, column: 1, scope: !4746)
!4963 = !{i64 2147597099, i64 2147597142, i64 2147597182}
!4964 = !DILocation(line: 119, column: 1, scope: !4746)
!4965 = !{i64 2147597313, i64 2147597356, i64 2147597396}
!4966 = !DILocation(line: 120, column: 1, scope: !4746)
!4967 = !{i64 2147597539, i64 2147597582, i64 2147597622}
!4968 = !DILocation(line: 121, column: 1, scope: !4746)
!4969 = !{i64 2147597756, i64 2147597799, i64 2147597839}
!4970 = !DILocation(line: 122, column: 1, scope: !4746)
!4971 = !{i64 2147598033, i64 2147598076, i64 2147598116}
!4972 = !DILocation(line: 123, column: 1, scope: !4746)
!4973 = !{i64 2147598259, i64 2147598302, i64 2147598342}
!4974 = !DILocation(line: 124, column: 1, scope: !4746)
!4975 = !{i64 2147598467, i64 2147598510, i64 2147598550}
!4976 = !DILocation(line: 125, column: 1, scope: !4746)
!4977 = !{i64 2147598663, i64 2147598706, i64 2147598746}
!4978 = !DILocation(line: 126, column: 1, scope: !4746)
!4979 = !{i64 2147598928, i64 2147598971, i64 2147599011}
!4980 = !DILocation(line: 127, column: 1, scope: !4746)
!4981 = !{i64 2147599142, i64 2147599185, i64 2147599225}
!4982 = !DILocation(line: 128, column: 1, scope: !4746)
!4983 = !{i64 2147599317, i64 2147599360, i64 2147599400}
!4984 = !DILocation(line: 129, column: 1, scope: !4746)
!4985 = !{i64 2147599571, i64 2147599614, i64 2147599654}
!4986 = !DILocation(line: 130, column: 1, scope: !4746)
!4987 = !{i64 2147599770, i64 2147599813, i64 2147599853}
!4988 = !DILocation(line: 131, column: 1, scope: !4746)
!4989 = !{i64 2147600012, i64 2147600055, i64 2147600095}
!4990 = !DILocation(line: 132, column: 1, scope: !4746)
!4991 = !{i64 2147604236, i64 2147604279, i64 2147604319}
!4992 = !DILocation(line: 133, column: 1, scope: !4746)
!4993 = !{i64 2147604423, i64 2147604466, i64 2147604506}
!4994 = !DILocation(line: 134, column: 1, scope: !4746)
!4995 = !{i64 2147604616, i64 2147604659, i64 2147604699}
!4996 = !DILocation(line: 135, column: 1, scope: !4746)
!4997 = !{i64 2147604799, i64 2147604842, i64 2147604882}
!4998 = !DILocation(line: 136, column: 1, scope: !4746)
!4999 = !{i64 2147605013, i64 2147605056, i64 2147605096}
!5000 = !DILocation(line: 137, column: 1, scope: !4746)
!5001 = !{i64 2147605224, i64 2147605267, i64 2147605307}
!5002 = !DILocation(line: 138, column: 1, scope: !4746)
!5003 = !{i64 2147605444, i64 2147605487, i64 2147605527}
!5004 = !DILocation(line: 139, column: 1, scope: !4746)
!5005 = !{i64 2147605651, i64 2147605694, i64 2147605734}
!5006 = !DILocation(line: 140, column: 1, scope: !4746)
!5007 = !{i64 2147605924, i64 2147605967, i64 2147606007}
!5008 = !DILocation(line: 141, column: 1, scope: !4746)
!5009 = !{i64 2147606172, i64 2147606215, i64 2147606255}
!5010 = !DILocation(line: 142, column: 1, scope: !4746)
!5011 = !{i64 2147606371, i64 2147606414, i64 2147606454}
!5012 = !DILocation(line: 143, column: 1, scope: !4746)
!5013 = !{i64 2147606606, i64 2147606649, i64 2147606689}
!5014 = !DILocation(line: 144, column: 1, scope: !4746)
!5015 = !{i64 2147606856, i64 2147606899, i64 2147606939}
!5016 = !DILocation(line: 145, column: 1, scope: !4746)
!5017 = !{i64 2147607058, i64 2147607101, i64 2147607141}
!5018 = !DILocation(line: 146, column: 1, scope: !4746)
!5019 = !{i64 2147607281, i64 2147607324, i64 2147607364}
!5020 = !DILocation(line: 147, column: 1, scope: !4746)
!5021 = !{i64 2147607495, i64 2147607538, i64 2147607578}
!5022 = !DILocation(line: 148, column: 1, scope: !4746)
!5023 = !{i64 2147607739, i64 2147607782, i64 2147607822}
!5024 = !DILocation(line: 149, column: 1, scope: !4746)
!5025 = !{i64 2147607968, i64 2147608011, i64 2147608051}
!5026 = !DILocation(line: 150, column: 1, scope: !4746)
!5027 = !{i64 2147608197, i64 2147608240, i64 2147608280}
!5028 = !DILocation(line: 151, column: 1, scope: !4746)
!5029 = !{i64 2147608405, i64 2147608448, i64 2147608488}
!5030 = !DILocation(line: 152, column: 1, scope: !4746)
!5031 = !{i64 2147608643, i64 2147608686, i64 2147608726}
!5032 = !DILocation(line: 153, column: 1, scope: !4746)
!5033 = !{i64 2147608869, i64 2147608912, i64 2147608952}
!5034 = !DILocation(line: 154, column: 1, scope: !4746)
!5035 = !{i64 2147609128, i64 2147609171, i64 2147609211}
!5036 = !DILocation(line: 155, column: 1, scope: !4746)
!5037 = !{i64 2147609348, i64 2147609391, i64 2147609431}
!5038 = !DILocation(line: 156, column: 1, scope: !4746)
!5039 = !{i64 2147609580, i64 2147609623, i64 2147609663}
!5040 = !DILocation(line: 157, column: 1, scope: !4746)
!5041 = !{i64 2147609821, i64 2147609864, i64 2147609904}
!5042 = !DILocation(line: 158, column: 1, scope: !4746)
!5043 = !{i64 2147610062, i64 2147610105, i64 2147610145}
!5044 = !DILocation(line: 159, column: 1, scope: !4746)
!5045 = !{i64 2147610285, i64 2147610328, i64 2147610368}
!5046 = !DILocation(line: 160, column: 1, scope: !4746)
!5047 = !{i64 2147610502, i64 2147610545, i64 2147610585}
!5048 = !DILocation(line: 161, column: 1, scope: !4746)
!5049 = !{i64 2147610743, i64 2147610786, i64 2147610826}
!5050 = !DILocation(line: 162, column: 1, scope: !4746)
!5051 = !{i64 2147610930, i64 2147610973, i64 2147611013}
!5052 = !DILocation(line: 163, column: 1, scope: !4746)
!5053 = !{i64 2147611117, i64 2147611160, i64 2147611200}
!5054 = !DILocation(line: 164, column: 1, scope: !4746)
!5055 = !{i64 2147611280, i64 2147611323, i64 2147611363}
!5056 = !DILocation(line: 165, column: 1, scope: !4746)
!5057 = !{i64 2147611539, i64 2147611582, i64 2147611622}
!5058 = !DILocation(line: 166, column: 1, scope: !4746)
!5059 = !{i64 2147611762, i64 2147611805, i64 2147611845}
!5060 = !DILocation(line: 167, column: 1, scope: !4746)
!5061 = !{i64 2147611991, i64 2147612034, i64 2147612074}
!5062 = !DILocation(line: 168, column: 1, scope: !4746)
!5063 = !{i64 2147612187, i64 2147612230, i64 2147612270}
!5064 = !DILocation(line: 169, column: 1, scope: !4746)
!5065 = !{i64 2147612399, i64 2147612442, i64 2147612482}
!5066 = !DILocation(line: 170, column: 1, scope: !4746)
!5067 = !{i64 2147612620, i64 2147612663, i64 2147612703}
!5068 = !DILocation(line: 171, column: 1, scope: !4746)
!5069 = !{i64 2147616895, i64 2147616938, i64 2147616978}
!5070 = !DILocation(line: 172, column: 1, scope: !4746)
!5071 = !{i64 2147617085, i64 2147617128, i64 2147617168}
!5072 = !DILocation(line: 173, column: 1, scope: !4746)
!5073 = !{i64 2147617284, i64 2147617327, i64 2147617367}
!5074 = !DILocation(line: 174, column: 1, scope: !4746)
!5075 = !{i64 2147617489, i64 2147617532, i64 2147617572}
!5076 = !DILocation(line: 175, column: 1, scope: !4746)
!5077 = !{i64 2147617709, i64 2147617752, i64 2147617792}
!5078 = !DILocation(line: 176, column: 1, scope: !4746)
!5079 = !{i64 2147617910, i64 2147617953, i64 2147617993}
!5080 = !DILocation(line: 177, column: 1, scope: !4746)
!5081 = !{i64 2147618109, i64 2147618152, i64 2147618192}
!5082 = !DILocation(line: 178, column: 1, scope: !4746)
!5083 = !{i64 2147618314, i64 2147618357, i64 2147618397}
!5084 = !DILocation(line: 179, column: 1, scope: !4746)
!5085 = !{i64 2147618483, i64 2147618526, i64 2147618566}
!5086 = !DILocation(line: 180, column: 1, scope: !4746)
!5087 = !{i64 2147618667, i64 2147618710, i64 2147618750}
!5088 = !DILocation(line: 181, column: 1, scope: !4746)
!5089 = !{i64 2147618851, i64 2147618894, i64 2147618934}
!5090 = !DILocation(line: 182, column: 1, scope: !4746)
!5091 = !{i64 2147619038, i64 2147619081, i64 2147619121}
!5092 = !DILocation(line: 183, column: 1, scope: !4746)
!5093 = !{i64 2147619222, i64 2147619265, i64 2147619305}
!5094 = !DILocation(line: 184, column: 1, scope: !4746)
!5095 = !{i64 2147619460, i64 2147619503, i64 2147619543}
!5096 = !DILocation(line: 185, column: 1, scope: !4746)
!5097 = !{i64 2147619690, i64 2147619733, i64 2147619773}
!5098 = !DILocation(line: 186, column: 1, scope: !4746)
!5099 = !{i64 2147619919, i64 2147619962, i64 2147620002}
!5100 = !DILocation(line: 187, column: 1, scope: !4746)
!5101 = !{i64 2147620106, i64 2147620149, i64 2147620189}
!5102 = !DILocation(line: 188, column: 1, scope: !4746)
!5103 = !{i64 2147620302, i64 2147620345, i64 2147620385}
!5104 = !DILocation(line: 189, column: 1, scope: !4746)
!5105 = !{i64 2147620510, i64 2147620553, i64 2147620593}
!5106 = !DILocation(line: 190, column: 1, scope: !4746)
!5107 = !{i64 2147620722, i64 2147620765, i64 2147620805}
!5108 = !DILocation(line: 191, column: 1, scope: !4746)
!5109 = !{i64 2147620921, i64 2147620964, i64 2147621004}
!5110 = !DILocation(line: 192, column: 1, scope: !4746)
!5111 = !{i64 2147621159, i64 2147621202, i64 2147621242}
!5112 = !DILocation(line: 193, column: 1, scope: !4746)
!5113 = !{i64 2147621355, i64 2147621398, i64 2147621438}
!5114 = !DILocation(line: 194, column: 1, scope: !4746)
!5115 = !{i64 2147621557, i64 2147621600, i64 2147621640}
!5116 = !DILocation(line: 195, column: 1, scope: !4746)
!5117 = !{i64 2147621750, i64 2147621793, i64 2147621833}
!5118 = !DILocation(line: 196, column: 1, scope: !4746)
!5119 = !{i64 2147621984, i64 2147622027, i64 2147622067}
!5120 = !DILocation(line: 197, column: 1, scope: !4746)
!5121 = !{i64 2147622147, i64 2147622190, i64 2147622230}
!5122 = !DILocation(line: 198, column: 1, scope: !4746)
!5123 = !{i64 2147622386, i64 2147622429, i64 2147622469}
!5124 = !DILocation(line: 199, column: 1, scope: !4746)
!5125 = !{i64 2147622625, i64 2147622668, i64 2147622708}
!5126 = !DILocation(line: 200, column: 1, scope: !4746)
!5127 = !{i64 2147622861, i64 2147622904, i64 2147622944}
!5128 = !DILocation(line: 201, column: 1, scope: !4746)
!5129 = !{i64 2147623091, i64 2147623134, i64 2147623174}
!5130 = !DILocation(line: 202, column: 1, scope: !4746)
!5131 = !{i64 2147623278, i64 2147623321, i64 2147623361}
!5132 = !DILocation(line: 203, column: 1, scope: !4746)
!5133 = !{i64 2147623477, i64 2147623520, i64 2147623560}
!5134 = !DILocation(line: 204, column: 1, scope: !4746)
!5135 = !{i64 2147623748, i64 2147623791, i64 2147623831}
!5136 = !DILocation(line: 205, column: 1, scope: !4746)
!5137 = !{i64 2147623923, i64 2147623966, i64 2147624006}
!5138 = !DILocation(line: 206, column: 1, scope: !4746)
!5139 = !{i64 2147624157, i64 2147624200, i64 2147624240}
!5140 = !DILocation(line: 207, column: 1, scope: !4746)
!5141 = !{i64 2147624365, i64 2147624408, i64 2147624448}
!5142 = !DILocation(line: 208, column: 1, scope: !4746)
!5143 = !{i64 2147624583, i64 2147624626, i64 2147624666}
!5144 = !DILocation(line: 209, column: 1, scope: !4746)
!5145 = !{i64 2147624773, i64 2147624816, i64 2147624856}
!5146 = !DILocation(line: 210, column: 1, scope: !4746)
!5147 = !{i64 2147624969, i64 2147625012, i64 2147625052}
!5148 = !DILocation(line: 211, column: 1, scope: !4746)
!5149 = !{i64 2147625175, i64 2147625218, i64 2147625258}
!5150 = !DILocation(line: 212, column: 1, scope: !4746)
!5151 = !{i64 2147625380, i64 2147625423, i64 2147625463}
!5152 = !DILocation(line: 213, column: 1, scope: !4746)
!5153 = !{i64 2147625606, i64 2147625649, i64 2147625689}
!5154 = !DILocation(line: 214, column: 1, scope: !4746)
!5155 = !{i64 2147625838, i64 2147625881, i64 2147625921}
!5156 = !DILocation(line: 215, column: 1, scope: !4746)
!5157 = !{i64 2147626022, i64 2147626065, i64 2147626105}
!5158 = !DILocation(line: 216, column: 1, scope: !4746)
!5159 = !{i64 2147630292, i64 2147630335, i64 2147630375}
!5160 = !DILocation(line: 217, column: 1, scope: !4746)
!5161 = !{i64 2147630476, i64 2147630519, i64 2147630559}
!5162 = !DILocation(line: 218, column: 1, scope: !4746)
!5163 = !{i64 2147630702, i64 2147630745, i64 2147630785}
!5164 = !DILocation(line: 219, column: 1, scope: !4746)
!5165 = !{i64 2147630928, i64 2147630971, i64 2147631011}
!5166 = !DILocation(line: 220, column: 1, scope: !4746)
!5167 = !{i64 2147631154, i64 2147631197, i64 2147631237}
!5168 = !DILocation(line: 221, column: 1, scope: !4746)
!5169 = !{i64 2147631380, i64 2147631423, i64 2147631463}
!5170 = !DILocation(line: 222, column: 1, scope: !4746)
!5171 = !{i64 2147631606, i64 2147631649, i64 2147631689}
!5172 = !DILocation(line: 223, column: 1, scope: !4746)
!5173 = !{i64 2147631838, i64 2147631881, i64 2147631921}
!5174 = !DILocation(line: 224, column: 1, scope: !4746)
!5175 = !{i64 2147632076, i64 2147632119, i64 2147632159}
!5176 = !DILocation(line: 225, column: 1, scope: !4746)
!5177 = !{i64 2147632296, i64 2147632339, i64 2147632379}
!5178 = !DILocation(line: 226, column: 1, scope: !4746)
!5179 = !{i64 2147632540, i64 2147632583, i64 2147632623}
!5180 = !DILocation(line: 227, column: 1, scope: !4746)
!5181 = !{i64 2147632781, i64 2147632824, i64 2147632864}
!5182 = !DILocation(line: 228, column: 1, scope: !4746)
!5183 = !{i64 2147633016, i64 2147633059, i64 2147633099}
!5184 = !DILocation(line: 229, column: 1, scope: !4746)
!5185 = !{i64 2147633248, i64 2147633291, i64 2147633331}
!5186 = !DILocation(line: 230, column: 1, scope: !4746)
!5187 = !{i64 2147633450, i64 2147633493, i64 2147633533}
!5188 = !DILocation(line: 231, column: 1, scope: !4746)
!5189 = !{i64 2147633700, i64 2147633743, i64 2147633783}
!5190 = !DILocation(line: 232, column: 1, scope: !4746)
!5191 = !{i64 2147633938, i64 2147633981, i64 2147634021}
!5192 = !DILocation(line: 233, column: 1, scope: !4746)
!5193 = !{i64 2147634122, i64 2147634165, i64 2147634205}
!5194 = !DILocation(line: 234, column: 1, scope: !4746)
!5195 = !{i64 2147634346, i64 2147634389, i64 2147634429}
!5196 = !DILocation(line: 235, column: 1, scope: !4746)
!5197 = !{i64 2147634584, i64 2147634627, i64 2147634667}
!5198 = !DILocation(line: 236, column: 1, scope: !4746)
!5199 = !{i64 2147634822, i64 2147634865, i64 2147634905}
!5200 = !DILocation(line: 237, column: 1, scope: !4746)
!5201 = !{i64 2147635037, i64 2147635080, i64 2147635120}
!5202 = !DILocation(line: 238, column: 1, scope: !4746)
!5203 = !{i64 2147635266, i64 2147635309, i64 2147635349}
!5204 = !DILocation(line: 239, column: 1, scope: !4746)
!5205 = !{i64 2147635519, i64 2147635562, i64 2147635602}
!5206 = !DILocation(line: 240, column: 1, scope: !4746)
!5207 = !{i64 2147635712, i64 2147635755, i64 2147635795}
!5208 = !DILocation(line: 241, column: 1, scope: !4746)
!5209 = !{i64 2147635965, i64 2147636008, i64 2147636048}
!5210 = !DILocation(line: 242, column: 1, scope: !4746)
!5211 = !{i64 2147636179, i64 2147636222, i64 2147636262}
!5212 = !DILocation(line: 243, column: 1, scope: !4746)
!5213 = !{i64 2147636387, i64 2147636430, i64 2147636470}
!5214 = !DILocation(line: 244, column: 1, scope: !4746)
!5215 = !{i64 2147636577, i64 2147636620, i64 2147636660}
!5216 = !DILocation(line: 245, column: 1, scope: !4746)
!5217 = !{i64 2147636791, i64 2147636834, i64 2147636874}
!5218 = !DILocation(line: 246, column: 1, scope: !4746)
!5219 = !{i64 2147637053, i64 2147637096, i64 2147637136}
!5220 = !DILocation(line: 247, column: 1, scope: !4746)
!5221 = !{i64 2147637264, i64 2147637307, i64 2147637347}
!5222 = !DILocation(line: 248, column: 1, scope: !4746)
!5223 = !{i64 2147637508, i64 2147637551, i64 2147637591}
!5224 = !DILocation(line: 249, column: 1, scope: !4746)
!5225 = !{i64 2147637719, i64 2147637762, i64 2147637802}
!5226 = !DILocation(line: 250, column: 1, scope: !4746)
!5227 = !{i64 2147637948, i64 2147637991, i64 2147638031}
!5228 = !DILocation(line: 251, column: 1, scope: !4746)
!5229 = !{i64 2147638213, i64 2147638256, i64 2147638296}
!5230 = !DILocation(line: 252, column: 1, scope: !4746)
!5231 = !{i64 2147638418, i64 2147638461, i64 2147638501}
!5232 = !DILocation(line: 253, column: 1, scope: !4746)
!5233 = !{i64 2147642675, i64 2147642718, i64 2147642758}
!5234 = !DILocation(line: 254, column: 1, scope: !4746)
!5235 = !{i64 2147642898, i64 2147642941, i64 2147642981}
!5236 = !DILocation(line: 255, column: 1, scope: !4746)
!5237 = !{i64 2147643061, i64 2147643104, i64 2147643144}
!5238 = !DILocation(line: 256, column: 1, scope: !4746)
!5239 = !{i64 2147643266, i64 2147643309, i64 2147643349}
!5240 = !DILocation(line: 257, column: 1, scope: !4746)
!5241 = !{i64 2147643486, i64 2147643529, i64 2147643569}
!5242 = !DILocation(line: 258, column: 1, scope: !4746)
!5243 = !{i64 2147643697, i64 2147643740, i64 2147643780}
!5244 = !DILocation(line: 259, column: 1, scope: !4746)
!5245 = !{i64 2147643911, i64 2147643954, i64 2147643994}
!5246 = !DILocation(line: 260, column: 1, scope: !4746)
!5247 = !{i64 2147644125, i64 2147644168, i64 2147644208}
!5248 = !DILocation(line: 261, column: 1, scope: !4746)
!5249 = !{i64 2147644336, i64 2147644379, i64 2147644419}
!5250 = !DILocation(line: 262, column: 1, scope: !4746)
!5251 = !{i64 2147644529, i64 2147644572, i64 2147644612}
!5252 = !DILocation(line: 263, column: 1, scope: !4746)
!5253 = !{i64 2147644728, i64 2147644771, i64 2147644811}
!5254 = !DILocation(line: 264, column: 1, scope: !4746)
!5255 = !{i64 2147644900, i64 2147644943, i64 2147644983}
!5256 = !DILocation(line: 265, column: 1, scope: !4746)
!5257 = !{i64 2147645093, i64 2147645136, i64 2147645176}
!5258 = !DILocation(line: 266, column: 1, scope: !4746)
!5259 = !{i64 2147645289, i64 2147645332, i64 2147645372}
!5260 = !DILocation(line: 267, column: 1, scope: !4746)
!5261 = !{i64 2147645516, i64 2147645559, i64 2147645599}
!5262 = !DILocation(line: 268, column: 1, scope: !4746)
!5263 = !{i64 2147645733, i64 2147645776, i64 2147645816}
!5264 = !DILocation(line: 269, column: 1, scope: !4746)
!5265 = !{i64 2147646025, i64 2147646068, i64 2147646108}
!5266 = !DILocation(line: 270, column: 1, scope: !4746)
!5267 = !{i64 2147646257, i64 2147646300, i64 2147646340}
!5268 = !DILocation(line: 271, column: 1, scope: !4746)
!5269 = !{i64 2147646474, i64 2147646517, i64 2147646557}
!5270 = !DILocation(line: 272, column: 1, scope: !4746)
!5271 = !{i64 2147646681, i64 2147646724, i64 2147646764}
!5272 = !DILocation(line: 273, column: 1, scope: !4746)
!5273 = !{i64 2147646882, i64 2147646925, i64 2147646965}
!5274 = !DILocation(line: 274, column: 1, scope: !4746)
!5275 = !{i64 2147647114, i64 2147647157, i64 2147647197}
!5276 = !DILocation(line: 275, column: 1, scope: !4746)
!5277 = !{i64 2147647322, i64 2147647365, i64 2147647405}
!5278 = !DILocation(line: 276, column: 1, scope: !4746)
!5279 = !{i64 2147647512, i64 2147647555, i64 2147647595}
!5280 = !DILocation(line: 277, column: 1, scope: !4746)
!5281 = !{i64 2147647738, i64 2147647781, i64 2147647821}
!5282 = !DILocation(line: 278, column: 1, scope: !4746)
!5283 = !{i64 2147647927, i64 2147647970, i64 2147648010}
!5284 = !DILocation(line: 279, column: 1, scope: !4746)
!5285 = !{i64 2147648198, i64 2147648241, i64 2147648281}
!5286 = !DILocation(line: 280, column: 1, scope: !4746)
!5287 = !{i64 2147648418, i64 2147648461, i64 2147648501}
!5288 = !DILocation(line: 281, column: 1, scope: !4746)
!5289 = !{i64 2147648671, i64 2147648714, i64 2147648754}
!5290 = !DILocation(line: 282, column: 1, scope: !4746)
!5291 = !{i64 2147648879, i64 2147648922, i64 2147648962}
!5292 = !DILocation(line: 283, column: 1, scope: !4746)
!5293 = !{i64 2147649111, i64 2147649154, i64 2147649194}
!5294 = !DILocation(line: 284, column: 1, scope: !4746)
!5295 = !{i64 2147649322, i64 2147649365, i64 2147649405}
!5296 = !DILocation(line: 285, column: 1, scope: !4746)
!5297 = !{i64 2147649512, i64 2147649555, i64 2147649595}
!5298 = !DILocation(line: 286, column: 1, scope: !4746)
!5299 = !{i64 2147649726, i64 2147649769, i64 2147649809}
!5300 = !DILocation(line: 287, column: 1, scope: !4746)
!5301 = !{i64 2147649925, i64 2147649968, i64 2147650008}
!5302 = !DILocation(line: 288, column: 1, scope: !4746)
!5303 = !{i64 2147650112, i64 2147650155, i64 2147650195}
!5304 = !DILocation(line: 289, column: 1, scope: !4746)
!5305 = !{i64 2147650320, i64 2147650363, i64 2147650403}
!5306 = !DILocation(line: 290, column: 1, scope: !4746)
!5307 = !{i64 2147650549, i64 2147650592, i64 2147650632}
!5308 = !DILocation(line: 291, column: 1, scope: !4746)
!5309 = !{i64 2147650751, i64 2147650794, i64 2147650834}
!5310 = !DILocation(line: 292, column: 1, scope: !4746)
!5311 = !{i64 2147650950, i64 2147650993, i64 2147651033}
!5312 = !DILocation(line: 293, column: 1, scope: !4746)
!5313 = !{i64 2147651167, i64 2147651210, i64 2147651250}
!5314 = !DILocation(line: 295, column: 1, scope: !4746)
!5315 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !129, file: !129, line: 30, type: !136, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !5316)
!5316 = !{!5317, !5318}
!5317 = !DILocalVariable(name: "arg", arg: 1, scope: !5315, file: !129, line: 30, type: !138)
!5318 = !DILocalVariable(name: "key", scope: !5315, file: !129, line: 32, type: !121)
!5319 = !DILocation(line: 0, scope: !5315)
!5320 = !DILocation(line: 37, column: 2, scope: !5315)
!5321 = !DILocation(line: 38, column: 2, scope: !5315)
!5322 = !DILocation(line: 55, column: 2, scope: !5323, inlinedAt: !5330)
!5323 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5324, file: !5324, line: 42, type: !5325, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !5327)
!5324 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5325 = !DISubroutineType(types: !5326)
!5326 = !{!32}
!5327 = !{!5328, !5329}
!5328 = !DILocalVariable(name: "key", scope: !5323, file: !5324, line: 44, type: !32)
!5329 = !DILocalVariable(name: "tmp", scope: !5323, file: !5324, line: 53, type: !32)
!5330 = distinct !DILocation(line: 40, column: 8, scope: !5315)
!5331 = !{i64 2101576}
!5332 = !DILocation(line: 0, scope: !5323, inlinedAt: !5330)
!5333 = !DILocalVariable(name: "key", arg: 1, scope: !5334, file: !5324, line: 84, type: !32)
!5334 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5324, file: !5324, line: 84, type: !5335, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !5337)
!5335 = !DISubroutineType(types: !5336)
!5336 = !{null, !32}
!5337 = !{!5333}
!5338 = !DILocation(line: 0, scope: !5334, inlinedAt: !5339)
!5339 = distinct !DILocation(line: 47, column: 2, scope: !5315)
!5340 = !DILocation(line: 95, column: 2, scope: !5334, inlinedAt: !5339)
!5341 = !{i64 2102393}
!5342 = !DILocation(line: 51, column: 18, scope: !5315)
!5343 = !DILocation(line: 53, column: 2, scope: !5315)
!5344 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !5345, file: !5345, line: 1609, type: !2928, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !322)
!5345 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5346 = !DILocation(line: 1611, column: 3, scope: !5344)
!5347 = !DILocation(line: 1612, column: 1, scope: !5344)
!5348 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !5345, file: !5345, line: 1629, type: !2928, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !322)
!5349 = !DILocation(line: 1631, column: 3, scope: !5348)
!5350 = !DILocation(line: 1632, column: 1, scope: !5348)
!5351 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !171, file: !171, line: 26, type: !177, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !168, retainedNodes: !5352)
!5352 = !{!5353}
!5353 = !DILocalVariable(name: "dev", arg: 1, scope: !5351, file: !171, line: 26, type: !179)
!5354 = !DILocation(line: 0, scope: !5351)
!5355 = !DILocation(line: 68, column: 2, scope: !5351)
!5356 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !5357, file: !5357, line: 57, type: !5358, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2391, retainedNodes: !5404)
!5357 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5358 = !DISubroutineType(types: !5359)
!5359 = !{null, !32, !5360}
!5360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5361, size: 32)
!5361 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5362)
!5362 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2511, line: 141, baseType: !5363)
!5363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2511, line: 97, size: 256, elements: !5364)
!5364 = !{!5365}
!5365 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !5363, file: !2511, line: 107, baseType: !5366, size: 256)
!5366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2511, line: 98, size: 256, elements: !5367)
!5367 = !{!5368, !5373, !5378, !5383, !5388, !5393, !5398, !5403}
!5368 = !DIDerivedType(tag: DW_TAG_member, scope: !5366, file: !2511, line: 99, baseType: !5369, size: 32)
!5369 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5366, file: !2511, line: 99, size: 32, elements: !5370)
!5370 = !{!5371, !5372}
!5371 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !5369, file: !2511, line: 99, baseType: !121, size: 32)
!5372 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !5369, file: !2511, line: 99, baseType: !121, size: 32)
!5373 = !DIDerivedType(tag: DW_TAG_member, scope: !5366, file: !2511, line: 100, baseType: !5374, size: 32, offset: 32)
!5374 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5366, file: !2511, line: 100, size: 32, elements: !5375)
!5375 = !{!5376, !5377}
!5376 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !5374, file: !2511, line: 100, baseType: !121, size: 32)
!5377 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !5374, file: !2511, line: 100, baseType: !121, size: 32)
!5378 = !DIDerivedType(tag: DW_TAG_member, scope: !5366, file: !2511, line: 101, baseType: !5379, size: 32, offset: 64)
!5379 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5366, file: !2511, line: 101, size: 32, elements: !5380)
!5380 = !{!5381, !5382}
!5381 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !5379, file: !2511, line: 101, baseType: !121, size: 32)
!5382 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !5379, file: !2511, line: 101, baseType: !121, size: 32)
!5383 = !DIDerivedType(tag: DW_TAG_member, scope: !5366, file: !2511, line: 102, baseType: !5384, size: 32, offset: 96)
!5384 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5366, file: !2511, line: 102, size: 32, elements: !5385)
!5385 = !{!5386, !5387}
!5386 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !5384, file: !2511, line: 102, baseType: !121, size: 32)
!5387 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !5384, file: !2511, line: 102, baseType: !121, size: 32)
!5388 = !DIDerivedType(tag: DW_TAG_member, scope: !5366, file: !2511, line: 103, baseType: !5389, size: 32, offset: 128)
!5389 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5366, file: !2511, line: 103, size: 32, elements: !5390)
!5390 = !{!5391, !5392}
!5391 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !5389, file: !2511, line: 103, baseType: !121, size: 32)
!5392 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !5389, file: !2511, line: 103, baseType: !121, size: 32)
!5393 = !DIDerivedType(tag: DW_TAG_member, scope: !5366, file: !2511, line: 104, baseType: !5394, size: 32, offset: 160)
!5394 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5366, file: !2511, line: 104, size: 32, elements: !5395)
!5395 = !{!5396, !5397}
!5396 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !5394, file: !2511, line: 104, baseType: !121, size: 32)
!5397 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !5394, file: !2511, line: 104, baseType: !121, size: 32)
!5398 = !DIDerivedType(tag: DW_TAG_member, scope: !5366, file: !2511, line: 105, baseType: !5399, size: 32, offset: 192)
!5399 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5366, file: !2511, line: 105, size: 32, elements: !5400)
!5400 = !{!5401, !5402}
!5401 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !5399, file: !2511, line: 105, baseType: !121, size: 32)
!5402 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !5399, file: !2511, line: 105, baseType: !121, size: 32)
!5403 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !5366, file: !2511, line: 106, baseType: !121, size: 32, offset: 224)
!5404 = !{!5405, !5406}
!5405 = !DILocalVariable(name: "reason", arg: 1, scope: !5356, file: !5357, line: 57, type: !32)
!5406 = !DILocalVariable(name: "esf", arg: 2, scope: !5356, file: !5357, line: 57, type: !5360)
!5407 = !DILocation(line: 0, scope: !5356)
!5408 = !DILocation(line: 63, column: 2, scope: !5356)
!5409 = !DILocation(line: 64, column: 1, scope: !5356)
!5410 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !5357, file: !5357, line: 82, type: !5411, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2391, retainedNodes: !5426)
!5411 = !DISubroutineType(types: !5412)
!5412 = !{null, !5360, !5413}
!5413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5414, size: 32)
!5414 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !284, line: 37, baseType: !5415)
!5415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !5416)
!5416 = !{!5417, !5418, !5419, !5420, !5421, !5422, !5423, !5424, !5425}
!5417 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5415, file: !284, line: 26, baseType: !121, size: 32)
!5418 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5415, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!5419 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5415, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!5420 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5415, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!5421 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5415, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!5422 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5415, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!5423 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5415, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!5424 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5415, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!5425 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5415, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!5426 = !{!5427, !5428, !5429}
!5427 = !DILocalVariable(name: "esf", arg: 1, scope: !5410, file: !5357, line: 82, type: !5360)
!5428 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !5410, file: !5357, line: 82, type: !5413)
!5429 = !DILocalVariable(name: "reason", scope: !5410, file: !5357, line: 88, type: !32)
!5430 = !DILocation(line: 0, scope: !5410)
!5431 = !DILocation(line: 88, column: 35, scope: !5410)
!5432 = !DILocation(line: 108, column: 2, scope: !5410)
!5433 = !DILocation(line: 131, column: 1, scope: !5410)
!5434 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !5357, file: !5357, line: 133, type: !5435, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2391, retainedNodes: !5437)
!5435 = !DISubroutineType(types: !5436)
!5436 = !{null, !102}
!5437 = !{!5438, !5439, !5440}
!5438 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !5434, file: !5357, line: 133, type: !102)
!5439 = !DILocalVariable(name: "ssf_contents", scope: !5434, file: !5357, line: 135, type: !707)
!5440 = !DILocalVariable(name: "oops_esf", scope: !5434, file: !5357, line: 136, type: !5362)
!5441 = !DILocation(line: 0, scope: !5434)
!5442 = !DILocation(line: 136, column: 2, scope: !5434)
!5443 = !DILocation(line: 136, column: 15, scope: !5434)
!5444 = !DILocation(line: 139, column: 22, scope: !5434)
!5445 = !DILocation(line: 139, column: 17, scope: !5434)
!5446 = !DILocation(line: 139, column: 20, scope: !5434)
!5447 = !DILocation(line: 141, column: 2, scope: !5434)
!5448 = !DILocation(line: 142, column: 2, scope: !5434)
!5449 = distinct !DISubprogram(name: "arch_irq_enable", scope: !5450, file: !5450, line: 40, type: !5335, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2402, retainedNodes: !5451)
!5450 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5451 = !{!5452}
!5452 = !DILocalVariable(name: "irq", arg: 1, scope: !5449, file: !5450, line: 40, type: !32)
!5453 = !DILocation(line: 0, scope: !5449)
!5454 = !DILocation(line: 42, column: 2, scope: !5449)
!5455 = !DILocation(line: 43, column: 1, scope: !5449)
!5456 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !356, file: !356, line: 1684, type: !5457, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2402, retainedNodes: !5459)
!5457 = !DISubroutineType(types: !5458)
!5458 = !{null, !613}
!5459 = !{!5460}
!5460 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5456, file: !356, line: 1684, type: !613)
!5461 = !DILocation(line: 0, scope: !5456)
!5462 = !DILocation(line: 1686, column: 23, scope: !5463)
!5463 = distinct !DILexicalBlock(scope: !5456, file: !356, line: 1686, column: 7)
!5464 = !DILocation(line: 1686, column: 7, scope: !5456)
!5465 = !DILocation(line: 1688, column: 5, scope: !5466)
!5466 = distinct !DILexicalBlock(scope: !5463, file: !356, line: 1687, column: 3)
!5467 = !{i64 2151069501}
!5468 = !DILocation(line: 1689, column: 81, scope: !5466)
!5469 = !DILocation(line: 1689, column: 60, scope: !5466)
!5470 = !DILocation(line: 1689, column: 34, scope: !5466)
!5471 = !DILocation(line: 1689, column: 5, scope: !5466)
!5472 = !DILocation(line: 1689, column: 43, scope: !5466)
!5473 = !DILocation(line: 1690, column: 5, scope: !5466)
!5474 = !{i64 2151069615}
!5475 = !DILocation(line: 1691, column: 3, scope: !5466)
!5476 = !DILocation(line: 1692, column: 1, scope: !5456)
!5477 = distinct !DISubprogram(name: "arch_irq_disable", scope: !5450, file: !5450, line: 45, type: !5335, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2402, retainedNodes: !5478)
!5478 = !{!5479}
!5479 = !DILocalVariable(name: "irq", arg: 1, scope: !5477, file: !5450, line: 45, type: !32)
!5480 = !DILocation(line: 0, scope: !5477)
!5481 = !DILocation(line: 47, column: 2, scope: !5477)
!5482 = !DILocation(line: 48, column: 1, scope: !5477)
!5483 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !356, file: !356, line: 1722, type: !5457, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2402, retainedNodes: !5484)
!5484 = !{!5485}
!5485 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5483, file: !356, line: 1722, type: !613)
!5486 = !DILocation(line: 0, scope: !5483)
!5487 = !DILocation(line: 1724, column: 23, scope: !5488)
!5488 = distinct !DILexicalBlock(scope: !5483, file: !356, line: 1724, column: 7)
!5489 = !DILocation(line: 1724, column: 7, scope: !5483)
!5490 = !DILocation(line: 1726, column: 81, scope: !5491)
!5491 = distinct !DILexicalBlock(scope: !5488, file: !356, line: 1725, column: 3)
!5492 = !DILocation(line: 1726, column: 60, scope: !5491)
!5493 = !DILocation(line: 1726, column: 34, scope: !5491)
!5494 = !DILocation(line: 1726, column: 5, scope: !5491)
!5495 = !DILocation(line: 1726, column: 43, scope: !5491)
!5496 = !DILocation(line: 271, column: 3, scope: !5497, inlinedAt: !5499)
!5497 = distinct !DISubprogram(name: "__DSB", scope: !5498, file: !5498, line: 269, type: !2928, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2402, retainedNodes: !322)
!5498 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5499 = distinct !DILocation(line: 1727, column: 5, scope: !5491)
!5500 = !{i64 3523884}
!5501 = !DILocation(line: 260, column: 3, scope: !5502, inlinedAt: !5503)
!5502 = distinct !DISubprogram(name: "__ISB", scope: !5498, file: !5498, line: 258, type: !2928, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2402, retainedNodes: !322)
!5503 = distinct !DILocation(line: 1728, column: 5, scope: !5491)
!5504 = !{i64 3523601}
!5505 = !DILocation(line: 1729, column: 3, scope: !5491)
!5506 = !DILocation(line: 1730, column: 1, scope: !5483)
!5507 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !5450, file: !5450, line: 50, type: !5508, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2402, retainedNodes: !5510)
!5508 = !DISubroutineType(types: !5509)
!5509 = !{!103, !32}
!5510 = !{!5511}
!5511 = !DILocalVariable(name: "irq", arg: 1, scope: !5507, file: !5450, line: 50, type: !32)
!5512 = !DILocation(line: 0, scope: !5507)
!5513 = !DILocation(line: 52, column: 20, scope: !5507)
!5514 = !DILocation(line: 52, column: 9, scope: !5507)
!5515 = !DILocation(line: 52, column: 41, scope: !5507)
!5516 = !DILocation(line: 52, column: 39, scope: !5507)
!5517 = !DILocation(line: 52, column: 2, scope: !5507)
!5518 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !5450, file: !5450, line: 64, type: !5519, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2402, retainedNodes: !5521)
!5519 = !DISubroutineType(types: !5520)
!5520 = !{null, !32, !32, !121}
!5521 = !{!5522, !5523, !5524}
!5522 = !DILocalVariable(name: "irq", arg: 1, scope: !5518, file: !5450, line: 64, type: !32)
!5523 = !DILocalVariable(name: "prio", arg: 2, scope: !5518, file: !5450, line: 64, type: !32)
!5524 = !DILocalVariable(name: "flags", arg: 3, scope: !5518, file: !5450, line: 64, type: !121)
!5525 = !DILocation(line: 0, scope: !5518)
!5526 = !DILocation(line: 83, column: 8, scope: !5527)
!5527 = distinct !DILexicalBlock(scope: !5528, file: !5450, line: 82, column: 9)
!5528 = distinct !DILexicalBlock(scope: !5518, file: !5450, line: 76, column: 6)
!5529 = !DILocation(line: 95, column: 2, scope: !5518)
!5530 = !DILocation(line: 96, column: 1, scope: !5518)
!5531 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !356, file: !356, line: 1814, type: !5532, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2402, retainedNodes: !5534)
!5532 = !DISubroutineType(types: !5533)
!5533 = !{null, !613, !121}
!5534 = !{!5535, !5536}
!5535 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5531, file: !356, line: 1814, type: !613)
!5536 = !DILocalVariable(name: "priority", arg: 2, scope: !5531, file: !356, line: 1814, type: !121)
!5537 = !DILocation(line: 0, scope: !5531)
!5538 = !DILocation(line: 0, scope: !5539)
!5539 = distinct !DILexicalBlock(scope: !5531, file: !356, line: 1816, column: 7)
!5540 = !DILocation(line: 1816, column: 7, scope: !5531)
!5541 = !DILocation(line: 1824, column: 1, scope: !5531)
!5542 = distinct !DISubprogram(name: "z_irq_spurious", scope: !5450, file: !5450, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2402, retainedNodes: !5543)
!5543 = !{!5544}
!5544 = !DILocalVariable(name: "unused", arg: 1, scope: !5542, file: !5450, line: 155, type: !13)
!5545 = !DILocation(line: 0, scope: !5542)
!5546 = !DILocation(line: 159, column: 2, scope: !5542)
!5547 = !DILocation(line: 160, column: 1, scope: !5542)
!5548 = distinct !DISubprogram(name: "z_arm_nmi", scope: !5549, file: !5549, line: 87, type: !2928, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !322)
!5549 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5550 = !DILocation(line: 89, column: 2, scope: !5548)
!5551 = !DILocation(line: 90, column: 2, scope: !5548)
!5552 = !DILocation(line: 91, column: 1, scope: !5548)
!5553 = !DISubprogram(name: "z_SysNmiOnReset", scope: !5549, file: !5549, line: 23, type: !2928, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!5554 = !DISubprogram(name: "z_arm_int_exit", scope: !5555, file: !5555, line: 153, type: !2928, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!5555 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5556 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !5557, file: !5557, line: 256, type: !2928, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2450, retainedNodes: !322)
!5557 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5558 = !DILocation(line: 258, column: 2, scope: !5556)
!5559 = !DILocation(line: 260, column: 2, scope: !5556)
!5560 = !DILocation(line: 262, column: 2, scope: !5556)
!5561 = !DILocation(line: 263, column: 2, scope: !5556)
!5562 = !DILocation(line: 267, column: 2, scope: !5556)
!5563 = !DILocation(line: 268, column: 2, scope: !5556)
!5564 = distinct !DISubprogram(name: "relocate_vector_table", scope: !5557, file: !5557, line: 53, type: !2928, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2450, retainedNodes: !322)
!5565 = !DILocation(line: 55, column: 12, scope: !5564)
!5566 = !DILocation(line: 271, column: 3, scope: !5567, inlinedAt: !5568)
!5567 = distinct !DISubprogram(name: "__DSB", scope: !5498, file: !5498, line: 269, type: !2928, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2450, retainedNodes: !322)
!5568 = distinct !DILocation(line: 56, column: 2, scope: !5564)
!5569 = !{i64 3522555}
!5570 = !DILocation(line: 260, column: 3, scope: !5571, inlinedAt: !5572)
!5571 = distinct !DISubprogram(name: "__ISB", scope: !5498, file: !5498, line: 258, type: !2928, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2450, retainedNodes: !322)
!5572 = distinct !DILocation(line: 57, column: 2, scope: !5564)
!5573 = !{i64 3522272}
!5574 = !DILocation(line: 58, column: 1, scope: !5564)
!5575 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !5557, file: !5557, line: 96, type: !2928, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2450, retainedNodes: !322)
!5576 = !DILocation(line: 103, column: 13, scope: !5575)
!5577 = !DILocation(line: 975, column: 3, scope: !5578, inlinedAt: !5583)
!5578 = distinct !DISubprogram(name: "__get_CONTROL", scope: !5498, file: !5498, line: 971, type: !5579, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2450, retainedNodes: !5581)
!5579 = !DISubroutineType(types: !5580)
!5580 = !{!121}
!5581 = !{!5582}
!5582 = !DILocalVariable(name: "result", scope: !5578, file: !5498, line: 973, type: !121)
!5583 = distinct !DILocation(line: 189, column: 16, scope: !5575)
!5584 = !{i64 3543385}
!5585 = !DILocation(line: 0, scope: !5578, inlinedAt: !5583)
!5586 = !DILocation(line: 189, column: 32, scope: !5575)
!5587 = !DILocalVariable(name: "control", arg: 1, scope: !5588, file: !5498, line: 1001, type: !121)
!5588 = distinct !DISubprogram(name: "__set_CONTROL", scope: !5498, file: !5498, line: 1001, type: !5589, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2450, retainedNodes: !5591)
!5589 = !DISubroutineType(types: !5590)
!5590 = !{null, !121}
!5591 = !{!5587}
!5592 = !DILocation(line: 0, scope: !5588, inlinedAt: !5593)
!5593 = distinct !DILocation(line: 189, column: 2, scope: !5575)
!5594 = !DILocation(line: 1003, column: 3, scope: !5588, inlinedAt: !5593)
!5595 = !{i64 3544105}
!5596 = !DILocation(line: 260, column: 3, scope: !5571, inlinedAt: !5597)
!5597 = distinct !DILocation(line: 1004, column: 3, scope: !5588, inlinedAt: !5593)
!5598 = !DILocation(line: 191, column: 1, scope: !5575)
!5599 = distinct !DISubprogram(name: "arch_swap", scope: !5600, file: !5600, line: 33, type: !5508, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2478, retainedNodes: !5601)
!5600 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5601 = !{!5602}
!5602 = !DILocalVariable(name: "key", arg: 1, scope: !5599, file: !5600, line: 33, type: !32)
!5603 = !DILocation(line: 0, scope: !5599)
!5604 = !DILocation(line: 36, column: 2, scope: !5599)
!5605 = !DILocation(line: 36, column: 17, scope: !5599)
!5606 = !DILocation(line: 36, column: 25, scope: !5599)
!5607 = !DILocation(line: 37, column: 37, scope: !5599)
!5608 = !DILocation(line: 37, column: 17, scope: !5599)
!5609 = !DILocation(line: 37, column: 35, scope: !5599)
!5610 = !DILocation(line: 41, column: 12, scope: !5599)
!5611 = !DILocalVariable(name: "key", arg: 1, scope: !5612, file: !5324, line: 84, type: !32)
!5612 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5324, file: !5324, line: 84, type: !5335, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2478, retainedNodes: !5613)
!5613 = !{!5611}
!5614 = !DILocation(line: 0, scope: !5612, inlinedAt: !5615)
!5615 = distinct !DILocation(line: 44, column: 2, scope: !5599)
!5616 = !DILocation(line: 95, column: 2, scope: !5612, inlinedAt: !5615)
!5617 = !{i64 2221877}
!5618 = !DILocation(line: 53, column: 9, scope: !5599)
!5619 = !DILocation(line: 53, column: 24, scope: !5599)
!5620 = !DILocation(line: 53, column: 2, scope: !5599)
!5621 = distinct !DISubprogram(name: "arch_new_thread", scope: !5622, file: !5622, line: 56, type: !5623, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2506, retainedNodes: !5730)
!5622 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5623 = !DISubroutineType(types: !5624)
!5624 = !{null, !5625, !5725, !977, !3351, !102, !102, !102}
!5625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5626, size: 32)
!5626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !5627)
!5627 = !{!5628, !5686, !5698, !5699, !5700, !5701, !5707, !5720}
!5628 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5626, file: !211, line: 247, baseType: !5629, size: 384)
!5629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !5630)
!5630 = !{!5631, !5655, !5662, !5663, !5664, !5673, !5674, !5675}
!5631 = !DIDerivedType(tag: DW_TAG_member, scope: !5629, file: !211, line: 60, baseType: !5632, size: 64)
!5632 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5629, file: !211, line: 60, size: 64, elements: !5633)
!5633 = !{!5634, !5649}
!5634 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !5632, file: !211, line: 61, baseType: !5635, size: 64)
!5635 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !5636)
!5636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !5637)
!5637 = !{!5638, !5644}
!5638 = !DIDerivedType(tag: DW_TAG_member, scope: !5636, file: !221, line: 38, baseType: !5639, size: 32)
!5639 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5636, file: !221, line: 38, size: 32, elements: !5640)
!5640 = !{!5641, !5643}
!5641 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5639, file: !221, line: 39, baseType: !5642, size: 32)
!5642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5636, size: 32)
!5643 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5639, file: !221, line: 40, baseType: !5642, size: 32)
!5644 = !DIDerivedType(tag: DW_TAG_member, scope: !5636, file: !221, line: 42, baseType: !5645, size: 32, offset: 32)
!5645 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5636, file: !221, line: 42, size: 32, elements: !5646)
!5646 = !{!5647, !5648}
!5647 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5645, file: !221, line: 43, baseType: !5642, size: 32)
!5648 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5645, file: !221, line: 44, baseType: !5642, size: 32)
!5649 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !5632, file: !211, line: 62, baseType: !5650, size: 64)
!5650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !5651)
!5651 = !{!5652}
!5652 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5650, file: !237, line: 50, baseType: !5653, size: 64)
!5653 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5654, size: 64, elements: !242)
!5654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5650, size: 32)
!5655 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !5629, file: !211, line: 68, baseType: !5656, size: 32, offset: 64)
!5656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5657, size: 32)
!5657 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !5658)
!5658 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !5659)
!5659 = !{!5660}
!5660 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5658, file: !247, line: 232, baseType: !5661, size: 64)
!5661 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !5636)
!5662 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !5629, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!5663 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !5629, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!5664 = !DIDerivedType(tag: DW_TAG_member, scope: !5629, file: !211, line: 90, baseType: !5665, size: 16, offset: 112)
!5665 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5629, file: !211, line: 90, size: 16, elements: !5666)
!5666 = !{!5667, !5672}
!5667 = !DIDerivedType(tag: DW_TAG_member, scope: !5665, file: !211, line: 91, baseType: !5668, size: 16)
!5668 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5665, file: !211, line: 91, size: 16, elements: !5669)
!5669 = !{!5670, !5671}
!5670 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !5668, file: !211, line: 96, baseType: !261, size: 8)
!5671 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !5668, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!5672 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !5665, file: !211, line: 100, baseType: !265, size: 16)
!5673 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !5629, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!5674 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !5629, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!5675 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5629, file: !211, line: 131, baseType: !5676, size: 192, offset: 192)
!5676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !5677)
!5677 = !{!5678, !5679, !5685}
!5678 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5676, file: !247, line: 245, baseType: !5635, size: 64)
!5679 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5676, file: !247, line: 246, baseType: !5680, size: 32, offset: 64)
!5680 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !5681)
!5681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5682, size: 32)
!5682 = !DISubroutineType(types: !5683)
!5683 = !{null, !5684}
!5684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5676, size: 32)
!5685 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !5676, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!5686 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !5626, file: !211, line: 250, baseType: !5687, size: 288, offset: 384)
!5687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !5688)
!5688 = !{!5689, !5690, !5691, !5692, !5693, !5694, !5695, !5696, !5697}
!5689 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5687, file: !284, line: 26, baseType: !121, size: 32)
!5690 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5687, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!5691 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5687, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!5692 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5687, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!5693 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5687, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!5694 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5687, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!5695 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5687, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!5696 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5687, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!5697 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5687, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!5698 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !5626, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!5699 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !5626, file: !211, line: 256, baseType: !5657, size: 64, offset: 704)
!5700 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !5626, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!5701 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !5626, file: !211, line: 300, baseType: !5702, size: 96, offset: 800)
!5702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !5703)
!5703 = !{!5704, !5705, !5706}
!5704 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5702, file: !211, line: 153, baseType: !22, size: 32)
!5705 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5702, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!5706 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !5702, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!5707 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !5626, file: !211, line: 325, baseType: !5708, size: 32, offset: 896)
!5708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5709, size: 32)
!5709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !5710)
!5710 = !{!5711, !5717, !5718}
!5711 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5709, file: !307, line: 5074, baseType: !5712, size: 96)
!5712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !5713)
!5713 = !{!5714, !5715, !5716}
!5714 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5712, file: !311, line: 57, baseType: !314, size: 32)
!5715 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5712, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!5716 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5712, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!5717 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5709, file: !307, line: 5075, baseType: !5657, size: 64, offset: 96)
!5718 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5709, file: !307, line: 5076, baseType: !5719, offset: 160)
!5719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!5720 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5626, file: !211, line: 343, baseType: !5721, size: 64, offset: 928)
!5721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !5722)
!5722 = !{!5723, !5724}
!5723 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !5721, file: !284, line: 63, baseType: !121, size: 32)
!5724 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !5721, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!5725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5726, size: 32)
!5726 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3352, line: 44, baseType: !5727)
!5727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1860, line: 47, size: 8, elements: !5728)
!5728 = !{!5729}
!5729 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5727, file: !1860, line: 48, baseType: !146, size: 8)
!5730 = !{!5731, !5732, !5733, !5734, !5735, !5736, !5737, !5738}
!5731 = !DILocalVariable(name: "thread", arg: 1, scope: !5621, file: !5622, line: 56, type: !5625)
!5732 = !DILocalVariable(name: "stack", arg: 2, scope: !5621, file: !5622, line: 56, type: !5725)
!5733 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !5621, file: !5622, line: 57, type: !977)
!5734 = !DILocalVariable(name: "entry", arg: 4, scope: !5621, file: !5622, line: 57, type: !3351)
!5735 = !DILocalVariable(name: "p1", arg: 5, scope: !5621, file: !5622, line: 58, type: !102)
!5736 = !DILocalVariable(name: "p2", arg: 6, scope: !5621, file: !5622, line: 58, type: !102)
!5737 = !DILocalVariable(name: "p3", arg: 7, scope: !5621, file: !5622, line: 58, type: !102)
!5738 = !DILocalVariable(name: "iframe", scope: !5621, file: !5622, line: 60, type: !2509)
!5739 = !DILocation(line: 0, scope: !5621)
!5740 = !DILocation(line: 85, column: 11, scope: !5621)
!5741 = !DILocation(line: 93, column: 10, scope: !5621)
!5742 = !DILocation(line: 98, column: 13, scope: !5621)
!5743 = !DILocation(line: 100, column: 15, scope: !5621)
!5744 = !DILocation(line: 100, column: 10, scope: !5621)
!5745 = !DILocation(line: 100, column: 13, scope: !5621)
!5746 = !DILocation(line: 101, column: 15, scope: !5621)
!5747 = !DILocation(line: 101, column: 10, scope: !5621)
!5748 = !DILocation(line: 101, column: 13, scope: !5621)
!5749 = !DILocation(line: 102, column: 15, scope: !5621)
!5750 = !DILocation(line: 102, column: 10, scope: !5621)
!5751 = !DILocation(line: 102, column: 13, scope: !5621)
!5752 = !DILocation(line: 103, column: 15, scope: !5621)
!5753 = !DILocation(line: 103, column: 10, scope: !5621)
!5754 = !DILocation(line: 103, column: 13, scope: !5621)
!5755 = !DILocation(line: 106, column: 10, scope: !5621)
!5756 = !DILocation(line: 106, column: 15, scope: !5621)
!5757 = !DILocation(line: 122, column: 29, scope: !5621)
!5758 = !DILocation(line: 122, column: 23, scope: !5621)
!5759 = !DILocation(line: 122, column: 27, scope: !5621)
!5760 = !DILocation(line: 123, column: 15, scope: !5621)
!5761 = !DILocation(line: 123, column: 23, scope: !5621)
!5762 = !DILocation(line: 143, column: 1, scope: !5621)
!5763 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !5622, file: !5622, line: 385, type: !5764, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2506, retainedNodes: !5767)
!5764 = !DISubroutineType(types: !5765)
!5765 = !{!121, !5766, !5766}
!5766 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !121)
!5767 = !{!5768, !5769, !5770, !5773}
!5768 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !5763, file: !5622, line: 385, type: !5766)
!5769 = !DILocalVariable(name: "psp", arg: 2, scope: !5763, file: !5622, line: 385, type: !5766)
!5770 = !DILocalVariable(name: "thread", scope: !5763, file: !5622, line: 388, type: !5771)
!5771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5772, size: 32)
!5772 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5626)
!5773 = !DILocalVariable(name: "guard_len", scope: !5763, file: !5622, line: 405, type: !121)
!5774 = !DILocation(line: 0, scope: !5763)
!5775 = !DILocation(line: 388, column: 34, scope: !5763)
!5776 = !DILocation(line: 390, column: 13, scope: !5777)
!5777 = distinct !DILexicalBlock(scope: !5763, file: !5622, line: 390, column: 6)
!5778 = !DILocation(line: 390, column: 6, scope: !5763)
!5779 = !DILocation(line: 438, column: 6, scope: !5780)
!5780 = distinct !DILexicalBlock(scope: !5763, file: !5622, line: 438, column: 6)
!5781 = !DILocation(line: 438, column: 6, scope: !5763)
!5782 = !DILocation(line: 442, column: 3, scope: !5783)
!5783 = distinct !DILexicalBlock(scope: !5780, file: !5622, line: 440, column: 22)
!5784 = !DILocation(line: 455, column: 1, scope: !5763)
!5785 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !5622, file: !5622, line: 530, type: !5786, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2506, retainedNodes: !5788)
!5786 = !DISubroutineType(types: !5787)
!5787 = !{null, !5625, !977, !3351}
!5788 = !{!5789, !5790, !5791}
!5789 = !DILocalVariable(name: "main_thread", arg: 1, scope: !5785, file: !5622, line: 530, type: !5625)
!5790 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !5785, file: !5622, line: 530, type: !977)
!5791 = !DILocalVariable(name: "_main", arg: 3, scope: !5785, file: !5622, line: 531, type: !3351)
!5792 = !DILocation(line: 0, scope: !5785)
!5793 = !DILocation(line: 535, column: 11, scope: !5785)
!5794 = !DILocation(line: 560, column: 2, scope: !5785)
!5795 = !DILocation(line: 576, column: 2, scope: !5785)
!5796 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!5797 = !DILocation(line: 603, column: 2, scope: !5785)
!5798 = distinct !DISubprogram(name: "z_arm_fault", scope: !5799, file: !5799, line: 1036, type: !5800, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !5815)
!5799 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5800 = !DISubroutineType(types: !5801)
!5801 = !{null, !121, !121, !121, !5802}
!5802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5803, size: 32)
!5803 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !284, line: 37, baseType: !5804)
!5804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !5805)
!5805 = !{!5806, !5807, !5808, !5809, !5810, !5811, !5812, !5813, !5814}
!5806 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5804, file: !284, line: 26, baseType: !121, size: 32)
!5807 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5804, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!5808 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5804, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!5809 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5804, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!5810 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5804, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!5811 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5804, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!5812 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5804, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!5813 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5804, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!5814 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5804, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!5815 = !{!5816, !5817, !5818, !5819, !5820, !5821, !5822, !5823, !5824, !5825}
!5816 = !DILocalVariable(name: "msp", arg: 1, scope: !5798, file: !5799, line: 1036, type: !121)
!5817 = !DILocalVariable(name: "psp", arg: 2, scope: !5798, file: !5799, line: 1036, type: !121)
!5818 = !DILocalVariable(name: "exc_return", arg: 3, scope: !5798, file: !5799, line: 1036, type: !121)
!5819 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !5798, file: !5799, line: 1037, type: !5802)
!5820 = !DILocalVariable(name: "reason", scope: !5798, file: !5799, line: 1039, type: !121)
!5821 = !DILocalVariable(name: "fault", scope: !5798, file: !5799, line: 1040, type: !103)
!5822 = !DILocalVariable(name: "recoverable", scope: !5798, file: !5799, line: 1041, type: !157)
!5823 = !DILocalVariable(name: "nested_exc", scope: !5798, file: !5799, line: 1041, type: !157)
!5824 = !DILocalVariable(name: "esf", scope: !5798, file: !5799, line: 1042, type: !2577)
!5825 = !DILocalVariable(name: "esf_copy", scope: !5798, file: !5799, line: 1047, type: !2578)
!5826 = !DILocation(line: 0, scope: !5798)
!5827 = !DILocation(line: 1040, column: 19, scope: !5798)
!5828 = !DILocation(line: 1040, column: 24, scope: !5798)
!5829 = !DILocation(line: 1041, column: 2, scope: !5798)
!5830 = !DILocation(line: 1047, column: 2, scope: !5798)
!5831 = !DILocation(line: 1047, column: 15, scope: !5798)
!5832 = !DILocalVariable(name: "key", arg: 1, scope: !5833, file: !5324, line: 84, type: !32)
!5833 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5324, file: !5324, line: 84, type: !5335, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !5834)
!5834 = !{!5832}
!5835 = !DILocation(line: 0, scope: !5833, inlinedAt: !5836)
!5836 = distinct !DILocation(line: 1050, column: 2, scope: !5798)
!5837 = !DILocation(line: 95, column: 2, scope: !5833, inlinedAt: !5836)
!5838 = !{i64 2255121}
!5839 = !DILocation(line: 1055, column: 9, scope: !5798)
!5840 = !DILocation(line: 1063, column: 11, scope: !5798)
!5841 = !DILocation(line: 1064, column: 6, scope: !5842)
!5842 = distinct !DILexicalBlock(scope: !5798, file: !5799, line: 1064, column: 6)
!5843 = !{i8 0, i8 2}
!5844 = !DILocation(line: 1064, column: 6, scope: !5798)
!5845 = !DILocation(line: 1070, column: 20, scope: !5798)
!5846 = !DILocation(line: 1070, column: 2, scope: !5798)
!5847 = !DILocation(line: 1089, column: 6, scope: !5848)
!5848 = distinct !DILexicalBlock(scope: !5798, file: !5799, line: 1089, column: 6)
!5849 = !DILocation(line: 0, scope: !5848)
!5850 = !DILocation(line: 1089, column: 6, scope: !5798)
!5851 = !DILocation(line: 1090, column: 28, scope: !5852)
!5852 = distinct !DILexicalBlock(scope: !5853, file: !5799, line: 1090, column: 7)
!5853 = distinct !DILexicalBlock(scope: !5848, file: !5799, line: 1089, column: 18)
!5854 = !DILocation(line: 1090, column: 44, scope: !5852)
!5855 = !DILocation(line: 1090, column: 7, scope: !5853)
!5856 = !DILocation(line: 1091, column: 24, scope: !5857)
!5857 = distinct !DILexicalBlock(scope: !5852, file: !5799, line: 1090, column: 50)
!5858 = !DILocation(line: 1092, column: 3, scope: !5857)
!5859 = !DILocation(line: 1094, column: 23, scope: !5860)
!5860 = distinct !DILexicalBlock(scope: !5848, file: !5799, line: 1093, column: 9)
!5861 = !DILocation(line: 1097, column: 2, scope: !5798)
!5862 = !DILocation(line: 1098, column: 1, scope: !5798)
!5863 = distinct !DISubprogram(name: "get_esf", scope: !5799, file: !5799, line: 894, type: !5864, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !5867)
!5864 = !DISubroutineType(types: !5865)
!5865 = !{!2577, !121, !121, !121, !5866}
!5866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 32)
!5867 = !{!5868, !5869, !5870, !5871, !5872, !5873}
!5868 = !DILocalVariable(name: "msp", arg: 1, scope: !5863, file: !5799, line: 894, type: !121)
!5869 = !DILocalVariable(name: "psp", arg: 2, scope: !5863, file: !5799, line: 894, type: !121)
!5870 = !DILocalVariable(name: "exc_return", arg: 3, scope: !5863, file: !5799, line: 894, type: !121)
!5871 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !5863, file: !5799, line: 895, type: !5866)
!5872 = !DILocalVariable(name: "alternative_state_exc", scope: !5863, file: !5799, line: 897, type: !157)
!5873 = !DILocalVariable(name: "ptr_esf", scope: !5863, file: !5799, line: 898, type: !2577)
!5874 = !DILocation(line: 0, scope: !5863)
!5875 = !DILocation(line: 900, column: 14, scope: !5863)
!5876 = !DILocation(line: 902, column: 49, scope: !5877)
!5877 = distinct !DILexicalBlock(scope: !5863, file: !5799, line: 902, column: 6)
!5878 = !DILocation(line: 902, column: 6, scope: !5863)
!5879 = !DILocation(line: 983, column: 18, scope: !5880)
!5880 = distinct !DILexicalBlock(scope: !5863, file: !5799, line: 983, column: 6)
!5881 = !DILocation(line: 991, column: 7, scope: !5882)
!5882 = distinct !DILexicalBlock(scope: !5883, file: !5799, line: 990, column: 30)
!5883 = distinct !DILexicalBlock(scope: !5863, file: !5799, line: 990, column: 6)
!5884 = !DILocation(line: 998, column: 16, scope: !5885)
!5885 = distinct !DILexicalBlock(scope: !5886, file: !5799, line: 995, column: 10)
!5886 = distinct !DILexicalBlock(scope: !5882, file: !5799, line: 991, column: 7)
!5887 = !DILocation(line: 1002, column: 2, scope: !5863)
!5888 = !DILocation(line: 1003, column: 1, scope: !5863)
!5889 = distinct !DISubprogram(name: "fault_handle", scope: !5799, file: !5799, line: 786, type: !5890, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !5892)
!5890 = !DISubroutineType(types: !5891)
!5891 = !{!121, !2577, !103, !5866}
!5892 = !{!5893, !5894, !5895, !5896}
!5893 = !DILocalVariable(name: "esf", arg: 1, scope: !5889, file: !5799, line: 786, type: !2577)
!5894 = !DILocalVariable(name: "fault", arg: 2, scope: !5889, file: !5799, line: 786, type: !103)
!5895 = !DILocalVariable(name: "recoverable", arg: 3, scope: !5889, file: !5799, line: 786, type: !5866)
!5896 = !DILocalVariable(name: "reason", scope: !5889, file: !5799, line: 788, type: !121)
!5897 = !DILocation(line: 0, scope: !5889)
!5898 = !DILocation(line: 790, column: 15, scope: !5889)
!5899 = !DILocation(line: 792, column: 2, scope: !5889)
!5900 = !DILocation(line: 794, column: 12, scope: !5901)
!5901 = distinct !DILexicalBlock(scope: !5889, file: !5799, line: 792, column: 17)
!5902 = !DILocation(line: 795, column: 3, scope: !5901)
!5903 = !DILocation(line: 800, column: 12, scope: !5901)
!5904 = !DILocation(line: 801, column: 3, scope: !5901)
!5905 = !DILocation(line: 803, column: 12, scope: !5901)
!5906 = !DILocation(line: 804, column: 3, scope: !5901)
!5907 = !DILocation(line: 806, column: 12, scope: !5901)
!5908 = !DILocation(line: 807, column: 3, scope: !5901)
!5909 = !DILocation(line: 814, column: 3, scope: !5901)
!5910 = !DILocation(line: 815, column: 3, scope: !5901)
!5911 = !DILocation(line: 829, column: 2, scope: !5889)
!5912 = distinct !DISubprogram(name: "hard_fault", scope: !5799, file: !5799, line: 709, type: !5913, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !5915)
!5913 = !DISubroutineType(types: !5914)
!5914 = !{!121, !2577, !5866}
!5915 = !{!5916, !5917, !5918}
!5916 = !DILocalVariable(name: "esf", arg: 1, scope: !5912, file: !5799, line: 709, type: !2577)
!5917 = !DILocalVariable(name: "recoverable", arg: 2, scope: !5912, file: !5799, line: 709, type: !5866)
!5918 = !DILocalVariable(name: "reason", scope: !5912, file: !5799, line: 711, type: !121)
!5919 = !DILocation(line: 0, scope: !5912)
!5920 = !DILocation(line: 732, column: 15, scope: !5912)
!5921 = !DILocation(line: 734, column: 12, scope: !5922)
!5922 = distinct !DILexicalBlock(scope: !5912, file: !5799, line: 734, column: 6)
!5923 = !DILocation(line: 734, column: 17, scope: !5922)
!5924 = !DILocation(line: 734, column: 41, scope: !5922)
!5925 = !DILocation(line: 734, column: 6, scope: !5912)
!5926 = !DILocation(line: 736, column: 19, scope: !5927)
!5927 = distinct !DILexicalBlock(scope: !5922, file: !5799, line: 736, column: 13)
!5928 = !DILocation(line: 736, column: 49, scope: !5927)
!5929 = !DILocation(line: 736, column: 13, scope: !5922)
!5930 = !DILocation(line: 738, column: 19, scope: !5931)
!5931 = distinct !DILexicalBlock(scope: !5927, file: !5799, line: 738, column: 13)
!5932 = !DILocation(line: 738, column: 24, scope: !5931)
!5933 = !DILocation(line: 738, column: 47, scope: !5931)
!5934 = !DILocation(line: 738, column: 13, scope: !5927)
!5935 = !DILocation(line: 740, column: 7, scope: !5936)
!5936 = distinct !DILexicalBlock(scope: !5937, file: !5799, line: 740, column: 7)
!5937 = distinct !DILexicalBlock(scope: !5931, file: !5799, line: 738, column: 53)
!5938 = !DILocation(line: 740, column: 7, scope: !5937)
!5939 = !DILocation(line: 742, column: 24, scope: !5940)
!5940 = distinct !DILexicalBlock(scope: !5936, file: !5799, line: 740, column: 38)
!5941 = !DILocation(line: 743, column: 3, scope: !5940)
!5942 = !DILocation(line: 743, column: 20, scope: !5943)
!5943 = distinct !DILexicalBlock(scope: !5936, file: !5799, line: 743, column: 14)
!5944 = !DILocation(line: 743, column: 25, scope: !5943)
!5945 = !DILocation(line: 743, column: 52, scope: !5943)
!5946 = !DILocation(line: 743, column: 14, scope: !5936)
!5947 = !DILocation(line: 744, column: 13, scope: !5948)
!5948 = distinct !DILexicalBlock(scope: !5943, file: !5799, line: 743, column: 58)
!5949 = !DILocation(line: 745, column: 3, scope: !5948)
!5950 = !DILocation(line: 745, column: 20, scope: !5951)
!5951 = distinct !DILexicalBlock(scope: !5943, file: !5799, line: 745, column: 14)
!5952 = !DILocation(line: 745, column: 25, scope: !5951)
!5953 = !DILocation(line: 745, column: 52, scope: !5951)
!5954 = !DILocation(line: 745, column: 14, scope: !5943)
!5955 = !DILocation(line: 746, column: 13, scope: !5956)
!5956 = distinct !DILexicalBlock(scope: !5951, file: !5799, line: 745, column: 58)
!5957 = !DILocation(line: 747, column: 3, scope: !5956)
!5958 = !DILocation(line: 747, column: 20, scope: !5959)
!5959 = distinct !DILexicalBlock(scope: !5951, file: !5799, line: 747, column: 14)
!5960 = !DILocation(line: 747, column: 52, scope: !5959)
!5961 = !DILocation(line: 747, column: 14, scope: !5951)
!5962 = !DILocation(line: 748, column: 13, scope: !5963)
!5963 = distinct !DILexicalBlock(scope: !5959, file: !5799, line: 747, column: 58)
!5964 = !DILocation(line: 753, column: 3, scope: !5963)
!5965 = !DILocation(line: 766, column: 2, scope: !5912)
!5966 = distinct !DISubprogram(name: "mem_manage_fault", scope: !5799, file: !5799, line: 229, type: !5890, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !5967)
!5967 = !{!5968, !5969, !5970, !5971, !5972, !5973, !5976}
!5968 = !DILocalVariable(name: "esf", arg: 1, scope: !5966, file: !5799, line: 229, type: !2577)
!5969 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !5966, file: !5799, line: 229, type: !103)
!5970 = !DILocalVariable(name: "recoverable", arg: 3, scope: !5966, file: !5799, line: 230, type: !5866)
!5971 = !DILocalVariable(name: "reason", scope: !5966, file: !5799, line: 232, type: !121)
!5972 = !DILocalVariable(name: "mmfar", scope: !5966, file: !5799, line: 233, type: !121)
!5973 = !DILocalVariable(name: "temp", scope: !5974, file: !5799, line: 254, type: !121)
!5974 = distinct !DILexicalBlock(scope: !5975, file: !5799, line: 244, column: 48)
!5975 = distinct !DILexicalBlock(scope: !5966, file: !5799, line: 244, column: 6)
!5976 = !DILocalVariable(name: "min_stack_ptr", scope: !5977, file: !5799, line: 309, type: !121)
!5977 = distinct !DILexicalBlock(scope: !5978, file: !5799, line: 308, column: 43)
!5978 = distinct !DILexicalBlock(scope: !5979, file: !5799, line: 308, column: 7)
!5979 = distinct !DILexicalBlock(scope: !5980, file: !5799, line: 289, column: 40)
!5980 = distinct !DILexicalBlock(scope: !5966, file: !5799, line: 288, column: 6)
!5981 = !DILocation(line: 0, scope: !5966)
!5982 = !DILocation(line: 237, column: 12, scope: !5983)
!5983 = distinct !DILexicalBlock(scope: !5966, file: !5799, line: 237, column: 6)
!5984 = !DILocation(line: 241, column: 12, scope: !5985)
!5985 = distinct !DILexicalBlock(scope: !5966, file: !5799, line: 241, column: 6)
!5986 = !DILocation(line: 244, column: 12, scope: !5975)
!5987 = !DILocation(line: 244, column: 17, scope: !5975)
!5988 = !DILocation(line: 244, column: 42, scope: !5975)
!5989 = !DILocation(line: 244, column: 6, scope: !5966)
!5990 = !DILocation(line: 254, column: 24, scope: !5974)
!5991 = !DILocation(line: 0, scope: !5974)
!5992 = !DILocation(line: 256, column: 13, scope: !5993)
!5993 = distinct !DILexicalBlock(scope: !5974, file: !5799, line: 256, column: 7)
!5994 = !DILocation(line: 256, column: 18, scope: !5993)
!5995 = !DILocation(line: 256, column: 44, scope: !5993)
!5996 = !DILocation(line: 256, column: 7, scope: !5974)
!5997 = !DILocation(line: 259, column: 24, scope: !5998)
!5998 = distinct !DILexicalBlock(scope: !5999, file: !5799, line: 259, column: 8)
!5999 = distinct !DILexicalBlock(scope: !5993, file: !5799, line: 256, column: 50)
!6000 = !DILocation(line: 259, column: 8, scope: !5999)
!6001 = !DILocation(line: 261, column: 15, scope: !6002)
!6002 = distinct !DILexicalBlock(scope: !5998, file: !5799, line: 259, column: 30)
!6003 = !DILocation(line: 262, column: 4, scope: !6002)
!6004 = !DILocation(line: 265, column: 12, scope: !6005)
!6005 = distinct !DILexicalBlock(scope: !5966, file: !5799, line: 265, column: 6)
!6006 = !DILocation(line: 269, column: 12, scope: !6007)
!6007 = distinct !DILexicalBlock(scope: !5966, file: !5799, line: 269, column: 6)
!6008 = !DILocation(line: 288, column: 12, scope: !5980)
!6009 = !DILocation(line: 288, column: 17, scope: !5980)
!6010 = !DILocation(line: 288, column: 41, scope: !5980)
!6011 = !DILocation(line: 289, column: 9, scope: !5980)
!6012 = !DILocation(line: 289, column: 14, scope: !5980)
!6013 = !DILocation(line: 288, column: 6, scope: !5966)
!6014 = !DILocation(line: 308, column: 12, scope: !5978)
!6015 = !DILocation(line: 308, column: 17, scope: !5978)
!6016 = !DILocation(line: 308, column: 7, scope: !5979)
!6017 = !DILocation(line: 310, column: 6, scope: !5977)
!6018 = !DILocation(line: 309, column: 29, scope: !5977)
!6019 = !DILocation(line: 0, scope: !5977)
!6020 = !DILocation(line: 312, column: 8, scope: !6021)
!6021 = distinct !DILexicalBlock(scope: !5977, file: !5799, line: 312, column: 8)
!6022 = !DILocation(line: 312, column: 8, scope: !5977)
!6023 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !6024, file: !5498, line: 1099, type: !121)
!6024 = distinct !DISubprogram(name: "__set_PSP", scope: !5498, file: !5498, line: 1099, type: !5589, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !6025)
!6025 = !{!6023}
!6026 = !DILocation(line: 0, scope: !6024, inlinedAt: !6027)
!6027 = distinct !DILocation(line: 338, column: 5, scope: !6028)
!6028 = distinct !DILexicalBlock(scope: !6021, file: !5799, line: 312, column: 23)
!6029 = !DILocation(line: 1101, column: 3, scope: !6024, inlinedAt: !6027)
!6030 = !{i64 3573524}
!6031 = !DILocation(line: 341, column: 4, scope: !6028)
!6032 = !DILocation(line: 360, column: 12, scope: !6033)
!6033 = distinct !DILexicalBlock(scope: !5966, file: !5799, line: 360, column: 6)
!6034 = !DILocation(line: 360, column: 17, scope: !6033)
!6035 = !DILocation(line: 360, column: 41, scope: !6033)
!6036 = !DILocation(line: 360, column: 6, scope: !5966)
!6037 = !DILocation(line: 361, column: 14, scope: !6038)
!6038 = distinct !DILexicalBlock(scope: !6033, file: !5799, line: 360, column: 47)
!6039 = !DILocation(line: 362, column: 2, scope: !6038)
!6040 = !DILocation(line: 366, column: 12, scope: !5966)
!6041 = !DILocation(line: 369, column: 15, scope: !5966)
!6042 = !DILocation(line: 371, column: 2, scope: !5966)
!6043 = distinct !DISubprogram(name: "bus_fault", scope: !5799, file: !5799, line: 383, type: !6044, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !6046)
!6044 = !DISubroutineType(types: !6045)
!6045 = !{!103, !2577, !103, !5866}
!6046 = !{!6047, !6048, !6049, !6050, !6051}
!6047 = !DILocalVariable(name: "esf", arg: 1, scope: !6043, file: !5799, line: 383, type: !2577)
!6048 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6043, file: !5799, line: 383, type: !103)
!6049 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6043, file: !5799, line: 383, type: !5866)
!6050 = !DILocalVariable(name: "reason", scope: !6043, file: !5799, line: 385, type: !121)
!6051 = !DILocalVariable(name: "bfar", scope: !6052, file: !5799, line: 405, type: !121)
!6052 = distinct !DILexicalBlock(scope: !6053, file: !5799, line: 395, column: 42)
!6053 = distinct !DILexicalBlock(scope: !6043, file: !5799, line: 395, column: 6)
!6054 = !DILocation(line: 0, scope: !6043)
!6055 = !DILocation(line: 389, column: 11, scope: !6056)
!6056 = distinct !DILexicalBlock(scope: !6043, file: !5799, line: 389, column: 6)
!6057 = !DILocation(line: 392, column: 11, scope: !6058)
!6058 = distinct !DILexicalBlock(scope: !6043, file: !5799, line: 392, column: 6)
!6059 = !DILocation(line: 395, column: 11, scope: !6053)
!6060 = !DILocation(line: 395, column: 16, scope: !6053)
!6061 = !DILocation(line: 395, column: 6, scope: !6043)
!6062 = !DILocation(line: 405, column: 3, scope: !6052)
!6063 = !DILocation(line: 0, scope: !6052)
!6064 = !DILocation(line: 407, column: 13, scope: !6065)
!6065 = distinct !DILexicalBlock(scope: !6052, file: !5799, line: 407, column: 7)
!6066 = !DILocation(line: 407, column: 18, scope: !6065)
!6067 = !DILocation(line: 407, column: 44, scope: !6065)
!6068 = !DILocation(line: 407, column: 7, scope: !6052)
!6069 = !DILocation(line: 411, column: 15, scope: !6070)
!6070 = distinct !DILexicalBlock(scope: !6071, file: !5799, line: 409, column: 30)
!6071 = distinct !DILexicalBlock(scope: !6072, file: !5799, line: 409, column: 8)
!6072 = distinct !DILexicalBlock(scope: !6065, file: !5799, line: 407, column: 50)
!6073 = !DILocation(line: 412, column: 4, scope: !6070)
!6074 = !DILocation(line: 415, column: 11, scope: !6075)
!6075 = distinct !DILexicalBlock(scope: !6043, file: !5799, line: 415, column: 6)
!6076 = !DILocation(line: 418, column: 12, scope: !6077)
!6077 = distinct !DILexicalBlock(scope: !6043, file: !5799, line: 418, column: 6)
!6078 = !DILocation(line: 418, column: 17, scope: !6077)
!6079 = !DILocation(line: 418, column: 41, scope: !6077)
!6080 = !DILocation(line: 418, column: 6, scope: !6043)
!6081 = !DILocation(line: 423, column: 18, scope: !6082)
!6082 = distinct !DILexicalBlock(scope: !6077, file: !5799, line: 423, column: 13)
!6083 = !DILocation(line: 524, column: 12, scope: !6043)
!6084 = !DILocation(line: 526, column: 15, scope: !6043)
!6085 = !DILocation(line: 528, column: 2, scope: !6043)
!6086 = distinct !DISubprogram(name: "usage_fault", scope: !5799, file: !5799, line: 539, type: !6087, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !6091)
!6087 = !DISubroutineType(types: !6088)
!6088 = !{!121, !6089}
!6089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6090, size: 32)
!6090 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2578)
!6091 = !{!6092, !6093}
!6092 = !DILocalVariable(name: "esf", arg: 1, scope: !6086, file: !5799, line: 539, type: !6089)
!6093 = !DILocalVariable(name: "reason", scope: !6086, file: !5799, line: 541, type: !121)
!6094 = !DILocation(line: 0, scope: !6086)
!6095 = !DILocation(line: 546, column: 12, scope: !6096)
!6096 = distinct !DILexicalBlock(scope: !6086, file: !5799, line: 546, column: 6)
!6097 = !DILocation(line: 549, column: 12, scope: !6098)
!6098 = distinct !DILexicalBlock(scope: !6086, file: !5799, line: 549, column: 6)
!6099 = !DILocation(line: 567, column: 12, scope: !6100)
!6100 = distinct !DILexicalBlock(scope: !6086, file: !5799, line: 567, column: 6)
!6101 = !DILocation(line: 570, column: 12, scope: !6102)
!6102 = distinct !DILexicalBlock(scope: !6086, file: !5799, line: 570, column: 6)
!6103 = !DILocation(line: 573, column: 12, scope: !6104)
!6104 = distinct !DILexicalBlock(scope: !6086, file: !5799, line: 573, column: 6)
!6105 = !DILocation(line: 576, column: 12, scope: !6106)
!6106 = distinct !DILexicalBlock(scope: !6086, file: !5799, line: 576, column: 6)
!6107 = !DILocation(line: 581, column: 12, scope: !6086)
!6108 = !DILocation(line: 583, column: 2, scope: !6086)
!6109 = distinct !DISubprogram(name: "debug_monitor", scope: !5799, file: !5799, line: 632, type: !6110, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !6112)
!6110 = !DISubroutineType(types: !6111)
!6111 = !{null, !2577, !5866}
!6112 = !{!6113, !6114}
!6113 = !DILocalVariable(name: "esf", arg: 1, scope: !6109, file: !5799, line: 632, type: !2577)
!6114 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6109, file: !5799, line: 632, type: !5866)
!6115 = !DILocation(line: 0, scope: !6109)
!6116 = !DILocation(line: 634, column: 15, scope: !6109)
!6117 = !DILocation(line: 652, column: 1, scope: !6109)
!6118 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !5799, file: !5799, line: 658, type: !6119, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !6121)
!6119 = !DISubroutineType(types: !6120)
!6120 = !{!157, !2577}
!6121 = !{!6122, !6123, !6124}
!6122 = !DILocalVariable(name: "esf", arg: 1, scope: !6118, file: !5799, line: 658, type: !2577)
!6123 = !DILocalVariable(name: "ret_addr", scope: !6118, file: !5799, line: 660, type: !2620)
!6124 = !DILocalVariable(name: "fault_insn", scope: !6118, file: !5799, line: 686, type: !265)
!6125 = !DILocation(line: 0, scope: !6118)
!6126 = !DILocation(line: 660, column: 46, scope: !6118)
!6127 = !DILocation(line: 660, column: 23, scope: !6118)
!6128 = !DILocation(line: 682, column: 11, scope: !6118)
!6129 = !DILocation(line: 271, column: 3, scope: !6130, inlinedAt: !6131)
!6130 = distinct !DISubprogram(name: "__DSB", scope: !5498, file: !5498, line: 269, type: !2928, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !322)
!6131 = distinct !DILocation(line: 683, column: 2, scope: !6118)
!6132 = !{i64 3549659}
!6133 = !DILocation(line: 260, column: 3, scope: !6134, inlinedAt: !6135)
!6134 = distinct !DISubprogram(name: "__ISB", scope: !5498, file: !5498, line: 258, type: !2928, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !322)
!6135 = distinct !DILocation(line: 684, column: 2, scope: !6118)
!6136 = !{i64 3549376}
!6137 = !DILocation(line: 686, column: 35, scope: !6118)
!6138 = !DILocation(line: 686, column: 24, scope: !6118)
!6139 = !DILocation(line: 688, column: 11, scope: !6118)
!6140 = !DILocation(line: 271, column: 3, scope: !6130, inlinedAt: !6141)
!6141 = distinct !DILocation(line: 689, column: 2, scope: !6118)
!6142 = !DILocation(line: 260, column: 3, scope: !6134, inlinedAt: !6143)
!6143 = distinct !DILocation(line: 690, column: 2, scope: !6118)
!6144 = !DILocation(line: 693, column: 45, scope: !6145)
!6145 = distinct !DILexicalBlock(scope: !6118, file: !5799, line: 693, column: 6)
!6146 = !DILocation(line: 699, column: 1, scope: !6118)
!6147 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !5799, file: !5799, line: 1107, type: !2928, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !322)
!6148 = !DILocation(line: 1111, column: 11, scope: !6147)
!6149 = !DILocation(line: 1136, column: 1, scope: !6147)
!6150 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !6151, file: !6151, line: 26, type: !2928, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2621, retainedNodes: !6152)
!6151 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6152 = !{!6153}
!6153 = !DILocalVariable(name: "irq", scope: !6150, file: !6151, line: 28, type: !103)
!6154 = !DILocation(line: 0, scope: !6150)
!6155 = !DILocation(line: 30, column: 2, scope: !6156)
!6156 = distinct !DILexicalBlock(scope: !6150, file: !6151, line: 30, column: 2)
!6157 = !DILocation(line: 31, column: 3, scope: !6158)
!6158 = distinct !DILexicalBlock(scope: !6159, file: !6151, line: 30, column: 39)
!6159 = distinct !DILexicalBlock(scope: !6156, file: !6151, line: 30, column: 2)
!6160 = !DILocation(line: 30, column: 35, scope: !6159)
!6161 = !DILocation(line: 30, column: 13, scope: !6159)
!6162 = distinct !{!6162, !6155, !6163}
!6163 = !DILocation(line: 32, column: 2, scope: !6156)
!6164 = !DILocation(line: 33, column: 1, scope: !6150)
!6165 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !356, file: !356, line: 1814, type: !5532, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2621, retainedNodes: !6166)
!6166 = !{!6167, !6168}
!6167 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6165, file: !356, line: 1814, type: !613)
!6168 = !DILocalVariable(name: "priority", arg: 2, scope: !6165, file: !356, line: 1814, type: !121)
!6169 = !DILocation(line: 0, scope: !6165)
!6170 = !DILocation(line: 1816, column: 7, scope: !6165)
!6171 = !DILocation(line: 0, scope: !6172)
!6172 = distinct !DILexicalBlock(scope: !6165, file: !356, line: 1816, column: 7)
!6173 = !DILocation(line: 1824, column: 1, scope: !6165)
!6174 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !6175, file: !6175, line: 27, type: !6176, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2666, retainedNodes: !6279)
!6175 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6176 = !DISubroutineType(types: !6177)
!6177 = !{null, !6178}
!6178 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !211, line: 347, baseType: !6179)
!6179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6180, size: 32)
!6180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !6181)
!6181 = !{!6182, !6240, !6252, !6253, !6254, !6255, !6261, !6274}
!6182 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6180, file: !211, line: 247, baseType: !6183, size: 384)
!6183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !6184)
!6184 = !{!6185, !6209, !6216, !6217, !6218, !6227, !6228, !6229}
!6185 = !DIDerivedType(tag: DW_TAG_member, scope: !6183, file: !211, line: 60, baseType: !6186, size: 64)
!6186 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6183, file: !211, line: 60, size: 64, elements: !6187)
!6187 = !{!6188, !6203}
!6188 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6186, file: !211, line: 61, baseType: !6189, size: 64)
!6189 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !6190)
!6190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !6191)
!6191 = !{!6192, !6198}
!6192 = !DIDerivedType(tag: DW_TAG_member, scope: !6190, file: !221, line: 38, baseType: !6193, size: 32)
!6193 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6190, file: !221, line: 38, size: 32, elements: !6194)
!6194 = !{!6195, !6197}
!6195 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6193, file: !221, line: 39, baseType: !6196, size: 32)
!6196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6190, size: 32)
!6197 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6193, file: !221, line: 40, baseType: !6196, size: 32)
!6198 = !DIDerivedType(tag: DW_TAG_member, scope: !6190, file: !221, line: 42, baseType: !6199, size: 32, offset: 32)
!6199 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6190, file: !221, line: 42, size: 32, elements: !6200)
!6200 = !{!6201, !6202}
!6201 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6199, file: !221, line: 43, baseType: !6196, size: 32)
!6202 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6199, file: !221, line: 44, baseType: !6196, size: 32)
!6203 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6186, file: !211, line: 62, baseType: !6204, size: 64)
!6204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !6205)
!6205 = !{!6206}
!6206 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6204, file: !237, line: 50, baseType: !6207, size: 64)
!6207 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6208, size: 64, elements: !242)
!6208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6204, size: 32)
!6209 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6183, file: !211, line: 68, baseType: !6210, size: 32, offset: 64)
!6210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6211, size: 32)
!6211 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !6212)
!6212 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !6213)
!6213 = !{!6214}
!6214 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6212, file: !247, line: 232, baseType: !6215, size: 64)
!6215 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !6190)
!6216 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6183, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!6217 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6183, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!6218 = !DIDerivedType(tag: DW_TAG_member, scope: !6183, file: !211, line: 90, baseType: !6219, size: 16, offset: 112)
!6219 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6183, file: !211, line: 90, size: 16, elements: !6220)
!6220 = !{!6221, !6226}
!6221 = !DIDerivedType(tag: DW_TAG_member, scope: !6219, file: !211, line: 91, baseType: !6222, size: 16)
!6222 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6219, file: !211, line: 91, size: 16, elements: !6223)
!6223 = !{!6224, !6225}
!6224 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6222, file: !211, line: 96, baseType: !261, size: 8)
!6225 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6222, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!6226 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6219, file: !211, line: 100, baseType: !265, size: 16)
!6227 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6183, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!6228 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6183, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!6229 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6183, file: !211, line: 131, baseType: !6230, size: 192, offset: 192)
!6230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !6231)
!6231 = !{!6232, !6233, !6239}
!6232 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6230, file: !247, line: 245, baseType: !6189, size: 64)
!6233 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6230, file: !247, line: 246, baseType: !6234, size: 32, offset: 64)
!6234 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !6235)
!6235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6236, size: 32)
!6236 = !DISubroutineType(types: !6237)
!6237 = !{null, !6238}
!6238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6230, size: 32)
!6239 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6230, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!6240 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6180, file: !211, line: 250, baseType: !6241, size: 288, offset: 384)
!6241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !6242)
!6242 = !{!6243, !6244, !6245, !6246, !6247, !6248, !6249, !6250, !6251}
!6243 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6241, file: !284, line: 26, baseType: !121, size: 32)
!6244 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6241, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!6245 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6241, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!6246 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6241, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!6247 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6241, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!6248 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6241, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!6249 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6241, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!6250 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6241, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!6251 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6241, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!6252 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6180, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!6253 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6180, file: !211, line: 256, baseType: !6211, size: 64, offset: 704)
!6254 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6180, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!6255 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6180, file: !211, line: 300, baseType: !6256, size: 96, offset: 800)
!6256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !6257)
!6257 = !{!6258, !6259, !6260}
!6258 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6256, file: !211, line: 153, baseType: !22, size: 32)
!6259 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6256, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!6260 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6256, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!6261 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6180, file: !211, line: 325, baseType: !6262, size: 32, offset: 896)
!6262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6263, size: 32)
!6263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !6264)
!6264 = !{!6265, !6271, !6272}
!6265 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6263, file: !307, line: 5074, baseType: !6266, size: 96)
!6266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !6267)
!6267 = !{!6268, !6269, !6270}
!6268 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6266, file: !311, line: 57, baseType: !314, size: 32)
!6269 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6266, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!6270 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6266, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!6271 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6263, file: !307, line: 5075, baseType: !6211, size: 64, offset: 96)
!6272 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6263, file: !307, line: 5076, baseType: !6273, offset: 160)
!6273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!6274 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6180, file: !211, line: 343, baseType: !6275, size: 64, offset: 928)
!6275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !6276)
!6276 = !{!6277, !6278}
!6277 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6275, file: !284, line: 63, baseType: !121, size: 32)
!6278 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6275, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!6279 = !{!6280}
!6280 = !DILocalVariable(name: "thread", arg: 1, scope: !6174, file: !6175, line: 27, type: !6178)
!6281 = !DILocation(line: 0, scope: !6174)
!6282 = !DILocation(line: 29, column: 6, scope: !6283)
!6283 = distinct !DILexicalBlock(scope: !6174, file: !6175, line: 29, column: 6)
!6284 = !DILocation(line: 29, column: 15, scope: !6283)
!6285 = !DILocation(line: 29, column: 6, scope: !6174)
!6286 = !DILocation(line: 1031, column: 3, scope: !6287, inlinedAt: !6290)
!6287 = distinct !DISubprogram(name: "__get_IPSR", scope: !5498, file: !5498, line: 1027, type: !5579, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2666, retainedNodes: !6288)
!6288 = !{!6289}
!6289 = !DILocalVariable(name: "result", scope: !6287, file: !5498, line: 1029, type: !121)
!6290 = distinct !DILocation(line: 48, column: 10, scope: !6291, inlinedAt: !6295)
!6291 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6292, file: !6292, line: 46, type: !6293, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2666, retainedNodes: !322)
!6292 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6293 = !DISubroutineType(types: !6294)
!6294 = !{!157}
!6295 = distinct !DILocation(line: 30, column: 7, scope: !6296)
!6296 = distinct !DILexicalBlock(scope: !6297, file: !6175, line: 30, column: 7)
!6297 = distinct !DILexicalBlock(scope: !6283, file: !6175, line: 29, column: 26)
!6298 = !{i64 3538507}
!6299 = !DILocation(line: 0, scope: !6287, inlinedAt: !6290)
!6300 = !DILocation(line: 48, column: 9, scope: !6291, inlinedAt: !6295)
!6301 = !DILocation(line: 30, column: 7, scope: !6297)
!6302 = !DILocation(line: 42, column: 14, scope: !6303)
!6303 = distinct !DILexicalBlock(scope: !6296, file: !6175, line: 30, column: 25)
!6304 = !DILocation(line: 48, column: 15, scope: !6303)
!6305 = !DILocation(line: 49, column: 3, scope: !6303)
!6306 = !DILocation(line: 52, column: 2, scope: !6174)
!6307 = !DILocation(line: 53, column: 1, scope: !6174)
!6308 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !206, file: !206, line: 127, type: !2928, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !322)
!6309 = !DILocation(line: 134, column: 2, scope: !6308)
!6310 = !DILocation(line: 156, column: 1, scope: !6308)
!6311 = !DILocation(line: 0, scope: !205)
!6312 = !DILocation(line: 289, column: 36, scope: !6313)
!6313 = distinct !DILexicalBlock(scope: !205, file: !206, line: 285, column: 2)
!6314 = !DILocation(line: 289, column: 42, scope: !6313)
!6315 = !DILocation(line: 300, column: 36, scope: !205)
!6316 = !DILocation(line: 301, column: 35, scope: !205)
!6317 = !DILocation(line: 302, column: 37, scope: !205)
!6318 = !DILocation(line: 311, column: 2, scope: !205)
!6319 = !DILocation(line: 316, column: 1, scope: !205)
!6320 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !384, file: !384, line: 180, type: !2928, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !322)
!6321 = !DILocation(line: 188, column: 12, scope: !6320)
!6322 = !DILocation(line: 271, column: 3, scope: !6323, inlinedAt: !6324)
!6323 = distinct !DISubprogram(name: "__DSB", scope: !5498, file: !5498, line: 269, type: !2928, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !322)
!6324 = distinct !DILocation(line: 192, column: 2, scope: !6320)
!6325 = !{i64 3699185}
!6326 = !DILocation(line: 260, column: 3, scope: !6327, inlinedAt: !6328)
!6327 = distinct !DISubprogram(name: "__ISB", scope: !5498, file: !5498, line: 258, type: !2928, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !322)
!6328 = distinct !DILocation(line: 193, column: 2, scope: !6320)
!6329 = !{i64 3698902}
!6330 = !DILocation(line: 194, column: 1, scope: !6320)
!6331 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !384, file: !384, line: 199, type: !2928, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !322)
!6332 = !DILocation(line: 282, column: 3, scope: !6333, inlinedAt: !6334)
!6333 = distinct !DISubprogram(name: "__DMB", scope: !5498, file: !5498, line: 280, type: !2928, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !322)
!6334 = distinct !DILocation(line: 202, column: 2, scope: !6331)
!6335 = !{i64 3699461}
!6336 = !DILocation(line: 205, column: 12, scope: !6331)
!6337 = !DILocation(line: 206, column: 1, scope: !6331)
!6338 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !384, file: !384, line: 275, type: !6339, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !6352)
!6339 = !DISubroutineType(types: !6340)
!6340 = !{null, !6341, !1635, !5766, !5766}
!6341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6342, size: 32)
!6342 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6343)
!6343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !335, line: 52, size: 96, elements: !6344)
!6344 = !{!6345, !6346, !6347}
!6345 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6343, file: !335, line: 53, baseType: !22, size: 32)
!6346 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6343, file: !335, line: 54, baseType: !200, size: 32, offset: 32)
!6347 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !6343, file: !335, line: 55, baseType: !6348, size: 32, offset: 64)
!6348 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !341, line: 151, baseType: !6349)
!6349 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !341, line: 149, size: 32, elements: !6350)
!6350 = !{!6351}
!6351 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !6349, file: !341, line: 150, baseType: !121, size: 32)
!6352 = !{!6353, !6354, !6355, !6356}
!6353 = !DILocalVariable(name: "static_regions", arg: 1, scope: !6338, file: !384, line: 276, type: !6341)
!6354 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6338, file: !384, line: 276, type: !1635)
!6355 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !6338, file: !384, line: 277, type: !5766)
!6356 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !6338, file: !384, line: 277, type: !5766)
!6357 = !DILocation(line: 0, scope: !6338)
!6358 = !DILocation(line: 279, column: 6, scope: !6359)
!6359 = distinct !DILexicalBlock(scope: !6338, file: !384, line: 279, column: 6)
!6360 = !DILocation(line: 285, column: 1, scope: !6338)
!6361 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !6362, file: !6362, line: 220, type: !6363, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !6365)
!6362 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6363 = !DISubroutineType(types: !6364)
!6364 = !{!103, !6341, !1635, !5766, !5766}
!6365 = !{!6366, !6367, !6368, !6369, !6370}
!6366 = !DILocalVariable(name: "static_regions", arg: 1, scope: !6361, file: !6362, line: 221, type: !6341)
!6367 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6361, file: !6362, line: 221, type: !1635)
!6368 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !6361, file: !6362, line: 222, type: !5766)
!6369 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !6361, file: !6362, line: 223, type: !5766)
!6370 = !DILocalVariable(name: "mpu_reg_index", scope: !6361, file: !6362, line: 225, type: !103)
!6371 = !DILocation(line: 0, scope: !6361)
!6372 = !DILocation(line: 225, column: 22, scope: !6361)
!6373 = !DILocation(line: 233, column: 18, scope: !6361)
!6374 = !DILocation(line: 236, column: 23, scope: !6361)
!6375 = !DILocation(line: 236, column: 21, scope: !6361)
!6376 = !DILocation(line: 238, column: 2, scope: !6361)
!6377 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !384, file: !384, line: 105, type: !6378, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !6380)
!6378 = !DISubroutineType(types: !6379)
!6379 = !{!103, !6341, !154, !154, !157}
!6380 = !{!6381, !6382, !6383, !6384, !6385, !6386}
!6381 = !DILocalVariable(name: "regions", arg: 1, scope: !6377, file: !384, line: 106, type: !6341)
!6382 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6377, file: !384, line: 106, type: !154)
!6383 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !6377, file: !384, line: 106, type: !154)
!6384 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !6377, file: !384, line: 107, type: !157)
!6385 = !DILocalVariable(name: "i", scope: !6377, file: !384, line: 109, type: !103)
!6386 = !DILocalVariable(name: "reg_index", scope: !6377, file: !384, line: 110, type: !103)
!6387 = !DILocation(line: 0, scope: !6377)
!6388 = !DILocation(line: 110, column: 18, scope: !6377)
!6389 = !DILocation(line: 112, column: 16, scope: !6390)
!6390 = distinct !DILexicalBlock(scope: !6391, file: !384, line: 112, column: 2)
!6391 = distinct !DILexicalBlock(scope: !6377, file: !384, line: 112, column: 2)
!6392 = !DILocation(line: 112, column: 2, scope: !6391)
!6393 = !DILocation(line: 113, column: 7, scope: !6394)
!6394 = distinct !DILexicalBlock(scope: !6395, file: !384, line: 113, column: 7)
!6395 = distinct !DILexicalBlock(scope: !6390, file: !384, line: 112, column: 36)
!6396 = !DILocation(line: 113, column: 18, scope: !6394)
!6397 = !DILocation(line: 113, column: 23, scope: !6394)
!6398 = !DILocation(line: 113, column: 7, scope: !6395)
!6399 = !DILocation(line: 118, column: 23, scope: !6400)
!6400 = distinct !DILexicalBlock(scope: !6395, file: !384, line: 118, column: 7)
!6401 = !DILocation(line: 119, column: 7, scope: !6400)
!6402 = !DILocation(line: 118, column: 7, scope: !6395)
!6403 = !DILocation(line: 124, column: 36, scope: !6395)
!6404 = !DILocation(line: 124, column: 15, scope: !6395)
!6405 = !DILocation(line: 126, column: 17, scope: !6406)
!6406 = distinct !DILexicalBlock(scope: !6395, file: !384, line: 126, column: 7)
!6407 = !DILocation(line: 126, column: 7, scope: !6395)
!6408 = !DILocation(line: 131, column: 12, scope: !6395)
!6409 = !DILocation(line: 132, column: 2, scope: !6395)
!6410 = !DILocation(line: 112, column: 32, scope: !6390)
!6411 = distinct !{!6411, !6392, !6412}
!6412 = !DILocation(line: 132, column: 2, scope: !6391)
!6413 = !DILocation(line: 135, column: 1, scope: !6377)
!6414 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !6362, file: !6362, line: 63, type: !6415, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !6417)
!6415 = !DISubroutineType(types: !6416)
!6416 = !{!103, !6341}
!6417 = !{!6418, !6419}
!6418 = !DILocalVariable(name: "part", arg: 1, scope: !6414, file: !6362, line: 63, type: !6341)
!6419 = !DILocalVariable(name: "partition_is_valid", scope: !6414, file: !6362, line: 70, type: !103)
!6420 = !DILocation(line: 0, scope: !6414)
!6421 = !DILocation(line: 71, column: 11, scope: !6414)
!6422 = !DILocation(line: 71, column: 37, scope: !6414)
!6423 = !{i32 0, i32 33}
!6424 = !DILocation(line: 72, column: 3, scope: !6414)
!6425 = !DILocation(line: 71, column: 30, scope: !6414)
!6426 = !DILocation(line: 75, column: 11, scope: !6414)
!6427 = !DILocation(line: 75, column: 17, scope: !6414)
!6428 = !DILocation(line: 75, column: 38, scope: !6414)
!6429 = !DILocation(line: 77, column: 2, scope: !6414)
!6430 = distinct !DISubprogram(name: "mpu_configure_region", scope: !384, file: !384, line: 79, type: !6431, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !6433)
!6431 = !DISubroutineType(types: !6432)
!6432 = !{!103, !1635, !6341}
!6433 = !{!6434, !6435, !6436}
!6434 = !DILocalVariable(name: "index", arg: 1, scope: !6430, file: !384, line: 79, type: !1635)
!6435 = !DILocalVariable(name: "new_region", arg: 2, scope: !6430, file: !384, line: 80, type: !6341)
!6436 = !DILocalVariable(name: "region_conf", scope: !6430, file: !384, line: 82, type: !373)
!6437 = !DILocation(line: 0, scope: !6430)
!6438 = !DILocation(line: 82, column: 2, scope: !6430)
!6439 = !DILocation(line: 82, column: 24, scope: !6430)
!6440 = !DILocation(line: 87, column: 33, scope: !6430)
!6441 = !DILocation(line: 87, column: 14, scope: !6430)
!6442 = !DILocation(line: 87, column: 19, scope: !6430)
!6443 = !DILocation(line: 91, column: 55, scope: !6430)
!6444 = !DILocation(line: 92, column: 16, scope: !6430)
!6445 = !DILocation(line: 92, column: 53, scope: !6430)
!6446 = !DILocation(line: 91, column: 2, scope: !6430)
!6447 = !DILocation(line: 95, column: 9, scope: !6430)
!6448 = !DILocation(line: 97, column: 1, scope: !6430)
!6449 = !DILocation(line: 95, column: 2, scope: !6430)
!6450 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !6362, file: !6362, line: 113, type: !6451, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !6456)
!6451 = !DISubroutineType(types: !6452)
!6452 = !{null, !6453, !6454, !121, !121}
!6453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !379, size: 32)
!6454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6455, size: 32)
!6455 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6348)
!6456 = !{!6457, !6458, !6459, !6460}
!6457 = !DILocalVariable(name: "p_attr", arg: 1, scope: !6450, file: !6362, line: 114, type: !6453)
!6458 = !DILocalVariable(name: "attr", arg: 2, scope: !6450, file: !6362, line: 115, type: !6454)
!6459 = !DILocalVariable(name: "base", arg: 3, scope: !6450, file: !6362, line: 115, type: !121)
!6460 = !DILocalVariable(name: "size", arg: 4, scope: !6450, file: !6362, line: 115, type: !121)
!6461 = !DILocation(line: 0, scope: !6450)
!6462 = !DILocation(line: 127, column: 23, scope: !6450)
!6463 = !DILocation(line: 127, column: 35, scope: !6450)
!6464 = !DILocation(line: 127, column: 33, scope: !6450)
!6465 = !DILocation(line: 127, column: 10, scope: !6450)
!6466 = !DILocation(line: 127, column: 15, scope: !6450)
!6467 = !DILocation(line: 129, column: 1, scope: !6450)
!6468 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !384, file: !384, line: 57, type: !6469, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !6471)
!6469 = !DISubroutineType(types: !6470)
!6470 = !{!103, !1635, !371}
!6471 = !{!6472, !6473}
!6472 = !DILocalVariable(name: "index", arg: 1, scope: !6468, file: !384, line: 57, type: !1635)
!6473 = !DILocalVariable(name: "region_conf", arg: 2, scope: !6468, file: !384, line: 58, type: !371)
!6474 = !DILocation(line: 0, scope: !6468)
!6475 = !DILocation(line: 61, column: 6, scope: !6476)
!6476 = distinct !DILexicalBlock(scope: !6468, file: !384, line: 61, column: 6)
!6477 = !DILocation(line: 61, column: 12, scope: !6476)
!6478 = !DILocation(line: 61, column: 6, scope: !6468)
!6479 = !DILocation(line: 71, column: 2, scope: !6468)
!6480 = !DILocation(line: 73, column: 2, scope: !6468)
!6481 = !DILocation(line: 74, column: 1, scope: !6468)
!6482 = distinct !DISubprogram(name: "region_init", scope: !6362, file: !6362, line: 29, type: !6483, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !6485)
!6483 = !DISubroutineType(types: !6484)
!6484 = !{null, !5766, !371}
!6485 = !{!6486, !6487}
!6486 = !DILocalVariable(name: "index", arg: 1, scope: !6482, file: !6362, line: 29, type: !5766)
!6487 = !DILocalVariable(name: "region_conf", arg: 2, scope: !6482, file: !6362, line: 30, type: !371)
!6488 = !DILocation(line: 0, scope: !6482)
!6489 = !DILocation(line: 33, column: 2, scope: !6482)
!6490 = !DILocation(line: 47, column: 28, scope: !6482)
!6491 = !DILocation(line: 47, column: 33, scope: !6482)
!6492 = !DILocation(line: 48, column: 26, scope: !6482)
!6493 = !DILocation(line: 47, column: 12, scope: !6482)
!6494 = !DILocation(line: 49, column: 32, scope: !6482)
!6495 = !DILocation(line: 49, column: 37, scope: !6482)
!6496 = !DILocation(line: 49, column: 12, scope: !6482)
!6497 = !DILocation(line: 53, column: 1, scope: !6482)
!6498 = distinct !DISubprogram(name: "set_region_number", scope: !6499, file: !6499, line: 32, type: !5589, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !6500)
!6499 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6500 = !{!6501}
!6501 = !DILocalVariable(name: "index", arg: 1, scope: !6498, file: !6499, line: 32, type: !121)
!6502 = !DILocation(line: 0, scope: !6498)
!6503 = !DILocation(line: 34, column: 11, scope: !6498)
!6504 = !DILocation(line: 35, column: 1, scope: !6498)
!6505 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !6362, file: !6362, line: 88, type: !6506, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !6508)
!6506 = !DISubroutineType(types: !6507)
!6507 = !{!121, !121}
!6508 = !{!6509}
!6509 = !DILocalVariable(name: "size", arg: 1, scope: !6505, file: !6362, line: 88, type: !121)
!6510 = !DILocation(line: 0, scope: !6505)
!6511 = !DILocation(line: 91, column: 11, scope: !6512)
!6512 = distinct !DILexicalBlock(scope: !6505, file: !6362, line: 91, column: 6)
!6513 = !DILocation(line: 91, column: 6, scope: !6505)
!6514 = !DILocation(line: 100, column: 11, scope: !6515)
!6515 = distinct !DILexicalBlock(scope: !6505, file: !6362, line: 100, column: 6)
!6516 = !DILocation(line: 100, column: 6, scope: !6505)
!6517 = !DILocation(line: 104, column: 35, scope: !6505)
!6518 = !DILocation(line: 104, column: 16, scope: !6505)
!6519 = !DILocation(line: 104, column: 50, scope: !6505)
!6520 = !DILocation(line: 104, column: 72, scope: !6505)
!6521 = !DILocation(line: 104, column: 2, scope: !6505)
!6522 = !DILocation(line: 106, column: 1, scope: !6505)
!6523 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !384, file: !384, line: 307, type: !6524, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !6526)
!6524 = !DISubroutineType(types: !6525)
!6525 = !{null, !6341, !154}
!6526 = !{!6527, !6528}
!6527 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !6523, file: !384, line: 308, type: !6341)
!6528 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6523, file: !384, line: 308, type: !154)
!6529 = !DILocation(line: 0, scope: !6523)
!6530 = !DILocation(line: 310, column: 6, scope: !6531)
!6531 = distinct !DILexicalBlock(scope: !6523, file: !384, line: 310, column: 6)
!6532 = !DILocation(line: 316, column: 1, scope: !6523)
!6533 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !6362, file: !6362, line: 249, type: !6534, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !6536)
!6534 = !DISubroutineType(types: !6535)
!6535 = !{!103, !6341, !154}
!6536 = !{!6537, !6538, !6539, !6540}
!6537 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !6533, file: !6362, line: 250, type: !6341)
!6538 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6533, file: !6362, line: 250, type: !154)
!6539 = !DILocalVariable(name: "mpu_reg_index", scope: !6533, file: !6362, line: 252, type: !103)
!6540 = !DILocalVariable(name: "i", scope: !6541, file: !6362, line: 264, type: !103)
!6541 = distinct !DILexicalBlock(scope: !6542, file: !6362, line: 264, column: 3)
!6542 = distinct !DILexicalBlock(scope: !6543, file: !6362, line: 261, column: 32)
!6543 = distinct !DILexicalBlock(scope: !6533, file: !6362, line: 261, column: 6)
!6544 = !DILocation(line: 0, scope: !6533)
!6545 = !DILocation(line: 252, column: 22, scope: !6533)
!6546 = !DILocation(line: 258, column: 18, scope: !6533)
!6547 = !DILocation(line: 261, column: 20, scope: !6543)
!6548 = !DILocation(line: 261, column: 6, scope: !6533)
!6549 = !DILocation(line: 0, scope: !6541)
!6550 = !DILocation(line: 265, column: 4, scope: !6551)
!6551 = distinct !DILexicalBlock(scope: !6552, file: !6362, line: 264, column: 59)
!6552 = distinct !DILexicalBlock(scope: !6541, file: !6362, line: 264, column: 3)
!6553 = !DILocation(line: 264, column: 55, scope: !6552)
!6554 = !DILocation(line: 264, column: 33, scope: !6552)
!6555 = !DILocation(line: 264, column: 3, scope: !6541)
!6556 = distinct !{!6556, !6555, !6557}
!6557 = !DILocation(line: 266, column: 3, scope: !6541)
!6558 = !DILocation(line: 269, column: 2, scope: !6533)
!6559 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !6560, file: !6560, line: 218, type: !5589, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !6561)
!6560 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6561 = !{!6562}
!6562 = !DILocalVariable(name: "rnr", arg: 1, scope: !6559, file: !6560, line: 218, type: !121)
!6563 = !DILocation(line: 0, scope: !6559)
!6564 = !DILocation(line: 220, column: 12, scope: !6559)
!6565 = !DILocation(line: 221, column: 13, scope: !6559)
!6566 = !DILocation(line: 222, column: 1, scope: !6559)
!6567 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !384, file: !384, line: 326, type: !6568, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !6570)
!6568 = !DISubroutineType(types: !6569)
!6569 = !{!103}
!6570 = !{!6571}
!6571 = !DILocalVariable(name: "r_index", scope: !6567, file: !384, line: 328, type: !121)
!6572 = !DILocation(line: 330, column: 17, scope: !6573)
!6573 = distinct !DILexicalBlock(scope: !6567, file: !384, line: 330, column: 6)
!6574 = !DILocation(line: 330, column: 29, scope: !6573)
!6575 = !DILocation(line: 330, column: 6, scope: !6567)
!6576 = !DILocation(line: 347, column: 2, scope: !6567)
!6577 = !DILocation(line: 0, scope: !6567)
!6578 = !DILocation(line: 364, column: 29, scope: !6579)
!6579 = distinct !DILexicalBlock(scope: !6580, file: !384, line: 364, column: 2)
!6580 = distinct !DILexicalBlock(scope: !6567, file: !384, line: 364, column: 2)
!6581 = !DILocation(line: 364, column: 2, scope: !6580)
!6582 = !DILocation(line: 365, column: 25, scope: !6583)
!6583 = distinct !DILexicalBlock(scope: !6579, file: !384, line: 364, column: 66)
!6584 = !DILocation(line: 365, column: 3, scope: !6583)
!6585 = !DILocation(line: 364, column: 62, scope: !6579)
!6586 = distinct !{!6586, !6581, !6587}
!6587 = !DILocation(line: 366, column: 2, scope: !6580)
!6588 = !DILocation(line: 369, column: 23, scope: !6567)
!6589 = !DILocation(line: 369, column: 21, scope: !6567)
!6590 = !DILocation(line: 372, column: 2, scope: !6567)
!6591 = !DILocation(line: 443, column: 2, scope: !6567)
!6592 = !DILocation(line: 444, column: 1, scope: !6567)
!6593 = distinct !DISubprogram(name: "strcpy", scope: !6594, file: !6594, line: 20, type: !6595, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2694, retainedNodes: !6599)
!6594 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6595 = !DISubroutineType(types: !6596)
!6596 = !{!977, !6597, !6598}
!6597 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !977)
!6598 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !144)
!6599 = !{!6600, !6601, !6602}
!6600 = !DILocalVariable(name: "d", arg: 1, scope: !6593, file: !6594, line: 20, type: !6597)
!6601 = !DILocalVariable(name: "s", arg: 2, scope: !6593, file: !6594, line: 20, type: !6598)
!6602 = !DILocalVariable(name: "dest", scope: !6593, file: !6594, line: 22, type: !977)
!6603 = !DILocation(line: 0, scope: !6593)
!6604 = !DILocation(line: 24, column: 9, scope: !6593)
!6605 = !DILocation(line: 24, column: 12, scope: !6593)
!6606 = !DILocation(line: 24, column: 2, scope: !6593)
!6607 = !DILocation(line: 25, column: 6, scope: !6608)
!6608 = distinct !DILexicalBlock(scope: !6593, file: !6594, line: 24, column: 21)
!6609 = !DILocation(line: 26, column: 4, scope: !6608)
!6610 = !DILocation(line: 27, column: 4, scope: !6608)
!6611 = distinct !{!6611, !6606, !6612}
!6612 = !DILocation(line: 28, column: 2, scope: !6593)
!6613 = !DILocation(line: 30, column: 5, scope: !6593)
!6614 = !DILocation(line: 32, column: 2, scope: !6593)
!6615 = distinct !DISubprogram(name: "strncpy", scope: !6594, file: !6594, line: 42, type: !6616, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2694, retainedNodes: !6618)
!6616 = !DISubroutineType(types: !6617)
!6617 = !{!977, !6597, !6598, !200}
!6618 = !{!6619, !6620, !6621, !6622}
!6619 = !DILocalVariable(name: "d", arg: 1, scope: !6615, file: !6594, line: 42, type: !6597)
!6620 = !DILocalVariable(name: "s", arg: 2, scope: !6615, file: !6594, line: 42, type: !6598)
!6621 = !DILocalVariable(name: "n", arg: 3, scope: !6615, file: !6594, line: 42, type: !200)
!6622 = !DILocalVariable(name: "dest", scope: !6615, file: !6594, line: 44, type: !977)
!6623 = !DILocation(line: 0, scope: !6615)
!6624 = !DILocation(line: 46, column: 12, scope: !6615)
!6625 = !DILocation(line: 46, column: 17, scope: !6615)
!6626 = !DILocation(line: 46, column: 20, scope: !6615)
!6627 = !DILocation(line: 46, column: 23, scope: !6615)
!6628 = !DILocation(line: 46, column: 2, scope: !6615)
!6629 = !DILocation(line: 47, column: 6, scope: !6630)
!6630 = distinct !DILexicalBlock(scope: !6615, file: !6594, line: 46, column: 32)
!6631 = !DILocation(line: 48, column: 4, scope: !6630)
!6632 = !DILocation(line: 49, column: 4, scope: !6630)
!6633 = !DILocation(line: 50, column: 4, scope: !6630)
!6634 = distinct !{!6634, !6628, !6635}
!6635 = !DILocation(line: 51, column: 2, scope: !6615)
!6636 = !DILocation(line: 54, column: 6, scope: !6637)
!6637 = distinct !DILexicalBlock(scope: !6615, file: !6594, line: 53, column: 16)
!6638 = !DILocation(line: 55, column: 4, scope: !6637)
!6639 = !DILocation(line: 56, column: 4, scope: !6637)
!6640 = !DILocation(line: 53, column: 11, scope: !6615)
!6641 = !DILocation(line: 53, column: 2, scope: !6615)
!6642 = distinct !{!6642, !6641, !6643}
!6643 = !DILocation(line: 57, column: 2, scope: !6615)
!6644 = !DILocation(line: 59, column: 2, scope: !6615)
!6645 = distinct !DISubprogram(name: "strchr", scope: !6594, file: !6594, line: 69, type: !6646, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2694, retainedNodes: !6648)
!6646 = !DISubroutineType(types: !6647)
!6647 = !{!977, !144, !103}
!6648 = !{!6649, !6650, !6651}
!6649 = !DILocalVariable(name: "s", arg: 1, scope: !6645, file: !6594, line: 69, type: !144)
!6650 = !DILocalVariable(name: "c", arg: 2, scope: !6645, file: !6594, line: 69, type: !103)
!6651 = !DILocalVariable(name: "tmp", scope: !6645, file: !6594, line: 71, type: !146)
!6652 = !DILocation(line: 0, scope: !6645)
!6653 = !DILocation(line: 73, column: 2, scope: !6645)
!6654 = !DILocation(line: 73, column: 10, scope: !6645)
!6655 = !DILocation(line: 73, column: 13, scope: !6645)
!6656 = !DILocation(line: 73, column: 21, scope: !6645)
!6657 = !DILocation(line: 74, column: 4, scope: !6658)
!6658 = distinct !DILexicalBlock(scope: !6645, file: !6594, line: 73, column: 38)
!6659 = distinct !{!6659, !6653, !6660}
!6660 = !DILocation(line: 75, column: 2, scope: !6645)
!6661 = !DILocation(line: 77, column: 9, scope: !6645)
!6662 = !DILocation(line: 77, column: 2, scope: !6645)
!6663 = distinct !DISubprogram(name: "strrchr", scope: !6594, file: !6594, line: 87, type: !6646, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2694, retainedNodes: !6664)
!6664 = !{!6665, !6666, !6667}
!6665 = !DILocalVariable(name: "s", arg: 1, scope: !6663, file: !6594, line: 87, type: !144)
!6666 = !DILocalVariable(name: "c", arg: 2, scope: !6663, file: !6594, line: 87, type: !103)
!6667 = !DILocalVariable(name: "match", scope: !6663, file: !6594, line: 89, type: !977)
!6668 = !DILocation(line: 0, scope: !6663)
!6669 = !DILocation(line: 91, column: 2, scope: !6663)
!6670 = !DILocation(line: 92, column: 7, scope: !6671)
!6671 = distinct !DILexicalBlock(scope: !6672, file: !6594, line: 92, column: 7)
!6672 = distinct !DILexicalBlock(scope: !6663, file: !6594, line: 91, column: 5)
!6673 = !DILocation(line: 92, column: 10, scope: !6671)
!6674 = !DILocation(line: 92, column: 7, scope: !6672)
!6675 = !DILocation(line: 95, column: 13, scope: !6663)
!6676 = !DILocation(line: 95, column: 2, scope: !6672)
!6677 = distinct !{!6677, !6669, !6678}
!6678 = !DILocation(line: 95, column: 15, scope: !6663)
!6679 = !DILocation(line: 97, column: 2, scope: !6663)
!6680 = distinct !DISubprogram(name: "strlen", scope: !6594, file: !6594, line: 107, type: !6681, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2694, retainedNodes: !6683)
!6681 = !DISubroutineType(types: !6682)
!6682 = !{!200, !144}
!6683 = !{!6684, !6685}
!6684 = !DILocalVariable(name: "s", arg: 1, scope: !6680, file: !6594, line: 107, type: !144)
!6685 = !DILocalVariable(name: "n", scope: !6680, file: !6594, line: 109, type: !200)
!6686 = !DILocation(line: 0, scope: !6680)
!6687 = !DILocation(line: 111, column: 9, scope: !6680)
!6688 = !DILocation(line: 111, column: 12, scope: !6680)
!6689 = !DILocation(line: 111, column: 2, scope: !6680)
!6690 = !DILocation(line: 112, column: 4, scope: !6691)
!6691 = distinct !DILexicalBlock(scope: !6680, file: !6594, line: 111, column: 21)
!6692 = !DILocation(line: 113, column: 4, scope: !6691)
!6693 = distinct !{!6693, !6689, !6694}
!6694 = !DILocation(line: 114, column: 2, scope: !6680)
!6695 = !DILocation(line: 116, column: 2, scope: !6680)
!6696 = distinct !DISubprogram(name: "strnlen", scope: !6594, file: !6594, line: 126, type: !6697, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2694, retainedNodes: !6699)
!6697 = !DISubroutineType(types: !6698)
!6698 = !{!200, !144, !200}
!6699 = !{!6700, !6701, !6702}
!6700 = !DILocalVariable(name: "s", arg: 1, scope: !6696, file: !6594, line: 126, type: !144)
!6701 = !DILocalVariable(name: "maxlen", arg: 2, scope: !6696, file: !6594, line: 126, type: !200)
!6702 = !DILocalVariable(name: "n", scope: !6696, file: !6594, line: 128, type: !200)
!6703 = !DILocation(line: 0, scope: !6696)
!6704 = !DILocation(line: 130, column: 9, scope: !6696)
!6705 = !DILocation(line: 130, column: 12, scope: !6696)
!6706 = !DILocation(line: 130, column: 20, scope: !6696)
!6707 = !DILocation(line: 130, column: 2, scope: !6696)
!6708 = !DILocation(line: 131, column: 4, scope: !6709)
!6709 = distinct !DILexicalBlock(scope: !6696, file: !6594, line: 130, column: 35)
!6710 = !DILocation(line: 132, column: 4, scope: !6709)
!6711 = distinct !{!6711, !6707, !6712}
!6712 = !DILocation(line: 133, column: 2, scope: !6696)
!6713 = !DILocation(line: 135, column: 2, scope: !6696)
!6714 = distinct !DISubprogram(name: "strcmp", scope: !6594, file: !6594, line: 145, type: !6715, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2694, retainedNodes: !6717)
!6715 = !DISubroutineType(types: !6716)
!6716 = !{!103, !144, !144}
!6717 = !{!6718, !6719}
!6718 = !DILocalVariable(name: "s1", arg: 1, scope: !6714, file: !6594, line: 145, type: !144)
!6719 = !DILocalVariable(name: "s2", arg: 2, scope: !6714, file: !6594, line: 145, type: !144)
!6720 = !DILocation(line: 0, scope: !6714)
!6721 = !DILocation(line: 147, column: 10, scope: !6714)
!6722 = !DILocation(line: 147, column: 17, scope: !6714)
!6723 = !DILocation(line: 147, column: 14, scope: !6714)
!6724 = !DILocation(line: 147, column: 22, scope: !6714)
!6725 = !DILocation(line: 148, column: 5, scope: !6726)
!6726 = distinct !DILexicalBlock(scope: !6714, file: !6594, line: 147, column: 40)
!6727 = !DILocation(line: 149, column: 5, scope: !6726)
!6728 = distinct !{!6728, !6729, !6730}
!6729 = !DILocation(line: 147, column: 2, scope: !6714)
!6730 = !DILocation(line: 150, column: 2, scope: !6714)
!6731 = !DILocation(line: 152, column: 9, scope: !6714)
!6732 = !DILocation(line: 152, column: 15, scope: !6714)
!6733 = !DILocation(line: 152, column: 13, scope: !6714)
!6734 = !DILocation(line: 152, column: 2, scope: !6714)
!6735 = distinct !DISubprogram(name: "strncmp", scope: !6594, file: !6594, line: 162, type: !6736, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2694, retainedNodes: !6738)
!6736 = !DISubroutineType(types: !6737)
!6737 = !{!103, !144, !144, !200}
!6738 = !{!6739, !6740, !6741}
!6739 = !DILocalVariable(name: "s1", arg: 1, scope: !6735, file: !6594, line: 162, type: !144)
!6740 = !DILocalVariable(name: "s2", arg: 2, scope: !6735, file: !6594, line: 162, type: !144)
!6741 = !DILocalVariable(name: "n", arg: 3, scope: !6735, file: !6594, line: 162, type: !200)
!6742 = !DILocation(line: 0, scope: !6735)
!6743 = !DILocation(line: 164, column: 17, scope: !6735)
!6744 = !DILocation(line: 164, column: 21, scope: !6735)
!6745 = !DILocation(line: 164, column: 28, scope: !6735)
!6746 = !DILocation(line: 164, column: 25, scope: !6735)
!6747 = !DILocation(line: 164, column: 33, scope: !6735)
!6748 = !DILocation(line: 165, column: 5, scope: !6749)
!6749 = distinct !DILexicalBlock(scope: !6735, file: !6594, line: 164, column: 51)
!6750 = !DILocation(line: 166, column: 5, scope: !6749)
!6751 = !DILocation(line: 167, column: 4, scope: !6749)
!6752 = distinct !{!6752, !6753, !6754}
!6753 = !DILocation(line: 164, column: 2, scope: !6735)
!6754 = !DILocation(line: 168, column: 2, scope: !6735)
!6755 = !DILocation(line: 170, column: 25, scope: !6735)
!6756 = !DILocation(line: 170, column: 31, scope: !6735)
!6757 = !DILocation(line: 170, column: 29, scope: !6735)
!6758 = !DILocation(line: 170, column: 9, scope: !6735)
!6759 = !DILocation(line: 170, column: 2, scope: !6735)
!6760 = distinct !DISubprogram(name: "strtok_r", scope: !6594, file: !6594, line: 180, type: !6761, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2694, retainedNodes: !6764)
!6761 = !DISubroutineType(types: !6762)
!6762 = !{!977, !977, !144, !6763}
!6763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !977, size: 32)
!6764 = !{!6765, !6766, !6767, !6768, !6769}
!6765 = !DILocalVariable(name: "str", arg: 1, scope: !6760, file: !6594, line: 180, type: !977)
!6766 = !DILocalVariable(name: "sep", arg: 2, scope: !6760, file: !6594, line: 180, type: !144)
!6767 = !DILocalVariable(name: "state", arg: 3, scope: !6760, file: !6594, line: 180, type: !6763)
!6768 = !DILocalVariable(name: "start", scope: !6760, file: !6594, line: 182, type: !977)
!6769 = !DILocalVariable(name: "end", scope: !6760, file: !6594, line: 182, type: !977)
!6770 = !DILocation(line: 0, scope: !6760)
!6771 = !DILocation(line: 184, column: 10, scope: !6760)
!6772 = !DILocation(line: 184, column: 22, scope: !6760)
!6773 = !DILocation(line: 187, column: 9, scope: !6760)
!6774 = !DILocation(line: 187, column: 16, scope: !6760)
!6775 = !DILocation(line: 187, column: 19, scope: !6760)
!6776 = !DILocation(line: 187, column: 2, scope: !6760)
!6777 = !DILocation(line: 188, column: 8, scope: !6778)
!6778 = distinct !DILexicalBlock(scope: !6760, file: !6594, line: 187, column: 40)
!6779 = distinct !{!6779, !6776, !6780}
!6780 = !DILocation(line: 189, column: 2, scope: !6760)
!6781 = !DILocation(line: 198, column: 9, scope: !6760)
!6782 = !DILocation(line: 198, column: 18, scope: !6760)
!6783 = !DILocation(line: 198, column: 17, scope: !6760)
!6784 = !DILocation(line: 198, column: 2, scope: !6760)
!6785 = !DILocation(line: 199, column: 6, scope: !6786)
!6786 = distinct !DILexicalBlock(scope: !6760, file: !6594, line: 198, column: 37)
!6787 = !DILocation(line: 198, column: 14, scope: !6760)
!6788 = distinct !{!6788, !6784, !6789}
!6789 = !DILocation(line: 200, column: 2, scope: !6760)
!6790 = !DILocation(line: 203, column: 8, scope: !6791)
!6791 = distinct !DILexicalBlock(scope: !6792, file: !6594, line: 202, column: 20)
!6792 = distinct !DILexicalBlock(scope: !6760, file: !6594, line: 202, column: 6)
!6793 = !DILocation(line: 204, column: 16, scope: !6791)
!6794 = !DILocation(line: 205, column: 2, scope: !6791)
!6795 = !DILocation(line: 210, column: 1, scope: !6760)
!6796 = distinct !DISubprogram(name: "strcat", scope: !6594, file: !6594, line: 212, type: !6595, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2694, retainedNodes: !6797)
!6797 = !{!6798, !6799}
!6798 = !DILocalVariable(name: "dest", arg: 1, scope: !6796, file: !6594, line: 212, type: !6597)
!6799 = !DILocalVariable(name: "src", arg: 2, scope: !6796, file: !6594, line: 212, type: !6598)
!6800 = !DILocation(line: 0, scope: !6796)
!6801 = !DILocation(line: 214, column: 16, scope: !6796)
!6802 = !DILocation(line: 214, column: 14, scope: !6796)
!6803 = !DILocation(line: 214, column: 2, scope: !6796)
!6804 = !DILocation(line: 215, column: 2, scope: !6796)
!6805 = distinct !DISubprogram(name: "strncat", scope: !6594, file: !6594, line: 218, type: !6616, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2694, retainedNodes: !6806)
!6806 = !{!6807, !6808, !6809, !6810, !6811}
!6807 = !DILocalVariable(name: "dest", arg: 1, scope: !6805, file: !6594, line: 218, type: !6597)
!6808 = !DILocalVariable(name: "src", arg: 2, scope: !6805, file: !6594, line: 218, type: !6598)
!6809 = !DILocalVariable(name: "n", arg: 3, scope: !6805, file: !6594, line: 219, type: !200)
!6810 = !DILocalVariable(name: "orig_dest", scope: !6805, file: !6594, line: 221, type: !977)
!6811 = !DILocalVariable(name: "len", scope: !6805, file: !6594, line: 222, type: !200)
!6812 = !DILocation(line: 0, scope: !6805)
!6813 = !DILocation(line: 222, column: 15, scope: !6805)
!6814 = !DILocation(line: 224, column: 7, scope: !6805)
!6815 = !DILocation(line: 225, column: 14, scope: !6805)
!6816 = !DILocation(line: 225, column: 19, scope: !6805)
!6817 = !DILocation(line: 225, column: 11, scope: !6805)
!6818 = !DILocation(line: 225, column: 23, scope: !6805)
!6819 = !DILocation(line: 225, column: 28, scope: !6805)
!6820 = !DILocation(line: 225, column: 2, scope: !6805)
!6821 = !DILocation(line: 226, column: 17, scope: !6822)
!6822 = distinct !DILexicalBlock(scope: !6805, file: !6594, line: 225, column: 38)
!6823 = !DILocation(line: 226, column: 8, scope: !6822)
!6824 = !DILocation(line: 226, column: 11, scope: !6822)
!6825 = distinct !{!6825, !6820, !6826}
!6826 = !DILocation(line: 227, column: 2, scope: !6805)
!6827 = !DILocation(line: 228, column: 8, scope: !6805)
!6828 = !DILocation(line: 230, column: 2, scope: !6805)
!6829 = distinct !DISubprogram(name: "memcmp", scope: !6594, file: !6594, line: 239, type: !6830, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2694, retainedNodes: !6832)
!6830 = !DISubroutineType(types: !6831)
!6831 = !{!103, !13, !13, !200}
!6832 = !{!6833, !6834, !6835, !6836, !6837}
!6833 = !DILocalVariable(name: "m1", arg: 1, scope: !6829, file: !6594, line: 239, type: !13)
!6834 = !DILocalVariable(name: "m2", arg: 2, scope: !6829, file: !6594, line: 239, type: !13)
!6835 = !DILocalVariable(name: "n", arg: 3, scope: !6829, file: !6594, line: 239, type: !200)
!6836 = !DILocalVariable(name: "c1", scope: !6829, file: !6594, line: 241, type: !144)
!6837 = !DILocalVariable(name: "c2", scope: !6829, file: !6594, line: 242, type: !144)
!6838 = !DILocation(line: 0, scope: !6829)
!6839 = !DILocation(line: 244, column: 7, scope: !6840)
!6840 = distinct !DILexicalBlock(scope: !6829, file: !6594, line: 244, column: 6)
!6841 = !DILocation(line: 244, column: 6, scope: !6829)
!6842 = !DILocation(line: 248, column: 10, scope: !6829)
!6843 = !DILocation(line: 248, column: 14, scope: !6829)
!6844 = !DILocation(line: 248, column: 19, scope: !6829)
!6845 = !DILocation(line: 248, column: 2, scope: !6829)
!6846 = !DILocation(line: 248, column: 23, scope: !6829)
!6847 = !DILocation(line: 248, column: 30, scope: !6829)
!6848 = !DILocation(line: 248, column: 27, scope: !6829)
!6849 = !DILocation(line: 249, column: 5, scope: !6850)
!6850 = distinct !DILexicalBlock(scope: !6829, file: !6594, line: 248, column: 36)
!6851 = !DILocation(line: 250, column: 5, scope: !6850)
!6852 = distinct !{!6852, !6845, !6853}
!6853 = !DILocation(line: 251, column: 2, scope: !6829)
!6854 = !DILocation(line: 253, column: 9, scope: !6829)
!6855 = !DILocation(line: 253, column: 15, scope: !6829)
!6856 = !DILocation(line: 253, column: 13, scope: !6829)
!6857 = !DILocation(line: 253, column: 2, scope: !6829)
!6858 = !DILocation(line: 254, column: 1, scope: !6829)
!6859 = distinct !DISubprogram(name: "memmove", scope: !6594, file: !6594, line: 263, type: !6860, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2694, retainedNodes: !6862)
!6860 = !DISubroutineType(types: !6861)
!6861 = !{!102, !102, !13, !200}
!6862 = !{!6863, !6864, !6865, !6866, !6867}
!6863 = !DILocalVariable(name: "d", arg: 1, scope: !6859, file: !6594, line: 263, type: !102)
!6864 = !DILocalVariable(name: "s", arg: 2, scope: !6859, file: !6594, line: 263, type: !13)
!6865 = !DILocalVariable(name: "n", arg: 3, scope: !6859, file: !6594, line: 263, type: !200)
!6866 = !DILocalVariable(name: "dest", scope: !6859, file: !6594, line: 265, type: !977)
!6867 = !DILocalVariable(name: "src", scope: !6859, file: !6594, line: 266, type: !144)
!6868 = !DILocation(line: 0, scope: !6859)
!6869 = !DILocation(line: 268, column: 21, scope: !6870)
!6870 = distinct !DILexicalBlock(scope: !6859, file: !6594, line: 268, column: 6)
!6871 = !DILocation(line: 268, column: 28, scope: !6870)
!6872 = !DILocation(line: 268, column: 6, scope: !6859)
!6873 = !DILocation(line: 280, column: 12, scope: !6874)
!6874 = distinct !DILexicalBlock(scope: !6870, file: !6594, line: 278, column: 9)
!6875 = !DILocation(line: 280, column: 3, scope: !6874)
!6876 = !DILocation(line: 275, column: 5, scope: !6877)
!6877 = distinct !DILexicalBlock(scope: !6878, file: !6594, line: 274, column: 17)
!6878 = distinct !DILexicalBlock(scope: !6870, file: !6594, line: 268, column: 33)
!6879 = !DILocation(line: 276, column: 14, scope: !6877)
!6880 = !DILocation(line: 276, column: 4, scope: !6877)
!6881 = !DILocation(line: 276, column: 12, scope: !6877)
!6882 = !DILocation(line: 274, column: 12, scope: !6878)
!6883 = !DILocation(line: 274, column: 3, scope: !6878)
!6884 = distinct !{!6884, !6883, !6885}
!6885 = !DILocation(line: 277, column: 3, scope: !6878)
!6886 = !DILocation(line: 281, column: 12, scope: !6887)
!6887 = distinct !DILexicalBlock(scope: !6874, file: !6594, line: 280, column: 17)
!6888 = !DILocation(line: 281, column: 10, scope: !6887)
!6889 = !DILocation(line: 282, column: 8, scope: !6887)
!6890 = !DILocation(line: 283, column: 7, scope: !6887)
!6891 = !DILocation(line: 284, column: 5, scope: !6887)
!6892 = distinct !{!6892, !6875, !6893}
!6893 = !DILocation(line: 285, column: 3, scope: !6874)
!6894 = !DILocation(line: 288, column: 2, scope: !6859)
!6895 = distinct !DISubprogram(name: "memcpy", scope: !6594, file: !6594, line: 298, type: !6896, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2694, retainedNodes: !6900)
!6896 = !DISubroutineType(types: !6897)
!6897 = !{!102, !6898, !6899, !200}
!6898 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!6899 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!6900 = !{!6901, !6902, !6903, !6904, !6905}
!6901 = !DILocalVariable(name: "d", arg: 1, scope: !6895, file: !6594, line: 298, type: !6898)
!6902 = !DILocalVariable(name: "s", arg: 2, scope: !6895, file: !6594, line: 298, type: !6899)
!6903 = !DILocalVariable(name: "n", arg: 3, scope: !6895, file: !6594, line: 298, type: !200)
!6904 = !DILocalVariable(name: "d_byte", scope: !6895, file: !6594, line: 302, type: !812)
!6905 = !DILocalVariable(name: "s_byte", scope: !6895, file: !6594, line: 303, type: !2697)
!6906 = !DILocation(line: 0, scope: !6895)
!6907 = !DILocation(line: 337, column: 11, scope: !6895)
!6908 = !DILocation(line: 337, column: 2, scope: !6895)
!6909 = !DILocation(line: 338, column: 25, scope: !6910)
!6910 = distinct !DILexicalBlock(scope: !6895, file: !6594, line: 337, column: 16)
!6911 = !DILocation(line: 338, column: 17, scope: !6910)
!6912 = !DILocation(line: 338, column: 11, scope: !6910)
!6913 = !DILocation(line: 338, column: 15, scope: !6910)
!6914 = !DILocation(line: 339, column: 4, scope: !6910)
!6915 = distinct !{!6915, !6908, !6916}
!6916 = !DILocation(line: 340, column: 2, scope: !6895)
!6917 = !DILocation(line: 342, column: 2, scope: !6895)
!6918 = distinct !DISubprogram(name: "memset", scope: !6594, file: !6594, line: 352, type: !6919, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2694, retainedNodes: !6921)
!6919 = !DISubroutineType(types: !6920)
!6920 = !{!102, !102, !103, !200}
!6921 = !{!6922, !6923, !6924, !6925, !6926}
!6922 = !DILocalVariable(name: "buf", arg: 1, scope: !6918, file: !6594, line: 352, type: !102)
!6923 = !DILocalVariable(name: "c", arg: 2, scope: !6918, file: !6594, line: 352, type: !103)
!6924 = !DILocalVariable(name: "n", arg: 3, scope: !6918, file: !6594, line: 352, type: !200)
!6925 = !DILocalVariable(name: "d_byte", scope: !6918, file: !6594, line: 356, type: !812)
!6926 = !DILocalVariable(name: "c_byte", scope: !6918, file: !6594, line: 357, type: !155)
!6927 = !DILocation(line: 0, scope: !6918)
!6928 = !DILocation(line: 357, column: 25, scope: !6918)
!6929 = !DILocation(line: 389, column: 11, scope: !6918)
!6930 = !DILocation(line: 389, column: 2, scope: !6918)
!6931 = !DILocation(line: 390, column: 11, scope: !6932)
!6932 = distinct !DILexicalBlock(scope: !6918, file: !6594, line: 389, column: 16)
!6933 = !DILocation(line: 390, column: 15, scope: !6932)
!6934 = !DILocation(line: 391, column: 4, scope: !6932)
!6935 = distinct !{!6935, !6930, !6936}
!6936 = !DILocation(line: 392, column: 2, scope: !6918)
!6937 = !DILocation(line: 394, column: 2, scope: !6918)
!6938 = distinct !DISubprogram(name: "memchr", scope: !6594, file: !6594, line: 404, type: !6939, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2694, retainedNodes: !6941)
!6939 = !DISubroutineType(types: !6940)
!6940 = !{!102, !13, !103, !200}
!6941 = !{!6942, !6943, !6944, !6945}
!6942 = !DILocalVariable(name: "s", arg: 1, scope: !6938, file: !6594, line: 404, type: !13)
!6943 = !DILocalVariable(name: "c", arg: 2, scope: !6938, file: !6594, line: 404, type: !103)
!6944 = !DILocalVariable(name: "n", arg: 3, scope: !6938, file: !6594, line: 404, type: !200)
!6945 = !DILocalVariable(name: "p", scope: !6946, file: !6594, line: 407, type: !2697)
!6946 = distinct !DILexicalBlock(scope: !6947, file: !6594, line: 406, column: 14)
!6947 = distinct !DILexicalBlock(scope: !6938, file: !6594, line: 406, column: 6)
!6948 = !DILocation(line: 0, scope: !6938)
!6949 = !DILocation(line: 406, column: 8, scope: !6947)
!6950 = !DILocation(line: 406, column: 6, scope: !6938)
!6951 = !DILocation(line: 409, column: 3, scope: !6946)
!6952 = !DILocation(line: 0, scope: !6946)
!6953 = !DILocation(line: 410, column: 8, scope: !6954)
!6954 = distinct !DILexicalBlock(scope: !6955, file: !6594, line: 410, column: 8)
!6955 = distinct !DILexicalBlock(scope: !6946, file: !6594, line: 409, column: 6)
!6956 = !DILocation(line: 410, column: 13, scope: !6954)
!6957 = !DILocation(line: 410, column: 8, scope: !6955)
!6958 = distinct !{!6958, !6951, !6959}
!6959 = !DILocation(line: 414, column: 20, scope: !6946)
!6960 = !DILocation(line: 417, column: 2, scope: !6938)
!6961 = !DILocation(line: 418, column: 1, scope: !6938)
!6962 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !394, file: !394, line: 23, type: !3169, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6963)
!6963 = !{!6964}
!6964 = !DILocalVariable(name: "hook", arg: 1, scope: !6962, file: !394, line: 23, type: !106)
!6965 = !DILocation(line: 0, scope: !6962)
!6966 = !DILocation(line: 25, column: 15, scope: !6962)
!6967 = !DILocation(line: 26, column: 1, scope: !6962)
!6968 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !394, file: !394, line: 14, type: !107, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6969)
!6969 = !{!6970}
!6970 = !DILocalVariable(name: "c", arg: 1, scope: !6968, file: !394, line: 14, type: !103)
!6971 = !DILocation(line: 0, scope: !6968)
!6972 = !DILocation(line: 18, column: 2, scope: !6968)
!6973 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !394, file: !394, line: 28, type: !6974, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6976)
!6974 = !DISubroutineType(types: !6975)
!6975 = !{!103, !103, !390}
!6976 = !{!6977, !6978}
!6977 = !DILocalVariable(name: "c", arg: 1, scope: !6973, file: !394, line: 28, type: !103)
!6978 = !DILocalVariable(name: "stream", arg: 2, scope: !6973, file: !394, line: 28, type: !390)
!6979 = !DILocation(line: 0, scope: !6973)
!6980 = !DILocation(line: 30, column: 27, scope: !6973)
!6981 = !DILocation(line: 30, column: 50, scope: !6973)
!6982 = !DILocation(line: 30, column: 9, scope: !6973)
!6983 = !DILocation(line: 30, column: 2, scope: !6973)
!6984 = distinct !DISubprogram(name: "fputc", scope: !394, file: !394, line: 41, type: !6974, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6985)
!6985 = !{!6986, !6987}
!6986 = !DILocalVariable(name: "c", arg: 1, scope: !6984, file: !394, line: 41, type: !103)
!6987 = !DILocalVariable(name: "stream", arg: 2, scope: !6984, file: !394, line: 41, type: !390)
!6988 = !DILocation(line: 0, scope: !6984)
!6989 = !DILocation(line: 43, column: 9, scope: !6984)
!6990 = !DILocation(line: 43, column: 2, scope: !6984)
!6991 = distinct !DISubprogram(name: "zephyr_fputc", scope: !6992, file: !6992, line: 72, type: !6974, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6993)
!6992 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/sensor/thermometer")
!6993 = !{!6994, !6995}
!6994 = !DILocalVariable(name: "c", arg: 1, scope: !6991, file: !6992, line: 72, type: !103)
!6995 = !DILocalVariable(name: "stream", arg: 2, scope: !6991, file: !6992, line: 72, type: !390)
!6996 = !DILocation(line: 0, scope: !6991)
!6997 = !DILocation(line: 81, column: 2, scope: !6998)
!6998 = distinct !DILexicalBlock(scope: !6991, file: !6992, line: 81, column: 2)
!6999 = !{i64 2154903560}
!7000 = !DILocation(line: 82, column: 9, scope: !6991)
!7001 = !DILocation(line: 82, column: 2, scope: !6991)
!7002 = distinct !DISubprogram(name: "fputs", scope: !394, file: !394, line: 46, type: !7003, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !7006)
!7003 = !DISubroutineType(types: !7004)
!7004 = !{!103, !6598, !7005}
!7005 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !390)
!7006 = !{!7007, !7008, !7009, !7010}
!7007 = !DILocalVariable(name: "s", arg: 1, scope: !7002, file: !394, line: 46, type: !6598)
!7008 = !DILocalVariable(name: "stream", arg: 2, scope: !7002, file: !394, line: 46, type: !7005)
!7009 = !DILocalVariable(name: "len", scope: !7002, file: !394, line: 48, type: !103)
!7010 = !DILocalVariable(name: "ret", scope: !7002, file: !394, line: 49, type: !103)
!7011 = !DILocation(line: 0, scope: !7002)
!7012 = !DILocation(line: 48, column: 12, scope: !7002)
!7013 = !DILocation(line: 51, column: 8, scope: !7002)
!7014 = !DILocation(line: 53, column: 13, scope: !7002)
!7015 = !DILocation(line: 53, column: 9, scope: !7002)
!7016 = !DILocation(line: 53, column: 2, scope: !7002)
!7017 = distinct !DISubprogram(name: "fwrite", scope: !394, file: !394, line: 99, type: !7018, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !7020)
!7018 = !DISubroutineType(types: !7019)
!7019 = !{!200, !6899, !200, !200, !7005}
!7020 = !{!7021, !7022, !7023, !7024}
!7021 = !DILocalVariable(name: "ptr", arg: 1, scope: !7017, file: !394, line: 99, type: !6899)
!7022 = !DILocalVariable(name: "size", arg: 2, scope: !7017, file: !394, line: 99, type: !200)
!7023 = !DILocalVariable(name: "nitems", arg: 3, scope: !7017, file: !394, line: 99, type: !200)
!7024 = !DILocalVariable(name: "stream", arg: 4, scope: !7017, file: !394, line: 100, type: !7005)
!7025 = !DILocation(line: 0, scope: !7017)
!7026 = !DILocation(line: 102, column: 9, scope: !7017)
!7027 = !DILocation(line: 102, column: 2, scope: !7017)
!7028 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !6992, file: !6992, line: 96, type: !7018, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !7029)
!7029 = !{!7030, !7031, !7032, !7033}
!7030 = !DILocalVariable(name: "ptr", arg: 1, scope: !7028, file: !6992, line: 96, type: !6899)
!7031 = !DILocalVariable(name: "size", arg: 2, scope: !7028, file: !6992, line: 96, type: !200)
!7032 = !DILocalVariable(name: "nitems", arg: 3, scope: !7028, file: !6992, line: 96, type: !200)
!7033 = !DILocalVariable(name: "stream", arg: 4, scope: !7028, file: !6992, line: 96, type: !7005)
!7034 = !DILocation(line: 0, scope: !7028)
!7035 = !DILocation(line: 107, column: 2, scope: !7036)
!7036 = distinct !DILexicalBlock(scope: !7028, file: !6992, line: 107, column: 2)
!7037 = !{i64 2154903664}
!7038 = !DILocation(line: 108, column: 9, scope: !7028)
!7039 = !DILocation(line: 108, column: 2, scope: !7028)
!7040 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !394, file: !394, line: 56, type: !7018, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !7041)
!7041 = !{!7042, !7043, !7044, !7045, !7046, !7047, !7048, !7049}
!7042 = !DILocalVariable(name: "ptr", arg: 1, scope: !7040, file: !394, line: 56, type: !6899)
!7043 = !DILocalVariable(name: "size", arg: 2, scope: !7040, file: !394, line: 56, type: !200)
!7044 = !DILocalVariable(name: "nitems", arg: 3, scope: !7040, file: !394, line: 57, type: !200)
!7045 = !DILocalVariable(name: "stream", arg: 4, scope: !7040, file: !394, line: 57, type: !7005)
!7046 = !DILocalVariable(name: "i", scope: !7040, file: !394, line: 59, type: !200)
!7047 = !DILocalVariable(name: "j", scope: !7040, file: !394, line: 60, type: !200)
!7048 = !DILocalVariable(name: "p", scope: !7040, file: !394, line: 61, type: !2697)
!7049 = !DILabel(scope: !7040, name: "done", file: !394, line: 82)
!7050 = !DILocation(line: 0, scope: !7040)
!7051 = !DILocation(line: 63, column: 14, scope: !7052)
!7052 = distinct !DILexicalBlock(scope: !7040, file: !394, line: 63, column: 6)
!7053 = !DILocation(line: 63, column: 24, scope: !7052)
!7054 = !DILocation(line: 72, column: 3, scope: !7055)
!7055 = distinct !DILexicalBlock(scope: !7040, file: !394, line: 70, column: 5)
!7056 = !DILocation(line: 0, scope: !7055)
!7057 = !DILocation(line: 73, column: 8, scope: !7058)
!7058 = distinct !DILexicalBlock(scope: !7059, file: !394, line: 73, column: 8)
!7059 = distinct !DILexicalBlock(scope: !7055, file: !394, line: 72, column: 6)
!7060 = !DILocation(line: 73, column: 29, scope: !7058)
!7061 = !DILocation(line: 73, column: 27, scope: !7058)
!7062 = !DILocation(line: 73, column: 21, scope: !7058)
!7063 = !DILocation(line: 73, column: 33, scope: !7058)
!7064 = !DILocation(line: 73, column: 8, scope: !7059)
!7065 = !DILocation(line: 76, column: 5, scope: !7059)
!7066 = !DILocation(line: 77, column: 14, scope: !7055)
!7067 = !DILocation(line: 77, column: 3, scope: !7059)
!7068 = distinct !{!7068, !7054, !7069}
!7069 = !DILocation(line: 77, column: 17, scope: !7055)
!7070 = !DILocation(line: 79, column: 4, scope: !7055)
!7071 = !DILocation(line: 80, column: 13, scope: !7040)
!7072 = !DILocation(line: 80, column: 2, scope: !7055)
!7073 = distinct !{!7073, !7074, !7075}
!7074 = !DILocation(line: 70, column: 2, scope: !7040)
!7075 = !DILocation(line: 80, column: 16, scope: !7040)
!7076 = !DILocation(line: 82, column: 1, scope: !7040)
!7077 = !DILocation(line: 83, column: 17, scope: !7040)
!7078 = !DILocation(line: 83, column: 2, scope: !7040)
!7079 = !DILocation(line: 84, column: 1, scope: !7040)
!7080 = distinct !DISubprogram(name: "puts", scope: !394, file: !394, line: 106, type: !7081, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !7083)
!7081 = !DISubroutineType(types: !7082)
!7082 = !{!103, !144}
!7083 = !{!7084}
!7084 = !DILocalVariable(name: "s", arg: 1, scope: !7080, file: !394, line: 106, type: !144)
!7085 = !DILocation(line: 0, scope: !7080)
!7086 = !DILocation(line: 108, column: 6, scope: !7087)
!7087 = distinct !DILexicalBlock(scope: !7080, file: !394, line: 108, column: 6)
!7088 = !DILocation(line: 108, column: 23, scope: !7087)
!7089 = !DILocation(line: 108, column: 6, scope: !7080)
!7090 = !DILocation(line: 112, column: 9, scope: !7080)
!7091 = !DILocation(line: 112, column: 29, scope: !7080)
!7092 = !DILocation(line: 112, column: 2, scope: !7080)
!7093 = !DILocation(line: 113, column: 1, scope: !7080)
!7094 = distinct !DISubprogram(name: "fprintf", scope: !7095, file: !7095, line: 15, type: !7096, scopeLine: 16, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2699, retainedNodes: !7098)
!7095 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/fprintf.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7096 = !DISubroutineType(types: !7097)
!7097 = !{!103, !7005, !6598, null}
!7098 = !{!7099, !7100, !7101, !7108}
!7099 = !DILocalVariable(name: "stream", arg: 1, scope: !7094, file: !7095, line: 15, type: !7005)
!7100 = !DILocalVariable(name: "format", arg: 2, scope: !7094, file: !7095, line: 15, type: !6598)
!7101 = !DILocalVariable(name: "vargs", scope: !7094, file: !7095, line: 17, type: !7102)
!7102 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3185, line: 99, baseType: !7103)
!7103 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3185, line: 40, baseType: !7104)
!7104 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !7095, baseType: !7105)
!7105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !7106)
!7106 = !{!7107}
!7107 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !7105, file: !7095, line: 17, baseType: !102, size: 32)
!7108 = !DILocalVariable(name: "r", scope: !7094, file: !7095, line: 18, type: !103)
!7109 = !DILocation(line: 0, scope: !7094)
!7110 = !DILocation(line: 17, column: 2, scope: !7094)
!7111 = !DILocation(line: 17, column: 10, scope: !7094)
!7112 = !DILocation(line: 20, column: 2, scope: !7094)
!7113 = !DILocation(line: 21, column: 23, scope: !7094)
!7114 = !DILocation(line: 21, column: 6, scope: !7094)
!7115 = !DILocation(line: 22, column: 2, scope: !7094)
!7116 = !DILocation(line: 25, column: 1, scope: !7094)
!7117 = !DILocation(line: 24, column: 2, scope: !7094)
!7118 = distinct !DISubprogram(name: "cbvprintf", scope: !3218, file: !3218, line: 739, type: !7119, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2699, retainedNodes: !7121)
!7119 = !DISubroutineType(types: !7120)
!7120 = !{!103, !3221, !102, !144, !7102}
!7121 = !{!7122, !7123, !7124, !7125}
!7122 = !DILocalVariable(name: "out", arg: 1, scope: !7118, file: !3218, line: 739, type: !3221)
!7123 = !DILocalVariable(name: "ctx", arg: 2, scope: !7118, file: !3218, line: 739, type: !102)
!7124 = !DILocalVariable(name: "format", arg: 3, scope: !7118, file: !3218, line: 739, type: !144)
!7125 = !DILocalVariable(name: "ap", arg: 4, scope: !7118, file: !3218, line: 739, type: !7102)
!7126 = !DILocation(line: 0, scope: !7118)
!7127 = !DILocation(line: 741, column: 9, scope: !7118)
!7128 = !DILocation(line: 741, column: 2, scope: !7118)
!7129 = distinct !DISubprogram(name: "vfprintf", scope: !7095, file: !7095, line: 27, type: !7130, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2699, retainedNodes: !7132)
!7130 = !DISubroutineType(types: !7131)
!7131 = !{!103, !7005, !6598, !7102}
!7132 = !{!7133, !7134, !7135, !7136}
!7133 = !DILocalVariable(name: "stream", arg: 1, scope: !7129, file: !7095, line: 27, type: !7005)
!7134 = !DILocalVariable(name: "format", arg: 2, scope: !7129, file: !7095, line: 27, type: !6598)
!7135 = !DILocalVariable(name: "vargs", arg: 3, scope: !7129, file: !7095, line: 28, type: !7102)
!7136 = !DILocalVariable(name: "r", scope: !7129, file: !7095, line: 30, type: !103)
!7137 = !DILocation(line: 0, scope: !7129)
!7138 = !DILocation(line: 32, column: 23, scope: !7129)
!7139 = !DILocation(line: 32, column: 6, scope: !7129)
!7140 = !DILocation(line: 34, column: 2, scope: !7129)
!7141 = distinct !DISubprogram(name: "printf", scope: !7095, file: !7095, line: 37, type: !7142, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2699, retainedNodes: !7144)
!7142 = !DISubroutineType(types: !7143)
!7143 = !{!103, !6598, null}
!7144 = !{!7145, !7146, !7147}
!7145 = !DILocalVariable(name: "format", arg: 1, scope: !7141, file: !7095, line: 37, type: !6598)
!7146 = !DILocalVariable(name: "vargs", scope: !7141, file: !7095, line: 39, type: !7102)
!7147 = !DILocalVariable(name: "r", scope: !7141, file: !7095, line: 40, type: !103)
!7148 = !DILocation(line: 0, scope: !7141)
!7149 = !DILocation(line: 39, column: 2, scope: !7141)
!7150 = !DILocation(line: 39, column: 10, scope: !7141)
!7151 = !DILocation(line: 42, column: 2, scope: !7141)
!7152 = !DILocation(line: 43, column: 6, scope: !7141)
!7153 = !DILocation(line: 44, column: 2, scope: !7141)
!7154 = !DILocation(line: 47, column: 1, scope: !7141)
!7155 = !DILocation(line: 46, column: 2, scope: !7141)
!7156 = distinct !DISubprogram(name: "vprintf", scope: !7095, file: !7095, line: 49, type: !7157, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2699, retainedNodes: !7159)
!7157 = !DISubroutineType(types: !7158)
!7158 = !{!103, !6598, !7102}
!7159 = !{!7160, !7161, !7162}
!7160 = !DILocalVariable(name: "format", arg: 1, scope: !7156, file: !7095, line: 49, type: !6598)
!7161 = !DILocalVariable(name: "vargs", arg: 2, scope: !7156, file: !7095, line: 49, type: !7102)
!7162 = !DILocalVariable(name: "r", scope: !7156, file: !7095, line: 51, type: !103)
!7163 = !DILocation(line: 0, scope: !7156)
!7164 = !DILocation(line: 53, column: 6, scope: !7156)
!7165 = !DILocation(line: 55, column: 2, scope: !7156)
!7166 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !527, file: !527, line: 368, type: !580, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7167)
!7167 = !{!7168}
!7168 = !DILocalVariable(name: "dev", arg: 1, scope: !7166, file: !527, line: 368, type: !556)
!7169 = !DILocation(line: 0, scope: !7166)
!7170 = !DILocation(line: 370, column: 2, scope: !7166)
!7171 = !DILocation(line: 371, column: 1, scope: !7166)
!7172 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !527, file: !527, line: 243, type: !7173, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7175)
!7173 = !DISubroutineType(types: !7174)
!7174 = !{null, !103, !103, !556}
!7175 = !{!7176, !7177, !7178, !7179, !7181}
!7176 = !DILocalVariable(name: "min", arg: 1, scope: !7172, file: !527, line: 243, type: !103)
!7177 = !DILocalVariable(name: "max", arg: 2, scope: !7172, file: !527, line: 243, type: !103)
!7178 = !DILocalVariable(name: "dev", arg: 3, scope: !7172, file: !527, line: 243, type: !556)
!7179 = !DILocalVariable(name: "data", scope: !7172, file: !527, line: 245, type: !7180)
!7180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !560, size: 32)
!7181 = !DILocalVariable(name: "line", scope: !7172, file: !527, line: 246, type: !103)
!7182 = !DILocation(line: 0, scope: !7172)
!7183 = !DILocation(line: 245, column: 38, scope: !7172)
!7184 = !DILocation(line: 249, column: 24, scope: !7185)
!7185 = distinct !DILexicalBlock(scope: !7186, file: !527, line: 249, column: 2)
!7186 = distinct !DILexicalBlock(scope: !7172, file: !527, line: 249, column: 2)
!7187 = !DILocation(line: 249, column: 2, scope: !7186)
!7188 = !DILocation(line: 251, column: 7, scope: !7189)
!7189 = distinct !DILexicalBlock(scope: !7190, file: !527, line: 251, column: 7)
!7190 = distinct !DILexicalBlock(scope: !7185, file: !527, line: 249, column: 39)
!7191 = !DILocation(line: 251, column: 7, scope: !7190)
!7192 = !DILocation(line: 253, column: 4, scope: !7193)
!7193 = distinct !DILexicalBlock(scope: !7189, file: !527, line: 251, column: 36)
!7194 = !DILocation(line: 256, column: 24, scope: !7195)
!7195 = distinct !DILexicalBlock(scope: !7193, file: !527, line: 256, column: 8)
!7196 = !DILocation(line: 256, column: 9, scope: !7195)
!7197 = !DILocation(line: 256, column: 8, scope: !7193)
!7198 = !DILocation(line: 260, column: 43, scope: !7193)
!7199 = !DILocation(line: 260, column: 4, scope: !7193)
!7200 = !DILocation(line: 261, column: 3, scope: !7193)
!7201 = !DILocation(line: 249, column: 35, scope: !7185)
!7202 = distinct !{!7202, !7187, !7203}
!7203 = !DILocation(line: 262, column: 2, scope: !7186)
!7204 = !DILocation(line: 263, column: 1, scope: !7172)
!7205 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !527, file: !527, line: 158, type: !107, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7206)
!7206 = !{!7207}
!7207 = !DILocalVariable(name: "line", arg: 1, scope: !7205, file: !527, line: 158, type: !103)
!7208 = !DILocation(line: 0, scope: !7205)
!7209 = !DILocation(line: 170, column: 38, scope: !7210)
!7210 = distinct !DILexicalBlock(scope: !7211, file: !527, line: 160, column: 17)
!7211 = distinct !DILexicalBlock(scope: !7205, file: !527, line: 160, column: 6)
!7212 = !DILocation(line: 170, column: 10, scope: !7210)
!7213 = !DILocation(line: 176, column: 1, scope: !7205)
!7214 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !527, file: !527, line: 183, type: !7215, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7217)
!7215 = !DISubroutineType(types: !7216)
!7216 = !{null, !103}
!7217 = !{!7218}
!7218 = !DILocalVariable(name: "line", arg: 1, scope: !7214, file: !527, line: 183, type: !103)
!7219 = !DILocation(line: 0, scope: !7214)
!7220 = !DILocation(line: 195, column: 28, scope: !7221)
!7221 = distinct !DILexicalBlock(scope: !7222, file: !527, line: 185, column: 17)
!7222 = distinct !DILexicalBlock(scope: !7214, file: !527, line: 185, column: 6)
!7223 = !DILocation(line: 195, column: 3, scope: !7221)
!7224 = !DILocation(line: 200, column: 1, scope: !7214)
!7225 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !7226, file: !7226, line: 910, type: !5589, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7227)
!7226 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7227 = !{!7228}
!7228 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7225, file: !7226, line: 910, type: !121)
!7229 = !DILocation(line: 0, scope: !7225)
!7230 = !DILocation(line: 912, column: 3, scope: !7225)
!7231 = !DILocation(line: 913, column: 1, scope: !7225)
!7232 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !7226, file: !7226, line: 834, type: !6506, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7233)
!7233 = !{!7234}
!7234 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7232, file: !7226, line: 834, type: !121)
!7235 = !DILocation(line: 0, scope: !7232)
!7236 = !DILocation(line: 836, column: 11, scope: !7232)
!7237 = !DILocation(line: 836, column: 40, scope: !7232)
!7238 = !DILocation(line: 836, column: 3, scope: !7232)
!7239 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !527, file: !527, line: 304, type: !580, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7240)
!7240 = !{!7241}
!7241 = !DILocalVariable(name: "dev", arg: 1, scope: !7239, file: !527, line: 304, type: !556)
!7242 = !DILocation(line: 0, scope: !7239)
!7243 = !DILocation(line: 306, column: 2, scope: !7239)
!7244 = !DILocation(line: 307, column: 1, scope: !7239)
!7245 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !527, file: !527, line: 299, type: !580, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7246)
!7246 = !{!7247}
!7247 = !DILocalVariable(name: "dev", arg: 1, scope: !7245, file: !527, line: 299, type: !556)
!7248 = !DILocation(line: 0, scope: !7245)
!7249 = !DILocation(line: 301, column: 2, scope: !7245)
!7250 = !DILocation(line: 302, column: 1, scope: !7245)
!7251 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !527, file: !527, line: 294, type: !580, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7252)
!7252 = !{!7253}
!7253 = !DILocalVariable(name: "dev", arg: 1, scope: !7251, file: !527, line: 294, type: !556)
!7254 = !DILocation(line: 0, scope: !7251)
!7255 = !DILocation(line: 296, column: 2, scope: !7251)
!7256 = !DILocation(line: 297, column: 1, scope: !7251)
!7257 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !527, file: !527, line: 397, type: !580, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7258)
!7258 = !{!7259}
!7259 = !DILocalVariable(name: "dev", arg: 1, scope: !7257, file: !527, line: 397, type: !556)
!7260 = !DILocation(line: 0, scope: !7257)
!7261 = !DILocation(line: 399, column: 2, scope: !7257)
!7262 = !DILocation(line: 400, column: 1, scope: !7257)
!7263 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !527, file: !527, line: 392, type: !580, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7264)
!7264 = !{!7265}
!7265 = !DILocalVariable(name: "dev", arg: 1, scope: !7263, file: !527, line: 392, type: !556)
!7266 = !DILocation(line: 0, scope: !7263)
!7267 = !DILocation(line: 394, column: 2, scope: !7263)
!7268 = !DILocation(line: 395, column: 1, scope: !7263)
!7269 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !527, file: !527, line: 289, type: !580, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7270)
!7270 = !{!7271}
!7271 = !DILocalVariable(name: "dev", arg: 1, scope: !7269, file: !527, line: 289, type: !556)
!7272 = !DILocation(line: 0, scope: !7269)
!7273 = !DILocation(line: 291, column: 2, scope: !7269)
!7274 = !DILocation(line: 292, column: 1, scope: !7269)
!7275 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !527, file: !527, line: 387, type: !580, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7276)
!7276 = !{!7277}
!7277 = !DILocalVariable(name: "dev", arg: 1, scope: !7275, file: !527, line: 387, type: !556)
!7278 = !DILocation(line: 0, scope: !7275)
!7279 = !DILocation(line: 389, column: 2, scope: !7275)
!7280 = !DILocation(line: 390, column: 1, scope: !7275)
!7281 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !527, file: !527, line: 382, type: !580, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7282)
!7282 = !{!7283}
!7283 = !DILocalVariable(name: "dev", arg: 1, scope: !7281, file: !527, line: 382, type: !556)
!7284 = !DILocation(line: 0, scope: !7281)
!7285 = !DILocation(line: 384, column: 2, scope: !7281)
!7286 = !DILocation(line: 385, column: 1, scope: !7281)
!7287 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !527, file: !527, line: 373, type: !580, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7288)
!7288 = !{!7289}
!7289 = !DILocalVariable(name: "dev", arg: 1, scope: !7287, file: !527, line: 373, type: !556)
!7290 = !DILocation(line: 0, scope: !7287)
!7291 = !DILocation(line: 375, column: 2, scope: !7287)
!7292 = !DILocation(line: 376, column: 1, scope: !7287)
!7293 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !527, file: !527, line: 284, type: !580, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7294)
!7294 = !{!7295}
!7295 = !DILocalVariable(name: "dev", arg: 1, scope: !7293, file: !527, line: 284, type: !556)
!7296 = !DILocation(line: 0, scope: !7293)
!7297 = !DILocation(line: 286, column: 2, scope: !7293)
!7298 = !DILocation(line: 287, column: 1, scope: !7293)
!7299 = distinct !DISubprogram(name: "stm32_exti_init", scope: !527, file: !527, line: 416, type: !554, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7300)
!7300 = !{!7301}
!7301 = !DILocalVariable(name: "dev", arg: 1, scope: !7299, file: !527, line: 416, type: !556)
!7302 = !DILocation(line: 0, scope: !7299)
!7303 = !DILocation(line: 418, column: 2, scope: !7299)
!7304 = !DILocation(line: 420, column: 2, scope: !7299)
!7305 = !DILocation(line: 0, scope: !579)
!7306 = !DILocation(line: 493, column: 2, scope: !7307)
!7307 = distinct !DILexicalBlock(scope: !579, file: !527, line: 493, column: 2)
!7308 = !DILocation(line: 497, column: 2, scope: !7309)
!7309 = distinct !DILexicalBlock(scope: !579, file: !527, line: 497, column: 2)
!7310 = !DILocation(line: 507, column: 2, scope: !7311)
!7311 = distinct !DILexicalBlock(scope: !579, file: !527, line: 507, column: 2)
!7312 = !DILocation(line: 512, column: 2, scope: !7313)
!7313 = distinct !DILexicalBlock(scope: !579, file: !527, line: 512, column: 2)
!7314 = !DILocation(line: 516, column: 2, scope: !7315)
!7315 = distinct !DILexicalBlock(scope: !579, file: !527, line: 516, column: 2)
!7316 = !DILocation(line: 523, column: 2, scope: !7317)
!7317 = distinct !DILexicalBlock(scope: !579, file: !527, line: 523, column: 2)
!7318 = !DILocation(line: 527, column: 2, scope: !7319)
!7319 = distinct !DILexicalBlock(scope: !579, file: !527, line: 527, column: 2)
!7320 = !DILocation(line: 581, column: 2, scope: !7321)
!7321 = distinct !DILexicalBlock(scope: !579, file: !527, line: 581, column: 2)
!7322 = !DILocation(line: 586, column: 2, scope: !7323)
!7323 = distinct !DILexicalBlock(scope: !579, file: !527, line: 586, column: 2)
!7324 = !DILocation(line: 591, column: 2, scope: !7325)
!7325 = distinct !DILexicalBlock(scope: !579, file: !527, line: 591, column: 2)
!7326 = !DILocation(line: 595, column: 2, scope: !7327)
!7327 = distinct !DILexicalBlock(scope: !579, file: !527, line: 595, column: 2)
!7328 = !DILocation(line: 607, column: 1, scope: !579)
!7329 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !527, file: !527, line: 112, type: !7215, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7330)
!7330 = !{!7331, !7332}
!7331 = !DILocalVariable(name: "line", arg: 1, scope: !7329, file: !527, line: 112, type: !103)
!7332 = !DILocalVariable(name: "irqnum", scope: !7329, file: !527, line: 114, type: !103)
!7333 = !DILocation(line: 0, scope: !7329)
!7334 = !DILocation(line: 121, column: 11, scope: !7329)
!7335 = !DILocation(line: 130, column: 26, scope: !7329)
!7336 = !DILocation(line: 130, column: 2, scope: !7329)
!7337 = !DILocation(line: 134, column: 2, scope: !7329)
!7338 = !DILocation(line: 135, column: 1, scope: !7329)
!7339 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !7226, file: !7226, line: 268, type: !5589, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7340)
!7340 = !{!7341}
!7341 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7339, file: !7226, line: 268, type: !121)
!7342 = !DILocation(line: 0, scope: !7339)
!7343 = !DILocation(line: 270, column: 3, scope: !7339)
!7344 = !DILocation(line: 271, column: 1, scope: !7339)
!7345 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !527, file: !527, line: 137, type: !7215, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7346)
!7346 = !{!7347}
!7347 = !DILocalVariable(name: "line", arg: 1, scope: !7345, file: !527, line: 137, type: !103)
!7348 = !DILocation(line: 0, scope: !7345)
!7349 = !DILocation(line: 141, column: 11, scope: !7350)
!7350 = distinct !DILexicalBlock(scope: !7345, file: !527, line: 141, column: 6)
!7351 = !DILocation(line: 141, column: 6, scope: !7345)
!7352 = !DILocation(line: 145, column: 28, scope: !7353)
!7353 = distinct !DILexicalBlock(scope: !7350, file: !527, line: 141, column: 17)
!7354 = !DILocation(line: 145, column: 3, scope: !7353)
!7355 = !DILocation(line: 147, column: 2, scope: !7353)
!7356 = !DILocation(line: 151, column: 1, scope: !7345)
!7357 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !7226, file: !7226, line: 309, type: !5589, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7358)
!7358 = !{!7359}
!7359 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7357, file: !7226, line: 309, type: !121)
!7360 = !DILocation(line: 0, scope: !7357)
!7361 = !DILocation(line: 311, column: 3, scope: !7357)
!7362 = !DILocation(line: 312, column: 1, scope: !7357)
!7363 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !527, file: !527, line: 202, type: !7364, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7366)
!7364 = !DISubroutineType(types: !7365)
!7365 = !{null, !103, !103}
!7366 = !{!7367, !7368}
!7367 = !DILocalVariable(name: "line", arg: 1, scope: !7363, file: !527, line: 202, type: !103)
!7368 = !DILocalVariable(name: "trigger", arg: 2, scope: !7363, file: !527, line: 202, type: !103)
!7369 = !DILocation(line: 0, scope: !7363)
!7370 = !DILocation(line: 211, column: 2, scope: !7363)
!7371 = !DILocation(line: 213, column: 36, scope: !7372)
!7372 = distinct !DILexicalBlock(scope: !7363, file: !527, line: 211, column: 19)
!7373 = !DILocation(line: 213, column: 3, scope: !7372)
!7374 = !DILocation(line: 214, column: 3, scope: !7372)
!7375 = !DILocation(line: 215, column: 3, scope: !7372)
!7376 = !DILocation(line: 217, column: 35, scope: !7372)
!7377 = !DILocation(line: 217, column: 3, scope: !7372)
!7378 = !DILocation(line: 218, column: 3, scope: !7372)
!7379 = !DILocation(line: 219, column: 3, scope: !7372)
!7380 = !DILocation(line: 221, column: 36, scope: !7372)
!7381 = !DILocation(line: 221, column: 3, scope: !7372)
!7382 = !DILocation(line: 222, column: 3, scope: !7372)
!7383 = !DILocation(line: 223, column: 3, scope: !7372)
!7384 = !DILocation(line: 225, column: 35, scope: !7372)
!7385 = !DILocation(line: 225, column: 3, scope: !7372)
!7386 = !DILocation(line: 226, column: 3, scope: !7372)
!7387 = !DILocation(line: 227, column: 3, scope: !7372)
!7388 = !DILocation(line: 232, column: 1, scope: !7363)
!7389 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !7226, file: !7226, line: 573, type: !5589, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7390)
!7390 = !{!7391}
!7391 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7389, file: !7226, line: 573, type: !121)
!7392 = !DILocation(line: 0, scope: !7389)
!7393 = !DILocation(line: 575, column: 3, scope: !7389)
!7394 = !DILocation(line: 577, column: 1, scope: !7389)
!7395 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !7226, file: !7226, line: 703, type: !5589, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7396)
!7396 = !{!7397}
!7397 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7395, file: !7226, line: 703, type: !121)
!7398 = !DILocation(line: 0, scope: !7395)
!7399 = !DILocation(line: 705, column: 3, scope: !7395)
!7400 = !DILocation(line: 706, column: 1, scope: !7395)
!7401 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !7226, file: !7226, line: 529, type: !5589, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7402)
!7402 = !{!7403}
!7403 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7401, file: !7226, line: 529, type: !121)
!7404 = !DILocation(line: 0, scope: !7401)
!7405 = !DILocation(line: 531, column: 3, scope: !7401)
!7406 = !DILocation(line: 533, column: 1, scope: !7401)
!7407 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !7226, file: !7226, line: 661, type: !5589, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7408)
!7408 = !{!7409}
!7409 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7407, file: !7226, line: 661, type: !121)
!7410 = !DILocation(line: 0, scope: !7407)
!7411 = !DILocation(line: 663, column: 3, scope: !7407)
!7412 = !DILocation(line: 664, column: 1, scope: !7407)
!7413 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !527, file: !527, line: 433, type: !7414, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7416)
!7414 = !DISubroutineType(types: !7415)
!7415 = !{!103, !103, !567, !102}
!7416 = !{!7417, !7418, !7419, !7420, !7422}
!7417 = !DILocalVariable(name: "line", arg: 1, scope: !7413, file: !527, line: 433, type: !103)
!7418 = !DILocalVariable(name: "cb", arg: 2, scope: !7413, file: !527, line: 433, type: !567)
!7419 = !DILocalVariable(name: "arg", arg: 3, scope: !7413, file: !527, line: 433, type: !102)
!7420 = !DILocalVariable(name: "dev", scope: !7413, file: !527, line: 435, type: !7421)
!7421 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !556)
!7422 = !DILocalVariable(name: "data", scope: !7413, file: !527, line: 436, type: !7180)
!7423 = !DILocation(line: 0, scope: !7413)
!7424 = !DILocation(line: 438, column: 21, scope: !7425)
!7425 = distinct !DILexicalBlock(scope: !7413, file: !527, line: 438, column: 6)
!7426 = !DILocation(line: 438, column: 6, scope: !7425)
!7427 = !DILocation(line: 438, column: 6, scope: !7413)
!7428 = !DILocation(line: 442, column: 20, scope: !7413)
!7429 = !DILocation(line: 443, column: 17, scope: !7413)
!7430 = !DILocation(line: 443, column: 22, scope: !7413)
!7431 = !DILocation(line: 445, column: 2, scope: !7413)
!7432 = !DILocation(line: 446, column: 1, scope: !7413)
!7433 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !527, file: !527, line: 448, type: !7215, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7434)
!7434 = !{!7435, !7436, !7437}
!7435 = !DILocalVariable(name: "line", arg: 1, scope: !7433, file: !527, line: 448, type: !103)
!7436 = !DILocalVariable(name: "dev", scope: !7433, file: !527, line: 450, type: !7421)
!7437 = !DILocalVariable(name: "data", scope: !7433, file: !527, line: 451, type: !7180)
!7438 = !DILocation(line: 0, scope: !7433)
!7439 = !DILocation(line: 453, column: 17, scope: !7433)
!7440 = !DILocation(line: 453, column: 20, scope: !7433)
!7441 = !DILocation(line: 454, column: 17, scope: !7433)
!7442 = !DILocation(line: 454, column: 22, scope: !7433)
!7443 = !DILocation(line: 455, column: 1, scope: !7433)
!7444 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !711, file: !711, line: 183, type: !749, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !7445)
!7445 = !{!7446, !7447, !7448, !7449, !7450}
!7446 = !DILocalVariable(name: "dev", arg: 1, scope: !7444, file: !711, line: 183, type: !740)
!7447 = !DILocalVariable(name: "sub_system", arg: 2, scope: !7444, file: !711, line: 184, type: !751)
!7448 = !DILocalVariable(name: "pclken", scope: !7444, file: !711, line: 186, type: !701)
!7449 = !DILocalVariable(name: "reg", scope: !7444, file: !711, line: 187, type: !1304)
!7450 = !DILocalVariable(name: "reg_val", scope: !7444, file: !711, line: 188, type: !121)
!7451 = !DILocation(line: 0, scope: !7444)
!7452 = !DILocation(line: 192, column: 6, scope: !7453)
!7453 = distinct !DILexicalBlock(scope: !7444, file: !711, line: 192, column: 6)
!7454 = !DILocation(line: 192, column: 6, scope: !7444)
!7455 = !DILocation(line: 197, column: 52, scope: !7444)
!7456 = !DILocation(line: 197, column: 8, scope: !7444)
!7457 = !DILocation(line: 198, column: 12, scope: !7444)
!7458 = !DILocation(line: 199, column: 21, scope: !7444)
!7459 = !DILocation(line: 199, column: 10, scope: !7444)
!7460 = !DILocation(line: 200, column: 7, scope: !7444)
!7461 = !DILocation(line: 202, column: 2, scope: !7444)
!7462 = !DILocation(line: 203, column: 1, scope: !7444)
!7463 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !711, file: !711, line: 205, type: !749, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !7464)
!7464 = !{!7465, !7466, !7467, !7468, !7469}
!7465 = !DILocalVariable(name: "dev", arg: 1, scope: !7463, file: !711, line: 205, type: !740)
!7466 = !DILocalVariable(name: "sub_system", arg: 2, scope: !7463, file: !711, line: 206, type: !751)
!7467 = !DILocalVariable(name: "pclken", scope: !7463, file: !711, line: 208, type: !701)
!7468 = !DILocalVariable(name: "reg", scope: !7463, file: !711, line: 209, type: !1304)
!7469 = !DILocalVariable(name: "reg_val", scope: !7463, file: !711, line: 210, type: !121)
!7470 = !DILocation(line: 0, scope: !7463)
!7471 = !DILocation(line: 214, column: 6, scope: !7472)
!7472 = distinct !DILexicalBlock(scope: !7463, file: !711, line: 214, column: 6)
!7473 = !DILocation(line: 214, column: 6, scope: !7463)
!7474 = !DILocation(line: 219, column: 52, scope: !7463)
!7475 = !DILocation(line: 219, column: 8, scope: !7463)
!7476 = !DILocation(line: 220, column: 12, scope: !7463)
!7477 = !DILocation(line: 221, column: 22, scope: !7463)
!7478 = !DILocation(line: 221, column: 13, scope: !7463)
!7479 = !DILocation(line: 221, column: 10, scope: !7463)
!7480 = !DILocation(line: 222, column: 7, scope: !7463)
!7481 = !DILocation(line: 224, column: 2, scope: !7463)
!7482 = !DILocation(line: 225, column: 1, scope: !7463)
!7483 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !711, file: !711, line: 262, type: !765, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !7484)
!7484 = !{!7485, !7486, !7487, !7488, !7489, !7490, !7491, !7492}
!7485 = !DILocalVariable(name: "clock", arg: 1, scope: !7483, file: !711, line: 262, type: !740)
!7486 = !DILocalVariable(name: "sub_system", arg: 2, scope: !7483, file: !711, line: 263, type: !751)
!7487 = !DILocalVariable(name: "rate", arg: 3, scope: !7483, file: !711, line: 264, type: !707)
!7488 = !DILocalVariable(name: "pclken", scope: !7483, file: !711, line: 266, type: !701)
!7489 = !DILocalVariable(name: "ahb_clock", scope: !7483, file: !711, line: 273, type: !121)
!7490 = !DILocalVariable(name: "apb1_clock", scope: !7483, file: !711, line: 274, type: !121)
!7491 = !DILocalVariable(name: "apb2_clock", scope: !7483, file: !711, line: 276, type: !121)
!7492 = !DILocalVariable(name: "ahb3_clock", scope: !7483, file: !711, line: 286, type: !121)
!7493 = !DILocation(line: 0, scope: !7483)
!7494 = !DILocation(line: 273, column: 23, scope: !7483)
!7495 = !DILocation(line: 299, column: 18, scope: !7483)
!7496 = !DILocation(line: 299, column: 2, scope: !7483)
!7497 = !DILocation(line: 274, column: 24, scope: !7483)
!7498 = !DILocation(line: 319, column: 3, scope: !7499)
!7499 = distinct !DILexicalBlock(scope: !7483, file: !711, line: 299, column: 23)
!7500 = !DILocation(line: 276, column: 24, scope: !7483)
!7501 = !DILocation(line: 323, column: 3, scope: !7499)
!7502 = !DILocation(line: 346, column: 33, scope: !7499)
!7503 = !DILocation(line: 346, column: 11, scope: !7499)
!7504 = !DILocation(line: 350, column: 3, scope: !7499)
!7505 = !DILocation(line: 354, column: 33, scope: !7499)
!7506 = !DILocation(line: 354, column: 11, scope: !7499)
!7507 = !DILocation(line: 358, column: 3, scope: !7499)
!7508 = !DILocation(line: 374, column: 3, scope: !7499)
!7509 = !DILocation(line: 379, column: 3, scope: !7499)
!7510 = !DILocation(line: 0, scope: !7499)
!7511 = !DILocation(line: 396, column: 1, scope: !7483)
!7512 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !711, file: !711, line: 227, type: !781, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !7513)
!7513 = !{!7514, !7515, !7516, !7517, !7518, !7519, !7520, !7521}
!7514 = !DILocalVariable(name: "dev", arg: 1, scope: !7512, file: !711, line: 227, type: !740)
!7515 = !DILocalVariable(name: "sub_system", arg: 2, scope: !7512, file: !711, line: 228, type: !751)
!7516 = !DILocalVariable(name: "data", arg: 3, scope: !7512, file: !711, line: 229, type: !102)
!7517 = !DILocalVariable(name: "pclken", scope: !7512, file: !711, line: 233, type: !701)
!7518 = !DILocalVariable(name: "reg", scope: !7512, file: !711, line: 234, type: !1304)
!7519 = !DILocalVariable(name: "reg_val", scope: !7512, file: !711, line: 235, type: !121)
!7520 = !DILocalVariable(name: "dt_val", scope: !7512, file: !711, line: 235, type: !121)
!7521 = !DILocalVariable(name: "err", scope: !7512, file: !711, line: 236, type: !103)
!7522 = !DILocation(line: 0, scope: !7512)
!7523 = !DILocation(line: 241, column: 30, scope: !7512)
!7524 = !DILocation(line: 241, column: 8, scope: !7512)
!7525 = !DILocation(line: 242, column: 10, scope: !7526)
!7526 = distinct !DILexicalBlock(scope: !7512, file: !711, line: 242, column: 6)
!7527 = !DILocation(line: 242, column: 6, scope: !7512)
!7528 = !DILocation(line: 247, column: 11, scope: !7512)
!7529 = !DILocation(line: 248, column: 6, scope: !7512)
!7530 = !DILocation(line: 247, column: 44, scope: !7512)
!7531 = !DILocation(line: 250, column: 6, scope: !7512)
!7532 = !DILocation(line: 249, column: 52, scope: !7512)
!7533 = !DILocation(line: 249, column: 8, scope: !7512)
!7534 = !DILocation(line: 251, column: 12, scope: !7512)
!7535 = !DILocation(line: 252, column: 10, scope: !7512)
!7536 = !DILocation(line: 253, column: 7, scope: !7512)
!7537 = !DILocation(line: 255, column: 2, scope: !7512)
!7538 = !DILocation(line: 260, column: 1, scope: !7512)
!7539 = distinct !DISubprogram(name: "enabled_clock", scope: !711, file: !711, line: 100, type: !7540, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !7542)
!7540 = !DISubroutineType(types: !7541)
!7541 = !{!103, !121}
!7542 = !{!7543, !7544}
!7543 = !DILocalVariable(name: "src_clk", arg: 1, scope: !7539, file: !711, line: 100, type: !121)
!7544 = !DILocalVariable(name: "r", scope: !7539, file: !711, line: 102, type: !103)
!7545 = !DILocation(line: 0, scope: !7539)
!7546 = !DILocation(line: 104, column: 2, scope: !7539)
!7547 = !DILocation(line: 180, column: 2, scope: !7539)
!7548 = !DILocation(line: 181, column: 1, scope: !7539)
!7549 = distinct !DISubprogram(name: "get_bus_clock", scope: !711, file: !711, line: 79, type: !7550, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !7552)
!7550 = !DISubroutineType(types: !7551)
!7551 = !{!121, !121, !121}
!7552 = !{!7553, !7554}
!7553 = !DILocalVariable(name: "clock", arg: 1, scope: !7549, file: !711, line: 79, type: !121)
!7554 = !DILocalVariable(name: "prescaler", arg: 2, scope: !7549, file: !711, line: 79, type: !121)
!7555 = !DILocation(line: 0, scope: !7549)
!7556 = !DILocation(line: 81, column: 15, scope: !7549)
!7557 = !DILocation(line: 81, column: 2, scope: !7549)
!7558 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !711, file: !711, line: 68, type: !7559, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !7561)
!7559 = !DISubroutineType(types: !7560)
!7560 = !{!121, !121, !103, !103, !103}
!7561 = !{!7562, !7563, !7564, !7565}
!7562 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !7558, file: !711, line: 68, type: !121)
!7563 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !7558, file: !711, line: 69, type: !103)
!7564 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !7558, file: !711, line: 70, type: !103)
!7565 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !7558, file: !711, line: 71, type: !103)
!7566 = !DILocation(line: 0, scope: !7558)
!7567 = !DILocation(line: 75, column: 22, scope: !7558)
!7568 = !DILocation(line: 76, column: 13, scope: !7558)
!7569 = !DILocation(line: 75, column: 34, scope: !7558)
!7570 = !DILocation(line: 75, column: 2, scope: !7558)
!7571 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !711, file: !711, line: 641, type: !738, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !7572)
!7572 = !{!7573, !7574, !7575}
!7573 = !DILocalVariable(name: "dev", arg: 1, scope: !7571, file: !711, line: 641, type: !740)
!7574 = !DILocalVariable(name: "old_flash_freq", scope: !7571, file: !711, line: 664, type: !121)
!7575 = !DILocalVariable(name: "new_flash_freq", scope: !7571, file: !711, line: 665, type: !121)
!7576 = !DILocation(line: 0, scope: !7571)
!7577 = !DILocation(line: 646, column: 2, scope: !7571)
!7578 = !DILocation(line: 667, column: 19, scope: !7571)
!7579 = !DILocation(line: 674, column: 21, scope: !7580)
!7580 = distinct !DILexicalBlock(scope: !7571, file: !711, line: 674, column: 6)
!7581 = !DILocation(line: 674, column: 6, scope: !7571)
!7582 = !DILocation(line: 675, column: 3, scope: !7583)
!7583 = distinct !DILexicalBlock(scope: !7580, file: !711, line: 674, column: 59)
!7584 = !DILocation(line: 676, column: 2, scope: !7583)
!7585 = !DILocation(line: 680, column: 2, scope: !7571)
!7586 = !DILocation(line: 683, column: 2, scope: !7571)
!7587 = !DILocation(line: 690, column: 3, scope: !7588)
!7588 = distinct !DILexicalBlock(scope: !7589, file: !711, line: 689, column: 9)
!7589 = distinct !DILexicalBlock(scope: !7571, file: !711, line: 685, column: 6)
!7590 = !DILocation(line: 695, column: 2, scope: !7571)
!7591 = !DILocation(line: 696, column: 2, scope: !7571)
!7592 = !DILocation(line: 696, column: 9, scope: !7571)
!7593 = !DILocation(line: 696, column: 34, scope: !7571)
!7594 = distinct !{!7594, !7591, !7595}
!7595 = !DILocation(line: 697, column: 2, scope: !7571)
!7596 = !DILocation(line: 720, column: 21, scope: !7597)
!7597 = distinct !DILexicalBlock(scope: !7571, file: !711, line: 720, column: 6)
!7598 = !DILocation(line: 720, column: 6, scope: !7571)
!7599 = !DILocation(line: 721, column: 3, scope: !7600)
!7600 = distinct !DILexicalBlock(scope: !7597, file: !711, line: 720, column: 60)
!7601 = !DILocation(line: 722, column: 2, scope: !7600)
!7602 = !DILocation(line: 725, column: 18, scope: !7571)
!7603 = !DILocation(line: 728, column: 2, scope: !7571)
!7604 = !DILocation(line: 730, column: 2, scope: !7571)
!7605 = !DILocation(line: 745, column: 2, scope: !7571)
!7606 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !7607, file: !7607, line: 3275, type: !5579, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !322)
!7607 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7608 = !DILocation(line: 3277, column: 21, scope: !7606)
!7609 = !DILocation(line: 3277, column: 3, scope: !7606)
!7610 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !711, file: !711, line: 507, type: !2928, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !322)
!7611 = !DILocation(line: 516, column: 4, scope: !7612)
!7612 = distinct !DILexicalBlock(scope: !7613, file: !711, line: 515, column: 10)
!7613 = distinct !DILexicalBlock(scope: !7614, file: !711, line: 513, column: 7)
!7614 = distinct !DILexicalBlock(scope: !7615, file: !711, line: 510, column: 37)
!7615 = distinct !DILexicalBlock(scope: !7610, file: !711, line: 510, column: 6)
!7616 = !DILocation(line: 526, column: 3, scope: !7614)
!7617 = !DILocation(line: 527, column: 3, scope: !7614)
!7618 = !DILocation(line: 527, column: 10, scope: !7614)
!7619 = !DILocation(line: 527, column: 31, scope: !7614)
!7620 = distinct !{!7620, !7617, !7621}
!7621 = !DILocation(line: 529, column: 3, scope: !7614)
!7622 = !DILocation(line: 583, column: 3, scope: !7623)
!7623 = distinct !DILexicalBlock(scope: !7624, file: !711, line: 577, column: 37)
!7624 = distinct !DILexicalBlock(scope: !7610, file: !711, line: 577, column: 6)
!7625 = !DILocation(line: 584, column: 3, scope: !7623)
!7626 = !DILocation(line: 584, column: 10, scope: !7623)
!7627 = !DILocation(line: 584, column: 31, scope: !7623)
!7628 = distinct !{!7628, !7625, !7629}
!7629 = !DILocation(line: 585, column: 3, scope: !7623)
!7630 = !DILocation(line: 627, column: 1, scope: !7610)
!7631 = distinct !DISubprogram(name: "set_up_plls", scope: !711, file: !711, line: 448, type: !2928, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !322)
!7632 = !DILocation(line: 460, column: 6, scope: !7633)
!7633 = distinct !DILexicalBlock(scope: !7631, file: !711, line: 460, column: 6)
!7634 = !DILocation(line: 460, column: 31, scope: !7633)
!7635 = !DILocation(line: 460, column: 6, scope: !7631)
!7636 = !DILocation(line: 461, column: 3, scope: !7637)
!7637 = distinct !DILexicalBlock(scope: !7633, file: !711, line: 460, column: 67)
!7638 = !DILocation(line: 462, column: 3, scope: !7637)
!7639 = !DILocation(line: 463, column: 2, scope: !7637)
!7640 = !DILocation(line: 464, column: 2, scope: !7631)
!7641 = !DILocation(line: 488, column: 2, scope: !7631)
!7642 = !DILocation(line: 492, column: 2, scope: !7631)
!7643 = !DILocation(line: 496, column: 2, scope: !7631)
!7644 = !DILocation(line: 499, column: 2, scope: !7631)
!7645 = !DILocation(line: 500, column: 2, scope: !7631)
!7646 = !DILocation(line: 500, column: 9, scope: !7631)
!7647 = !DILocation(line: 500, column: 30, scope: !7631)
!7648 = distinct !{!7648, !7645, !7649}
!7649 = !DILocation(line: 502, column: 2, scope: !7631)
!7650 = !DILocation(line: 505, column: 1, scope: !7631)
!7651 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !7607, file: !7607, line: 3224, type: !5589, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !7652)
!7652 = !{!7653}
!7653 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !7651, file: !7607, line: 3224, type: !121)
!7654 = !DILocation(line: 0, scope: !7651)
!7655 = !DILocation(line: 3226, column: 3, scope: !7651)
!7656 = !DILocation(line: 3227, column: 1, scope: !7651)
!7657 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !7607, file: !7607, line: 3188, type: !5589, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !7658)
!7658 = !{!7659}
!7659 = !DILocalVariable(name: "Source", arg: 1, scope: !7657, file: !7607, line: 3188, type: !121)
!7660 = !DILocation(line: 0, scope: !7657)
!7661 = !DILocation(line: 3190, column: 3, scope: !7657)
!7662 = !DILocation(line: 3191, column: 1, scope: !7657)
!7663 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !7607, file: !7607, line: 3204, type: !5579, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !322)
!7664 = !DILocation(line: 3206, column: 21, scope: !7663)
!7665 = !DILocation(line: 3206, column: 3, scope: !7663)
!7666 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !7607, file: !7607, line: 3240, type: !5589, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !7667)
!7667 = !{!7668}
!7668 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !7666, file: !7607, line: 3240, type: !121)
!7669 = !DILocation(line: 0, scope: !7666)
!7670 = !DILocation(line: 3242, column: 3, scope: !7666)
!7671 = !DILocation(line: 3243, column: 1, scope: !7666)
!7672 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !7607, file: !7607, line: 3256, type: !5589, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !7673)
!7673 = !{!7674}
!7674 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !7672, file: !7607, line: 3256, type: !121)
!7675 = !DILocation(line: 0, scope: !7672)
!7676 = !DILocation(line: 3258, column: 3, scope: !7672)
!7677 = !DILocation(line: 3259, column: 1, scope: !7672)
!7678 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !711, file: !711, line: 409, type: !2928, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !322)
!7679 = !DILocation(line: 412, column: 6, scope: !7680)
!7680 = distinct !DILexicalBlock(scope: !7678, file: !711, line: 412, column: 6)
!7681 = !DILocation(line: 412, column: 27, scope: !7680)
!7682 = !DILocation(line: 412, column: 6, scope: !7678)
!7683 = !DILocation(line: 414, column: 3, scope: !7684)
!7684 = distinct !DILexicalBlock(scope: !7680, file: !711, line: 412, column: 33)
!7685 = !DILocation(line: 415, column: 3, scope: !7684)
!7686 = !DILocation(line: 415, column: 10, scope: !7684)
!7687 = !DILocation(line: 415, column: 31, scope: !7684)
!7688 = distinct !{!7688, !7685, !7689}
!7689 = !DILocation(line: 417, column: 3, scope: !7684)
!7690 = !DILocation(line: 421, column: 2, scope: !7678)
!7691 = !DILocation(line: 422, column: 2, scope: !7678)
!7692 = !DILocation(line: 422, column: 9, scope: !7678)
!7693 = !DILocation(line: 422, column: 34, scope: !7678)
!7694 = distinct !{!7694, !7691, !7695}
!7695 = !DILocation(line: 423, column: 2, scope: !7678)
!7696 = !DILocation(line: 424, column: 1, scope: !7678)
!7697 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !7607, file: !7607, line: 4195, type: !2928, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !322)
!7698 = !DILocation(line: 4197, column: 3, scope: !7697)
!7699 = !DILocation(line: 4198, column: 1, scope: !7697)
!7700 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !7607, file: !7607, line: 4184, type: !2928, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !322)
!7701 = !DILocation(line: 4186, column: 3, scope: !7700)
!7702 = !DILocation(line: 4187, column: 1, scope: !7700)
!7703 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !7607, file: !7607, line: 4205, type: !5579, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !322)
!7704 = !DILocation(line: 4207, column: 11, scope: !7703)
!7705 = !DILocation(line: 4207, column: 44, scope: !7703)
!7706 = !DILocation(line: 4207, column: 3, scope: !7703)
!7707 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !7607, file: !7607, line: 3007, type: !5579, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !322)
!7708 = !DILocation(line: 3009, column: 11, scope: !7707)
!7709 = !DILocation(line: 3009, column: 44, scope: !7707)
!7710 = !DILocation(line: 3009, column: 3, scope: !7707)
!7711 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !7607, file: !7607, line: 2987, type: !2928, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !322)
!7712 = !DILocation(line: 2989, column: 3, scope: !7711)
!7713 = !DILocation(line: 2990, column: 1, scope: !7711)
!7714 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !7607, file: !7607, line: 2939, type: !2928, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !322)
!7715 = !DILocation(line: 2941, column: 3, scope: !7714)
!7716 = !DILocation(line: 2942, column: 1, scope: !7714)
!7717 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !7607, file: !7607, line: 2949, type: !2928, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !322)
!7718 = !DILocation(line: 2951, column: 3, scope: !7717)
!7719 = !DILocation(line: 2952, column: 1, scope: !7717)
!7720 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !7607, file: !7607, line: 2969, type: !5579, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !322)
!7721 = !DILocation(line: 2971, column: 11, scope: !7720)
!7722 = !DILocation(line: 2971, column: 44, scope: !7720)
!7723 = !DILocation(line: 2971, column: 3, scope: !7720)
!7724 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !7607, file: !7607, line: 3143, type: !2928, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !322)
!7725 = !DILocation(line: 3145, column: 3, scope: !7724)
!7726 = !DILocation(line: 3146, column: 1, scope: !7724)
!7727 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !7607, file: !7607, line: 3163, type: !5579, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !322)
!7728 = !DILocation(line: 3165, column: 11, scope: !7727)
!7729 = !DILocation(line: 3165, column: 46, scope: !7727)
!7730 = !DILocation(line: 3165, column: 3, scope: !7727)
!7731 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !7732, file: !7732, line: 40, type: !5579, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2702, retainedNodes: !322)
!7732 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7733 = !DILocation(line: 45, column: 3, scope: !7734)
!7734 = distinct !DILexicalBlock(scope: !7735, file: !7732, line: 44, column: 44)
!7735 = distinct !DILexicalBlock(scope: !7736, file: !7732, line: 44, column: 13)
!7736 = distinct !DILexicalBlock(scope: !7731, file: !7732, line: 42, column: 6)
!7737 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !7732, file: !7732, line: 56, type: !2928, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2702, retainedNodes: !322)
!7738 = !DILocation(line: 58, column: 2, scope: !7737)
!7739 = !DILocation(line: 62, column: 1, scope: !7737)
!7740 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !7607, file: !7607, line: 4304, type: !7741, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2702, retainedNodes: !7743)
!7741 = !DISubroutineType(types: !7742)
!7742 = !{null, !121, !121, !121, !121}
!7743 = !{!7744, !7745, !7746, !7747}
!7744 = !DILocalVariable(name: "Source", arg: 1, scope: !7740, file: !7607, line: 4304, type: !121)
!7745 = !DILocalVariable(name: "PLLM", arg: 2, scope: !7740, file: !7607, line: 4304, type: !121)
!7746 = !DILocalVariable(name: "PLLN", arg: 3, scope: !7740, file: !7607, line: 4304, type: !121)
!7747 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !7740, file: !7607, line: 4304, type: !121)
!7748 = !DILocation(line: 0, scope: !7740)
!7749 = !DILocation(line: 4306, column: 3, scope: !7740)
!7750 = !DILocation(line: 4308, column: 3, scope: !7740)
!7751 = !DILocation(line: 4312, column: 1, scope: !7740)
!7752 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !7732, file: !7732, line: 69, type: !2928, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2702, retainedNodes: !322)
!7753 = !DILocation(line: 72, column: 2, scope: !7752)
!7754 = !DILocation(line: 73, column: 1, scope: !7752)
!7755 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !7756, file: !7756, line: 1185, type: !5589, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2702, retainedNodes: !7757)
!7756 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7757 = !{!7758, !7759}
!7758 = !DILocalVariable(name: "Periphs", arg: 1, scope: !7755, file: !7756, line: 1185, type: !121)
!7759 = !DILocalVariable(name: "tmpreg", scope: !7755, file: !7756, line: 1187, type: !120)
!7760 = !DILocation(line: 0, scope: !7755)
!7761 = !DILocation(line: 1187, column: 3, scope: !7755)
!7762 = !DILocation(line: 1187, column: 17, scope: !7755)
!7763 = !DILocation(line: 1188, column: 3, scope: !7755)
!7764 = !DILocation(line: 1190, column: 12, scope: !7755)
!7765 = !DILocation(line: 1190, column: 10, scope: !7755)
!7766 = !DILocation(line: 1191, column: 9, scope: !7755)
!7767 = !DILocation(line: 1192, column: 1, scope: !7755)
!7768 = distinct !DISubprogram(name: "uart_console_init", scope: !842, file: !842, line: 588, type: !819, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !785, retainedNodes: !7769)
!7769 = !{!7770}
!7770 = !DILocalVariable(name: "arg", arg: 1, scope: !7768, file: !842, line: 588, type: !797)
!7771 = !DILocation(line: 0, scope: !7768)
!7772 = !DILocation(line: 593, column: 7, scope: !7773)
!7773 = distinct !DILexicalBlock(scope: !7768, file: !842, line: 593, column: 6)
!7774 = !DILocation(line: 593, column: 6, scope: !7768)
!7775 = !DILocation(line: 597, column: 2, scope: !7768)
!7776 = !DILocation(line: 599, column: 2, scope: !7768)
!7777 = !DILocation(line: 600, column: 1, scope: !7768)
!7778 = distinct !DISubprogram(name: "device_is_ready", scope: !3080, file: !3080, line: 47, type: !7779, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !785, retainedNodes: !7781)
!7779 = !DISubroutineType(types: !7780)
!7780 = !{!157, !797}
!7781 = !{!7782}
!7782 = !DILocalVariable(name: "dev", arg: 1, scope: !7778, file: !3080, line: 47, type: !797)
!7783 = !DILocation(line: 0, scope: !7778)
!7784 = !DILocation(line: 55, column: 2, scope: !7785)
!7785 = distinct !DILexicalBlock(scope: !7778, file: !3080, line: 55, column: 2)
!7786 = !{i64 2155043574}
!7787 = !DILocation(line: 56, column: 9, scope: !7778)
!7788 = !DILocation(line: 56, column: 2, scope: !7778)
!7789 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !842, file: !842, line: 573, type: !2928, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !785, retainedNodes: !322)
!7790 = !DILocation(line: 576, column: 2, scope: !7789)
!7791 = !DILocation(line: 579, column: 2, scope: !7789)
!7792 = !DILocation(line: 581, column: 1, scope: !7789)
!7793 = distinct !DISubprogram(name: "console_out", scope: !842, file: !842, line: 77, type: !107, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !785, retainedNodes: !7794)
!7794 = !{!7795}
!7795 = !DILocalVariable(name: "c", arg: 1, scope: !7793, file: !842, line: 77, type: !103)
!7796 = !DILocation(line: 0, scope: !7793)
!7797 = !DILocation(line: 89, column: 11, scope: !7798)
!7798 = distinct !DILexicalBlock(scope: !7793, file: !842, line: 89, column: 6)
!7799 = !DILocation(line: 89, column: 6, scope: !7793)
!7800 = !DILocation(line: 90, column: 3, scope: !7801)
!7801 = distinct !DILexicalBlock(scope: !7798, file: !842, line: 89, column: 17)
!7802 = !DILocation(line: 91, column: 2, scope: !7801)
!7803 = !DILocation(line: 92, column: 34, scope: !7793)
!7804 = !DILocation(line: 92, column: 2, scope: !7793)
!7805 = !DILocation(line: 94, column: 2, scope: !7793)
!7806 = distinct !DISubprogram(name: "uart_poll_out", scope: !7807, file: !7807, line: 95, type: !815, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !785, retainedNodes: !7808)
!7807 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/sensor/thermometer")
!7808 = !{!7809, !7810}
!7809 = !DILocalVariable(name: "dev", arg: 1, scope: !7806, file: !7807, line: 95, type: !797)
!7810 = !DILocalVariable(name: "out_char", arg: 2, scope: !7806, file: !7807, line: 95, type: !155)
!7811 = !DILocation(line: 0, scope: !7806)
!7812 = !DILocation(line: 105, column: 2, scope: !7813)
!7813 = distinct !DILexicalBlock(scope: !7806, file: !7807, line: 105, column: 2)
!7814 = !{i64 2155126965}
!7815 = !DILocation(line: 106, column: 2, scope: !7806)
!7816 = !DILocation(line: 107, column: 1, scope: !7806)
!7817 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !791, file: !791, line: 574, type: !815, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !785, retainedNodes: !7818)
!7818 = !{!7819, !7820, !7821}
!7819 = !DILocalVariable(name: "dev", arg: 1, scope: !7817, file: !791, line: 574, type: !797)
!7820 = !DILocalVariable(name: "out_char", arg: 2, scope: !7817, file: !791, line: 575, type: !155)
!7821 = !DILocalVariable(name: "api", scope: !7817, file: !791, line: 577, type: !788)
!7822 = !DILocation(line: 0, scope: !7817)
!7823 = !DILocation(line: 578, column: 40, scope: !7817)
!7824 = !DILocation(line: 580, column: 7, scope: !7817)
!7825 = !DILocation(line: 580, column: 2, scope: !7817)
!7826 = !DILocation(line: 581, column: 1, scope: !7817)
!7827 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !7779, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !785, retainedNodes: !7828)
!7828 = !{!7829}
!7829 = !DILocalVariable(name: "dev", arg: 1, scope: !7827, file: !141, line: 730, type: !797)
!7830 = !DILocation(line: 0, scope: !7827)
!7831 = !DILocation(line: 732, column: 9, scope: !7827)
!7832 = !DILocation(line: 732, column: 2, scope: !7827)
!7833 = distinct !DISubprogram(name: "uart_register_input", scope: !842, file: !842, line: 560, type: !7834, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !785, retainedNodes: !7879)
!7834 = !DISubroutineType(types: !7835)
!7835 = !{null, !7836, !7836, !7876}
!7836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7837, size: 32)
!7837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !307, line: 2208, size: 128, elements: !7838)
!7838 = !{!7839}
!7839 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !7837, file: !307, line: 2209, baseType: !7840, size: 128)
!7840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !307, line: 1709, size: 128, elements: !7841)
!7841 = !{!7842, !7855, !7857}
!7842 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !7840, file: !307, line: 1710, baseType: !7843, size: 64)
!7843 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !7844, line: 46, baseType: !7845)
!7844 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !7844, line: 41, size: 64, elements: !7846)
!7846 = !{!7847, !7854}
!7847 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7845, file: !7844, line: 42, baseType: !7848, size: 32)
!7848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7849, size: 32)
!7849 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !7844, line: 39, baseType: !7850)
!7850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !7844, line: 35, size: 32, elements: !7851)
!7851 = !{!7852}
!7852 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !7850, file: !7844, line: 36, baseType: !7853, size: 32)
!7853 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !7844, line: 32, baseType: !121)
!7854 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7845, file: !7844, line: 43, baseType: !7848, size: 32, offset: 32)
!7855 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7840, file: !307, line: 1711, baseType: !7856, offset: 64)
!7856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!7857 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7840, file: !307, line: 1712, baseType: !7858, size: 64, offset: 64)
!7858 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !7859)
!7859 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !7860)
!7860 = !{!7861}
!7861 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7859, file: !247, line: 232, baseType: !7862, size: 64)
!7862 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !7863)
!7863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !7864)
!7864 = !{!7865, !7871}
!7865 = !DIDerivedType(tag: DW_TAG_member, scope: !7863, file: !221, line: 38, baseType: !7866, size: 32)
!7866 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7863, file: !221, line: 38, size: 32, elements: !7867)
!7867 = !{!7868, !7870}
!7868 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7866, file: !221, line: 39, baseType: !7869, size: 32)
!7869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7863, size: 32)
!7870 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7866, file: !221, line: 40, baseType: !7869, size: 32)
!7871 = !DIDerivedType(tag: DW_TAG_member, scope: !7863, file: !221, line: 42, baseType: !7872, size: 32, offset: 32)
!7872 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7863, file: !221, line: 42, size: 32, elements: !7873)
!7873 = !{!7874, !7875}
!7874 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7872, file: !221, line: 43, baseType: !7869, size: 32)
!7875 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7872, file: !221, line: 44, baseType: !7869, size: 32)
!7876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7877, size: 32)
!7877 = !DISubroutineType(types: !7878)
!7878 = !{!154, !977, !154}
!7879 = !{!7880, !7881, !7882}
!7880 = !DILocalVariable(name: "avail", arg: 1, scope: !7833, file: !842, line: 560, type: !7836)
!7881 = !DILocalVariable(name: "lines", arg: 2, scope: !7833, file: !842, line: 560, type: !7836)
!7882 = !DILocalVariable(name: "completion", arg: 3, scope: !7833, file: !842, line: 561, type: !7876)
!7883 = !DILocation(line: 0, scope: !7833)
!7884 = !DILocation(line: 566, column: 1, scope: !7833)
!7885 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1021, file: !1021, line: 523, type: !878, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !851, retainedNodes: !7886)
!7886 = !{!7887, !7888, !7889, !7890, !7891}
!7887 = !DILocalVariable(name: "dev", arg: 1, scope: !7885, file: !1021, line: 523, type: !880)
!7888 = !DILocalVariable(name: "pin", arg: 2, scope: !7885, file: !1021, line: 524, type: !895)
!7889 = !DILocalVariable(name: "flags", arg: 3, scope: !7885, file: !1021, line: 524, type: !896)
!7890 = !DILocalVariable(name: "err", scope: !7885, file: !1021, line: 526, type: !103)
!7891 = !DILocalVariable(name: "pincfg", scope: !7885, file: !1021, line: 527, type: !103)
!7892 = !DILocation(line: 0, scope: !7885)
!7893 = !DILocation(line: 527, column: 2, scope: !7885)
!7894 = !DILocation(line: 532, column: 8, scope: !7885)
!7895 = !DILocation(line: 533, column: 10, scope: !7896)
!7896 = distinct !DILexicalBlock(scope: !7885, file: !1021, line: 533, column: 6)
!7897 = !DILocation(line: 533, column: 6, scope: !7885)
!7898 = !DILocation(line: 543, column: 13, scope: !7899)
!7899 = distinct !DILexicalBlock(scope: !7885, file: !1021, line: 543, column: 6)
!7900 = !DILocation(line: 543, column: 28, scope: !7899)
!7901 = !DILocation(line: 543, column: 6, scope: !7885)
!7902 = !DILocation(line: 544, column: 14, scope: !7903)
!7903 = distinct !DILexicalBlock(scope: !7904, file: !1021, line: 544, column: 7)
!7904 = distinct !DILexicalBlock(scope: !7899, file: !1021, line: 543, column: 34)
!7905 = !DILocation(line: 544, column: 39, scope: !7903)
!7906 = !DILocation(line: 544, column: 7, scope: !7904)
!7907 = !DILocation(line: 545, column: 38, scope: !7908)
!7908 = distinct !DILexicalBlock(scope: !7903, file: !1021, line: 544, column: 45)
!7909 = !DILocation(line: 545, column: 4, scope: !7908)
!7910 = !DILocation(line: 546, column: 3, scope: !7908)
!7911 = !DILocation(line: 546, column: 21, scope: !7912)
!7912 = distinct !DILexicalBlock(scope: !7903, file: !1021, line: 546, column: 14)
!7913 = !DILocation(line: 546, column: 45, scope: !7912)
!7914 = !DILocation(line: 546, column: 14, scope: !7903)
!7915 = !DILocation(line: 547, column: 40, scope: !7916)
!7916 = distinct !DILexicalBlock(scope: !7912, file: !1021, line: 546, column: 51)
!7917 = !DILocation(line: 547, column: 4, scope: !7916)
!7918 = !DILocation(line: 548, column: 3, scope: !7916)
!7919 = !DILocation(line: 551, column: 32, scope: !7885)
!7920 = !DILocation(line: 551, column: 37, scope: !7885)
!7921 = !DILocation(line: 551, column: 2, scope: !7885)
!7922 = !DILocation(line: 554, column: 6, scope: !7885)
!7923 = !DILocation(line: 562, column: 1, scope: !7885)
!7924 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1021, file: !1021, line: 410, type: !7925, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !851, retainedNodes: !7927)
!7925 = !DISubroutineType(types: !7926)
!7926 = !{!103, !880, !707}
!7927 = !{!7928, !7929, !7930, !7932}
!7928 = !DILocalVariable(name: "dev", arg: 1, scope: !7924, file: !1021, line: 410, type: !880)
!7929 = !DILocalVariable(name: "value", arg: 2, scope: !7924, file: !1021, line: 410, type: !707)
!7930 = !DILocalVariable(name: "cfg", scope: !7924, file: !1021, line: 412, type: !7931)
!7931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1140, size: 32)
!7932 = !DILocalVariable(name: "gpio", scope: !7924, file: !1021, line: 413, type: !953)
!7933 = !DILocation(line: 0, scope: !7924)
!7934 = !DILocation(line: 412, column: 45, scope: !7924)
!7935 = !DILocation(line: 413, column: 44, scope: !7924)
!7936 = !DILocation(line: 415, column: 11, scope: !7924)
!7937 = !DILocation(line: 415, column: 9, scope: !7924)
!7938 = !DILocation(line: 417, column: 2, scope: !7924)
!7939 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1021, file: !1021, line: 420, type: !905, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !851, retainedNodes: !7940)
!7940 = !{!7941, !7942, !7943, !7944, !7945, !7946}
!7941 = !DILocalVariable(name: "dev", arg: 1, scope: !7939, file: !1021, line: 420, type: !880)
!7942 = !DILocalVariable(name: "mask", arg: 2, scope: !7939, file: !1021, line: 421, type: !907)
!7943 = !DILocalVariable(name: "value", arg: 3, scope: !7939, file: !1021, line: 422, type: !902)
!7944 = !DILocalVariable(name: "cfg", scope: !7939, file: !1021, line: 424, type: !7931)
!7945 = !DILocalVariable(name: "gpio", scope: !7939, file: !1021, line: 425, type: !953)
!7946 = !DILocalVariable(name: "port_value", scope: !7939, file: !1021, line: 426, type: !121)
!7947 = !DILocation(line: 0, scope: !7939)
!7948 = !DILocation(line: 424, column: 45, scope: !7939)
!7949 = !DILocation(line: 425, column: 44, scope: !7939)
!7950 = !DILocation(line: 430, column: 15, scope: !7939)
!7951 = !DILocation(line: 431, column: 46, scope: !7939)
!7952 = !DILocation(line: 431, column: 44, scope: !7939)
!7953 = !DILocation(line: 431, column: 61, scope: !7939)
!7954 = !DILocation(line: 431, column: 53, scope: !7939)
!7955 = !DILocation(line: 431, column: 2, scope: !7939)
!7956 = !DILocation(line: 435, column: 2, scope: !7939)
!7957 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1021, file: !1021, line: 438, type: !910, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !851, retainedNodes: !7958)
!7958 = !{!7959, !7960, !7961, !7962}
!7959 = !DILocalVariable(name: "dev", arg: 1, scope: !7957, file: !1021, line: 438, type: !880)
!7960 = !DILocalVariable(name: "pins", arg: 2, scope: !7957, file: !1021, line: 439, type: !907)
!7961 = !DILocalVariable(name: "cfg", scope: !7957, file: !1021, line: 441, type: !7931)
!7962 = !DILocalVariable(name: "gpio", scope: !7957, file: !1021, line: 442, type: !953)
!7963 = !DILocation(line: 0, scope: !7957)
!7964 = !DILocation(line: 441, column: 45, scope: !7957)
!7965 = !DILocation(line: 442, column: 44, scope: !7957)
!7966 = !DILocation(line: 448, column: 2, scope: !7957)
!7967 = !DILocation(line: 450, column: 2, scope: !7957)
!7968 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1021, file: !1021, line: 453, type: !910, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !851, retainedNodes: !7969)
!7969 = !{!7970, !7971, !7972, !7973}
!7970 = !DILocalVariable(name: "dev", arg: 1, scope: !7968, file: !1021, line: 453, type: !880)
!7971 = !DILocalVariable(name: "pins", arg: 2, scope: !7968, file: !1021, line: 454, type: !907)
!7972 = !DILocalVariable(name: "cfg", scope: !7968, file: !1021, line: 456, type: !7931)
!7973 = !DILocalVariable(name: "gpio", scope: !7968, file: !1021, line: 457, type: !953)
!7974 = !DILocation(line: 0, scope: !7968)
!7975 = !DILocation(line: 456, column: 45, scope: !7968)
!7976 = !DILocation(line: 457, column: 44, scope: !7968)
!7977 = !DILocation(line: 467, column: 2, scope: !7968)
!7978 = !DILocation(line: 470, column: 2, scope: !7968)
!7979 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1021, file: !1021, line: 473, type: !910, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !851, retainedNodes: !7980)
!7980 = !{!7981, !7982, !7983, !7984}
!7981 = !DILocalVariable(name: "dev", arg: 1, scope: !7979, file: !1021, line: 473, type: !880)
!7982 = !DILocalVariable(name: "pins", arg: 2, scope: !7979, file: !1021, line: 474, type: !907)
!7983 = !DILocalVariable(name: "cfg", scope: !7979, file: !1021, line: 476, type: !7931)
!7984 = !DILocalVariable(name: "gpio", scope: !7979, file: !1021, line: 477, type: !953)
!7985 = !DILocation(line: 0, scope: !7979)
!7986 = !DILocation(line: 476, column: 45, scope: !7979)
!7987 = !DILocation(line: 477, column: 44, scope: !7979)
!7988 = !DILocation(line: 484, column: 2, scope: !7979)
!7989 = !DILocation(line: 487, column: 2, scope: !7979)
!7990 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1021, file: !1021, line: 594, type: !916, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !851, retainedNodes: !7991)
!7991 = !{!7992, !7993, !7994, !7995, !7996, !7997, !7999, !8000, !8001}
!7992 = !DILocalVariable(name: "dev", arg: 1, scope: !7990, file: !1021, line: 594, type: !880)
!7993 = !DILocalVariable(name: "pin", arg: 2, scope: !7990, file: !1021, line: 595, type: !895)
!7994 = !DILocalVariable(name: "mode", arg: 3, scope: !7990, file: !1021, line: 596, type: !854)
!7995 = !DILocalVariable(name: "trig", arg: 4, scope: !7990, file: !1021, line: 597, type: !860)
!7996 = !DILocalVariable(name: "cfg", scope: !7990, file: !1021, line: 599, type: !7931)
!7997 = !DILocalVariable(name: "data", scope: !7990, file: !1021, line: 600, type: !7998)
!7998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1090, size: 32)
!7999 = !DILocalVariable(name: "edge", scope: !7990, file: !1021, line: 601, type: !103)
!8000 = !DILocalVariable(name: "err", scope: !7990, file: !1021, line: 602, type: !103)
!8001 = !DILabel(scope: !7990, name: "exit", file: !1021, line: 643)
!8002 = !DILocation(line: 0, scope: !7990)
!8003 = !DILocation(line: 599, column: 45, scope: !7990)
!8004 = !DILocation(line: 604, column: 6, scope: !7990)
!8005 = !DILocation(line: 605, column: 34, scope: !8006)
!8006 = distinct !DILexicalBlock(scope: !8007, file: !1021, line: 605, column: 7)
!8007 = distinct !DILexicalBlock(scope: !8008, file: !1021, line: 604, column: 38)
!8008 = distinct !DILexicalBlock(scope: !7990, file: !1021, line: 604, column: 6)
!8009 = !DILocation(line: 605, column: 7, scope: !8006)
!8010 = !DILocation(line: 605, column: 47, scope: !8006)
!8011 = !DILocation(line: 605, column: 39, scope: !8006)
!8012 = !DILocation(line: 605, column: 7, scope: !8007)
!8013 = !DILocation(line: 606, column: 4, scope: !8014)
!8014 = distinct !DILexicalBlock(scope: !8006, file: !1021, line: 605, column: 53)
!8015 = !DILocation(line: 607, column: 4, scope: !8014)
!8016 = !DILocation(line: 608, column: 4, scope: !8014)
!8017 = !DILocation(line: 609, column: 3, scope: !8014)
!8018 = !DILocation(line: 600, column: 38, scope: !7990)
!8019 = !DILocation(line: 620, column: 30, scope: !8020)
!8020 = distinct !DILexicalBlock(scope: !7990, file: !1021, line: 620, column: 6)
!8021 = !DILocation(line: 620, column: 6, scope: !8020)
!8022 = !DILocation(line: 620, column: 57, scope: !8020)
!8023 = !DILocation(line: 620, column: 6, scope: !7990)
!8024 = !DILocation(line: 625, column: 29, scope: !7990)
!8025 = !DILocation(line: 625, column: 2, scope: !7990)
!8026 = !DILocation(line: 627, column: 2, scope: !7990)
!8027 = !DILocation(line: 630, column: 3, scope: !8028)
!8028 = distinct !DILexicalBlock(scope: !7990, file: !1021, line: 627, column: 16)
!8029 = !DILocation(line: 633, column: 3, scope: !8028)
!8030 = !DILocation(line: 636, column: 3, scope: !8028)
!8031 = !DILocation(line: 639, column: 2, scope: !7990)
!8032 = !DILocation(line: 641, column: 2, scope: !7990)
!8033 = !DILocation(line: 643, column: 1, scope: !7990)
!8034 = !DILocation(line: 644, column: 2, scope: !7990)
!8035 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1021, file: !1021, line: 647, type: !920, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !851, retainedNodes: !8036)
!8036 = !{!8037, !8038, !8039, !8040}
!8037 = !DILocalVariable(name: "dev", arg: 1, scope: !8035, file: !1021, line: 647, type: !880)
!8038 = !DILocalVariable(name: "callback", arg: 2, scope: !8035, file: !1021, line: 648, type: !922)
!8039 = !DILocalVariable(name: "set", arg: 3, scope: !8035, file: !1021, line: 649, type: !157)
!8040 = !DILocalVariable(name: "data", scope: !8035, file: !1021, line: 651, type: !7998)
!8041 = !DILocation(line: 0, scope: !8035)
!8042 = !DILocation(line: 651, column: 38, scope: !8035)
!8043 = !DILocation(line: 653, column: 37, scope: !8035)
!8044 = !DILocation(line: 653, column: 9, scope: !8035)
!8045 = !DILocation(line: 653, column: 2, scope: !8035)
!8046 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !8047, file: !8047, line: 38, type: !8048, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !851, retainedNodes: !8051)
!8047 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8048 = !DISubroutineType(types: !8049)
!8049 = !{!103, !8050, !922, !157}
!8050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1096, size: 32)
!8051 = !{!8052, !8053, !8054}
!8052 = !DILocalVariable(name: "callbacks", arg: 1, scope: !8046, file: !8047, line: 38, type: !8050)
!8053 = !DILocalVariable(name: "callback", arg: 2, scope: !8046, file: !8047, line: 39, type: !922)
!8054 = !DILocalVariable(name: "set", arg: 3, scope: !8046, file: !8047, line: 40, type: !157)
!8055 = !DILocation(line: 0, scope: !8046)
!8056 = !DILocation(line: 45, column: 7, scope: !8057)
!8057 = distinct !DILexicalBlock(scope: !8046, file: !8047, line: 45, column: 6)
!8058 = !DILocation(line: 45, column: 6, scope: !8046)
!8059 = !DILocation(line: 46, column: 56, scope: !8060)
!8060 = distinct !DILexicalBlock(scope: !8061, file: !8047, line: 46, column: 7)
!8061 = distinct !DILexicalBlock(scope: !8057, file: !8047, line: 45, column: 38)
!8062 = !DILocation(line: 46, column: 8, scope: !8060)
!8063 = !DILocation(line: 46, column: 7, scope: !8061)
!8064 = !DILocation(line: 51, column: 13, scope: !8057)
!8065 = !DILocation(line: 56, column: 43, scope: !8066)
!8066 = distinct !DILexicalBlock(scope: !8067, file: !8047, line: 55, column: 11)
!8067 = distinct !DILexicalBlock(scope: !8046, file: !8047, line: 55, column: 6)
!8068 = !DILocation(line: 56, column: 3, scope: !8066)
!8069 = !DILocation(line: 57, column: 2, scope: !8066)
!8070 = !DILocation(line: 60, column: 1, scope: !8046)
!8071 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !927, file: !927, line: 261, type: !8072, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !851, retainedNodes: !8074)
!8072 = !DISubroutineType(types: !8073)
!8073 = !{!157, !8050}
!8074 = !{!8075}
!8075 = !DILocalVariable(name: "list", arg: 1, scope: !8071, file: !927, line: 261, type: !8050)
!8076 = !DILocation(line: 0, scope: !8071)
!8077 = !DILocation(line: 261, column: 1, scope: !8071)
!8078 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !927, file: !927, line: 417, type: !8079, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !851, retainedNodes: !8081)
!8079 = !DISubroutineType(types: !8080)
!8080 = !{!157, !8050, !1100}
!8081 = !{!8082, !8083, !8084, !8085}
!8082 = !DILocalVariable(name: "list", arg: 1, scope: !8078, file: !927, line: 417, type: !8050)
!8083 = !DILocalVariable(name: "node", arg: 2, scope: !8078, file: !927, line: 417, type: !1100)
!8084 = !DILocalVariable(name: "prev", scope: !8078, file: !927, line: 417, type: !1100)
!8085 = !DILocalVariable(name: "test", scope: !8078, file: !927, line: 417, type: !1100)
!8086 = !DILocation(line: 0, scope: !8078)
!8087 = !DILocation(line: 417, column: 1, scope: !8088)
!8088 = distinct !DILexicalBlock(scope: !8078, file: !927, line: 417, column: 1)
!8089 = !DILocation(line: 417, column: 1, scope: !8090)
!8090 = distinct !DILexicalBlock(scope: !8088, file: !927, line: 417, column: 1)
!8091 = !DILocation(line: 417, column: 1, scope: !8092)
!8092 = distinct !DILexicalBlock(scope: !8093, file: !927, line: 417, column: 1)
!8093 = distinct !DILexicalBlock(scope: !8090, file: !927, line: 417, column: 1)
!8094 = !DILocation(line: 417, column: 1, scope: !8093)
!8095 = distinct !{!8095, !8087, !8087}
!8096 = !DILocation(line: 417, column: 1, scope: !8097)
!8097 = distinct !DILexicalBlock(scope: !8092, file: !927, line: 417, column: 1)
!8098 = !DILocation(line: 417, column: 1, scope: !8078)
!8099 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !927, file: !927, line: 298, type: !8100, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !851, retainedNodes: !8102)
!8100 = !DISubroutineType(types: !8101)
!8101 = !{null, !8050, !1100}
!8102 = !{!8103, !8104}
!8103 = !DILocalVariable(name: "list", arg: 1, scope: !8099, file: !927, line: 298, type: !8050)
!8104 = !DILocalVariable(name: "node", arg: 2, scope: !8099, file: !927, line: 298, type: !1100)
!8105 = !DILocation(line: 0, scope: !8099)
!8106 = !DILocation(line: 298, column: 1, scope: !8099)
!8107 = !DILocation(line: 298, column: 1, scope: !8108)
!8108 = distinct !DILexicalBlock(scope: !8099, file: !927, line: 298, column: 1)
!8109 = !DILocation(line: 298, column: 1, scope: !8110)
!8110 = distinct !DILexicalBlock(scope: !8108, file: !927, line: 298, column: 1)
!8111 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !927, file: !927, line: 231, type: !8112, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !851, retainedNodes: !8114)
!8112 = !DISubroutineType(types: !8113)
!8113 = !{!1100, !8050}
!8114 = !{!8115}
!8115 = !DILocalVariable(name: "list", arg: 1, scope: !8111, file: !927, line: 231, type: !8050)
!8116 = !DILocation(line: 0, scope: !8111)
!8117 = !DILocation(line: 233, column: 15, scope: !8111)
!8118 = !DILocation(line: 233, column: 2, scope: !8111)
!8119 = distinct !DISubprogram(name: "z_snode_next_set", scope: !927, file: !927, line: 209, type: !8120, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !851, retainedNodes: !8122)
!8120 = !DISubroutineType(types: !8121)
!8121 = !{null, !1100, !1100}
!8122 = !{!8123, !8124}
!8123 = !DILocalVariable(name: "parent", arg: 1, scope: !8119, file: !927, line: 209, type: !1100)
!8124 = !DILocalVariable(name: "child", arg: 2, scope: !8119, file: !927, line: 209, type: !1100)
!8125 = !DILocation(line: 0, scope: !8119)
!8126 = !DILocation(line: 211, column: 10, scope: !8119)
!8127 = !DILocation(line: 211, column: 15, scope: !8119)
!8128 = !DILocation(line: 212, column: 1, scope: !8119)
!8129 = distinct !DISubprogram(name: "z_slist_head_set", scope: !927, file: !927, line: 214, type: !8100, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !851, retainedNodes: !8130)
!8130 = !{!8131, !8132}
!8131 = !DILocalVariable(name: "list", arg: 1, scope: !8129, file: !927, line: 214, type: !8050)
!8132 = !DILocalVariable(name: "node", arg: 2, scope: !8129, file: !927, line: 214, type: !1100)
!8133 = !DILocation(line: 0, scope: !8129)
!8134 = !DILocation(line: 216, column: 8, scope: !8129)
!8135 = !DILocation(line: 216, column: 13, scope: !8129)
!8136 = !DILocation(line: 217, column: 1, scope: !8129)
!8137 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !927, file: !927, line: 243, type: !8112, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !851, retainedNodes: !8138)
!8138 = !{!8139}
!8139 = !DILocalVariable(name: "list", arg: 1, scope: !8137, file: !927, line: 243, type: !8050)
!8140 = !DILocation(line: 0, scope: !8137)
!8141 = !DILocation(line: 245, column: 15, scope: !8137)
!8142 = !DILocation(line: 245, column: 2, scope: !8137)
!8143 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !927, file: !927, line: 219, type: !8100, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !851, retainedNodes: !8144)
!8144 = !{!8145, !8146}
!8145 = !DILocalVariable(name: "list", arg: 1, scope: !8143, file: !927, line: 219, type: !8050)
!8146 = !DILocalVariable(name: "node", arg: 2, scope: !8143, file: !927, line: 219, type: !1100)
!8147 = !DILocation(line: 0, scope: !8143)
!8148 = !DILocation(line: 221, column: 8, scope: !8143)
!8149 = !DILocation(line: 221, column: 13, scope: !8143)
!8150 = !DILocation(line: 222, column: 1, scope: !8143)
!8151 = distinct !DISubprogram(name: "sys_slist_remove", scope: !927, file: !927, line: 401, type: !8152, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !851, retainedNodes: !8154)
!8152 = !DISubroutineType(types: !8153)
!8153 = !{null, !8050, !1100, !1100}
!8154 = !{!8155, !8156, !8157}
!8155 = !DILocalVariable(name: "list", arg: 1, scope: !8151, file: !927, line: 401, type: !8050)
!8156 = !DILocalVariable(name: "prev_node", arg: 2, scope: !8151, file: !927, line: 401, type: !1100)
!8157 = !DILocalVariable(name: "node", arg: 3, scope: !8151, file: !927, line: 401, type: !1100)
!8158 = !DILocation(line: 0, scope: !8151)
!8159 = !DILocation(line: 401, column: 1, scope: !8160)
!8160 = distinct !DILexicalBlock(scope: !8151, file: !927, line: 401, column: 1)
!8161 = !DILocation(line: 0, scope: !8160)
!8162 = !DILocation(line: 401, column: 1, scope: !8151)
!8163 = !DILocation(line: 401, column: 1, scope: !8164)
!8164 = distinct !DILexicalBlock(scope: !8160, file: !927, line: 401, column: 1)
!8165 = !DILocation(line: 401, column: 1, scope: !8166)
!8166 = distinct !DILexicalBlock(scope: !8164, file: !927, line: 401, column: 1)
!8167 = !DILocation(line: 401, column: 1, scope: !8168)
!8168 = distinct !DILexicalBlock(scope: !8166, file: !927, line: 401, column: 1)
!8169 = !DILocation(line: 401, column: 1, scope: !8170)
!8170 = distinct !DILexicalBlock(scope: !8160, file: !927, line: 401, column: 1)
!8171 = !DILocation(line: 401, column: 1, scope: !8172)
!8172 = distinct !DILexicalBlock(scope: !8170, file: !927, line: 401, column: 1)
!8173 = !DILocation(line: 401, column: 1, scope: !8174)
!8174 = distinct !DILexicalBlock(scope: !8172, file: !927, line: 401, column: 1)
!8175 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !927, file: !927, line: 285, type: !8176, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !851, retainedNodes: !8178)
!8176 = !DISubroutineType(types: !8177)
!8177 = !{!1100, !1100}
!8178 = !{!8179}
!8179 = !DILocalVariable(name: "node", arg: 1, scope: !8175, file: !927, line: 285, type: !1100)
!8180 = !DILocation(line: 0, scope: !8175)
!8181 = !DILocation(line: 285, column: 1, scope: !8175)
!8182 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !927, file: !927, line: 274, type: !8176, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !851, retainedNodes: !8183)
!8183 = !{!8184}
!8184 = !DILocalVariable(name: "node", arg: 1, scope: !8182, file: !927, line: 274, type: !1100)
!8185 = !DILocation(line: 0, scope: !8182)
!8186 = !DILocation(line: 274, column: 1, scope: !8182)
!8187 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !927, file: !927, line: 204, type: !8176, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !851, retainedNodes: !8188)
!8188 = !{!8189}
!8189 = !DILocalVariable(name: "node", arg: 1, scope: !8187, file: !927, line: 204, type: !1100)
!8190 = !DILocation(line: 0, scope: !8187)
!8191 = !DILocation(line: 206, column: 15, scope: !8187)
!8192 = !DILocation(line: 206, column: 2, scope: !8187)
!8193 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1021, file: !1021, line: 342, type: !107, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !851, retainedNodes: !8194)
!8194 = !{!8195, !8196, !8197}
!8195 = !DILocalVariable(name: "pin", arg: 1, scope: !8193, file: !1021, line: 342, type: !103)
!8196 = !DILocalVariable(name: "line", scope: !8193, file: !1021, line: 344, type: !121)
!8197 = !DILocalVariable(name: "port", scope: !8193, file: !1021, line: 345, type: !103)
!8198 = !DILocation(line: 0, scope: !8193)
!8199 = !DILocation(line: 344, column: 18, scope: !8193)
!8200 = !{i32 983040, i32 0}
!8201 = !DILocation(line: 356, column: 9, scope: !8193)
!8202 = !DILocation(line: 370, column: 2, scope: !8193)
!8203 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1021, file: !1021, line: 37, type: !570, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !851, retainedNodes: !8204)
!8204 = !{!8205, !8206, !8207}
!8205 = !DILocalVariable(name: "line", arg: 1, scope: !8203, file: !1021, line: 37, type: !103)
!8206 = !DILocalVariable(name: "arg", arg: 2, scope: !8203, file: !1021, line: 37, type: !102)
!8207 = !DILocalVariable(name: "data", scope: !8203, file: !1021, line: 39, type: !7998)
!8208 = !DILocation(line: 0, scope: !8203)
!8209 = !DILocation(line: 41, column: 29, scope: !8203)
!8210 = !DILocation(line: 41, column: 39, scope: !8203)
!8211 = !DILocation(line: 41, column: 44, scope: !8203)
!8212 = !DILocation(line: 41, column: 2, scope: !8203)
!8213 = !DILocation(line: 42, column: 1, scope: !8203)
!8214 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1021, file: !1021, line: 376, type: !8215, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !851, retainedNodes: !8217)
!8215 = !DISubroutineType(types: !8216)
!8216 = !{!103, !103, !103}
!8217 = !{!8218, !8219, !8220, !8222, !8223}
!8218 = !DILocalVariable(name: "port", arg: 1, scope: !8214, file: !1021, line: 376, type: !103)
!8219 = !DILocalVariable(name: "pin", arg: 2, scope: !8214, file: !1021, line: 376, type: !103)
!8220 = !DILocalVariable(name: "clk", scope: !8214, file: !1021, line: 386, type: !8221)
!8221 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !880)
!8222 = !DILocalVariable(name: "pclken", scope: !8214, file: !1021, line: 387, type: !1147)
!8223 = !DILocalVariable(name: "ret", scope: !8214, file: !1021, line: 396, type: !103)
!8224 = !DILocation(line: 0, scope: !8214)
!8225 = !DILocation(line: 387, column: 2, scope: !8214)
!8226 = !DILocation(line: 387, column: 22, scope: !8214)
!8227 = !DILocation(line: 399, column: 8, scope: !8214)
!8228 = !DILocation(line: 400, column: 10, scope: !8229)
!8229 = distinct !DILexicalBlock(scope: !8214, file: !1021, line: 400, column: 6)
!8230 = !DILocation(line: 400, column: 6, scope: !8214)
!8231 = !DILocation(line: 405, column: 2, scope: !8214)
!8232 = !DILocation(line: 407, column: 2, scope: !8214)
!8233 = !DILocation(line: 408, column: 1, scope: !8214)
!8234 = distinct !DISubprogram(name: "clock_control_on", scope: !659, file: !659, line: 123, type: !986, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !851, retainedNodes: !8235)
!8235 = !{!8236, !8237, !8238}
!8236 = !DILocalVariable(name: "dev", arg: 1, scope: !8234, file: !659, line: 123, type: !880)
!8237 = !DILocalVariable(name: "sys", arg: 2, scope: !8234, file: !659, line: 124, type: !751)
!8238 = !DILocalVariable(name: "api", scope: !8234, file: !659, line: 126, type: !979)
!8239 = !DILocation(line: 0, scope: !8234)
!8240 = !DILocation(line: 127, column: 49, scope: !8234)
!8241 = !DILocation(line: 129, column: 14, scope: !8234)
!8242 = !DILocation(line: 129, column: 9, scope: !8234)
!8243 = !DILocation(line: 129, column: 2, scope: !8234)
!8244 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1021, file: !1021, line: 311, type: !7364, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !851, retainedNodes: !8245)
!8245 = !{!8246, !8247, !8248}
!8246 = !DILocalVariable(name: "port", arg: 1, scope: !8244, file: !1021, line: 311, type: !103)
!8247 = !DILocalVariable(name: "pin", arg: 2, scope: !8244, file: !1021, line: 311, type: !103)
!8248 = !DILocalVariable(name: "line", scope: !8244, file: !1021, line: 313, type: !121)
!8249 = !DILocation(line: 0, scope: !8244)
!8250 = !DILocation(line: 313, column: 18, scope: !8244)
!8251 = !DILocation(line: 337, column: 2, scope: !8244)
!8252 = !DILocation(line: 340, column: 1, scope: !8244)
!8253 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1021, file: !1021, line: 295, type: !8254, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !851, retainedNodes: !8256)
!8254 = !DISubroutineType(types: !8255)
!8255 = !{!121, !103}
!8256 = !{!8257}
!8257 = !DILocalVariable(name: "pin", arg: 1, scope: !8253, file: !1021, line: 295, type: !103)
!8258 = !DILocation(line: 0, scope: !8253)
!8259 = !DILocation(line: 307, column: 46, scope: !8253)
!8260 = !DILocation(line: 307, column: 27, scope: !8253)
!8261 = !DILocation(line: 307, column: 32, scope: !8253)
!8262 = !DILocation(line: 307, column: 14, scope: !8253)
!8263 = !DILocation(line: 307, column: 39, scope: !8253)
!8264 = !DILocation(line: 307, column: 2, scope: !8253)
!8265 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !5345, file: !5345, line: 671, type: !8266, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !851, retainedNodes: !8268)
!8266 = !DISubroutineType(types: !8267)
!8267 = !{null, !121, !121}
!8268 = !{!8269, !8270}
!8269 = !DILocalVariable(name: "Port", arg: 1, scope: !8265, file: !5345, line: 671, type: !121)
!8270 = !DILocalVariable(name: "Line", arg: 2, scope: !8265, file: !5345, line: 671, type: !121)
!8271 = !DILocation(line: 0, scope: !8265)
!8272 = !DILocation(line: 673, column: 3, scope: !8265)
!8273 = !DILocalVariable(name: "value", arg: 1, scope: !8274, file: !5498, line: 373, type: !121)
!8274 = distinct !DISubprogram(name: "__RBIT", scope: !5498, file: !5498, line: 373, type: !6506, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !851, retainedNodes: !8275)
!8275 = !{!8273, !8276}
!8276 = !DILocalVariable(name: "result", scope: !8274, file: !5498, line: 375, type: !121)
!8277 = !DILocation(line: 0, scope: !8274, inlinedAt: !8278)
!8278 = distinct !DILocation(line: 673, column: 3, scope: !8265)
!8279 = !DILocation(line: 380, column: 4, scope: !8274, inlinedAt: !8278)
!8280 = !{i64 3545807}
!8281 = !DILocalVariable(name: "value", arg: 1, scope: !8282, file: !5498, line: 403, type: !121)
!8282 = distinct !DISubprogram(name: "__CLZ", scope: !5498, file: !5498, line: 403, type: !8283, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !851, retainedNodes: !8285)
!8283 = !DISubroutineType(types: !8284)
!8284 = !{!154, !121}
!8285 = !{!8281}
!8286 = !DILocation(line: 0, scope: !8282, inlinedAt: !8287)
!8287 = distinct !DILocation(line: 673, column: 3, scope: !8265)
!8288 = !DILocation(line: 414, column: 7, scope: !8282, inlinedAt: !8287)
!8289 = !DILocation(line: 674, column: 1, scope: !8265)
!8290 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !8047, file: !8047, line: 69, type: !8291, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !851, retainedNodes: !8293)
!8291 = !DISubroutineType(types: !8292)
!8292 = !{null, !8050, !880, !121}
!8293 = !{!8294, !8295, !8296, !8297, !8298}
!8294 = !DILocalVariable(name: "list", arg: 1, scope: !8290, file: !8047, line: 69, type: !8050)
!8295 = !DILocalVariable(name: "port", arg: 2, scope: !8290, file: !8047, line: 70, type: !880)
!8296 = !DILocalVariable(name: "pins", arg: 3, scope: !8290, file: !8047, line: 71, type: !121)
!8297 = !DILocalVariable(name: "cb", scope: !8290, file: !8047, line: 73, type: !922)
!8298 = !DILocalVariable(name: "tmp", scope: !8290, file: !8047, line: 73, type: !922)
!8299 = !DILocation(line: 0, scope: !8290)
!8300 = !DILocation(line: 75, column: 2, scope: !8301)
!8301 = distinct !DILexicalBlock(scope: !8290, file: !8047, line: 75, column: 2)
!8302 = !DILocation(line: 0, scope: !8301)
!8303 = !DILocation(line: 76, column: 11, scope: !8304)
!8304 = distinct !DILexicalBlock(scope: !8305, file: !8047, line: 76, column: 7)
!8305 = distinct !DILexicalBlock(scope: !8306, file: !8047, line: 75, column: 57)
!8306 = distinct !DILexicalBlock(scope: !8301, file: !8047, line: 75, column: 2)
!8307 = !DILocation(line: 76, column: 20, scope: !8304)
!8308 = !DILocation(line: 76, column: 7, scope: !8305)
!8309 = !DILocation(line: 78, column: 8, scope: !8310)
!8310 = distinct !DILexicalBlock(scope: !8304, file: !8047, line: 76, column: 28)
!8311 = !DILocation(line: 78, column: 4, scope: !8310)
!8312 = !DILocation(line: 79, column: 3, scope: !8310)
!8313 = !DILocation(line: 75, column: 2, scope: !8306)
!8314 = !DILocation(line: 81, column: 1, scope: !8290)
!8315 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !5345, file: !5345, line: 710, type: !6506, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !851, retainedNodes: !8316)
!8316 = !{!8317}
!8317 = !DILocalVariable(name: "Line", arg: 1, scope: !8315, file: !5345, line: 710, type: !121)
!8318 = !DILocation(line: 0, scope: !8315)
!8319 = !DILocation(line: 712, column: 21, scope: !8315)
!8320 = !DILocation(line: 0, scope: !8274, inlinedAt: !8321)
!8321 = distinct !DILocation(line: 712, column: 76, scope: !8315)
!8322 = !DILocation(line: 380, column: 4, scope: !8274, inlinedAt: !8321)
!8323 = !DILocation(line: 0, scope: !8282, inlinedAt: !8324)
!8324 = distinct !DILocation(line: 712, column: 76, scope: !8315)
!8325 = !DILocation(line: 414, column: 7, scope: !8282, inlinedAt: !8324)
!8326 = !DILocation(line: 712, column: 73, scope: !8315)
!8327 = !DILocation(line: 712, column: 3, scope: !8315)
!8328 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !8329, file: !8329, line: 910, type: !8330, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !851, retainedNodes: !8332)
!8329 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8330 = !DISubroutineType(types: !8331)
!8331 = !{null, !953, !121}
!8332 = !{!8333, !8334}
!8333 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8328, file: !8329, line: 910, type: !953)
!8334 = !DILocalVariable(name: "PinMask", arg: 2, scope: !8328, file: !8329, line: 910, type: !121)
!8335 = !DILocation(line: 0, scope: !8328)
!8336 = !DILocation(line: 912, column: 3, scope: !8328)
!8337 = !DILocation(line: 913, column: 1, scope: !8328)
!8338 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !8329, file: !8329, line: 823, type: !8339, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !851, retainedNodes: !8341)
!8339 = !DISubroutineType(types: !8340)
!8340 = !{!121, !953}
!8341 = !{!8342}
!8342 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8338, file: !8329, line: 823, type: !953)
!8343 = !DILocation(line: 0, scope: !8338)
!8344 = !DILocation(line: 825, column: 21, scope: !8338)
!8345 = !DILocation(line: 825, column: 3, scope: !8338)
!8346 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !8329, file: !8329, line: 812, type: !8330, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !851, retainedNodes: !8347)
!8347 = !{!8348, !8349}
!8348 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8346, file: !8329, line: 812, type: !953)
!8349 = !DILocalVariable(name: "PortValue", arg: 2, scope: !8346, file: !8329, line: 812, type: !121)
!8350 = !DILocation(line: 0, scope: !8346)
!8351 = !DILocation(line: 814, column: 3, scope: !8346)
!8352 = !DILocation(line: 815, column: 1, scope: !8346)
!8353 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !8329, file: !8329, line: 771, type: !8339, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !851, retainedNodes: !8354)
!8354 = !{!8355}
!8355 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8353, file: !8329, line: 771, type: !953)
!8356 = !DILocation(line: 0, scope: !8353)
!8357 = !DILocation(line: 773, column: 21, scope: !8353)
!8358 = !DILocation(line: 773, column: 3, scope: !8353)
!8359 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1021, file: !1021, line: 47, type: !8360, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !851, retainedNodes: !8362)
!8360 = !DISubroutineType(types: !8361)
!8361 = !{!103, !896, !2379}
!8362 = !{!8363, !8364}
!8363 = !DILocalVariable(name: "flags", arg: 1, scope: !8359, file: !1021, line: 47, type: !896)
!8364 = !DILocalVariable(name: "pincfg", arg: 2, scope: !8359, file: !1021, line: 47, type: !2379)
!8365 = !DILocation(line: 0, scope: !8359)
!8366 = !DILocation(line: 50, column: 13, scope: !8367)
!8367 = distinct !DILexicalBlock(scope: !8359, file: !1021, line: 50, column: 6)
!8368 = !DILocation(line: 50, column: 28, scope: !8367)
!8369 = !DILocation(line: 50, column: 6, scope: !8359)
!8370 = !DILocation(line: 53, column: 11, scope: !8371)
!8371 = distinct !DILexicalBlock(scope: !8367, file: !1021, line: 50, column: 34)
!8372 = !DILocation(line: 55, column: 14, scope: !8373)
!8373 = distinct !DILexicalBlock(scope: !8371, file: !1021, line: 55, column: 7)
!8374 = !DILocation(line: 55, column: 35, scope: !8373)
!8375 = !DILocation(line: 55, column: 7, scope: !8371)
!8376 = !DILocation(line: 56, column: 14, scope: !8377)
!8377 = distinct !DILexicalBlock(scope: !8378, file: !1021, line: 56, column: 8)
!8378 = distinct !DILexicalBlock(scope: !8373, file: !1021, line: 55, column: 41)
!8379 = !DILocation(line: 56, column: 8, scope: !8378)
!8380 = !DILocation(line: 0, scope: !8373)
!8381 = !DILocation(line: 66, column: 14, scope: !8382)
!8382 = distinct !DILexicalBlock(scope: !8371, file: !1021, line: 66, column: 7)
!8383 = !DILocation(line: 66, column: 30, scope: !8382)
!8384 = !DILocation(line: 66, column: 7, scope: !8371)
!8385 = !DILocation(line: 67, column: 12, scope: !8386)
!8386 = distinct !DILexicalBlock(scope: !8382, file: !1021, line: 66, column: 36)
!8387 = !DILocation(line: 68, column: 3, scope: !8386)
!8388 = !DILocation(line: 68, column: 21, scope: !8389)
!8389 = distinct !DILexicalBlock(scope: !8382, file: !1021, line: 68, column: 14)
!8390 = !DILocation(line: 68, column: 39, scope: !8389)
!8391 = !DILocation(line: 68, column: 14, scope: !8382)
!8392 = !DILocation(line: 69, column: 12, scope: !8393)
!8393 = distinct !DILexicalBlock(scope: !8389, file: !1021, line: 68, column: 45)
!8394 = !DILocation(line: 70, column: 3, scope: !8393)
!8395 = !DILocation(line: 72, column: 21, scope: !8396)
!8396 = distinct !DILexicalBlock(scope: !8367, file: !1021, line: 72, column: 14)
!8397 = !DILocation(line: 72, column: 35, scope: !8396)
!8398 = !DILocation(line: 72, column: 14, scope: !8367)
!8399 = !DILocation(line: 77, column: 14, scope: !8400)
!8400 = distinct !DILexicalBlock(scope: !8401, file: !1021, line: 77, column: 7)
!8401 = distinct !DILexicalBlock(scope: !8396, file: !1021, line: 72, column: 41)
!8402 = !DILocation(line: 77, column: 30, scope: !8400)
!8403 = !DILocation(line: 77, column: 7, scope: !8401)
!8404 = !DILocation(line: 0, scope: !8367)
!8405 = !DILocation(line: 90, column: 1, scope: !8359)
!8406 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1021, file: !1021, line: 157, type: !8407, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !851, retainedNodes: !8409)
!8407 = !DISubroutineType(types: !8408)
!8408 = !{null, !880, !103, !103, !103}
!8409 = !{!8410, !8411, !8412, !8413, !8414, !8415, !8416, !8417, !8418, !8419, !8420}
!8410 = !DILocalVariable(name: "dev", arg: 1, scope: !8406, file: !1021, line: 157, type: !880)
!8411 = !DILocalVariable(name: "pin", arg: 2, scope: !8406, file: !1021, line: 157, type: !103)
!8412 = !DILocalVariable(name: "conf", arg: 3, scope: !8406, file: !1021, line: 158, type: !103)
!8413 = !DILocalVariable(name: "func", arg: 4, scope: !8406, file: !1021, line: 158, type: !103)
!8414 = !DILocalVariable(name: "cfg", scope: !8406, file: !1021, line: 160, type: !7931)
!8415 = !DILocalVariable(name: "gpio", scope: !8406, file: !1021, line: 161, type: !953)
!8416 = !DILocalVariable(name: "pin_ll", scope: !8406, file: !1021, line: 163, type: !103)
!8417 = !DILocalVariable(name: "mode", scope: !8406, file: !1021, line: 227, type: !32)
!8418 = !DILocalVariable(name: "otype", scope: !8406, file: !1021, line: 227, type: !32)
!8419 = !DILocalVariable(name: "ospeed", scope: !8406, file: !1021, line: 227, type: !32)
!8420 = !DILocalVariable(name: "pupd", scope: !8406, file: !1021, line: 227, type: !32)
!8421 = !DILocation(line: 0, scope: !8406)
!8422 = !DILocation(line: 160, column: 45, scope: !8406)
!8423 = !DILocation(line: 161, column: 44, scope: !8406)
!8424 = !DILocation(line: 163, column: 15, scope: !8406)
!8425 = !DILocation(line: 229, column: 14, scope: !8406)
!8426 = !DILocation(line: 246, column: 47, scope: !8406)
!8427 = !DILocation(line: 246, column: 2, scope: !8406)
!8428 = !DILocation(line: 248, column: 43, scope: !8406)
!8429 = !DILocation(line: 248, column: 2, scope: !8406)
!8430 = !DILocation(line: 250, column: 40, scope: !8406)
!8431 = !DILocation(line: 250, column: 2, scope: !8406)
!8432 = !DILocation(line: 252, column: 11, scope: !8433)
!8433 = distinct !DILexicalBlock(scope: !8406, file: !1021, line: 252, column: 6)
!8434 = !DILocation(line: 252, column: 6, scope: !8406)
!8435 = !DILocation(line: 253, column: 11, scope: !8436)
!8436 = distinct !DILexicalBlock(scope: !8437, file: !1021, line: 253, column: 7)
!8437 = distinct !DILexicalBlock(scope: !8433, file: !1021, line: 252, column: 36)
!8438 = !DILocation(line: 253, column: 7, scope: !8437)
!8439 = !DILocation(line: 254, column: 4, scope: !8440)
!8440 = distinct !DILexicalBlock(scope: !8436, file: !1021, line: 253, column: 16)
!8441 = !DILocation(line: 255, column: 3, scope: !8440)
!8442 = !DILocation(line: 256, column: 4, scope: !8443)
!8443 = distinct !DILexicalBlock(scope: !8436, file: !1021, line: 255, column: 10)
!8444 = !DILocation(line: 260, column: 40, scope: !8406)
!8445 = !DILocation(line: 260, column: 2, scope: !8406)
!8446 = !DILocation(line: 265, column: 1, scope: !8406)
!8447 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1021, file: !1021, line: 137, type: !8254, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !851, retainedNodes: !8448)
!8448 = !{!8449, !8450}
!8449 = !DILocalVariable(name: "pin", arg: 1, scope: !8447, file: !1021, line: 137, type: !103)
!8450 = !DILocalVariable(name: "pinval", scope: !8447, file: !1021, line: 139, type: !121)
!8451 = !DILocation(line: 0, scope: !8447)
!8452 = !DILocation(line: 149, column: 13, scope: !8447)
!8453 = !DILocation(line: 151, column: 2, scope: !8447)
!8454 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !8329, file: !8329, line: 342, type: !8455, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !851, retainedNodes: !8457)
!8455 = !DISubroutineType(types: !8456)
!8456 = !{null, !953, !121, !121}
!8457 = !{!8458, !8459, !8460}
!8458 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8454, file: !8329, line: 342, type: !953)
!8459 = !DILocalVariable(name: "PinMask", arg: 2, scope: !8454, file: !8329, line: 342, type: !121)
!8460 = !DILocalVariable(name: "OutputType", arg: 3, scope: !8454, file: !8329, line: 342, type: !121)
!8461 = !DILocation(line: 0, scope: !8454)
!8462 = !DILocation(line: 344, column: 3, scope: !8454)
!8463 = !DILocation(line: 345, column: 1, scope: !8454)
!8464 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !8329, file: !8329, line: 413, type: !8455, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !851, retainedNodes: !8465)
!8465 = !{!8466, !8467, !8468}
!8466 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8464, file: !8329, line: 413, type: !953)
!8467 = !DILocalVariable(name: "Pin", arg: 2, scope: !8464, file: !8329, line: 413, type: !121)
!8468 = !DILocalVariable(name: "Speed", arg: 3, scope: !8464, file: !8329, line: 413, type: !121)
!8469 = !DILocation(line: 0, scope: !8464)
!8470 = !DILocation(line: 415, column: 3, scope: !8464)
!8471 = !DILocation(line: 0, scope: !8274, inlinedAt: !8472)
!8472 = distinct !DILocation(line: 415, column: 3, scope: !8464)
!8473 = !DILocation(line: 380, column: 4, scope: !8274, inlinedAt: !8472)
!8474 = !DILocation(line: 0, scope: !8282, inlinedAt: !8475)
!8475 = distinct !DILocation(line: 415, column: 3, scope: !8464)
!8476 = !DILocation(line: 414, column: 7, scope: !8282, inlinedAt: !8475)
!8477 = !DILocation(line: 0, scope: !8274, inlinedAt: !8478)
!8478 = distinct !DILocation(line: 415, column: 3, scope: !8464)
!8479 = !DILocation(line: 0, scope: !8282, inlinedAt: !8480)
!8480 = distinct !DILocation(line: 415, column: 3, scope: !8464)
!8481 = !DILocation(line: 417, column: 1, scope: !8464)
!8482 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !8329, file: !8329, line: 484, type: !8455, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !851, retainedNodes: !8483)
!8483 = !{!8484, !8485, !8486}
!8484 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8482, file: !8329, line: 484, type: !953)
!8485 = !DILocalVariable(name: "Pin", arg: 2, scope: !8482, file: !8329, line: 484, type: !121)
!8486 = !DILocalVariable(name: "Pull", arg: 3, scope: !8482, file: !8329, line: 484, type: !121)
!8487 = !DILocation(line: 0, scope: !8482)
!8488 = !DILocation(line: 486, column: 3, scope: !8482)
!8489 = !DILocation(line: 0, scope: !8274, inlinedAt: !8490)
!8490 = distinct !DILocation(line: 486, column: 3, scope: !8482)
!8491 = !DILocation(line: 380, column: 4, scope: !8274, inlinedAt: !8490)
!8492 = !DILocation(line: 0, scope: !8282, inlinedAt: !8493)
!8493 = distinct !DILocation(line: 486, column: 3, scope: !8482)
!8494 = !DILocation(line: 414, column: 7, scope: !8282, inlinedAt: !8493)
!8495 = !DILocation(line: 0, scope: !8274, inlinedAt: !8496)
!8496 = distinct !DILocation(line: 486, column: 3, scope: !8482)
!8497 = !DILocation(line: 0, scope: !8282, inlinedAt: !8498)
!8498 = distinct !DILocation(line: 486, column: 3, scope: !8482)
!8499 = !DILocation(line: 487, column: 1, scope: !8482)
!8500 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !8329, file: !8329, line: 556, type: !8455, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !851, retainedNodes: !8501)
!8501 = !{!8502, !8503, !8504}
!8502 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8500, file: !8329, line: 556, type: !953)
!8503 = !DILocalVariable(name: "Pin", arg: 2, scope: !8500, file: !8329, line: 556, type: !121)
!8504 = !DILocalVariable(name: "Alternate", arg: 3, scope: !8500, file: !8329, line: 556, type: !121)
!8505 = !DILocation(line: 0, scope: !8500)
!8506 = !DILocation(line: 558, column: 3, scope: !8500)
!8507 = !DILocation(line: 0, scope: !8274, inlinedAt: !8508)
!8508 = distinct !DILocation(line: 558, column: 3, scope: !8500)
!8509 = !DILocation(line: 380, column: 4, scope: !8274, inlinedAt: !8508)
!8510 = !DILocation(line: 0, scope: !8282, inlinedAt: !8511)
!8511 = distinct !DILocation(line: 558, column: 3, scope: !8500)
!8512 = !DILocation(line: 414, column: 7, scope: !8282, inlinedAt: !8511)
!8513 = !DILocation(line: 0, scope: !8274, inlinedAt: !8514)
!8514 = distinct !DILocation(line: 558, column: 3, scope: !8500)
!8515 = !DILocation(line: 0, scope: !8282, inlinedAt: !8516)
!8516 = distinct !DILocation(line: 558, column: 3, scope: !8500)
!8517 = !DILocation(line: 560, column: 1, scope: !8500)
!8518 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !8329, file: !8329, line: 633, type: !8455, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !851, retainedNodes: !8519)
!8519 = !{!8520, !8521, !8522}
!8520 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8518, file: !8329, line: 633, type: !953)
!8521 = !DILocalVariable(name: "Pin", arg: 2, scope: !8518, file: !8329, line: 633, type: !121)
!8522 = !DILocalVariable(name: "Alternate", arg: 3, scope: !8518, file: !8329, line: 633, type: !121)
!8523 = !DILocation(line: 0, scope: !8518)
!8524 = !DILocation(line: 635, column: 3, scope: !8518)
!8525 = !DILocation(line: 0, scope: !8274, inlinedAt: !8526)
!8526 = distinct !DILocation(line: 635, column: 3, scope: !8518)
!8527 = !DILocation(line: 380, column: 4, scope: !8274, inlinedAt: !8526)
!8528 = !DILocation(line: 0, scope: !8282, inlinedAt: !8529)
!8529 = distinct !DILocation(line: 635, column: 3, scope: !8518)
!8530 = !DILocation(line: 414, column: 7, scope: !8282, inlinedAt: !8529)
!8531 = !DILocation(line: 0, scope: !8274, inlinedAt: !8532)
!8532 = distinct !DILocation(line: 635, column: 3, scope: !8518)
!8533 = !DILocation(line: 0, scope: !8282, inlinedAt: !8534)
!8534 = distinct !DILocation(line: 635, column: 3, scope: !8518)
!8535 = !DILocation(line: 637, column: 1, scope: !8518)
!8536 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !8329, file: !8329, line: 273, type: !8455, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !851, retainedNodes: !8537)
!8537 = !{!8538, !8539, !8540}
!8538 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8536, file: !8329, line: 273, type: !953)
!8539 = !DILocalVariable(name: "Pin", arg: 2, scope: !8536, file: !8329, line: 273, type: !121)
!8540 = !DILocalVariable(name: "Mode", arg: 3, scope: !8536, file: !8329, line: 273, type: !121)
!8541 = !DILocation(line: 0, scope: !8536)
!8542 = !DILocation(line: 275, column: 3, scope: !8536)
!8543 = !DILocation(line: 0, scope: !8274, inlinedAt: !8544)
!8544 = distinct !DILocation(line: 275, column: 3, scope: !8536)
!8545 = !DILocation(line: 380, column: 4, scope: !8274, inlinedAt: !8544)
!8546 = !DILocation(line: 0, scope: !8282, inlinedAt: !8547)
!8547 = distinct !DILocation(line: 275, column: 3, scope: !8536)
!8548 = !DILocation(line: 414, column: 7, scope: !8282, inlinedAt: !8547)
!8549 = !DILocation(line: 0, scope: !8274, inlinedAt: !8550)
!8550 = distinct !DILocation(line: 275, column: 3, scope: !8536)
!8551 = !DILocation(line: 0, scope: !8282, inlinedAt: !8552)
!8552 = distinct !DILocation(line: 275, column: 3, scope: !8536)
!8553 = !DILocation(line: 276, column: 1, scope: !8536)
!8554 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1021, file: !1021, line: 698, type: !1034, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !851, retainedNodes: !8555)
!8555 = !{!8556, !8557, !8558}
!8556 = !DILocalVariable(name: "dev", arg: 1, scope: !8554, file: !1021, line: 698, type: !880)
!8557 = !DILocalVariable(name: "data", scope: !8554, file: !1021, line: 700, type: !7998)
!8558 = !DILocalVariable(name: "ret", scope: !8554, file: !1021, line: 701, type: !103)
!8559 = !DILocation(line: 0, scope: !8554)
!8560 = !DILocation(line: 700, column: 38, scope: !8554)
!8561 = !DILocation(line: 703, column: 8, scope: !8554)
!8562 = !DILocation(line: 703, column: 12, scope: !8554)
!8563 = !DILocation(line: 705, column: 7, scope: !8564)
!8564 = distinct !DILexicalBlock(scope: !8554, file: !1021, line: 705, column: 6)
!8565 = !DILocation(line: 705, column: 6, scope: !8554)
!8566 = !DILocation(line: 722, column: 8, scope: !8554)
!8567 = !DILocation(line: 723, column: 10, scope: !8568)
!8568 = distinct !DILexicalBlock(scope: !8554, file: !1021, line: 723, column: 6)
!8569 = !DILocation(line: 723, column: 6, scope: !8554)
!8570 = !DILocation(line: 731, column: 1, scope: !8554)
!8571 = distinct !DISubprogram(name: "device_is_ready", scope: !3080, file: !3080, line: 47, type: !8572, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !851, retainedNodes: !8574)
!8572 = !DISubroutineType(types: !8573)
!8573 = !{!157, !880}
!8574 = !{!8575}
!8575 = !DILocalVariable(name: "dev", arg: 1, scope: !8571, file: !3080, line: 47, type: !880)
!8576 = !DILocation(line: 0, scope: !8571)
!8577 = !DILocation(line: 55, column: 2, scope: !8578)
!8578 = distinct !DILexicalBlock(scope: !8571, file: !3080, line: 55, column: 2)
!8579 = !{i64 2155034781}
!8580 = !DILocation(line: 56, column: 9, scope: !8571)
!8581 = !DILocation(line: 56, column: 2, scope: !8571)
!8582 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1021, file: !1021, line: 270, type: !8583, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !851, retainedNodes: !8585)
!8583 = !DISubroutineType(types: !8584)
!8584 = !{!103, !880, !157}
!8585 = !{!8586, !8587, !8588, !8589, !8590}
!8586 = !DILocalVariable(name: "dev", arg: 1, scope: !8582, file: !1021, line: 270, type: !880)
!8587 = !DILocalVariable(name: "on", arg: 2, scope: !8582, file: !1021, line: 270, type: !157)
!8588 = !DILocalVariable(name: "cfg", scope: !8582, file: !1021, line: 272, type: !7931)
!8589 = !DILocalVariable(name: "ret", scope: !8582, file: !1021, line: 273, type: !103)
!8590 = !DILocalVariable(name: "clk", scope: !8582, file: !1021, line: 278, type: !8221)
!8591 = !DILocation(line: 0, scope: !8582)
!8592 = !DILocation(line: 272, column: 45, scope: !8582)
!8593 = !DILocation(line: 282, column: 38, scope: !8594)
!8594 = distinct !DILexicalBlock(scope: !8595, file: !1021, line: 280, column: 10)
!8595 = distinct !DILexicalBlock(scope: !8582, file: !1021, line: 280, column: 6)
!8596 = !DILocation(line: 282, column: 6, scope: !8594)
!8597 = !DILocation(line: 281, column: 9, scope: !8594)
!8598 = !DILocation(line: 293, column: 1, scope: !8582)
!8599 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !8572, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !851, retainedNodes: !8600)
!8600 = !{!8601}
!8601 = !DILocalVariable(name: "dev", arg: 1, scope: !8599, file: !141, line: 730, type: !880)
!8602 = !DILocation(line: 0, scope: !8599)
!8603 = !DILocation(line: 732, column: 9, scope: !8599)
!8604 = !DILocation(line: 732, column: 2, scope: !8599)
!8605 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1021, file: !1021, line: 496, type: !8606, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !851, retainedNodes: !8608)
!8606 = !DISubroutineType(types: !8607)
!8607 = !{!103, !880, !103, !103, !103}
!8608 = !{!8609, !8610, !8611, !8612, !8613, !8614}
!8609 = !DILocalVariable(name: "dev", arg: 1, scope: !8605, file: !1021, line: 496, type: !880)
!8610 = !DILocalVariable(name: "pin", arg: 2, scope: !8605, file: !1021, line: 496, type: !103)
!8611 = !DILocalVariable(name: "conf", arg: 3, scope: !8605, file: !1021, line: 496, type: !103)
!8612 = !DILocalVariable(name: "func", arg: 4, scope: !8605, file: !1021, line: 496, type: !103)
!8613 = !DILocalVariable(name: "ret", scope: !8605, file: !1021, line: 498, type: !103)
!8614 = !DILocalVariable(name: "gpio_out", scope: !8615, file: !1021, line: 508, type: !121)
!8615 = distinct !DILexicalBlock(scope: !8616, file: !1021, line: 507, column: 27)
!8616 = distinct !DILexicalBlock(scope: !8605, file: !1021, line: 507, column: 6)
!8617 = !DILocation(line: 0, scope: !8605)
!8618 = !DILocation(line: 505, column: 2, scope: !8605)
!8619 = !DILocation(line: 507, column: 11, scope: !8616)
!8620 = !DILocation(line: 507, column: 6, scope: !8605)
!8621 = !DILocation(line: 508, column: 28, scope: !8615)
!8622 = !DILocation(line: 0, scope: !8615)
!8623 = !DILocation(line: 510, column: 16, scope: !8624)
!8624 = distinct !DILexicalBlock(scope: !8615, file: !1021, line: 510, column: 7)
!8625 = !DILocation(line: 0, scope: !8624)
!8626 = !DILocation(line: 510, column: 7, scope: !8615)
!8627 = !DILocation(line: 511, column: 4, scope: !8628)
!8628 = distinct !DILexicalBlock(scope: !8624, file: !1021, line: 510, column: 32)
!8629 = !DILocation(line: 512, column: 3, scope: !8628)
!8630 = !DILocation(line: 513, column: 4, scope: !8631)
!8631 = distinct !DILexicalBlock(scope: !8632, file: !1021, line: 512, column: 39)
!8632 = distinct !DILexicalBlock(scope: !8624, file: !1021, line: 512, column: 14)
!8633 = !DILocation(line: 514, column: 3, scope: !8631)
!8634 = !DILocation(line: 518, column: 1, scope: !8605)
!8635 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1308, file: !1308, line: 526, type: !1209, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !8636)
!8636 = !{!8637, !8638, !8639}
!8637 = !DILocalVariable(name: "dev", arg: 1, scope: !8635, file: !1308, line: 526, type: !1211)
!8638 = !DILocalVariable(name: "c", arg: 2, scope: !8635, file: !1308, line: 526, type: !812)
!8639 = !DILocalVariable(name: "config", scope: !8635, file: !1308, line: 528, type: !8640)
!8640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1369, size: 32)
!8641 = !DILocation(line: 0, scope: !8635)
!8642 = !DILocation(line: 528, column: 48, scope: !8635)
!8643 = !DILocation(line: 531, column: 40, scope: !8644)
!8644 = distinct !DILexicalBlock(scope: !8635, file: !1308, line: 531, column: 6)
!8645 = !DILocation(line: 531, column: 6, scope: !8644)
!8646 = !DILocation(line: 531, column: 6, scope: !8635)
!8647 = !DILocation(line: 532, column: 34, scope: !8648)
!8648 = distinct !DILexicalBlock(scope: !8644, file: !1308, line: 531, column: 48)
!8649 = !DILocation(line: 532, column: 3, scope: !8648)
!8650 = !DILocation(line: 533, column: 2, scope: !8648)
!8651 = !DILocation(line: 539, column: 42, scope: !8652)
!8652 = distinct !DILexicalBlock(scope: !8635, file: !1308, line: 539, column: 6)
!8653 = !DILocation(line: 539, column: 7, scope: !8652)
!8654 = !DILocation(line: 539, column: 6, scope: !8635)
!8655 = !DILocation(line: 543, column: 52, scope: !8635)
!8656 = !DILocation(line: 543, column: 22, scope: !8635)
!8657 = !DILocation(line: 543, column: 5, scope: !8635)
!8658 = !DILocation(line: 545, column: 2, scope: !8635)
!8659 = !DILocation(line: 546, column: 1, scope: !8635)
!8660 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1308, file: !1308, line: 548, type: !1228, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !8661)
!8661 = !{!8662, !8663, !8664, !8665}
!8662 = !DILocalVariable(name: "dev", arg: 1, scope: !8660, file: !1308, line: 548, type: !1211)
!8663 = !DILocalVariable(name: "c", arg: 2, scope: !8660, file: !1308, line: 549, type: !155)
!8664 = !DILocalVariable(name: "config", scope: !8660, file: !1308, line: 551, type: !8640)
!8665 = !DILocalVariable(name: "key", scope: !8660, file: !1308, line: 555, type: !32)
!8666 = !DILocation(line: 0, scope: !8660)
!8667 = !DILocation(line: 551, column: 48, scope: !8660)
!8668 = !DILocation(line: 562, column: 2, scope: !8660)
!8669 = !DILocation(line: 563, column: 41, scope: !8670)
!8670 = distinct !DILexicalBlock(scope: !8671, file: !1308, line: 563, column: 7)
!8671 = distinct !DILexicalBlock(scope: !8660, file: !1308, line: 562, column: 12)
!8672 = !DILocation(line: 563, column: 7, scope: !8670)
!8673 = !DILocation(line: 563, column: 7, scope: !8671)
!8674 = !DILocation(line: 55, column: 2, scope: !8675, inlinedAt: !8679)
!8675 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5324, file: !5324, line: 42, type: !5325, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !8676)
!8676 = !{!8677, !8678}
!8677 = !DILocalVariable(name: "key", scope: !8675, file: !5324, line: 44, type: !32)
!8678 = !DILocalVariable(name: "tmp", scope: !8675, file: !5324, line: 53, type: !32)
!8679 = distinct !DILocation(line: 564, column: 10, scope: !8680)
!8680 = distinct !DILexicalBlock(scope: !8670, file: !1308, line: 563, column: 49)
!8681 = !{i64 2271478}
!8682 = !DILocation(line: 0, scope: !8675, inlinedAt: !8679)
!8683 = !DILocation(line: 565, column: 42, scope: !8684)
!8684 = distinct !DILexicalBlock(scope: !8680, file: !1308, line: 565, column: 8)
!8685 = !DILocation(line: 565, column: 8, scope: !8684)
!8686 = !DILocation(line: 565, column: 8, scope: !8680)
!8687 = !DILocalVariable(name: "key", arg: 1, scope: !8688, file: !5324, line: 84, type: !32)
!8688 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5324, file: !5324, line: 84, type: !5335, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !8689)
!8689 = !{!8687}
!8690 = !DILocation(line: 0, scope: !8688, inlinedAt: !8691)
!8691 = distinct !DILocation(line: 568, column: 4, scope: !8680)
!8692 = !DILocation(line: 95, column: 2, scope: !8688, inlinedAt: !8691)
!8693 = !{i64 2272295}
!8694 = !DILocation(line: 569, column: 3, scope: !8680)
!8695 = distinct !{!8695, !8668, !8696}
!8696 = !DILocation(line: 570, column: 2, scope: !8660)
!8697 = !DILocation(line: 592, column: 33, scope: !8660)
!8698 = !DILocation(line: 592, column: 2, scope: !8660)
!8699 = !DILocation(line: 0, scope: !8688, inlinedAt: !8700)
!8700 = distinct !DILocation(line: 593, column: 2, scope: !8660)
!8701 = !DILocation(line: 95, column: 2, scope: !8688, inlinedAt: !8700)
!8702 = !DILocation(line: 594, column: 1, scope: !8660)
!8703 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1308, file: !1308, line: 596, type: !1232, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !8704)
!8704 = !{!8705, !8706, !8707}
!8705 = !DILocalVariable(name: "dev", arg: 1, scope: !8703, file: !1308, line: 596, type: !1211)
!8706 = !DILocalVariable(name: "config", scope: !8703, file: !1308, line: 598, type: !8640)
!8707 = !DILocalVariable(name: "err", scope: !8703, file: !1308, line: 599, type: !121)
!8708 = !DILocation(line: 0, scope: !8703)
!8709 = !DILocation(line: 598, column: 48, scope: !8703)
!8710 = !DILocation(line: 606, column: 40, scope: !8711)
!8711 = distinct !DILexicalBlock(scope: !8703, file: !1308, line: 606, column: 6)
!8712 = !DILocation(line: 606, column: 6, scope: !8711)
!8713 = !DILocation(line: 606, column: 6, scope: !8703)
!8714 = !DILocation(line: 610, column: 39, scope: !8715)
!8715 = distinct !DILexicalBlock(scope: !8703, file: !1308, line: 610, column: 6)
!8716 = !DILocation(line: 610, column: 6, scope: !8715)
!8717 = !DILocation(line: 610, column: 6, scope: !8703)
!8718 = !DILocation(line: 614, column: 39, scope: !8719)
!8719 = distinct !DILexicalBlock(scope: !8703, file: !1308, line: 614, column: 6)
!8720 = !DILocation(line: 614, column: 6, scope: !8719)
!8721 = !DILocation(line: 614, column: 6, scope: !8703)
!8722 = !DILocation(line: 619, column: 40, scope: !8723)
!8723 = distinct !DILexicalBlock(scope: !8703, file: !1308, line: 619, column: 6)
!8724 = !DILocation(line: 619, column: 6, scope: !8723)
!8725 = !DILocation(line: 619, column: 6, scope: !8703)
!8726 = !DILocation(line: 623, column: 10, scope: !8727)
!8727 = distinct !DILexicalBlock(scope: !8703, file: !1308, line: 623, column: 6)
!8728 = !DILocation(line: 623, column: 6, scope: !8703)
!8729 = !DILocation(line: 624, column: 34, scope: !8730)
!8730 = distinct !DILexicalBlock(scope: !8727, file: !1308, line: 623, column: 24)
!8731 = !DILocation(line: 624, column: 3, scope: !8730)
!8732 = !DILocation(line: 625, column: 2, scope: !8730)
!8733 = !DILocation(line: 632, column: 10, scope: !8734)
!8734 = distinct !DILexicalBlock(scope: !8703, file: !1308, line: 632, column: 6)
!8735 = !DILocation(line: 632, column: 6, scope: !8703)
!8736 = !DILocation(line: 633, column: 34, scope: !8737)
!8737 = distinct !DILexicalBlock(scope: !8734, file: !1308, line: 632, column: 32)
!8738 = !DILocation(line: 633, column: 3, scope: !8737)
!8739 = !DILocation(line: 634, column: 2, scope: !8737)
!8740 = !DILocation(line: 636, column: 10, scope: !8741)
!8741 = distinct !DILexicalBlock(scope: !8703, file: !1308, line: 636, column: 6)
!8742 = !DILocation(line: 636, column: 6, scope: !8703)
!8743 = !DILocation(line: 637, column: 33, scope: !8744)
!8744 = distinct !DILexicalBlock(scope: !8741, file: !1308, line: 636, column: 31)
!8745 = !DILocation(line: 637, column: 3, scope: !8744)
!8746 = !DILocation(line: 638, column: 2, scope: !8744)
!8747 = !DILocation(line: 640, column: 10, scope: !8748)
!8748 = distinct !DILexicalBlock(scope: !8703, file: !1308, line: 640, column: 6)
!8749 = !DILocation(line: 640, column: 6, scope: !8703)
!8750 = !DILocation(line: 641, column: 33, scope: !8751)
!8751 = distinct !DILexicalBlock(scope: !8748, file: !1308, line: 640, column: 32)
!8752 = !DILocation(line: 641, column: 3, scope: !8751)
!8753 = !DILocation(line: 642, column: 2, scope: !8751)
!8754 = !DILocation(line: 646, column: 32, scope: !8703)
!8755 = !DILocation(line: 646, column: 2, scope: !8703)
!8756 = !DILocation(line: 648, column: 2, scope: !8703)
!8757 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1308, file: !1308, line: 419, type: !1236, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !8758)
!8758 = !{!8759, !8760, !8761, !8762, !8764, !8765, !8766, !8767}
!8759 = !DILocalVariable(name: "dev", arg: 1, scope: !8757, file: !1308, line: 419, type: !1211)
!8760 = !DILocalVariable(name: "cfg", arg: 2, scope: !8757, file: !1308, line: 420, type: !1238)
!8761 = !DILocalVariable(name: "config", scope: !8757, file: !1308, line: 422, type: !8640)
!8762 = !DILocalVariable(name: "data", scope: !8757, file: !1308, line: 423, type: !8763)
!8763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1364, size: 32)
!8764 = !DILocalVariable(name: "parity", scope: !8757, file: !1308, line: 424, type: !5766)
!8765 = !DILocalVariable(name: "stopbits", scope: !8757, file: !1308, line: 425, type: !5766)
!8766 = !DILocalVariable(name: "databits", scope: !8757, file: !1308, line: 426, type: !5766)
!8767 = !DILocalVariable(name: "flowctrl", scope: !8757, file: !1308, line: 428, type: !5766)
!8768 = !DILocation(line: 0, scope: !8757)
!8769 = !DILocation(line: 422, column: 48, scope: !8757)
!8770 = !DILocation(line: 423, column: 38, scope: !8757)
!8771 = !DILocation(line: 424, column: 56, scope: !8757)
!8772 = !DILocation(line: 424, column: 51, scope: !8757)
!8773 = !DILocation(line: 424, column: 26, scope: !8757)
!8774 = !DILocation(line: 425, column: 60, scope: !8757)
!8775 = !DILocation(line: 425, column: 55, scope: !8757)
!8776 = !DILocation(line: 425, column: 28, scope: !8757)
!8777 = !DILocation(line: 426, column: 60, scope: !8757)
!8778 = !DILocation(line: 426, column: 55, scope: !8757)
!8779 = !DILocation(line: 426, column: 28, scope: !8757)
!8780 = !DILocation(line: 428, column: 58, scope: !8757)
!8781 = !DILocation(line: 428, column: 53, scope: !8757)
!8782 = !DILocation(line: 428, column: 28, scope: !8757)
!8783 = !DILocation(line: 431, column: 44, scope: !8784)
!8784 = distinct !DILexicalBlock(scope: !8757, file: !1308, line: 431, column: 6)
!8785 = !DILocation(line: 438, column: 22, scope: !8786)
!8786 = distinct !DILexicalBlock(scope: !8757, file: !1308, line: 437, column: 6)
!8787 = !DILocation(line: 437, column: 6, scope: !8757)
!8788 = !DILocation(line: 448, column: 6, scope: !8757)
!8789 = !DILocation(line: 465, column: 47, scope: !8790)
!8790 = distinct !DILexicalBlock(scope: !8757, file: !1308, line: 465, column: 6)
!8791 = !DILocation(line: 475, column: 21, scope: !8792)
!8792 = distinct !DILexicalBlock(scope: !8757, file: !1308, line: 475, column: 6)
!8793 = !DILocation(line: 475, column: 6, scope: !8757)
!8794 = !DILocation(line: 476, column: 8, scope: !8795)
!8795 = distinct !DILexicalBlock(scope: !8796, file: !1308, line: 476, column: 7)
!8796 = distinct !DILexicalBlock(scope: !8792, file: !1308, line: 475, column: 49)
!8797 = !DILocation(line: 477, column: 34, scope: !8795)
!8798 = !DILocation(line: 476, column: 7, scope: !8796)
!8799 = !DILocation(line: 482, column: 27, scope: !8757)
!8800 = !DILocation(line: 482, column: 2, scope: !8757)
!8801 = !DILocation(line: 484, column: 16, scope: !8802)
!8802 = distinct !DILexicalBlock(scope: !8757, file: !1308, line: 484, column: 6)
!8803 = !DILocation(line: 484, column: 13, scope: !8802)
!8804 = !DILocation(line: 484, column: 6, scope: !8757)
!8805 = !DILocation(line: 485, column: 3, scope: !8806)
!8806 = distinct !DILexicalBlock(scope: !8802, file: !1308, line: 484, column: 44)
!8807 = !DILocation(line: 486, column: 2, scope: !8806)
!8808 = !DILocation(line: 488, column: 18, scope: !8809)
!8809 = distinct !DILexicalBlock(scope: !8757, file: !1308, line: 488, column: 6)
!8810 = !DILocation(line: 488, column: 15, scope: !8809)
!8811 = !DILocation(line: 488, column: 6, scope: !8757)
!8812 = !DILocation(line: 489, column: 3, scope: !8813)
!8813 = distinct !DILexicalBlock(scope: !8809, file: !1308, line: 488, column: 48)
!8814 = !DILocation(line: 490, column: 2, scope: !8813)
!8815 = !DILocation(line: 492, column: 18, scope: !8816)
!8816 = distinct !DILexicalBlock(scope: !8757, file: !1308, line: 492, column: 6)
!8817 = !DILocation(line: 492, column: 15, scope: !8816)
!8818 = !DILocation(line: 492, column: 6, scope: !8757)
!8819 = !DILocation(line: 493, column: 3, scope: !8820)
!8820 = distinct !DILexicalBlock(scope: !8816, file: !1308, line: 492, column: 48)
!8821 = !DILocation(line: 494, column: 2, scope: !8820)
!8822 = !DILocation(line: 496, column: 18, scope: !8823)
!8823 = distinct !DILexicalBlock(scope: !8757, file: !1308, line: 496, column: 6)
!8824 = !DILocation(line: 496, column: 15, scope: !8823)
!8825 = !DILocation(line: 496, column: 6, scope: !8757)
!8826 = !DILocation(line: 497, column: 3, scope: !8827)
!8827 = distinct !DILexicalBlock(scope: !8823, file: !1308, line: 496, column: 46)
!8828 = !DILocation(line: 498, column: 2, scope: !8827)
!8829 = !DILocation(line: 500, column: 11, scope: !8830)
!8830 = distinct !DILexicalBlock(scope: !8757, file: !1308, line: 500, column: 6)
!8831 = !DILocation(line: 500, column: 29, scope: !8830)
!8832 = !DILocation(line: 500, column: 20, scope: !8830)
!8833 = !DILocation(line: 500, column: 6, scope: !8757)
!8834 = !DILocation(line: 501, column: 3, scope: !8835)
!8835 = distinct !DILexicalBlock(scope: !8830, file: !1308, line: 500, column: 40)
!8836 = !DILocation(line: 502, column: 26, scope: !8835)
!8837 = !DILocation(line: 502, column: 19, scope: !8835)
!8838 = !DILocation(line: 503, column: 2, scope: !8835)
!8839 = !DILocation(line: 505, column: 26, scope: !8757)
!8840 = !DILocation(line: 505, column: 2, scope: !8757)
!8841 = !DILocation(line: 506, column: 2, scope: !8757)
!8842 = !DILocation(line: 507, column: 1, scope: !8757)
!8843 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1308, file: !1308, line: 509, type: !1249, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !8844)
!8844 = !{!8845, !8846, !8847}
!8845 = !DILocalVariable(name: "dev", arg: 1, scope: !8843, file: !1308, line: 509, type: !1211)
!8846 = !DILocalVariable(name: "cfg", arg: 2, scope: !8843, file: !1308, line: 510, type: !1251)
!8847 = !DILocalVariable(name: "data", scope: !8843, file: !1308, line: 512, type: !8763)
!8848 = !DILocation(line: 0, scope: !8843)
!8849 = !DILocation(line: 512, column: 38, scope: !8843)
!8850 = !DILocation(line: 514, column: 24, scope: !8843)
!8851 = !DILocation(line: 514, column: 7, scope: !8843)
!8852 = !DILocation(line: 514, column: 16, scope: !8843)
!8853 = !DILocation(line: 515, column: 41, scope: !8843)
!8854 = !{i32 0, i32 1537}
!8855 = !DILocation(line: 515, column: 16, scope: !8843)
!8856 = !DILocation(line: 515, column: 7, scope: !8843)
!8857 = !DILocation(line: 515, column: 14, scope: !8843)
!8858 = !DILocation(line: 517, column: 3, scope: !8843)
!8859 = !{i32 0, i32 12289}
!8860 = !DILocation(line: 516, column: 19, scope: !8843)
!8861 = !DILocation(line: 516, column: 7, scope: !8843)
!8862 = !DILocation(line: 516, column: 17, scope: !8843)
!8863 = !DILocation(line: 519, column: 3, scope: !8843)
!8864 = !DILocation(line: 519, column: 33, scope: !8843)
!8865 = !DILocation(line: 518, column: 19, scope: !8843)
!8866 = !DILocation(line: 518, column: 7, scope: !8843)
!8867 = !DILocation(line: 518, column: 17, scope: !8843)
!8868 = !DILocation(line: 521, column: 3, scope: !8843)
!8869 = !{i32 0, i32 769}
!8870 = !DILocation(line: 520, column: 19, scope: !8843)
!8871 = !DILocation(line: 520, column: 7, scope: !8843)
!8872 = !DILocation(line: 520, column: 17, scope: !8843)
!8873 = !DILocation(line: 522, column: 2, scope: !8843)
!8874 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1308, file: !1308, line: 205, type: !8875, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !8877)
!8875 = !DISubroutineType(types: !8876)
!8876 = !{!121, !1211}
!8877 = !{!8878, !8879}
!8878 = !DILocalVariable(name: "dev", arg: 1, scope: !8874, file: !1308, line: 205, type: !1211)
!8879 = !DILocalVariable(name: "config", scope: !8874, file: !1308, line: 207, type: !8640)
!8880 = !DILocation(line: 0, scope: !8874)
!8881 = !DILocation(line: 207, column: 48, scope: !8874)
!8882 = !DILocation(line: 209, column: 36, scope: !8874)
!8883 = !DILocation(line: 209, column: 9, scope: !8874)
!8884 = !DILocation(line: 209, column: 2, scope: !8874)
!8885 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1308, file: !1308, line: 270, type: !8886, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !8888)
!8886 = !DISubroutineType(types: !8887)
!8887 = !{!1177, !121}
!8888 = !{!8889}
!8889 = !DILocalVariable(name: "parity", arg: 1, scope: !8885, file: !1308, line: 270, type: !121)
!8890 = !DILocation(line: 0, scope: !8885)
!8891 = !DILocation(line: 272, column: 2, scope: !8885)
!8892 = !DILocation(line: 281, column: 1, scope: !8885)
!8893 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1308, file: !1308, line: 220, type: !8875, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !8894)
!8894 = !{!8895, !8896}
!8895 = !DILocalVariable(name: "dev", arg: 1, scope: !8893, file: !1308, line: 220, type: !1211)
!8896 = !DILocalVariable(name: "config", scope: !8893, file: !1308, line: 222, type: !8640)
!8897 = !DILocation(line: 0, scope: !8893)
!8898 = !DILocation(line: 222, column: 48, scope: !8893)
!8899 = !DILocation(line: 224, column: 44, scope: !8893)
!8900 = !DILocation(line: 224, column: 9, scope: !8893)
!8901 = !DILocation(line: 224, column: 2, scope: !8893)
!8902 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1308, file: !1308, line: 304, type: !8903, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !8905)
!8903 = !DISubroutineType(types: !8904)
!8904 = !{!1191, !121}
!8905 = !{!8906}
!8906 = !DILocalVariable(name: "sb", arg: 1, scope: !8902, file: !1308, line: 304, type: !121)
!8907 = !DILocation(line: 0, scope: !8902)
!8908 = !DILocation(line: 306, column: 2, scope: !8902)
!8909 = !DILocation(line: 0, scope: !8910)
!8910 = distinct !DILexicalBlock(scope: !8902, file: !1308, line: 306, column: 14)
!8911 = !DILocation(line: 323, column: 1, scope: !8902)
!8912 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1308, file: !1308, line: 235, type: !8875, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !8913)
!8913 = !{!8914, !8915}
!8914 = !DILocalVariable(name: "dev", arg: 1, scope: !8912, file: !1308, line: 235, type: !1211)
!8915 = !DILocalVariable(name: "config", scope: !8912, file: !1308, line: 237, type: !8640)
!8916 = !DILocation(line: 0, scope: !8912)
!8917 = !DILocation(line: 237, column: 48, scope: !8912)
!8918 = !DILocation(line: 239, column: 39, scope: !8912)
!8919 = !DILocation(line: 239, column: 9, scope: !8912)
!8920 = !DILocation(line: 239, column: 2, scope: !8912)
!8921 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1308, file: !1308, line: 355, type: !8922, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !8924)
!8922 = !DISubroutineType(types: !8923)
!8923 = !{!1184, !121, !121}
!8924 = !{!8925, !8926}
!8925 = !DILocalVariable(name: "db", arg: 1, scope: !8921, file: !1308, line: 355, type: !121)
!8926 = !DILocalVariable(name: "p", arg: 2, scope: !8921, file: !1308, line: 356, type: !121)
!8927 = !DILocation(line: 0, scope: !8921)
!8928 = !DILocation(line: 358, column: 2, scope: !8921)
!8929 = !DILocation(line: 384, column: 1, scope: !8921)
!8930 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1308, file: !1308, line: 250, type: !8875, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !8931)
!8931 = !{!8932, !8933}
!8932 = !DILocalVariable(name: "dev", arg: 1, scope: !8930, file: !1308, line: 250, type: !1211)
!8933 = !DILocalVariable(name: "config", scope: !8930, file: !1308, line: 252, type: !8640)
!8934 = !DILocation(line: 0, scope: !8930)
!8935 = !DILocation(line: 252, column: 48, scope: !8930)
!8936 = !DILocation(line: 254, column: 40, scope: !8930)
!8937 = !DILocation(line: 254, column: 9, scope: !8930)
!8938 = !DILocation(line: 254, column: 2, scope: !8930)
!8939 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1308, file: !1308, line: 409, type: !8940, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !8942)
!8940 = !DISubroutineType(types: !8941)
!8941 = !{!1197, !121}
!8942 = !{!8943}
!8943 = !DILocalVariable(name: "fc", arg: 1, scope: !8939, file: !1308, line: 409, type: !121)
!8944 = !DILocation(line: 0, scope: !8939)
!8945 = !DILocation(line: 411, column: 9, scope: !8946)
!8946 = distinct !DILexicalBlock(scope: !8939, file: !1308, line: 411, column: 6)
!8947 = !DILocation(line: 416, column: 1, scope: !8939)
!8948 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !8949, file: !8949, line: 967, type: !8950, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !8952)
!8949 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8950 = !DISubroutineType(types: !8951)
!8951 = !{!121, !1252}
!8952 = !{!8953}
!8953 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8948, file: !8949, line: 967, type: !1252)
!8954 = !DILocation(line: 0, scope: !8948)
!8955 = !DILocation(line: 969, column: 21, scope: !8948)
!8956 = !DILocation(line: 969, column: 3, scope: !8948)
!8957 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !8949, file: !8949, line: 601, type: !8950, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !8958)
!8958 = !{!8959}
!8959 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8957, file: !8949, line: 601, type: !1252)
!8960 = !DILocation(line: 0, scope: !8957)
!8961 = !DILocation(line: 603, column: 21, scope: !8957)
!8962 = !DILocation(line: 603, column: 3, scope: !8957)
!8963 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !8949, file: !8949, line: 820, type: !8950, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !8964)
!8964 = !{!8965}
!8965 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8963, file: !8949, line: 820, type: !1252)
!8966 = !DILocation(line: 0, scope: !8963)
!8967 = !DILocation(line: 822, column: 21, scope: !8963)
!8968 = !DILocation(line: 822, column: 3, scope: !8963)
!8969 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !8949, file: !8949, line: 547, type: !8950, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !8970)
!8970 = !{!8971}
!8971 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8969, file: !8949, line: 547, type: !1252)
!8972 = !DILocation(line: 0, scope: !8969)
!8973 = !DILocation(line: 549, column: 21, scope: !8969)
!8974 = !DILocation(line: 549, column: 3, scope: !8969)
!8975 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1308, file: !1308, line: 257, type: !8976, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !8978)
!8976 = !DISubroutineType(types: !8977)
!8977 = !{!121, !1177}
!8978 = !{!8979}
!8979 = !DILocalVariable(name: "parity", arg: 1, scope: !8975, file: !1308, line: 257, type: !1177)
!8980 = !DILocation(line: 0, scope: !8975)
!8981 = !DILocation(line: 259, column: 2, scope: !8975)
!8982 = !DILocation(line: 268, column: 1, scope: !8975)
!8983 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1308, file: !1308, line: 283, type: !8984, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !8986)
!8984 = !DISubroutineType(types: !8985)
!8985 = !{!121, !1191}
!8986 = !{!8987}
!8987 = !DILocalVariable(name: "sb", arg: 1, scope: !8983, file: !1308, line: 283, type: !1191)
!8988 = !DILocation(line: 0, scope: !8983)
!8989 = !DILocation(line: 285, column: 2, scope: !8983)
!8990 = !DILocation(line: 0, scope: !8991)
!8991 = distinct !DILexicalBlock(scope: !8983, file: !1308, line: 285, column: 14)
!8992 = !DILocation(line: 302, column: 1, scope: !8983)
!8993 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1308, file: !1308, line: 325, type: !8994, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !8996)
!8994 = !DISubroutineType(types: !8995)
!8995 = !{!121, !1184, !1177}
!8996 = !{!8997, !8998}
!8997 = !DILocalVariable(name: "db", arg: 1, scope: !8993, file: !1308, line: 325, type: !1184)
!8998 = !DILocalVariable(name: "p", arg: 2, scope: !8993, file: !1308, line: 326, type: !1177)
!8999 = !DILocation(line: 0, scope: !8993)
!9000 = !DILocation(line: 328, column: 2, scope: !8993)
!9001 = !DILocation(line: 353, column: 1, scope: !8993)
!9002 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1308, file: !1308, line: 393, type: !9003, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !9005)
!9003 = !DISubroutineType(types: !9004)
!9004 = !{!121, !1197}
!9005 = !{!9006}
!9006 = !DILocalVariable(name: "fc", arg: 1, scope: !9002, file: !1308, line: 393, type: !1197)
!9007 = !DILocation(line: 0, scope: !9002)
!9008 = !DILocation(line: 395, column: 9, scope: !9009)
!9009 = distinct !DILexicalBlock(scope: !9002, file: !1308, line: 395, column: 6)
!9010 = !DILocation(line: 400, column: 1, scope: !9002)
!9011 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !8949, file: !8949, line: 424, type: !9012, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !9014)
!9012 = !DISubroutineType(types: !9013)
!9013 = !{null, !1252}
!9014 = !{!9015}
!9015 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9011, file: !8949, line: 424, type: !1252)
!9016 = !DILocation(line: 0, scope: !9011)
!9017 = !DILocation(line: 426, column: 3, scope: !9011)
!9018 = !DILocation(line: 427, column: 1, scope: !9011)
!9019 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1308, file: !1308, line: 197, type: !9020, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !9022)
!9020 = !DISubroutineType(types: !9021)
!9021 = !{null, !1211, !121}
!9022 = !{!9023, !9024, !9025}
!9023 = !DILocalVariable(name: "dev", arg: 1, scope: !9019, file: !1308, line: 197, type: !1211)
!9024 = !DILocalVariable(name: "parity", arg: 2, scope: !9019, file: !1308, line: 198, type: !121)
!9025 = !DILocalVariable(name: "config", scope: !9019, file: !1308, line: 200, type: !8640)
!9026 = !DILocation(line: 0, scope: !9019)
!9027 = !DILocation(line: 200, column: 48, scope: !9019)
!9028 = !DILocation(line: 202, column: 29, scope: !9019)
!9029 = !DILocation(line: 202, column: 2, scope: !9019)
!9030 = !DILocation(line: 203, column: 1, scope: !9019)
!9031 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1308, file: !1308, line: 212, type: !9020, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !9032)
!9032 = !{!9033, !9034, !9035}
!9033 = !DILocalVariable(name: "dev", arg: 1, scope: !9031, file: !1308, line: 212, type: !1211)
!9034 = !DILocalVariable(name: "stopbits", arg: 2, scope: !9031, file: !1308, line: 213, type: !121)
!9035 = !DILocalVariable(name: "config", scope: !9031, file: !1308, line: 215, type: !8640)
!9036 = !DILocation(line: 0, scope: !9031)
!9037 = !DILocation(line: 215, column: 48, scope: !9031)
!9038 = !DILocation(line: 217, column: 37, scope: !9031)
!9039 = !DILocation(line: 217, column: 2, scope: !9031)
!9040 = !DILocation(line: 218, column: 1, scope: !9031)
!9041 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1308, file: !1308, line: 227, type: !9020, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !9042)
!9042 = !{!9043, !9044, !9045}
!9043 = !DILocalVariable(name: "dev", arg: 1, scope: !9041, file: !1308, line: 227, type: !1211)
!9044 = !DILocalVariable(name: "databits", arg: 2, scope: !9041, file: !1308, line: 228, type: !121)
!9045 = !DILocalVariable(name: "config", scope: !9041, file: !1308, line: 230, type: !8640)
!9046 = !DILocation(line: 0, scope: !9041)
!9047 = !DILocation(line: 230, column: 48, scope: !9041)
!9048 = !DILocation(line: 232, column: 32, scope: !9041)
!9049 = !DILocation(line: 232, column: 2, scope: !9041)
!9050 = !DILocation(line: 233, column: 1, scope: !9041)
!9051 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1308, file: !1308, line: 242, type: !9020, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !9052)
!9052 = !{!9053, !9054, !9055}
!9053 = !DILocalVariable(name: "dev", arg: 1, scope: !9051, file: !1308, line: 242, type: !1211)
!9054 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !9051, file: !1308, line: 243, type: !121)
!9055 = !DILocalVariable(name: "config", scope: !9051, file: !1308, line: 245, type: !8640)
!9056 = !DILocation(line: 0, scope: !9051)
!9057 = !DILocation(line: 245, column: 48, scope: !9051)
!9058 = !DILocation(line: 247, column: 33, scope: !9051)
!9059 = !DILocation(line: 247, column: 2, scope: !9051)
!9060 = !DILocation(line: 248, column: 1, scope: !9051)
!9061 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1308, file: !1308, line: 107, type: !9020, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !9062)
!9062 = !{!9063, !9064, !9065, !9066, !9067}
!9063 = !DILocalVariable(name: "dev", arg: 1, scope: !9061, file: !1308, line: 107, type: !1211)
!9064 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !9061, file: !1308, line: 107, type: !121)
!9065 = !DILocalVariable(name: "config", scope: !9061, file: !1308, line: 109, type: !8640)
!9066 = !DILocalVariable(name: "data", scope: !9061, file: !1308, line: 110, type: !8763)
!9067 = !DILocalVariable(name: "clock_rate", scope: !9061, file: !1308, line: 112, type: !121)
!9068 = !DILocation(line: 0, scope: !9061)
!9069 = !DILocation(line: 109, column: 48, scope: !9061)
!9070 = !DILocation(line: 110, column: 38, scope: !9061)
!9071 = !DILocation(line: 112, column: 2, scope: !9061)
!9072 = !DILocation(line: 123, column: 36, scope: !9073)
!9073 = distinct !DILexicalBlock(scope: !9074, file: !1308, line: 123, column: 7)
!9074 = distinct !DILexicalBlock(scope: !9075, file: !1308, line: 122, column: 9)
!9075 = distinct !DILexicalBlock(scope: !9061, file: !1308, line: 115, column: 6)
!9076 = !DILocation(line: 124, column: 42, scope: !9073)
!9077 = !DILocation(line: 123, column: 7, scope: !9073)
!9078 = !DILocation(line: 125, column: 22, scope: !9073)
!9079 = !DILocation(line: 123, column: 7, scope: !9074)
!9080 = !DILocation(line: 176, column: 36, scope: !9061)
!9081 = !DILocation(line: 176, column: 3, scope: !9061)
!9082 = !DILocation(line: 179, column: 32, scope: !9061)
!9083 = !DILocation(line: 180, column: 10, scope: !9061)
!9084 = !DILocation(line: 179, column: 3, scope: !9061)
!9085 = !DILocation(line: 195, column: 1, scope: !9061)
!9086 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !8949, file: !8949, line: 410, type: !9012, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !9087)
!9087 = !{!9088}
!9088 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9086, file: !8949, line: 410, type: !1252)
!9089 = !DILocation(line: 0, scope: !9086)
!9090 = !DILocation(line: 412, column: 3, scope: !9086)
!9091 = !DILocation(line: 413, column: 1, scope: !9086)
!9092 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !659, file: !659, line: 216, type: !1285, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !9093)
!9093 = !{!9094, !9095, !9096, !9097}
!9094 = !DILocalVariable(name: "dev", arg: 1, scope: !9092, file: !659, line: 216, type: !1211)
!9095 = !DILocalVariable(name: "sys", arg: 2, scope: !9092, file: !659, line: 217, type: !751)
!9096 = !DILocalVariable(name: "rate", arg: 3, scope: !9092, file: !659, line: 218, type: !707)
!9097 = !DILocalVariable(name: "api", scope: !9092, file: !659, line: 220, type: !1263)
!9098 = !DILocation(line: 0, scope: !9092)
!9099 = !DILocation(line: 221, column: 49, scope: !9092)
!9100 = !DILocation(line: 223, column: 11, scope: !9101)
!9101 = distinct !DILexicalBlock(scope: !9092, file: !659, line: 223, column: 6)
!9102 = !DILocation(line: 223, column: 20, scope: !9101)
!9103 = !DILocation(line: 223, column: 6, scope: !9092)
!9104 = !DILocation(line: 227, column: 9, scope: !9092)
!9105 = !DILocation(line: 227, column: 2, scope: !9092)
!9106 = !DILocation(line: 228, column: 1, scope: !9092)
!9107 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !8949, file: !8949, line: 615, type: !9108, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !9110)
!9108 = !DISubroutineType(types: !9109)
!9109 = !{null, !1252, !121}
!9110 = !{!9111, !9112}
!9111 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9107, file: !8949, line: 615, type: !1252)
!9112 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !9107, file: !8949, line: 615, type: !121)
!9113 = !DILocation(line: 0, scope: !9107)
!9114 = !DILocation(line: 617, column: 3, scope: !9107)
!9115 = !DILocation(line: 618, column: 1, scope: !9107)
!9116 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !8949, file: !8949, line: 1020, type: !9117, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !9119)
!9117 = !DISubroutineType(types: !9118)
!9118 = !{null, !1252, !121, !121, !121}
!9119 = !{!9120, !9121, !9122, !9123}
!9120 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9116, file: !8949, line: 1020, type: !1252)
!9121 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !9116, file: !8949, line: 1020, type: !121)
!9122 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !9116, file: !8949, line: 1020, type: !121)
!9123 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !9116, file: !8949, line: 1021, type: !121)
!9124 = !DILocation(line: 0, scope: !9116)
!9125 = !DILocation(line: 1029, column: 30, scope: !9126)
!9126 = distinct !DILexicalBlock(scope: !9127, file: !8949, line: 1028, column: 3)
!9127 = distinct !DILexicalBlock(scope: !9116, file: !8949, line: 1023, column: 7)
!9128 = !DILocation(line: 1029, column: 19, scope: !9126)
!9129 = !DILocation(line: 1029, column: 13, scope: !9126)
!9130 = !DILocation(line: 1029, column: 17, scope: !9126)
!9131 = !DILocation(line: 1031, column: 1, scope: !9116)
!9132 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !8949, file: !8949, line: 949, type: !9108, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !9133)
!9133 = !{!9134, !9135}
!9134 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9132, file: !8949, line: 949, type: !1252)
!9135 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !9132, file: !8949, line: 949, type: !121)
!9136 = !DILocation(line: 0, scope: !9132)
!9137 = !DILocation(line: 951, column: 3, scope: !9132)
!9138 = !DILocation(line: 952, column: 1, scope: !9132)
!9139 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !8949, file: !8949, line: 588, type: !9108, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !9140)
!9140 = !{!9141, !9142}
!9141 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9139, file: !8949, line: 588, type: !1252)
!9142 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !9139, file: !8949, line: 588, type: !121)
!9143 = !DILocation(line: 0, scope: !9139)
!9144 = !DILocation(line: 590, column: 3, scope: !9139)
!9145 = !DILocation(line: 591, column: 1, scope: !9139)
!9146 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !8949, file: !8949, line: 805, type: !9108, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !9147)
!9147 = !{!9148, !9149}
!9148 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9146, file: !8949, line: 805, type: !1252)
!9149 = !DILocalVariable(name: "StopBits", arg: 2, scope: !9146, file: !8949, line: 805, type: !121)
!9150 = !DILocation(line: 0, scope: !9146)
!9151 = !DILocation(line: 807, column: 3, scope: !9146)
!9152 = !DILocation(line: 808, column: 1, scope: !9146)
!9153 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !8949, file: !8949, line: 532, type: !9108, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !9154)
!9154 = !{!9155, !9156}
!9155 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9153, file: !8949, line: 532, type: !1252)
!9156 = !DILocalVariable(name: "Parity", arg: 2, scope: !9153, file: !8949, line: 532, type: !121)
!9157 = !DILocation(line: 0, scope: !9153)
!9158 = !DILocation(line: 534, column: 3, scope: !9153)
!9159 = !DILocation(line: 535, column: 1, scope: !9153)
!9160 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !8949, file: !8949, line: 1770, type: !8950, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !9161)
!9161 = !{!9162}
!9162 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9160, file: !8949, line: 1770, type: !1252)
!9163 = !DILocation(line: 0, scope: !9160)
!9164 = !DILocation(line: 1772, column: 11, scope: !9160)
!9165 = !DILocation(line: 1772, column: 46, scope: !9160)
!9166 = !DILocation(line: 1772, column: 3, scope: !9160)
!9167 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !8949, file: !8949, line: 1737, type: !8950, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !9168)
!9168 = !{!9169}
!9169 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9167, file: !8949, line: 1737, type: !1252)
!9170 = !DILocation(line: 0, scope: !9167)
!9171 = !DILocation(line: 1739, column: 11, scope: !9167)
!9172 = !DILocation(line: 1739, column: 3, scope: !9167)
!9173 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !8949, file: !8949, line: 1748, type: !8950, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !9174)
!9174 = !{!9175}
!9175 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9173, file: !8949, line: 1748, type: !1252)
!9176 = !DILocation(line: 0, scope: !9173)
!9177 = !DILocation(line: 1750, column: 11, scope: !9173)
!9178 = !DILocation(line: 1750, column: 45, scope: !9173)
!9179 = !DILocation(line: 1750, column: 3, scope: !9173)
!9180 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !8949, file: !8949, line: 1827, type: !8950, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !9181)
!9181 = !{!9182}
!9182 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9180, file: !8949, line: 1827, type: !1252)
!9183 = !DILocation(line: 0, scope: !9180)
!9184 = !DILocation(line: 1829, column: 11, scope: !9180)
!9185 = !DILocation(line: 1829, column: 46, scope: !9180)
!9186 = !DILocation(line: 1829, column: 3, scope: !9180)
!9187 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !8949, file: !8949, line: 1992, type: !9012, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !9188)
!9188 = !{!9189}
!9189 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9187, file: !8949, line: 1992, type: !1252)
!9190 = !DILocation(line: 0, scope: !9187)
!9191 = !DILocation(line: 1994, column: 3, scope: !9187)
!9192 = !DILocation(line: 1995, column: 1, scope: !9187)
!9193 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !8949, file: !8949, line: 1934, type: !9012, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !9194)
!9194 = !{!9195, !9196}
!9195 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9193, file: !8949, line: 1934, type: !1252)
!9196 = !DILocalVariable(name: "tmpreg", scope: !9193, file: !8949, line: 1936, type: !120)
!9197 = !DILocation(line: 0, scope: !9193)
!9198 = !DILocation(line: 1936, column: 3, scope: !9193)
!9199 = !DILocation(line: 1936, column: 17, scope: !9193)
!9200 = !DILocation(line: 1937, column: 20, scope: !9193)
!9201 = !DILocation(line: 1937, column: 10, scope: !9193)
!9202 = !DILocation(line: 1938, column: 10, scope: !9193)
!9203 = !DILocation(line: 1939, column: 20, scope: !9193)
!9204 = !DILocation(line: 1939, column: 10, scope: !9193)
!9205 = !DILocation(line: 1940, column: 10, scope: !9193)
!9206 = !DILocation(line: 1941, column: 1, scope: !9193)
!9207 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !8949, file: !8949, line: 1877, type: !9012, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !9208)
!9208 = !{!9209, !9210}
!9209 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9207, file: !8949, line: 1877, type: !1252)
!9210 = !DILocalVariable(name: "tmpreg", scope: !9207, file: !8949, line: 1879, type: !120)
!9211 = !DILocation(line: 0, scope: !9207)
!9212 = !DILocation(line: 1879, column: 3, scope: !9207)
!9213 = !DILocation(line: 1879, column: 17, scope: !9207)
!9214 = !DILocation(line: 1880, column: 20, scope: !9207)
!9215 = !DILocation(line: 1880, column: 10, scope: !9207)
!9216 = !DILocation(line: 1881, column: 10, scope: !9207)
!9217 = !DILocation(line: 1882, column: 20, scope: !9207)
!9218 = !DILocation(line: 1882, column: 10, scope: !9207)
!9219 = !DILocation(line: 1883, column: 10, scope: !9207)
!9220 = !DILocation(line: 1884, column: 1, scope: !9207)
!9221 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !8949, file: !8949, line: 1896, type: !9012, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !9222)
!9222 = !{!9223, !9224}
!9223 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9221, file: !8949, line: 1896, type: !1252)
!9224 = !DILocalVariable(name: "tmpreg", scope: !9221, file: !8949, line: 1898, type: !120)
!9225 = !DILocation(line: 0, scope: !9221)
!9226 = !DILocation(line: 1898, column: 3, scope: !9221)
!9227 = !DILocation(line: 1898, column: 17, scope: !9221)
!9228 = !DILocation(line: 1899, column: 20, scope: !9221)
!9229 = !DILocation(line: 1899, column: 10, scope: !9221)
!9230 = !DILocation(line: 1900, column: 10, scope: !9221)
!9231 = !DILocation(line: 1901, column: 20, scope: !9221)
!9232 = !DILocation(line: 1901, column: 10, scope: !9221)
!9233 = !DILocation(line: 1902, column: 10, scope: !9221)
!9234 = !DILocation(line: 1903, column: 1, scope: !9221)
!9235 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !8949, file: !8949, line: 1915, type: !9012, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !9236)
!9236 = !{!9237, !9238}
!9237 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9235, file: !8949, line: 1915, type: !1252)
!9238 = !DILocalVariable(name: "tmpreg", scope: !9235, file: !8949, line: 1917, type: !120)
!9239 = !DILocation(line: 0, scope: !9235)
!9240 = !DILocation(line: 1917, column: 3, scope: !9235)
!9241 = !DILocation(line: 1917, column: 17, scope: !9235)
!9242 = !DILocation(line: 1918, column: 20, scope: !9235)
!9243 = !DILocation(line: 1918, column: 10, scope: !9235)
!9244 = !DILocation(line: 1919, column: 10, scope: !9235)
!9245 = !DILocation(line: 1920, column: 20, scope: !9235)
!9246 = !DILocation(line: 1920, column: 10, scope: !9235)
!9247 = !DILocation(line: 1921, column: 10, scope: !9235)
!9248 = !DILocation(line: 1922, column: 1, scope: !9235)
!9249 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !8949, file: !8949, line: 1814, type: !8950, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !9250)
!9250 = !{!9251}
!9251 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9249, file: !8949, line: 1814, type: !1252)
!9252 = !DILocation(line: 0, scope: !9249)
!9253 = !DILocation(line: 1816, column: 11, scope: !9249)
!9254 = !DILocation(line: 1816, column: 46, scope: !9249)
!9255 = !DILocation(line: 1816, column: 3, scope: !9249)
!9256 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !8949, file: !8949, line: 2426, type: !9257, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !9259)
!9257 = !DISubroutineType(types: !9258)
!9258 = !{null, !1252, !154}
!9259 = !{!9260, !9261}
!9260 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9256, file: !8949, line: 2426, type: !1252)
!9261 = !DILocalVariable(name: "Value", arg: 2, scope: !9256, file: !8949, line: 2426, type: !154)
!9262 = !DILocation(line: 0, scope: !9256)
!9263 = !DILocation(line: 2428, column: 16, scope: !9256)
!9264 = !DILocation(line: 2428, column: 11, scope: !9256)
!9265 = !DILocation(line: 2428, column: 14, scope: !9256)
!9266 = !DILocation(line: 2429, column: 1, scope: !9256)
!9267 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !8949, file: !8949, line: 1792, type: !8950, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !9268)
!9268 = !{!9269}
!9269 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9267, file: !8949, line: 1792, type: !1252)
!9270 = !DILocation(line: 0, scope: !9267)
!9271 = !DILocation(line: 1794, column: 11, scope: !9267)
!9272 = !DILocation(line: 1794, column: 47, scope: !9267)
!9273 = !DILocation(line: 1794, column: 3, scope: !9267)
!9274 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !8949, file: !8949, line: 2403, type: !9275, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !9277)
!9275 = !DISubroutineType(types: !9276)
!9276 = !{!154, !1252}
!9277 = !{!9278}
!9278 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9274, file: !8949, line: 2403, type: !1252)
!9279 = !DILocation(line: 0, scope: !9274)
!9280 = !DILocation(line: 2405, column: 20, scope: !9274)
!9281 = !DILocation(line: 2405, column: 10, scope: !9274)
!9282 = !DILocation(line: 2405, column: 3, scope: !9274)
!9283 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1308, file: !1308, line: 1583, type: !1232, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !9284)
!9284 = !{!9285, !9286, !9287, !9288, !9289, !9290}
!9285 = !DILocalVariable(name: "dev", arg: 1, scope: !9283, file: !1308, line: 1583, type: !1211)
!9286 = !DILocalVariable(name: "config", scope: !9283, file: !1308, line: 1585, type: !8640)
!9287 = !DILocalVariable(name: "data", scope: !9283, file: !1308, line: 1586, type: !8763)
!9288 = !DILocalVariable(name: "ll_parity", scope: !9283, file: !1308, line: 1587, type: !121)
!9289 = !DILocalVariable(name: "ll_datawidth", scope: !9283, file: !1308, line: 1588, type: !121)
!9290 = !DILocalVariable(name: "err", scope: !9283, file: !1308, line: 1589, type: !103)
!9291 = !DILocation(line: 0, scope: !9283)
!9292 = !DILocation(line: 1585, column: 48, scope: !9283)
!9293 = !DILocation(line: 1586, column: 38, scope: !9283)
!9294 = !DILocation(line: 1591, column: 2, scope: !9283)
!9295 = !DILocation(line: 1593, column: 29, scope: !9296)
!9296 = distinct !DILexicalBlock(scope: !9283, file: !1308, line: 1593, column: 6)
!9297 = !DILocation(line: 1593, column: 7, scope: !9296)
!9298 = !DILocation(line: 1593, column: 6, scope: !9283)
!9299 = !DILocation(line: 1599, column: 31, scope: !9283)
!9300 = !DILocation(line: 1599, column: 71, scope: !9283)
!9301 = !DILocation(line: 1599, column: 8, scope: !9283)
!9302 = !DILocation(line: 1600, column: 10, scope: !9303)
!9303 = distinct !DILexicalBlock(scope: !9283, file: !1308, line: 1600, column: 6)
!9304 = !DILocation(line: 1600, column: 6, scope: !9283)
!9305 = !DILocation(line: 1616, column: 36, scope: !9283)
!9306 = !DILocation(line: 1616, column: 8, scope: !9283)
!9307 = !DILocation(line: 1617, column: 10, scope: !9308)
!9308 = distinct !DILexicalBlock(scope: !9283, file: !1308, line: 1617, column: 6)
!9309 = !DILocation(line: 1617, column: 6, scope: !9283)
!9310 = !DILocation(line: 1621, column: 27, scope: !9283)
!9311 = !DILocation(line: 1621, column: 2, scope: !9283)
!9312 = !DILocation(line: 1624, column: 40, scope: !9283)
!9313 = !DILocation(line: 1624, column: 2, scope: !9283)
!9314 = !DILocation(line: 1630, column: 14, scope: !9315)
!9315 = distinct !DILexicalBlock(scope: !9283, file: !1308, line: 1630, column: 6)
!9316 = !DILocation(line: 1630, column: 6, scope: !9283)
!9317 = !DILocation(line: 1638, column: 2, scope: !9318)
!9318 = distinct !DILexicalBlock(scope: !9319, file: !1308, line: 1634, column: 34)
!9319 = distinct !DILexicalBlock(scope: !9315, file: !1308, line: 1634, column: 13)
!9320 = !DILocation(line: 0, scope: !9315)
!9321 = !DILocation(line: 1649, column: 35, scope: !9283)
!9322 = !DILocation(line: 1649, column: 2, scope: !9283)
!9323 = !DILocation(line: 1654, column: 14, scope: !9324)
!9324 = distinct !DILexicalBlock(scope: !9283, file: !1308, line: 1654, column: 6)
!9325 = !DILocation(line: 1654, column: 6, scope: !9283)
!9326 = !DILocation(line: 1655, column: 3, scope: !9327)
!9327 = distinct !DILexicalBlock(scope: !9324, file: !1308, line: 1654, column: 31)
!9328 = !DILocation(line: 1656, column: 2, scope: !9327)
!9329 = !DILocation(line: 1659, column: 37, scope: !9283)
!9330 = !DILocation(line: 1659, column: 2, scope: !9283)
!9331 = !DILocation(line: 1662, column: 14, scope: !9332)
!9332 = distinct !DILexicalBlock(scope: !9283, file: !1308, line: 1662, column: 6)
!9333 = !DILocation(line: 1662, column: 6, scope: !9283)
!9334 = !DILocation(line: 1663, column: 37, scope: !9335)
!9335 = distinct !DILexicalBlock(scope: !9332, file: !1308, line: 1662, column: 27)
!9336 = !DILocation(line: 1663, column: 3, scope: !9335)
!9337 = !DILocation(line: 1664, column: 2, scope: !9335)
!9338 = !DILocation(line: 1684, column: 26, scope: !9283)
!9339 = !DILocation(line: 1684, column: 2, scope: !9283)
!9340 = !DILocation(line: 1722, column: 2, scope: !9283)
!9341 = !DILocation(line: 1724, column: 1, scope: !9283)
!9342 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1308, file: !1308, line: 651, type: !9343, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !9345)
!9343 = !DISubroutineType(types: !9344)
!9344 = !{null, !1211}
!9345 = !{!9346, !9347, !9348}
!9346 = !DILocalVariable(name: "dev", arg: 1, scope: !9342, file: !1308, line: 651, type: !1211)
!9347 = !DILocalVariable(name: "data", scope: !9342, file: !1308, line: 653, type: !8763)
!9348 = !DILocalVariable(name: "clk", scope: !9342, file: !1308, line: 654, type: !9349)
!9349 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1211)
!9350 = !DILocation(line: 0, scope: !9342)
!9351 = !DILocation(line: 653, column: 38, scope: !9342)
!9352 = !DILocation(line: 656, column: 8, scope: !9342)
!9353 = !DILocation(line: 656, column: 14, scope: !9342)
!9354 = !DILocation(line: 657, column: 1, scope: !9342)
!9355 = distinct !DISubprogram(name: "device_is_ready", scope: !3080, file: !3080, line: 47, type: !9356, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !9358)
!9356 = !DISubroutineType(types: !9357)
!9357 = !{!157, !1211}
!9358 = !{!9359}
!9359 = !DILocalVariable(name: "dev", arg: 1, scope: !9355, file: !3080, line: 47, type: !1211)
!9360 = !DILocation(line: 0, scope: !9355)
!9361 = !DILocation(line: 55, column: 2, scope: !9362)
!9362 = distinct !DILexicalBlock(scope: !9355, file: !3080, line: 55, column: 2)
!9363 = !{i64 2155125944}
!9364 = !DILocation(line: 56, column: 9, scope: !9355)
!9365 = !DILocation(line: 56, column: 2, scope: !9355)
!9366 = distinct !DISubprogram(name: "clock_control_on", scope: !659, file: !659, line: 123, type: !1270, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !9367)
!9367 = !{!9368, !9369, !9370}
!9368 = !DILocalVariable(name: "dev", arg: 1, scope: !9366, file: !659, line: 123, type: !1211)
!9369 = !DILocalVariable(name: "sys", arg: 2, scope: !9366, file: !659, line: 124, type: !751)
!9370 = !DILocalVariable(name: "api", scope: !9366, file: !659, line: 126, type: !1263)
!9371 = !DILocation(line: 0, scope: !9366)
!9372 = !DILocation(line: 127, column: 49, scope: !9366)
!9373 = !DILocation(line: 129, column: 14, scope: !9366)
!9374 = !DILocation(line: 129, column: 9, scope: !9366)
!9375 = !DILocation(line: 129, column: 2, scope: !9366)
!9376 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1335, file: !1335, line: 342, type: !9377, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !9379)
!9377 = !DISubroutineType(types: !9378)
!9378 = !{!103, !1383, !154}
!9379 = !{!9380, !9381, !9382, !9383}
!9380 = !DILocalVariable(name: "config", arg: 1, scope: !9376, file: !1335, line: 342, type: !1383)
!9381 = !DILocalVariable(name: "id", arg: 2, scope: !9376, file: !1335, line: 343, type: !154)
!9382 = !DILocalVariable(name: "ret", scope: !9376, file: !1335, line: 345, type: !103)
!9383 = !DILocalVariable(name: "state", scope: !9376, file: !1335, line: 346, type: !1338)
!9384 = !DILocation(line: 0, scope: !9376)
!9385 = !DILocation(line: 346, column: 2, scope: !9376)
!9386 = !DILocation(line: 348, column: 8, scope: !9376)
!9387 = !DILocation(line: 349, column: 10, scope: !9388)
!9388 = distinct !DILexicalBlock(scope: !9376, file: !1335, line: 349, column: 6)
!9389 = !DILocation(line: 349, column: 6, scope: !9376)
!9390 = !DILocation(line: 353, column: 44, scope: !9376)
!9391 = !DILocation(line: 353, column: 9, scope: !9376)
!9392 = !DILocation(line: 353, column: 2, scope: !9376)
!9393 = !DILocation(line: 354, column: 1, scope: !9376)
!9394 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !8949, file: !8949, line: 497, type: !9108, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !9395)
!9395 = !{!9396, !9397, !9398}
!9396 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9394, file: !8949, line: 497, type: !1252)
!9397 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !9394, file: !8949, line: 497, type: !121)
!9398 = !DILocalVariable(name: "val", scope: !9399, file: !8949, line: 499, type: !121)
!9399 = distinct !DILexicalBlock(scope: !9394, file: !8949, line: 499, column: 3)
!9400 = !DILocation(line: 0, scope: !9394)
!9401 = !DILocation(line: 499, column: 3, scope: !9399)
!9402 = !DILocalVariable(name: "addr", arg: 1, scope: !9403, file: !5498, line: 476, type: !1304)
!9403 = distinct !DISubprogram(name: "__LDREXW", scope: !5498, file: !5498, line: 476, type: !9404, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !9406)
!9404 = !DISubroutineType(types: !9405)
!9405 = !{!121, !1304}
!9406 = !{!9402, !9407}
!9407 = !DILocalVariable(name: "result", scope: !9403, file: !5498, line: 478, type: !121)
!9408 = !DILocation(line: 0, scope: !9403, inlinedAt: !9409)
!9409 = distinct !DILocation(line: 499, column: 3, scope: !9410)
!9410 = distinct !DILexicalBlock(scope: !9399, file: !8949, line: 499, column: 3)
!9411 = !DILocation(line: 480, column: 4, scope: !9403, inlinedAt: !9409)
!9412 = !{i64 3573414}
!9413 = !DILocation(line: 499, column: 3, scope: !9410)
!9414 = !DILocation(line: 0, scope: !9399)
!9415 = !DILocalVariable(name: "value", arg: 1, scope: !9416, file: !5498, line: 527, type: !121)
!9416 = distinct !DISubprogram(name: "__STREXW", scope: !5498, file: !5498, line: 527, type: !9417, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !9419)
!9417 = !DISubroutineType(types: !9418)
!9418 = !{!121, !121, !1304}
!9419 = !{!9415, !9420, !9421}
!9420 = !DILocalVariable(name: "addr", arg: 2, scope: !9416, file: !5498, line: 527, type: !1304)
!9421 = !DILocalVariable(name: "result", scope: !9416, file: !5498, line: 529, type: !121)
!9422 = !DILocation(line: 0, scope: !9416, inlinedAt: !9423)
!9423 = distinct !DILocation(line: 499, column: 3, scope: !9399)
!9424 = !DILocation(line: 531, column: 4, scope: !9416, inlinedAt: !9423)
!9425 = !{i64 3574850}
!9426 = distinct !{!9426, !9401, !9401}
!9427 = !DILocation(line: 500, column: 1, scope: !9394)
!9428 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !8949, file: !8949, line: 850, type: !9117, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !9429)
!9429 = !{!9430, !9431, !9432, !9433}
!9430 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9428, file: !8949, line: 850, type: !1252)
!9431 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !9428, file: !8949, line: 850, type: !121)
!9432 = !DILocalVariable(name: "Parity", arg: 3, scope: !9428, file: !8949, line: 850, type: !121)
!9433 = !DILocalVariable(name: "StopBits", arg: 4, scope: !9428, file: !8949, line: 851, type: !121)
!9434 = !DILocation(line: 0, scope: !9428)
!9435 = !DILocation(line: 853, column: 3, scope: !9428)
!9436 = !DILocation(line: 854, column: 3, scope: !9428)
!9437 = !DILocation(line: 855, column: 1, scope: !9428)
!9438 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !8949, file: !8949, line: 1337, type: !9012, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !9439)
!9439 = !{!9440}
!9440 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9438, file: !8949, line: 1337, type: !1252)
!9441 = !DILocation(line: 0, scope: !9438)
!9442 = !DILocation(line: 1339, column: 3, scope: !9438)
!9443 = !DILocation(line: 1340, column: 1, scope: !9438)
!9444 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1335, file: !1335, line: 316, type: !9445, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !9447)
!9445 = !DISubroutineType(types: !9446)
!9446 = !{!103, !1383, !1338}
!9447 = !{!9448, !9449, !9450}
!9448 = !DILocalVariable(name: "config", arg: 1, scope: !9444, file: !1335, line: 317, type: !1383)
!9449 = !DILocalVariable(name: "state", arg: 2, scope: !9444, file: !1335, line: 318, type: !1338)
!9450 = !DILocalVariable(name: "reg", scope: !9444, file: !1335, line: 320, type: !22)
!9451 = !DILocation(line: 0, scope: !9444)
!9452 = !DILocation(line: 329, column: 39, scope: !9444)
!9453 = !DILocation(line: 329, column: 52, scope: !9444)
!9454 = !DILocation(line: 329, column: 9, scope: !9444)
!9455 = !DILocation(line: 329, column: 2, scope: !9444)
!9456 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !9356, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1167, retainedNodes: !9457)
!9457 = !{!9458}
!9458 = !DILocalVariable(name: "dev", arg: 1, scope: !9456, file: !141, line: 730, type: !1211)
!9459 = !DILocation(line: 0, scope: !9456)
!9460 = !DILocation(line: 732, column: 9, scope: !9456)
!9461 = !DILocation(line: 732, column: 2, scope: !9456)
!9462 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1466, file: !1466, line: 270, type: !1472, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1386, retainedNodes: !9463)
!9463 = !{!9464}
!9464 = !DILocalVariable(name: "dev", arg: 1, scope: !9462, file: !1466, line: 270, type: !1474)
!9465 = !DILocation(line: 0, scope: !9462)
!9466 = !DILocation(line: 274, column: 2, scope: !9462)
!9467 = !DILocation(line: 275, column: 12, scope: !9462)
!9468 = !DILocation(line: 276, column: 15, scope: !9462)
!9469 = !DILocation(line: 277, column: 16, scope: !9462)
!9470 = !DILocation(line: 278, column: 15, scope: !9462)
!9471 = !DILocation(line: 279, column: 16, scope: !9462)
!9472 = !DILocation(line: 282, column: 2, scope: !9462)
!9473 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !356, file: !356, line: 1814, type: !5532, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1386, retainedNodes: !9474)
!9474 = !{!9475, !9476}
!9475 = !DILocalVariable(name: "IRQn", arg: 1, scope: !9473, file: !356, line: 1814, type: !613)
!9476 = !DILocalVariable(name: "priority", arg: 2, scope: !9473, file: !356, line: 1814, type: !121)
!9477 = !DILocation(line: 0, scope: !9473)
!9478 = !DILocation(line: 1822, column: 46, scope: !9479)
!9479 = distinct !DILexicalBlock(scope: !9480, file: !356, line: 1821, column: 3)
!9480 = distinct !DILexicalBlock(scope: !9473, file: !356, line: 1816, column: 7)
!9481 = !DILocation(line: 1824, column: 1, scope: !9473)
!9482 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1466, file: !1466, line: 118, type: !5435, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1386, retainedNodes: !9483)
!9483 = !{!9484, !9485}
!9484 = !DILocalVariable(name: "arg", arg: 1, scope: !9482, file: !1466, line: 118, type: !102)
!9485 = !DILocalVariable(name: "dticks", scope: !9482, file: !1466, line: 121, type: !121)
!9486 = !DILocation(line: 0, scope: !9482)
!9487 = !DILocation(line: 124, column: 2, scope: !9482)
!9488 = !DILocation(line: 129, column: 17, scope: !9482)
!9489 = !DILocation(line: 129, column: 14, scope: !9482)
!9490 = !DILocation(line: 130, column: 15, scope: !9482)
!9491 = !DILocation(line: 145, column: 27, scope: !9492)
!9492 = distinct !DILexicalBlock(scope: !9493, file: !1466, line: 132, column: 16)
!9493 = distinct !DILexicalBlock(scope: !9482, file: !1466, line: 132, column: 6)
!9494 = !DILocation(line: 145, column: 25, scope: !9492)
!9495 = !DILocation(line: 145, column: 45, scope: !9492)
!9496 = !DILocation(line: 146, column: 30, scope: !9492)
!9497 = !DILocation(line: 146, column: 20, scope: !9492)
!9498 = !DILocation(line: 147, column: 3, scope: !9492)
!9499 = !DILocation(line: 151, column: 2, scope: !9482)
!9500 = !DILocation(line: 152, column: 1, scope: !9482)
!9501 = distinct !DISubprogram(name: "elapsed", scope: !1466, file: !1466, line: 85, type: !5579, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1386, retainedNodes: !9502)
!9502 = !{!9503, !9504, !9505}
!9503 = !DILocalVariable(name: "val1", scope: !9501, file: !1466, line: 87, type: !121)
!9504 = !DILocalVariable(name: "ctrl", scope: !9501, file: !1466, line: 88, type: !121)
!9505 = !DILocalVariable(name: "val2", scope: !9501, file: !1466, line: 89, type: !121)
!9506 = !DILocation(line: 87, column: 27, scope: !9501)
!9507 = !DILocation(line: 0, scope: !9501)
!9508 = !DILocation(line: 88, column: 27, scope: !9501)
!9509 = !DILocation(line: 89, column: 27, scope: !9501)
!9510 = !DILocation(line: 105, column: 12, scope: !9511)
!9511 = distinct !DILexicalBlock(scope: !9501, file: !1466, line: 105, column: 6)
!9512 = !DILocation(line: 106, column: 6, scope: !9511)
!9513 = !DILocation(line: 107, column: 16, scope: !9514)
!9514 = distinct !DILexicalBlock(scope: !9511, file: !1466, line: 106, column: 24)
!9515 = !DILocation(line: 111, column: 18, scope: !9514)
!9516 = !DILocation(line: 112, column: 2, scope: !9514)
!9517 = !DILocation(line: 114, column: 20, scope: !9501)
!9518 = !DILocation(line: 114, column: 30, scope: !9501)
!9519 = !DILocation(line: 114, column: 28, scope: !9501)
!9520 = !DILocation(line: 114, column: 2, scope: !9501)
!9521 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1466, file: !1466, line: 154, type: !9522, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1386, retainedNodes: !9524)
!9522 = !DISubroutineType(types: !9523)
!9523 = !{null, !587, !157}
!9524 = !{!9525, !9526, !9527, !9528, !9529, !9530, !9531, !9536, !9537}
!9525 = !DILocalVariable(name: "ticks", arg: 1, scope: !9521, file: !1466, line: 154, type: !587)
!9526 = !DILocalVariable(name: "idle", arg: 2, scope: !9521, file: !1466, line: 154, type: !157)
!9527 = !DILocalVariable(name: "delay", scope: !9521, file: !1466, line: 169, type: !121)
!9528 = !DILocalVariable(name: "val1", scope: !9521, file: !1466, line: 170, type: !121)
!9529 = !DILocalVariable(name: "val2", scope: !9521, file: !1466, line: 170, type: !121)
!9530 = !DILocalVariable(name: "last_load_", scope: !9521, file: !1466, line: 171, type: !121)
!9531 = !DILocalVariable(name: "key", scope: !9521, file: !1466, line: 176, type: !9532)
!9532 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !321, line: 106, baseType: !9533)
!9533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !321, line: 32, size: 32, elements: !9534)
!9534 = !{!9535}
!9535 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !9533, file: !321, line: 33, baseType: !103, size: 32)
!9536 = !DILocalVariable(name: "pending", scope: !9521, file: !1466, line: 178, type: !121)
!9537 = !DILocalVariable(name: "unannounced", scope: !9521, file: !1466, line: 185, type: !121)
!9538 = !DILocation(line: 0, scope: !9521)
!9539 = !DILocation(line: 162, column: 49, scope: !9540)
!9540 = distinct !DILexicalBlock(scope: !9521, file: !1466, line: 162, column: 6)
!9541 = !DILocation(line: 163, column: 17, scope: !9542)
!9542 = distinct !DILexicalBlock(scope: !9540, file: !1466, line: 162, column: 78)
!9543 = !DILocation(line: 164, column: 13, scope: !9542)
!9544 = !DILocation(line: 165, column: 3, scope: !9542)
!9545 = !DILocation(line: 171, column: 24, scope: !9521)
!9546 = !DILocation(line: 173, column: 10, scope: !9521)
!9547 = !DILocation(line: 174, column: 10, scope: !9521)
!9548 = !DILocalVariable(name: "l", arg: 1, scope: !9549, file: !321, line: 136, type: !9552)
!9549 = distinct !DISubprogram(name: "k_spin_lock", scope: !321, file: !321, line: 136, type: !9550, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1386, retainedNodes: !9553)
!9550 = !DISubroutineType(types: !9551)
!9551 = !{!9532, !9552}
!9552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1492, size: 32)
!9553 = !{!9548, !9554}
!9554 = !DILocalVariable(name: "k", scope: !9549, file: !321, line: 139, type: !9532)
!9555 = !DILocation(line: 0, scope: !9549, inlinedAt: !9556)
!9556 = distinct !DILocation(line: 176, column: 25, scope: !9521)
!9557 = !DILocation(line: 55, column: 2, scope: !9558, inlinedAt: !9562)
!9558 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5324, file: !5324, line: 42, type: !5325, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1386, retainedNodes: !9559)
!9559 = !{!9560, !9561}
!9560 = !DILocalVariable(name: "key", scope: !9558, file: !5324, line: 44, type: !32)
!9561 = !DILocalVariable(name: "tmp", scope: !9558, file: !5324, line: 53, type: !32)
!9562 = distinct !DILocation(line: 145, column: 10, scope: !9549, inlinedAt: !9556)
!9563 = !{i64 2195866}
!9564 = !DILocation(line: 0, scope: !9558, inlinedAt: !9562)
!9565 = !DILocation(line: 178, column: 21, scope: !9521)
!9566 = !DILocation(line: 180, column: 18, scope: !9521)
!9567 = !DILocation(line: 182, column: 14, scope: !9521)
!9568 = !DILocation(line: 183, column: 15, scope: !9521)
!9569 = !DILocation(line: 185, column: 39, scope: !9521)
!9570 = !DILocation(line: 185, column: 37, scope: !9521)
!9571 = !DILocation(line: 187, column: 27, scope: !9572)
!9572 = distinct !DILexicalBlock(scope: !9521, file: !1466, line: 187, column: 6)
!9573 = !DILocation(line: 187, column: 6, scope: !9521)
!9574 = !DILocation(line: 202, column: 27, scope: !9575)
!9575 = distinct !DILexicalBlock(scope: !9572, file: !1466, line: 195, column: 9)
!9576 = !DILocation(line: 202, column: 48, scope: !9575)
!9577 = !DILocation(line: 203, column: 9, scope: !9575)
!9578 = !DILocation(line: 204, column: 11, scope: !9575)
!9579 = !DILocation(line: 205, column: 13, scope: !9580)
!9580 = distinct !DILexicalBlock(scope: !9575, file: !1466, line: 205, column: 7)
!9581 = !DILocation(line: 205, column: 7, scope: !9575)
!9582 = !DILocation(line: 0, scope: !9572)
!9583 = !DILocation(line: 212, column: 18, scope: !9521)
!9584 = !DILocation(line: 214, column: 28, scope: !9521)
!9585 = !DILocation(line: 214, column: 16, scope: !9521)
!9586 = !DILocation(line: 215, column: 15, scope: !9521)
!9587 = !DILocation(line: 227, column: 11, scope: !9588)
!9588 = distinct !DILexicalBlock(scope: !9521, file: !1466, line: 227, column: 6)
!9589 = !DILocation(line: 227, column: 6, scope: !9521)
!9590 = !DILocation(line: 228, column: 15, scope: !9591)
!9591 = distinct !DILexicalBlock(scope: !9588, file: !1466, line: 227, column: 19)
!9592 = !DILocation(line: 228, column: 38, scope: !9591)
!9593 = !DILocation(line: 228, column: 24, scope: !9591)
!9594 = !DILocation(line: 229, column: 2, scope: !9591)
!9595 = !DILocation(line: 230, column: 24, scope: !9596)
!9596 = distinct !DILexicalBlock(scope: !9588, file: !1466, line: 229, column: 9)
!9597 = !DILocation(line: 230, column: 15, scope: !9596)
!9598 = !DILocation(line: 0, scope: !9588)
!9599 = !DILocalVariable(name: "key", arg: 2, scope: !9600, file: !321, line: 190, type: !9532)
!9600 = distinct !DISubprogram(name: "k_spin_unlock", scope: !321, file: !321, line: 189, type: !9601, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1386, retainedNodes: !9603)
!9601 = !DISubroutineType(types: !9602)
!9602 = !{null, !9552, !9532}
!9603 = !{!9604, !9599}
!9604 = !DILocalVariable(name: "l", arg: 1, scope: !9600, file: !321, line: 189, type: !9552)
!9605 = !DILocation(line: 0, scope: !9600, inlinedAt: !9606)
!9606 = distinct !DILocation(line: 232, column: 2, scope: !9521)
!9607 = !DILocalVariable(name: "key", arg: 1, scope: !9608, file: !5324, line: 84, type: !32)
!9608 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5324, file: !5324, line: 84, type: !5335, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1386, retainedNodes: !9609)
!9609 = !{!9607}
!9610 = !DILocation(line: 0, scope: !9608, inlinedAt: !9611)
!9611 = distinct !DILocation(line: 215, column: 2, scope: !9600, inlinedAt: !9606)
!9612 = !DILocation(line: 95, column: 2, scope: !9608, inlinedAt: !9611)
!9613 = !{i64 2196683}
!9614 = !DILocation(line: 234, column: 1, scope: !9521)
!9615 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1466, file: !1466, line: 236, type: !5579, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1386, retainedNodes: !9616)
!9616 = !{!9617, !9618}
!9617 = !DILocalVariable(name: "key", scope: !9615, file: !1466, line: 242, type: !9532)
!9618 = !DILocalVariable(name: "cyc", scope: !9615, file: !1466, line: 243, type: !121)
!9619 = !DILocation(line: 0, scope: !9549, inlinedAt: !9620)
!9620 = distinct !DILocation(line: 242, column: 25, scope: !9615)
!9621 = !DILocation(line: 55, column: 2, scope: !9558, inlinedAt: !9622)
!9622 = distinct !DILocation(line: 145, column: 10, scope: !9549, inlinedAt: !9620)
!9623 = !DILocation(line: 0, scope: !9558, inlinedAt: !9622)
!9624 = !DILocation(line: 0, scope: !9615)
!9625 = !DILocation(line: 243, column: 17, scope: !9615)
!9626 = !DILocation(line: 243, column: 29, scope: !9615)
!9627 = !DILocation(line: 243, column: 27, scope: !9615)
!9628 = !DILocation(line: 243, column: 43, scope: !9615)
!9629 = !DILocation(line: 243, column: 41, scope: !9615)
!9630 = !DILocation(line: 0, scope: !9600, inlinedAt: !9631)
!9631 = distinct !DILocation(line: 245, column: 2, scope: !9615)
!9632 = !DILocation(line: 0, scope: !9608, inlinedAt: !9633)
!9633 = distinct !DILocation(line: 215, column: 2, scope: !9600, inlinedAt: !9631)
!9634 = !DILocation(line: 95, column: 2, scope: !9608, inlinedAt: !9633)
!9635 = !DILocation(line: 246, column: 13, scope: !9615)
!9636 = !DILocation(line: 246, column: 2, scope: !9615)
!9637 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1466, file: !1466, line: 249, type: !5579, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1386, retainedNodes: !9638)
!9638 = !{!9639, !9640}
!9639 = !DILocalVariable(name: "key", scope: !9637, file: !1466, line: 251, type: !9532)
!9640 = !DILocalVariable(name: "ret", scope: !9637, file: !1466, line: 252, type: !121)
!9641 = !DILocation(line: 0, scope: !9549, inlinedAt: !9642)
!9642 = distinct !DILocation(line: 251, column: 25, scope: !9637)
!9643 = !DILocation(line: 55, column: 2, scope: !9558, inlinedAt: !9644)
!9644 = distinct !DILocation(line: 145, column: 10, scope: !9549, inlinedAt: !9642)
!9645 = !DILocation(line: 0, scope: !9558, inlinedAt: !9644)
!9646 = !DILocation(line: 0, scope: !9637)
!9647 = !DILocation(line: 252, column: 17, scope: !9637)
!9648 = !DILocation(line: 252, column: 29, scope: !9637)
!9649 = !DILocation(line: 252, column: 27, scope: !9637)
!9650 = !DILocation(line: 0, scope: !9600, inlinedAt: !9651)
!9651 = distinct !DILocation(line: 254, column: 2, scope: !9637)
!9652 = !DILocation(line: 0, scope: !9608, inlinedAt: !9653)
!9653 = distinct !DILocation(line: 215, column: 2, scope: !9600, inlinedAt: !9651)
!9654 = !DILocation(line: 95, column: 2, scope: !9608, inlinedAt: !9653)
!9655 = !DILocation(line: 255, column: 2, scope: !9637)
!9656 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1466, file: !1466, line: 258, type: !2928, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1386, retainedNodes: !322)
!9657 = !DILocation(line: 260, column: 6, scope: !9658)
!9658 = distinct !DILexicalBlock(scope: !9656, file: !1466, line: 260, column: 6)
!9659 = !DILocation(line: 260, column: 16, scope: !9658)
!9660 = !DILocation(line: 260, column: 6, scope: !9656)
!9661 = !DILocation(line: 261, column: 17, scope: !9662)
!9662 = distinct !DILexicalBlock(scope: !9658, file: !1466, line: 260, column: 34)
!9663 = !DILocation(line: 262, column: 2, scope: !9662)
!9664 = !DILocation(line: 263, column: 1, scope: !9656)
!9665 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1466, file: !1466, line: 265, type: !2928, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1386, retainedNodes: !322)
!9666 = !DILocation(line: 267, column: 16, scope: !9665)
!9667 = !DILocation(line: 268, column: 1, scope: !9665)
!9668 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !9669, file: !9669, line: 9, type: !9670, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !9693)
!9669 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9670 = !DISubroutineType(types: !9671)
!9671 = !{!103, !9672, !154, !9692}
!9672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9673, size: 32)
!9673 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9674)
!9674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1335, line: 60, size: 64, elements: !9675)
!9675 = !{!9676, !9691}
!9676 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !9674, file: !1335, line: 69, baseType: !9677, size: 32)
!9677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9678, size: 32)
!9678 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9679)
!9679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1335, line: 50, size: 64, elements: !9680)
!9680 = !{!9681, !9689, !9690}
!9681 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !9679, file: !1335, line: 52, baseType: !9682, size: 32)
!9682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9683, size: 32)
!9683 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9684)
!9684 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1346, line: 37, baseType: !9685)
!9685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1346, line: 32, size: 64, elements: !9686)
!9686 = !{!9687, !9688}
!9687 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !9685, file: !1346, line: 34, baseType: !121, size: 32)
!9688 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !9685, file: !1346, line: 36, baseType: !121, size: 32, offset: 32)
!9689 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !9679, file: !1335, line: 54, baseType: !154, size: 8, offset: 32)
!9690 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !9679, file: !1335, line: 56, baseType: !154, size: 8, offset: 40)
!9691 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !9674, file: !1335, line: 71, baseType: !154, size: 8, offset: 32)
!9692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9677, size: 32)
!9693 = !{!9694, !9695, !9696}
!9694 = !DILocalVariable(name: "config", arg: 1, scope: !9668, file: !9669, line: 9, type: !9672)
!9695 = !DILocalVariable(name: "id", arg: 2, scope: !9668, file: !9669, line: 9, type: !154)
!9696 = !DILocalVariable(name: "state", arg: 3, scope: !9668, file: !9669, line: 10, type: !9692)
!9697 = !DILocation(line: 0, scope: !9668)
!9698 = !DILocation(line: 12, column: 20, scope: !9668)
!9699 = !DILocation(line: 13, column: 27, scope: !9668)
!9700 = !DILocation(line: 13, column: 42, scope: !9668)
!9701 = !DILocation(line: 13, column: 19, scope: !9668)
!9702 = !DILocation(line: 13, column: 16, scope: !9668)
!9703 = !DILocation(line: 13, column: 2, scope: !9668)
!9704 = distinct !{!9704, !9703, !9705}
!9705 = !DILocation(line: 19, column: 2, scope: !9668)
!9706 = !DILocation(line: 14, column: 23, scope: !9707)
!9707 = distinct !DILexicalBlock(scope: !9708, file: !9669, line: 14, column: 7)
!9708 = distinct !DILexicalBlock(scope: !9668, file: !9669, line: 13, column: 54)
!9709 = !DILocation(line: 14, column: 10, scope: !9707)
!9710 = !DILocation(line: 18, column: 11, scope: !9708)
!9711 = !DILocation(line: 14, column: 7, scope: !9708)
!9712 = !DILocation(line: 22, column: 1, scope: !9668)
!9713 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1583, file: !1583, line: 193, type: !9714, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1501, retainedNodes: !9723)
!9714 = !DISubroutineType(types: !9715)
!9715 = !{!103, !9716, !154, !22}
!9716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9717, size: 32)
!9717 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9718)
!9718 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1346, line: 37, baseType: !9719)
!9719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1346, line: 32, size: 64, elements: !9720)
!9720 = !{!9721, !9722}
!9721 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !9719, file: !1346, line: 34, baseType: !121, size: 32)
!9722 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !9719, file: !1346, line: 36, baseType: !121, size: 32, offset: 32)
!9723 = !{!9724, !9725, !9726, !9727, !9728, !9729, !9730, !9731, !9733}
!9724 = !DILocalVariable(name: "pins", arg: 1, scope: !9713, file: !1583, line: 193, type: !9716)
!9725 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !9713, file: !1583, line: 193, type: !154)
!9726 = !DILocalVariable(name: "reg", arg: 3, scope: !9713, file: !1583, line: 194, type: !22)
!9727 = !DILocalVariable(name: "pin", scope: !9713, file: !1583, line: 196, type: !121)
!9728 = !DILocalVariable(name: "mux", scope: !9713, file: !1583, line: 196, type: !121)
!9729 = !DILocalVariable(name: "pin_cgf", scope: !9713, file: !1583, line: 197, type: !121)
!9730 = !DILocalVariable(name: "ret", scope: !9713, file: !1583, line: 198, type: !103)
!9731 = !DILocalVariable(name: "i", scope: !9732, file: !1583, line: 209, type: !154)
!9732 = distinct !DILexicalBlock(scope: !9713, file: !1583, line: 209, column: 2)
!9733 = !DILocalVariable(name: "gpio_out", scope: !9734, file: !1583, line: 239, type: !121)
!9734 = distinct !DILexicalBlock(scope: !9735, file: !1583, line: 238, column: 55)
!9735 = distinct !DILexicalBlock(scope: !9736, file: !1583, line: 238, column: 14)
!9736 = distinct !DILexicalBlock(scope: !9737, file: !1583, line: 236, column: 14)
!9737 = distinct !DILexicalBlock(scope: !9738, file: !1583, line: 234, column: 7)
!9738 = distinct !DILexicalBlock(scope: !9739, file: !1583, line: 209, column: 41)
!9739 = distinct !DILexicalBlock(scope: !9732, file: !1583, line: 209, column: 2)
!9740 = !DILocation(line: 0, scope: !9713)
!9741 = !DILocation(line: 0, scope: !9732)
!9742 = !DILocation(line: 209, column: 25, scope: !9739)
!9743 = !DILocation(line: 209, column: 2, scope: !9732)
!9744 = distinct !{!9744, !9743, !9745}
!9745 = !DILocation(line: 259, column: 2, scope: !9732)
!9746 = !DILocation(line: 210, column: 17, scope: !9738)
!9747 = !DILocation(line: 234, column: 7, scope: !9737)
!9748 = !DILocation(line: 234, column: 33, scope: !9737)
!9749 = !DILocation(line: 234, column: 7, scope: !9738)
!9750 = !DILocation(line: 235, column: 22, scope: !9751)
!9751 = distinct !DILexicalBlock(scope: !9737, file: !1583, line: 234, column: 49)
!9752 = !DILocation(line: 235, column: 29, scope: !9751)
!9753 = !DILocation(line: 236, column: 3, scope: !9751)
!9754 = !DILocation(line: 236, column: 14, scope: !9737)
!9755 = !DILocation(line: 239, column: 32, scope: !9734)
!9756 = !DILocation(line: 0, scope: !9734)
!9757 = !DILocation(line: 241, column: 8, scope: !9734)
!9758 = !DILocation(line: 246, column: 3, scope: !9734)
!9759 = !DILocation(line: 252, column: 9, scope: !9738)
!9760 = !DILocation(line: 255, column: 9, scope: !9738)
!9761 = !DILocation(line: 256, column: 11, scope: !9762)
!9762 = distinct !DILexicalBlock(scope: !9738, file: !1583, line: 256, column: 7)
!9763 = !DILocation(line: 209, column: 37, scope: !9739)
!9764 = !DILocation(line: 256, column: 7, scope: !9738)
!9765 = !DILocation(line: 262, column: 1, scope: !9713)
!9766 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1583, file: !1583, line: 176, type: !9767, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1501, retainedNodes: !9769)
!9767 = !DISubroutineType(types: !9768)
!9768 = !{!103, !121, !121, !121}
!9769 = !{!9770, !9771, !9772, !9773}
!9770 = !DILocalVariable(name: "pin", arg: 1, scope: !9766, file: !1583, line: 176, type: !121)
!9771 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !9766, file: !1583, line: 176, type: !121)
!9772 = !DILocalVariable(name: "pin_func", arg: 3, scope: !9766, file: !1583, line: 176, type: !121)
!9773 = !DILocalVariable(name: "port_device", scope: !9766, file: !1583, line: 178, type: !1513)
!9774 = !DILocation(line: 0, scope: !9766)
!9775 = !DILocation(line: 180, column: 22, scope: !9776)
!9776 = distinct !DILexicalBlock(scope: !9766, file: !1583, line: 180, column: 6)
!9777 = !DILocation(line: 180, column: 6, scope: !9766)
!9778 = !DILocation(line: 180, column: 6, scope: !9776)
!9779 = !DILocation(line: 184, column: 16, scope: !9766)
!9780 = !DILocation(line: 186, column: 19, scope: !9781)
!9781 = distinct !DILexicalBlock(scope: !9766, file: !1583, line: 186, column: 6)
!9782 = !DILocation(line: 186, column: 28, scope: !9781)
!9783 = !DILocation(line: 186, column: 33, scope: !9781)
!9784 = !DILocation(line: 186, column: 6, scope: !9766)
!9785 = !DILocation(line: 190, column: 43, scope: !9766)
!9786 = !DILocation(line: 190, column: 9, scope: !9766)
!9787 = !DILocation(line: 190, column: 2, scope: !9766)
!9788 = !DILocation(line: 191, column: 1, scope: !9766)
!9789 = distinct !DISubprogram(name: "device_is_ready", scope: !3080, file: !3080, line: 47, type: !9790, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1501, retainedNodes: !9792)
!9790 = !DISubroutineType(types: !9791)
!9791 = !{!157, !1513}
!9792 = !{!9793}
!9793 = !DILocalVariable(name: "dev", arg: 1, scope: !9789, file: !3080, line: 47, type: !1513)
!9794 = !DILocation(line: 0, scope: !9789)
!9795 = !DILocation(line: 55, column: 2, scope: !9796)
!9796 = distinct !DILexicalBlock(scope: !9789, file: !3080, line: 55, column: 2)
!9797 = !{i64 2149429872}
!9798 = !DILocation(line: 56, column: 9, scope: !9789)
!9799 = !DILocation(line: 56, column: 2, scope: !9789)
!9800 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !9790, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1501, retainedNodes: !9801)
!9801 = !{!9802}
!9802 = !DILocalVariable(name: "dev", arg: 1, scope: !9800, file: !141, line: 730, type: !1513)
!9803 = !DILocation(line: 0, scope: !9800)
!9804 = !DILocation(line: 732, column: 9, scope: !9800)
!9805 = !DILocation(line: 732, column: 2, scope: !9800)
!9806 = distinct !DISubprogram(name: "SystemInit", scope: !1631, file: !1631, line: 167, type: !2928, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1591, retainedNodes: !322)
!9807 = !DILocation(line: 182, column: 1, scope: !9806)
!9808 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1631, file: !1631, line: 220, type: !2928, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1591, retainedNodes: !9809)
!9809 = !{!9810, !9811, !9812, !9813, !9814}
!9810 = !DILocalVariable(name: "tmp", scope: !9808, file: !1631, line: 222, type: !121)
!9811 = !DILocalVariable(name: "pllvco", scope: !9808, file: !1631, line: 222, type: !121)
!9812 = !DILocalVariable(name: "pllp", scope: !9808, file: !1631, line: 222, type: !121)
!9813 = !DILocalVariable(name: "pllsource", scope: !9808, file: !1631, line: 222, type: !121)
!9814 = !DILocalVariable(name: "pllm", scope: !9808, file: !1631, line: 222, type: !121)
!9815 = !DILocation(line: 0, scope: !9808)
!9816 = !DILocation(line: 225, column: 14, scope: !9808)
!9817 = !DILocation(line: 225, column: 19, scope: !9808)
!9818 = !DILocation(line: 227, column: 3, scope: !9808)
!9819 = !DILocation(line: 234, column: 7, scope: !9820)
!9820 = distinct !DILexicalBlock(scope: !9808, file: !1631, line: 228, column: 3)
!9821 = !DILocation(line: 240, column: 25, scope: !9820)
!9822 = !DILocation(line: 241, column: 19, scope: !9820)
!9823 = !DILocation(line: 241, column: 27, scope: !9820)
!9824 = !DILocation(line: 243, column: 21, scope: !9825)
!9825 = distinct !DILexicalBlock(scope: !9820, file: !1631, line: 243, column: 11)
!9826 = !DILocation(line: 0, scope: !9825)
!9827 = !DILocation(line: 254, column: 22, scope: !9820)
!9828 = !DILocation(line: 254, column: 62, scope: !9820)
!9829 = !DILocation(line: 255, column: 31, scope: !9820)
!9830 = !DILocation(line: 256, column: 7, scope: !9820)
!9831 = !DILocation(line: 0, scope: !9820)
!9832 = !DILocation(line: 263, column: 30, scope: !9808)
!9833 = !DILocation(line: 263, column: 52, scope: !9808)
!9834 = !DILocation(line: 263, column: 9, scope: !9808)
!9835 = !DILocation(line: 265, column: 19, scope: !9808)
!9836 = !DILocation(line: 266, column: 1, scope: !9808)
!9837 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !9838, file: !9838, line: 200, type: !9839, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2741, retainedNodes: !322)
!9838 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9839 = !DISubroutineType(types: !9840)
!9840 = !{!9841}
!9841 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2745, line: 44, baseType: !2744)
!9842 = !DILocation(line: 202, column: 3, scope: !9837)
!9843 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !9838, file: !9838, line: 219, type: !9844, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2741, retainedNodes: !9868)
!9844 = !DISubroutineType(types: !9845)
!9845 = !{!9841, !9846}
!9846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9847, size: 32)
!9847 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !9848, line: 70, baseType: !9849)
!9848 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9849 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9848, line: 49, size: 384, elements: !9850)
!9850 = !{!9851, !9852, !9853, !9854, !9855, !9856, !9857}
!9851 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !9849, file: !9848, line: 51, baseType: !121, size: 32)
!9852 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !9849, file: !9848, line: 54, baseType: !121, size: 32, offset: 32)
!9853 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !9849, file: !9848, line: 57, baseType: !121, size: 32, offset: 64)
!9854 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !9849, file: !9848, line: 60, baseType: !121, size: 32, offset: 96)
!9855 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !9849, file: !9848, line: 63, baseType: !121, size: 32, offset: 128)
!9856 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !9849, file: !9848, line: 66, baseType: !121, size: 32, offset: 160)
!9857 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !9849, file: !9848, line: 69, baseType: !9858, size: 192, offset: 192)
!9858 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !9859, line: 73, baseType: !9860)
!9859 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9860 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9859, line: 45, size: 192, elements: !9861)
!9861 = !{!9862, !9863, !9864, !9865, !9866, !9867}
!9862 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !9860, file: !9859, line: 47, baseType: !121, size: 32)
!9863 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !9860, file: !9859, line: 50, baseType: !121, size: 32, offset: 32)
!9864 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !9860, file: !9859, line: 53, baseType: !121, size: 32, offset: 64)
!9865 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !9860, file: !9859, line: 56, baseType: !121, size: 32, offset: 96)
!9866 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !9860, file: !9859, line: 60, baseType: !121, size: 32, offset: 128)
!9867 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !9860, file: !9859, line: 63, baseType: !121, size: 32, offset: 160)
!9868 = !{!9869, !9870, !9871, !9872, !9876}
!9869 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !9843, file: !9838, line: 219, type: !9846)
!9870 = !DILocalVariable(name: "tickstart", scope: !9843, file: !9838, line: 221, type: !121)
!9871 = !DILocalVariable(name: "pll_config", scope: !9843, file: !9838, line: 221, type: !121)
!9872 = !DILocalVariable(name: "pwrclkchanged", scope: !9873, file: !9838, line: 391, type: !9875)
!9873 = distinct !DILexicalBlock(scope: !9874, file: !9838, line: 390, column: 3)
!9874 = distinct !DILexicalBlock(scope: !9843, file: !9838, line: 389, column: 6)
!9875 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !654, line: 188, baseType: !2751)
!9876 = !DILocalVariable(name: "tmpreg", scope: !9877, file: !9838, line: 400, type: !120)
!9877 = distinct !DILexicalBlock(scope: !9878, file: !9838, line: 400, column: 7)
!9878 = distinct !DILexicalBlock(scope: !9879, file: !9838, line: 399, column: 5)
!9879 = distinct !DILexicalBlock(scope: !9873, file: !9838, line: 398, column: 8)
!9880 = !DILocation(line: 0, scope: !9843)
!9881 = !DILocation(line: 224, column: 24, scope: !9882)
!9882 = distinct !DILexicalBlock(scope: !9843, file: !9838, line: 224, column: 6)
!9883 = !DILocation(line: 224, column: 6, scope: !9843)
!9884 = !DILocation(line: 232, column: 27, scope: !9885)
!9885 = distinct !DILexicalBlock(scope: !9843, file: !9838, line: 232, column: 6)
!9886 = !DILocation(line: 232, column: 43, scope: !9885)
!9887 = !DILocation(line: 232, column: 69, scope: !9885)
!9888 = !DILocation(line: 232, column: 6, scope: !9843)
!9889 = !DILocation(line: 237, column: 9, scope: !9890)
!9890 = distinct !DILexicalBlock(scope: !9891, file: !9838, line: 237, column: 8)
!9891 = distinct !DILexicalBlock(scope: !9885, file: !9838, line: 233, column: 3)
!9892 = !DILocation(line: 237, column: 39, scope: !9890)
!9893 = !DILocation(line: 237, column: 60, scope: !9890)
!9894 = !DILocation(line: 238, column: 9, scope: !9890)
!9895 = !DILocation(line: 238, column: 39, scope: !9890)
!9896 = !DILocation(line: 238, column: 60, scope: !9890)
!9897 = !DILocation(line: 238, column: 70, scope: !9890)
!9898 = !DILocation(line: 238, column: 78, scope: !9890)
!9899 = !DILocation(line: 238, column: 100, scope: !9890)
!9900 = !DILocation(line: 237, column: 8, scope: !9891)
!9901 = !DILocation(line: 240, column: 11, scope: !9902)
!9902 = distinct !DILexicalBlock(scope: !9903, file: !9838, line: 240, column: 10)
!9903 = distinct !DILexicalBlock(scope: !9890, file: !9838, line: 239, column: 5)
!9904 = !DILocation(line: 240, column: 57, scope: !9902)
!9905 = !DILocation(line: 240, column: 80, scope: !9902)
!9906 = !DILocation(line: 240, column: 89, scope: !9902)
!9907 = !DILocation(line: 240, column: 10, scope: !9903)
!9908 = !DILocation(line: 248, column: 7, scope: !9909)
!9909 = distinct !DILexicalBlock(scope: !9910, file: !9838, line: 248, column: 7)
!9910 = distinct !DILexicalBlock(scope: !9911, file: !9838, line: 248, column: 7)
!9911 = distinct !DILexicalBlock(scope: !9890, file: !9838, line: 246, column: 5)
!9912 = !DILocation(line: 248, column: 7, scope: !9910)
!9913 = !DILocation(line: 248, column: 7, scope: !9914)
!9914 = distinct !DILexicalBlock(scope: !9909, file: !9838, line: 248, column: 7)
!9915 = !DILocation(line: 248, column: 7, scope: !9916)
!9916 = distinct !DILexicalBlock(scope: !9917, file: !9838, line: 248, column: 7)
!9917 = distinct !DILexicalBlock(scope: !9909, file: !9838, line: 248, column: 7)
!9918 = !DILocation(line: 248, column: 7, scope: !9919)
!9919 = distinct !DILexicalBlock(scope: !9917, file: !9838, line: 248, column: 7)
!9920 = !DILocation(line: 0, scope: !9909)
!9921 = !DILocation(line: 251, column: 30, scope: !9922)
!9922 = distinct !DILexicalBlock(scope: !9911, file: !9838, line: 251, column: 10)
!9923 = !DILocation(line: 251, column: 40, scope: !9922)
!9924 = !DILocation(line: 0, scope: !9922)
!9925 = !DILocation(line: 251, column: 10, scope: !9911)
!9926 = !DILocation(line: 257, column: 15, scope: !9927)
!9927 = distinct !DILexicalBlock(scope: !9922, file: !9838, line: 252, column: 7)
!9928 = !DILocation(line: 257, column: 51, scope: !9927)
!9929 = !DILocation(line: 257, column: 9, scope: !9927)
!9930 = !DILocation(line: 259, column: 15, scope: !9931)
!9931 = distinct !DILexicalBlock(scope: !9932, file: !9838, line: 259, column: 14)
!9932 = distinct !DILexicalBlock(scope: !9927, file: !9838, line: 258, column: 9)
!9933 = !DILocation(line: 259, column: 29, scope: !9931)
!9934 = !DILocation(line: 259, column: 43, scope: !9931)
!9935 = !DILocation(line: 259, column: 14, scope: !9932)
!9936 = distinct !{!9936, !9929, !9937}
!9937 = !DILocation(line: 263, column: 9, scope: !9927)
!9938 = !DILocation(line: 271, column: 15, scope: !9939)
!9939 = distinct !DILexicalBlock(scope: !9922, file: !9838, line: 266, column: 7)
!9940 = !DILocation(line: 271, column: 9, scope: !9939)
!9941 = !DILocation(line: 273, column: 15, scope: !9942)
!9942 = distinct !DILexicalBlock(scope: !9943, file: !9838, line: 273, column: 14)
!9943 = distinct !DILexicalBlock(scope: !9939, file: !9838, line: 272, column: 9)
!9944 = !DILocation(line: 273, column: 29, scope: !9942)
!9945 = !DILocation(line: 273, column: 43, scope: !9942)
!9946 = !DILocation(line: 273, column: 14, scope: !9943)
!9947 = distinct !{!9947, !9940, !9948}
!9948 = !DILocation(line: 277, column: 9, scope: !9939)
!9949 = !DILocation(line: 282, column: 27, scope: !9950)
!9950 = distinct !DILexicalBlock(scope: !9843, file: !9838, line: 282, column: 6)
!9951 = !DILocation(line: 282, column: 43, scope: !9950)
!9952 = !DILocation(line: 282, column: 69, scope: !9950)
!9953 = !DILocation(line: 282, column: 6, scope: !9843)
!9954 = !DILocation(line: 289, column: 9, scope: !9955)
!9955 = distinct !DILexicalBlock(scope: !9956, file: !9838, line: 289, column: 8)
!9956 = distinct !DILexicalBlock(scope: !9950, file: !9838, line: 283, column: 3)
!9957 = !DILocation(line: 289, column: 39, scope: !9955)
!9958 = !DILocation(line: 289, column: 60, scope: !9955)
!9959 = !DILocation(line: 290, column: 9, scope: !9955)
!9960 = !DILocation(line: 290, column: 39, scope: !9955)
!9961 = !DILocation(line: 290, column: 60, scope: !9955)
!9962 = !DILocation(line: 290, column: 70, scope: !9955)
!9963 = !DILocation(line: 290, column: 78, scope: !9955)
!9964 = !DILocation(line: 290, column: 100, scope: !9955)
!9965 = !DILocation(line: 289, column: 8, scope: !9956)
!9966 = !DILocation(line: 293, column: 11, scope: !9967)
!9967 = distinct !DILexicalBlock(scope: !9968, file: !9838, line: 293, column: 10)
!9968 = distinct !DILexicalBlock(scope: !9955, file: !9838, line: 291, column: 5)
!9969 = !DILocation(line: 293, column: 57, scope: !9967)
!9970 = !DILocation(line: 293, column: 80, scope: !9967)
!9971 = !DILocation(line: 293, column: 89, scope: !9967)
!9972 = !DILocation(line: 293, column: 10, scope: !9968)
!9973 = !DILocation(line: 307, column: 30, scope: !9974)
!9974 = distinct !DILexicalBlock(scope: !9975, file: !9838, line: 307, column: 10)
!9975 = distinct !DILexicalBlock(scope: !9955, file: !9838, line: 305, column: 5)
!9976 = !DILocation(line: 307, column: 39, scope: !9974)
!9977 = !DILocation(line: 307, column: 10, scope: !9975)
!9978 = !DILocation(line: 310, column: 9, scope: !9979)
!9979 = distinct !DILexicalBlock(scope: !9974, file: !9838, line: 308, column: 7)
!9980 = !DILocation(line: 313, column: 21, scope: !9979)
!9981 = !DILocation(line: 316, column: 9, scope: !9979)
!9982 = !DILocation(line: 316, column: 15, scope: !9979)
!9983 = !DILocation(line: 316, column: 51, scope: !9979)
!9984 = !DILocation(line: 318, column: 15, scope: !9985)
!9985 = distinct !DILexicalBlock(scope: !9986, file: !9838, line: 318, column: 14)
!9986 = distinct !DILexicalBlock(scope: !9979, file: !9838, line: 317, column: 9)
!9987 = !DILocation(line: 318, column: 29, scope: !9985)
!9988 = !DILocation(line: 318, column: 43, scope: !9985)
!9989 = !DILocation(line: 318, column: 14, scope: !9986)
!9990 = distinct !{!9990, !9981, !9991}
!9991 = !DILocation(line: 322, column: 9, scope: !9979)
!9992 = !DILocation(line: 330, column: 9, scope: !9993)
!9993 = distinct !DILexicalBlock(scope: !9974, file: !9838, line: 328, column: 7)
!9994 = !DILocation(line: 333, column: 21, scope: !9993)
!9995 = !DILocation(line: 336, column: 9, scope: !9993)
!9996 = !DILocation(line: 336, column: 15, scope: !9993)
!9997 = !DILocation(line: 338, column: 15, scope: !9998)
!9998 = distinct !DILexicalBlock(scope: !9999, file: !9838, line: 338, column: 14)
!9999 = distinct !DILexicalBlock(scope: !9993, file: !9838, line: 337, column: 9)
!10000 = !DILocation(line: 338, column: 29, scope: !9998)
!10001 = !DILocation(line: 338, column: 43, scope: !9998)
!10002 = !DILocation(line: 338, column: 14, scope: !9999)
!10003 = distinct !{!10003, !9995, !10004}
!10004 = !DILocation(line: 342, column: 9, scope: !9993)
!10005 = !DILocation(line: 0, scope: !9955)
!10006 = !DILocation(line: 347, column: 27, scope: !10007)
!10007 = distinct !DILexicalBlock(scope: !9843, file: !9838, line: 347, column: 6)
!10008 = !DILocation(line: 347, column: 43, scope: !10007)
!10009 = !DILocation(line: 347, column: 69, scope: !10007)
!10010 = !DILocation(line: 347, column: 6, scope: !9843)
!10011 = !DILocation(line: 353, column: 28, scope: !10012)
!10012 = distinct !DILexicalBlock(scope: !10013, file: !9838, line: 353, column: 8)
!10013 = distinct !DILexicalBlock(scope: !10007, file: !9838, line: 348, column: 3)
!10014 = !DILocation(line: 353, column: 37, scope: !10012)
!10015 = !DILocation(line: 353, column: 8, scope: !10013)
!10016 = !DILocation(line: 356, column: 7, scope: !10017)
!10017 = distinct !DILexicalBlock(scope: !10012, file: !9838, line: 354, column: 5)
!10018 = !DILocation(line: 359, column: 19, scope: !10017)
!10019 = !DILocation(line: 362, column: 7, scope: !10017)
!10020 = !DILocation(line: 362, column: 13, scope: !10017)
!10021 = !DILocation(line: 362, column: 49, scope: !10017)
!10022 = !DILocation(line: 364, column: 13, scope: !10023)
!10023 = distinct !DILexicalBlock(scope: !10024, file: !9838, line: 364, column: 12)
!10024 = distinct !DILexicalBlock(scope: !10017, file: !9838, line: 363, column: 7)
!10025 = !DILocation(line: 364, column: 27, scope: !10023)
!10026 = !DILocation(line: 364, column: 41, scope: !10023)
!10027 = !DILocation(line: 364, column: 12, scope: !10024)
!10028 = distinct !{!10028, !10019, !10029}
!10029 = !DILocation(line: 368, column: 7, scope: !10017)
!10030 = !DILocation(line: 373, column: 7, scope: !10031)
!10031 = distinct !DILexicalBlock(scope: !10012, file: !9838, line: 371, column: 5)
!10032 = !DILocation(line: 376, column: 19, scope: !10031)
!10033 = !DILocation(line: 379, column: 7, scope: !10031)
!10034 = !DILocation(line: 379, column: 13, scope: !10031)
!10035 = !DILocation(line: 381, column: 13, scope: !10036)
!10036 = distinct !DILexicalBlock(scope: !10037, file: !9838, line: 381, column: 12)
!10037 = distinct !DILexicalBlock(scope: !10031, file: !9838, line: 380, column: 7)
!10038 = !DILocation(line: 381, column: 27, scope: !10036)
!10039 = !DILocation(line: 381, column: 41, scope: !10036)
!10040 = !DILocation(line: 381, column: 12, scope: !10037)
!10041 = distinct !{!10041, !10033, !10042}
!10042 = !DILocation(line: 385, column: 7, scope: !10031)
!10043 = !DILocation(line: 389, column: 27, scope: !9874)
!10044 = !DILocation(line: 389, column: 43, scope: !9874)
!10045 = !DILocation(line: 389, column: 69, scope: !9874)
!10046 = !DILocation(line: 389, column: 6, scope: !9843)
!10047 = !DILocation(line: 0, scope: !9873)
!10048 = !DILocation(line: 398, column: 8, scope: !9879)
!10049 = !DILocation(line: 398, column: 8, scope: !9873)
!10050 = !DILocation(line: 400, column: 7, scope: !9877)
!10051 = !DILocation(line: 400, column: 7, scope: !9878)
!10052 = !DILocation(line: 402, column: 5, scope: !9878)
!10053 = !DILocation(line: 404, column: 8, scope: !10054)
!10054 = distinct !DILexicalBlock(scope: !9873, file: !9838, line: 404, column: 8)
!10055 = !DILocation(line: 404, column: 8, scope: !9873)
!10056 = !DILocation(line: 407, column: 7, scope: !10057)
!10057 = distinct !DILexicalBlock(scope: !10054, file: !9838, line: 405, column: 5)
!10058 = !DILocation(line: 410, column: 19, scope: !10057)
!10059 = !DILocation(line: 412, column: 7, scope: !10057)
!10060 = !DILocation(line: 412, column: 13, scope: !10057)
!10061 = !DILocation(line: 414, column: 13, scope: !10062)
!10062 = distinct !DILexicalBlock(scope: !10063, file: !9838, line: 414, column: 12)
!10063 = distinct !DILexicalBlock(scope: !10057, file: !9838, line: 413, column: 7)
!10064 = !DILocation(line: 414, column: 27, scope: !10062)
!10065 = !DILocation(line: 414, column: 40, scope: !10062)
!10066 = !DILocation(line: 414, column: 12, scope: !10063)
!10067 = distinct !{!10067, !10059, !10068}
!10068 = !DILocation(line: 418, column: 7, scope: !10057)
!10069 = !DILocation(line: 422, column: 5, scope: !10070)
!10070 = distinct !DILexicalBlock(scope: !10071, file: !9838, line: 422, column: 5)
!10071 = distinct !DILexicalBlock(scope: !9873, file: !9838, line: 422, column: 5)
!10072 = !DILocation(line: 422, column: 5, scope: !10071)
!10073 = !DILocation(line: 422, column: 5, scope: !10074)
!10074 = distinct !DILexicalBlock(scope: !10070, file: !9838, line: 422, column: 5)
!10075 = !DILocation(line: 422, column: 5, scope: !10076)
!10076 = distinct !DILexicalBlock(scope: !10077, file: !9838, line: 422, column: 5)
!10077 = distinct !DILexicalBlock(scope: !10070, file: !9838, line: 422, column: 5)
!10078 = !DILocation(line: 422, column: 5, scope: !10079)
!10079 = distinct !DILexicalBlock(scope: !10077, file: !9838, line: 422, column: 5)
!10080 = !DILocation(line: 0, scope: !10070)
!10081 = !DILocation(line: 424, column: 28, scope: !10082)
!10082 = distinct !DILexicalBlock(scope: !9873, file: !9838, line: 424, column: 8)
!10083 = !DILocation(line: 424, column: 38, scope: !10082)
!10084 = !DILocation(line: 0, scope: !10082)
!10085 = !DILocation(line: 424, column: 8, scope: !9873)
!10086 = !DILocation(line: 430, column: 13, scope: !10087)
!10087 = distinct !DILexicalBlock(scope: !10082, file: !9838, line: 425, column: 5)
!10088 = !DILocation(line: 430, column: 49, scope: !10087)
!10089 = !DILocation(line: 430, column: 7, scope: !10087)
!10090 = !DILocation(line: 432, column: 13, scope: !10091)
!10091 = distinct !DILexicalBlock(scope: !10092, file: !9838, line: 432, column: 12)
!10092 = distinct !DILexicalBlock(scope: !10087, file: !9838, line: 431, column: 7)
!10093 = !DILocation(line: 432, column: 27, scope: !10091)
!10094 = !DILocation(line: 432, column: 41, scope: !10091)
!10095 = !DILocation(line: 432, column: 12, scope: !10092)
!10096 = distinct !{!10096, !10089, !10097}
!10097 = !DILocation(line: 436, column: 7, scope: !10087)
!10098 = !DILocation(line: 444, column: 13, scope: !10099)
!10099 = distinct !DILexicalBlock(scope: !10082, file: !9838, line: 439, column: 5)
!10100 = !DILocation(line: 444, column: 7, scope: !10099)
!10101 = !DILocation(line: 446, column: 13, scope: !10102)
!10102 = distinct !DILexicalBlock(scope: !10103, file: !9838, line: 446, column: 12)
!10103 = distinct !DILexicalBlock(scope: !10099, file: !9838, line: 445, column: 7)
!10104 = !DILocation(line: 446, column: 27, scope: !10102)
!10105 = !DILocation(line: 446, column: 41, scope: !10102)
!10106 = !DILocation(line: 446, column: 12, scope: !10103)
!10107 = distinct !{!10107, !10100, !10108}
!10108 = !DILocation(line: 450, column: 7, scope: !10099)
!10109 = !DILocation(line: 454, column: 8, scope: !9873)
!10110 = !DILocation(line: 456, column: 7, scope: !10111)
!10111 = distinct !DILexicalBlock(scope: !10112, file: !9838, line: 455, column: 5)
!10112 = distinct !DILexicalBlock(scope: !9873, file: !9838, line: 454, column: 8)
!10113 = !DILocation(line: 457, column: 5, scope: !10111)
!10114 = !DILocation(line: 462, column: 31, scope: !10115)
!10115 = distinct !DILexicalBlock(scope: !9843, file: !9838, line: 462, column: 7)
!10116 = !DILocation(line: 462, column: 41, scope: !10115)
!10117 = !DILocation(line: 462, column: 7, scope: !9843)
!10118 = !DILocation(line: 465, column: 8, scope: !10119)
!10119 = distinct !DILexicalBlock(scope: !10120, file: !9838, line: 465, column: 8)
!10120 = distinct !DILexicalBlock(scope: !10115, file: !9838, line: 463, column: 3)
!10121 = !DILocation(line: 465, column: 38, scope: !10119)
!10122 = !DILocation(line: 465, column: 8, scope: !10120)
!10123 = !DILocation(line: 467, column: 44, scope: !10124)
!10124 = distinct !DILexicalBlock(scope: !10125, file: !9838, line: 467, column: 10)
!10125 = distinct !DILexicalBlock(scope: !10119, file: !9838, line: 466, column: 5)
!10126 = !DILocation(line: 0, scope: !10124)
!10127 = !DILocation(line: 467, column: 10, scope: !10125)
!10128 = !DILocation(line: 483, column: 15, scope: !10129)
!10129 = distinct !DILexicalBlock(scope: !10124, file: !9838, line: 468, column: 7)
!10130 = !DILocation(line: 483, column: 9, scope: !10129)
!10131 = !DILocation(line: 485, column: 15, scope: !10132)
!10132 = distinct !DILexicalBlock(scope: !10133, file: !9838, line: 485, column: 14)
!10133 = distinct !DILexicalBlock(scope: !10129, file: !9838, line: 484, column: 9)
!10134 = !DILocation(line: 485, column: 29, scope: !10132)
!10135 = !DILocation(line: 485, column: 43, scope: !10132)
!10136 = !DILocation(line: 485, column: 14, scope: !10133)
!10137 = distinct !{!10137, !10130, !10138}
!10138 = !DILocation(line: 489, column: 9, scope: !10129)
!10139 = !DILocation(line: 492, column: 9, scope: !10129)
!10140 = !DILocation(line: 498, column: 9, scope: !10129)
!10141 = !DILocation(line: 501, column: 21, scope: !10129)
!10142 = !DILocation(line: 504, column: 9, scope: !10129)
!10143 = !DILocation(line: 504, column: 15, scope: !10129)
!10144 = !DILocation(line: 504, column: 51, scope: !10129)
!10145 = !DILocation(line: 506, column: 15, scope: !10146)
!10146 = distinct !DILexicalBlock(scope: !10147, file: !9838, line: 506, column: 14)
!10147 = distinct !DILexicalBlock(scope: !10129, file: !9838, line: 505, column: 9)
!10148 = !DILocation(line: 506, column: 29, scope: !10146)
!10149 = !DILocation(line: 506, column: 43, scope: !10146)
!10150 = !DILocation(line: 506, column: 14, scope: !10147)
!10151 = distinct !{!10151, !10142, !10152}
!10152 = !DILocation(line: 510, column: 9, scope: !10129)
!10153 = !DILocation(line: 521, column: 15, scope: !10154)
!10154 = distinct !DILexicalBlock(scope: !10124, file: !9838, line: 513, column: 7)
!10155 = !DILocation(line: 521, column: 9, scope: !10154)
!10156 = !DILocation(line: 523, column: 15, scope: !10157)
!10157 = distinct !DILexicalBlock(scope: !10158, file: !9838, line: 523, column: 14)
!10158 = distinct !DILexicalBlock(scope: !10154, file: !9838, line: 522, column: 9)
!10159 = !DILocation(line: 523, column: 29, scope: !10157)
!10160 = !DILocation(line: 523, column: 43, scope: !10157)
!10161 = !DILocation(line: 523, column: 14, scope: !10158)
!10162 = distinct !{!10162, !10155, !10163}
!10163 = !DILocation(line: 527, column: 9, scope: !10154)
!10164 = !DILocation(line: 533, column: 44, scope: !10165)
!10165 = distinct !DILexicalBlock(scope: !10166, file: !9838, line: 533, column: 10)
!10166 = distinct !DILexicalBlock(scope: !10119, file: !9838, line: 531, column: 5)
!10167 = !DILocation(line: 533, column: 10, scope: !10166)
!10168 = !DILocation(line: 540, column: 27, scope: !10169)
!10169 = distinct !DILexicalBlock(scope: !10165, file: !9838, line: 538, column: 7)
!10170 = !DILocation(line: 551, column: 14, scope: !10171)
!10171 = distinct !DILexicalBlock(scope: !10169, file: !9838, line: 550, column: 13)
!10172 = !DILocation(line: 551, column: 81, scope: !10171)
!10173 = !DILocation(line: 551, column: 55, scope: !10171)
!10174 = !DILocation(line: 551, column: 92, scope: !10171)
!10175 = !DILocation(line: 552, column: 14, scope: !10171)
!10176 = !DILocation(line: 552, column: 80, scope: !10171)
!10177 = !DILocation(line: 552, column: 53, scope: !10171)
!10178 = !DILocation(line: 552, column: 111, scope: !10171)
!10179 = !DILocation(line: 553, column: 14, scope: !10171)
!10180 = !DILocation(line: 553, column: 80, scope: !10171)
!10181 = !DILocation(line: 553, column: 86, scope: !10171)
!10182 = !DILocation(line: 553, column: 53, scope: !10171)
!10183 = !DILocation(line: 553, column: 111, scope: !10171)
!10184 = !DILocation(line: 554, column: 14, scope: !10171)
!10185 = !DILocation(line: 554, column: 82, scope: !10171)
!10186 = !DILocation(line: 554, column: 101, scope: !10171)
!10187 = !DILocation(line: 554, column: 53, scope: !10171)
!10188 = !DILocation(line: 554, column: 126, scope: !10171)
!10189 = !DILocation(line: 555, column: 14, scope: !10171)
!10190 = !DILocation(line: 555, column: 80, scope: !10171)
!10191 = !DILocation(line: 555, column: 85, scope: !10171)
!10192 = !DILocation(line: 555, column: 53, scope: !10171)
!10193 = !DILocation(line: 550, column: 13, scope: !10169)
!10194 = !DILocation(line: 563, column: 3, scope: !9843)
!10195 = !DILocation(line: 564, column: 1, scope: !9843)
!10196 = !DISubprogram(name: "HAL_GetTick", scope: !10197, file: !10197, line: 234, type: !5579, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!10197 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10198 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !9838, file: !9838, line: 591, type: !10199, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2741, retainedNodes: !10210)
!10199 = !DISubroutineType(types: !10200)
!10200 = !{!9841, !10201, !121}
!10201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10202, size: 32)
!10202 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !9848, line: 92, baseType: !10203)
!10203 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9848, line: 75, size: 160, elements: !10204)
!10204 = !{!10205, !10206, !10207, !10208, !10209}
!10205 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !10203, file: !9848, line: 77, baseType: !121, size: 32)
!10206 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !10203, file: !9848, line: 80, baseType: !121, size: 32, offset: 32)
!10207 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !10203, file: !9848, line: 83, baseType: !121, size: 32, offset: 64)
!10208 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !10203, file: !9848, line: 86, baseType: !121, size: 32, offset: 96)
!10209 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !10203, file: !9848, line: 89, baseType: !121, size: 32, offset: 128)
!10210 = !{!10211, !10212, !10213}
!10211 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !10198, file: !9838, line: 591, type: !10201)
!10212 = !DILocalVariable(name: "FLatency", arg: 2, scope: !10198, file: !9838, line: 591, type: !121)
!10213 = !DILocalVariable(name: "tickstart", scope: !10198, file: !9838, line: 593, type: !121)
!10214 = !DILocation(line: 0, scope: !10198)
!10215 = !DILocation(line: 596, column: 24, scope: !10216)
!10216 = distinct !DILexicalBlock(scope: !10198, file: !9838, line: 596, column: 6)
!10217 = !DILocation(line: 596, column: 6, scope: !10198)
!10218 = !DILocation(line: 610, column: 17, scope: !10219)
!10219 = distinct !DILexicalBlock(scope: !10198, file: !9838, line: 610, column: 6)
!10220 = !DILocation(line: 610, column: 15, scope: !10219)
!10221 = !DILocation(line: 610, column: 6, scope: !10198)
!10222 = !DILocation(line: 613, column: 5, scope: !10223)
!10223 = distinct !DILexicalBlock(scope: !10219, file: !9838, line: 611, column: 3)
!10224 = !DILocation(line: 617, column: 8, scope: !10225)
!10225 = distinct !DILexicalBlock(scope: !10223, file: !9838, line: 617, column: 8)
!10226 = !DILocation(line: 617, column: 34, scope: !10225)
!10227 = !DILocation(line: 617, column: 8, scope: !10223)
!10228 = !DILocation(line: 624, column: 27, scope: !10229)
!10229 = distinct !DILexicalBlock(scope: !10198, file: !9838, line: 624, column: 6)
!10230 = !DILocation(line: 624, column: 38, scope: !10229)
!10231 = !DILocation(line: 624, column: 60, scope: !10229)
!10232 = !DILocation(line: 624, column: 6, scope: !10198)
!10233 = !DILocation(line: 628, column: 40, scope: !10234)
!10234 = distinct !DILexicalBlock(scope: !10235, file: !9838, line: 628, column: 8)
!10235 = distinct !DILexicalBlock(scope: !10229, file: !9838, line: 625, column: 3)
!10236 = !DILocation(line: 628, column: 63, scope: !10234)
!10237 = !DILocation(line: 628, column: 8, scope: !10235)
!10238 = !DILocation(line: 630, column: 7, scope: !10239)
!10239 = distinct !DILexicalBlock(scope: !10234, file: !9838, line: 629, column: 5)
!10240 = !DILocation(line: 633, column: 29, scope: !10241)
!10241 = distinct !DILexicalBlock(scope: !10235, file: !9838, line: 633, column: 8)
!10242 = !DILocation(line: 631, column: 5, scope: !10239)
!10243 = !DILocation(line: 633, column: 40, scope: !10241)
!10244 = !DILocation(line: 633, column: 63, scope: !10241)
!10245 = !DILocation(line: 633, column: 8, scope: !10235)
!10246 = !DILocation(line: 635, column: 7, scope: !10247)
!10247 = distinct !DILexicalBlock(scope: !10241, file: !9838, line: 634, column: 5)
!10248 = !DILocation(line: 636, column: 5, scope: !10247)
!10249 = !DILocation(line: 639, column: 5, scope: !10235)
!10250 = !DILocation(line: 643, column: 27, scope: !10251)
!10251 = distinct !DILexicalBlock(scope: !10198, file: !9838, line: 643, column: 6)
!10252 = !DILocation(line: 640, column: 3, scope: !10235)
!10253 = !DILocation(line: 643, column: 38, scope: !10251)
!10254 = !DILocation(line: 643, column: 62, scope: !10251)
!10255 = !DILocation(line: 643, column: 6, scope: !10198)
!10256 = !DILocation(line: 648, column: 27, scope: !10257)
!10257 = distinct !DILexicalBlock(scope: !10258, file: !9838, line: 648, column: 8)
!10258 = distinct !DILexicalBlock(scope: !10251, file: !9838, line: 644, column: 3)
!10259 = !DILocation(line: 648, column: 8, scope: !10258)
!10260 = !DILocation(line: 651, column: 10, scope: !10261)
!10261 = distinct !DILexicalBlock(scope: !10262, file: !9838, line: 651, column: 10)
!10262 = distinct !DILexicalBlock(scope: !10257, file: !9838, line: 649, column: 5)
!10263 = !DILocation(line: 651, column: 46, scope: !10261)
!10264 = !DILocation(line: 651, column: 10, scope: !10262)
!10265 = !DILocation(line: 661, column: 10, scope: !10266)
!10266 = distinct !DILexicalBlock(scope: !10267, file: !9838, line: 661, column: 10)
!10267 = distinct !DILexicalBlock(scope: !10268, file: !9838, line: 659, column: 5)
!10268 = distinct !DILexicalBlock(scope: !10257, file: !9838, line: 657, column: 13)
!10269 = !DILocation(line: 661, column: 46, scope: !10266)
!10270 = !DILocation(line: 661, column: 10, scope: !10267)
!10271 = !DILocation(line: 670, column: 10, scope: !10272)
!10272 = distinct !DILexicalBlock(scope: !10273, file: !9838, line: 670, column: 10)
!10273 = distinct !DILexicalBlock(scope: !10268, file: !9838, line: 668, column: 5)
!10274 = !DILocation(line: 670, column: 46, scope: !10272)
!10275 = !DILocation(line: 670, column: 10, scope: !10273)
!10276 = !DILocation(line: 676, column: 5, scope: !10258)
!10277 = !DILocation(line: 679, column: 17, scope: !10258)
!10278 = !DILocation(line: 681, column: 5, scope: !10258)
!10279 = !DILocation(line: 681, column: 12, scope: !10258)
!10280 = !DILocation(line: 681, column: 65, scope: !10258)
!10281 = !DILocation(line: 681, column: 78, scope: !10258)
!10282 = !DILocation(line: 681, column: 42, scope: !10258)
!10283 = !DILocation(line: 683, column: 12, scope: !10284)
!10284 = distinct !DILexicalBlock(scope: !10285, file: !9838, line: 683, column: 11)
!10285 = distinct !DILexicalBlock(scope: !10258, file: !9838, line: 682, column: 5)
!10286 = !DILocation(line: 683, column: 26, scope: !10284)
!10287 = !DILocation(line: 683, column: 39, scope: !10284)
!10288 = !DILocation(line: 683, column: 11, scope: !10285)
!10289 = distinct !{!10289, !10278, !10290}
!10290 = !DILocation(line: 687, column: 5, scope: !10258)
!10291 = !DILocation(line: 691, column: 17, scope: !10292)
!10292 = distinct !DILexicalBlock(scope: !10198, file: !9838, line: 691, column: 6)
!10293 = !DILocation(line: 691, column: 15, scope: !10292)
!10294 = !DILocation(line: 691, column: 6, scope: !10198)
!10295 = !DILocation(line: 694, column: 5, scope: !10296)
!10296 = distinct !DILexicalBlock(scope: !10292, file: !9838, line: 692, column: 3)
!10297 = !DILocation(line: 698, column: 8, scope: !10298)
!10298 = distinct !DILexicalBlock(scope: !10296, file: !9838, line: 698, column: 8)
!10299 = !DILocation(line: 698, column: 34, scope: !10298)
!10300 = !DILocation(line: 698, column: 8, scope: !10296)
!10301 = !DILocation(line: 705, column: 27, scope: !10302)
!10302 = distinct !DILexicalBlock(scope: !10198, file: !9838, line: 705, column: 6)
!10303 = !DILocation(line: 705, column: 38, scope: !10302)
!10304 = !DILocation(line: 705, column: 61, scope: !10302)
!10305 = !DILocation(line: 705, column: 6, scope: !10198)
!10306 = !DILocation(line: 708, column: 5, scope: !10307)
!10307 = distinct !DILexicalBlock(scope: !10302, file: !9838, line: 706, column: 3)
!10308 = !DILocation(line: 712, column: 27, scope: !10309)
!10309 = distinct !DILexicalBlock(scope: !10198, file: !9838, line: 712, column: 6)
!10310 = !DILocation(line: 709, column: 3, scope: !10307)
!10311 = !DILocation(line: 712, column: 38, scope: !10309)
!10312 = !DILocation(line: 712, column: 61, scope: !10309)
!10313 = !DILocation(line: 712, column: 6, scope: !10198)
!10314 = !DILocation(line: 715, column: 5, scope: !10315)
!10315 = distinct !DILexicalBlock(scope: !10309, file: !9838, line: 713, column: 3)
!10316 = !DILocation(line: 716, column: 3, scope: !10315)
!10317 = !DILocation(line: 719, column: 21, scope: !10198)
!10318 = !DILocation(line: 719, column: 70, scope: !10198)
!10319 = !DILocation(line: 719, column: 91, scope: !10198)
!10320 = !DILocation(line: 719, column: 50, scope: !10198)
!10321 = !DILocation(line: 719, column: 47, scope: !10198)
!10322 = !DILocation(line: 719, column: 19, scope: !10198)
!10323 = !DILocation(line: 722, column: 17, scope: !10198)
!10324 = !DILocation(line: 722, column: 3, scope: !10198)
!10325 = !DILocation(line: 724, column: 3, scope: !10198)
!10326 = !DILocation(line: 725, column: 1, scope: !10198)
!10327 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !9838, file: !9838, line: 885, type: !5579, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2741, retainedNodes: !10328)
!10328 = !{!10329, !10330, !10331, !10332}
!10329 = !DILocalVariable(name: "pllm", scope: !10327, file: !9838, line: 887, type: !121)
!10330 = !DILocalVariable(name: "pllvco", scope: !10327, file: !9838, line: 887, type: !121)
!10331 = !DILocalVariable(name: "pllp", scope: !10327, file: !9838, line: 887, type: !121)
!10332 = !DILocalVariable(name: "sysclockfreq", scope: !10327, file: !9838, line: 888, type: !121)
!10333 = !DILocation(line: 0, scope: !10327)
!10334 = !DILocation(line: 891, column: 16, scope: !10327)
!10335 = !DILocation(line: 891, column: 21, scope: !10327)
!10336 = !DILocation(line: 891, column: 3, scope: !10327)
!10337 = !DILocation(line: 901, column: 7, scope: !10338)
!10338 = distinct !DILexicalBlock(scope: !10339, file: !9838, line: 899, column: 5)
!10339 = distinct !DILexicalBlock(scope: !10327, file: !9838, line: 892, column: 3)
!10340 = !DILocation(line: 907, column: 19, scope: !10341)
!10341 = distinct !DILexicalBlock(scope: !10339, file: !9838, line: 904, column: 5)
!10342 = !DILocation(line: 907, column: 27, scope: !10341)
!10343 = !DILocation(line: 908, column: 10, scope: !10344)
!10344 = distinct !DILexicalBlock(scope: !10341, file: !9838, line: 908, column: 10)
!10345 = !DILocation(line: 908, column: 40, scope: !10344)
!10346 = !DILocation(line: 0, scope: !10344)
!10347 = !DILocation(line: 918, column: 23, scope: !10341)
!10348 = !DILocation(line: 918, column: 82, scope: !10341)
!10349 = !DILocation(line: 920, column: 28, scope: !10341)
!10350 = !DILocation(line: 921, column: 7, scope: !10341)
!10351 = !DILocation(line: 0, scope: !10339)
!10352 = !DILocation(line: 929, column: 3, scope: !10327)
!10353 = !DISubprogram(name: "HAL_InitTick", scope: !10197, file: !10197, line: 223, type: !10354, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!10354 = !DISubroutineType(types: !10355)
!10355 = !{!9841, !121}
!10356 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !9838, file: !9838, line: 775, type: !10357, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2741, retainedNodes: !10359)
!10357 = !DISubroutineType(types: !10358)
!10358 = !{null, !121, !121, !121}
!10359 = !{!10360, !10361, !10362, !10363, !10373, !10377}
!10360 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !10356, file: !9838, line: 775, type: !121)
!10361 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !10356, file: !9838, line: 775, type: !121)
!10362 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !10356, file: !9838, line: 775, type: !121)
!10363 = !DILocalVariable(name: "GPIO_InitStruct", scope: !10356, file: !9838, line: 777, type: !10364)
!10364 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !10365, line: 62, baseType: !10366)
!10365 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10366 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10365, line: 46, size: 160, elements: !10367)
!10367 = !{!10368, !10369, !10370, !10371, !10372}
!10368 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !10366, file: !10365, line: 48, baseType: !121, size: 32)
!10369 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !10366, file: !10365, line: 51, baseType: !121, size: 32, offset: 32)
!10370 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !10366, file: !10365, line: 54, baseType: !121, size: 32, offset: 64)
!10371 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !10366, file: !10365, line: 57, baseType: !121, size: 32, offset: 96)
!10372 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !10366, file: !10365, line: 60, baseType: !121, size: 32, offset: 128)
!10373 = !DILocalVariable(name: "tmpreg", scope: !10374, file: !9838, line: 787, type: !120)
!10374 = distinct !DILexicalBlock(scope: !10375, file: !9838, line: 787, column: 5)
!10375 = distinct !DILexicalBlock(scope: !10376, file: !9838, line: 783, column: 3)
!10376 = distinct !DILexicalBlock(scope: !10356, file: !9838, line: 782, column: 6)
!10377 = !DILocalVariable(name: "tmpreg", scope: !10378, file: !9838, line: 811, type: !120)
!10378 = distinct !DILexicalBlock(scope: !10379, file: !9838, line: 811, column: 5)
!10379 = distinct !DILexicalBlock(scope: !10376, file: !9838, line: 807, column: 3)
!10380 = !DILocation(line: 0, scope: !10356)
!10381 = !DILocation(line: 777, column: 3, scope: !10356)
!10382 = !DILocation(line: 777, column: 20, scope: !10356)
!10383 = !DILocation(line: 782, column: 15, scope: !10376)
!10384 = !DILocation(line: 782, column: 6, scope: !10356)
!10385 = !DILocation(line: 787, column: 5, scope: !10374)
!10386 = !DILocation(line: 787, column: 5, scope: !10375)
!10387 = !DILocation(line: 790, column: 21, scope: !10375)
!10388 = !DILocation(line: 790, column: 25, scope: !10375)
!10389 = !DILocation(line: 791, column: 21, scope: !10375)
!10390 = !DILocation(line: 791, column: 26, scope: !10375)
!10391 = !DILocation(line: 792, column: 21, scope: !10375)
!10392 = !DILocation(line: 792, column: 27, scope: !10375)
!10393 = !DILocation(line: 793, column: 21, scope: !10375)
!10394 = !DILocation(line: 793, column: 26, scope: !10375)
!10395 = !DILocation(line: 794, column: 21, scope: !10375)
!10396 = !DILocation(line: 794, column: 31, scope: !10375)
!10397 = !DILocation(line: 795, column: 5, scope: !10375)
!10398 = !DILocation(line: 798, column: 5, scope: !10375)
!10399 = !DILocation(line: 804, column: 3, scope: !10375)
!10400 = !DILocation(line: 811, column: 5, scope: !10378)
!10401 = !DILocation(line: 811, column: 5, scope: !10379)
!10402 = !DILocation(line: 814, column: 21, scope: !10379)
!10403 = !DILocation(line: 814, column: 25, scope: !10379)
!10404 = !DILocation(line: 815, column: 21, scope: !10379)
!10405 = !DILocation(line: 815, column: 26, scope: !10379)
!10406 = !DILocation(line: 816, column: 21, scope: !10379)
!10407 = !DILocation(line: 816, column: 27, scope: !10379)
!10408 = !DILocation(line: 817, column: 21, scope: !10379)
!10409 = !DILocation(line: 817, column: 26, scope: !10379)
!10410 = !DILocation(line: 818, column: 21, scope: !10379)
!10411 = !DILocation(line: 818, column: 31, scope: !10379)
!10412 = !DILocation(line: 819, column: 5, scope: !10379)
!10413 = !DILocation(line: 822, column: 5, scope: !10379)
!10414 = !DILocation(line: 0, scope: !10376)
!10415 = !DILocation(line: 830, column: 1, scope: !10356)
!10416 = !DISubprogram(name: "HAL_GPIO_Init", scope: !10365, file: !10365, line: 224, type: !10417, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!10417 = !DISubroutineType(types: !10418)
!10418 = !{null, !2812, !10419}
!10419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10364, size: 32)
!10420 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !9838, file: !9838, line: 841, type: !2928, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2741, retainedNodes: !322)
!10421 = !DILocation(line: 843, column: 38, scope: !10420)
!10422 = !DILocation(line: 844, column: 1, scope: !10420)
!10423 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !9838, file: !9838, line: 850, type: !2928, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2741, retainedNodes: !322)
!10424 = !DILocation(line: 852, column: 38, scope: !10423)
!10425 = !DILocation(line: 853, column: 1, scope: !10423)
!10426 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !9838, file: !9838, line: 941, type: !5579, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2741, retainedNodes: !322)
!10427 = !DILocation(line: 943, column: 10, scope: !10426)
!10428 = !DILocation(line: 943, column: 3, scope: !10426)
!10429 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !9838, file: !9838, line: 952, type: !5579, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2741, retainedNodes: !322)
!10430 = !DILocation(line: 955, column: 11, scope: !10429)
!10431 = !DILocation(line: 955, column: 56, scope: !10429)
!10432 = !DILocation(line: 955, column: 78, scope: !10429)
!10433 = !DILocation(line: 955, column: 36, scope: !10429)
!10434 = !DILocation(line: 955, column: 33, scope: !10429)
!10435 = !DILocation(line: 955, column: 3, scope: !10429)
!10436 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !9838, file: !9838, line: 964, type: !5579, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2741, retainedNodes: !322)
!10437 = !DILocation(line: 967, column: 11, scope: !10436)
!10438 = !DILocation(line: 967, column: 55, scope: !10436)
!10439 = !DILocation(line: 967, column: 77, scope: !10436)
!10440 = !DILocation(line: 967, column: 35, scope: !10436)
!10441 = !DILocation(line: 967, column: 32, scope: !10436)
!10442 = !DILocation(line: 967, column: 3, scope: !10436)
!10443 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !9838, file: !9838, line: 977, type: !10444, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2741, retainedNodes: !10446)
!10444 = !DISubroutineType(types: !10445)
!10445 = !{null, !9846}
!10446 = !{!10447}
!10447 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !10443, file: !9838, line: 977, type: !9846)
!10448 = !DILocation(line: 0, scope: !10443)
!10449 = !DILocation(line: 980, column: 22, scope: !10443)
!10450 = !DILocation(line: 980, column: 37, scope: !10443)
!10451 = !DILocation(line: 983, column: 12, scope: !10452)
!10452 = distinct !DILexicalBlock(scope: !10443, file: !9838, line: 983, column: 6)
!10453 = !DILocation(line: 983, column: 15, scope: !10452)
!10454 = !DILocation(line: 983, column: 31, scope: !10452)
!10455 = !DILocation(line: 983, column: 6, scope: !10443)
!10456 = !DILocation(line: 985, column: 24, scope: !10457)
!10457 = distinct !DILexicalBlock(scope: !10452, file: !9838, line: 984, column: 3)
!10458 = !DILocation(line: 985, column: 33, scope: !10457)
!10459 = !DILocation(line: 986, column: 3, scope: !10457)
!10460 = !DILocation(line: 987, column: 17, scope: !10461)
!10461 = distinct !DILexicalBlock(scope: !10452, file: !9838, line: 987, column: 11)
!10462 = !DILocation(line: 987, column: 20, scope: !10461)
!10463 = !DILocation(line: 987, column: 35, scope: !10461)
!10464 = !DILocation(line: 0, scope: !10461)
!10465 = !DILocation(line: 987, column: 11, scope: !10452)
!10466 = !DILocation(line: 989, column: 33, scope: !10467)
!10467 = distinct !DILexicalBlock(scope: !10461, file: !9838, line: 988, column: 3)
!10468 = !DILocation(line: 990, column: 3, scope: !10467)
!10469 = !DILocation(line: 993, column: 33, scope: !10470)
!10470 = distinct !DILexicalBlock(scope: !10461, file: !9838, line: 992, column: 3)
!10471 = !DILocation(line: 997, column: 12, scope: !10472)
!10472 = distinct !DILexicalBlock(scope: !10443, file: !9838, line: 997, column: 6)
!10473 = !DILocation(line: 997, column: 15, scope: !10472)
!10474 = !DILocation(line: 1003, column: 24, scope: !10475)
!10475 = distinct !DILexicalBlock(scope: !10472, file: !9838, line: 1002, column: 3)
!10476 = !DILocation(line: 1003, column: 33, scope: !10475)
!10477 = !DILocation(line: 1006, column: 61, scope: !10443)
!10478 = !DILocation(line: 1006, column: 81, scope: !10443)
!10479 = !DILocation(line: 1006, column: 22, scope: !10443)
!10480 = !DILocation(line: 1006, column: 42, scope: !10443)
!10481 = !DILocation(line: 1009, column: 12, scope: !10482)
!10482 = distinct !DILexicalBlock(scope: !10443, file: !9838, line: 1009, column: 6)
!10483 = !DILocation(line: 1009, column: 17, scope: !10482)
!10484 = !DILocation(line: 1009, column: 35, scope: !10482)
!10485 = !DILocation(line: 1009, column: 6, scope: !10443)
!10486 = !DILocation(line: 1011, column: 24, scope: !10487)
!10487 = distinct !DILexicalBlock(scope: !10482, file: !9838, line: 1010, column: 3)
!10488 = !DILocation(line: 1011, column: 33, scope: !10487)
!10489 = !DILocation(line: 1012, column: 3, scope: !10487)
!10490 = !DILocation(line: 1013, column: 17, scope: !10491)
!10491 = distinct !DILexicalBlock(scope: !10482, file: !9838, line: 1013, column: 11)
!10492 = !DILocation(line: 1013, column: 22, scope: !10491)
!10493 = !DILocation(line: 1013, column: 39, scope: !10491)
!10494 = !DILocation(line: 0, scope: !10491)
!10495 = !DILocation(line: 1013, column: 11, scope: !10482)
!10496 = !DILocation(line: 1015, column: 33, scope: !10497)
!10497 = distinct !DILexicalBlock(scope: !10491, file: !9838, line: 1014, column: 3)
!10498 = !DILocation(line: 1016, column: 3, scope: !10497)
!10499 = !DILocation(line: 1019, column: 33, scope: !10500)
!10500 = distinct !DILexicalBlock(scope: !10491, file: !9838, line: 1018, column: 3)
!10501 = !DILocation(line: 1023, column: 12, scope: !10502)
!10502 = distinct !DILexicalBlock(scope: !10443, file: !9838, line: 1023, column: 6)
!10503 = !DILocation(line: 1023, column: 16, scope: !10502)
!10504 = !DILocation(line: 1029, column: 24, scope: !10505)
!10505 = distinct !DILexicalBlock(scope: !10502, file: !9838, line: 1028, column: 3)
!10506 = !DILocation(line: 1029, column: 33, scope: !10505)
!10507 = !DILocation(line: 1033, column: 12, scope: !10508)
!10508 = distinct !DILexicalBlock(scope: !10443, file: !9838, line: 1033, column: 6)
!10509 = !DILocation(line: 1033, column: 15, scope: !10508)
!10510 = !DILocation(line: 1033, column: 30, scope: !10508)
!10511 = !DILocation(line: 1033, column: 6, scope: !10443)
!10512 = !DILocation(line: 1039, column: 28, scope: !10513)
!10513 = distinct !DILexicalBlock(scope: !10508, file: !9838, line: 1038, column: 3)
!10514 = !DILocation(line: 1039, column: 37, scope: !10513)
!10515 = !DILocation(line: 1041, column: 54, scope: !10443)
!10516 = !DILocation(line: 1041, column: 62, scope: !10443)
!10517 = !DILocation(line: 1041, column: 26, scope: !10443)
!10518 = !DILocation(line: 1041, column: 36, scope: !10443)
!10519 = !DILocation(line: 1042, column: 49, scope: !10443)
!10520 = !DILocation(line: 1042, column: 57, scope: !10443)
!10521 = !DILocation(line: 1042, column: 26, scope: !10443)
!10522 = !DILocation(line: 1042, column: 31, scope: !10443)
!10523 = !DILocation(line: 1043, column: 50, scope: !10443)
!10524 = !DILocation(line: 1043, column: 78, scope: !10443)
!10525 = !DILocation(line: 1043, column: 26, scope: !10443)
!10526 = !DILocation(line: 1043, column: 31, scope: !10443)
!10527 = !DILocation(line: 1044, column: 52, scope: !10443)
!10528 = !DILocation(line: 1044, column: 102, scope: !10443)
!10529 = !DILocation(line: 1044, column: 109, scope: !10443)
!10530 = !DILocation(line: 1044, column: 26, scope: !10443)
!10531 = !DILocation(line: 1044, column: 31, scope: !10443)
!10532 = !DILocation(line: 1045, column: 50, scope: !10443)
!10533 = !DILocation(line: 1045, column: 78, scope: !10443)
!10534 = !DILocation(line: 1045, column: 26, scope: !10443)
!10535 = !DILocation(line: 1045, column: 31, scope: !10443)
!10536 = !DILocation(line: 1046, column: 1, scope: !10443)
!10537 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !9838, file: !9838, line: 1056, type: !10538, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2741, retainedNodes: !10540)
!10538 = !DISubroutineType(types: !10539)
!10539 = !{null, !10201, !707}
!10540 = !{!10541, !10542}
!10541 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !10537, file: !9838, line: 1056, type: !10201)
!10542 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !10537, file: !9838, line: 1056, type: !707)
!10543 = !DILocation(line: 0, scope: !10537)
!10544 = !DILocation(line: 1059, column: 22, scope: !10537)
!10545 = !DILocation(line: 1059, column: 32, scope: !10537)
!10546 = !DILocation(line: 1062, column: 53, scope: !10537)
!10547 = !DILocation(line: 1062, column: 58, scope: !10537)
!10548 = !DILocation(line: 1062, column: 22, scope: !10537)
!10549 = !DILocation(line: 1062, column: 35, scope: !10537)
!10550 = !DILocation(line: 1065, column: 54, scope: !10537)
!10551 = !DILocation(line: 1065, column: 59, scope: !10537)
!10552 = !DILocation(line: 1065, column: 22, scope: !10537)
!10553 = !DILocation(line: 1065, column: 36, scope: !10537)
!10554 = !DILocation(line: 1068, column: 55, scope: !10537)
!10555 = !DILocation(line: 1068, column: 60, scope: !10537)
!10556 = !DILocation(line: 1068, column: 22, scope: !10537)
!10557 = !DILocation(line: 1068, column: 37, scope: !10537)
!10558 = !DILocation(line: 1071, column: 56, scope: !10537)
!10559 = !DILocation(line: 1071, column: 79, scope: !10537)
!10560 = !DILocation(line: 1071, column: 22, scope: !10537)
!10561 = !DILocation(line: 1071, column: 37, scope: !10537)
!10562 = !DILocation(line: 1074, column: 34, scope: !10537)
!10563 = !DILocation(line: 1074, column: 38, scope: !10537)
!10564 = !DILocation(line: 1074, column: 14, scope: !10537)
!10565 = !DILocation(line: 1075, column: 1, scope: !10537)
!10566 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !9838, file: !9838, line: 1082, type: !2928, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2741, retainedNodes: !322)
!10567 = !DILocation(line: 1085, column: 6, scope: !10568)
!10568 = distinct !DILexicalBlock(scope: !10566, file: !9838, line: 1085, column: 6)
!10569 = !DILocation(line: 1085, column: 6, scope: !10566)
!10570 = !DILocation(line: 1088, column: 5, scope: !10571)
!10571 = distinct !DILexicalBlock(scope: !10568, file: !9838, line: 1086, column: 3)
!10572 = !DILocation(line: 1091, column: 5, scope: !10571)
!10573 = !DILocation(line: 1092, column: 3, scope: !10571)
!10574 = !DILocation(line: 1093, column: 1, scope: !10566)
!10575 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !9838, file: !9838, line: 1099, type: !2928, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2741, retainedNodes: !322)
!10576 = !DILocation(line: 1104, column: 1, scope: !10575)
!10577 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !10578, file: !10578, line: 257, type: !5589, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2825, retainedNodes: !10579)
!10578 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10579 = !{!10580}
!10580 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !10577, file: !10578, line: 257, type: !121)
!10581 = !DILocation(line: 0, scope: !10577)
!10582 = !DILocation(line: 260, column: 3, scope: !10577)
!10583 = !DILocation(line: 261, column: 1, scope: !10577)
!10584 = distinct !DISubprogram(name: "LL_InitTick", scope: !10585, file: !10585, line: 260, type: !8266, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2825, retainedNodes: !10586)
!10585 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10586 = !{!10587, !10588}
!10587 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !10584, file: !10585, line: 260, type: !121)
!10588 = !DILocalVariable(name: "Ticks", arg: 2, scope: !10584, file: !10585, line: 260, type: !121)
!10589 = !DILocation(line: 0, scope: !10584)
!10590 = !DILocation(line: 263, column: 46, scope: !10584)
!10591 = !DILocation(line: 263, column: 55, scope: !10584)
!10592 = !DILocation(line: 263, column: 18, scope: !10584)
!10593 = !DILocation(line: 264, column: 18, scope: !10584)
!10594 = !DILocation(line: 265, column: 18, scope: !10584)
!10595 = !DILocation(line: 267, column: 1, scope: !10584)
!10596 = distinct !DISubprogram(name: "LL_mDelay", scope: !10578, file: !10578, line: 273, type: !5589, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2825, retainedNodes: !10597)
!10597 = !{!10598, !10599}
!10598 = !DILocalVariable(name: "Delay", arg: 1, scope: !10596, file: !10578, line: 273, type: !121)
!10599 = !DILocalVariable(name: "tmp", scope: !10596, file: !10578, line: 275, type: !120)
!10600 = !DILocation(line: 0, scope: !10596)
!10601 = !DILocation(line: 275, column: 3, scope: !10596)
!10602 = !DILocation(line: 275, column: 18, scope: !10596)
!10603 = !DILocation(line: 275, column: 33, scope: !10596)
!10604 = !DILocation(line: 277, column: 10, scope: !10596)
!10605 = !DILocation(line: 280, column: 12, scope: !10606)
!10606 = distinct !DILexicalBlock(scope: !10596, file: !10578, line: 280, column: 6)
!10607 = !DILocation(line: 285, column: 3, scope: !10596)
!10608 = !DILocation(line: 287, column: 18, scope: !10609)
!10609 = distinct !DILexicalBlock(scope: !10610, file: !10578, line: 287, column: 8)
!10610 = distinct !DILexicalBlock(scope: !10596, file: !10578, line: 286, column: 3)
!10611 = !DILocation(line: 292, column: 1, scope: !10596)
!10612 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !10578, file: !10578, line: 323, type: !5589, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2825, retainedNodes: !10613)
!10613 = !{!10614}
!10614 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !10612, file: !10578, line: 323, type: !121)
!10615 = !DILocation(line: 0, scope: !10612)
!10616 = !DILocation(line: 326, column: 19, scope: !10612)
!10617 = !DILocation(line: 327, column: 1, scope: !10612)
!10618 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !10578, file: !10578, line: 338, type: !10619, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2825, retainedNodes: !10622)
!10619 = !DISubroutineType(types: !10620)
!10620 = !{!10621, !121}
!10621 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !654, line: 201, baseType: !653)
!10622 = !{!10623, !10624, !10625, !10626, !10627}
!10623 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !10618, file: !10578, line: 338, type: !121)
!10624 = !DILocalVariable(name: "timeout", scope: !10618, file: !10578, line: 340, type: !121)
!10625 = !DILocalVariable(name: "getlatency", scope: !10618, file: !10578, line: 341, type: !121)
!10626 = !DILocalVariable(name: "latency", scope: !10618, file: !10578, line: 342, type: !121)
!10627 = !DILocalVariable(name: "status", scope: !10618, file: !10578, line: 343, type: !10621)
!10628 = !DILocation(line: 0, scope: !10618)
!10629 = !DILocation(line: 347, column: 21, scope: !10630)
!10630 = distinct !DILexicalBlock(scope: !10618, file: !10578, line: 347, column: 6)
!10631 = !DILocation(line: 347, column: 6, scope: !10618)
!10632 = !DILocation(line: 353, column: 8, scope: !10633)
!10633 = distinct !DILexicalBlock(scope: !10634, file: !10578, line: 353, column: 8)
!10634 = distinct !DILexicalBlock(scope: !10630, file: !10578, line: 352, column: 3)
!10635 = !DILocation(line: 353, column: 40, scope: !10633)
!10636 = !DILocation(line: 353, column: 8, scope: !10634)
!10637 = !DILocation(line: 356, column: 26, scope: !10638)
!10638 = distinct !DILexicalBlock(scope: !10639, file: !10578, line: 356, column: 10)
!10639 = distinct !DILexicalBlock(scope: !10633, file: !10578, line: 354, column: 5)
!10640 = !DILocation(line: 356, column: 55, scope: !10638)
!10641 = !DILocation(line: 362, column: 55, scope: !10642)
!10642 = distinct !DILexicalBlock(scope: !10639, file: !10578, line: 362, column: 10)
!10643 = !DILocation(line: 368, column: 55, scope: !10644)
!10644 = distinct !DILexicalBlock(scope: !10639, file: !10578, line: 368, column: 10)
!10645 = !DILocation(line: 374, column: 26, scope: !10646)
!10646 = distinct !DILexicalBlock(scope: !10639, file: !10578, line: 374, column: 10)
!10647 = !DILocation(line: 374, column: 55, scope: !10646)
!10648 = !DILocation(line: 380, column: 28, scope: !10649)
!10649 = distinct !DILexicalBlock(scope: !10650, file: !10578, line: 380, column: 12)
!10650 = distinct !DILexicalBlock(scope: !10646, file: !10578, line: 379, column: 7)
!10651 = !DILocation(line: 380, column: 57, scope: !10649)
!10652 = !DILocation(line: 387, column: 8, scope: !10653)
!10653 = distinct !DILexicalBlock(scope: !10634, file: !10578, line: 387, column: 8)
!10654 = !DILocation(line: 387, column: 40, scope: !10653)
!10655 = !DILocation(line: 387, column: 8, scope: !10634)
!10656 = !DILocation(line: 396, column: 26, scope: !10657)
!10657 = distinct !DILexicalBlock(scope: !10658, file: !10578, line: 396, column: 10)
!10658 = distinct !DILexicalBlock(scope: !10653, file: !10578, line: 388, column: 5)
!10659 = !DILocation(line: 396, column: 55, scope: !10657)
!10660 = !DILocation(line: 402, column: 26, scope: !10661)
!10661 = distinct !DILexicalBlock(scope: !10658, file: !10578, line: 402, column: 10)
!10662 = !DILocation(line: 402, column: 55, scope: !10661)
!10663 = !DILocation(line: 407, column: 26, scope: !10664)
!10664 = distinct !DILexicalBlock(scope: !10658, file: !10578, line: 407, column: 10)
!10665 = !DILocation(line: 407, column: 55, scope: !10664)
!10666 = !DILocation(line: 413, column: 28, scope: !10667)
!10667 = distinct !DILexicalBlock(scope: !10668, file: !10578, line: 413, column: 12)
!10668 = distinct !DILexicalBlock(scope: !10664, file: !10578, line: 412, column: 7)
!10669 = !DILocation(line: 413, column: 57, scope: !10667)
!10670 = !DILocation(line: 0, scope: !10634)
!10671 = !DILocation(line: 444, column: 5, scope: !10634)
!10672 = !DILocation(line: 448, column: 5, scope: !10634)
!10673 = !DILocation(line: 451, column: 18, scope: !10674)
!10674 = distinct !DILexicalBlock(scope: !10634, file: !10578, line: 449, column: 5)
!10675 = !DILocation(line: 452, column: 12, scope: !10674)
!10676 = !DILocation(line: 453, column: 26, scope: !10634)
!10677 = !DILocation(line: 453, column: 38, scope: !10634)
!10678 = !DILocation(line: 453, column: 5, scope: !10674)
!10679 = distinct !{!10679, !10672, !10680}
!10680 = !DILocation(line: 453, column: 54, scope: !10634)
!10681 = !DILocation(line: 0, scope: !10630)
!10682 = !DILocation(line: 464, column: 3, scope: !10618)
!10683 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !10684, file: !10684, line: 519, type: !5579, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2825, retainedNodes: !322)
!10684 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10685 = !DILocation(line: 521, column: 21, scope: !10683)
!10686 = !DILocation(line: 521, column: 3, scope: !10683)
!10687 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !5345, file: !5345, line: 1543, type: !5589, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2825, retainedNodes: !10688)
!10688 = !{!10689}
!10689 = !DILocalVariable(name: "Latency", arg: 1, scope: !10687, file: !5345, line: 1543, type: !121)
!10690 = !DILocation(line: 0, scope: !10687)
!10691 = !DILocation(line: 1545, column: 3, scope: !10687)
!10692 = !DILocation(line: 1546, column: 1, scope: !10687)
!10693 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !5345, file: !5345, line: 1569, type: !5579, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2825, retainedNodes: !322)
!10694 = !DILocation(line: 1571, column: 21, scope: !10693)
!10695 = !DILocation(line: 1571, column: 3, scope: !10693)
!10696 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !10578, file: !10578, line: 483, type: !10697, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2825, retainedNodes: !10713)
!10697 = !DISubroutineType(types: !10698)
!10698 = !{!10621, !10699, !10706}
!10699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10700, size: 32)
!10700 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !10585, line: 114, baseType: !10701)
!10701 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10585, line: 94, size: 96, elements: !10702)
!10702 = !{!10703, !10704, !10705}
!10703 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !10701, file: !10585, line: 96, baseType: !121, size: 32)
!10704 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !10701, file: !10585, line: 102, baseType: !121, size: 32, offset: 32)
!10705 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !10701, file: !10585, line: 109, baseType: !121, size: 32, offset: 64)
!10706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10707, size: 32)
!10707 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !10585, line: 139, baseType: !10708)
!10708 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10585, line: 119, size: 96, elements: !10709)
!10709 = !{!10710, !10711, !10712}
!10710 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !10708, file: !10585, line: 121, baseType: !121, size: 32)
!10711 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !10708, file: !10585, line: 127, baseType: !121, size: 32, offset: 32)
!10712 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !10708, file: !10585, line: 133, baseType: !121, size: 32, offset: 64)
!10713 = !{!10714, !10715, !10716, !10717}
!10714 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !10696, file: !10578, line: 483, type: !10699)
!10715 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !10696, file: !10578, line: 484, type: !10706)
!10716 = !DILocalVariable(name: "status", scope: !10696, file: !10578, line: 486, type: !10621)
!10717 = !DILocalVariable(name: "pllfreq", scope: !10696, file: !10578, line: 487, type: !121)
!10718 = !DILocation(line: 0, scope: !10696)
!10719 = !DILocation(line: 490, column: 6, scope: !10720)
!10720 = distinct !DILexicalBlock(scope: !10696, file: !10578, line: 490, column: 6)
!10721 = !DILocation(line: 490, column: 25, scope: !10720)
!10722 = !DILocation(line: 490, column: 6, scope: !10696)
!10723 = !DILocation(line: 493, column: 15, scope: !10724)
!10724 = distinct !DILexicalBlock(scope: !10720, file: !10578, line: 491, column: 3)
!10725 = !DILocation(line: 496, column: 8, scope: !10726)
!10726 = distinct !DILexicalBlock(scope: !10724, file: !10578, line: 496, column: 8)
!10727 = !DILocation(line: 496, column: 29, scope: !10726)
!10728 = !DILocation(line: 496, column: 8, scope: !10724)
!10729 = !DILocation(line: 498, column: 7, scope: !10730)
!10730 = distinct !DILexicalBlock(scope: !10726, file: !10578, line: 497, column: 5)
!10731 = !DILocation(line: 499, column: 7, scope: !10730)
!10732 = !DILocation(line: 499, column: 14, scope: !10730)
!10733 = !DILocation(line: 499, column: 35, scope: !10730)
!10734 = distinct !{!10734, !10731, !10735}
!10735 = !DILocation(line: 502, column: 7, scope: !10730)
!10736 = !DILocation(line: 506, column: 76, scope: !10724)
!10737 = !DILocation(line: 506, column: 103, scope: !10724)
!10738 = !DILocation(line: 507, column: 54, scope: !10724)
!10739 = !DILocation(line: 506, column: 5, scope: !10724)
!10740 = !DILocation(line: 510, column: 14, scope: !10724)
!10741 = !DILocation(line: 511, column: 3, scope: !10724)
!10742 = !DILocation(line: 0, scope: !10720)
!10743 = !DILocation(line: 518, column: 3, scope: !10696)
!10744 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !10578, file: !10578, line: 642, type: !10745, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2825, retainedNodes: !10747)
!10745 = !DISubroutineType(types: !10746)
!10746 = !{!10621}
!10747 = !{!10748}
!10748 = !DILocalVariable(name: "status", scope: !10744, file: !10578, line: 644, type: !10621)
!10749 = !DILocation(line: 0, scope: !10744)
!10750 = !DILocation(line: 647, column: 6, scope: !10751)
!10751 = distinct !DILexicalBlock(scope: !10744, file: !10578, line: 647, column: 6)
!10752 = !DILocation(line: 647, column: 27, scope: !10751)
!10753 = !DILocation(line: 663, column: 6, scope: !10754)
!10754 = distinct !DILexicalBlock(scope: !10744, file: !10578, line: 663, column: 6)
!10755 = !DILocation(line: 663, column: 30, scope: !10754)
!10756 = !DILocation(line: 663, column: 6, scope: !10744)
!10757 = !DILocation(line: 669, column: 3, scope: !10744)
!10758 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !10578, file: !10578, line: 611, type: !10759, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2825, retainedNodes: !10761)
!10759 = !DISubroutineType(types: !10760)
!10760 = !{!121, !121, !10699}
!10761 = !{!10762, !10763, !10764}
!10762 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !10758, file: !10578, line: 611, type: !121)
!10763 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !10758, file: !10578, line: 611, type: !10699)
!10764 = !DILocalVariable(name: "pllfreq", scope: !10758, file: !10578, line: 613, type: !121)
!10765 = !DILocation(line: 0, scope: !10758)
!10766 = !DILocation(line: 622, column: 56, scope: !10758)
!10767 = !DILocation(line: 622, column: 61, scope: !10758)
!10768 = !DILocation(line: 622, column: 32, scope: !10758)
!10769 = !DILocation(line: 626, column: 45, scope: !10758)
!10770 = !DILocation(line: 626, column: 50, scope: !10758)
!10771 = !DILocation(line: 626, column: 21, scope: !10758)
!10772 = !DILocation(line: 630, column: 47, scope: !10758)
!10773 = !DILocation(line: 630, column: 82, scope: !10758)
!10774 = !DILocation(line: 630, column: 21, scope: !10758)
!10775 = !DILocation(line: 633, column: 3, scope: !10758)
!10776 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !7607, file: !7607, line: 3007, type: !5579, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2825, retainedNodes: !322)
!10777 = !DILocation(line: 3009, column: 11, scope: !10776)
!10778 = !DILocation(line: 3009, column: 44, scope: !10776)
!10779 = !DILocation(line: 3009, column: 3, scope: !10776)
!10780 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !7607, file: !7607, line: 2987, type: !2928, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2825, retainedNodes: !322)
!10781 = !DILocation(line: 2989, column: 3, scope: !10780)
!10782 = !DILocation(line: 2990, column: 1, scope: !10780)
!10783 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !7607, file: !7607, line: 4304, type: !7741, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2825, retainedNodes: !10784)
!10784 = !{!10785, !10786, !10787, !10788}
!10785 = !DILocalVariable(name: "Source", arg: 1, scope: !10783, file: !7607, line: 4304, type: !121)
!10786 = !DILocalVariable(name: "PLLM", arg: 2, scope: !10783, file: !7607, line: 4304, type: !121)
!10787 = !DILocalVariable(name: "PLLN", arg: 3, scope: !10783, file: !7607, line: 4304, type: !121)
!10788 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !10783, file: !7607, line: 4304, type: !121)
!10789 = !DILocation(line: 0, scope: !10783)
!10790 = !DILocation(line: 4306, column: 3, scope: !10783)
!10791 = !DILocation(line: 4308, column: 3, scope: !10783)
!10792 = !DILocation(line: 4312, column: 1, scope: !10783)
!10793 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !10578, file: !10578, line: 681, type: !10794, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2825, retainedNodes: !10796)
!10794 = !DISubroutineType(types: !10795)
!10795 = !{!10621, !121, !10706}
!10796 = !{!10797, !10798, !10799, !10800}
!10797 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !10793, file: !10578, line: 681, type: !121)
!10798 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !10793, file: !10578, line: 681, type: !10706)
!10799 = !DILocalVariable(name: "status", scope: !10793, file: !10578, line: 683, type: !10621)
!10800 = !DILocalVariable(name: "hclk_frequency", scope: !10793, file: !10578, line: 684, type: !121)
!10801 = !DILocation(line: 0, scope: !10793)
!10802 = !DILocation(line: 691, column: 20, scope: !10793)
!10803 = !DILocation(line: 694, column: 6, scope: !10804)
!10804 = distinct !DILexicalBlock(scope: !10793, file: !10578, line: 694, column: 6)
!10805 = !DILocation(line: 694, column: 22, scope: !10804)
!10806 = !DILocation(line: 694, column: 6, scope: !10793)
!10807 = !DILocation(line: 697, column: 14, scope: !10808)
!10808 = distinct !DILexicalBlock(scope: !10804, file: !10578, line: 695, column: 3)
!10809 = !DILocation(line: 701, column: 13, scope: !10810)
!10810 = distinct !DILexicalBlock(scope: !10793, file: !10578, line: 701, column: 6)
!10811 = !DILocation(line: 701, column: 6, scope: !10793)
!10812 = !DILocation(line: 704, column: 5, scope: !10813)
!10813 = distinct !DILexicalBlock(scope: !10810, file: !10578, line: 702, column: 3)
!10814 = !DILocation(line: 705, column: 5, scope: !10813)
!10815 = !DILocation(line: 705, column: 12, scope: !10813)
!10816 = !DILocation(line: 705, column: 33, scope: !10813)
!10817 = distinct !{!10817, !10814, !10818}
!10818 = !DILocation(line: 708, column: 5, scope: !10813)
!10819 = !DILocation(line: 711, column: 49, scope: !10813)
!10820 = !DILocation(line: 711, column: 5, scope: !10813)
!10821 = !DILocation(line: 712, column: 5, scope: !10813)
!10822 = !DILocation(line: 713, column: 5, scope: !10813)
!10823 = !DILocation(line: 713, column: 12, scope: !10813)
!10824 = !DILocation(line: 713, column: 37, scope: !10813)
!10825 = distinct !{!10825, !10822, !10826}
!10826 = !DILocation(line: 716, column: 5, scope: !10813)
!10827 = !DILocation(line: 719, column: 50, scope: !10813)
!10828 = !DILocation(line: 719, column: 5, scope: !10813)
!10829 = !DILocation(line: 720, column: 50, scope: !10813)
!10830 = !DILocation(line: 720, column: 5, scope: !10813)
!10831 = !DILocation(line: 721, column: 3, scope: !10813)
!10832 = !DILocation(line: 724, column: 6, scope: !10833)
!10833 = distinct !DILexicalBlock(scope: !10793, file: !10578, line: 724, column: 6)
!10834 = !DILocation(line: 724, column: 22, scope: !10833)
!10835 = !DILocation(line: 724, column: 6, scope: !10793)
!10836 = !DILocation(line: 727, column: 14, scope: !10837)
!10837 = distinct !DILexicalBlock(scope: !10833, file: !10578, line: 725, column: 3)
!10838 = !DILocation(line: 728, column: 3, scope: !10837)
!10839 = !DILocation(line: 731, column: 13, scope: !10840)
!10840 = distinct !DILexicalBlock(scope: !10793, file: !10578, line: 731, column: 6)
!10841 = !DILocation(line: 731, column: 6, scope: !10793)
!10842 = !DILocation(line: 733, column: 5, scope: !10843)
!10843 = distinct !DILexicalBlock(scope: !10840, file: !10578, line: 732, column: 3)
!10844 = !DILocation(line: 734, column: 3, scope: !10843)
!10845 = !DILocation(line: 736, column: 3, scope: !10793)
!10846 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !7607, file: !7607, line: 4184, type: !2928, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2825, retainedNodes: !322)
!10847 = !DILocation(line: 4186, column: 3, scope: !10846)
!10848 = !DILocation(line: 4187, column: 1, scope: !10846)
!10849 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !7607, file: !7607, line: 4205, type: !5579, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2825, retainedNodes: !322)
!10850 = !DILocation(line: 4207, column: 11, scope: !10849)
!10851 = !DILocation(line: 4207, column: 44, scope: !10849)
!10852 = !DILocation(line: 4207, column: 3, scope: !10849)
!10853 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !7607, file: !7607, line: 3224, type: !5589, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2825, retainedNodes: !10854)
!10854 = !{!10855}
!10855 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10853, file: !7607, line: 3224, type: !121)
!10856 = !DILocation(line: 0, scope: !10853)
!10857 = !DILocation(line: 3226, column: 3, scope: !10853)
!10858 = !DILocation(line: 3227, column: 1, scope: !10853)
!10859 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !7607, file: !7607, line: 3188, type: !5589, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2825, retainedNodes: !10860)
!10860 = !{!10861}
!10861 = !DILocalVariable(name: "Source", arg: 1, scope: !10859, file: !7607, line: 3188, type: !121)
!10862 = !DILocation(line: 0, scope: !10859)
!10863 = !DILocation(line: 3190, column: 3, scope: !10859)
!10864 = !DILocation(line: 3191, column: 1, scope: !10859)
!10865 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !7607, file: !7607, line: 3204, type: !5579, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2825, retainedNodes: !322)
!10866 = !DILocation(line: 3206, column: 21, scope: !10865)
!10867 = !DILocation(line: 3206, column: 3, scope: !10865)
!10868 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !7607, file: !7607, line: 3240, type: !5589, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2825, retainedNodes: !10869)
!10869 = !{!10870}
!10870 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10868, file: !7607, line: 3240, type: !121)
!10871 = !DILocation(line: 0, scope: !10868)
!10872 = !DILocation(line: 3242, column: 3, scope: !10868)
!10873 = !DILocation(line: 3243, column: 1, scope: !10868)
!10874 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !7607, file: !7607, line: 3256, type: !5589, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2825, retainedNodes: !10875)
!10875 = !{!10876}
!10876 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10874, file: !7607, line: 3256, type: !121)
!10877 = !DILocation(line: 0, scope: !10874)
!10878 = !DILocation(line: 3258, column: 3, scope: !10874)
!10879 = !DILocation(line: 3259, column: 1, scope: !10874)
!10880 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !7607, file: !7607, line: 5153, type: !5579, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2825, retainedNodes: !322)
!10881 = !DILocation(line: 5155, column: 11, scope: !10880)
!10882 = !DILocation(line: 5155, column: 47, scope: !10880)
!10883 = !DILocation(line: 5155, column: 3, scope: !10880)
!10884 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !10578, file: !10578, line: 540, type: !10885, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2825, retainedNodes: !10887)
!10885 = !DISubroutineType(types: !10886)
!10886 = !{!10621, !121, !121, !10699, !10706}
!10887 = !{!10888, !10889, !10890, !10891, !10892, !10893}
!10888 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !10884, file: !10578, line: 540, type: !121)
!10889 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !10884, file: !10578, line: 540, type: !121)
!10890 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !10884, file: !10578, line: 541, type: !10699)
!10891 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !10884, file: !10578, line: 541, type: !10706)
!10892 = !DILocalVariable(name: "status", scope: !10884, file: !10578, line: 543, type: !10621)
!10893 = !DILocalVariable(name: "pllfreq", scope: !10884, file: !10578, line: 544, type: !121)
!10894 = !DILocation(line: 0, scope: !10884)
!10895 = !DILocation(line: 551, column: 6, scope: !10896)
!10896 = distinct !DILexicalBlock(scope: !10884, file: !10578, line: 551, column: 6)
!10897 = !DILocation(line: 551, column: 25, scope: !10896)
!10898 = !DILocation(line: 551, column: 6, scope: !10884)
!10899 = !DILocation(line: 554, column: 15, scope: !10900)
!10900 = distinct !DILexicalBlock(scope: !10896, file: !10578, line: 552, column: 3)
!10901 = !DILocation(line: 557, column: 8, scope: !10902)
!10902 = distinct !DILexicalBlock(scope: !10900, file: !10578, line: 557, column: 8)
!10903 = !DILocation(line: 557, column: 29, scope: !10902)
!10904 = !DILocation(line: 557, column: 8, scope: !10900)
!10905 = !DILocation(line: 560, column: 20, scope: !10906)
!10906 = distinct !DILexicalBlock(scope: !10907, file: !10578, line: 560, column: 10)
!10907 = distinct !DILexicalBlock(scope: !10902, file: !10578, line: 558, column: 5)
!10908 = !DILocation(line: 560, column: 10, scope: !10907)
!10909 = !DILocation(line: 562, column: 9, scope: !10910)
!10910 = distinct !DILexicalBlock(scope: !10906, file: !10578, line: 561, column: 7)
!10911 = !DILocation(line: 563, column: 7, scope: !10910)
!10912 = !DILocation(line: 566, column: 9, scope: !10913)
!10913 = distinct !DILexicalBlock(scope: !10906, file: !10578, line: 565, column: 7)
!10914 = !DILocation(line: 570, column: 7, scope: !10907)
!10915 = !DILocation(line: 571, column: 7, scope: !10907)
!10916 = !DILocation(line: 571, column: 14, scope: !10907)
!10917 = !DILocation(line: 571, column: 35, scope: !10907)
!10918 = distinct !{!10918, !10915, !10919}
!10919 = !DILocation(line: 574, column: 7, scope: !10907)
!10920 = !DILocation(line: 578, column: 76, scope: !10900)
!10921 = !DILocation(line: 578, column: 103, scope: !10900)
!10922 = !DILocation(line: 579, column: 54, scope: !10900)
!10923 = !DILocation(line: 578, column: 5, scope: !10900)
!10924 = !DILocation(line: 582, column: 14, scope: !10900)
!10925 = !DILocation(line: 583, column: 3, scope: !10900)
!10926 = !DILocation(line: 0, scope: !10896)
!10927 = !DILocation(line: 590, column: 3, scope: !10884)
!10928 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !7607, file: !7607, line: 2969, type: !5579, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2825, retainedNodes: !322)
!10929 = !DILocation(line: 2971, column: 11, scope: !10928)
!10930 = !DILocation(line: 2971, column: 44, scope: !10928)
!10931 = !DILocation(line: 2971, column: 3, scope: !10928)
!10932 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !7607, file: !7607, line: 2929, type: !2928, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2825, retainedNodes: !322)
!10933 = !DILocation(line: 2931, column: 3, scope: !10932)
!10934 = !DILocation(line: 2932, column: 1, scope: !10932)
!10935 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !7607, file: !7607, line: 2939, type: !2928, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2825, retainedNodes: !322)
!10936 = !DILocation(line: 2941, column: 3, scope: !10935)
!10937 = !DILocation(line: 2942, column: 1, scope: !10935)
!10938 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !7607, file: !7607, line: 2949, type: !2928, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2825, retainedNodes: !322)
!10939 = !DILocation(line: 2951, column: 3, scope: !10938)
!10940 = !DILocation(line: 2952, column: 1, scope: !10938)
!10941 = distinct !DISubprogram(name: "z_device_state_init", scope: !10942, file: !10942, line: 23, type: !2928, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2888, retainedNodes: !10943)
!10942 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10943 = !{!10944}
!10944 = !DILocalVariable(name: "dev", scope: !10941, file: !10942, line: 25, type: !10945)
!10945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10946, size: 32)
!10946 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10947)
!10947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !10948)
!10948 = !{!10949, !10950, !10951, !10952, !10958, !10959}
!10949 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10947, file: !141, line: 380, baseType: !144, size: 32)
!10950 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !10947, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!10951 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !10947, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!10952 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !10947, file: !141, line: 386, baseType: !10953, size: 32, offset: 96)
!10953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10954, size: 32)
!10954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !10955)
!10955 = !{!10956, !10957}
!10956 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !10954, file: !141, line: 359, baseType: !154, size: 8)
!10957 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !10954, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!10958 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !10947, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!10959 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !10947, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!10960 = !DILocation(line: 0, scope: !10941)
!10961 = !DILocation(line: 31, column: 1, scope: !10941)
!10962 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !10942, file: !10942, line: 33, type: !10963, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2888, retainedNodes: !10965)
!10963 = !DISubroutineType(types: !10964)
!10964 = !{!10945, !144}
!10965 = !{!10966, !10967}
!10966 = !DILocalVariable(name: "name", arg: 1, scope: !10962, file: !10942, line: 33, type: !144)
!10967 = !DILocalVariable(name: "dev", scope: !10962, file: !10942, line: 35, type: !10945)
!10968 = !DILocation(line: 0, scope: !10962)
!10969 = !DILocation(line: 40, column: 12, scope: !10970)
!10970 = distinct !DILexicalBlock(scope: !10962, file: !10942, line: 40, column: 6)
!10971 = !DILocation(line: 40, column: 21, scope: !10970)
!10972 = !DILocation(line: 40, column: 25, scope: !10970)
!10973 = !DILocation(line: 40, column: 33, scope: !10970)
!10974 = !DILocation(line: 40, column: 6, scope: !10962)
!10975 = !DILocation(line: 55, column: 2, scope: !10976)
!10976 = distinct !DILexicalBlock(scope: !10962, file: !10942, line: 55, column: 2)
!10977 = !DILocation(line: 50, column: 7, scope: !10978)
!10978 = distinct !DILexicalBlock(scope: !10979, file: !10942, line: 50, column: 7)
!10979 = distinct !DILexicalBlock(scope: !10980, file: !10942, line: 49, column: 57)
!10980 = distinct !DILexicalBlock(scope: !10981, file: !10942, line: 49, column: 2)
!10981 = distinct !DILexicalBlock(scope: !10962, file: !10942, line: 49, column: 2)
!10982 = !DILocation(line: 50, column: 30, scope: !10978)
!10983 = !DILocation(line: 50, column: 39, scope: !10978)
!10984 = !DILocation(line: 50, column: 44, scope: !10978)
!10985 = !DILocation(line: 50, column: 7, scope: !10979)
!10986 = !DILocation(line: 49, column: 53, scope: !10980)
!10987 = !DILocation(line: 49, column: 33, scope: !10980)
!10988 = !DILocation(line: 49, column: 2, scope: !10981)
!10989 = distinct !{!10989, !10988, !10990}
!10990 = !DILocation(line: 53, column: 2, scope: !10981)
!10991 = !DILocation(line: 56, column: 7, scope: !10992)
!10992 = distinct !DILexicalBlock(scope: !10993, file: !10942, line: 56, column: 7)
!10993 = distinct !DILexicalBlock(scope: !10994, file: !10942, line: 55, column: 57)
!10994 = distinct !DILexicalBlock(scope: !10976, file: !10942, line: 55, column: 2)
!10995 = !DILocation(line: 56, column: 30, scope: !10992)
!10996 = !DILocation(line: 56, column: 52, scope: !10992)
!10997 = !DILocation(line: 56, column: 34, scope: !10992)
!10998 = !DILocation(line: 56, column: 58, scope: !10992)
!10999 = !DILocation(line: 56, column: 7, scope: !10993)
!11000 = !DILocation(line: 55, column: 53, scope: !10994)
!11001 = !DILocation(line: 55, column: 33, scope: !10994)
!11002 = distinct !{!11002, !10975, !11003}
!11003 = !DILocation(line: 59, column: 2, scope: !10976)
!11004 = !DILocation(line: 62, column: 1, scope: !10962)
!11005 = distinct !DISubprogram(name: "z_device_is_ready", scope: !10942, file: !10942, line: 93, type: !11006, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2888, retainedNodes: !11008)
!11006 = !DISubroutineType(types: !11007)
!11007 = !{!157, !10945}
!11008 = !{!11009}
!11009 = !DILocalVariable(name: "dev", arg: 1, scope: !11005, file: !10942, line: 93, type: !10945)
!11010 = !DILocation(line: 0, scope: !11005)
!11011 = !DILocation(line: 99, column: 10, scope: !11012)
!11012 = distinct !DILexicalBlock(scope: !11005, file: !10942, line: 99, column: 6)
!11013 = !DILocation(line: 99, column: 6, scope: !11005)
!11014 = !DILocation(line: 103, column: 14, scope: !11005)
!11015 = !DILocation(line: 103, column: 21, scope: !11005)
!11016 = !DILocation(line: 103, column: 33, scope: !11005)
!11017 = !DILocation(line: 103, column: 49, scope: !11005)
!11018 = !DILocation(line: 103, column: 58, scope: !11005)
!11019 = !DILocation(line: 104, column: 1, scope: !11005)
!11020 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !10942, file: !10942, line: 87, type: !11021, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2888, retainedNodes: !11024)
!11021 = !DISubroutineType(types: !11022)
!11022 = !{!200, !11023}
!11023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10945, size: 32)
!11024 = !{!11025}
!11025 = !DILocalVariable(name: "devices", arg: 1, scope: !11020, file: !10942, line: 87, type: !11023)
!11026 = !DILocation(line: 0, scope: !11020)
!11027 = !DILocation(line: 89, column: 11, scope: !11020)
!11028 = !DILocation(line: 90, column: 2, scope: !11020)
!11029 = distinct !DISubprogram(name: "device_required_foreach", scope: !10942, file: !10942, line: 125, type: !11030, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2888, retainedNodes: !11036)
!11030 = !DISubroutineType(types: !11031)
!11031 = !{!103, !10945, !11032, !102}
!11032 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !141, line: 471, baseType: !11033)
!11033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11034, size: 32)
!11034 = !DISubroutineType(types: !11035)
!11035 = !{!103, !10945, !102}
!11036 = !{!11037, !11038, !11039, !11040, !11041}
!11037 = !DILocalVariable(name: "dev", arg: 1, scope: !11029, file: !10942, line: 125, type: !10945)
!11038 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !11029, file: !10942, line: 126, type: !11032)
!11039 = !DILocalVariable(name: "context", arg: 3, scope: !11029, file: !10942, line: 127, type: !102)
!11040 = !DILocalVariable(name: "handle_count", scope: !11029, file: !10942, line: 129, type: !200)
!11041 = !DILocalVariable(name: "handles", scope: !11029, file: !10942, line: 130, type: !160)
!11042 = !DILocation(line: 0, scope: !11029)
!11043 = !DILocation(line: 129, column: 2, scope: !11029)
!11044 = !DILocation(line: 129, column: 9, scope: !11029)
!11045 = !DILocation(line: 130, column: 35, scope: !11029)
!11046 = !DILocation(line: 132, column: 33, scope: !11029)
!11047 = !DILocation(line: 132, column: 9, scope: !11029)
!11048 = !DILocation(line: 133, column: 1, scope: !11029)
!11049 = !DILocation(line: 132, column: 2, scope: !11029)
!11050 = distinct !DISubprogram(name: "device_required_handles_get", scope: !141, file: !141, line: 493, type: !11051, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2888, retainedNodes: !11053)
!11051 = !DISubroutineType(types: !11052)
!11052 = !{!160, !10945, !2386}
!11053 = !{!11054, !11055, !11056, !11057}
!11054 = !DILocalVariable(name: "dev", arg: 1, scope: !11050, file: !141, line: 493, type: !10945)
!11055 = !DILocalVariable(name: "count", arg: 2, scope: !11050, file: !141, line: 493, type: !2386)
!11056 = !DILocalVariable(name: "rv", scope: !11050, file: !141, line: 495, type: !160)
!11057 = !DILocalVariable(name: "i", scope: !11058, file: !141, line: 498, type: !200)
!11058 = distinct !DILexicalBlock(scope: !11059, file: !141, line: 497, column: 18)
!11059 = distinct !DILexicalBlock(scope: !11050, file: !141, line: 497, column: 6)
!11060 = !DILocation(line: 0, scope: !11050)
!11061 = !DILocation(line: 495, column: 35, scope: !11050)
!11062 = !DILocation(line: 497, column: 9, scope: !11059)
!11063 = !DILocation(line: 497, column: 6, scope: !11050)
!11064 = !DILocation(line: 0, scope: !11058)
!11065 = !DILocation(line: 500, column: 11, scope: !11058)
!11066 = !DILocation(line: 500, column: 40, scope: !11058)
!11067 = !DILocation(line: 502, column: 4, scope: !11068)
!11068 = distinct !DILexicalBlock(scope: !11058, file: !141, line: 501, column: 40)
!11069 = distinct !{!11069, !11070, !11071}
!11070 = !DILocation(line: 500, column: 3, scope: !11058)
!11071 = !DILocation(line: 503, column: 3, scope: !11058)
!11072 = !DILocation(line: 504, column: 10, scope: !11058)
!11073 = !DILocation(line: 505, column: 2, scope: !11058)
!11074 = !DILocation(line: 507, column: 2, scope: !11050)
!11075 = distinct !DISubprogram(name: "device_visitor", scope: !10942, file: !10942, line: 106, type: !11076, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2888, retainedNodes: !11078)
!11076 = !DISubroutineType(types: !11077)
!11077 = !{!103, !160, !200, !11032, !102}
!11078 = !{!11079, !11080, !11081, !11082, !11083, !11085, !11088, !11089}
!11079 = !DILocalVariable(name: "handles", arg: 1, scope: !11075, file: !10942, line: 106, type: !160)
!11080 = !DILocalVariable(name: "handle_count", arg: 2, scope: !11075, file: !10942, line: 107, type: !200)
!11081 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !11075, file: !10942, line: 108, type: !11032)
!11082 = !DILocalVariable(name: "context", arg: 4, scope: !11075, file: !10942, line: 109, type: !102)
!11083 = !DILocalVariable(name: "i", scope: !11084, file: !10942, line: 112, type: !200)
!11084 = distinct !DILexicalBlock(scope: !11075, file: !10942, line: 112, column: 2)
!11085 = !DILocalVariable(name: "dh", scope: !11086, file: !10942, line: 113, type: !162)
!11086 = distinct !DILexicalBlock(scope: !11087, file: !10942, line: 112, column: 44)
!11087 = distinct !DILexicalBlock(scope: !11084, file: !10942, line: 112, column: 2)
!11088 = !DILocalVariable(name: "rdev", scope: !11086, file: !10942, line: 114, type: !10945)
!11089 = !DILocalVariable(name: "rc", scope: !11086, file: !10942, line: 115, type: !103)
!11090 = !DILocation(line: 0, scope: !11075)
!11091 = !DILocation(line: 0, scope: !11084)
!11092 = !DILocation(line: 112, column: 23, scope: !11087)
!11093 = !DILocation(line: 112, column: 2, scope: !11084)
!11094 = distinct !{!11094, !11093, !11095}
!11095 = !DILocation(line: 120, column: 2, scope: !11084)
!11096 = !DILocation(line: 113, column: 24, scope: !11086)
!11097 = !DILocation(line: 0, scope: !11086)
!11098 = !DILocation(line: 114, column: 31, scope: !11086)
!11099 = !DILocation(line: 115, column: 12, scope: !11086)
!11100 = !DILocation(line: 117, column: 10, scope: !11101)
!11101 = distinct !DILexicalBlock(scope: !11086, file: !10942, line: 117, column: 7)
!11102 = !DILocation(line: 112, column: 39, scope: !11087)
!11103 = !DILocation(line: 123, column: 1, scope: !11075)
!11104 = distinct !DISubprogram(name: "device_from_handle", scope: !141, file: !141, line: 439, type: !11105, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2888, retainedNodes: !11107)
!11105 = !DISubroutineType(types: !11106)
!11106 = !{!10945, !162}
!11107 = !{!11108, !11109, !11110}
!11108 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !11104, file: !141, line: 439, type: !162)
!11109 = !DILocalVariable(name: "dev", scope: !11104, file: !141, line: 443, type: !10945)
!11110 = !DILocalVariable(name: "numdev", scope: !11104, file: !141, line: 444, type: !200)
!11111 = !DILocation(line: 0, scope: !11104)
!11112 = !DILocation(line: 446, column: 7, scope: !11113)
!11113 = distinct !DILexicalBlock(scope: !11104, file: !141, line: 446, column: 6)
!11114 = !DILocation(line: 446, column: 18, scope: !11113)
!11115 = !DILocation(line: 446, column: 23, scope: !11113)
!11116 = !DILocation(line: 450, column: 2, scope: !11104)
!11117 = distinct !DISubprogram(name: "device_supported_foreach", scope: !10942, file: !10942, line: 135, type: !11030, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2888, retainedNodes: !11118)
!11118 = !{!11119, !11120, !11121, !11122, !11123}
!11119 = !DILocalVariable(name: "dev", arg: 1, scope: !11117, file: !10942, line: 135, type: !10945)
!11120 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !11117, file: !10942, line: 136, type: !11032)
!11121 = !DILocalVariable(name: "context", arg: 3, scope: !11117, file: !10942, line: 137, type: !102)
!11122 = !DILocalVariable(name: "handle_count", scope: !11117, file: !10942, line: 139, type: !200)
!11123 = !DILocalVariable(name: "handles", scope: !11117, file: !10942, line: 140, type: !160)
!11124 = !DILocation(line: 0, scope: !11117)
!11125 = !DILocation(line: 139, column: 2, scope: !11117)
!11126 = !DILocation(line: 139, column: 9, scope: !11117)
!11127 = !DILocation(line: 140, column: 35, scope: !11117)
!11128 = !DILocation(line: 142, column: 33, scope: !11117)
!11129 = !DILocation(line: 142, column: 9, scope: !11117)
!11130 = !DILocation(line: 143, column: 1, scope: !11117)
!11131 = !DILocation(line: 142, column: 2, scope: !11117)
!11132 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !141, file: !141, line: 573, type: !11051, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2888, retainedNodes: !11133)
!11133 = !{!11134, !11135, !11136, !11137, !11138}
!11134 = !DILocalVariable(name: "dev", arg: 1, scope: !11132, file: !141, line: 573, type: !10945)
!11135 = !DILocalVariable(name: "count", arg: 2, scope: !11132, file: !141, line: 573, type: !2386)
!11136 = !DILocalVariable(name: "rv", scope: !11132, file: !141, line: 575, type: !160)
!11137 = !DILocalVariable(name: "region", scope: !11132, file: !141, line: 576, type: !200)
!11138 = !DILocalVariable(name: "i", scope: !11132, file: !141, line: 577, type: !200)
!11139 = !DILocation(line: 0, scope: !11132)
!11140 = !DILocation(line: 575, column: 35, scope: !11132)
!11141 = !DILocation(line: 579, column: 9, scope: !11142)
!11142 = distinct !DILexicalBlock(scope: !11132, file: !141, line: 579, column: 6)
!11143 = !DILocation(line: 579, column: 6, scope: !11132)
!11144 = !DILocation(line: 582, column: 8, scope: !11145)
!11145 = distinct !DILexicalBlock(scope: !11146, file: !141, line: 582, column: 8)
!11146 = distinct !DILexicalBlock(scope: !11147, file: !141, line: 581, column: 23)
!11147 = distinct !DILexicalBlock(scope: !11142, file: !141, line: 579, column: 18)
!11148 = !DILocation(line: 582, column: 12, scope: !11145)
!11149 = !DILocation(line: 585, column: 6, scope: !11146)
!11150 = !DILocation(line: 0, scope: !11147)
!11151 = !DILocation(line: 581, column: 17, scope: !11147)
!11152 = !DILocation(line: 581, column: 3, scope: !11147)
!11153 = !DILocation(line: 588, column: 10, scope: !11147)
!11154 = !DILocation(line: 588, column: 16, scope: !11147)
!11155 = !DILocation(line: 589, column: 4, scope: !11156)
!11156 = distinct !DILexicalBlock(scope: !11147, file: !141, line: 588, column: 39)
!11157 = !DILocation(line: 588, column: 3, scope: !11147)
!11158 = distinct !{!11158, !11157, !11159}
!11159 = !DILocation(line: 590, column: 3, scope: !11147)
!11160 = !DILocation(line: 591, column: 10, scope: !11147)
!11161 = !DILocation(line: 592, column: 2, scope: !11147)
!11162 = !DILocation(line: 575, column: 25, scope: !11132)
!11163 = !DILocation(line: 594, column: 2, scope: !11132)
!11164 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1644, file: !1644, line: 49, type: !11165, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1641, retainedNodes: !322)
!11165 = !DISubroutineType(types: !11166)
!11166 = !{!2379}
!11167 = !DILocation(line: 51, column: 10, scope: !11164)
!11168 = !DILocation(line: 51, column: 20, scope: !11164)
!11169 = !DILocation(line: 51, column: 2, scope: !11164)
!11170 = distinct !DISubprogram(name: "coredump", scope: !2895, file: !2895, line: 209, type: !11171, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2891, retainedNodes: !11317)
!11171 = !DISubroutineType(types: !11172)
!11172 = !{null, !32, !11173, !11217}
!11173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11174, size: 32)
!11174 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11175)
!11175 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2511, line: 141, baseType: !11176)
!11176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2511, line: 97, size: 256, elements: !11177)
!11177 = !{!11178}
!11178 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !11176, file: !2511, line: 107, baseType: !11179, size: 256)
!11179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2511, line: 98, size: 256, elements: !11180)
!11180 = !{!11181, !11186, !11191, !11196, !11201, !11206, !11211, !11216}
!11181 = !DIDerivedType(tag: DW_TAG_member, scope: !11179, file: !2511, line: 99, baseType: !11182, size: 32)
!11182 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11179, file: !2511, line: 99, size: 32, elements: !11183)
!11183 = !{!11184, !11185}
!11184 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !11182, file: !2511, line: 99, baseType: !121, size: 32)
!11185 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !11182, file: !2511, line: 99, baseType: !121, size: 32)
!11186 = !DIDerivedType(tag: DW_TAG_member, scope: !11179, file: !2511, line: 100, baseType: !11187, size: 32, offset: 32)
!11187 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11179, file: !2511, line: 100, size: 32, elements: !11188)
!11188 = !{!11189, !11190}
!11189 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !11187, file: !2511, line: 100, baseType: !121, size: 32)
!11190 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !11187, file: !2511, line: 100, baseType: !121, size: 32)
!11191 = !DIDerivedType(tag: DW_TAG_member, scope: !11179, file: !2511, line: 101, baseType: !11192, size: 32, offset: 64)
!11192 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11179, file: !2511, line: 101, size: 32, elements: !11193)
!11193 = !{!11194, !11195}
!11194 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !11192, file: !2511, line: 101, baseType: !121, size: 32)
!11195 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !11192, file: !2511, line: 101, baseType: !121, size: 32)
!11196 = !DIDerivedType(tag: DW_TAG_member, scope: !11179, file: !2511, line: 102, baseType: !11197, size: 32, offset: 96)
!11197 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11179, file: !2511, line: 102, size: 32, elements: !11198)
!11198 = !{!11199, !11200}
!11199 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !11197, file: !2511, line: 102, baseType: !121, size: 32)
!11200 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !11197, file: !2511, line: 102, baseType: !121, size: 32)
!11201 = !DIDerivedType(tag: DW_TAG_member, scope: !11179, file: !2511, line: 103, baseType: !11202, size: 32, offset: 128)
!11202 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11179, file: !2511, line: 103, size: 32, elements: !11203)
!11203 = !{!11204, !11205}
!11204 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !11202, file: !2511, line: 103, baseType: !121, size: 32)
!11205 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !11202, file: !2511, line: 103, baseType: !121, size: 32)
!11206 = !DIDerivedType(tag: DW_TAG_member, scope: !11179, file: !2511, line: 104, baseType: !11207, size: 32, offset: 160)
!11207 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11179, file: !2511, line: 104, size: 32, elements: !11208)
!11208 = !{!11209, !11210}
!11209 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !11207, file: !2511, line: 104, baseType: !121, size: 32)
!11210 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !11207, file: !2511, line: 104, baseType: !121, size: 32)
!11211 = !DIDerivedType(tag: DW_TAG_member, scope: !11179, file: !2511, line: 105, baseType: !11212, size: 32, offset: 192)
!11212 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11179, file: !2511, line: 105, size: 32, elements: !11213)
!11213 = !{!11214, !11215}
!11214 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !11212, file: !2511, line: 105, baseType: !121, size: 32)
!11215 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !11212, file: !2511, line: 105, baseType: !121, size: 32)
!11216 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !11179, file: !2511, line: 106, baseType: !121, size: 32, offset: 224)
!11217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11218, size: 32)
!11218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !11219)
!11219 = !{!11220, !11278, !11290, !11291, !11292, !11293, !11299, !11312}
!11220 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !11218, file: !211, line: 247, baseType: !11221, size: 384)
!11221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !11222)
!11222 = !{!11223, !11247, !11254, !11255, !11256, !11265, !11266, !11267}
!11223 = !DIDerivedType(tag: DW_TAG_member, scope: !11221, file: !211, line: 60, baseType: !11224, size: 64)
!11224 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11221, file: !211, line: 60, size: 64, elements: !11225)
!11225 = !{!11226, !11241}
!11226 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !11224, file: !211, line: 61, baseType: !11227, size: 64)
!11227 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !11228)
!11228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !11229)
!11229 = !{!11230, !11236}
!11230 = !DIDerivedType(tag: DW_TAG_member, scope: !11228, file: !221, line: 38, baseType: !11231, size: 32)
!11231 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11228, file: !221, line: 38, size: 32, elements: !11232)
!11232 = !{!11233, !11235}
!11233 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !11231, file: !221, line: 39, baseType: !11234, size: 32)
!11234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11228, size: 32)
!11235 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !11231, file: !221, line: 40, baseType: !11234, size: 32)
!11236 = !DIDerivedType(tag: DW_TAG_member, scope: !11228, file: !221, line: 42, baseType: !11237, size: 32, offset: 32)
!11237 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11228, file: !221, line: 42, size: 32, elements: !11238)
!11238 = !{!11239, !11240}
!11239 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !11237, file: !221, line: 43, baseType: !11234, size: 32)
!11240 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !11237, file: !221, line: 44, baseType: !11234, size: 32)
!11241 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !11224, file: !211, line: 62, baseType: !11242, size: 64)
!11242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !11243)
!11243 = !{!11244}
!11244 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !11242, file: !237, line: 50, baseType: !11245, size: 64)
!11245 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11246, size: 64, elements: !242)
!11246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11242, size: 32)
!11247 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !11221, file: !211, line: 68, baseType: !11248, size: 32, offset: 64)
!11248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11249, size: 32)
!11249 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !11250)
!11250 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !11251)
!11251 = !{!11252}
!11252 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !11250, file: !247, line: 232, baseType: !11253, size: 64)
!11253 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !11228)
!11254 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !11221, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!11255 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !11221, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!11256 = !DIDerivedType(tag: DW_TAG_member, scope: !11221, file: !211, line: 90, baseType: !11257, size: 16, offset: 112)
!11257 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11221, file: !211, line: 90, size: 16, elements: !11258)
!11258 = !{!11259, !11264}
!11259 = !DIDerivedType(tag: DW_TAG_member, scope: !11257, file: !211, line: 91, baseType: !11260, size: 16)
!11260 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11257, file: !211, line: 91, size: 16, elements: !11261)
!11261 = !{!11262, !11263}
!11262 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !11260, file: !211, line: 96, baseType: !261, size: 8)
!11263 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !11260, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!11264 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !11257, file: !211, line: 100, baseType: !265, size: 16)
!11265 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !11221, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!11266 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !11221, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!11267 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !11221, file: !211, line: 131, baseType: !11268, size: 192, offset: 192)
!11268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !11269)
!11269 = !{!11270, !11271, !11277}
!11270 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !11268, file: !247, line: 245, baseType: !11227, size: 64)
!11271 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !11268, file: !247, line: 246, baseType: !11272, size: 32, offset: 64)
!11272 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !11273)
!11273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11274, size: 32)
!11274 = !DISubroutineType(types: !11275)
!11275 = !{null, !11276}
!11276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11268, size: 32)
!11277 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !11268, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!11278 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !11218, file: !211, line: 250, baseType: !11279, size: 288, offset: 384)
!11279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !11280)
!11280 = !{!11281, !11282, !11283, !11284, !11285, !11286, !11287, !11288, !11289}
!11281 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !11279, file: !284, line: 26, baseType: !121, size: 32)
!11282 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !11279, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!11283 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !11279, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!11284 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !11279, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!11285 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !11279, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!11286 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !11279, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!11287 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !11279, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!11288 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !11279, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!11289 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !11279, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!11290 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !11218, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!11291 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !11218, file: !211, line: 256, baseType: !11249, size: 64, offset: 704)
!11292 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !11218, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!11293 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !11218, file: !211, line: 300, baseType: !11294, size: 96, offset: 800)
!11294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !11295)
!11295 = !{!11296, !11297, !11298}
!11296 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !11294, file: !211, line: 153, baseType: !22, size: 32)
!11297 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !11294, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!11298 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !11294, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!11299 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !11218, file: !211, line: 325, baseType: !11300, size: 32, offset: 896)
!11300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11301, size: 32)
!11301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !11302)
!11302 = !{!11303, !11309, !11310}
!11303 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !11301, file: !307, line: 5074, baseType: !11304, size: 96)
!11304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !11305)
!11305 = !{!11306, !11307, !11308}
!11306 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !11304, file: !311, line: 57, baseType: !314, size: 32)
!11307 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !11304, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!11308 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !11304, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!11309 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !11301, file: !307, line: 5075, baseType: !11249, size: 64, offset: 96)
!11310 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !11301, file: !307, line: 5076, baseType: !11311, offset: 160)
!11311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!11312 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !11218, file: !211, line: 343, baseType: !11313, size: 64, offset: 928)
!11313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !11314)
!11314 = !{!11315, !11316}
!11315 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !11313, file: !284, line: 63, baseType: !121, size: 32)
!11316 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !11313, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!11317 = !{!11318, !11319, !11320}
!11318 = !DILocalVariable(name: "reason", arg: 1, scope: !11170, file: !2895, line: 209, type: !32)
!11319 = !DILocalVariable(name: "esf", arg: 2, scope: !11170, file: !2895, line: 209, type: !11173)
!11320 = !DILocalVariable(name: "thread", arg: 3, scope: !11170, file: !2895, line: 210, type: !11217)
!11321 = !DILocation(line: 0, scope: !11170)
!11322 = !DILocation(line: 212, column: 1, scope: !11170)
!11323 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !2895, file: !2895, line: 214, type: !11324, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2891, retainedNodes: !11326)
!11324 = !DISubroutineType(types: !11325)
!11325 = !{null, !22, !22}
!11326 = !{!11327, !11328}
!11327 = !DILocalVariable(name: "start_addr", arg: 1, scope: !11323, file: !2895, line: 214, type: !22)
!11328 = !DILocalVariable(name: "end_addr", arg: 2, scope: !11323, file: !2895, line: 214, type: !22)
!11329 = !DILocation(line: 0, scope: !11323)
!11330 = !DILocation(line: 216, column: 1, scope: !11323)
!11331 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !2895, file: !2895, line: 218, type: !11332, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2891, retainedNodes: !11334)
!11332 = !DISubroutineType(types: !11333)
!11333 = !{null, !1685, !200}
!11334 = !{!11335, !11336}
!11335 = !DILocalVariable(name: "buf", arg: 1, scope: !11331, file: !2895, line: 218, type: !1685)
!11336 = !DILocalVariable(name: "buflen", arg: 2, scope: !11331, file: !2895, line: 218, type: !200)
!11337 = !DILocation(line: 0, scope: !11331)
!11338 = !DILocation(line: 220, column: 1, scope: !11331)
!11339 = distinct !DISubprogram(name: "coredump_query", scope: !2895, file: !2895, line: 222, type: !11340, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2891, retainedNodes: !11342)
!11340 = !DISubroutineType(types: !11341)
!11341 = !{!103, !2894, !102}
!11342 = !{!11343, !11344}
!11343 = !DILocalVariable(name: "query_id", arg: 1, scope: !11339, file: !2895, line: 222, type: !2894)
!11344 = !DILocalVariable(name: "arg", arg: 2, scope: !11339, file: !2895, line: 222, type: !102)
!11345 = !DILocation(line: 0, scope: !11339)
!11346 = !DILocation(line: 224, column: 2, scope: !11339)
!11347 = distinct !DISubprogram(name: "coredump_cmd", scope: !2895, file: !2895, line: 227, type: !11348, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2891, retainedNodes: !11350)
!11348 = !DISubroutineType(types: !11349)
!11349 = !{!103, !2901, !102}
!11350 = !{!11351, !11352}
!11351 = !DILocalVariable(name: "query_id", arg: 1, scope: !11347, file: !2895, line: 227, type: !2901)
!11352 = !DILocalVariable(name: "arg", arg: 2, scope: !11347, file: !2895, line: 227, type: !102)
!11353 = !DILocation(line: 0, scope: !11347)
!11354 = !DILocation(line: 229, column: 2, scope: !11347)
!11355 = distinct !DISubprogram(name: "arch_system_halt", scope: !11356, file: !11356, line: 23, type: !5335, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2891, retainedNodes: !11357)
!11356 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11357 = !{!11358}
!11358 = !DILocalVariable(name: "reason", arg: 1, scope: !11355, file: !11356, line: 23, type: !32)
!11359 = !DILocation(line: 0, scope: !11355)
!11360 = !DILocation(line: 55, column: 2, scope: !11361, inlinedAt: !11365)
!11361 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5324, file: !5324, line: 42, type: !5325, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2891, retainedNodes: !11362)
!11362 = !{!11363, !11364}
!11363 = !DILocalVariable(name: "key", scope: !11361, file: !5324, line: 44, type: !32)
!11364 = !DILocalVariable(name: "tmp", scope: !11361, file: !5324, line: 53, type: !32)
!11365 = distinct !DILocation(line: 31, column: 8, scope: !11355)
!11366 = !{i64 2224038}
!11367 = !DILocation(line: 0, scope: !11361, inlinedAt: !11365)
!11368 = !DILocation(line: 32, column: 2, scope: !11355)
!11369 = !DILocation(line: 32, column: 2, scope: !11370)
!11370 = distinct !DILexicalBlock(scope: !11371, file: !11356, line: 32, column: 2)
!11371 = distinct !DILexicalBlock(scope: !11355, file: !11356, line: 32, column: 2)
!11372 = distinct !{!11372, !11373, !11374}
!11373 = !DILocation(line: 32, column: 2, scope: !11371)
!11374 = !DILocation(line: 34, column: 2, scope: !11371)
!11375 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !11356, file: !11356, line: 39, type: !11376, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2891, retainedNodes: !11378)
!11376 = !DISubroutineType(types: !11377)
!11377 = !{null, !32, !11173}
!11378 = !{!11379, !11380}
!11379 = !DILocalVariable(name: "reason", arg: 1, scope: !11375, file: !11356, line: 39, type: !32)
!11380 = !DILocalVariable(name: "esf", arg: 2, scope: !11375, file: !11356, line: 40, type: !11173)
!11381 = !DILocation(line: 0, scope: !11375)
!11382 = !DILocation(line: 46, column: 2, scope: !11375)
!11383 = distinct !DISubprogram(name: "k_fatal_halt", scope: !11356, file: !11356, line: 81, type: !5335, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2891, retainedNodes: !11384)
!11384 = !{!11385}
!11385 = !DILocalVariable(name: "reason", arg: 1, scope: !11383, file: !11356, line: 81, type: !32)
!11386 = !DILocation(line: 0, scope: !11383)
!11387 = !DILocation(line: 83, column: 2, scope: !11383)
!11388 = distinct !DISubprogram(name: "z_fatal_error", scope: !11356, file: !11356, line: 96, type: !11376, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2891, retainedNodes: !11389)
!11389 = !{!11390, !11391, !11392, !11393}
!11390 = !DILocalVariable(name: "reason", arg: 1, scope: !11388, file: !11356, line: 96, type: !32)
!11391 = !DILocalVariable(name: "esf", arg: 2, scope: !11388, file: !11356, line: 96, type: !11173)
!11392 = !DILocalVariable(name: "key", scope: !11388, file: !11356, line: 102, type: !32)
!11393 = !DILocalVariable(name: "thread", scope: !11388, file: !11356, line: 103, type: !11217)
!11394 = !DILocation(line: 0, scope: !11388)
!11395 = !DILocation(line: 55, column: 2, scope: !11361, inlinedAt: !11396)
!11396 = distinct !DILocation(line: 102, column: 21, scope: !11388)
!11397 = !DILocation(line: 0, scope: !11361, inlinedAt: !11396)
!11398 = !DILocation(line: 119, column: 11, scope: !11399)
!11399 = distinct !DILexicalBlock(scope: !11388, file: !11356, line: 119, column: 6)
!11400 = !DILocation(line: 119, column: 20, scope: !11399)
!11401 = !DILocation(line: 131, column: 2, scope: !11388)
!11402 = !DILocation(line: 151, column: 7, scope: !11403)
!11403 = distinct !DILexicalBlock(scope: !11404, file: !11356, line: 146, column: 32)
!11404 = distinct !DILexicalBlock(scope: !11388, file: !11356, line: 146, column: 6)
!11405 = !DILocation(line: 151, column: 21, scope: !11406)
!11406 = distinct !DILexicalBlock(scope: !11403, file: !11356, line: 151, column: 7)
!11407 = !DILocation(line: 104, column: 4, scope: !11388)
!11408 = !DILocalVariable(name: "key", arg: 1, scope: !11409, file: !5324, line: 84, type: !32)
!11409 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5324, file: !5324, line: 84, type: !5335, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2891, retainedNodes: !11410)
!11410 = !{!11408}
!11411 = !DILocation(line: 0, scope: !11409, inlinedAt: !11412)
!11412 = distinct !DILocation(line: 186, column: 2, scope: !11388)
!11413 = !DILocation(line: 95, column: 2, scope: !11409, inlinedAt: !11412)
!11414 = !{i64 2224855}
!11415 = !DILocation(line: 189, column: 3, scope: !11416)
!11416 = distinct !DILexicalBlock(scope: !11417, file: !11356, line: 188, column: 41)
!11417 = distinct !DILexicalBlock(scope: !11388, file: !11356, line: 188, column: 6)
!11418 = !DILocation(line: 191, column: 1, scope: !11388)
!11419 = distinct !DISubprogram(name: "k_current_get", scope: !307, file: !307, line: 530, type: !11420, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2891, retainedNodes: !322)
!11420 = !DISubroutineType(types: !11421)
!11421 = !{!11422}
!11422 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !211, line: 347, baseType: !11217)
!11423 = !DILocation(line: 535, column: 9, scope: !11419)
!11424 = !DILocation(line: 535, column: 2, scope: !11419)
!11425 = distinct !DISubprogram(name: "k_thread_abort", scope: !3128, file: !3128, line: 188, type: !11426, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2891, retainedNodes: !11428)
!11426 = !DISubroutineType(types: !11427)
!11427 = !{null, !11422}
!11428 = !{!11429}
!11429 = !DILocalVariable(name: "thread", arg: 1, scope: !11425, file: !3128, line: 188, type: !11422)
!11430 = !DILocation(line: 0, scope: !11425)
!11431 = !DILocation(line: 197, column: 2, scope: !11432)
!11432 = distinct !DILexicalBlock(scope: !11425, file: !3128, line: 197, column: 2)
!11433 = !{i64 2154841800}
!11434 = !DILocation(line: 198, column: 2, scope: !11425)
!11435 = !DILocation(line: 199, column: 1, scope: !11425)
!11436 = distinct !DISubprogram(name: "z_current_get", scope: !3128, file: !3128, line: 173, type: !11420, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2891, retainedNodes: !322)
!11437 = !DILocation(line: 180, column: 2, scope: !11438)
!11438 = distinct !DILexicalBlock(scope: !11436, file: !3128, line: 180, column: 2)
!11439 = !{i64 2154841732}
!11440 = !DILocation(line: 181, column: 9, scope: !11436)
!11441 = !DILocation(line: 181, column: 2, scope: !11436)
!11442 = distinct !DISubprogram(name: "z_early_memset", scope: !1652, file: !1652, line: 108, type: !11443, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1648, retainedNodes: !11445)
!11443 = !DISubroutineType(types: !11444)
!11444 = !{null, !102, !103, !200}
!11445 = !{!11446, !11447, !11448}
!11446 = !DILocalVariable(name: "dst", arg: 1, scope: !11442, file: !1652, line: 108, type: !102)
!11447 = !DILocalVariable(name: "c", arg: 2, scope: !11442, file: !1652, line: 108, type: !103)
!11448 = !DILocalVariable(name: "n", arg: 3, scope: !11442, file: !1652, line: 108, type: !200)
!11449 = !DILocation(line: 0, scope: !11442)
!11450 = !DILocation(line: 110, column: 9, scope: !11442)
!11451 = !DILocation(line: 111, column: 1, scope: !11442)
!11452 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1652, file: !1652, line: 121, type: !11453, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1648, retainedNodes: !11455)
!11453 = !DISubroutineType(types: !11454)
!11454 = !{null, !102, !13, !200}
!11455 = !{!11456, !11457, !11458}
!11456 = !DILocalVariable(name: "dst", arg: 1, scope: !11452, file: !1652, line: 121, type: !102)
!11457 = !DILocalVariable(name: "src", arg: 2, scope: !11452, file: !1652, line: 121, type: !13)
!11458 = !DILocalVariable(name: "n", arg: 3, scope: !11452, file: !1652, line: 121, type: !200)
!11459 = !DILocation(line: 0, scope: !11452)
!11460 = !DILocation(line: 123, column: 9, scope: !11452)
!11461 = !DILocation(line: 124, column: 1, scope: !11452)
!11462 = distinct !DISubprogram(name: "z_bss_zero", scope: !1652, file: !1652, line: 132, type: !2928, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1648, retainedNodes: !322)
!11463 = !DILocation(line: 143, column: 2, scope: !11462)
!11464 = !DILocation(line: 145, column: 2, scope: !11462)
!11465 = !DILocation(line: 168, column: 1, scope: !11462)
!11466 = distinct !DISubprogram(name: "z_init_cpu", scope: !1652, file: !1652, line: 372, type: !7215, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1648, retainedNodes: !11467)
!11467 = !{!11468}
!11468 = !DILocalVariable(name: "id", arg: 1, scope: !11466, file: !1652, line: 372, type: !103)
!11469 = !DILocation(line: 0, scope: !11466)
!11470 = !DILocation(line: 374, column: 2, scope: !11466)
!11471 = !DILocation(line: 375, column: 34, scope: !11466)
!11472 = !DILocation(line: 375, column: 19, scope: !11466)
!11473 = !DILocation(line: 375, column: 31, scope: !11466)
!11474 = !DILocation(line: 376, column: 24, scope: !11466)
!11475 = !DILocation(line: 376, column: 19, scope: !11466)
!11476 = !DILocation(line: 376, column: 22, scope: !11466)
!11477 = !DILocation(line: 378, column: 26, scope: !11466)
!11478 = !DILocation(line: 378, column: 4, scope: !11466)
!11479 = !DILocation(line: 378, column: 50, scope: !11466)
!11480 = !DILocation(line: 377, column: 19, scope: !11466)
!11481 = !DILocation(line: 377, column: 29, scope: !11466)
!11482 = !DILocation(line: 384, column: 1, scope: !11466)
!11483 = distinct !DISubprogram(name: "init_idle_thread", scope: !1652, file: !1652, line: 343, type: !7215, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1648, retainedNodes: !11484)
!11484 = !{!11485, !11486, !11487, !11490}
!11485 = !DILocalVariable(name: "i", arg: 1, scope: !11483, file: !1652, line: 343, type: !103)
!11486 = !DILocalVariable(name: "thread", scope: !11483, file: !1652, line: 345, type: !1745)
!11487 = !DILocalVariable(name: "stack", scope: !11483, file: !1652, line: 346, type: !11488)
!11488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11489, size: 32)
!11489 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3352, line: 44, baseType: !1859)
!11490 = !DILocalVariable(name: "tname", scope: !11483, file: !1652, line: 358, type: !977)
!11491 = !DILocation(line: 0, scope: !11483)
!11492 = !DILocation(line: 345, column: 29, scope: !11483)
!11493 = !DILocation(line: 346, column: 28, scope: !11483)
!11494 = !DILocation(line: 362, column: 37, scope: !11483)
!11495 = !DILocation(line: 362, column: 36, scope: !11483)
!11496 = !DILocation(line: 361, column: 2, scope: !11483)
!11497 = !DILocation(line: 365, column: 2, scope: !11483)
!11498 = !DILocation(line: 370, column: 1, scope: !11483)
!11499 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !1860, file: !1860, line: 331, type: !11500, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1648, retainedNodes: !11502)
!11500 = !DISubroutineType(types: !11501)
!11501 = !{!977, !11488}
!11502 = !{!11503}
!11503 = !DILocalVariable(name: "sym", arg: 1, scope: !11499, file: !1860, line: 331, type: !11488)
!11504 = !DILocation(line: 0, scope: !11499)
!11505 = !DILocation(line: 333, column: 21, scope: !11499)
!11506 = !DILocation(line: 333, column: 2, scope: !11499)
!11507 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !11508, file: !11508, line: 155, type: !11509, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1648, retainedNodes: !11511)
!11508 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11509 = !DISubroutineType(types: !11510)
!11510 = !{null, !1745}
!11511 = !{!11512}
!11512 = !DILocalVariable(name: "thread", arg: 1, scope: !11507, file: !11508, line: 155, type: !1745)
!11513 = !DILocation(line: 0, scope: !11507)
!11514 = !DILocation(line: 157, column: 15, scope: !11507)
!11515 = !DILocation(line: 157, column: 28, scope: !11507)
!11516 = !DILocation(line: 158, column: 1, scope: !11507)
!11517 = distinct !DISubprogram(name: "z_cstart", scope: !1652, file: !1652, line: 501, type: !2928, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1648, retainedNodes: !11518)
!11518 = !{!11519}
!11519 = !DILocalVariable(name: "dummy_thread", scope: !11517, file: !1652, line: 518, type: !1746)
!11520 = !DILocation(line: 507, column: 2, scope: !11517)
!11521 = !DILocation(line: 43, column: 14, scope: !11522, inlinedAt: !11526)
!11522 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !11523, file: !11523, line: 40, type: !2928, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1648, retainedNodes: !11524)
!11523 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11524 = !{!11525}
!11525 = !DILocalVariable(name: "msp", scope: !11522, file: !11523, line: 42, type: !121)
!11526 = distinct !DILocation(line: 44, column: 2, scope: !11527, inlinedAt: !11529)
!11527 = distinct !DISubprogram(name: "arch_kernel_init", scope: !11528, file: !11528, line: 42, type: !2928, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1648, retainedNodes: !322)
!11528 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11529 = distinct !DILocation(line: 510, column: 2, scope: !11517)
!11530 = !DILocation(line: 43, column: 3, scope: !11522, inlinedAt: !11526)
!11531 = !DILocation(line: 43, column: 60, scope: !11522, inlinedAt: !11526)
!11532 = !DILocation(line: 0, scope: !11522, inlinedAt: !11526)
!11533 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !11534, file: !5498, line: 1153, type: !121)
!11534 = distinct !DISubprogram(name: "__set_MSP", scope: !5498, file: !5498, line: 1153, type: !5589, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1648, retainedNodes: !11535)
!11535 = !{!11533}
!11536 = !DILocation(line: 0, scope: !11534, inlinedAt: !11537)
!11537 = distinct !DILocation(line: 46, column: 2, scope: !11522, inlinedAt: !11526)
!11538 = !DILocation(line: 1155, column: 3, scope: !11534, inlinedAt: !11537)
!11539 = !{i64 3561156}
!11540 = !DILocation(line: 62, column: 11, scope: !11522, inlinedAt: !11526)
!11541 = !DILocation(line: 102, column: 2, scope: !11542, inlinedAt: !11543)
!11542 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !6292, file: !6292, line: 97, type: !2928, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1648, retainedNodes: !322)
!11543 = distinct !DILocation(line: 45, column: 2, scope: !11527, inlinedAt: !11529)
!11544 = !DILocation(line: 108, column: 2, scope: !11542, inlinedAt: !11543)
!11545 = !DILocation(line: 112, column: 2, scope: !11542, inlinedAt: !11543)
!11546 = !DILocation(line: 113, column: 2, scope: !11542, inlinedAt: !11543)
!11547 = !DILocation(line: 114, column: 2, scope: !11542, inlinedAt: !11543)
!11548 = !DILocation(line: 116, column: 2, scope: !11542, inlinedAt: !11543)
!11549 = !DILocation(line: 123, column: 13, scope: !11542, inlinedAt: !11543)
!11550 = !DILocation(line: 46, column: 2, scope: !11527, inlinedAt: !11529)
!11551 = !DILocation(line: 47, column: 2, scope: !11527, inlinedAt: !11529)
!11552 = !DILocation(line: 174, column: 12, scope: !11553, inlinedAt: !11554)
!11553 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !6292, file: !6292, line: 169, type: !2928, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1648, retainedNodes: !322)
!11554 = distinct !DILocation(line: 48, column: 2, scope: !11527, inlinedAt: !11529)
!11555 = !DILocation(line: 179, column: 12, scope: !11553, inlinedAt: !11554)
!11556 = !DILocation(line: 50, column: 2, scope: !11527, inlinedAt: !11529)
!11557 = !DILocation(line: 57, column: 2, scope: !11527, inlinedAt: !11529)
!11558 = !DILocation(line: 518, column: 2, scope: !11517)
!11559 = !DILocation(line: 518, column: 18, scope: !11517)
!11560 = !DILocation(line: 520, column: 2, scope: !11517)
!11561 = !DILocation(line: 523, column: 2, scope: !11517)
!11562 = !DILocation(line: 526, column: 2, scope: !11517)
!11563 = !DILocation(line: 527, column: 2, scope: !11517)
!11564 = !DILocation(line: 543, column: 24, scope: !11517)
!11565 = !DILocation(line: 543, column: 2, scope: !11517)
!11566 = !DILocation(line: 0, scope: !1879)
!11567 = !DILocation(line: 246, column: 15, scope: !1897)
!11568 = !DILocation(line: 246, column: 36, scope: !1896)
!11569 = !DILocation(line: 246, column: 2, scope: !1897)
!11570 = !DILocation(line: 247, column: 37, scope: !1895)
!11571 = !DILocation(line: 0, scope: !1895)
!11572 = !DILocation(line: 248, column: 19, scope: !1895)
!11573 = !DILocation(line: 248, column: 12, scope: !1895)
!11574 = !DILocation(line: 250, column: 11, scope: !11575)
!11575 = distinct !DILexicalBlock(scope: !1895, file: !1652, line: 250, column: 7)
!11576 = !DILocation(line: 250, column: 7, scope: !1895)
!11577 = !DILocation(line: 254, column: 11, scope: !11578)
!11578 = distinct !DILexicalBlock(scope: !11579, file: !1652, line: 254, column: 8)
!11579 = distinct !DILexicalBlock(scope: !11575, file: !1652, line: 250, column: 20)
!11580 = !DILocation(line: 254, column: 8, scope: !11579)
!11581 = !DILocation(line: 255, column: 9, scope: !11582)
!11582 = distinct !DILexicalBlock(scope: !11578, file: !1652, line: 254, column: 17)
!11583 = !DILocation(line: 258, column: 9, scope: !11582)
!11584 = !DILocation(line: 261, column: 28, scope: !11582)
!11585 = !DILocation(line: 261, column: 10, scope: !11582)
!11586 = !DILocation(line: 261, column: 17, scope: !11582)
!11587 = !DILocation(line: 261, column: 26, scope: !11582)
!11588 = !DILocation(line: 262, column: 4, scope: !11582)
!11589 = !DILocation(line: 263, column: 9, scope: !11579)
!11590 = !DILocation(line: 263, column: 16, scope: !11579)
!11591 = !DILocation(line: 263, column: 28, scope: !11579)
!11592 = !DILocation(line: 264, column: 3, scope: !11579)
!11593 = !DILocation(line: 246, column: 60, scope: !1896)
!11594 = distinct !{!11594, !11569, !11595}
!11595 = !DILocation(line: 265, column: 2, scope: !1897)
!11596 = !DILocation(line: 266, column: 1, scope: !1879)
!11597 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !356, file: !356, line: 1814, type: !5532, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1648, retainedNodes: !11598)
!11598 = !{!11599, !11600}
!11599 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11597, file: !356, line: 1814, type: !613)
!11600 = !DILocalVariable(name: "priority", arg: 2, scope: !11597, file: !356, line: 1814, type: !121)
!11601 = !DILocation(line: 0, scope: !11597)
!11602 = !DILocation(line: 1822, column: 48, scope: !11603)
!11603 = distinct !DILexicalBlock(scope: !11604, file: !356, line: 1821, column: 3)
!11604 = distinct !DILexicalBlock(scope: !11597, file: !356, line: 1816, column: 7)
!11605 = !DILocation(line: 1822, column: 32, scope: !11603)
!11606 = !DILocation(line: 1822, column: 40, scope: !11603)
!11607 = !DILocation(line: 1822, column: 5, scope: !11603)
!11608 = !DILocation(line: 1822, column: 46, scope: !11603)
!11609 = !DILocation(line: 1824, column: 1, scope: !11597)
!11610 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !11528, file: !11528, line: 32, type: !2928, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!11611 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !11612, file: !11612, line: 215, type: !11509, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1648, retainedNodes: !11613)
!11612 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11613 = !{!11614}
!11614 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !11611, file: !11612, line: 215, type: !1745)
!11615 = !DILocation(line: 0, scope: !11611)
!11616 = !DILocation(line: 217, column: 21, scope: !11611)
!11617 = !DILocation(line: 217, column: 34, scope: !11611)
!11618 = !DILocation(line: 221, column: 21, scope: !11611)
!11619 = !DILocation(line: 221, column: 34, scope: !11611)
!11620 = !DILocation(line: 223, column: 27, scope: !11611)
!11621 = !DILocation(line: 223, column: 33, scope: !11611)
!11622 = !DILocation(line: 224, column: 27, scope: !11611)
!11623 = !DILocation(line: 224, column: 32, scope: !11611)
!11624 = !DILocation(line: 232, column: 16, scope: !11611)
!11625 = !DILocation(line: 232, column: 30, scope: !11611)
!11626 = !DILocation(line: 239, column: 24, scope: !11611)
!11627 = !DILocation(line: 240, column: 1, scope: !11611)
!11628 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1652, file: !1652, line: 399, type: !11629, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1648, retainedNodes: !11631)
!11629 = !DISubroutineType(types: !11630)
!11630 = !{!977}
!11631 = !{!11632}
!11632 = !DILocalVariable(name: "stack_ptr", scope: !11628, file: !1652, line: 401, type: !977)
!11633 = !DILocation(line: 404, column: 2, scope: !11628)
!11634 = !DILocation(line: 416, column: 24, scope: !11628)
!11635 = !DILocation(line: 418, column: 14, scope: !11628)
!11636 = !DILocation(line: 0, scope: !11628)
!11637 = !DILocation(line: 423, column: 2, scope: !11628)
!11638 = !DILocation(line: 424, column: 2, scope: !11628)
!11639 = !DILocation(line: 426, column: 2, scope: !11628)
!11640 = !DILocation(line: 428, column: 2, scope: !11628)
!11641 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1652, file: !1652, line: 432, type: !11642, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1648, retainedNodes: !11644)
!11642 = !DISubroutineType(types: !11643)
!11643 = !{null, !977}
!11644 = !{!11645}
!11645 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !11641, file: !1652, line: 432, type: !977)
!11646 = !DILocation(line: 0, scope: !11641)
!11647 = !DILocation(line: 435, column: 2, scope: !11641)
!11648 = !DILocation(line: 445, column: 2, scope: !11641)
!11649 = distinct !DISubprogram(name: "bg_thread_main", scope: !1652, file: !1652, line: 277, type: !3354, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1648, retainedNodes: !11650)
!11650 = !{!11651, !11652, !11653}
!11651 = !DILocalVariable(name: "unused1", arg: 1, scope: !11649, file: !1652, line: 277, type: !102)
!11652 = !DILocalVariable(name: "unused2", arg: 2, scope: !11649, file: !1652, line: 277, type: !102)
!11653 = !DILocalVariable(name: "unused3", arg: 3, scope: !11649, file: !1652, line: 277, type: !102)
!11654 = !DILocation(line: 0, scope: !11649)
!11655 = !DILocation(line: 291, column: 20, scope: !11649)
!11656 = !DILocation(line: 293, column: 2, scope: !11649)
!11657 = !DILocation(line: 297, column: 2, scope: !11649)
!11658 = !DILocation(line: 305, column: 2, scope: !11649)
!11659 = !DILocation(line: 307, column: 2, scope: !11649)
!11660 = !DILocation(line: 330, column: 8, scope: !11649)
!11661 = !DILocation(line: 333, column: 34, scope: !11649)
!11662 = !DILocation(line: 339, column: 1, scope: !11649)
!11663 = distinct !DISubprogram(name: "k_thread_foreach", scope: !1906, file: !1906, line: 45, type: !11664, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2010, retainedNodes: !11672)
!11664 = !DISubroutineType(types: !11665)
!11665 = !{null, !11666, !102}
!11666 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !307, line: 103, baseType: !11667)
!11667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11668, size: 32)
!11668 = !DISubroutineType(types: !11669)
!11669 = !{null, !11670, !102}
!11670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11671, size: 32)
!11671 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1911)
!11672 = !{!11673, !11674}
!11673 = !DILocalVariable(name: "user_cb", arg: 1, scope: !11663, file: !1906, line: 45, type: !11666)
!11674 = !DILocalVariable(name: "user_data", arg: 2, scope: !11663, file: !1906, line: 45, type: !102)
!11675 = !DILocation(line: 0, scope: !11663)
!11676 = !DILocation(line: 71, column: 1, scope: !11663)
!11677 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !1906, file: !1906, line: 73, type: !11664, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2010, retainedNodes: !11678)
!11678 = !{!11679, !11680}
!11679 = !DILocalVariable(name: "user_cb", arg: 1, scope: !11677, file: !1906, line: 73, type: !11666)
!11680 = !DILocalVariable(name: "user_data", arg: 2, scope: !11677, file: !1906, line: 73, type: !102)
!11681 = !DILocation(line: 0, scope: !11677)
!11682 = !DILocation(line: 95, column: 1, scope: !11677)
!11683 = distinct !DISubprogram(name: "k_is_in_isr", scope: !1906, file: !1906, line: 97, type: !6293, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2010, retainedNodes: !322)
!11684 = !DILocation(line: 1031, column: 3, scope: !11685, inlinedAt: !11688)
!11685 = distinct !DISubprogram(name: "__get_IPSR", scope: !5498, file: !5498, line: 1027, type: !5579, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2010, retainedNodes: !11686)
!11686 = !{!11687}
!11687 = !DILocalVariable(name: "result", scope: !11685, file: !5498, line: 1029, type: !121)
!11688 = distinct !DILocation(line: 48, column: 10, scope: !11689, inlinedAt: !11690)
!11689 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6292, file: !6292, line: 46, type: !6293, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2010, retainedNodes: !322)
!11690 = distinct !DILocation(line: 99, column: 9, scope: !11683)
!11691 = !{i64 3566807}
!11692 = !DILocation(line: 0, scope: !11685, inlinedAt: !11688)
!11693 = !DILocation(line: 48, column: 9, scope: !11689, inlinedAt: !11690)
!11694 = !DILocation(line: 99, column: 2, scope: !11683)
!11695 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !1906, file: !1906, line: 106, type: !2928, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2010, retainedNodes: !322)
!11696 = !DILocation(line: 108, column: 2, scope: !11695)
!11697 = !DILocation(line: 108, column: 17, scope: !11695)
!11698 = !DILocation(line: 108, column: 30, scope: !11695)
!11699 = !DILocation(line: 109, column: 1, scope: !11695)
!11700 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !1906, file: !1906, line: 116, type: !2928, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2010, retainedNodes: !322)
!11701 = !DILocation(line: 118, column: 2, scope: !11700)
!11702 = !DILocation(line: 118, column: 17, scope: !11700)
!11703 = !DILocation(line: 118, column: 30, scope: !11700)
!11704 = !DILocation(line: 119, column: 1, scope: !11700)
!11705 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !1906, file: !1906, line: 126, type: !6293, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2010, retainedNodes: !322)
!11706 = !DILocation(line: 128, column: 10, scope: !11705)
!11707 = !DILocation(line: 128, column: 25, scope: !11705)
!11708 = !DILocation(line: 128, column: 38, scope: !11705)
!11709 = !DILocation(line: 128, column: 53, scope: !11705)
!11710 = !DILocation(line: 128, column: 2, scope: !11705)
!11711 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !1906, file: !1906, line: 187, type: !11712, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2010, retainedNodes: !11714)
!11712 = !DISubroutineType(types: !11713)
!11713 = !{!103, !1910, !144}
!11714 = !{!11715, !11716}
!11715 = !DILocalVariable(name: "thread", arg: 1, scope: !11711, file: !1906, line: 187, type: !1910)
!11716 = !DILocalVariable(name: "value", arg: 2, scope: !11711, file: !1906, line: 187, type: !144)
!11717 = !DILocation(line: 0, scope: !11711)
!11718 = !DILocation(line: 206, column: 2, scope: !11711)
!11719 = distinct !DISubprogram(name: "k_thread_name_get", scope: !1906, file: !1906, line: 238, type: !11720, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2010, retainedNodes: !11722)
!11720 = !DISubroutineType(types: !11721)
!11721 = !{!144, !1910}
!11722 = !{!11723}
!11723 = !DILocalVariable(name: "thread", arg: 1, scope: !11719, file: !1906, line: 238, type: !1910)
!11724 = !DILocation(line: 0, scope: !11719)
!11725 = !DILocation(line: 244, column: 2, scope: !11719)
!11726 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !1906, file: !1906, line: 248, type: !11727, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2010, retainedNodes: !11729)
!11727 = !DISubroutineType(types: !11728)
!11728 = !{!103, !1909, !977, !200}
!11729 = !{!11730, !11731, !11732}
!11730 = !DILocalVariable(name: "thread", arg: 1, scope: !11726, file: !1906, line: 248, type: !1909)
!11731 = !DILocalVariable(name: "buf", arg: 2, scope: !11726, file: !1906, line: 248, type: !977)
!11732 = !DILocalVariable(name: "size", arg: 3, scope: !11726, file: !1906, line: 248, type: !200)
!11733 = !DILocation(line: 0, scope: !11726)
!11734 = !DILocation(line: 257, column: 2, scope: !11726)
!11735 = !DILocation(line: 0, scope: !1905)
!11736 = !DILocation(line: 281, column: 11, scope: !11737)
!11737 = distinct !DILexicalBlock(scope: !1905, file: !1906, line: 281, column: 6)
!11738 = !DILocation(line: 281, column: 20, scope: !11737)
!11739 = !DILocation(line: 275, column: 45, scope: !1905)
!11740 = !DILocation(line: 285, column: 10, scope: !1905)
!11741 = !DILocation(line: 0, scope: !2026)
!11742 = !DILocation(line: 293, column: 39, scope: !11743)
!11743 = distinct !DILexicalBlock(scope: !2026, file: !1906, line: 293, column: 2)
!11744 = !DILocation(line: 293, column: 2, scope: !2026)
!11745 = !DILocation(line: 273, column: 14, scope: !1905)
!11746 = !DILocation(line: 309, column: 2, scope: !1905)
!11747 = !DILocation(line: 309, column: 11, scope: !1905)
!11748 = !DILocation(line: 311, column: 2, scope: !1905)
!11749 = !DILocation(line: 293, column: 26, scope: !11743)
!11750 = !DILocation(line: 294, column: 9, scope: !11751)
!11751 = distinct !DILexicalBlock(scope: !11743, file: !1906, line: 293, column: 54)
!11752 = !DILocation(line: 295, column: 21, scope: !11753)
!11753 = distinct !DILexicalBlock(scope: !11751, file: !1906, line: 295, column: 7)
!11754 = !DILocation(line: 295, column: 28, scope: !11753)
!11755 = !DILocation(line: 295, column: 7, scope: !11751)
!11756 = !DILocation(line: 299, column: 25, scope: !11751)
!11757 = !DILocation(line: 299, column: 41, scope: !11751)
!11758 = !DILocation(line: 300, column: 7, scope: !11751)
!11759 = !DILocation(line: 300, column: 26, scope: !11751)
!11760 = !DILocation(line: 299, column: 10, scope: !11751)
!11761 = !DILocation(line: 299, column: 7, scope: !11751)
!11762 = !DILocation(line: 302, column: 16, scope: !11751)
!11763 = !DILocation(line: 304, column: 20, scope: !11764)
!11764 = distinct !DILexicalBlock(scope: !11751, file: !1906, line: 304, column: 7)
!11765 = !DILocation(line: 304, column: 7, scope: !11751)
!11766 = !DILocation(line: 305, column: 26, scope: !11767)
!11767 = distinct !DILexicalBlock(scope: !11764, file: !1906, line: 304, column: 26)
!11768 = !DILocation(line: 305, column: 42, scope: !11767)
!11769 = !DILocation(line: 305, column: 11, scope: !11767)
!11770 = !DILocation(line: 305, column: 8, scope: !11767)
!11771 = !DILocation(line: 306, column: 3, scope: !11767)
!11772 = !DILocation(line: 293, column: 50, scope: !11743)
!11773 = !DILocation(line: 312, column: 1, scope: !1905)
!11774 = distinct !DISubprogram(name: "copy_bytes", scope: !1906, file: !1906, line: 261, type: !11775, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2010, retainedNodes: !11777)
!11775 = !DISubroutineType(types: !11776)
!11776 = !{!200, !977, !200, !144, !200}
!11777 = !{!11778, !11779, !11780, !11781, !11782}
!11778 = !DILocalVariable(name: "dest", arg: 1, scope: !11774, file: !1906, line: 261, type: !977)
!11779 = !DILocalVariable(name: "dest_size", arg: 2, scope: !11774, file: !1906, line: 261, type: !200)
!11780 = !DILocalVariable(name: "src", arg: 3, scope: !11774, file: !1906, line: 261, type: !144)
!11781 = !DILocalVariable(name: "src_size", arg: 4, scope: !11774, file: !1906, line: 261, type: !200)
!11782 = !DILocalVariable(name: "bytes_to_copy", scope: !11774, file: !1906, line: 263, type: !200)
!11783 = !DILocation(line: 0, scope: !11774)
!11784 = !DILocation(line: 265, column: 18, scope: !11774)
!11785 = !DILocation(line: 266, column: 2, scope: !11774)
!11786 = !DILocation(line: 268, column: 2, scope: !11774)
!11787 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !1906, file: !1906, line: 383, type: !11788, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2010, retainedNodes: !11790)
!11788 = !DISubroutineType(types: !11789)
!11789 = !{null, !1910}
!11790 = !{!11791}
!11791 = !DILocalVariable(name: "thread", arg: 1, scope: !11787, file: !1906, line: 383, type: !1910)
!11792 = !DILocation(line: 0, scope: !11787)
!11793 = !DILocation(line: 387, column: 2, scope: !11787)
!11794 = !DILocation(line: 388, column: 1, scope: !11787)
!11795 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !1906, file: !1906, line: 528, type: !11796, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2010, retainedNodes: !11803)
!11796 = !DISubroutineType(types: !11797)
!11797 = !{!977, !1910, !11798, !200, !3351, !102, !102, !102, !103, !121, !144}
!11798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11799, size: 32)
!11799 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3352, line: 44, baseType: !11800)
!11800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1860, line: 47, size: 8, elements: !11801)
!11801 = !{!11802}
!11802 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !11800, file: !1860, line: 48, baseType: !146, size: 8)
!11803 = !{!11804, !11805, !11806, !11807, !11808, !11809, !11810, !11811, !11812, !11813, !11814}
!11804 = !DILocalVariable(name: "new_thread", arg: 1, scope: !11795, file: !1906, line: 528, type: !1910)
!11805 = !DILocalVariable(name: "stack", arg: 2, scope: !11795, file: !1906, line: 529, type: !11798)
!11806 = !DILocalVariable(name: "stack_size", arg: 3, scope: !11795, file: !1906, line: 529, type: !200)
!11807 = !DILocalVariable(name: "entry", arg: 4, scope: !11795, file: !1906, line: 530, type: !3351)
!11808 = !DILocalVariable(name: "p1", arg: 5, scope: !11795, file: !1906, line: 531, type: !102)
!11809 = !DILocalVariable(name: "p2", arg: 6, scope: !11795, file: !1906, line: 531, type: !102)
!11810 = !DILocalVariable(name: "p3", arg: 7, scope: !11795, file: !1906, line: 531, type: !102)
!11811 = !DILocalVariable(name: "prio", arg: 8, scope: !11795, file: !1906, line: 532, type: !103)
!11812 = !DILocalVariable(name: "options", arg: 9, scope: !11795, file: !1906, line: 532, type: !121)
!11813 = !DILocalVariable(name: "name", arg: 10, scope: !11795, file: !1906, line: 532, type: !144)
!11814 = !DILocalVariable(name: "stack_ptr", scope: !11795, file: !1906, line: 534, type: !977)
!11815 = !DILocation(line: 0, scope: !11795)
!11816 = !DILocation(line: 550, column: 28, scope: !11795)
!11817 = !DILocation(line: 550, column: 2, scope: !11795)
!11818 = !DILocation(line: 553, column: 34, scope: !11795)
!11819 = !DILocation(line: 553, column: 2, scope: !11795)
!11820 = !DILocation(line: 554, column: 14, scope: !11795)
!11821 = !DILocation(line: 564, column: 2, scope: !11795)
!11822 = !DILocation(line: 567, column: 14, scope: !11795)
!11823 = !DILocation(line: 567, column: 24, scope: !11795)
!11824 = !DILocation(line: 612, column: 7, scope: !11825)
!11825 = distinct !DILexicalBlock(scope: !11795, file: !1906, line: 612, column: 6)
!11826 = !DILocation(line: 612, column: 6, scope: !11795)
!11827 = !DILocation(line: 627, column: 40, scope: !11795)
!11828 = !DILocation(line: 637, column: 2, scope: !11795)
!11829 = !DILocation(line: 613, column: 15, scope: !11830)
!11830 = distinct !DILexicalBlock(scope: !11825, file: !1906, line: 612, column: 17)
!11831 = !DILocation(line: 613, column: 29, scope: !11830)
!11832 = !DILocation(line: 638, column: 1, scope: !11795)
!11833 = distinct !DISubprogram(name: "z_waitq_init", scope: !11834, file: !11834, line: 47, type: !11835, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2010, retainedNodes: !11837)
!11834 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11835 = !DISubroutineType(types: !11836)
!11836 = !{null, !1941}
!11837 = !{!11838}
!11838 = !DILocalVariable(name: "w", arg: 1, scope: !11833, file: !11834, line: 47, type: !1941)
!11839 = !DILocation(line: 0, scope: !11833)
!11840 = !DILocation(line: 49, column: 21, scope: !11833)
!11841 = !DILocation(line: 49, column: 2, scope: !11833)
!11842 = !DILocation(line: 50, column: 1, scope: !11833)
!11843 = distinct !DISubprogram(name: "z_init_thread_base", scope: !1906, file: !1906, line: 791, type: !11844, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2010, retainedNodes: !11847)
!11844 = !DISubroutineType(types: !11845)
!11845 = !{null, !11846, !103, !121, !32}
!11846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1914, size: 32)
!11847 = !{!11848, !11849, !11850, !11851}
!11848 = !DILocalVariable(name: "thread_base", arg: 1, scope: !11843, file: !1906, line: 791, type: !11846)
!11849 = !DILocalVariable(name: "priority", arg: 2, scope: !11843, file: !1906, line: 791, type: !103)
!11850 = !DILocalVariable(name: "initial_state", arg: 3, scope: !11843, file: !1906, line: 792, type: !121)
!11851 = !DILocalVariable(name: "options", arg: 4, scope: !11843, file: !1906, line: 792, type: !32)
!11852 = !DILocation(line: 0, scope: !11843)
!11853 = !DILocation(line: 795, column: 15, scope: !11843)
!11854 = !DILocation(line: 795, column: 25, scope: !11843)
!11855 = !DILocation(line: 796, column: 30, scope: !11843)
!11856 = !DILocation(line: 796, column: 15, scope: !11843)
!11857 = !DILocation(line: 796, column: 28, scope: !11843)
!11858 = !DILocation(line: 797, column: 30, scope: !11843)
!11859 = !DILocation(line: 797, column: 15, scope: !11843)
!11860 = !DILocation(line: 797, column: 28, scope: !11843)
!11861 = !DILocation(line: 799, column: 22, scope: !11843)
!11862 = !DILocation(line: 799, column: 15, scope: !11843)
!11863 = !DILocation(line: 799, column: 20, scope: !11843)
!11864 = !DILocation(line: 801, column: 15, scope: !11843)
!11865 = !DILocation(line: 801, column: 28, scope: !11843)
!11866 = !DILocation(line: 814, column: 2, scope: !11843)
!11867 = !DILocation(line: 815, column: 1, scope: !11843)
!11868 = distinct !DISubprogram(name: "setup_thread_stack", scope: !1906, file: !1906, line: 449, type: !11869, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2010, retainedNodes: !11871)
!11869 = !DISubroutineType(types: !11870)
!11870 = !{!977, !1910, !11798, !200}
!11871 = !{!11872, !11873, !11874, !11875, !11876, !11877, !11878, !11879}
!11872 = !DILocalVariable(name: "new_thread", arg: 1, scope: !11868, file: !1906, line: 449, type: !1910)
!11873 = !DILocalVariable(name: "stack", arg: 2, scope: !11868, file: !1906, line: 450, type: !11798)
!11874 = !DILocalVariable(name: "stack_size", arg: 3, scope: !11868, file: !1906, line: 450, type: !200)
!11875 = !DILocalVariable(name: "stack_obj_size", scope: !11868, file: !1906, line: 452, type: !200)
!11876 = !DILocalVariable(name: "stack_buf_size", scope: !11868, file: !1906, line: 452, type: !200)
!11877 = !DILocalVariable(name: "stack_ptr", scope: !11868, file: !1906, line: 453, type: !977)
!11878 = !DILocalVariable(name: "stack_buf_start", scope: !11868, file: !1906, line: 453, type: !977)
!11879 = !DILocalVariable(name: "delta", scope: !11868, file: !1906, line: 454, type: !200)
!11880 = !DILocation(line: 0, scope: !11868)
!11881 = !DILocation(line: 465, column: 20, scope: !11882)
!11882 = distinct !DILexicalBlock(scope: !11868, file: !1906, line: 463, column: 2)
!11883 = !DILocation(line: 466, column: 21, scope: !11882)
!11884 = !DILocation(line: 473, column: 28, scope: !11868)
!11885 = !DILocation(line: 514, column: 33, scope: !11868)
!11886 = !DILocation(line: 514, column: 25, scope: !11868)
!11887 = !DILocation(line: 514, column: 31, scope: !11868)
!11888 = !DILocation(line: 515, column: 25, scope: !11868)
!11889 = !DILocation(line: 515, column: 30, scope: !11868)
!11890 = !DILocation(line: 516, column: 25, scope: !11868)
!11891 = !DILocation(line: 516, column: 31, scope: !11868)
!11892 = !DILocation(line: 520, column: 2, scope: !11868)
!11893 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !1860, file: !1860, line: 331, type: !11894, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2010, retainedNodes: !11896)
!11894 = !DISubroutineType(types: !11895)
!11895 = !{!977, !11798}
!11896 = !{!11897}
!11897 = !DILocalVariable(name: "sym", arg: 1, scope: !11893, file: !1860, line: 331, type: !11798)
!11898 = !DILocation(line: 0, scope: !11893)
!11899 = !DILocation(line: 333, column: 21, scope: !11893)
!11900 = !DILocation(line: 333, column: 2, scope: !11893)
!11901 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !11902, file: !11902, line: 40, type: !11903, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2010, retainedNodes: !11905)
!11902 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11903 = !DISubroutineType(types: !11904)
!11904 = !{null, !11846}
!11905 = !{!11906}
!11906 = !DILocalVariable(name: "thread_base", arg: 1, scope: !11901, file: !11902, line: 40, type: !11846)
!11907 = !DILocation(line: 0, scope: !11901)
!11908 = !DILocation(line: 42, column: 31, scope: !11901)
!11909 = !DILocation(line: 42, column: 2, scope: !11901)
!11910 = !DILocation(line: 43, column: 1, scope: !11901)
!11911 = distinct !DISubprogram(name: "z_init_timeout", scope: !11902, file: !11902, line: 25, type: !1967, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2010, retainedNodes: !11912)
!11912 = !{!11913}
!11913 = !DILocalVariable(name: "to", arg: 1, scope: !11911, file: !11902, line: 25, type: !1969)
!11914 = !DILocation(line: 0, scope: !11911)
!11915 = !DILocation(line: 27, column: 22, scope: !11911)
!11916 = !DILocation(line: 27, column: 2, scope: !11911)
!11917 = !DILocation(line: 28, column: 1, scope: !11911)
!11918 = distinct !DISubprogram(name: "sys_dnode_init", scope: !221, file: !221, line: 211, type: !11919, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2010, retainedNodes: !11921)
!11919 = !DISubroutineType(types: !11920)
!11920 = !{null, !2013}
!11921 = !{!11922}
!11922 = !DILocalVariable(name: "node", arg: 1, scope: !11918, file: !221, line: 211, type: !2013)
!11923 = !DILocation(line: 0, scope: !11918)
!11924 = !DILocation(line: 213, column: 8, scope: !11918)
!11925 = !DILocation(line: 213, column: 13, scope: !11918)
!11926 = !DILocation(line: 214, column: 8, scope: !11918)
!11927 = !DILocation(line: 214, column: 13, scope: !11918)
!11928 = !DILocation(line: 215, column: 1, scope: !11918)
!11929 = distinct !DISubprogram(name: "sys_dlist_init", scope: !221, file: !221, line: 197, type: !11930, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2010, retainedNodes: !11933)
!11930 = !DISubroutineType(types: !11931)
!11931 = !{null, !11932}
!11932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1946, size: 32)
!11933 = !{!11934}
!11934 = !DILocalVariable(name: "list", arg: 1, scope: !11929, file: !221, line: 197, type: !11932)
!11935 = !DILocation(line: 0, scope: !11929)
!11936 = !DILocation(line: 199, column: 8, scope: !11929)
!11937 = !DILocation(line: 199, column: 13, scope: !11929)
!11938 = !DILocation(line: 200, column: 8, scope: !11929)
!11939 = !DILocation(line: 200, column: 13, scope: !11929)
!11940 = !DILocation(line: 201, column: 1, scope: !11929)
!11941 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !1906, file: !1906, line: 641, type: !11942, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2010, retainedNodes: !11948)
!11942 = !DISubroutineType(types: !11943)
!11943 = !{!1909, !1910, !11798, !200, !3351, !102, !102, !102, !103, !121, !11944}
!11944 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1391, line: 67, baseType: !11945)
!11945 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1391, line: 65, size: 64, elements: !11946)
!11946 = !{!11947}
!11947 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !11945, file: !1391, line: 66, baseType: !1390, size: 64)
!11948 = !{!11949, !11950, !11951, !11952, !11953, !11954, !11955, !11956, !11957, !11958}
!11949 = !DILocalVariable(name: "new_thread", arg: 1, scope: !11941, file: !1906, line: 641, type: !1910)
!11950 = !DILocalVariable(name: "stack", arg: 2, scope: !11941, file: !1906, line: 642, type: !11798)
!11951 = !DILocalVariable(name: "stack_size", arg: 3, scope: !11941, file: !1906, line: 643, type: !200)
!11952 = !DILocalVariable(name: "entry", arg: 4, scope: !11941, file: !1906, line: 643, type: !3351)
!11953 = !DILocalVariable(name: "p1", arg: 5, scope: !11941, file: !1906, line: 644, type: !102)
!11954 = !DILocalVariable(name: "p2", arg: 6, scope: !11941, file: !1906, line: 644, type: !102)
!11955 = !DILocalVariable(name: "p3", arg: 7, scope: !11941, file: !1906, line: 644, type: !102)
!11956 = !DILocalVariable(name: "prio", arg: 8, scope: !11941, file: !1906, line: 645, type: !103)
!11957 = !DILocalVariable(name: "options", arg: 9, scope: !11941, file: !1906, line: 645, type: !121)
!11958 = !DILocalVariable(name: "delay", arg: 10, scope: !11941, file: !1906, line: 645, type: !11944)
!11959 = !DILocation(line: 0, scope: !11941)
!11960 = !DILocation(line: 649, column: 2, scope: !11941)
!11961 = !DILocation(line: 652, column: 7, scope: !11962)
!11962 = distinct !DILexicalBlock(scope: !11941, file: !1906, line: 652, column: 6)
!11963 = !DILocation(line: 652, column: 6, scope: !11941)
!11964 = !DILocation(line: 653, column: 3, scope: !11965)
!11965 = distinct !DILexicalBlock(scope: !11962, file: !1906, line: 652, column: 39)
!11966 = !DILocation(line: 654, column: 2, scope: !11965)
!11967 = !DILocation(line: 656, column: 2, scope: !11941)
!11968 = distinct !DISubprogram(name: "schedule_new_thread", scope: !1906, file: !1906, line: 401, type: !11969, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2010, retainedNodes: !11971)
!11969 = !DISubroutineType(types: !11970)
!11970 = !{null, !1910, !11944}
!11971 = !{!11972, !11973}
!11972 = !DILocalVariable(name: "thread", arg: 1, scope: !11968, file: !1906, line: 401, type: !1910)
!11973 = !DILocalVariable(name: "delay", arg: 2, scope: !11968, file: !1906, line: 401, type: !11944)
!11974 = !DILocation(line: 0, scope: !11968)
!11975 = !DILocation(line: 404, column: 6, scope: !11976)
!11976 = distinct !DILexicalBlock(scope: !11968, file: !1906, line: 404, column: 6)
!11977 = !DILocation(line: 404, column: 6, scope: !11968)
!11978 = !DILocation(line: 405, column: 3, scope: !11979)
!11979 = distinct !DILexicalBlock(scope: !11976, file: !1906, line: 404, column: 38)
!11980 = !DILocation(line: 406, column: 2, scope: !11979)
!11981 = !DILocation(line: 407, column: 3, scope: !11982)
!11982 = distinct !DILexicalBlock(scope: !11976, file: !1906, line: 406, column: 9)
!11983 = !DILocation(line: 413, column: 1, scope: !11968)
!11984 = distinct !DISubprogram(name: "k_thread_start", scope: !3128, file: !3128, line: 205, type: !11985, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2010, retainedNodes: !11987)
!11985 = !DISubroutineType(types: !11986)
!11986 = !{null, !1909}
!11987 = !{!11988}
!11988 = !DILocalVariable(name: "thread", arg: 1, scope: !11984, file: !3128, line: 205, type: !1909)
!11989 = !DILocation(line: 0, scope: !11984)
!11990 = !DILocation(line: 214, column: 2, scope: !11991)
!11991 = distinct !DILexicalBlock(scope: !11984, file: !3128, line: 214, column: 2)
!11992 = !{i64 2154867024}
!11993 = !DILocation(line: 215, column: 2, scope: !11984)
!11994 = !DILocation(line: 216, column: 1, scope: !11984)
!11995 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !11902, file: !11902, line: 47, type: !11969, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2010, retainedNodes: !11996)
!11996 = !{!11997, !11998}
!11997 = !DILocalVariable(name: "thread", arg: 1, scope: !11995, file: !11902, line: 47, type: !1910)
!11998 = !DILocalVariable(name: "ticks", arg: 2, scope: !11995, file: !11902, line: 47, type: !11944)
!11999 = !DILocation(line: 0, scope: !11995)
!12000 = !DILocation(line: 49, column: 30, scope: !11995)
!12001 = !DILocation(line: 49, column: 2, scope: !11995)
!12002 = !DILocation(line: 50, column: 1, scope: !11995)
!12003 = distinct !DISubprogram(name: "z_init_static_threads", scope: !1906, file: !1906, line: 748, type: !2928, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2010, retainedNodes: !12004)
!12004 = !{!12005, !12023}
!12005 = !DILocalVariable(name: "thread_data", scope: !12006, file: !1906, line: 750, type: !12007)
!12006 = distinct !DILexicalBlock(scope: !12003, file: !1906, line: 750, column: 2)
!12007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12008, size: 32)
!12008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !307, line: 620, size: 384, elements: !12009)
!12009 = !{!12010, !12011, !12012, !12013, !12014, !12015, !12016, !12017, !12018, !12019, !12020, !12022}
!12010 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !12008, file: !307, line: 621, baseType: !1910, size: 32)
!12011 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !12008, file: !307, line: 622, baseType: !11798, size: 32, offset: 32)
!12012 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !12008, file: !307, line: 623, baseType: !32, size: 32, offset: 64)
!12013 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !12008, file: !307, line: 624, baseType: !3351, size: 32, offset: 96)
!12014 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !12008, file: !307, line: 625, baseType: !102, size: 32, offset: 128)
!12015 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !12008, file: !307, line: 626, baseType: !102, size: 32, offset: 160)
!12016 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !12008, file: !307, line: 627, baseType: !102, size: 32, offset: 192)
!12017 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !12008, file: !307, line: 628, baseType: !103, size: 32, offset: 224)
!12018 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !12008, file: !307, line: 629, baseType: !121, size: 32, offset: 256)
!12019 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !12008, file: !307, line: 630, baseType: !587, size: 32, offset: 288)
!12020 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !12008, file: !307, line: 631, baseType: !12021, size: 32, offset: 320)
!12021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2928, size: 32)
!12022 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !12008, file: !307, line: 632, baseType: !144, size: 32, offset: 352)
!12023 = !DILocalVariable(name: "thread_data", scope: !12024, file: !1906, line: 781, type: !12007)
!12024 = distinct !DILexicalBlock(scope: !12003, file: !1906, line: 781, column: 2)
!12025 = !DILocation(line: 0, scope: !12006)
!12026 = !DILocation(line: 750, column: 2, scope: !12006)
!12027 = !DILocation(line: 780, column: 2, scope: !12003)
!12028 = !DILocation(line: 0, scope: !12024)
!12029 = !DILocation(line: 781, column: 2, scope: !12024)
!12030 = !DILocation(line: 752, column: 17, scope: !12031)
!12031 = distinct !DILexicalBlock(scope: !12032, file: !1906, line: 750, column: 38)
!12032 = distinct !DILexicalBlock(scope: !12006, file: !1906, line: 750, column: 2)
!12033 = !DILocation(line: 753, column: 17, scope: !12031)
!12034 = !DILocation(line: 754, column: 17, scope: !12031)
!12035 = !DILocation(line: 755, column: 17, scope: !12031)
!12036 = !DILocation(line: 756, column: 17, scope: !12031)
!12037 = !DILocation(line: 757, column: 17, scope: !12031)
!12038 = !DILocation(line: 758, column: 17, scope: !12031)
!12039 = !DILocation(line: 759, column: 17, scope: !12031)
!12040 = !DILocation(line: 760, column: 17, scope: !12031)
!12041 = !DILocation(line: 751, column: 3, scope: !12031)
!12042 = !DILocation(line: 763, column: 16, scope: !12031)
!12043 = !DILocation(line: 763, column: 29, scope: !12031)
!12044 = !DILocation(line: 763, column: 39, scope: !12031)
!12045 = !DILocation(line: 750, column: 2, scope: !12032)
!12046 = !DILocation(line: 750, column: 2, scope: !12047)
!12047 = distinct !DILexicalBlock(scope: !12032, file: !1906, line: 750, column: 2)
!12048 = distinct !{!12048, !12026, !12049}
!12049 = !DILocation(line: 764, column: 2, scope: !12006)
!12050 = !DILocation(line: 787, column: 2, scope: !12003)
!12051 = !DILocation(line: 788, column: 1, scope: !12003)
!12052 = !DILocation(line: 782, column: 20, scope: !12053)
!12053 = distinct !DILexicalBlock(scope: !12054, file: !1906, line: 782, column: 7)
!12054 = distinct !DILexicalBlock(scope: !12055, file: !1906, line: 781, column: 38)
!12055 = distinct !DILexicalBlock(scope: !12024, file: !1906, line: 781, column: 2)
!12056 = !DILocation(line: 782, column: 31, scope: !12053)
!12057 = !DILocation(line: 782, column: 7, scope: !12054)
!12058 = !DILocation(line: 783, column: 37, scope: !12059)
!12059 = distinct !DILexicalBlock(scope: !12053, file: !1906, line: 782, column: 51)
!12060 = !DILocation(line: 784, column: 10, scope: !12059)
!12061 = !DILocation(line: 783, column: 4, scope: !12059)
!12062 = !DILocation(line: 785, column: 3, scope: !12059)
!12063 = !DILocation(line: 781, column: 2, scope: !12055)
!12064 = !DILocation(line: 781, column: 2, scope: !12065)
!12065 = distinct !DILexicalBlock(scope: !12055, file: !1906, line: 781, column: 2)
!12066 = distinct !{!12066, !12029, !12067}
!12067 = !DILocation(line: 786, column: 2, scope: !12024)
!12068 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !12069, file: !12069, line: 403, type: !12070, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2010, retainedNodes: !12072)
!12069 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12070 = !DISubroutineType(types: !12071)
!12071 = !{!1302, !1302}
!12072 = !{!12073}
!12073 = !DILocalVariable(name: "t", arg: 1, scope: !12068, file: !12069, line: 403, type: !1302)
!12074 = !DILocation(line: 0, scope: !12068)
!12075 = !DILocalVariable(name: "t", arg: 1, scope: !12076, file: !12069, line: 102, type: !1302)
!12076 = distinct !DISubprogram(name: "z_tmcvt", scope: !12069, file: !12069, line: 102, type: !12077, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2010, retainedNodes: !12079)
!12077 = !DISubroutineType(types: !12078)
!12078 = !{!1302, !1302, !121, !121, !157, !157, !157, !157}
!12079 = !{!12075, !12080, !12081, !12082, !12083, !12084, !12085, !12086, !12087, !12088, !12089}
!12080 = !DILocalVariable(name: "from_hz", arg: 2, scope: !12076, file: !12069, line: 102, type: !121)
!12081 = !DILocalVariable(name: "to_hz", arg: 3, scope: !12076, file: !12069, line: 103, type: !121)
!12082 = !DILocalVariable(name: "const_hz", arg: 4, scope: !12076, file: !12069, line: 103, type: !157)
!12083 = !DILocalVariable(name: "result32", arg: 5, scope: !12076, file: !12069, line: 104, type: !157)
!12084 = !DILocalVariable(name: "round_up", arg: 6, scope: !12076, file: !12069, line: 104, type: !157)
!12085 = !DILocalVariable(name: "round_off", arg: 7, scope: !12076, file: !12069, line: 105, type: !157)
!12086 = !DILocalVariable(name: "mul_ratio", scope: !12076, file: !12069, line: 107, type: !157)
!12087 = !DILocalVariable(name: "div_ratio", scope: !12076, file: !12069, line: 109, type: !157)
!12088 = !DILocalVariable(name: "off", scope: !12076, file: !12069, line: 116, type: !1302)
!12089 = !DILocalVariable(name: "rdivisor", scope: !12090, file: !12069, line: 119, type: !121)
!12090 = distinct !DILexicalBlock(scope: !12091, file: !12069, line: 118, column: 18)
!12091 = distinct !DILexicalBlock(scope: !12076, file: !12069, line: 118, column: 6)
!12092 = !DILocation(line: 0, scope: !12076, inlinedAt: !12093)
!12093 = distinct !DILocation(line: 406, column: 9, scope: !12068)
!12094 = !DILocation(line: 145, column: 13, scope: !12095, inlinedAt: !12093)
!12095 = distinct !DILexicalBlock(scope: !12096, file: !12069, line: 144, column: 10)
!12096 = distinct !DILexicalBlock(scope: !12097, file: !12069, line: 142, column: 7)
!12097 = distinct !DILexicalBlock(scope: !12098, file: !12069, line: 141, column: 24)
!12098 = distinct !DILexicalBlock(scope: !12099, file: !12069, line: 141, column: 13)
!12099 = distinct !DILexicalBlock(scope: !12076, file: !12069, line: 134, column: 6)
!12100 = !DILocation(line: 406, column: 2, scope: !12068)
!12101 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !1906, file: !1906, line: 817, type: !3349, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2010, retainedNodes: !12102)
!12102 = !{!12103, !12104, !12105, !12106}
!12103 = !DILocalVariable(name: "entry", arg: 1, scope: !12101, file: !1906, line: 817, type: !3351)
!12104 = !DILocalVariable(name: "p1", arg: 2, scope: !12101, file: !1906, line: 818, type: !102)
!12105 = !DILocalVariable(name: "p2", arg: 3, scope: !12101, file: !1906, line: 818, type: !102)
!12106 = !DILocalVariable(name: "p3", arg: 4, scope: !12101, file: !1906, line: 818, type: !102)
!12107 = !DILocation(line: 0, scope: !12101)
!12108 = !DILocation(line: 822, column: 2, scope: !12101)
!12109 = !DILocation(line: 822, column: 17, scope: !12101)
!12110 = !DILocation(line: 822, column: 30, scope: !12101)
!12111 = !DILocation(line: 823, column: 2, scope: !12101)
!12112 = !DILocation(line: 845, column: 2, scope: !12101)
!12113 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !1906, file: !1906, line: 888, type: !12114, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2010, retainedNodes: !12116)
!12114 = !DISubroutineType(types: !12115)
!12115 = !{!103, !1910}
!12116 = !{!12117}
!12117 = !DILocalVariable(name: "thread", arg: 1, scope: !12113, file: !1906, line: 888, type: !1910)
!12118 = !DILocation(line: 0, scope: !12113)
!12119 = !DILocation(line: 893, column: 2, scope: !12113)
!12120 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !1906, file: !1906, line: 897, type: !12121, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2010, retainedNodes: !12123)
!12121 = !DISubroutineType(types: !12122)
!12122 = !{!103, !1910, !32}
!12123 = !{!12124, !12125}
!12124 = !DILocalVariable(name: "thread", arg: 1, scope: !12120, file: !1906, line: 897, type: !1910)
!12125 = !DILocalVariable(name: "options", arg: 2, scope: !12120, file: !1906, line: 897, type: !32)
!12126 = !DILocation(line: 0, scope: !12120)
!12127 = !DILocation(line: 902, column: 2, scope: !12120)
!12128 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !1906, file: !1906, line: 1072, type: !12129, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2010, retainedNodes: !12134)
!12129 = !DISubroutineType(types: !12130)
!12130 = !{!103, !1909, !12131}
!12131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12132, size: 32)
!12132 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !211, line: 234, baseType: !12133)
!12133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !211, line: 192, elements: !322)
!12134 = !{!12135, !12136}
!12135 = !DILocalVariable(name: "thread", arg: 1, scope: !12128, file: !1906, line: 1072, type: !1909)
!12136 = !DILocalVariable(name: "stats", arg: 2, scope: !12128, file: !1906, line: 1073, type: !12131)
!12137 = !DILocation(line: 0, scope: !12128)
!12138 = !DILocation(line: 1075, column: 14, scope: !12139)
!12139 = distinct !DILexicalBlock(scope: !12128, file: !1906, line: 1075, column: 6)
!12140 = !DILocation(line: 1075, column: 23, scope: !12139)
!12141 = !DILocation(line: 1086, column: 1, scope: !12128)
!12142 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !1906, file: !1906, line: 1088, type: !12143, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2010, retainedNodes: !12145)
!12143 = !DISubroutineType(types: !12144)
!12144 = !{!103, !12131}
!12145 = !{!12146}
!12146 = !DILocalVariable(name: "stats", arg: 1, scope: !12142, file: !1906, line: 1088, type: !12131)
!12147 = !DILocation(line: 0, scope: !12142)
!12148 = !DILocation(line: 1094, column: 12, scope: !12149)
!12149 = distinct !DILexicalBlock(scope: !12142, file: !1906, line: 1094, column: 6)
!12150 = !DILocation(line: 1120, column: 1, scope: !12142)
!12151 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !12152, file: !12152, line: 20, type: !2928, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2909, retainedNodes: !322)
!12152 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12153 = !DILocation(line: 30, column: 2, scope: !12151)
!12154 = !DILocation(line: 31, column: 1, scope: !12151)
!12155 = distinct !DISubprogram(name: "idle", scope: !12152, file: !12152, line: 33, type: !3354, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2909, retainedNodes: !12156)
!12156 = !{!12157, !12158, !12159}
!12157 = !DILocalVariable(name: "unused1", arg: 1, scope: !12155, file: !12152, line: 33, type: !102)
!12158 = !DILocalVariable(name: "unused2", arg: 2, scope: !12155, file: !12152, line: 33, type: !102)
!12159 = !DILocalVariable(name: "unused3", arg: 3, scope: !12155, file: !12152, line: 33, type: !102)
!12160 = !DILocation(line: 0, scope: !12155)
!12161 = !DILocation(line: 41, column: 2, scope: !12155)
!12162 = !DILocation(line: 55, column: 2, scope: !12163, inlinedAt: !12167)
!12163 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5324, file: !5324, line: 42, type: !5325, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2909, retainedNodes: !12164)
!12164 = !{!12165, !12166}
!12165 = !DILocalVariable(name: "key", scope: !12163, file: !5324, line: 44, type: !32)
!12166 = !DILocalVariable(name: "tmp", scope: !12163, file: !5324, line: 53, type: !32)
!12167 = distinct !DILocation(line: 62, column: 10, scope: !12168)
!12168 = distinct !DILexicalBlock(scope: !12155, file: !12152, line: 41, column: 15)
!12169 = !{i64 2222380}
!12170 = !DILocation(line: 0, scope: !12163, inlinedAt: !12167)
!12171 = !DILocation(line: 86, column: 3, scope: !12168)
!12172 = distinct !{!12172, !12161, !12173}
!12173 = !DILocation(line: 105, column: 2, scope: !12155)
!12174 = distinct !DISubprogram(name: "k_cpu_idle", scope: !307, file: !307, line: 5627, type: !2928, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2909, retainedNodes: !322)
!12175 = !DILocation(line: 5629, column: 2, scope: !12174)
!12176 = !DILocation(line: 5630, column: 1, scope: !12174)
!12177 = !DISubprogram(name: "arch_cpu_idle", scope: !3352, file: !3352, line: 167, type: !2928, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!12178 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2138, file: !2138, line: 93, type: !12179, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12181)
!12179 = !DISubroutineType(types: !12180)
!12180 = !{!587, !2033, !2033}
!12181 = !{!12182, !12183, !12184, !12185}
!12182 = !DILocalVariable(name: "thread_1", arg: 1, scope: !12178, file: !2138, line: 93, type: !2033)
!12183 = !DILocalVariable(name: "thread_2", arg: 2, scope: !12178, file: !2138, line: 94, type: !2033)
!12184 = !DILocalVariable(name: "b1", scope: !12178, file: !2138, line: 97, type: !587)
!12185 = !DILocalVariable(name: "b2", scope: !12178, file: !2138, line: 98, type: !587)
!12186 = !DILocation(line: 0, scope: !12178)
!12187 = !DILocation(line: 97, column: 30, scope: !12178)
!12188 = !DILocation(line: 98, column: 30, scope: !12178)
!12189 = !DILocation(line: 100, column: 9, scope: !12190)
!12190 = distinct !DILexicalBlock(scope: !12178, file: !2138, line: 100, column: 6)
!12191 = !DILocation(line: 100, column: 6, scope: !12178)
!12192 = !DILocation(line: 125, column: 1, scope: !12178)
!12193 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2138, file: !2138, line: 428, type: !12194, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12196)
!12194 = !DISubroutineType(types: !12195)
!12195 = !{null, !2033}
!12196 = !{!12197}
!12197 = !DILocalVariable(name: "curr", arg: 1, scope: !12193, file: !2138, line: 428, type: !2033)
!12198 = !DILocation(line: 0, scope: !12193)
!12199 = !DILocation(line: 434, column: 6, scope: !12200)
!12200 = distinct !DILexicalBlock(scope: !12193, file: !2138, line: 434, column: 6)
!12201 = !DILocation(line: 434, column: 23, scope: !12200)
!12202 = !DILocation(line: 434, column: 6, scope: !12193)
!12203 = !DILocation(line: 435, column: 50, scope: !12204)
!12204 = distinct !DILexicalBlock(scope: !12200, file: !2138, line: 434, column: 29)
!12205 = !DILocation(line: 435, column: 48, scope: !12204)
!12206 = !DILocation(line: 435, column: 29, scope: !12204)
!12207 = !DILocation(line: 436, column: 24, scope: !12204)
!12208 = !DILocation(line: 436, column: 3, scope: !12204)
!12209 = !DILocation(line: 437, column: 2, scope: !12204)
!12210 = !DILocation(line: 438, column: 1, scope: !12193)
!12211 = distinct !DISubprogram(name: "slice_time", scope: !2138, file: !2138, line: 407, type: !12212, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12214)
!12212 = !DISubroutineType(types: !12213)
!12213 = !{!103, !2033}
!12214 = !{!12215, !12216}
!12215 = !DILocalVariable(name: "curr", arg: 1, scope: !12211, file: !2138, line: 407, type: !2033)
!12216 = !DILocalVariable(name: "ret", scope: !12211, file: !2138, line: 409, type: !103)
!12217 = !DILocation(line: 0, scope: !12211)
!12218 = !DILocation(line: 409, column: 12, scope: !12211)
!12219 = !DILocation(line: 416, column: 2, scope: !12211)
!12220 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2138, file: !2138, line: 440, type: !12221, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12223)
!12221 = !DISubroutineType(types: !12222)
!12222 = !{null, !587, !103}
!12223 = !{!12224, !12225, !12226, !12232}
!12224 = !DILocalVariable(name: "slice", arg: 1, scope: !12220, file: !2138, line: 440, type: !587)
!12225 = !DILocalVariable(name: "prio", arg: 2, scope: !12220, file: !2138, line: 440, type: !103)
!12226 = !DILocalVariable(name: "__i", scope: !12227, file: !2138, line: 442, type: !12228)
!12227 = distinct !DILexicalBlock(scope: !12220, file: !2138, line: 442, column: 2)
!12228 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !321, line: 106, baseType: !12229)
!12229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !321, line: 32, size: 32, elements: !12230)
!12230 = !{!12231}
!12231 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !12229, file: !321, line: 33, baseType: !103, size: 32)
!12232 = !DILocalVariable(name: "__key", scope: !12227, file: !2138, line: 442, type: !12228)
!12233 = !DILocation(line: 0, scope: !12220)
!12234 = !DILocation(line: 0, scope: !12227)
!12235 = !DILocalVariable(name: "l", arg: 1, scope: !12236, file: !321, line: 136, type: !12239)
!12236 = distinct !DISubprogram(name: "k_spin_lock", scope: !321, file: !321, line: 136, type: !12237, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12240)
!12237 = !DISubroutineType(types: !12238)
!12238 = !{!12228, !12239}
!12239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2127, size: 32)
!12240 = !{!12235, !12241}
!12241 = !DILocalVariable(name: "k", scope: !12236, file: !321, line: 139, type: !12228)
!12242 = !DILocation(line: 0, scope: !12236, inlinedAt: !12243)
!12243 = distinct !DILocation(line: 442, column: 2, scope: !12227)
!12244 = !DILocation(line: 55, column: 2, scope: !12245, inlinedAt: !12249)
!12245 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5324, file: !5324, line: 42, type: !5325, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12246)
!12246 = !{!12247, !12248}
!12247 = !DILocalVariable(name: "key", scope: !12245, file: !5324, line: 44, type: !32)
!12248 = !DILocalVariable(name: "tmp", scope: !12245, file: !5324, line: 53, type: !32)
!12249 = distinct !DILocation(line: 145, column: 10, scope: !12236, inlinedAt: !12243)
!12250 = !{i64 2266351}
!12251 = !DILocation(line: 0, scope: !12245, inlinedAt: !12249)
!12252 = !DILocation(line: 443, column: 29, scope: !12253)
!12253 = distinct !DILexicalBlock(scope: !12254, file: !2138, line: 442, column: 26)
!12254 = distinct !DILexicalBlock(scope: !12227, file: !2138, line: 442, column: 2)
!12255 = !DILocation(line: 444, column: 17, scope: !12253)
!12256 = !DILocation(line: 445, column: 51, scope: !12257)
!12257 = distinct !DILexicalBlock(scope: !12253, file: !2138, line: 445, column: 7)
!12258 = !DILocation(line: 445, column: 7, scope: !12253)
!12259 = !DILocation(line: 0, scope: !12253)
!12260 = !DILocation(line: 451, column: 18, scope: !12253)
!12261 = !DILocation(line: 452, column: 3, scope: !12253)
!12262 = !DILocalVariable(name: "key", arg: 2, scope: !12263, file: !321, line: 190, type: !12228)
!12263 = distinct !DISubprogram(name: "k_spin_unlock", scope: !321, file: !321, line: 189, type: !12264, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12266)
!12264 = !DISubroutineType(types: !12265)
!12265 = !{null, !12239, !12228}
!12266 = !{!12267, !12262}
!12267 = !DILocalVariable(name: "l", arg: 1, scope: !12263, file: !321, line: 189, type: !12239)
!12268 = !DILocation(line: 0, scope: !12263, inlinedAt: !12269)
!12269 = distinct !DILocation(line: 442, column: 2, scope: !12254)
!12270 = !DILocalVariable(name: "key", arg: 1, scope: !12271, file: !5324, line: 84, type: !32)
!12271 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5324, file: !5324, line: 84, type: !5335, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12272)
!12272 = !{!12270}
!12273 = !DILocation(line: 0, scope: !12271, inlinedAt: !12274)
!12274 = distinct !DILocation(line: 215, column: 2, scope: !12263, inlinedAt: !12269)
!12275 = !DILocation(line: 95, column: 2, scope: !12271, inlinedAt: !12274)
!12276 = !{i64 2267168}
!12277 = !DILocation(line: 454, column: 1, scope: !12220)
!12278 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !12069, file: !12069, line: 389, type: !6506, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12279)
!12279 = !{!12280}
!12280 = !DILocalVariable(name: "t", arg: 1, scope: !12278, file: !12069, line: 389, type: !121)
!12281 = !DILocation(line: 0, scope: !12278)
!12282 = !DILocalVariable(name: "t", arg: 1, scope: !12283, file: !12069, line: 102, type: !1302)
!12283 = distinct !DISubprogram(name: "z_tmcvt", scope: !12069, file: !12069, line: 102, type: !12077, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12284)
!12284 = !{!12282, !12285, !12286, !12287, !12288, !12289, !12290, !12291, !12292, !12293, !12294}
!12285 = !DILocalVariable(name: "from_hz", arg: 2, scope: !12283, file: !12069, line: 102, type: !121)
!12286 = !DILocalVariable(name: "to_hz", arg: 3, scope: !12283, file: !12069, line: 103, type: !121)
!12287 = !DILocalVariable(name: "const_hz", arg: 4, scope: !12283, file: !12069, line: 103, type: !157)
!12288 = !DILocalVariable(name: "result32", arg: 5, scope: !12283, file: !12069, line: 104, type: !157)
!12289 = !DILocalVariable(name: "round_up", arg: 6, scope: !12283, file: !12069, line: 104, type: !157)
!12290 = !DILocalVariable(name: "round_off", arg: 7, scope: !12283, file: !12069, line: 105, type: !157)
!12291 = !DILocalVariable(name: "mul_ratio", scope: !12283, file: !12069, line: 107, type: !157)
!12292 = !DILocalVariable(name: "div_ratio", scope: !12283, file: !12069, line: 109, type: !157)
!12293 = !DILocalVariable(name: "off", scope: !12283, file: !12069, line: 116, type: !1302)
!12294 = !DILocalVariable(name: "rdivisor", scope: !12295, file: !12069, line: 119, type: !121)
!12295 = distinct !DILexicalBlock(scope: !12296, file: !12069, line: 118, column: 18)
!12296 = distinct !DILexicalBlock(scope: !12283, file: !12069, line: 118, column: 6)
!12297 = !DILocation(line: 0, scope: !12283, inlinedAt: !12298)
!12298 = distinct !DILocation(line: 392, column: 9, scope: !12278)
!12299 = !DILocation(line: 143, column: 25, scope: !12300, inlinedAt: !12298)
!12300 = distinct !DILexicalBlock(scope: !12301, file: !12069, line: 142, column: 17)
!12301 = distinct !DILexicalBlock(scope: !12302, file: !12069, line: 142, column: 7)
!12302 = distinct !DILexicalBlock(scope: !12303, file: !12069, line: 141, column: 24)
!12303 = distinct !DILexicalBlock(scope: !12304, file: !12069, line: 141, column: 13)
!12304 = distinct !DILexicalBlock(scope: !12283, file: !12069, line: 134, column: 6)
!12305 = !DILocation(line: 392, column: 2, scope: !12278)
!12306 = distinct !DISubprogram(name: "z_time_slice", scope: !2138, file: !2138, line: 502, type: !7215, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12307)
!12307 = !{!12308, !12309}
!12308 = !DILocalVariable(name: "ticks", arg: 1, scope: !12306, file: !2138, line: 502, type: !103)
!12309 = !DILocalVariable(name: "key", scope: !12306, file: !2138, line: 511, type: !12228)
!12310 = !DILocation(line: 0, scope: !12306)
!12311 = !DILocation(line: 0, scope: !12236, inlinedAt: !12312)
!12312 = distinct !DILocation(line: 511, column: 25, scope: !12306)
!12313 = !DILocation(line: 55, column: 2, scope: !12245, inlinedAt: !12314)
!12314 = distinct !DILocation(line: 145, column: 10, scope: !12236, inlinedAt: !12312)
!12315 = !DILocation(line: 0, scope: !12245, inlinedAt: !12314)
!12316 = !DILocation(line: 514, column: 6, scope: !12317)
!12317 = distinct !DILexicalBlock(scope: !12306, file: !2138, line: 514, column: 6)
!12318 = !DILocation(line: 514, column: 25, scope: !12317)
!12319 = !DILocation(line: 514, column: 22, scope: !12317)
!12320 = !DILocation(line: 514, column: 6, scope: !12306)
!12321 = !DILocation(line: 515, column: 3, scope: !12322)
!12322 = distinct !DILexicalBlock(scope: !12317, file: !2138, line: 514, column: 35)
!12323 = !DILocation(line: 0, scope: !12263, inlinedAt: !12324)
!12324 = distinct !DILocation(line: 516, column: 3, scope: !12322)
!12325 = !DILocation(line: 0, scope: !12271, inlinedAt: !12326)
!12326 = distinct !DILocation(line: 215, column: 2, scope: !12263, inlinedAt: !12324)
!12327 = !DILocation(line: 95, column: 2, scope: !12271, inlinedAt: !12326)
!12328 = !DILocation(line: 517, column: 3, scope: !12322)
!12329 = !DILocation(line: 519, column: 18, scope: !12306)
!12330 = !DILocation(line: 522, column: 6, scope: !12331)
!12331 = distinct !DILexicalBlock(scope: !12306, file: !2138, line: 522, column: 6)
!12332 = !DILocation(line: 522, column: 27, scope: !12331)
!12333 = !DILocation(line: 522, column: 30, scope: !12331)
!12334 = !DILocation(line: 522, column: 6, scope: !12306)
!12335 = !DILocation(line: 523, column: 30, scope: !12336)
!12336 = distinct !DILexicalBlock(scope: !12337, file: !2138, line: 523, column: 7)
!12337 = distinct !DILexicalBlock(scope: !12331, file: !2138, line: 522, column: 51)
!12338 = !DILocation(line: 523, column: 13, scope: !12336)
!12339 = !DILocation(line: 523, column: 7, scope: !12337)
!12340 = !DILocation(line: 530, column: 10, scope: !12341)
!12341 = distinct !DILexicalBlock(scope: !12336, file: !2138, line: 523, column: 43)
!12342 = !DILocation(line: 531, column: 3, scope: !12341)
!12343 = !DILocation(line: 532, column: 30, scope: !12344)
!12344 = distinct !DILexicalBlock(scope: !12336, file: !2138, line: 531, column: 10)
!12345 = !DILocation(line: 535, column: 29, scope: !12346)
!12346 = distinct !DILexicalBlock(scope: !12331, file: !2138, line: 534, column: 9)
!12347 = !DILocation(line: 0, scope: !12263, inlinedAt: !12348)
!12348 = distinct !DILocation(line: 537, column: 2, scope: !12306)
!12349 = !DILocation(line: 0, scope: !12271, inlinedAt: !12350)
!12350 = distinct !DILocation(line: 215, column: 2, scope: !12263, inlinedAt: !12348)
!12351 = !DILocation(line: 95, column: 2, scope: !12271, inlinedAt: !12350)
!12352 = !DILocation(line: 538, column: 1, scope: !12306)
!12353 = distinct !DISubprogram(name: "sliceable", scope: !2138, file: !2138, line: 468, type: !12354, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12356)
!12354 = !DISubroutineType(types: !12355)
!12355 = !{!157, !2033}
!12356 = !{!12357, !12358}
!12357 = !DILocalVariable(name: "thread", arg: 1, scope: !12353, file: !2138, line: 468, type: !2033)
!12358 = !DILocalVariable(name: "ret", scope: !12353, file: !2138, line: 470, type: !157)
!12359 = !DILocation(line: 0, scope: !12353)
!12360 = !DILocation(line: 470, column: 13, scope: !12353)
!12361 = !DILocation(line: 471, column: 3, scope: !12353)
!12362 = !DILocation(line: 471, column: 7, scope: !12353)
!12363 = !DILocation(line: 472, column: 3, scope: !12353)
!12364 = !DILocation(line: 472, column: 37, scope: !12353)
!12365 = !DILocation(line: 472, column: 24, scope: !12353)
!12366 = !DILocation(line: 472, column: 43, scope: !12353)
!12367 = !DILocation(line: 472, column: 7, scope: !12353)
!12368 = !DILocation(line: 473, column: 3, scope: !12353)
!12369 = !DILocation(line: 473, column: 7, scope: !12353)
!12370 = !DILocation(line: 473, column: 6, scope: !12353)
!12371 = !DILocation(line: 479, column: 2, scope: !12353)
!12372 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2138, file: !2138, line: 482, type: !12373, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12375)
!12373 = !DISubroutineType(types: !12374)
!12374 = !{!12228, !12228}
!12375 = !{!12376, !12377}
!12376 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !12372, file: !2138, line: 482, type: !12228)
!12377 = !DILocalVariable(name: "curr", scope: !12372, file: !2138, line: 484, type: !2033)
!12378 = !DILocation(line: 0, scope: !12372)
!12379 = !DILocation(line: 484, column: 26, scope: !12372)
!12380 = !DILocation(line: 493, column: 7, scope: !12381)
!12381 = distinct !DILexicalBlock(scope: !12372, file: !2138, line: 493, column: 6)
!12382 = !DILocation(line: 493, column: 6, scope: !12372)
!12383 = !DILocation(line: 494, column: 3, scope: !12384)
!12384 = distinct !DILexicalBlock(scope: !12381, file: !2138, line: 493, column: 49)
!12385 = !DILocation(line: 495, column: 2, scope: !12384)
!12386 = !DILocation(line: 496, column: 2, scope: !12372)
!12387 = !DILocation(line: 499, column: 1, scope: !12372)
!12388 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !11508, file: !11508, line: 106, type: !12354, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12389)
!12389 = !{!12390, !12391}
!12390 = !DILocalVariable(name: "thread", arg: 1, scope: !12388, file: !11508, line: 106, type: !2033)
!12391 = !DILocalVariable(name: "state", scope: !12388, file: !11508, line: 108, type: !154)
!12392 = !DILocation(line: 0, scope: !12388)
!12393 = !DILocation(line: 108, column: 31, scope: !12388)
!12394 = !DILocation(line: 110, column: 16, scope: !12388)
!12395 = !DILocation(line: 111, column: 41, scope: !12388)
!12396 = !DILocation(line: 110, column: 2, scope: !12388)
!12397 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2138, file: !2138, line: 393, type: !12194, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12398)
!12398 = !{!12399}
!12399 = !DILocalVariable(name: "thread", arg: 1, scope: !12397, file: !2138, line: 393, type: !2033)
!12400 = !DILocation(line: 0, scope: !12397)
!12401 = !DILocation(line: 395, column: 6, scope: !12402)
!12402 = distinct !DILexicalBlock(scope: !12397, file: !2138, line: 395, column: 6)
!12403 = !DILocation(line: 395, column: 6, scope: !12397)
!12404 = !DILocalVariable(name: "thread", arg: 1, scope: !12405, file: !2138, line: 264, type: !2033)
!12405 = distinct !DISubprogram(name: "dequeue_thread", scope: !2138, file: !2138, line: 264, type: !12194, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12406)
!12406 = !{!12404}
!12407 = !DILocation(line: 0, scope: !12405, inlinedAt: !12408)
!12408 = distinct !DILocation(line: 396, column: 3, scope: !12409)
!12409 = distinct !DILexicalBlock(scope: !12402, file: !2138, line: 395, column: 34)
!12410 = !DILocation(line: 266, column: 15, scope: !12405, inlinedAt: !12408)
!12411 = !DILocation(line: 266, column: 28, scope: !12405, inlinedAt: !12408)
!12412 = !DILocalVariable(name: "thread", arg: 1, scope: !12413, file: !2138, line: 232, type: !2033)
!12413 = distinct !DISubprogram(name: "runq_remove", scope: !2138, file: !2138, line: 232, type: !12194, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12414)
!12414 = !{!12412}
!12415 = !DILocation(line: 0, scope: !12413, inlinedAt: !12416)
!12416 = distinct !DILocation(line: 268, column: 3, scope: !12417, inlinedAt: !12408)
!12417 = distinct !DILexicalBlock(scope: !12418, file: !2138, line: 267, column: 35)
!12418 = distinct !DILexicalBlock(scope: !12405, file: !2138, line: 267, column: 6)
!12419 = !DILocation(line: 234, column: 2, scope: !12413, inlinedAt: !12416)
!12420 = !DILocation(line: 397, column: 2, scope: !12409)
!12421 = !DILocalVariable(name: "thread", arg: 1, scope: !12422, file: !2138, line: 250, type: !2033)
!12422 = distinct !DISubprogram(name: "queue_thread", scope: !2138, file: !2138, line: 250, type: !12194, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12423)
!12423 = !{!12421}
!12424 = !DILocation(line: 0, scope: !12422, inlinedAt: !12425)
!12425 = distinct !DILocation(line: 398, column: 2, scope: !12397)
!12426 = !DILocation(line: 252, column: 15, scope: !12422, inlinedAt: !12425)
!12427 = !DILocation(line: 252, column: 28, scope: !12422, inlinedAt: !12425)
!12428 = !DILocalVariable(name: "thread", arg: 1, scope: !12429, file: !2138, line: 227, type: !2033)
!12429 = distinct !DISubprogram(name: "runq_add", scope: !2138, file: !2138, line: 227, type: !12194, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12430)
!12430 = !{!12428}
!12431 = !DILocation(line: 0, scope: !12429, inlinedAt: !12432)
!12432 = distinct !DILocation(line: 254, column: 3, scope: !12433, inlinedAt: !12425)
!12433 = distinct !DILexicalBlock(scope: !12434, file: !2138, line: 253, column: 35)
!12434 = distinct !DILexicalBlock(scope: !12422, file: !2138, line: 253, column: 6)
!12435 = !DILocalVariable(name: "pq", arg: 1, scope: !12436, file: !2138, line: 181, type: !12439)
!12436 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2138, file: !2138, line: 181, type: !12437, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12440)
!12437 = !DISubroutineType(types: !12438)
!12438 = !{null, !12439, !2033}
!12439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2069, size: 32)
!12440 = !{!12435, !12441, !12442}
!12441 = !DILocalVariable(name: "thread", arg: 2, scope: !12436, file: !2138, line: 182, type: !2033)
!12442 = !DILocalVariable(name: "t", scope: !12436, file: !2138, line: 184, type: !2033)
!12443 = !DILocation(line: 0, scope: !12436, inlinedAt: !12444)
!12444 = distinct !DILocation(line: 229, column: 2, scope: !12429, inlinedAt: !12432)
!12445 = !DILocation(line: 188, column: 2, scope: !12446, inlinedAt: !12444)
!12446 = distinct !DILexicalBlock(scope: !12436, file: !2138, line: 188, column: 2)
!12447 = !DILocation(line: 188, column: 2, scope: !12448, inlinedAt: !12444)
!12448 = distinct !DILexicalBlock(scope: !12446, file: !2138, line: 188, column: 2)
!12449 = !DILocation(line: 0, scope: !12446, inlinedAt: !12444)
!12450 = !DILocation(line: 189, column: 7, scope: !12451, inlinedAt: !12444)
!12451 = distinct !DILexicalBlock(scope: !12452, file: !2138, line: 189, column: 7)
!12452 = distinct !DILexicalBlock(scope: !12448, file: !2138, line: 188, column: 56)
!12453 = !DILocation(line: 189, column: 35, scope: !12451, inlinedAt: !12444)
!12454 = !DILocation(line: 189, column: 7, scope: !12452, inlinedAt: !12444)
!12455 = !DILocation(line: 191, column: 21, scope: !12456, inlinedAt: !12444)
!12456 = distinct !DILexicalBlock(scope: !12451, file: !2138, line: 189, column: 40)
!12457 = !DILocation(line: 190, column: 4, scope: !12456, inlinedAt: !12444)
!12458 = !DILocation(line: 192, column: 4, scope: !12456, inlinedAt: !12444)
!12459 = distinct !{!12459, !12445, !12460}
!12460 = !DILocation(line: 194, column: 2, scope: !12446, inlinedAt: !12444)
!12461 = !DILocation(line: 196, column: 37, scope: !12436, inlinedAt: !12444)
!12462 = !DILocation(line: 196, column: 2, scope: !12436, inlinedAt: !12444)
!12463 = !DILocation(line: 197, column: 1, scope: !12436, inlinedAt: !12444)
!12464 = !DILocation(line: 399, column: 25, scope: !12397)
!12465 = !DILocation(line: 399, column: 22, scope: !12397)
!12466 = !DILocation(line: 399, column: 2, scope: !12397)
!12467 = !DILocation(line: 400, column: 1, scope: !12397)
!12468 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !11508, file: !11508, line: 136, type: !12354, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12469)
!12469 = !{!12470}
!12470 = !DILocalVariable(name: "thread", arg: 1, scope: !12468, file: !11508, line: 136, type: !2033)
!12471 = !DILocation(line: 0, scope: !12468)
!12472 = !DILocation(line: 138, column: 9, scope: !12468)
!12473 = !DILocation(line: 138, column: 2, scope: !12468)
!12474 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2138, file: !2138, line: 1137, type: !12437, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12475)
!12475 = !{!12476, !12477}
!12476 = !DILocalVariable(name: "pq", arg: 1, scope: !12474, file: !2138, line: 1137, type: !12439)
!12477 = !DILocalVariable(name: "thread", arg: 2, scope: !12474, file: !2138, line: 1137, type: !2033)
!12478 = !DILocation(line: 0, scope: !12474)
!12479 = !DILocation(line: 1141, column: 33, scope: !12474)
!12480 = !DILocation(line: 1141, column: 2, scope: !12474)
!12481 = !DILocation(line: 1142, column: 1, scope: !12474)
!12482 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !221, file: !221, line: 294, type: !12483, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12485)
!12483 = !DISubroutineType(types: !12484)
!12484 = !{!2134, !12439}
!12485 = !{!12486}
!12486 = !DILocalVariable(name: "list", arg: 1, scope: !12482, file: !221, line: 294, type: !12439)
!12487 = !DILocation(line: 0, scope: !12482)
!12488 = !DILocation(line: 296, column: 9, scope: !12482)
!12489 = !DILocation(line: 296, column: 49, scope: !12482)
!12490 = !DILocation(line: 296, column: 2, scope: !12482)
!12491 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !221, file: !221, line: 443, type: !12492, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12494)
!12492 = !DISubroutineType(types: !12493)
!12493 = !{null, !2134, !2134}
!12494 = !{!12495, !12496, !12497}
!12495 = !DILocalVariable(name: "successor", arg: 1, scope: !12491, file: !221, line: 443, type: !2134)
!12496 = !DILocalVariable(name: "node", arg: 2, scope: !12491, file: !221, line: 443, type: !2134)
!12497 = !DILocalVariable(name: "prev", scope: !12491, file: !221, line: 445, type: !12498)
!12498 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2134)
!12499 = !DILocation(line: 0, scope: !12491)
!12500 = !DILocation(line: 445, column: 39, scope: !12491)
!12501 = !DILocation(line: 447, column: 8, scope: !12491)
!12502 = !DILocation(line: 447, column: 13, scope: !12491)
!12503 = !DILocation(line: 448, column: 8, scope: !12491)
!12504 = !DILocation(line: 448, column: 13, scope: !12491)
!12505 = !DILocation(line: 449, column: 8, scope: !12491)
!12506 = !DILocation(line: 449, column: 13, scope: !12491)
!12507 = !DILocation(line: 450, column: 18, scope: !12491)
!12508 = !DILocation(line: 451, column: 1, scope: !12491)
!12509 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !221, file: !221, line: 341, type: !12510, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12512)
!12510 = !DISubroutineType(types: !12511)
!12511 = !{!2134, !12439, !2134}
!12512 = !{!12513, !12514}
!12513 = !DILocalVariable(name: "list", arg: 1, scope: !12509, file: !221, line: 341, type: !12439)
!12514 = !DILocalVariable(name: "node", arg: 2, scope: !12509, file: !221, line: 342, type: !2134)
!12515 = !DILocation(line: 0, scope: !12509)
!12516 = !DILocation(line: 344, column: 15, scope: !12509)
!12517 = !DILocation(line: 344, column: 9, scope: !12509)
!12518 = !DILocation(line: 344, column: 26, scope: !12509)
!12519 = !DILocation(line: 344, column: 2, scope: !12509)
!12520 = distinct !DISubprogram(name: "sys_dlist_append", scope: !221, file: !221, line: 404, type: !12521, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12523)
!12521 = !DISubroutineType(types: !12522)
!12522 = !{null, !12439, !2134}
!12523 = !{!12524, !12525, !12526}
!12524 = !DILocalVariable(name: "list", arg: 1, scope: !12520, file: !221, line: 404, type: !12439)
!12525 = !DILocalVariable(name: "node", arg: 2, scope: !12520, file: !221, line: 404, type: !2134)
!12526 = !DILocalVariable(name: "tail", scope: !12520, file: !221, line: 406, type: !12498)
!12527 = !DILocation(line: 0, scope: !12520)
!12528 = !DILocation(line: 406, column: 34, scope: !12520)
!12529 = !DILocation(line: 408, column: 8, scope: !12520)
!12530 = !DILocation(line: 408, column: 13, scope: !12520)
!12531 = !DILocation(line: 409, column: 8, scope: !12520)
!12532 = !DILocation(line: 409, column: 13, scope: !12520)
!12533 = !DILocation(line: 411, column: 8, scope: !12520)
!12534 = !DILocation(line: 411, column: 13, scope: !12520)
!12535 = !DILocation(line: 412, column: 13, scope: !12520)
!12536 = !DILocation(line: 413, column: 1, scope: !12520)
!12537 = distinct !DISubprogram(name: "update_cache", scope: !2138, file: !2138, line: 559, type: !7215, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12538)
!12538 = !{!12539, !12540}
!12539 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !12537, file: !2138, line: 559, type: !103)
!12540 = !DILocalVariable(name: "thread", scope: !12537, file: !2138, line: 562, type: !2033)
!12541 = !DILocation(line: 0, scope: !12537)
!12542 = !DILocation(line: 239, column: 9, scope: !12543, inlinedAt: !12546)
!12543 = distinct !DISubprogram(name: "runq_best", scope: !2138, file: !2138, line: 237, type: !12544, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !322)
!12544 = !DISubroutineType(types: !12545)
!12545 = !{!2033}
!12546 = distinct !DILocation(line: 314, column: 28, scope: !12547, inlinedAt: !12550)
!12547 = distinct !DISubprogram(name: "next_up", scope: !2138, file: !2138, line: 312, type: !12544, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12548)
!12548 = !{!12549}
!12549 = !DILocalVariable(name: "thread", scope: !12547, file: !2138, line: 314, type: !2033)
!12550 = distinct !DILocation(line: 562, column: 28, scope: !12537)
!12551 = !DILocation(line: 0, scope: !12547, inlinedAt: !12550)
!12552 = !DILocation(line: 340, column: 17, scope: !12547, inlinedAt: !12550)
!12553 = !DILocation(line: 340, column: 9, scope: !12547, inlinedAt: !12550)
!12554 = !DILocalVariable(name: "thread", arg: 1, scope: !12555, file: !2138, line: 127, type: !2033)
!12555 = distinct !DISubprogram(name: "should_preempt", scope: !2138, file: !2138, line: 127, type: !12556, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12558)
!12556 = !DISubroutineType(types: !12557)
!12557 = !{!157, !2033, !103}
!12558 = !{!12554, !12559}
!12559 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !12555, file: !2138, line: 128, type: !103)
!12560 = !DILocation(line: 0, scope: !12555, inlinedAt: !12561)
!12561 = distinct !DILocation(line: 564, column: 6, scope: !12562)
!12562 = distinct !DILexicalBlock(scope: !12537, file: !2138, line: 564, column: 6)
!12563 = !DILocation(line: 133, column: 17, scope: !12564, inlinedAt: !12561)
!12564 = distinct !DILexicalBlock(scope: !12555, file: !2138, line: 133, column: 6)
!12565 = !DILocation(line: 0, scope: !12562)
!12566 = !DILocation(line: 133, column: 6, scope: !12555, inlinedAt: !12561)
!12567 = !DILocation(line: 140, column: 6, scope: !12568, inlinedAt: !12561)
!12568 = distinct !DILexicalBlock(scope: !12555, file: !2138, line: 140, column: 6)
!12569 = !DILocation(line: 140, column: 6, scope: !12555, inlinedAt: !12561)
!12570 = !DILocation(line: 150, column: 9, scope: !12571, inlinedAt: !12561)
!12571 = distinct !DILexicalBlock(scope: !12555, file: !2138, line: 149, column: 6)
!12572 = !DILocation(line: 149, column: 6, scope: !12555, inlinedAt: !12561)
!12573 = !DILocation(line: 157, column: 6, scope: !12574, inlinedAt: !12561)
!12574 = distinct !DILexicalBlock(scope: !12555, file: !2138, line: 157, column: 6)
!12575 = !DILocation(line: 564, column: 6, scope: !12537)
!12576 = !DILocation(line: 566, column: 14, scope: !12577)
!12577 = distinct !DILexicalBlock(scope: !12578, file: !2138, line: 566, column: 7)
!12578 = distinct !DILexicalBlock(scope: !12562, file: !2138, line: 564, column: 42)
!12579 = !DILocation(line: 566, column: 7, scope: !12578)
!12580 = !DILocation(line: 567, column: 4, scope: !12581)
!12581 = distinct !DILexicalBlock(scope: !12577, file: !2138, line: 566, column: 27)
!12582 = !DILocation(line: 568, column: 3, scope: !12581)
!12583 = !DILocation(line: 585, column: 1, scope: !12537)
!12584 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2138, file: !2138, line: 1144, type: !12585, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12587)
!12585 = !DISubroutineType(types: !12586)
!12586 = !{!2033, !12439}
!12587 = !{!12588, !12589, !12590}
!12588 = !DILocalVariable(name: "pq", arg: 1, scope: !12584, file: !2138, line: 1144, type: !12439)
!12589 = !DILocalVariable(name: "thread", scope: !12584, file: !2138, line: 1146, type: !2033)
!12590 = !DILocalVariable(name: "n", scope: !12584, file: !2138, line: 1147, type: !2134)
!12591 = !DILocation(line: 0, scope: !12584)
!12592 = !DILocation(line: 1147, column: 19, scope: !12584)
!12593 = !DILocation(line: 1152, column: 2, scope: !12584)
!12594 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !11508, file: !11508, line: 115, type: !12354, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12595)
!12595 = !{!12596}
!12596 = !DILocalVariable(name: "thread", arg: 1, scope: !12594, file: !11508, line: 115, type: !2033)
!12597 = !DILocation(line: 0, scope: !12594)
!12598 = !DILocation(line: 117, column: 46, scope: !12594)
!12599 = !DILocation(line: 117, column: 10, scope: !12594)
!12600 = !DILocation(line: 117, column: 9, scope: !12594)
!12601 = !DILocation(line: 117, column: 2, scope: !12594)
!12602 = distinct !DISubprogram(name: "is_preempt", scope: !2138, file: !2138, line: 62, type: !12212, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12603)
!12603 = !{!12604}
!12604 = !DILocalVariable(name: "thread", arg: 1, scope: !12602, file: !2138, line: 62, type: !2033)
!12605 = !DILocation(line: 0, scope: !12602)
!12606 = !DILocation(line: 65, column: 22, scope: !12602)
!12607 = !DILocation(line: 65, column: 30, scope: !12602)
!12608 = !DILocation(line: 65, column: 2, scope: !12602)
!12609 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !11902, file: !11902, line: 35, type: !12610, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12614)
!12610 = !DISubroutineType(types: !12611)
!12611 = !{!157, !12612}
!12612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12613, size: 32)
!12613 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2084)
!12614 = !{!12615}
!12615 = !DILocalVariable(name: "to", arg: 1, scope: !12609, file: !11902, line: 35, type: !12612)
!12616 = !DILocation(line: 0, scope: !12609)
!12617 = !DILocation(line: 37, column: 35, scope: !12609)
!12618 = !DILocation(line: 37, column: 10, scope: !12609)
!12619 = !DILocation(line: 37, column: 9, scope: !12609)
!12620 = !DILocation(line: 37, column: 2, scope: !12609)
!12621 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !221, file: !221, line: 225, type: !12622, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12626)
!12622 = !DISubroutineType(types: !12623)
!12623 = !{!157, !12624}
!12624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12625, size: 32)
!12625 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2043)
!12626 = !{!12627}
!12627 = !DILocalVariable(name: "node", arg: 1, scope: !12621, file: !221, line: 225, type: !12624)
!12628 = !DILocation(line: 0, scope: !12621)
!12629 = !DILocation(line: 227, column: 15, scope: !12621)
!12630 = !DILocation(line: 227, column: 20, scope: !12621)
!12631 = !DILocation(line: 227, column: 2, scope: !12621)
!12632 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !221, file: !221, line: 325, type: !12510, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12633)
!12633 = !{!12634, !12635}
!12634 = !DILocalVariable(name: "list", arg: 1, scope: !12632, file: !221, line: 325, type: !12439)
!12635 = !DILocalVariable(name: "node", arg: 2, scope: !12632, file: !221, line: 326, type: !2134)
!12636 = !DILocation(line: 0, scope: !12632)
!12637 = !DILocation(line: 328, column: 24, scope: !12632)
!12638 = !DILocation(line: 328, column: 15, scope: !12632)
!12639 = !DILocation(line: 328, column: 9, scope: !12632)
!12640 = !DILocation(line: 328, column: 45, scope: !12632)
!12641 = !DILocation(line: 328, column: 2, scope: !12632)
!12642 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !221, file: !221, line: 266, type: !12643, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12645)
!12643 = !DISubroutineType(types: !12644)
!12644 = !{!157, !12439}
!12645 = !{!12646}
!12646 = !DILocalVariable(name: "list", arg: 1, scope: !12642, file: !221, line: 266, type: !12439)
!12647 = !DILocation(line: 0, scope: !12642)
!12648 = !DILocation(line: 268, column: 15, scope: !12642)
!12649 = !DILocation(line: 268, column: 20, scope: !12642)
!12650 = !DILocation(line: 268, column: 2, scope: !12642)
!12651 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !221, file: !221, line: 496, type: !12652, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12654)
!12652 = !DISubroutineType(types: !12653)
!12653 = !{null, !2134}
!12654 = !{!12655, !12656, !12657}
!12655 = !DILocalVariable(name: "node", arg: 1, scope: !12651, file: !221, line: 496, type: !2134)
!12656 = !DILocalVariable(name: "prev", scope: !12651, file: !221, line: 498, type: !12498)
!12657 = !DILocalVariable(name: "next", scope: !12651, file: !221, line: 499, type: !12498)
!12658 = !DILocation(line: 0, scope: !12651)
!12659 = !DILocation(line: 498, column: 34, scope: !12651)
!12660 = !DILocation(line: 499, column: 34, scope: !12651)
!12661 = !DILocation(line: 501, column: 8, scope: !12651)
!12662 = !DILocation(line: 501, column: 13, scope: !12651)
!12663 = !DILocation(line: 502, column: 8, scope: !12651)
!12664 = !DILocation(line: 502, column: 13, scope: !12651)
!12665 = !DILocation(line: 503, column: 2, scope: !12651)
!12666 = !DILocation(line: 504, column: 1, scope: !12651)
!12667 = distinct !DISubprogram(name: "sys_dnode_init", scope: !221, file: !221, line: 211, type: !12652, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12668)
!12668 = !{!12669}
!12669 = !DILocalVariable(name: "node", arg: 1, scope: !12667, file: !221, line: 211, type: !2134)
!12670 = !DILocation(line: 0, scope: !12667)
!12671 = !DILocation(line: 213, column: 8, scope: !12667)
!12672 = !DILocation(line: 213, column: 13, scope: !12667)
!12673 = !DILocation(line: 214, column: 8, scope: !12667)
!12674 = !DILocation(line: 214, column: 13, scope: !12667)
!12675 = !DILocation(line: 215, column: 1, scope: !12667)
!12676 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !11508, file: !11508, line: 131, type: !12677, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12679)
!12677 = !DISubroutineType(types: !12678)
!12678 = !{!157, !2033, !121}
!12679 = !{!12680, !12681}
!12680 = !DILocalVariable(name: "thread", arg: 1, scope: !12676, file: !11508, line: 131, type: !2033)
!12681 = !DILocalVariable(name: "state", arg: 2, scope: !12676, file: !11508, line: 131, type: !121)
!12682 = !DILocation(line: 0, scope: !12676)
!12683 = !DILocation(line: 133, column: 23, scope: !12676)
!12684 = !DILocation(line: 133, column: 45, scope: !12676)
!12685 = !DILocation(line: 133, column: 2, scope: !12676)
!12686 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !11508, file: !11508, line: 211, type: !12687, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12689)
!12687 = !DISubroutineType(types: !12688)
!12688 = !{!157, !103, !103}
!12689 = !{!12690, !12691}
!12690 = !DILocalVariable(name: "prio", arg: 1, scope: !12686, file: !11508, line: 211, type: !103)
!12691 = !DILocalVariable(name: "test_prio", arg: 2, scope: !12686, file: !11508, line: 211, type: !103)
!12692 = !DILocation(line: 0, scope: !12686)
!12693 = !DILocation(line: 213, column: 9, scope: !12686)
!12694 = !DILocation(line: 213, column: 2, scope: !12686)
!12695 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !11508, file: !11508, line: 83, type: !12354, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12696)
!12696 = !{!12697}
!12697 = !DILocalVariable(name: "thread", arg: 1, scope: !12695, file: !11508, line: 83, type: !2033)
!12698 = !DILocation(line: 0, scope: !12695)
!12699 = !DILocation(line: 89, column: 16, scope: !12695)
!12700 = !DILocation(line: 89, column: 2, scope: !12695)
!12701 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !11508, file: !11508, line: 206, type: !12687, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12702)
!12702 = !{!12703, !12704}
!12703 = !DILocalVariable(name: "prio1", arg: 1, scope: !12701, file: !11508, line: 206, type: !103)
!12704 = !DILocalVariable(name: "prio2", arg: 2, scope: !12701, file: !11508, line: 206, type: !103)
!12705 = !DILocation(line: 0, scope: !12701)
!12706 = !DILocation(line: 208, column: 15, scope: !12701)
!12707 = !DILocation(line: 208, column: 2, scope: !12701)
!12708 = distinct !DISubprogram(name: "z_ready_thread", scope: !2138, file: !2138, line: 635, type: !12194, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12709)
!12709 = !{!12710, !12711, !12713}
!12710 = !DILocalVariable(name: "thread", arg: 1, scope: !12708, file: !2138, line: 635, type: !2033)
!12711 = !DILocalVariable(name: "__i", scope: !12712, file: !2138, line: 637, type: !12228)
!12712 = distinct !DILexicalBlock(scope: !12708, file: !2138, line: 637, column: 2)
!12713 = !DILocalVariable(name: "__key", scope: !12712, file: !2138, line: 637, type: !12228)
!12714 = !DILocation(line: 0, scope: !12708)
!12715 = !DILocation(line: 0, scope: !12712)
!12716 = !DILocation(line: 0, scope: !12236, inlinedAt: !12717)
!12717 = distinct !DILocation(line: 637, column: 2, scope: !12712)
!12718 = !DILocation(line: 55, column: 2, scope: !12245, inlinedAt: !12719)
!12719 = distinct !DILocation(line: 145, column: 10, scope: !12236, inlinedAt: !12717)
!12720 = !DILocation(line: 0, scope: !12245, inlinedAt: !12719)
!12721 = !DILocation(line: 639, column: 4, scope: !12722)
!12722 = distinct !DILexicalBlock(scope: !12723, file: !2138, line: 638, column: 41)
!12723 = distinct !DILexicalBlock(scope: !12724, file: !2138, line: 638, column: 7)
!12724 = distinct !DILexicalBlock(scope: !12725, file: !2138, line: 637, column: 26)
!12725 = distinct !DILexicalBlock(scope: !12712, file: !2138, line: 637, column: 2)
!12726 = !DILocation(line: 0, scope: !12263, inlinedAt: !12727)
!12727 = distinct !DILocation(line: 637, column: 2, scope: !12725)
!12728 = !DILocation(line: 0, scope: !12271, inlinedAt: !12729)
!12729 = distinct !DILocation(line: 215, column: 2, scope: !12263, inlinedAt: !12727)
!12730 = !DILocation(line: 95, column: 2, scope: !12271, inlinedAt: !12729)
!12731 = !DILocation(line: 642, column: 1, scope: !12708)
!12732 = distinct !DISubprogram(name: "ready_thread", scope: !2138, file: !2138, line: 617, type: !12194, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12733)
!12733 = !{!12734}
!12734 = !DILocalVariable(name: "thread", arg: 1, scope: !12732, file: !2138, line: 617, type: !2033)
!12735 = !DILocation(line: 0, scope: !12732)
!12736 = !DILocation(line: 626, column: 7, scope: !12737)
!12737 = distinct !DILexicalBlock(scope: !12732, file: !2138, line: 626, column: 6)
!12738 = !DILocation(line: 626, column: 34, scope: !12737)
!12739 = !DILocation(line: 626, column: 37, scope: !12737)
!12740 = !DILocation(line: 626, column: 6, scope: !12732)
!12741 = !DILocation(line: 0, scope: !12422, inlinedAt: !12742)
!12742 = distinct !DILocation(line: 629, column: 3, scope: !12743)
!12743 = distinct !DILexicalBlock(scope: !12737, file: !2138, line: 626, column: 64)
!12744 = !DILocation(line: 252, column: 15, scope: !12422, inlinedAt: !12742)
!12745 = !DILocation(line: 252, column: 28, scope: !12422, inlinedAt: !12742)
!12746 = !DILocation(line: 0, scope: !12429, inlinedAt: !12747)
!12747 = distinct !DILocation(line: 254, column: 3, scope: !12433, inlinedAt: !12742)
!12748 = !DILocation(line: 0, scope: !12436, inlinedAt: !12749)
!12749 = distinct !DILocation(line: 229, column: 2, scope: !12429, inlinedAt: !12747)
!12750 = !DILocation(line: 188, column: 2, scope: !12446, inlinedAt: !12749)
!12751 = !DILocation(line: 188, column: 2, scope: !12448, inlinedAt: !12749)
!12752 = !DILocation(line: 0, scope: !12446, inlinedAt: !12749)
!12753 = !DILocation(line: 189, column: 7, scope: !12451, inlinedAt: !12749)
!12754 = !DILocation(line: 189, column: 35, scope: !12451, inlinedAt: !12749)
!12755 = !DILocation(line: 189, column: 7, scope: !12452, inlinedAt: !12749)
!12756 = !DILocation(line: 191, column: 21, scope: !12456, inlinedAt: !12749)
!12757 = !DILocation(line: 190, column: 4, scope: !12456, inlinedAt: !12749)
!12758 = !DILocation(line: 192, column: 4, scope: !12456, inlinedAt: !12749)
!12759 = distinct !{!12759, !12750, !12760}
!12760 = !DILocation(line: 194, column: 2, scope: !12446, inlinedAt: !12749)
!12761 = !DILocation(line: 196, column: 37, scope: !12436, inlinedAt: !12749)
!12762 = !DILocation(line: 196, column: 2, scope: !12436, inlinedAt: !12749)
!12763 = !DILocation(line: 197, column: 1, scope: !12436, inlinedAt: !12749)
!12764 = !DILocation(line: 630, column: 3, scope: !12743)
!12765 = !DILocation(line: 632, column: 2, scope: !12743)
!12766 = !DILocation(line: 633, column: 1, scope: !12732)
!12767 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !11508, file: !11508, line: 120, type: !12354, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12768)
!12768 = !{!12769}
!12769 = !DILocalVariable(name: "thread", arg: 1, scope: !12767, file: !11508, line: 120, type: !2033)
!12770 = !DILocation(line: 0, scope: !12767)
!12771 = !DILocation(line: 122, column: 12, scope: !12767)
!12772 = !DILocation(line: 122, column: 62, scope: !12767)
!12773 = !DILocation(line: 123, column: 4, scope: !12767)
!12774 = !DILocation(line: 122, column: 2, scope: !12767)
!12775 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2138, file: !2138, line: 644, type: !12194, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12776)
!12776 = !{!12777, !12778, !12780}
!12777 = !DILocalVariable(name: "thread", arg: 1, scope: !12775, file: !2138, line: 644, type: !2033)
!12778 = !DILocalVariable(name: "__i", scope: !12779, file: !2138, line: 646, type: !12228)
!12779 = distinct !DILexicalBlock(scope: !12775, file: !2138, line: 646, column: 2)
!12780 = !DILocalVariable(name: "__key", scope: !12779, file: !2138, line: 646, type: !12228)
!12781 = !DILocation(line: 0, scope: !12775)
!12782 = !DILocation(line: 0, scope: !12779)
!12783 = !DILocation(line: 0, scope: !12236, inlinedAt: !12784)
!12784 = distinct !DILocation(line: 646, column: 2, scope: !12779)
!12785 = !DILocation(line: 55, column: 2, scope: !12245, inlinedAt: !12786)
!12786 = distinct !DILocation(line: 145, column: 10, scope: !12236, inlinedAt: !12784)
!12787 = !DILocation(line: 0, scope: !12245, inlinedAt: !12786)
!12788 = !DILocation(line: 647, column: 3, scope: !12789)
!12789 = distinct !DILexicalBlock(scope: !12790, file: !2138, line: 646, column: 26)
!12790 = distinct !DILexicalBlock(scope: !12779, file: !2138, line: 646, column: 2)
!12791 = !DILocation(line: 0, scope: !12263, inlinedAt: !12792)
!12792 = distinct !DILocation(line: 646, column: 2, scope: !12790)
!12793 = !DILocation(line: 0, scope: !12271, inlinedAt: !12794)
!12794 = distinct !DILocation(line: 215, column: 2, scope: !12263, inlinedAt: !12792)
!12795 = !DILocation(line: 95, column: 2, scope: !12271, inlinedAt: !12794)
!12796 = !DILocation(line: 649, column: 1, scope: !12775)
!12797 = distinct !DISubprogram(name: "z_sched_start", scope: !2138, file: !2138, line: 651, type: !12194, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12798)
!12798 = !{!12799, !12800}
!12799 = !DILocalVariable(name: "thread", arg: 1, scope: !12797, file: !2138, line: 651, type: !2033)
!12800 = !DILocalVariable(name: "key", scope: !12797, file: !2138, line: 653, type: !12228)
!12801 = !DILocation(line: 0, scope: !12797)
!12802 = !DILocation(line: 0, scope: !12236, inlinedAt: !12803)
!12803 = distinct !DILocation(line: 653, column: 25, scope: !12797)
!12804 = !DILocation(line: 55, column: 2, scope: !12245, inlinedAt: !12805)
!12805 = distinct !DILocation(line: 145, column: 10, scope: !12236, inlinedAt: !12803)
!12806 = !DILocation(line: 0, scope: !12245, inlinedAt: !12805)
!12807 = !DILocation(line: 655, column: 6, scope: !12808)
!12808 = distinct !DILexicalBlock(scope: !12797, file: !2138, line: 655, column: 6)
!12809 = !DILocation(line: 655, column: 6, scope: !12797)
!12810 = !DILocation(line: 0, scope: !12263, inlinedAt: !12811)
!12811 = distinct !DILocation(line: 656, column: 3, scope: !12812)
!12812 = distinct !DILexicalBlock(scope: !12808, file: !2138, line: 655, column: 36)
!12813 = !DILocation(line: 0, scope: !12271, inlinedAt: !12814)
!12814 = distinct !DILocation(line: 215, column: 2, scope: !12263, inlinedAt: !12811)
!12815 = !DILocation(line: 95, column: 2, scope: !12271, inlinedAt: !12814)
!12816 = !DILocation(line: 657, column: 3, scope: !12812)
!12817 = !DILocation(line: 660, column: 2, scope: !12797)
!12818 = !DILocation(line: 661, column: 2, scope: !12797)
!12819 = !DILocation(line: 662, column: 2, scope: !12797)
!12820 = !DILocation(line: 663, column: 1, scope: !12797)
!12821 = distinct !DISubprogram(name: "z_has_thread_started", scope: !11508, file: !11508, line: 126, type: !12354, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12822)
!12822 = !{!12823}
!12823 = !DILocalVariable(name: "thread", arg: 1, scope: !12821, file: !11508, line: 126, type: !2033)
!12824 = !DILocation(line: 0, scope: !12821)
!12825 = !DILocation(line: 128, column: 23, scope: !12821)
!12826 = !DILocation(line: 128, column: 36, scope: !12821)
!12827 = !DILocation(line: 128, column: 56, scope: !12821)
!12828 = !DILocation(line: 128, column: 2, scope: !12821)
!12829 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !11508, file: !11508, line: 155, type: !12194, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12830)
!12830 = !{!12831}
!12831 = !DILocalVariable(name: "thread", arg: 1, scope: !12829, file: !11508, line: 155, type: !2033)
!12832 = !DILocation(line: 0, scope: !12829)
!12833 = !DILocation(line: 157, column: 15, scope: !12829)
!12834 = !DILocation(line: 157, column: 28, scope: !12829)
!12835 = !DILocation(line: 158, column: 1, scope: !12829)
!12836 = distinct !DISubprogram(name: "z_reschedule", scope: !2138, file: !2138, line: 967, type: !12264, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12837)
!12837 = !{!12838, !12839}
!12838 = !DILocalVariable(name: "lock", arg: 1, scope: !12836, file: !2138, line: 967, type: !12239)
!12839 = !DILocalVariable(name: "key", arg: 2, scope: !12836, file: !2138, line: 967, type: !12228)
!12840 = !DILocation(line: 0, scope: !12836)
!12841 = !DILocation(line: 969, column: 6, scope: !12842)
!12842 = distinct !DILexicalBlock(scope: !12836, file: !2138, line: 969, column: 6)
!12843 = !DILocation(line: 969, column: 23, scope: !12842)
!12844 = !DILocation(line: 969, column: 26, scope: !12842)
!12845 = !DILocation(line: 969, column: 6, scope: !12836)
!12846 = !DILocalVariable(name: "key", arg: 2, scope: !12847, file: !11612, line: 193, type: !12228)
!12847 = distinct !DISubprogram(name: "z_swap", scope: !11612, file: !11612, line: 193, type: !12848, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12850)
!12848 = !DISubroutineType(types: !12849)
!12849 = !{!103, !12239, !12228}
!12850 = !{!12851, !12846}
!12851 = !DILocalVariable(name: "lock", arg: 1, scope: !12847, file: !11612, line: 193, type: !12239)
!12852 = !DILocation(line: 0, scope: !12847, inlinedAt: !12853)
!12853 = distinct !DILocation(line: 970, column: 3, scope: !12854)
!12854 = distinct !DILexicalBlock(scope: !12842, file: !2138, line: 969, column: 39)
!12855 = !DILocation(line: 196, column: 9, scope: !12847, inlinedAt: !12853)
!12856 = !DILocation(line: 971, column: 2, scope: !12854)
!12857 = !DILocation(line: 0, scope: !12263, inlinedAt: !12858)
!12858 = distinct !DILocation(line: 972, column: 3, scope: !12859)
!12859 = distinct !DILexicalBlock(scope: !12842, file: !2138, line: 971, column: 9)
!12860 = !DILocation(line: 0, scope: !12271, inlinedAt: !12861)
!12861 = distinct !DILocation(line: 215, column: 2, scope: !12263, inlinedAt: !12858)
!12862 = !DILocation(line: 95, column: 2, scope: !12271, inlinedAt: !12861)
!12863 = !DILocation(line: 975, column: 1, scope: !12836)
!12864 = distinct !DISubprogram(name: "resched", scope: !2138, file: !2138, line: 940, type: !12865, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12867)
!12865 = !DISubroutineType(types: !12866)
!12866 = !{!157, !121}
!12867 = !{!12868}
!12868 = !DILocalVariable(name: "key", arg: 1, scope: !12864, file: !2138, line: 940, type: !121)
!12869 = !DILocation(line: 0, scope: !12864)
!12870 = !DILocalVariable(name: "key", arg: 1, scope: !12871, file: !5324, line: 112, type: !32)
!12871 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !5324, file: !5324, line: 112, type: !12872, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12874)
!12872 = !DISubroutineType(types: !12873)
!12873 = !{!157, !32}
!12874 = !{!12870}
!12875 = !DILocation(line: 0, scope: !12871, inlinedAt: !12876)
!12876 = distinct !DILocation(line: 946, column: 9, scope: !12864)
!12877 = !DILocation(line: 115, column: 13, scope: !12871, inlinedAt: !12876)
!12878 = !DILocation(line: 946, column: 32, scope: !12864)
!12879 = !DILocation(line: 1031, column: 3, scope: !12880, inlinedAt: !12883)
!12880 = distinct !DISubprogram(name: "__get_IPSR", scope: !5498, file: !5498, line: 1027, type: !5579, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12881)
!12881 = !{!12882}
!12882 = !DILocalVariable(name: "result", scope: !12880, file: !5498, line: 1029, type: !121)
!12883 = distinct !DILocation(line: 48, column: 10, scope: !12884, inlinedAt: !12885)
!12884 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6292, file: !6292, line: 46, type: !6293, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !322)
!12885 = distinct !DILocation(line: 946, column: 36, scope: !12864)
!12886 = !{i64 3583964}
!12887 = !DILocation(line: 0, scope: !12880, inlinedAt: !12883)
!12888 = !DILocation(line: 48, column: 9, scope: !12884, inlinedAt: !12885)
!12889 = !DILocation(line: 946, column: 2, scope: !12864)
!12890 = distinct !DISubprogram(name: "need_swap", scope: !2138, file: !2138, line: 953, type: !6293, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12891)
!12891 = !{!12892}
!12892 = !DILocalVariable(name: "new_thread", scope: !12890, file: !2138, line: 959, type: !2033)
!12893 = !DILocation(line: 962, column: 31, scope: !12890)
!12894 = !DILocation(line: 0, scope: !12890)
!12895 = !DILocation(line: 963, column: 23, scope: !12890)
!12896 = !DILocation(line: 963, column: 20, scope: !12890)
!12897 = !DILocation(line: 963, column: 2, scope: !12890)
!12898 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !11612, file: !11612, line: 181, type: !5508, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12899)
!12899 = !{!12900, !12901}
!12900 = !DILocalVariable(name: "key", arg: 1, scope: !12898, file: !11612, line: 181, type: !32)
!12901 = !DILocalVariable(name: "ret", scope: !12898, file: !11612, line: 183, type: !103)
!12902 = !DILocation(line: 0, scope: !12898)
!12903 = !DILocation(line: 185, column: 8, scope: !12898)
!12904 = !DILocation(line: 186, column: 2, scope: !12898)
!12905 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2138, file: !2138, line: 665, type: !12194, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12906)
!12906 = !{!12907, !12908, !12910}
!12907 = !DILocalVariable(name: "thread", arg: 1, scope: !12905, file: !2138, line: 665, type: !2033)
!12908 = !DILocalVariable(name: "__i", scope: !12909, file: !2138, line: 671, type: !12228)
!12909 = distinct !DILexicalBlock(scope: !12905, file: !2138, line: 671, column: 2)
!12910 = !DILocalVariable(name: "__key", scope: !12909, file: !2138, line: 671, type: !12228)
!12911 = !DILocation(line: 0, scope: !12905)
!12912 = !DILocation(line: 669, column: 8, scope: !12905)
!12913 = !DILocation(line: 0, scope: !12909)
!12914 = !DILocation(line: 0, scope: !12236, inlinedAt: !12915)
!12915 = distinct !DILocation(line: 671, column: 2, scope: !12909)
!12916 = !DILocation(line: 55, column: 2, scope: !12245, inlinedAt: !12917)
!12917 = distinct !DILocation(line: 145, column: 10, scope: !12236, inlinedAt: !12915)
!12918 = !DILocation(line: 0, scope: !12245, inlinedAt: !12917)
!12919 = !DILocation(line: 672, column: 7, scope: !12920)
!12920 = distinct !DILexicalBlock(scope: !12921, file: !2138, line: 672, column: 7)
!12921 = distinct !DILexicalBlock(scope: !12922, file: !2138, line: 671, column: 26)
!12922 = distinct !DILexicalBlock(scope: !12909, file: !2138, line: 671, column: 2)
!12923 = !DILocation(line: 672, column: 7, scope: !12921)
!12924 = !DILocation(line: 0, scope: !12405, inlinedAt: !12925)
!12925 = distinct !DILocation(line: 673, column: 4, scope: !12926)
!12926 = distinct !DILexicalBlock(scope: !12920, file: !2138, line: 672, column: 35)
!12927 = !DILocation(line: 266, column: 15, scope: !12405, inlinedAt: !12925)
!12928 = !DILocation(line: 266, column: 28, scope: !12405, inlinedAt: !12925)
!12929 = !DILocation(line: 0, scope: !12413, inlinedAt: !12930)
!12930 = distinct !DILocation(line: 268, column: 3, scope: !12417, inlinedAt: !12925)
!12931 = !DILocation(line: 234, column: 2, scope: !12413, inlinedAt: !12930)
!12932 = !DILocation(line: 674, column: 3, scope: !12926)
!12933 = !DILocation(line: 675, column: 3, scope: !12921)
!12934 = !DILocation(line: 676, column: 26, scope: !12921)
!12935 = !DILocation(line: 676, column: 23, scope: !12921)
!12936 = !DILocation(line: 676, column: 3, scope: !12921)
!12937 = !DILocation(line: 0, scope: !12263, inlinedAt: !12938)
!12938 = distinct !DILocation(line: 671, column: 2, scope: !12922)
!12939 = !DILocation(line: 0, scope: !12271, inlinedAt: !12940)
!12940 = distinct !DILocation(line: 215, column: 2, scope: !12263, inlinedAt: !12938)
!12941 = !DILocation(line: 95, column: 2, scope: !12271, inlinedAt: !12940)
!12942 = !DILocation(line: 679, column: 16, scope: !12943)
!12943 = distinct !DILexicalBlock(scope: !12905, file: !2138, line: 679, column: 6)
!12944 = !DILocation(line: 679, column: 13, scope: !12943)
!12945 = !DILocation(line: 679, column: 6, scope: !12905)
!12946 = !DILocation(line: 680, column: 3, scope: !12947)
!12947 = distinct !DILexicalBlock(scope: !12943, file: !2138, line: 679, column: 26)
!12948 = !DILocation(line: 681, column: 2, scope: !12947)
!12949 = !DILocation(line: 684, column: 1, scope: !12905)
!12950 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !11902, file: !11902, line: 52, type: !12212, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12951)
!12951 = !{!12952}
!12952 = !DILocalVariable(name: "thread", arg: 1, scope: !12950, file: !11902, line: 52, type: !2033)
!12953 = !DILocation(line: 0, scope: !12950)
!12954 = !DILocation(line: 54, column: 39, scope: !12950)
!12955 = !DILocation(line: 54, column: 9, scope: !12950)
!12956 = !DILocation(line: 54, column: 2, scope: !12950)
!12957 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !11508, file: !11508, line: 141, type: !12194, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12958)
!12958 = !{!12959}
!12959 = !DILocalVariable(name: "thread", arg: 1, scope: !12957, file: !11508, line: 141, type: !2033)
!12960 = !DILocation(line: 0, scope: !12957)
!12961 = !DILocation(line: 143, column: 15, scope: !12957)
!12962 = !DILocation(line: 143, column: 28, scope: !12957)
!12963 = !DILocation(line: 146, column: 1, scope: !12957)
!12964 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !11508, file: !11508, line: 73, type: !2928, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !322)
!12965 = !DILocation(line: 55, column: 2, scope: !12245, inlinedAt: !12966)
!12966 = distinct !DILocation(line: 75, column: 30, scope: !12964)
!12967 = !DILocation(line: 0, scope: !12245, inlinedAt: !12966)
!12968 = !DILocation(line: 75, column: 9, scope: !12964)
!12969 = !DILocation(line: 76, column: 1, scope: !12964)
!12970 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2138, file: !2138, line: 977, type: !5589, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12971)
!12971 = !{!12972}
!12972 = !DILocalVariable(name: "key", arg: 1, scope: !12970, file: !2138, line: 977, type: !121)
!12973 = !DILocation(line: 0, scope: !12970)
!12974 = !DILocation(line: 979, column: 6, scope: !12975)
!12975 = distinct !DILexicalBlock(scope: !12970, file: !2138, line: 979, column: 6)
!12976 = !DILocation(line: 979, column: 6, scope: !12970)
!12977 = !DILocation(line: 980, column: 3, scope: !12978)
!12978 = distinct !DILexicalBlock(scope: !12975, file: !2138, line: 979, column: 20)
!12979 = !DILocation(line: 981, column: 2, scope: !12978)
!12980 = !DILocation(line: 0, scope: !12271, inlinedAt: !12981)
!12981 = distinct !DILocation(line: 982, column: 3, scope: !12982)
!12982 = distinct !DILexicalBlock(scope: !12975, file: !2138, line: 981, column: 9)
!12983 = !DILocation(line: 95, column: 2, scope: !12271, inlinedAt: !12981)
!12984 = !DILocation(line: 985, column: 1, scope: !12970)
!12985 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2138, file: !2138, line: 695, type: !12194, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !12986)
!12986 = !{!12987, !12988}
!12987 = !DILocalVariable(name: "thread", arg: 1, scope: !12985, file: !2138, line: 695, type: !2033)
!12988 = !DILocalVariable(name: "key", scope: !12985, file: !2138, line: 699, type: !12228)
!12989 = !DILocation(line: 0, scope: !12985)
!12990 = !DILocation(line: 0, scope: !12236, inlinedAt: !12991)
!12991 = distinct !DILocation(line: 699, column: 25, scope: !12985)
!12992 = !DILocation(line: 55, column: 2, scope: !12245, inlinedAt: !12993)
!12993 = distinct !DILocation(line: 145, column: 10, scope: !12236, inlinedAt: !12991)
!12994 = !DILocation(line: 0, scope: !12245, inlinedAt: !12993)
!12995 = !DILocation(line: 702, column: 7, scope: !12996)
!12996 = distinct !DILexicalBlock(scope: !12985, file: !2138, line: 702, column: 6)
!12997 = !DILocation(line: 702, column: 6, scope: !12985)
!12998 = !DILocation(line: 0, scope: !12263, inlinedAt: !12999)
!12999 = distinct !DILocation(line: 703, column: 3, scope: !13000)
!13000 = distinct !DILexicalBlock(scope: !12996, file: !2138, line: 702, column: 38)
!13001 = !DILocation(line: 0, scope: !12271, inlinedAt: !13002)
!13002 = distinct !DILocation(line: 215, column: 2, scope: !12263, inlinedAt: !12999)
!13003 = !DILocation(line: 95, column: 2, scope: !12271, inlinedAt: !13002)
!13004 = !DILocation(line: 704, column: 3, scope: !13000)
!13005 = !DILocation(line: 707, column: 2, scope: !12985)
!13006 = !DILocation(line: 708, column: 2, scope: !12985)
!13007 = !DILocation(line: 710, column: 2, scope: !12985)
!13008 = !DILocation(line: 713, column: 1, scope: !12985)
!13009 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !11508, file: !11508, line: 96, type: !12354, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !13010)
!13010 = !{!13011}
!13011 = !DILocalVariable(name: "thread", arg: 1, scope: !13009, file: !11508, line: 96, type: !2033)
!13012 = !DILocation(line: 0, scope: !13009)
!13013 = !DILocation(line: 98, column: 23, scope: !13009)
!13014 = !DILocation(line: 98, column: 36, scope: !13009)
!13015 = !DILocation(line: 98, column: 57, scope: !13009)
!13016 = !DILocation(line: 98, column: 2, scope: !13009)
!13017 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !11508, file: !11508, line: 148, type: !12194, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !13018)
!13018 = !{!13019}
!13019 = !DILocalVariable(name: "thread", arg: 1, scope: !13017, file: !11508, line: 148, type: !2033)
!13020 = !DILocation(line: 0, scope: !13017)
!13021 = !DILocation(line: 150, column: 15, scope: !13017)
!13022 = !DILocation(line: 150, column: 28, scope: !13017)
!13023 = !DILocation(line: 153, column: 1, scope: !13017)
!13024 = distinct !DISubprogram(name: "z_pend_thread", scope: !2138, file: !2138, line: 770, type: !13025, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !13031)
!13025 = !DISubroutineType(types: !13026)
!13026 = !{null, !2033, !2064, !13027}
!13027 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1391, line: 67, baseType: !13028)
!13028 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1391, line: 65, size: 64, elements: !13029)
!13029 = !{!13030}
!13030 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13028, file: !1391, line: 66, baseType: !1390, size: 64)
!13031 = !{!13032, !13033, !13034, !13035, !13037}
!13032 = !DILocalVariable(name: "thread", arg: 1, scope: !13024, file: !2138, line: 770, type: !2033)
!13033 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13024, file: !2138, line: 770, type: !2064)
!13034 = !DILocalVariable(name: "timeout", arg: 3, scope: !13024, file: !2138, line: 771, type: !13027)
!13035 = !DILocalVariable(name: "__i", scope: !13036, file: !2138, line: 774, type: !12228)
!13036 = distinct !DILexicalBlock(scope: !13024, file: !2138, line: 774, column: 2)
!13037 = !DILocalVariable(name: "__key", scope: !13036, file: !2138, line: 774, type: !12228)
!13038 = !DILocation(line: 0, scope: !13024)
!13039 = !DILocation(line: 0, scope: !13036)
!13040 = !DILocation(line: 0, scope: !12236, inlinedAt: !13041)
!13041 = distinct !DILocation(line: 774, column: 2, scope: !13036)
!13042 = !DILocation(line: 55, column: 2, scope: !12245, inlinedAt: !13043)
!13043 = distinct !DILocation(line: 145, column: 10, scope: !12236, inlinedAt: !13041)
!13044 = !DILocation(line: 0, scope: !12245, inlinedAt: !13043)
!13045 = !DILocation(line: 775, column: 3, scope: !13046)
!13046 = distinct !DILexicalBlock(scope: !13047, file: !2138, line: 774, column: 26)
!13047 = distinct !DILexicalBlock(scope: !13036, file: !2138, line: 774, column: 2)
!13048 = !DILocation(line: 0, scope: !12263, inlinedAt: !13049)
!13049 = distinct !DILocation(line: 774, column: 2, scope: !13047)
!13050 = !DILocation(line: 0, scope: !12271, inlinedAt: !13051)
!13051 = distinct !DILocation(line: 215, column: 2, scope: !12263, inlinedAt: !13049)
!13052 = !DILocation(line: 95, column: 2, scope: !12271, inlinedAt: !13051)
!13053 = !DILocation(line: 777, column: 1, scope: !13024)
!13054 = distinct !DISubprogram(name: "pend_locked", scope: !2138, file: !2138, line: 760, type: !13025, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !13055)
!13055 = !{!13056, !13057, !13058}
!13056 = !DILocalVariable(name: "thread", arg: 1, scope: !13054, file: !2138, line: 760, type: !2033)
!13057 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13054, file: !2138, line: 760, type: !2064)
!13058 = !DILocalVariable(name: "timeout", arg: 3, scope: !13054, file: !2138, line: 761, type: !13027)
!13059 = !DILocation(line: 0, scope: !13054)
!13060 = !DILocation(line: 766, column: 2, scope: !13054)
!13061 = !DILocation(line: 767, column: 2, scope: !13054)
!13062 = !DILocation(line: 768, column: 1, scope: !13054)
!13063 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2138, file: !2138, line: 740, type: !13064, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !13066)
!13064 = !DISubroutineType(types: !13065)
!13065 = !{null, !2033, !2064}
!13066 = !{!13067, !13068}
!13067 = !DILocalVariable(name: "thread", arg: 1, scope: !13063, file: !2138, line: 740, type: !2033)
!13068 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13063, file: !2138, line: 740, type: !2064)
!13069 = !DILocation(line: 0, scope: !13063)
!13070 = !DILocation(line: 742, column: 2, scope: !13063)
!13071 = !DILocation(line: 743, column: 2, scope: !13063)
!13072 = !DILocation(line: 747, column: 13, scope: !13073)
!13073 = distinct !DILexicalBlock(scope: !13063, file: !2138, line: 747, column: 6)
!13074 = !DILocation(line: 747, column: 6, scope: !13063)
!13075 = !DILocation(line: 748, column: 16, scope: !13076)
!13076 = distinct !DILexicalBlock(scope: !13073, file: !2138, line: 747, column: 22)
!13077 = !DILocation(line: 748, column: 26, scope: !13076)
!13078 = !DILocation(line: 749, column: 28, scope: !13076)
!13079 = !DILocation(line: 0, scope: !12436, inlinedAt: !13080)
!13080 = distinct !DILocation(line: 749, column: 3, scope: !13076)
!13081 = !DILocation(line: 188, column: 2, scope: !12446, inlinedAt: !13080)
!13082 = !DILocation(line: 188, column: 2, scope: !12448, inlinedAt: !13080)
!13083 = !DILocation(line: 0, scope: !12446, inlinedAt: !13080)
!13084 = !DILocation(line: 189, column: 7, scope: !12451, inlinedAt: !13080)
!13085 = !DILocation(line: 189, column: 35, scope: !12451, inlinedAt: !13080)
!13086 = !DILocation(line: 189, column: 7, scope: !12452, inlinedAt: !13080)
!13087 = !DILocation(line: 191, column: 21, scope: !12456, inlinedAt: !13080)
!13088 = !DILocation(line: 190, column: 4, scope: !12456, inlinedAt: !13080)
!13089 = !DILocation(line: 192, column: 4, scope: !12456, inlinedAt: !13080)
!13090 = distinct !{!13090, !13081, !13091}
!13091 = !DILocation(line: 194, column: 2, scope: !12446, inlinedAt: !13080)
!13092 = !DILocation(line: 196, column: 37, scope: !12436, inlinedAt: !13080)
!13093 = !DILocation(line: 196, column: 2, scope: !12436, inlinedAt: !13080)
!13094 = !DILocation(line: 197, column: 1, scope: !12436, inlinedAt: !13080)
!13095 = !DILocation(line: 751, column: 1, scope: !13063)
!13096 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2138, file: !2138, line: 753, type: !13097, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !13099)
!13097 = !DISubroutineType(types: !13098)
!13098 = !{null, !2033, !13027}
!13099 = !{!13100, !13101}
!13100 = !DILocalVariable(name: "thread", arg: 1, scope: !13096, file: !2138, line: 753, type: !2033)
!13101 = !DILocalVariable(name: "timeout", arg: 2, scope: !13096, file: !2138, line: 753, type: !13027)
!13102 = !DILocation(line: 0, scope: !13096)
!13103 = !DILocation(line: 755, column: 7, scope: !13104)
!13104 = distinct !DILexicalBlock(scope: !13096, file: !2138, line: 755, column: 6)
!13105 = !DILocation(line: 755, column: 6, scope: !13096)
!13106 = !DILocation(line: 756, column: 3, scope: !13107)
!13107 = distinct !DILexicalBlock(scope: !13104, file: !2138, line: 755, column: 41)
!13108 = !DILocation(line: 757, column: 2, scope: !13107)
!13109 = !DILocation(line: 758, column: 1, scope: !13096)
!13110 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !11902, file: !11902, line: 47, type: !13097, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !13111)
!13111 = !{!13112, !13113}
!13112 = !DILocalVariable(name: "thread", arg: 1, scope: !13110, file: !11902, line: 47, type: !2033)
!13113 = !DILocalVariable(name: "ticks", arg: 2, scope: !13110, file: !11902, line: 47, type: !13027)
!13114 = !DILocation(line: 0, scope: !13110)
!13115 = !DILocation(line: 49, column: 30, scope: !13110)
!13116 = !DILocation(line: 49, column: 2, scope: !13110)
!13117 = !DILocation(line: 50, column: 1, scope: !13110)
!13118 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2138, file: !2138, line: 795, type: !2090, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !13119)
!13119 = !{!13120, !13121, !13122, !13124, !13125}
!13120 = !DILocalVariable(name: "timeout", arg: 1, scope: !13118, file: !2138, line: 795, type: !2092)
!13121 = !DILocalVariable(name: "thread", scope: !13118, file: !2138, line: 797, type: !2033)
!13122 = !DILocalVariable(name: "__i", scope: !13123, file: !2138, line: 800, type: !12228)
!13123 = distinct !DILexicalBlock(scope: !13118, file: !2138, line: 800, column: 2)
!13124 = !DILocalVariable(name: "__key", scope: !13123, file: !2138, line: 800, type: !12228)
!13125 = !DILocalVariable(name: "killed", scope: !13126, file: !2138, line: 801, type: !157)
!13126 = distinct !DILexicalBlock(scope: !13127, file: !2138, line: 800, column: 26)
!13127 = distinct !DILexicalBlock(scope: !13123, file: !2138, line: 800, column: 2)
!13128 = !DILocation(line: 0, scope: !13118)
!13129 = !DILocation(line: 797, column: 28, scope: !13118)
!13130 = !DILocation(line: 0, scope: !13123)
!13131 = !DILocation(line: 0, scope: !12236, inlinedAt: !13132)
!13132 = distinct !DILocation(line: 800, column: 2, scope: !13123)
!13133 = !DILocation(line: 55, column: 2, scope: !12245, inlinedAt: !13134)
!13134 = distinct !DILocation(line: 145, column: 10, scope: !12236, inlinedAt: !13132)
!13135 = !DILocation(line: 0, scope: !12245, inlinedAt: !13134)
!13136 = !DILocation(line: 801, column: 27, scope: !13126)
!13137 = !DILocation(line: 801, column: 32, scope: !13126)
!13138 = !DILocation(line: 801, column: 61, scope: !13126)
!13139 = !DILocation(line: 0, scope: !13126)
!13140 = !DILocation(line: 804, column: 7, scope: !13126)
!13141 = !DILocation(line: 805, column: 21, scope: !13142)
!13142 = distinct !DILexicalBlock(scope: !13143, file: !2138, line: 805, column: 8)
!13143 = distinct !DILexicalBlock(scope: !13144, file: !2138, line: 804, column: 16)
!13144 = distinct !DILexicalBlock(scope: !13126, file: !2138, line: 804, column: 7)
!13145 = !DILocation(line: 805, column: 31, scope: !13142)
!13146 = !DILocation(line: 805, column: 8, scope: !13143)
!13147 = !DILocation(line: 806, column: 5, scope: !13148)
!13148 = distinct !DILexicalBlock(scope: !13142, file: !2138, line: 805, column: 40)
!13149 = !DILocation(line: 807, column: 4, scope: !13148)
!13150 = !DILocation(line: 808, column: 4, scope: !13143)
!13151 = !DILocation(line: 809, column: 4, scope: !13143)
!13152 = !DILocation(line: 810, column: 4, scope: !13143)
!13153 = !DILocation(line: 811, column: 3, scope: !13143)
!13154 = !DILocation(line: 0, scope: !12263, inlinedAt: !13155)
!13155 = distinct !DILocation(line: 800, column: 2, scope: !13127)
!13156 = !DILocation(line: 0, scope: !12271, inlinedAt: !13157)
!13157 = distinct !DILocation(line: 215, column: 2, scope: !12263, inlinedAt: !13155)
!13158 = !DILocation(line: 95, column: 2, scope: !12271, inlinedAt: !13157)
!13159 = !DILocation(line: 813, column: 1, scope: !13118)
!13160 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2138, file: !2138, line: 779, type: !12194, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !13161)
!13161 = !{!13162}
!13162 = !DILocalVariable(name: "thread", arg: 1, scope: !13160, file: !2138, line: 779, type: !2033)
!13163 = !DILocation(line: 0, scope: !13160)
!13164 = !DILocation(line: 781, column: 2, scope: !13160)
!13165 = !DILocation(line: 782, column: 2, scope: !13160)
!13166 = !DILocation(line: 783, column: 15, scope: !13160)
!13167 = !DILocation(line: 783, column: 25, scope: !13160)
!13168 = !DILocation(line: 784, column: 1, scope: !13160)
!13169 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !11508, file: !11508, line: 165, type: !12194, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !13170)
!13170 = !{!13171}
!13171 = !DILocalVariable(name: "thread", arg: 1, scope: !13169, file: !11508, line: 165, type: !2033)
!13172 = !DILocation(line: 0, scope: !13169)
!13173 = !DILocation(line: 167, column: 15, scope: !13169)
!13174 = !DILocation(line: 167, column: 28, scope: !13169)
!13175 = !DILocation(line: 168, column: 1, scope: !13169)
!13176 = distinct !DISubprogram(name: "unready_thread", scope: !2138, file: !2138, line: 731, type: !12194, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !13177)
!13177 = !{!13178}
!13178 = !DILocalVariable(name: "thread", arg: 1, scope: !13176, file: !2138, line: 731, type: !2033)
!13179 = !DILocation(line: 0, scope: !13176)
!13180 = !DILocation(line: 733, column: 6, scope: !13181)
!13181 = distinct !DILexicalBlock(scope: !13176, file: !2138, line: 733, column: 6)
!13182 = !DILocation(line: 733, column: 6, scope: !13176)
!13183 = !DILocation(line: 0, scope: !12405, inlinedAt: !13184)
!13184 = distinct !DILocation(line: 734, column: 3, scope: !13185)
!13185 = distinct !DILexicalBlock(scope: !13181, file: !2138, line: 733, column: 34)
!13186 = !DILocation(line: 266, column: 15, scope: !12405, inlinedAt: !13184)
!13187 = !DILocation(line: 266, column: 28, scope: !12405, inlinedAt: !13184)
!13188 = !DILocation(line: 0, scope: !12413, inlinedAt: !13189)
!13189 = distinct !DILocation(line: 268, column: 3, scope: !12417, inlinedAt: !13184)
!13190 = !DILocation(line: 234, column: 2, scope: !12413, inlinedAt: !13189)
!13191 = !DILocation(line: 735, column: 2, scope: !13185)
!13192 = !DILocation(line: 736, column: 25, scope: !13176)
!13193 = !DILocation(line: 736, column: 22, scope: !13176)
!13194 = !DILocation(line: 736, column: 2, scope: !13176)
!13195 = !DILocation(line: 737, column: 1, scope: !13176)
!13196 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !11508, file: !11508, line: 160, type: !12194, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !13197)
!13197 = !{!13198}
!13198 = !DILocalVariable(name: "thread", arg: 1, scope: !13196, file: !11508, line: 160, type: !2033)
!13199 = !DILocation(line: 0, scope: !13196)
!13200 = !DILocation(line: 162, column: 15, scope: !13196)
!13201 = !DILocation(line: 162, column: 28, scope: !13196)
!13202 = !DILocation(line: 163, column: 1, scope: !13196)
!13203 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2138, file: !2138, line: 786, type: !12194, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !13204)
!13204 = !{!13205, !13206, !13208}
!13205 = !DILocalVariable(name: "thread", arg: 1, scope: !13203, file: !2138, line: 786, type: !2033)
!13206 = !DILocalVariable(name: "__i", scope: !13207, file: !2138, line: 788, type: !12228)
!13207 = distinct !DILexicalBlock(scope: !13203, file: !2138, line: 788, column: 2)
!13208 = !DILocalVariable(name: "__key", scope: !13207, file: !2138, line: 788, type: !12228)
!13209 = !DILocation(line: 0, scope: !13203)
!13210 = !DILocation(line: 0, scope: !13207)
!13211 = !DILocation(line: 0, scope: !12236, inlinedAt: !13212)
!13212 = distinct !DILocation(line: 788, column: 2, scope: !13207)
!13213 = !DILocation(line: 55, column: 2, scope: !12245, inlinedAt: !13214)
!13214 = distinct !DILocation(line: 145, column: 10, scope: !12236, inlinedAt: !13212)
!13215 = !DILocation(line: 0, scope: !12245, inlinedAt: !13214)
!13216 = !DILocation(line: 789, column: 3, scope: !13217)
!13217 = distinct !DILexicalBlock(scope: !13218, file: !2138, line: 788, column: 26)
!13218 = distinct !DILexicalBlock(scope: !13207, file: !2138, line: 788, column: 2)
!13219 = !DILocation(line: 0, scope: !12263, inlinedAt: !13220)
!13220 = distinct !DILocation(line: 788, column: 2, scope: !13218)
!13221 = !DILocation(line: 0, scope: !12271, inlinedAt: !13222)
!13222 = distinct !DILocation(line: 215, column: 2, scope: !12263, inlinedAt: !13220)
!13223 = !DILocation(line: 95, column: 2, scope: !12271, inlinedAt: !13222)
!13224 = !DILocation(line: 791, column: 1, scope: !13203)
!13225 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2138, file: !2138, line: 816, type: !13226, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !13228)
!13226 = !DISubroutineType(types: !13227)
!13227 = !{!103, !121, !2064, !13027}
!13228 = !{!13229, !13230, !13231, !13232, !13233, !13235}
!13229 = !DILocalVariable(name: "key", arg: 1, scope: !13225, file: !2138, line: 816, type: !121)
!13230 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13225, file: !2138, line: 816, type: !2064)
!13231 = !DILocalVariable(name: "timeout", arg: 3, scope: !13225, file: !2138, line: 816, type: !13027)
!13232 = !DILocalVariable(name: "ret", scope: !13225, file: !2138, line: 828, type: !103)
!13233 = !DILocalVariable(name: "__i", scope: !13234, file: !2138, line: 829, type: !12228)
!13234 = distinct !DILexicalBlock(scope: !13225, file: !2138, line: 829, column: 2)
!13235 = !DILocalVariable(name: "__key", scope: !13234, file: !2138, line: 829, type: !12228)
!13236 = !DILocation(line: 0, scope: !13225)
!13237 = !DILocation(line: 823, column: 14, scope: !13225)
!13238 = !DILocation(line: 823, column: 2, scope: !13225)
!13239 = !DILocation(line: 826, column: 20, scope: !13225)
!13240 = !DILocation(line: 826, column: 18, scope: !13225)
!13241 = !DILocation(line: 828, column: 12, scope: !13225)
!13242 = !DILocation(line: 0, scope: !13234)
!13243 = !DILocation(line: 0, scope: !12236, inlinedAt: !13244)
!13244 = distinct !DILocation(line: 829, column: 2, scope: !13234)
!13245 = !DILocation(line: 55, column: 2, scope: !12245, inlinedAt: !13246)
!13246 = distinct !DILocation(line: 145, column: 10, scope: !12236, inlinedAt: !13244)
!13247 = !DILocation(line: 0, scope: !12245, inlinedAt: !13246)
!13248 = !DILocation(line: 830, column: 7, scope: !13249)
!13249 = distinct !DILexicalBlock(scope: !13250, file: !2138, line: 830, column: 7)
!13250 = distinct !DILexicalBlock(scope: !13251, file: !2138, line: 829, column: 26)
!13251 = distinct !DILexicalBlock(scope: !13234, file: !2138, line: 829, column: 2)
!13252 = !DILocation(line: 830, column: 26, scope: !13249)
!13253 = !DILocation(line: 830, column: 23, scope: !13249)
!13254 = !DILocation(line: 830, column: 7, scope: !13250)
!13255 = !DILocation(line: 831, column: 20, scope: !13256)
!13256 = distinct !DILexicalBlock(scope: !13249, file: !2138, line: 830, column: 36)
!13257 = !DILocation(line: 832, column: 3, scope: !13256)
!13258 = !DILocation(line: 0, scope: !12263, inlinedAt: !13259)
!13259 = distinct !DILocation(line: 829, column: 2, scope: !13251)
!13260 = !DILocation(line: 0, scope: !12271, inlinedAt: !13261)
!13261 = distinct !DILocation(line: 215, column: 2, scope: !12263, inlinedAt: !13259)
!13262 = !DILocation(line: 95, column: 2, scope: !12271, inlinedAt: !13261)
!13263 = !DILocation(line: 834, column: 2, scope: !13225)
!13264 = distinct !DISubprogram(name: "z_pend_curr", scope: !2138, file: !2138, line: 840, type: !13265, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !13267)
!13265 = !DISubroutineType(types: !13266)
!13266 = !{!103, !12239, !12228, !2064, !13027}
!13267 = !{!13268, !13269, !13270, !13271}
!13268 = !DILocalVariable(name: "lock", arg: 1, scope: !13264, file: !2138, line: 840, type: !12239)
!13269 = !DILocalVariable(name: "key", arg: 2, scope: !13264, file: !2138, line: 840, type: !12228)
!13270 = !DILocalVariable(name: "wait_q", arg: 3, scope: !13264, file: !2138, line: 841, type: !2064)
!13271 = !DILocalVariable(name: "timeout", arg: 4, scope: !13264, file: !2138, line: 841, type: !13027)
!13272 = !DILocation(line: 0, scope: !13264)
!13273 = !DILocation(line: 844, column: 20, scope: !13264)
!13274 = !DILocation(line: 844, column: 18, scope: !13264)
!13275 = !DILocation(line: 0, scope: !12236, inlinedAt: !13276)
!13276 = distinct !DILocation(line: 856, column: 9, scope: !13264)
!13277 = !DILocation(line: 55, column: 2, scope: !12245, inlinedAt: !13278)
!13278 = distinct !DILocation(line: 145, column: 10, scope: !12236, inlinedAt: !13276)
!13279 = !DILocation(line: 0, scope: !12245, inlinedAt: !13278)
!13280 = !DILocation(line: 857, column: 14, scope: !13264)
!13281 = !DILocation(line: 857, column: 2, scope: !13264)
!13282 = !DILocation(line: 0, scope: !12847, inlinedAt: !13283)
!13283 = distinct !DILocation(line: 859, column: 9, scope: !13264)
!13284 = !DILocation(line: 196, column: 9, scope: !12847, inlinedAt: !13283)
!13285 = !DILocation(line: 859, column: 2, scope: !13264)
!13286 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2138, file: !2138, line: 862, type: !13287, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !13289)
!13287 = !DISubroutineType(types: !13288)
!13288 = !{!2033, !2064}
!13289 = !{!13290, !13291, !13292, !13294}
!13290 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13286, file: !2138, line: 862, type: !2064)
!13291 = !DILocalVariable(name: "thread", scope: !13286, file: !2138, line: 864, type: !2033)
!13292 = !DILocalVariable(name: "__i", scope: !13293, file: !2138, line: 866, type: !12228)
!13293 = distinct !DILexicalBlock(scope: !13286, file: !2138, line: 866, column: 2)
!13294 = !DILocalVariable(name: "__key", scope: !13293, file: !2138, line: 866, type: !12228)
!13295 = !DILocation(line: 0, scope: !13286)
!13296 = !DILocation(line: 0, scope: !13293)
!13297 = !DILocation(line: 0, scope: !12236, inlinedAt: !13298)
!13298 = distinct !DILocation(line: 866, column: 2, scope: !13293)
!13299 = !DILocation(line: 55, column: 2, scope: !12245, inlinedAt: !13300)
!13300 = distinct !DILocation(line: 145, column: 10, scope: !12236, inlinedAt: !13298)
!13301 = !DILocation(line: 0, scope: !12245, inlinedAt: !13300)
!13302 = !DILocation(line: 867, column: 12, scope: !13303)
!13303 = distinct !DILexicalBlock(scope: !13304, file: !2138, line: 866, column: 26)
!13304 = distinct !DILexicalBlock(scope: !13293, file: !2138, line: 866, column: 2)
!13305 = !DILocation(line: 869, column: 14, scope: !13306)
!13306 = distinct !DILexicalBlock(scope: !13303, file: !2138, line: 869, column: 7)
!13307 = !DILocation(line: 869, column: 7, scope: !13303)
!13308 = !DILocation(line: 870, column: 4, scope: !13309)
!13309 = distinct !DILexicalBlock(scope: !13306, file: !2138, line: 869, column: 23)
!13310 = !DILocation(line: 871, column: 3, scope: !13309)
!13311 = !DILocation(line: 0, scope: !12263, inlinedAt: !13312)
!13312 = distinct !DILocation(line: 866, column: 2, scope: !13304)
!13313 = !DILocation(line: 0, scope: !12271, inlinedAt: !13314)
!13314 = distinct !DILocation(line: 215, column: 2, scope: !12263, inlinedAt: !13312)
!13315 = !DILocation(line: 95, column: 2, scope: !12271, inlinedAt: !13314)
!13316 = !DILocation(line: 874, column: 2, scope: !13286)
!13317 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2138, file: !2138, line: 877, type: !13287, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !13318)
!13318 = !{!13319, !13320, !13321, !13323}
!13319 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13317, file: !2138, line: 877, type: !2064)
!13320 = !DILocalVariable(name: "thread", scope: !13317, file: !2138, line: 879, type: !2033)
!13321 = !DILocalVariable(name: "__i", scope: !13322, file: !2138, line: 881, type: !12228)
!13322 = distinct !DILexicalBlock(scope: !13317, file: !2138, line: 881, column: 2)
!13323 = !DILocalVariable(name: "__key", scope: !13322, file: !2138, line: 881, type: !12228)
!13324 = !DILocation(line: 0, scope: !13317)
!13325 = !DILocation(line: 0, scope: !13322)
!13326 = !DILocation(line: 0, scope: !12236, inlinedAt: !13327)
!13327 = distinct !DILocation(line: 881, column: 2, scope: !13322)
!13328 = !DILocation(line: 55, column: 2, scope: !12245, inlinedAt: !13329)
!13329 = distinct !DILocation(line: 145, column: 10, scope: !12236, inlinedAt: !13327)
!13330 = !DILocation(line: 0, scope: !12245, inlinedAt: !13329)
!13331 = !DILocation(line: 882, column: 12, scope: !13332)
!13332 = distinct !DILexicalBlock(scope: !13333, file: !2138, line: 881, column: 26)
!13333 = distinct !DILexicalBlock(scope: !13322, file: !2138, line: 881, column: 2)
!13334 = !DILocation(line: 884, column: 14, scope: !13335)
!13335 = distinct !DILexicalBlock(scope: !13332, file: !2138, line: 884, column: 7)
!13336 = !DILocation(line: 884, column: 7, scope: !13332)
!13337 = !DILocation(line: 885, column: 4, scope: !13338)
!13338 = distinct !DILexicalBlock(scope: !13335, file: !2138, line: 884, column: 23)
!13339 = !DILocation(line: 886, column: 10, scope: !13338)
!13340 = !DILocation(line: 887, column: 3, scope: !13338)
!13341 = !DILocation(line: 0, scope: !12263, inlinedAt: !13342)
!13342 = distinct !DILocation(line: 881, column: 2, scope: !13333)
!13343 = !DILocation(line: 0, scope: !12271, inlinedAt: !13344)
!13344 = distinct !DILocation(line: 215, column: 2, scope: !12263, inlinedAt: !13342)
!13345 = !DILocation(line: 95, column: 2, scope: !12271, inlinedAt: !13344)
!13346 = !DILocation(line: 890, column: 2, scope: !13317)
!13347 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2138, file: !2138, line: 893, type: !12194, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !13348)
!13348 = !{!13349}
!13349 = !DILocalVariable(name: "thread", arg: 1, scope: !13347, file: !2138, line: 893, type: !2033)
!13350 = !DILocation(line: 0, scope: !13347)
!13351 = !DILocation(line: 0, scope: !13203, inlinedAt: !13352)
!13352 = distinct !DILocation(line: 895, column: 2, scope: !13347)
!13353 = !DILocation(line: 0, scope: !13207, inlinedAt: !13352)
!13354 = !DILocation(line: 0, scope: !12236, inlinedAt: !13355)
!13355 = distinct !DILocation(line: 788, column: 2, scope: !13207, inlinedAt: !13352)
!13356 = !DILocation(line: 55, column: 2, scope: !12245, inlinedAt: !13357)
!13357 = distinct !DILocation(line: 145, column: 10, scope: !12236, inlinedAt: !13355)
!13358 = !DILocation(line: 0, scope: !12245, inlinedAt: !13357)
!13359 = !DILocation(line: 789, column: 3, scope: !13217, inlinedAt: !13352)
!13360 = !DILocation(line: 0, scope: !12263, inlinedAt: !13361)
!13361 = distinct !DILocation(line: 788, column: 2, scope: !13218, inlinedAt: !13352)
!13362 = !DILocation(line: 0, scope: !12271, inlinedAt: !13363)
!13363 = distinct !DILocation(line: 215, column: 2, scope: !12263, inlinedAt: !13361)
!13364 = !DILocation(line: 95, column: 2, scope: !12271, inlinedAt: !13363)
!13365 = !DILocation(line: 896, column: 8, scope: !13347)
!13366 = !DILocation(line: 897, column: 1, scope: !13347)
!13367 = distinct !DISubprogram(name: "z_set_prio", scope: !2138, file: !2138, line: 902, type: !12556, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !13368)
!13368 = !{!13369, !13370, !13371, !13372, !13374}
!13369 = !DILocalVariable(name: "thread", arg: 1, scope: !13367, file: !2138, line: 902, type: !2033)
!13370 = !DILocalVariable(name: "prio", arg: 2, scope: !13367, file: !2138, line: 902, type: !103)
!13371 = !DILocalVariable(name: "need_sched", scope: !13367, file: !2138, line: 904, type: !157)
!13372 = !DILocalVariable(name: "__i", scope: !13373, file: !2138, line: 906, type: !12228)
!13373 = distinct !DILexicalBlock(scope: !13367, file: !2138, line: 906, column: 2)
!13374 = !DILocalVariable(name: "__key", scope: !13373, file: !2138, line: 906, type: !12228)
!13375 = !DILocation(line: 0, scope: !13367)
!13376 = !DILocation(line: 0, scope: !13373)
!13377 = !DILocation(line: 0, scope: !12236, inlinedAt: !13378)
!13378 = distinct !DILocation(line: 906, column: 2, scope: !13373)
!13379 = !DILocation(line: 55, column: 2, scope: !12245, inlinedAt: !13380)
!13380 = distinct !DILocation(line: 145, column: 10, scope: !12236, inlinedAt: !13378)
!13381 = !DILocation(line: 0, scope: !12245, inlinedAt: !13380)
!13382 = !DILocation(line: 907, column: 16, scope: !13383)
!13383 = distinct !DILexicalBlock(scope: !13384, file: !2138, line: 906, column: 26)
!13384 = distinct !DILexicalBlock(scope: !13373, file: !2138, line: 906, column: 2)
!13385 = !DILocation(line: 909, column: 7, scope: !13383)
!13386 = !DILocation(line: 0, scope: !12405, inlinedAt: !13387)
!13387 = distinct !DILocation(line: 912, column: 5, scope: !13388)
!13388 = distinct !DILexicalBlock(scope: !13389, file: !2138, line: 911, column: 63)
!13389 = distinct !DILexicalBlock(scope: !13390, file: !2138, line: 911, column: 8)
!13390 = distinct !DILexicalBlock(scope: !13391, file: !2138, line: 909, column: 19)
!13391 = distinct !DILexicalBlock(scope: !13383, file: !2138, line: 909, column: 7)
!13392 = !DILocation(line: 266, column: 28, scope: !12405, inlinedAt: !13387)
!13393 = !DILocation(line: 0, scope: !12413, inlinedAt: !13394)
!13394 = distinct !DILocation(line: 268, column: 3, scope: !12417, inlinedAt: !13387)
!13395 = !DILocation(line: 234, column: 2, scope: !12413, inlinedAt: !13394)
!13396 = !DILocation(line: 913, column: 23, scope: !13388)
!13397 = !DILocation(line: 0, scope: !12422, inlinedAt: !13398)
!13398 = distinct !DILocation(line: 914, column: 5, scope: !13388)
!13399 = !DILocation(line: 252, column: 28, scope: !12422, inlinedAt: !13398)
!13400 = !DILocation(line: 0, scope: !12429, inlinedAt: !13401)
!13401 = distinct !DILocation(line: 254, column: 3, scope: !12433, inlinedAt: !13398)
!13402 = !DILocation(line: 0, scope: !12436, inlinedAt: !13403)
!13403 = distinct !DILocation(line: 229, column: 2, scope: !12429, inlinedAt: !13401)
!13404 = !DILocation(line: 188, column: 2, scope: !12446, inlinedAt: !13403)
!13405 = !DILocation(line: 188, column: 2, scope: !12448, inlinedAt: !13403)
!13406 = !DILocation(line: 0, scope: !12446, inlinedAt: !13403)
!13407 = !DILocation(line: 189, column: 7, scope: !12451, inlinedAt: !13403)
!13408 = !DILocation(line: 189, column: 35, scope: !12451, inlinedAt: !13403)
!13409 = !DILocation(line: 189, column: 7, scope: !12452, inlinedAt: !13403)
!13410 = !DILocation(line: 190, column: 4, scope: !12456, inlinedAt: !13403)
!13411 = !DILocation(line: 192, column: 4, scope: !12456, inlinedAt: !13403)
!13412 = distinct !{!13412, !13404, !13413}
!13413 = !DILocation(line: 194, column: 2, scope: !12446, inlinedAt: !13403)
!13414 = !DILocation(line: 196, column: 2, scope: !12436, inlinedAt: !13403)
!13415 = !DILocation(line: 197, column: 1, scope: !12436, inlinedAt: !13403)
!13416 = !DILocation(line: 918, column: 4, scope: !13390)
!13417 = !DILocation(line: 919, column: 3, scope: !13390)
!13418 = !DILocation(line: 920, column: 22, scope: !13419)
!13419 = distinct !DILexicalBlock(scope: !13391, file: !2138, line: 919, column: 10)
!13420 = !DILocation(line: 0, scope: !12263, inlinedAt: !13421)
!13421 = distinct !DILocation(line: 906, column: 2, scope: !13384)
!13422 = !DILocation(line: 0, scope: !12271, inlinedAt: !13423)
!13423 = distinct !DILocation(line: 215, column: 2, scope: !12263, inlinedAt: !13421)
!13424 = !DILocation(line: 95, column: 2, scope: !12271, inlinedAt: !13423)
!13425 = !DILocation(line: 926, column: 2, scope: !13367)
!13426 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2138, file: !2138, line: 929, type: !13427, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !13429)
!13427 = !DISubroutineType(types: !13428)
!13428 = !{null, !2033, !103}
!13429 = !{!13430, !13431, !13432}
!13430 = !DILocalVariable(name: "thread", arg: 1, scope: !13426, file: !2138, line: 929, type: !2033)
!13431 = !DILocalVariable(name: "prio", arg: 2, scope: !13426, file: !2138, line: 929, type: !103)
!13432 = !DILocalVariable(name: "need_sched", scope: !13426, file: !2138, line: 931, type: !157)
!13433 = !DILocation(line: 0, scope: !13426)
!13434 = !DILocation(line: 931, column: 20, scope: !13426)
!13435 = !DILocation(line: 935, column: 17, scope: !13436)
!13436 = distinct !DILexicalBlock(scope: !13426, file: !2138, line: 935, column: 6)
!13437 = !DILocation(line: 935, column: 20, scope: !13436)
!13438 = !DILocation(line: 935, column: 35, scope: !13436)
!13439 = !DILocation(line: 935, column: 48, scope: !13436)
!13440 = !DILocation(line: 935, column: 6, scope: !13426)
!13441 = !DILocation(line: 936, column: 3, scope: !13442)
!13442 = distinct !DILexicalBlock(scope: !13436, file: !2138, line: 935, column: 55)
!13443 = !DILocation(line: 937, column: 2, scope: !13442)
!13444 = !DILocation(line: 938, column: 1, scope: !13426)
!13445 = distinct !DISubprogram(name: "k_sched_lock", scope: !2138, file: !2138, line: 987, type: !2928, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !13446)
!13446 = !{!13447, !13449}
!13447 = !DILocalVariable(name: "__i", scope: !13448, file: !2138, line: 989, type: !12228)
!13448 = distinct !DILexicalBlock(scope: !13445, file: !2138, line: 989, column: 2)
!13449 = !DILocalVariable(name: "__key", scope: !13448, file: !2138, line: 989, type: !12228)
!13450 = !DILocation(line: 0, scope: !13448)
!13451 = !DILocation(line: 0, scope: !12236, inlinedAt: !13452)
!13452 = distinct !DILocation(line: 989, column: 2, scope: !13448)
!13453 = !DILocation(line: 55, column: 2, scope: !12245, inlinedAt: !13454)
!13454 = distinct !DILocation(line: 145, column: 10, scope: !12236, inlinedAt: !13452)
!13455 = !DILocation(line: 0, scope: !12245, inlinedAt: !13454)
!13456 = !DILocation(line: 992, column: 3, scope: !13457)
!13457 = distinct !DILexicalBlock(scope: !13458, file: !2138, line: 989, column: 26)
!13458 = distinct !DILexicalBlock(scope: !13448, file: !2138, line: 989, column: 2)
!13459 = !DILocation(line: 0, scope: !12263, inlinedAt: !13460)
!13460 = distinct !DILocation(line: 989, column: 2, scope: !13458)
!13461 = !DILocation(line: 0, scope: !12271, inlinedAt: !13462)
!13462 = distinct !DILocation(line: 215, column: 2, scope: !12263, inlinedAt: !13460)
!13463 = !DILocation(line: 95, column: 2, scope: !12271, inlinedAt: !13462)
!13464 = !DILocation(line: 994, column: 1, scope: !13445)
!13465 = distinct !DISubprogram(name: "z_sched_lock", scope: !11508, file: !11508, line: 251, type: !2928, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !322)
!13466 = !DILocation(line: 256, column: 4, scope: !13465)
!13467 = !DILocation(line: 256, column: 19, scope: !13465)
!13468 = !DILocation(line: 256, column: 2, scope: !13465)
!13469 = !DILocation(line: 258, column: 2, scope: !13470)
!13470 = distinct !DILexicalBlock(scope: !13465, file: !11508, line: 258, column: 2)
!13471 = !{i64 2154966200}
!13472 = !DILocation(line: 259, column: 1, scope: !13465)
!13473 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2138, file: !2138, line: 996, type: !2928, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !13474)
!13474 = !{!13475, !13477}
!13475 = !DILocalVariable(name: "__i", scope: !13476, file: !2138, line: 998, type: !12228)
!13476 = distinct !DILexicalBlock(scope: !13473, file: !2138, line: 998, column: 2)
!13477 = !DILocalVariable(name: "__key", scope: !13476, file: !2138, line: 998, type: !12228)
!13478 = !DILocation(line: 0, scope: !13476)
!13479 = !DILocation(line: 0, scope: !12236, inlinedAt: !13480)
!13480 = distinct !DILocation(line: 998, column: 2, scope: !13476)
!13481 = !DILocation(line: 55, column: 2, scope: !12245, inlinedAt: !13482)
!13482 = distinct !DILocation(line: 145, column: 10, scope: !12236, inlinedAt: !13480)
!13483 = !DILocation(line: 0, scope: !12245, inlinedAt: !13482)
!13484 = !DILocation(line: 1002, column: 5, scope: !13485)
!13485 = distinct !DILexicalBlock(scope: !13486, file: !2138, line: 998, column: 26)
!13486 = distinct !DILexicalBlock(scope: !13476, file: !2138, line: 998, column: 2)
!13487 = !DILocation(line: 1002, column: 20, scope: !13485)
!13488 = !DILocation(line: 1002, column: 3, scope: !13485)
!13489 = !DILocation(line: 1003, column: 3, scope: !13485)
!13490 = !DILocation(line: 0, scope: !12263, inlinedAt: !13491)
!13491 = distinct !DILocation(line: 998, column: 2, scope: !13486)
!13492 = !DILocation(line: 0, scope: !12271, inlinedAt: !13493)
!13493 = distinct !DILocation(line: 215, column: 2, scope: !12263, inlinedAt: !13491)
!13494 = !DILocation(line: 95, column: 2, scope: !12271, inlinedAt: !13493)
!13495 = !DILocation(line: 1011, column: 2, scope: !13473)
!13496 = !DILocation(line: 1012, column: 1, scope: !13473)
!13497 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2138, file: !2138, line: 1014, type: !12544, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !322)
!13498 = !DILocation(line: 1028, column: 25, scope: !13497)
!13499 = !DILocation(line: 1028, column: 2, scope: !13497)
!13500 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2138, file: !2138, line: 1155, type: !13501, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !13503)
!13501 = !DISubroutineType(types: !13502)
!13502 = !{!157, !2062, !2062}
!13503 = !{!13504, !13505, !13506, !13507, !13508}
!13504 = !DILocalVariable(name: "a", arg: 1, scope: !13500, file: !2138, line: 1155, type: !2062)
!13505 = !DILocalVariable(name: "b", arg: 2, scope: !13500, file: !2138, line: 1155, type: !2062)
!13506 = !DILocalVariable(name: "thread_a", scope: !13500, file: !2138, line: 1157, type: !2033)
!13507 = !DILocalVariable(name: "thread_b", scope: !13500, file: !2138, line: 1157, type: !2033)
!13508 = !DILocalVariable(name: "cmp", scope: !13500, file: !2138, line: 1158, type: !587)
!13509 = !DILocation(line: 0, scope: !13500)
!13510 = !DILocation(line: 1160, column: 13, scope: !13500)
!13511 = !DILocation(line: 1161, column: 13, scope: !13500)
!13512 = !DILocation(line: 1163, column: 8, scope: !13500)
!13513 = !DILocation(line: 1165, column: 10, scope: !13514)
!13514 = distinct !DILexicalBlock(scope: !13500, file: !2138, line: 1165, column: 6)
!13515 = !DILocation(line: 1165, column: 6, scope: !13500)
!13516 = !DILocation(line: 1167, column: 17, scope: !13517)
!13517 = distinct !DILexicalBlock(scope: !13514, file: !2138, line: 1167, column: 13)
!13518 = !DILocation(line: 1167, column: 13, scope: !13514)
!13519 = !DILocation(line: 1170, column: 25, scope: !13520)
!13520 = distinct !DILexicalBlock(scope: !13517, file: !2138, line: 1169, column: 9)
!13521 = !DILocation(line: 1170, column: 52, scope: !13520)
!13522 = !DILocation(line: 1170, column: 35, scope: !13520)
!13523 = !DILocation(line: 1170, column: 3, scope: !13520)
!13524 = !DILocation(line: 0, scope: !13514)
!13525 = !DILocation(line: 1173, column: 1, scope: !13500)
!13526 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2138, file: !2138, line: 1175, type: !13527, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !13542)
!13527 = !DISubroutineType(types: !13528)
!13528 = !{null, !13529, !2033}
!13529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13530, size: 32)
!13530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !13531, line: 37, size: 128, elements: !13532)
!13531 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13532 = !{!13533, !13541}
!13533 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !13530, file: !13531, line: 38, baseType: !13534, size: 96)
!13534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !237, line: 83, size: 96, elements: !13535)
!13535 = !{!13536, !13537, !13540}
!13536 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !13534, file: !237, line: 84, baseType: !2062, size: 32)
!13537 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !13534, file: !237, line: 85, baseType: !13538, size: 32, offset: 32)
!13538 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !237, line: 81, baseType: !13539)
!13539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13501, size: 32)
!13540 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !13534, file: !237, line: 86, baseType: !103, size: 32, offset: 64)
!13541 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !13530, file: !13531, line: 39, baseType: !103, size: 32, offset: 96)
!13542 = !{!13543, !13544, !13545, !13546, !13555}
!13543 = !DILocalVariable(name: "pq", arg: 1, scope: !13526, file: !2138, line: 1175, type: !13529)
!13544 = !DILocalVariable(name: "thread", arg: 2, scope: !13526, file: !2138, line: 1175, type: !2033)
!13545 = !DILocalVariable(name: "t", scope: !13526, file: !2138, line: 1177, type: !2033)
!13546 = !DILocalVariable(name: "__f", scope: !13547, file: !2138, line: 1190, type: !13550)
!13547 = distinct !DILexicalBlock(scope: !13548, file: !2138, line: 1190, column: 3)
!13548 = distinct !DILexicalBlock(scope: !13549, file: !2138, line: 1189, column: 27)
!13549 = distinct !DILexicalBlock(scope: !13526, file: !2138, line: 1189, column: 6)
!13550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !237, line: 155, size: 96, elements: !13551)
!13551 = !{!13552, !13553, !13554}
!13552 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !13550, file: !237, line: 156, baseType: !2133, size: 32)
!13553 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !13550, file: !237, line: 157, baseType: !1685, size: 32, offset: 32)
!13554 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !13550, file: !237, line: 158, baseType: !587, size: 32, offset: 64)
!13555 = !DILocalVariable(name: "n", scope: !13556, file: !2138, line: 1190, type: !2062)
!13556 = distinct !DILexicalBlock(scope: !13557, file: !2138, line: 1190, column: 3)
!13557 = distinct !DILexicalBlock(scope: !13547, file: !2138, line: 1190, column: 3)
!13558 = !DILocation(line: 0, scope: !13526)
!13559 = !DILocation(line: 1181, column: 31, scope: !13526)
!13560 = !DILocation(line: 1181, column: 45, scope: !13526)
!13561 = !DILocation(line: 1181, column: 15, scope: !13526)
!13562 = !DILocation(line: 1181, column: 25, scope: !13526)
!13563 = !DILocation(line: 1189, column: 11, scope: !13549)
!13564 = !DILocation(line: 1189, column: 7, scope: !13549)
!13565 = !DILocation(line: 1189, column: 6, scope: !13526)
!13566 = !DILocation(line: 1190, column: 3, scope: !13547)
!13567 = !DILocation(line: 1190, column: 3, scope: !13556)
!13568 = !DILocation(line: 0, scope: !13556)
!13569 = !DILocation(line: 1190, column: 3, scope: !13557)
!13570 = !DILocation(line: 1193, column: 2, scope: !13548)
!13571 = !DILocation(line: 1191, column: 42, scope: !13572)
!13572 = distinct !DILexicalBlock(scope: !13557, file: !2138, line: 1190, column: 54)
!13573 = !DILocation(line: 1191, column: 12, scope: !13572)
!13574 = !DILocation(line: 1191, column: 22, scope: !13572)
!13575 = distinct !{!13575, !13566, !13576}
!13576 = !DILocation(line: 1192, column: 3, scope: !13547)
!13577 = !DILocation(line: 1195, column: 17, scope: !13526)
!13578 = !DILocation(line: 1195, column: 37, scope: !13526)
!13579 = !DILocation(line: 1195, column: 2, scope: !13526)
!13580 = !DILocation(line: 1196, column: 1, scope: !13526)
!13581 = !DISubprogram(name: "z_rb_foreach_next", scope: !237, file: !237, line: 176, type: !13582, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!13582 = !DISubroutineType(types: !13583)
!13583 = !{!2062, !13584, !13585}
!13584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13534, size: 32)
!13585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13550, size: 32)
!13586 = !DISubprogram(name: "rb_insert", scope: !237, file: !237, line: 105, type: !13587, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!13587 = !DISubroutineType(types: !13588)
!13588 = !{null, !13584, !2062}
!13589 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2138, file: !2138, line: 1198, type: !13527, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !13590)
!13590 = !{!13591, !13592}
!13591 = !DILocalVariable(name: "pq", arg: 1, scope: !13589, file: !2138, line: 1198, type: !13529)
!13592 = !DILocalVariable(name: "thread", arg: 2, scope: !13589, file: !2138, line: 1198, type: !2033)
!13593 = !DILocation(line: 0, scope: !13589)
!13594 = !DILocation(line: 1202, column: 17, scope: !13589)
!13595 = !DILocation(line: 1202, column: 37, scope: !13589)
!13596 = !DILocation(line: 1202, column: 2, scope: !13589)
!13597 = !DILocation(line: 1204, column: 16, scope: !13598)
!13598 = distinct !DILexicalBlock(scope: !13589, file: !2138, line: 1204, column: 6)
!13599 = !DILocation(line: 1204, column: 7, scope: !13598)
!13600 = !DILocation(line: 1204, column: 6, scope: !13589)
!13601 = !DILocation(line: 1205, column: 7, scope: !13602)
!13602 = distinct !DILexicalBlock(scope: !13598, file: !2138, line: 1204, column: 22)
!13603 = !DILocation(line: 1205, column: 22, scope: !13602)
!13604 = !DILocation(line: 1206, column: 2, scope: !13602)
!13605 = !DILocation(line: 1207, column: 1, scope: !13589)
!13606 = !DISubprogram(name: "rb_remove", scope: !237, file: !237, line: 110, type: !13587, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!13607 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2138, file: !2138, line: 1209, type: !13608, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !13610)
!13608 = !DISubroutineType(types: !13609)
!13609 = !{!2033, !13529}
!13610 = !{!13611, !13612, !13613}
!13611 = !DILocalVariable(name: "pq", arg: 1, scope: !13607, file: !2138, line: 1209, type: !13529)
!13612 = !DILocalVariable(name: "thread", scope: !13607, file: !2138, line: 1211, type: !2033)
!13613 = !DILocalVariable(name: "n", scope: !13607, file: !2138, line: 1212, type: !2062)
!13614 = !DILocation(line: 0, scope: !13607)
!13615 = !DILocation(line: 1212, column: 37, scope: !13607)
!13616 = !DILocation(line: 1212, column: 21, scope: !13607)
!13617 = !DILocation(line: 1217, column: 2, scope: !13607)
!13618 = distinct !DISubprogram(name: "rb_get_min", scope: !237, file: !237, line: 115, type: !13619, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !13621)
!13619 = !DISubroutineType(types: !13620)
!13620 = !{!2062, !13584}
!13621 = !{!13622}
!13622 = !DILocalVariable(name: "tree", arg: 1, scope: !13618, file: !237, line: 115, type: !13584)
!13623 = !DILocation(line: 0, scope: !13618)
!13624 = !DILocation(line: 117, column: 9, scope: !13618)
!13625 = !DILocation(line: 117, column: 2, scope: !13618)
!13626 = !DISubprogram(name: "z_rb_get_minmax", scope: !237, file: !237, line: 100, type: !13627, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!13627 = !DISubroutineType(types: !13628)
!13628 = !{!2062, !13584, !154}
!13629 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2138, file: !2138, line: 1246, type: !13630, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !13640)
!13630 = !DISubroutineType(types: !13631)
!13631 = !{!2033, !13632}
!13632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13633, size: 32)
!13633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !13531, line: 53, size: 2080, elements: !13634)
!13634 = !{!13635, !13639}
!13635 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !13633, file: !13531, line: 54, baseType: !13636, size: 2048)
!13636 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2069, size: 2048, elements: !13637)
!13637 = !{!13638}
!13638 = !DISubrange(count: 32)
!13639 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !13633, file: !13531, line: 55, baseType: !32, size: 32, offset: 2048)
!13640 = !{!13641, !13642, !13643, !13644}
!13641 = !DILocalVariable(name: "pq", arg: 1, scope: !13629, file: !2138, line: 1246, type: !13632)
!13642 = !DILocalVariable(name: "thread", scope: !13629, file: !2138, line: 1252, type: !2033)
!13643 = !DILocalVariable(name: "l", scope: !13629, file: !2138, line: 1253, type: !12439)
!13644 = !DILocalVariable(name: "n", scope: !13629, file: !2138, line: 1254, type: !2134)
!13645 = !DILocation(line: 0, scope: !13629)
!13646 = !DILocation(line: 1248, column: 11, scope: !13647)
!13647 = distinct !DILexicalBlock(scope: !13629, file: !2138, line: 1248, column: 6)
!13648 = !DILocation(line: 1248, column: 7, scope: !13647)
!13649 = !DILocation(line: 1248, column: 6, scope: !13629)
!13650 = !DILocation(line: 1253, column: 31, scope: !13629)
!13651 = !DILocation(line: 1253, column: 20, scope: !13629)
!13652 = !DILocation(line: 1254, column: 19, scope: !13629)
!13653 = !DILocation(line: 1260, column: 1, scope: !13629)
!13654 = distinct !DISubprogram(name: "z_unpend_all", scope: !2138, file: !2138, line: 1262, type: !13655, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !13657)
!13655 = !DISubroutineType(types: !13656)
!13656 = !{!103, !2064}
!13657 = !{!13658, !13659, !13660}
!13658 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13654, file: !2138, line: 1262, type: !2064)
!13659 = !DILocalVariable(name: "need_sched", scope: !13654, file: !2138, line: 1264, type: !103)
!13660 = !DILocalVariable(name: "thread", scope: !13654, file: !2138, line: 1265, type: !2033)
!13661 = !DILocation(line: 0, scope: !13654)
!13662 = !DILocation(line: 1267, column: 19, scope: !13654)
!13663 = !DILocation(line: 1267, column: 41, scope: !13654)
!13664 = !DILocation(line: 1267, column: 2, scope: !13654)
!13665 = !DILocation(line: 1268, column: 3, scope: !13666)
!13666 = distinct !DILexicalBlock(scope: !13654, file: !2138, line: 1267, column: 50)
!13667 = !DILocation(line: 1269, column: 3, scope: !13666)
!13668 = distinct !{!13668, !13664, !13669}
!13669 = !DILocation(line: 1271, column: 2, scope: !13654)
!13670 = !DILocation(line: 1273, column: 2, scope: !13654)
!13671 = distinct !DISubprogram(name: "z_waitq_head", scope: !11834, file: !11834, line: 52, type: !13287, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !13672)
!13672 = !{!13673}
!13673 = !DILocalVariable(name: "w", arg: 1, scope: !13671, file: !11834, line: 52, type: !2064)
!13674 = !DILocation(line: 0, scope: !13671)
!13675 = !DILocation(line: 54, column: 52, scope: !13671)
!13676 = !DILocation(line: 54, column: 28, scope: !13671)
!13677 = !DILocation(line: 54, column: 9, scope: !13671)
!13678 = !DILocation(line: 54, column: 2, scope: !13671)
!13679 = distinct !DISubprogram(name: "init_ready_q", scope: !2138, file: !2138, line: 1276, type: !13680, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !13687)
!13680 = !DISubroutineType(types: !13681)
!13681 = !{null, !13682}
!13682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13683, size: 32)
!13683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !247, line: 83, size: 96, elements: !13684)
!13684 = !{!13685, !13686}
!13685 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !13683, file: !247, line: 86, baseType: !2033, size: 32)
!13686 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !13683, file: !247, line: 90, baseType: !2069, size: 64, offset: 32)
!13687 = !{!13688}
!13688 = !DILocalVariable(name: "rq", arg: 1, scope: !13679, file: !2138, line: 1276, type: !13682)
!13689 = !DILocation(line: 0, scope: !13679)
!13690 = !DILocation(line: 1289, column: 22, scope: !13679)
!13691 = !DILocation(line: 1289, column: 2, scope: !13679)
!13692 = !DILocation(line: 1291, column: 1, scope: !13679)
!13693 = distinct !DISubprogram(name: "sys_dlist_init", scope: !221, file: !221, line: 197, type: !13694, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !13696)
!13694 = !DISubroutineType(types: !13695)
!13695 = !{null, !12439}
!13696 = !{!13697}
!13697 = !DILocalVariable(name: "list", arg: 1, scope: !13693, file: !221, line: 197, type: !12439)
!13698 = !DILocation(line: 0, scope: !13693)
!13699 = !DILocation(line: 199, column: 8, scope: !13693)
!13700 = !DILocation(line: 199, column: 13, scope: !13693)
!13701 = !DILocation(line: 200, column: 8, scope: !13693)
!13702 = !DILocation(line: 200, column: 13, scope: !13693)
!13703 = !DILocation(line: 201, column: 1, scope: !13693)
!13704 = distinct !DISubprogram(name: "z_sched_init", scope: !2138, file: !2138, line: 1293, type: !2928, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !322)
!13705 = !DILocation(line: 1302, column: 2, scope: !13704)
!13706 = !DILocation(line: 1306, column: 2, scope: !13704)
!13707 = !DILocation(line: 1309, column: 1, scope: !13704)
!13708 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2138, file: !2138, line: 1311, type: !13709, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !13712)
!13709 = !DISubroutineType(types: !13710)
!13710 = !{!103, !13711}
!13711 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !211, line: 347, baseType: !2033)
!13712 = !{!13713}
!13713 = !DILocalVariable(name: "thread", arg: 1, scope: !13708, file: !2138, line: 1311, type: !13711)
!13714 = !DILocation(line: 0, scope: !13708)
!13715 = !DILocation(line: 1313, column: 22, scope: !13708)
!13716 = !DILocation(line: 1313, column: 9, scope: !13708)
!13717 = !DILocation(line: 1313, column: 2, scope: !13708)
!13718 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2138, file: !2138, line: 1325, type: !13719, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !13721)
!13719 = !DISubroutineType(types: !13720)
!13720 = !{null, !13711, !103}
!13721 = !{!13722, !13723, !13724}
!13722 = !DILocalVariable(name: "thread", arg: 1, scope: !13718, file: !2138, line: 1325, type: !13711)
!13723 = !DILocalVariable(name: "prio", arg: 2, scope: !13718, file: !2138, line: 1325, type: !103)
!13724 = !DILocalVariable(name: "th", scope: !13718, file: !2138, line: 1334, type: !2033)
!13725 = !DILocation(line: 0, scope: !13718)
!13726 = !DILocation(line: 1336, column: 2, scope: !13718)
!13727 = !DILocation(line: 1337, column: 1, scope: !13718)
!13728 = distinct !DISubprogram(name: "k_can_yield", scope: !2138, file: !2138, line: 1384, type: !6293, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !322)
!13729 = !DILocation(line: 1386, column: 11, scope: !13728)
!13730 = !DILocation(line: 1386, column: 29, scope: !13728)
!13731 = !DILocation(line: 1386, column: 32, scope: !13728)
!13732 = !DILocation(line: 1386, column: 46, scope: !13728)
!13733 = !DILocation(line: 1387, column: 28, scope: !13728)
!13734 = !DILocation(line: 1387, column: 4, scope: !13728)
!13735 = !DILocation(line: 1386, column: 2, scope: !13728)
!13736 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !307, file: !307, line: 989, type: !6293, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !322)
!13737 = !DILocation(line: 993, column: 10, scope: !13736)
!13738 = !DILocation(line: 993, column: 2, scope: !13736)
!13739 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2138, file: !2138, line: 1390, type: !2928, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !13740)
!13740 = !{!13741}
!13741 = !DILocalVariable(name: "key", scope: !13739, file: !2138, line: 1396, type: !12228)
!13742 = !DILocation(line: 0, scope: !12236, inlinedAt: !13743)
!13743 = distinct !DILocation(line: 1396, column: 25, scope: !13739)
!13744 = !DILocation(line: 55, column: 2, scope: !12245, inlinedAt: !13745)
!13745 = distinct !DILocation(line: 145, column: 10, scope: !12236, inlinedAt: !13743)
!13746 = !DILocation(line: 0, scope: !12245, inlinedAt: !13745)
!13747 = !DILocation(line: 0, scope: !13739)
!13748 = !DILocation(line: 1400, column: 18, scope: !13749)
!13749 = distinct !DILexicalBlock(scope: !13750, file: !2138, line: 1399, column: 36)
!13750 = distinct !DILexicalBlock(scope: !13739, file: !2138, line: 1398, column: 6)
!13751 = !DILocation(line: 0, scope: !12405, inlinedAt: !13752)
!13752 = distinct !DILocation(line: 1400, column: 3, scope: !13749)
!13753 = !DILocation(line: 266, column: 15, scope: !12405, inlinedAt: !13752)
!13754 = !DILocation(line: 266, column: 28, scope: !12405, inlinedAt: !13752)
!13755 = !DILocation(line: 0, scope: !12413, inlinedAt: !13756)
!13756 = distinct !DILocation(line: 268, column: 3, scope: !12417, inlinedAt: !13752)
!13757 = !DILocation(line: 234, column: 2, scope: !12413, inlinedAt: !13756)
!13758 = !DILocation(line: 1402, column: 15, scope: !13739)
!13759 = !DILocation(line: 0, scope: !12422, inlinedAt: !13760)
!13760 = distinct !DILocation(line: 1402, column: 2, scope: !13739)
!13761 = !DILocation(line: 252, column: 15, scope: !12422, inlinedAt: !13760)
!13762 = !DILocation(line: 252, column: 28, scope: !12422, inlinedAt: !13760)
!13763 = !DILocation(line: 0, scope: !12429, inlinedAt: !13764)
!13764 = distinct !DILocation(line: 254, column: 3, scope: !12433, inlinedAt: !13760)
!13765 = !DILocation(line: 0, scope: !12436, inlinedAt: !13766)
!13766 = distinct !DILocation(line: 229, column: 2, scope: !12429, inlinedAt: !13764)
!13767 = !DILocation(line: 188, column: 2, scope: !12446, inlinedAt: !13766)
!13768 = !DILocation(line: 188, column: 2, scope: !12448, inlinedAt: !13766)
!13769 = !DILocation(line: 0, scope: !12446, inlinedAt: !13766)
!13770 = !DILocation(line: 189, column: 7, scope: !12451, inlinedAt: !13766)
!13771 = !DILocation(line: 189, column: 35, scope: !12451, inlinedAt: !13766)
!13772 = !DILocation(line: 189, column: 7, scope: !12452, inlinedAt: !13766)
!13773 = !DILocation(line: 191, column: 21, scope: !12456, inlinedAt: !13766)
!13774 = !DILocation(line: 190, column: 4, scope: !12456, inlinedAt: !13766)
!13775 = !DILocation(line: 192, column: 4, scope: !12456, inlinedAt: !13766)
!13776 = distinct !{!13776, !13767, !13777}
!13777 = !DILocation(line: 194, column: 2, scope: !12446, inlinedAt: !13766)
!13778 = !DILocation(line: 196, column: 37, scope: !12436, inlinedAt: !13766)
!13779 = !DILocation(line: 196, column: 2, scope: !12436, inlinedAt: !13766)
!13780 = !DILocation(line: 197, column: 1, scope: !12436, inlinedAt: !13766)
!13781 = !DILocation(line: 1403, column: 2, scope: !13739)
!13782 = !DILocation(line: 0, scope: !12847, inlinedAt: !13783)
!13783 = distinct !DILocation(line: 1404, column: 2, scope: !13739)
!13784 = !DILocation(line: 196, column: 9, scope: !12847, inlinedAt: !13783)
!13785 = !DILocation(line: 1405, column: 1, scope: !13739)
!13786 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2138, file: !2138, line: 1459, type: !13787, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !13789)
!13787 = !DISubroutineType(types: !13788)
!13788 = !{!587, !13027}
!13789 = !{!13790, !13791, !13792}
!13790 = !DILocalVariable(name: "timeout", arg: 1, scope: !13786, file: !2138, line: 1459, type: !13027)
!13791 = !DILocalVariable(name: "ticks", scope: !13786, file: !2138, line: 1461, type: !1390)
!13792 = !DILocalVariable(name: "ret", scope: !13786, file: !2138, line: 1480, type: !587)
!13793 = !DILocation(line: 0, scope: !13786)
!13794 = !DILocation(line: 1468, column: 6, scope: !13795)
!13795 = distinct !DILexicalBlock(scope: !13786, file: !2138, line: 1468, column: 6)
!13796 = !DILocation(line: 1468, column: 6, scope: !13786)
!13797 = !DILocation(line: 1469, column: 20, scope: !13798)
!13798 = distinct !DILexicalBlock(scope: !13795, file: !2138, line: 1468, column: 40)
!13799 = !DILocation(line: 1469, column: 3, scope: !13798)
!13800 = !DILocation(line: 1473, column: 3, scope: !13798)
!13801 = !DILocation(line: 1478, column: 10, scope: !13786)
!13802 = !DILocation(line: 1480, column: 16, scope: !13786)
!13803 = !DILocation(line: 1485, column: 1, scope: !13786)
!13804 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3128, file: !3128, line: 310, type: !13805, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !13807)
!13805 = !DISubroutineType(types: !13806)
!13806 = !{null, !13711}
!13807 = !{!13808}
!13808 = !DILocalVariable(name: "thread", arg: 1, scope: !13804, file: !3128, line: 310, type: !13711)
!13809 = !DILocation(line: 0, scope: !13804)
!13810 = !DILocation(line: 319, column: 2, scope: !13811)
!13811 = distinct !DILexicalBlock(scope: !13804, file: !3128, line: 319, column: 2)
!13812 = !{i64 2154884589}
!13813 = !DILocation(line: 320, column: 2, scope: !13804)
!13814 = !DILocation(line: 321, column: 1, scope: !13804)
!13815 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2138, file: !2138, line: 1415, type: !13816, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !13818)
!13816 = !DISubroutineType(types: !13817)
!13817 = !{!587, !1390}
!13818 = !{!13819, !13820, !13821, !13822}
!13819 = !DILocalVariable(name: "ticks", arg: 1, scope: !13815, file: !2138, line: 1415, type: !1390)
!13820 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !13815, file: !2138, line: 1418, type: !121)
!13821 = !DILocalVariable(name: "timeout", scope: !13815, file: !2138, line: 1430, type: !13027)
!13822 = !DILocalVariable(name: "key", scope: !13815, file: !2138, line: 1437, type: !12228)
!13823 = !DILocation(line: 0, scope: !13815)
!13824 = !DILocation(line: 1425, column: 12, scope: !13825)
!13825 = distinct !DILexicalBlock(scope: !13815, file: !2138, line: 1425, column: 6)
!13826 = !DILocation(line: 1425, column: 6, scope: !13815)
!13827 = !DILocation(line: 1426, column: 3, scope: !13828)
!13828 = distinct !DILexicalBlock(scope: !13825, file: !2138, line: 1425, column: 18)
!13829 = !DILocation(line: 1427, column: 3, scope: !13828)
!13830 = !DILocation(line: 1431, column: 24, scope: !13831)
!13831 = distinct !DILexicalBlock(scope: !13815, file: !2138, line: 1431, column: 6)
!13832 = !DILocation(line: 1431, column: 6, scope: !13815)
!13833 = !DILocation(line: 1432, column: 35, scope: !13834)
!13834 = distinct !DILexicalBlock(scope: !13831, file: !2138, line: 1431, column: 30)
!13835 = !DILocation(line: 1432, column: 27, scope: !13834)
!13836 = !DILocation(line: 1433, column: 2, scope: !13834)
!13837 = !DILocation(line: 1434, column: 27, scope: !13838)
!13838 = distinct !DILexicalBlock(scope: !13831, file: !2138, line: 1433, column: 9)
!13839 = !DILocation(line: 0, scope: !13831)
!13840 = !DILocation(line: 0, scope: !12236, inlinedAt: !13841)
!13841 = distinct !DILocation(line: 1437, column: 25, scope: !13815)
!13842 = !DILocation(line: 55, column: 2, scope: !12245, inlinedAt: !13843)
!13843 = distinct !DILocation(line: 145, column: 10, scope: !12236, inlinedAt: !13841)
!13844 = !DILocation(line: 0, scope: !12245, inlinedAt: !13843)
!13845 = !DILocation(line: 1440, column: 20, scope: !13815)
!13846 = !DILocation(line: 1440, column: 18, scope: !13815)
!13847 = !DILocation(line: 1442, column: 2, scope: !13815)
!13848 = !DILocation(line: 1443, column: 23, scope: !13815)
!13849 = !DILocation(line: 1443, column: 2, scope: !13815)
!13850 = !DILocation(line: 1444, column: 29, scope: !13815)
!13851 = !DILocation(line: 1444, column: 2, scope: !13815)
!13852 = !DILocation(line: 0, scope: !12847, inlinedAt: !13853)
!13853 = distinct !DILocation(line: 1446, column: 8, scope: !13815)
!13854 = !DILocation(line: 196, column: 9, scope: !12847, inlinedAt: !13853)
!13855 = !DILocation(line: 1450, column: 10, scope: !13815)
!13856 = !DILocation(line: 1450, column: 45, scope: !13815)
!13857 = !DILocation(line: 1450, column: 43, scope: !13815)
!13858 = !DILocation(line: 1451, column: 6, scope: !13815)
!13859 = !DILocation(line: 1457, column: 1, scope: !13815)
!13860 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !12069, file: !12069, line: 1103, type: !12070, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !13861)
!13861 = !{!13862}
!13862 = !DILocalVariable(name: "t", arg: 1, scope: !13860, file: !12069, line: 1103, type: !1302)
!13863 = !DILocation(line: 0, scope: !13860)
!13864 = !DILocation(line: 0, scope: !12283, inlinedAt: !13865)
!13865 = distinct !DILocation(line: 1106, column: 9, scope: !13860)
!13866 = !DILocation(line: 139, column: 13, scope: !13867, inlinedAt: !13865)
!13867 = distinct !DILexicalBlock(scope: !13868, file: !12069, line: 138, column: 10)
!13868 = distinct !DILexicalBlock(scope: !13869, file: !12069, line: 136, column: 7)
!13869 = distinct !DILexicalBlock(scope: !12304, file: !12069, line: 134, column: 17)
!13870 = !DILocation(line: 1106, column: 2, scope: !13860)
!13871 = distinct !DISubprogram(name: "k_yield", scope: !3128, file: !3128, line: 140, type: !2928, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !322)
!13872 = !DILocation(line: 148, column: 2, scope: !13873)
!13873 = distinct !DILexicalBlock(scope: !13871, file: !3128, line: 148, column: 2)
!13874 = !{i64 2154883909}
!13875 = !DILocation(line: 149, column: 2, scope: !13871)
!13876 = !DILocation(line: 150, column: 1, scope: !13871)
!13877 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2138, file: !2138, line: 1495, type: !13878, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !13880)
!13878 = !DISubroutineType(types: !13879)
!13879 = !{!587, !103}
!13880 = !{!13881, !13882}
!13881 = !DILocalVariable(name: "us", arg: 1, scope: !13877, file: !2138, line: 1495, type: !103)
!13882 = !DILocalVariable(name: "ticks", scope: !13877, file: !2138, line: 1497, type: !587)
!13883 = !DILocation(line: 0, scope: !13877)
!13884 = !DILocation(line: 1501, column: 31, scope: !13877)
!13885 = !DILocation(line: 1501, column: 10, scope: !13877)
!13886 = !DILocation(line: 1502, column: 23, scope: !13877)
!13887 = !DILocation(line: 1502, column: 10, scope: !13877)
!13888 = !DILocation(line: 1506, column: 31, scope: !13877)
!13889 = !DILocation(line: 1506, column: 9, scope: !13877)
!13890 = !DILocation(line: 1506, column: 2, scope: !13877)
!13891 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !12069, file: !12069, line: 571, type: !12070, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !13892)
!13892 = !{!13893}
!13893 = !DILocalVariable(name: "t", arg: 1, scope: !13891, file: !12069, line: 571, type: !1302)
!13894 = !DILocation(line: 0, scope: !13891)
!13895 = !DILocation(line: 0, scope: !12283, inlinedAt: !13896)
!13896 = distinct !DILocation(line: 574, column: 9, scope: !13891)
!13897 = !DILocation(line: 135, column: 5, scope: !13869, inlinedAt: !13896)
!13898 = !DILocation(line: 139, column: 13, scope: !13867, inlinedAt: !13896)
!13899 = !DILocation(line: 574, column: 2, scope: !13891)
!13900 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !12069, file: !12069, line: 1187, type: !12070, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !13901)
!13901 = !{!13902}
!13902 = !DILocalVariable(name: "t", arg: 1, scope: !13900, file: !12069, line: 1187, type: !1302)
!13903 = !DILocation(line: 0, scope: !13900)
!13904 = !DILocation(line: 0, scope: !12283, inlinedAt: !13905)
!13905 = distinct !DILocation(line: 1190, column: 9, scope: !13900)
!13906 = !DILocation(line: 145, column: 13, scope: !13907, inlinedAt: !13905)
!13907 = distinct !DILexicalBlock(scope: !12301, file: !12069, line: 144, column: 10)
!13908 = !DILocation(line: 1190, column: 2, scope: !13900)
!13909 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2138, file: !2138, line: 1517, type: !13805, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !13910)
!13910 = !{!13911}
!13911 = !DILocalVariable(name: "thread", arg: 1, scope: !13909, file: !2138, line: 1517, type: !13711)
!13912 = !DILocation(line: 0, scope: !13909)
!13913 = !DILocation(line: 1521, column: 6, scope: !13914)
!13914 = distinct !DILexicalBlock(scope: !13909, file: !2138, line: 1521, column: 6)
!13915 = !DILocation(line: 1521, column: 6, scope: !13909)
!13916 = !DILocation(line: 1525, column: 6, scope: !13917)
!13917 = distinct !DILexicalBlock(scope: !13909, file: !2138, line: 1525, column: 6)
!13918 = !DILocation(line: 1525, column: 37, scope: !13917)
!13919 = !DILocation(line: 1525, column: 6, scope: !13909)
!13920 = !DILocation(line: 1527, column: 20, scope: !13921)
!13921 = distinct !DILexicalBlock(scope: !13922, file: !2138, line: 1527, column: 7)
!13922 = distinct !DILexicalBlock(scope: !13917, file: !2138, line: 1525, column: 42)
!13923 = !DILocation(line: 1527, column: 33, scope: !13921)
!13924 = !DILocation(line: 1527, column: 7, scope: !13922)
!13925 = !DILocation(line: 1532, column: 2, scope: !13909)
!13926 = !DILocation(line: 1533, column: 2, scope: !13909)
!13927 = !DILocation(line: 1031, column: 3, scope: !12880, inlinedAt: !13928)
!13928 = distinct !DILocation(line: 48, column: 10, scope: !12884, inlinedAt: !13929)
!13929 = distinct !DILocation(line: 1537, column: 7, scope: !13930)
!13930 = distinct !DILexicalBlock(scope: !13909, file: !2138, line: 1537, column: 6)
!13931 = !DILocation(line: 0, scope: !12880, inlinedAt: !13928)
!13932 = !DILocation(line: 48, column: 9, scope: !12884, inlinedAt: !13929)
!13933 = !DILocation(line: 1537, column: 6, scope: !13909)
!13934 = !DILocation(line: 1538, column: 3, scope: !13935)
!13935 = distinct !DILexicalBlock(scope: !13930, file: !2138, line: 1537, column: 25)
!13936 = !DILocation(line: 1539, column: 2, scope: !13935)
!13937 = !DILocation(line: 1540, column: 1, scope: !13909)
!13938 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !11508, file: !11508, line: 101, type: !12354, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !13939)
!13939 = !{!13940}
!13940 = !DILocalVariable(name: "thread", arg: 1, scope: !13938, file: !11508, line: 101, type: !2033)
!13941 = !DILocation(line: 0, scope: !13938)
!13942 = !DILocation(line: 103, column: 23, scope: !13938)
!13943 = !DILocation(line: 103, column: 36, scope: !13938)
!13944 = !DILocation(line: 103, column: 55, scope: !13938)
!13945 = !DILocation(line: 103, column: 2, scope: !13938)
!13946 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2138, file: !2138, line: 1567, type: !13947, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !13949)
!13947 = !DISubroutineType(types: !13948)
!13948 = !{!13711}
!13949 = !{!13950}
!13950 = !DILocalVariable(name: "ret", scope: !13946, file: !2138, line: 1577, type: !13711)
!13951 = !DILocation(line: 1577, column: 30, scope: !13946)
!13952 = !DILocation(line: 0, scope: !13946)
!13953 = !DILocation(line: 1582, column: 2, scope: !13946)
!13954 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2138, file: !2138, line: 1593, type: !6568, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !322)
!13955 = !DILocation(line: 1031, column: 3, scope: !12880, inlinedAt: !13956)
!13956 = distinct !DILocation(line: 48, column: 10, scope: !12884, inlinedAt: !13957)
!13957 = distinct !DILocation(line: 1595, column: 10, scope: !13954)
!13958 = !DILocation(line: 0, scope: !12880, inlinedAt: !13956)
!13959 = !DILocation(line: 48, column: 9, scope: !12884, inlinedAt: !13957)
!13960 = !DILocation(line: 1595, column: 27, scope: !13954)
!13961 = !DILocation(line: 1595, column: 41, scope: !13954)
!13962 = !DILocation(line: 1595, column: 30, scope: !13954)
!13963 = !DILocation(line: 1595, column: 2, scope: !13954)
!13964 = distinct !DISubprogram(name: "z_thread_abort", scope: !2138, file: !2138, line: 1725, type: !12194, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !13965)
!13965 = !{!13966, !13967}
!13966 = !DILocalVariable(name: "thread", arg: 1, scope: !13964, file: !2138, line: 1725, type: !2033)
!13967 = !DILocalVariable(name: "key", scope: !13964, file: !2138, line: 1727, type: !12228)
!13968 = !DILocation(line: 0, scope: !13964)
!13969 = !DILocation(line: 0, scope: !12236, inlinedAt: !13970)
!13970 = distinct !DILocation(line: 1727, column: 25, scope: !13964)
!13971 = !DILocation(line: 55, column: 2, scope: !12245, inlinedAt: !13972)
!13972 = distinct !DILocation(line: 145, column: 10, scope: !12236, inlinedAt: !13970)
!13973 = !DILocation(line: 0, scope: !12245, inlinedAt: !13972)
!13974 = !DILocation(line: 1729, column: 20, scope: !13975)
!13975 = distinct !DILexicalBlock(scope: !13964, file: !2138, line: 1729, column: 6)
!13976 = !DILocation(line: 1729, column: 33, scope: !13975)
!13977 = !DILocation(line: 1729, column: 48, scope: !13975)
!13978 = !DILocation(line: 1729, column: 6, scope: !13964)
!13979 = !DILocation(line: 0, scope: !12263, inlinedAt: !13980)
!13980 = distinct !DILocation(line: 1730, column: 3, scope: !13981)
!13981 = distinct !DILexicalBlock(scope: !13975, file: !2138, line: 1729, column: 54)
!13982 = !DILocation(line: 0, scope: !12271, inlinedAt: !13983)
!13983 = distinct !DILocation(line: 215, column: 2, scope: !12263, inlinedAt: !13980)
!13984 = !DILocation(line: 95, column: 2, scope: !12271, inlinedAt: !13983)
!13985 = !DILocation(line: 1732, column: 3, scope: !13986)
!13986 = distinct !DILexicalBlock(scope: !13981, file: !2138, line: 1732, column: 3)
!13987 = !{i64 2155621319, i64 2155621335, i64 2155621361, i64 2155621389, i64 2155621409}
!13988 = !DILocation(line: 1733, column: 3, scope: !13981)
!13989 = !DILocation(line: 1736, column: 20, scope: !13990)
!13990 = distinct !DILexicalBlock(scope: !13964, file: !2138, line: 1736, column: 6)
!13991 = !DILocation(line: 1736, column: 33, scope: !13990)
!13992 = !DILocation(line: 1736, column: 49, scope: !13990)
!13993 = !DILocation(line: 1736, column: 6, scope: !13964)
!13994 = !DILocation(line: 0, scope: !12263, inlinedAt: !13995)
!13995 = distinct !DILocation(line: 1737, column: 3, scope: !13996)
!13996 = distinct !DILexicalBlock(scope: !13990, file: !2138, line: 1736, column: 56)
!13997 = !DILocation(line: 0, scope: !12271, inlinedAt: !13998)
!13998 = distinct !DILocation(line: 215, column: 2, scope: !12263, inlinedAt: !13995)
!13999 = !DILocation(line: 95, column: 2, scope: !12271, inlinedAt: !13998)
!14000 = !DILocation(line: 1738, column: 3, scope: !13996)
!14001 = !DILocation(line: 1775, column: 2, scope: !13964)
!14002 = !DILocation(line: 1776, column: 16, scope: !14003)
!14003 = distinct !DILexicalBlock(scope: !13964, file: !2138, line: 1776, column: 6)
!14004 = !DILocation(line: 1776, column: 13, scope: !14003)
!14005 = !DILocation(line: 1776, column: 25, scope: !14003)
!14006 = !DILocation(line: 1031, column: 3, scope: !12880, inlinedAt: !14007)
!14007 = distinct !DILocation(line: 48, column: 10, scope: !12884, inlinedAt: !14008)
!14008 = distinct !DILocation(line: 1776, column: 29, scope: !14003)
!14009 = !DILocation(line: 0, scope: !12880, inlinedAt: !14007)
!14010 = !DILocation(line: 48, column: 9, scope: !12884, inlinedAt: !14008)
!14011 = !DILocation(line: 1776, column: 6, scope: !13964)
!14012 = !DILocation(line: 0, scope: !12847, inlinedAt: !14013)
!14013 = distinct !DILocation(line: 1777, column: 3, scope: !14014)
!14014 = distinct !DILexicalBlock(scope: !14003, file: !2138, line: 1776, column: 47)
!14015 = !DILocation(line: 196, column: 9, scope: !12847, inlinedAt: !14013)
!14016 = !DILocation(line: 1779, column: 2, scope: !14014)
!14017 = !DILocation(line: 0, scope: !12263, inlinedAt: !14018)
!14018 = distinct !DILocation(line: 1780, column: 2, scope: !13964)
!14019 = !DILocation(line: 0, scope: !12271, inlinedAt: !14020)
!14020 = distinct !DILocation(line: 215, column: 2, scope: !12263, inlinedAt: !14018)
!14021 = !DILocation(line: 95, column: 2, scope: !12271, inlinedAt: !14020)
!14022 = !DILocation(line: 1781, column: 1, scope: !13964)
!14023 = distinct !DISubprogram(name: "end_thread", scope: !2138, file: !2138, line: 1690, type: !12194, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !14024)
!14024 = !{!14025}
!14025 = !DILocalVariable(name: "thread", arg: 1, scope: !14023, file: !2138, line: 1690, type: !2033)
!14026 = !DILocation(line: 0, scope: !14023)
!14027 = !DILocation(line: 1695, column: 20, scope: !14028)
!14028 = distinct !DILexicalBlock(scope: !14023, file: !2138, line: 1695, column: 6)
!14029 = !DILocation(line: 1695, column: 33, scope: !14028)
!14030 = !DILocation(line: 1695, column: 49, scope: !14028)
!14031 = !DILocation(line: 1695, column: 6, scope: !14023)
!14032 = !DILocation(line: 1697, column: 29, scope: !14033)
!14033 = distinct !DILexicalBlock(scope: !14028, file: !2138, line: 1695, column: 56)
!14034 = !DILocation(line: 1698, column: 7, scope: !14035)
!14035 = distinct !DILexicalBlock(scope: !14033, file: !2138, line: 1698, column: 7)
!14036 = !DILocation(line: 1698, column: 7, scope: !14033)
!14037 = !DILocation(line: 0, scope: !12405, inlinedAt: !14038)
!14038 = distinct !DILocation(line: 1699, column: 4, scope: !14039)
!14039 = distinct !DILexicalBlock(scope: !14035, file: !2138, line: 1698, column: 35)
!14040 = !DILocation(line: 266, column: 28, scope: !12405, inlinedAt: !14038)
!14041 = !DILocation(line: 0, scope: !12413, inlinedAt: !14042)
!14042 = distinct !DILocation(line: 268, column: 3, scope: !12417, inlinedAt: !14038)
!14043 = !DILocation(line: 234, column: 2, scope: !12413, inlinedAt: !14042)
!14044 = !DILocation(line: 1700, column: 3, scope: !14039)
!14045 = !DILocation(line: 1701, column: 20, scope: !14046)
!14046 = distinct !DILexicalBlock(scope: !14033, file: !2138, line: 1701, column: 7)
!14047 = !DILocation(line: 1701, column: 30, scope: !14046)
!14048 = !DILocation(line: 1701, column: 7, scope: !14033)
!14049 = !DILocation(line: 1702, column: 4, scope: !14050)
!14050 = distinct !DILexicalBlock(scope: !14046, file: !2138, line: 1701, column: 39)
!14051 = !DILocation(line: 1703, column: 3, scope: !14050)
!14052 = !DILocation(line: 1704, column: 9, scope: !14033)
!14053 = !DILocation(line: 1705, column: 23, scope: !14033)
!14054 = !DILocation(line: 1705, column: 3, scope: !14033)
!14055 = !DILocation(line: 1706, column: 3, scope: !14033)
!14056 = !DILocation(line: 1722, column: 2, scope: !14033)
!14057 = !DILocation(line: 1723, column: 1, scope: !14023)
!14058 = distinct !DISubprogram(name: "unpend_all", scope: !2138, file: !2138, line: 1674, type: !14059, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !14061)
!14059 = !DISubroutineType(types: !14060)
!14060 = !{null, !2064}
!14061 = !{!14062, !14063}
!14062 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14058, file: !2138, line: 1674, type: !2064)
!14063 = !DILocalVariable(name: "thread", scope: !14058, file: !2138, line: 1676, type: !2033)
!14064 = !DILocation(line: 0, scope: !14058)
!14065 = !DILocation(line: 1678, column: 19, scope: !14058)
!14066 = !DILocation(line: 1678, column: 41, scope: !14058)
!14067 = !DILocation(line: 1678, column: 2, scope: !14058)
!14068 = !DILocation(line: 1679, column: 3, scope: !14069)
!14069 = distinct !DILexicalBlock(scope: !14058, file: !2138, line: 1678, column: 50)
!14070 = !DILocation(line: 1680, column: 9, scope: !14069)
!14071 = !DILocalVariable(name: "thread", arg: 1, scope: !14072, file: !11528, line: 65, type: !2033)
!14072 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !11528, file: !11528, line: 65, type: !14073, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !14075)
!14073 = !DISubroutineType(types: !14074)
!14074 = !{null, !2033, !32}
!14075 = !{!14071, !14076}
!14076 = !DILocalVariable(name: "value", arg: 2, scope: !14072, file: !11528, line: 65, type: !32)
!14077 = !DILocation(line: 0, scope: !14072, inlinedAt: !14078)
!14078 = distinct !DILocation(line: 1681, column: 3, scope: !14069)
!14079 = !DILocation(line: 67, column: 15, scope: !14072, inlinedAt: !14078)
!14080 = !DILocation(line: 67, column: 33, scope: !14072, inlinedAt: !14078)
!14081 = !DILocation(line: 1682, column: 3, scope: !14069)
!14082 = distinct !{!14082, !14067, !14083}
!14083 = !DILocation(line: 1683, column: 2, scope: !14058)
!14084 = !DILocation(line: 1684, column: 1, scope: !14058)
!14085 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2138, file: !2138, line: 1794, type: !14086, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !14088)
!14086 = !DISubroutineType(types: !14087)
!14087 = !{!103, !2033, !13027}
!14088 = !{!14089, !14090, !14091, !14092}
!14089 = !DILocalVariable(name: "thread", arg: 1, scope: !14085, file: !2138, line: 1794, type: !2033)
!14090 = !DILocalVariable(name: "timeout", arg: 2, scope: !14085, file: !2138, line: 1794, type: !13027)
!14091 = !DILocalVariable(name: "key", scope: !14085, file: !2138, line: 1796, type: !12228)
!14092 = !DILocalVariable(name: "ret", scope: !14085, file: !2138, line: 1797, type: !103)
!14093 = !DILocation(line: 0, scope: !14085)
!14094 = !DILocation(line: 0, scope: !12236, inlinedAt: !14095)
!14095 = distinct !DILocation(line: 1796, column: 25, scope: !14085)
!14096 = !DILocation(line: 55, column: 2, scope: !12245, inlinedAt: !14097)
!14097 = distinct !DILocation(line: 145, column: 10, scope: !12236, inlinedAt: !14095)
!14098 = !DILocation(line: 0, scope: !12245, inlinedAt: !14097)
!14099 = !DILocation(line: 1801, column: 20, scope: !14100)
!14100 = distinct !DILexicalBlock(scope: !14085, file: !2138, line: 1801, column: 6)
!14101 = !DILocation(line: 1801, column: 33, scope: !14100)
!14102 = !DILocation(line: 1801, column: 49, scope: !14100)
!14103 = !DILocation(line: 1801, column: 6, scope: !14085)
!14104 = !DILocation(line: 1803, column: 13, scope: !14105)
!14105 = distinct !DILexicalBlock(scope: !14100, file: !2138, line: 1803, column: 13)
!14106 = !DILocation(line: 1803, column: 13, scope: !14100)
!14107 = !DILocation(line: 1805, column: 24, scope: !14108)
!14108 = distinct !DILexicalBlock(scope: !14105, file: !2138, line: 1805, column: 13)
!14109 = !DILocation(line: 1805, column: 21, scope: !14108)
!14110 = !DILocation(line: 1805, column: 34, scope: !14108)
!14111 = !DILocation(line: 1806, column: 20, scope: !14108)
!14112 = !DILocation(line: 1806, column: 44, scope: !14108)
!14113 = !DILocation(line: 1806, column: 30, scope: !14108)
!14114 = !DILocation(line: 1805, column: 13, scope: !14105)
!14115 = !DILocation(line: 1810, column: 42, scope: !14116)
!14116 = distinct !DILexicalBlock(scope: !14108, file: !2138, line: 1808, column: 9)
!14117 = !DILocation(line: 1810, column: 3, scope: !14116)
!14118 = !DILocation(line: 1811, column: 22, scope: !14116)
!14119 = !DILocation(line: 1811, column: 3, scope: !14116)
!14120 = !DILocation(line: 0, scope: !12847, inlinedAt: !14121)
!14121 = distinct !DILocation(line: 1814, column: 9, scope: !14116)
!14122 = !DILocation(line: 196, column: 9, scope: !12847, inlinedAt: !14121)
!14123 = !DILocation(line: 1817, column: 3, scope: !14116)
!14124 = !DILocation(line: 0, scope: !14100)
!14125 = !DILocation(line: 0, scope: !12263, inlinedAt: !14126)
!14126 = distinct !DILocation(line: 1822, column: 2, scope: !14085)
!14127 = !DILocation(line: 0, scope: !12271, inlinedAt: !14128)
!14128 = distinct !DILocation(line: 215, column: 2, scope: !12263, inlinedAt: !14126)
!14129 = !DILocation(line: 95, column: 2, scope: !12271, inlinedAt: !14128)
!14130 = !DILocation(line: 1823, column: 2, scope: !14085)
!14131 = !DILocation(line: 1824, column: 1, scope: !14085)
!14132 = distinct !DISubprogram(name: "z_sched_wake", scope: !2138, file: !2138, line: 1882, type: !14133, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !14135)
!14133 = !DISubroutineType(types: !14134)
!14134 = !{!157, !2064, !103, !102}
!14135 = !{!14136, !14137, !14138, !14139, !14140, !14141, !14143}
!14136 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14132, file: !2138, line: 1882, type: !2064)
!14137 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !14132, file: !2138, line: 1882, type: !103)
!14138 = !DILocalVariable(name: "swap_data", arg: 3, scope: !14132, file: !2138, line: 1882, type: !102)
!14139 = !DILocalVariable(name: "thread", scope: !14132, file: !2138, line: 1884, type: !2033)
!14140 = !DILocalVariable(name: "ret", scope: !14132, file: !2138, line: 1885, type: !157)
!14141 = !DILocalVariable(name: "__i", scope: !14142, file: !2138, line: 1887, type: !12228)
!14142 = distinct !DILexicalBlock(scope: !14132, file: !2138, line: 1887, column: 2)
!14143 = !DILocalVariable(name: "__key", scope: !14142, file: !2138, line: 1887, type: !12228)
!14144 = !DILocation(line: 0, scope: !14132)
!14145 = !DILocation(line: 0, scope: !14142)
!14146 = !DILocation(line: 0, scope: !12236, inlinedAt: !14147)
!14147 = distinct !DILocation(line: 1887, column: 2, scope: !14142)
!14148 = !DILocation(line: 55, column: 2, scope: !12245, inlinedAt: !14149)
!14149 = distinct !DILocation(line: 145, column: 10, scope: !12236, inlinedAt: !14147)
!14150 = !DILocation(line: 0, scope: !12245, inlinedAt: !14149)
!14151 = !DILocation(line: 1888, column: 12, scope: !14152)
!14152 = distinct !DILexicalBlock(scope: !14153, file: !2138, line: 1887, column: 26)
!14153 = distinct !DILexicalBlock(scope: !14142, file: !2138, line: 1887, column: 2)
!14154 = !DILocation(line: 1890, column: 14, scope: !14155)
!14155 = distinct !DILexicalBlock(scope: !14152, file: !2138, line: 1890, column: 7)
!14156 = !DILocation(line: 1890, column: 7, scope: !14152)
!14157 = !DILocalVariable(name: "thread", arg: 1, scope: !14158, file: !14159, line: 134, type: !2033)
!14158 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !14159, file: !14159, line: 134, type: !14160, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !14162)
!14159 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14160 = !DISubroutineType(types: !14161)
!14161 = !{null, !2033, !32, !102}
!14162 = !{!14157, !14163, !14164}
!14163 = !DILocalVariable(name: "value", arg: 2, scope: !14158, file: !14159, line: 135, type: !32)
!14164 = !DILocalVariable(name: "data", arg: 3, scope: !14158, file: !14159, line: 136, type: !102)
!14165 = !DILocation(line: 0, scope: !14158, inlinedAt: !14166)
!14166 = distinct !DILocation(line: 1891, column: 4, scope: !14167)
!14167 = distinct !DILexicalBlock(scope: !14155, file: !2138, line: 1890, column: 23)
!14168 = !DILocation(line: 0, scope: !14072, inlinedAt: !14169)
!14169 = distinct !DILocation(line: 138, column: 2, scope: !14158, inlinedAt: !14166)
!14170 = !DILocation(line: 67, column: 15, scope: !14072, inlinedAt: !14169)
!14171 = !DILocation(line: 67, column: 33, scope: !14072, inlinedAt: !14169)
!14172 = !DILocation(line: 139, column: 15, scope: !14158, inlinedAt: !14166)
!14173 = !DILocation(line: 139, column: 25, scope: !14158, inlinedAt: !14166)
!14174 = !DILocation(line: 1894, column: 4, scope: !14167)
!14175 = !DILocation(line: 1895, column: 10, scope: !14167)
!14176 = !DILocation(line: 1896, column: 4, scope: !14167)
!14177 = !DILocation(line: 1898, column: 3, scope: !14167)
!14178 = !DILocation(line: 0, scope: !12263, inlinedAt: !14179)
!14179 = distinct !DILocation(line: 1887, column: 2, scope: !14153)
!14180 = !DILocation(line: 0, scope: !12271, inlinedAt: !14181)
!14181 = distinct !DILocation(line: 215, column: 2, scope: !12263, inlinedAt: !14179)
!14182 = !DILocation(line: 95, column: 2, scope: !12271, inlinedAt: !14181)
!14183 = !DILocation(line: 1901, column: 2, scope: !14132)
!14184 = distinct !DISubprogram(name: "z_sched_wait", scope: !2138, file: !2138, line: 1904, type: !14185, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2030, retainedNodes: !14188)
!14185 = !DISubroutineType(types: !14186)
!14186 = !{!103, !12239, !12228, !2064, !13027, !14187}
!14187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!14188 = !{!14189, !14190, !14191, !14192, !14193, !14194}
!14189 = !DILocalVariable(name: "lock", arg: 1, scope: !14184, file: !2138, line: 1904, type: !12239)
!14190 = !DILocalVariable(name: "key", arg: 2, scope: !14184, file: !2138, line: 1904, type: !12228)
!14191 = !DILocalVariable(name: "wait_q", arg: 3, scope: !14184, file: !2138, line: 1905, type: !2064)
!14192 = !DILocalVariable(name: "timeout", arg: 4, scope: !14184, file: !2138, line: 1905, type: !13027)
!14193 = !DILocalVariable(name: "data", arg: 5, scope: !14184, file: !2138, line: 1905, type: !14187)
!14194 = !DILocalVariable(name: "ret", scope: !14184, file: !2138, line: 1907, type: !103)
!14195 = !DILocation(line: 0, scope: !14184)
!14196 = !DILocation(line: 1907, column: 12, scope: !14184)
!14197 = !DILocation(line: 1909, column: 11, scope: !14198)
!14198 = distinct !DILexicalBlock(scope: !14184, file: !2138, line: 1909, column: 6)
!14199 = !DILocation(line: 1909, column: 6, scope: !14184)
!14200 = !DILocation(line: 1910, column: 11, scope: !14201)
!14201 = distinct !DILexicalBlock(scope: !14198, file: !2138, line: 1909, column: 20)
!14202 = !DILocation(line: 1910, column: 26, scope: !14201)
!14203 = !DILocation(line: 1910, column: 9, scope: !14201)
!14204 = !DILocation(line: 1911, column: 2, scope: !14201)
!14205 = !DILocation(line: 1912, column: 2, scope: !14184)
!14206 = distinct !DISubprogram(name: "z_data_copy", scope: !14207, file: !14207, line: 22, type: !2928, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2911, retainedNodes: !322)
!14207 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14208 = !DILocation(line: 24, column: 2, scope: !14206)
!14209 = !DILocation(line: 27, column: 2, scope: !14206)
!14210 = !DILocation(line: 31, column: 2, scope: !14206)
!14211 = !DILocation(line: 71, column: 1, scope: !14206)
!14212 = distinct !DISubprogram(name: "z_add_timeout", scope: !2175, file: !2175, line: 88, type: !14213, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2145, retainedNodes: !14219)
!14213 = !DISubroutineType(types: !14214)
!14214 = !{null, !2148, !2167, !14215}
!14215 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1391, line: 67, baseType: !14216)
!14216 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1391, line: 65, size: 64, elements: !14217)
!14217 = !{!14218}
!14218 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14216, file: !1391, line: 66, baseType: !1390, size: 64)
!14219 = !{!14220, !14221, !14222, !14223, !14229, !14230, !14233, !14236}
!14220 = !DILocalVariable(name: "to", arg: 1, scope: !14212, file: !2175, line: 88, type: !2148)
!14221 = !DILocalVariable(name: "fn", arg: 2, scope: !14212, file: !2175, line: 88, type: !2167)
!14222 = !DILocalVariable(name: "timeout", arg: 3, scope: !14212, file: !2175, line: 89, type: !14215)
!14223 = !DILocalVariable(name: "__i", scope: !14224, file: !2175, line: 102, type: !14225)
!14224 = distinct !DILexicalBlock(scope: !14212, file: !2175, line: 102, column: 2)
!14225 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !321, line: 106, baseType: !14226)
!14226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !321, line: 32, size: 32, elements: !14227)
!14227 = !{!14228}
!14228 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14226, file: !321, line: 33, baseType: !103, size: 32)
!14229 = !DILocalVariable(name: "__key", scope: !14224, file: !2175, line: 102, type: !14225)
!14230 = !DILocalVariable(name: "t", scope: !14231, file: !2175, line: 103, type: !2148)
!14231 = distinct !DILexicalBlock(scope: !14232, file: !2175, line: 102, column: 24)
!14232 = distinct !DILexicalBlock(scope: !14224, file: !2175, line: 102, column: 2)
!14233 = !DILocalVariable(name: "ticks", scope: !14234, file: !2175, line: 107, type: !1390)
!14234 = distinct !DILexicalBlock(scope: !14235, file: !2175, line: 106, column: 39)
!14235 = distinct !DILexicalBlock(scope: !14231, file: !2175, line: 105, column: 7)
!14236 = !DILocalVariable(name: "next_time", scope: !14237, file: !2175, line: 137, type: !587)
!14237 = distinct !DILexicalBlock(scope: !14238, file: !2175, line: 127, column: 22)
!14238 = distinct !DILexicalBlock(scope: !14231, file: !2175, line: 127, column: 7)
!14239 = !DILocation(line: 0, scope: !14212)
!14240 = !DILocation(line: 91, column: 6, scope: !14241)
!14241 = distinct !DILexicalBlock(scope: !14212, file: !2175, line: 91, column: 6)
!14242 = !DILocation(line: 91, column: 6, scope: !14212)
!14243 = !DILocation(line: 100, column: 6, scope: !14212)
!14244 = !DILocation(line: 100, column: 9, scope: !14212)
!14245 = !DILocation(line: 0, scope: !14224)
!14246 = !DILocalVariable(name: "l", arg: 1, scope: !14247, file: !321, line: 136, type: !14250)
!14247 = distinct !DISubprogram(name: "k_spin_lock", scope: !321, file: !321, line: 136, type: !14248, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2145, retainedNodes: !14251)
!14248 = !DISubroutineType(types: !14249)
!14249 = !{!14225, !14250}
!14250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2176, size: 32)
!14251 = !{!14246, !14252}
!14252 = !DILocalVariable(name: "k", scope: !14247, file: !321, line: 139, type: !14225)
!14253 = !DILocation(line: 0, scope: !14247, inlinedAt: !14254)
!14254 = distinct !DILocation(line: 102, column: 2, scope: !14224)
!14255 = !DILocation(line: 55, column: 2, scope: !14256, inlinedAt: !14260)
!14256 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5324, file: !5324, line: 42, type: !5325, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2145, retainedNodes: !14257)
!14257 = !{!14258, !14259}
!14258 = !DILocalVariable(name: "key", scope: !14256, file: !5324, line: 44, type: !32)
!14259 = !DILocalVariable(name: "tmp", scope: !14256, file: !5324, line: 53, type: !32)
!14260 = distinct !DILocation(line: 145, column: 10, scope: !14247, inlinedAt: !14254)
!14261 = !{i64 2227893}
!14262 = !DILocation(line: 0, scope: !14256, inlinedAt: !14260)
!14263 = !DILocation(line: 106, column: 33, scope: !14235)
!14264 = !DILocation(line: 105, column: 7, scope: !14231)
!14265 = !DILocation(line: 107, column: 50, scope: !14234)
!14266 = !DILocation(line: 107, column: 48, scope: !14234)
!14267 = !DILocation(line: 0, scope: !14234)
!14268 = !DILocation(line: 109, column: 17, scope: !14234)
!14269 = !DILocation(line: 110, column: 3, scope: !14234)
!14270 = !DILocation(line: 111, column: 31, scope: !14271)
!14271 = distinct !DILexicalBlock(scope: !14235, file: !2175, line: 110, column: 10)
!14272 = !DILocation(line: 111, column: 37, scope: !14271)
!14273 = !DILocation(line: 111, column: 35, scope: !14271)
!14274 = !DILocation(line: 0, scope: !14235)
!14275 = !DILocation(line: 109, column: 8, scope: !14234)
!14276 = !DILocation(line: 109, column: 15, scope: !14234)
!14277 = !DILocation(line: 114, column: 12, scope: !14278)
!14278 = distinct !DILexicalBlock(scope: !14231, file: !2175, line: 114, column: 3)
!14279 = !DILocation(line: 0, scope: !14231)
!14280 = !DILocation(line: 114, column: 3, scope: !14278)
!14281 = !DILocation(line: 115, column: 24, scope: !14282)
!14282 = distinct !DILexicalBlock(scope: !14283, file: !2175, line: 115, column: 8)
!14283 = distinct !DILexicalBlock(scope: !14284, file: !2175, line: 114, column: 45)
!14284 = distinct !DILexicalBlock(scope: !14278, file: !2175, line: 114, column: 3)
!14285 = !DILocation(line: 115, column: 11, scope: !14282)
!14286 = !DILocation(line: 115, column: 18, scope: !14282)
!14287 = !DILocation(line: 115, column: 8, scope: !14283)
!14288 = !DILocation(line: 116, column: 15, scope: !14289)
!14289 = distinct !DILexicalBlock(scope: !14282, file: !2175, line: 115, column: 32)
!14290 = !DILocation(line: 117, column: 26, scope: !14289)
!14291 = !DILocation(line: 117, column: 37, scope: !14289)
!14292 = !DILocation(line: 117, column: 5, scope: !14289)
!14293 = !DILocation(line: 123, column: 7, scope: !14231)
!14294 = !DILocation(line: 120, column: 15, scope: !14283)
!14295 = !DILocation(line: 114, column: 36, scope: !14284)
!14296 = distinct !{!14296, !14280, !14297}
!14297 = !DILocation(line: 121, column: 3, scope: !14278)
!14298 = !DILocation(line: 124, column: 41, scope: !14299)
!14299 = distinct !DILexicalBlock(scope: !14300, file: !2175, line: 123, column: 18)
!14300 = distinct !DILexicalBlock(scope: !14231, file: !2175, line: 123, column: 7)
!14301 = !DILocation(line: 124, column: 4, scope: !14299)
!14302 = !DILocation(line: 125, column: 3, scope: !14299)
!14303 = !DILocation(line: 127, column: 13, scope: !14238)
!14304 = !DILocation(line: 127, column: 10, scope: !14238)
!14305 = !DILocation(line: 127, column: 7, scope: !14231)
!14306 = !DILocation(line: 137, column: 24, scope: !14237)
!14307 = !DILocation(line: 0, scope: !14237)
!14308 = !DILocation(line: 139, column: 18, scope: !14309)
!14309 = distinct !DILexicalBlock(scope: !14237, file: !2175, line: 139, column: 8)
!14310 = !DILocation(line: 139, column: 23, scope: !14309)
!14311 = !DILocation(line: 141, column: 5, scope: !14312)
!14312 = distinct !DILexicalBlock(scope: !14309, file: !2175, line: 140, column: 48)
!14313 = !DILocation(line: 142, column: 4, scope: !14312)
!14314 = !DILocalVariable(name: "key", arg: 2, scope: !14315, file: !321, line: 190, type: !14225)
!14315 = distinct !DISubprogram(name: "k_spin_unlock", scope: !321, file: !321, line: 189, type: !14316, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2145, retainedNodes: !14318)
!14316 = !DISubroutineType(types: !14317)
!14317 = !{null, !14250, !14225}
!14318 = !{!14319, !14314}
!14319 = !DILocalVariable(name: "l", arg: 1, scope: !14315, file: !321, line: 189, type: !14250)
!14320 = !DILocation(line: 0, scope: !14315, inlinedAt: !14321)
!14321 = distinct !DILocation(line: 102, column: 2, scope: !14232)
!14322 = !DILocalVariable(name: "key", arg: 1, scope: !14323, file: !5324, line: 84, type: !32)
!14323 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5324, file: !5324, line: 84, type: !5335, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2145, retainedNodes: !14324)
!14324 = !{!14322}
!14325 = !DILocation(line: 0, scope: !14323, inlinedAt: !14326)
!14326 = distinct !DILocation(line: 215, column: 2, scope: !14315, inlinedAt: !14321)
!14327 = !DILocation(line: 95, column: 2, scope: !14323, inlinedAt: !14326)
!14328 = !{i64 2228710}
!14329 = !DILocation(line: 148, column: 1, scope: !14212)
!14330 = distinct !DISubprogram(name: "elapsed", scope: !2175, file: !2175, line: 62, type: !14331, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2145, retainedNodes: !322)
!14331 = !DISubroutineType(types: !14332)
!14332 = !{!587}
!14333 = !DILocation(line: 64, column: 9, scope: !14330)
!14334 = !DILocation(line: 64, column: 28, scope: !14330)
!14335 = !DILocation(line: 64, column: 35, scope: !14330)
!14336 = !DILocation(line: 64, column: 2, scope: !14330)
!14337 = distinct !DISubprogram(name: "first", scope: !2175, file: !2175, line: 39, type: !14338, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2145, retainedNodes: !14340)
!14338 = !DISubroutineType(types: !14339)
!14339 = !{!2148}
!14340 = !{!14341}
!14341 = !DILocalVariable(name: "t", scope: !14337, file: !2175, line: 41, type: !14342)
!14342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2152, size: 32)
!14343 = !DILocation(line: 41, column: 19, scope: !14337)
!14344 = !DILocation(line: 0, scope: !14337)
!14345 = !DILocation(line: 43, column: 9, scope: !14337)
!14346 = !DILocation(line: 43, column: 2, scope: !14337)
!14347 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !221, file: !221, line: 443, type: !14348, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2145, retainedNodes: !14350)
!14348 = !DISubroutineType(types: !14349)
!14349 = !{null, !14342, !14342}
!14350 = !{!14351, !14352, !14353}
!14351 = !DILocalVariable(name: "successor", arg: 1, scope: !14347, file: !221, line: 443, type: !14342)
!14352 = !DILocalVariable(name: "node", arg: 2, scope: !14347, file: !221, line: 443, type: !14342)
!14353 = !DILocalVariable(name: "prev", scope: !14347, file: !221, line: 445, type: !14354)
!14354 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14342)
!14355 = !DILocation(line: 0, scope: !14347)
!14356 = !DILocation(line: 445, column: 39, scope: !14347)
!14357 = !DILocation(line: 447, column: 8, scope: !14347)
!14358 = !DILocation(line: 447, column: 13, scope: !14347)
!14359 = !DILocation(line: 448, column: 8, scope: !14347)
!14360 = !DILocation(line: 448, column: 13, scope: !14347)
!14361 = !DILocation(line: 449, column: 8, scope: !14347)
!14362 = !DILocation(line: 449, column: 13, scope: !14347)
!14363 = !DILocation(line: 450, column: 18, scope: !14347)
!14364 = !DILocation(line: 451, column: 1, scope: !14347)
!14365 = distinct !DISubprogram(name: "next", scope: !2175, file: !2175, line: 46, type: !14366, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2145, retainedNodes: !14368)
!14366 = !DISubroutineType(types: !14367)
!14367 = !{!2148, !2148}
!14368 = !{!14369, !14370}
!14369 = !DILocalVariable(name: "t", arg: 1, scope: !14365, file: !2175, line: 46, type: !2148)
!14370 = !DILocalVariable(name: "n", scope: !14365, file: !2175, line: 48, type: !14342)
!14371 = !DILocation(line: 0, scope: !14365)
!14372 = !DILocation(line: 48, column: 58, scope: !14365)
!14373 = !DILocation(line: 48, column: 19, scope: !14365)
!14374 = !DILocation(line: 50, column: 9, scope: !14365)
!14375 = !DILocation(line: 50, column: 2, scope: !14365)
!14376 = distinct !DISubprogram(name: "sys_dlist_append", scope: !221, file: !221, line: 404, type: !14377, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2145, retainedNodes: !14380)
!14377 = !DISubroutineType(types: !14378)
!14378 = !{null, !14379, !14342}
!14379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2181, size: 32)
!14380 = !{!14381, !14382, !14383}
!14381 = !DILocalVariable(name: "list", arg: 1, scope: !14376, file: !221, line: 404, type: !14379)
!14382 = !DILocalVariable(name: "node", arg: 2, scope: !14376, file: !221, line: 404, type: !14342)
!14383 = !DILocalVariable(name: "tail", scope: !14376, file: !221, line: 406, type: !14354)
!14384 = !DILocation(line: 0, scope: !14376)
!14385 = !DILocation(line: 406, column: 34, scope: !14376)
!14386 = !DILocation(line: 408, column: 8, scope: !14376)
!14387 = !DILocation(line: 408, column: 13, scope: !14376)
!14388 = !DILocation(line: 409, column: 8, scope: !14376)
!14389 = !DILocation(line: 409, column: 13, scope: !14376)
!14390 = !DILocation(line: 411, column: 8, scope: !14376)
!14391 = !DILocation(line: 411, column: 13, scope: !14376)
!14392 = !DILocation(line: 412, column: 13, scope: !14376)
!14393 = !DILocation(line: 413, column: 1, scope: !14376)
!14394 = distinct !DISubprogram(name: "next_timeout", scope: !2175, file: !2175, line: 67, type: !14331, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2145, retainedNodes: !14395)
!14395 = !{!14396, !14397, !14398}
!14396 = !DILocalVariable(name: "to", scope: !14394, file: !2175, line: 69, type: !2148)
!14397 = !DILocalVariable(name: "ticks_elapsed", scope: !14394, file: !2175, line: 70, type: !587)
!14398 = !DILocalVariable(name: "ret", scope: !14394, file: !2175, line: 71, type: !587)
!14399 = !DILocation(line: 69, column: 24, scope: !14394)
!14400 = !DILocation(line: 0, scope: !14394)
!14401 = !DILocation(line: 70, column: 26, scope: !14394)
!14402 = !DILocation(line: 73, column: 10, scope: !14403)
!14403 = distinct !DILexicalBlock(scope: !14394, file: !2175, line: 73, column: 6)
!14404 = !DILocation(line: 73, column: 19, scope: !14403)
!14405 = !DILocation(line: 74, column: 21, scope: !14403)
!14406 = !DILocation(line: 74, column: 30, scope: !14403)
!14407 = !DILocation(line: 74, column: 28, scope: !14403)
!14408 = !DILocation(line: 74, column: 45, scope: !14403)
!14409 = !DILocation(line: 73, column: 6, scope: !14394)
!14410 = !DILocation(line: 77, column: 9, scope: !14411)
!14411 = distinct !DILexicalBlock(scope: !14403, file: !2175, line: 76, column: 9)
!14412 = !DILocation(line: 0, scope: !14403)
!14413 = !DILocation(line: 81, column: 20, scope: !14414)
!14414 = distinct !DILexicalBlock(scope: !14394, file: !2175, line: 81, column: 6)
!14415 = !DILocation(line: 81, column: 6, scope: !14414)
!14416 = !DILocation(line: 81, column: 32, scope: !14414)
!14417 = !DILocation(line: 85, column: 2, scope: !14394)
!14418 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !221, file: !221, line: 341, type: !14419, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2145, retainedNodes: !14421)
!14419 = !DISubroutineType(types: !14420)
!14420 = !{!14342, !14379, !14342}
!14421 = !{!14422, !14423}
!14422 = !DILocalVariable(name: "list", arg: 1, scope: !14418, file: !221, line: 341, type: !14379)
!14423 = !DILocalVariable(name: "node", arg: 2, scope: !14418, file: !221, line: 342, type: !14342)
!14424 = !DILocation(line: 0, scope: !14418)
!14425 = !DILocation(line: 344, column: 15, scope: !14418)
!14426 = !DILocation(line: 344, column: 9, scope: !14418)
!14427 = !DILocation(line: 344, column: 26, scope: !14418)
!14428 = !DILocation(line: 344, column: 2, scope: !14418)
!14429 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !221, file: !221, line: 325, type: !14419, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2145, retainedNodes: !14430)
!14430 = !{!14431, !14432}
!14431 = !DILocalVariable(name: "list", arg: 1, scope: !14429, file: !221, line: 325, type: !14379)
!14432 = !DILocalVariable(name: "node", arg: 2, scope: !14429, file: !221, line: 326, type: !14342)
!14433 = !DILocation(line: 0, scope: !14429)
!14434 = !DILocation(line: 328, column: 24, scope: !14429)
!14435 = !DILocation(line: 328, column: 15, scope: !14429)
!14436 = !DILocation(line: 328, column: 9, scope: !14429)
!14437 = !DILocation(line: 328, column: 45, scope: !14429)
!14438 = !DILocation(line: 328, column: 2, scope: !14429)
!14439 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !221, file: !221, line: 294, type: !14440, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2145, retainedNodes: !14442)
!14440 = !DISubroutineType(types: !14441)
!14441 = !{!14342, !14379}
!14442 = !{!14443}
!14443 = !DILocalVariable(name: "list", arg: 1, scope: !14439, file: !221, line: 294, type: !14379)
!14444 = !DILocation(line: 0, scope: !14439)
!14445 = !DILocation(line: 296, column: 9, scope: !14439)
!14446 = !DILocation(line: 296, column: 2, scope: !14439)
!14447 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !221, file: !221, line: 266, type: !14448, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2145, retainedNodes: !14450)
!14448 = !DISubroutineType(types: !14449)
!14449 = !{!157, !14379}
!14450 = !{!14451}
!14451 = !DILocalVariable(name: "list", arg: 1, scope: !14447, file: !221, line: 266, type: !14379)
!14452 = !DILocation(line: 0, scope: !14447)
!14453 = !DILocation(line: 268, column: 15, scope: !14447)
!14454 = !DILocation(line: 268, column: 20, scope: !14447)
!14455 = !DILocation(line: 268, column: 2, scope: !14447)
!14456 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2175, file: !2175, line: 150, type: !14457, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2145, retainedNodes: !14459)
!14457 = !DISubroutineType(types: !14458)
!14458 = !{!103, !2148}
!14459 = !{!14460, !14461, !14462, !14464}
!14460 = !DILocalVariable(name: "to", arg: 1, scope: !14456, file: !2175, line: 150, type: !2148)
!14461 = !DILocalVariable(name: "ret", scope: !14456, file: !2175, line: 152, type: !103)
!14462 = !DILocalVariable(name: "__i", scope: !14463, file: !2175, line: 154, type: !14225)
!14463 = distinct !DILexicalBlock(scope: !14456, file: !2175, line: 154, column: 2)
!14464 = !DILocalVariable(name: "__key", scope: !14463, file: !2175, line: 154, type: !14225)
!14465 = !DILocation(line: 0, scope: !14456)
!14466 = !DILocation(line: 0, scope: !14463)
!14467 = !DILocation(line: 0, scope: !14247, inlinedAt: !14468)
!14468 = distinct !DILocation(line: 154, column: 2, scope: !14463)
!14469 = !DILocation(line: 55, column: 2, scope: !14256, inlinedAt: !14470)
!14470 = distinct !DILocation(line: 145, column: 10, scope: !14247, inlinedAt: !14468)
!14471 = !DILocation(line: 0, scope: !14256, inlinedAt: !14470)
!14472 = !DILocation(line: 155, column: 7, scope: !14473)
!14473 = distinct !DILexicalBlock(scope: !14474, file: !2175, line: 155, column: 7)
!14474 = distinct !DILexicalBlock(scope: !14475, file: !2175, line: 154, column: 24)
!14475 = distinct !DILexicalBlock(scope: !14463, file: !2175, line: 154, column: 2)
!14476 = !DILocation(line: 155, column: 7, scope: !14474)
!14477 = !DILocation(line: 156, column: 4, scope: !14478)
!14478 = distinct !DILexicalBlock(scope: !14473, file: !2175, line: 155, column: 39)
!14479 = !DILocation(line: 158, column: 3, scope: !14478)
!14480 = !DILocation(line: 0, scope: !14315, inlinedAt: !14481)
!14481 = distinct !DILocation(line: 154, column: 2, scope: !14475)
!14482 = !DILocation(line: 0, scope: !14323, inlinedAt: !14483)
!14483 = distinct !DILocation(line: 215, column: 2, scope: !14315, inlinedAt: !14481)
!14484 = !DILocation(line: 95, column: 2, scope: !14323, inlinedAt: !14483)
!14485 = !DILocation(line: 161, column: 2, scope: !14456)
!14486 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !221, file: !221, line: 225, type: !14487, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2145, retainedNodes: !14491)
!14487 = !DISubroutineType(types: !14488)
!14488 = !{!157, !14489}
!14489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14490, size: 32)
!14490 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2152)
!14491 = !{!14492}
!14492 = !DILocalVariable(name: "node", arg: 1, scope: !14486, file: !221, line: 225, type: !14489)
!14493 = !DILocation(line: 0, scope: !14486)
!14494 = !DILocation(line: 227, column: 15, scope: !14486)
!14495 = !DILocation(line: 227, column: 20, scope: !14486)
!14496 = !DILocation(line: 227, column: 2, scope: !14486)
!14497 = distinct !DISubprogram(name: "remove_timeout", scope: !2175, file: !2175, line: 53, type: !2169, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2145, retainedNodes: !14498)
!14498 = !{!14499}
!14499 = !DILocalVariable(name: "t", arg: 1, scope: !14497, file: !2175, line: 53, type: !2148)
!14500 = !DILocation(line: 0, scope: !14497)
!14501 = !DILocation(line: 55, column: 6, scope: !14502)
!14502 = distinct !DILexicalBlock(scope: !14497, file: !2175, line: 55, column: 6)
!14503 = !DILocation(line: 55, column: 14, scope: !14502)
!14504 = !DILocation(line: 55, column: 6, scope: !14497)
!14505 = !DILocation(line: 56, column: 25, scope: !14506)
!14506 = distinct !DILexicalBlock(scope: !14502, file: !2175, line: 55, column: 23)
!14507 = !DILocation(line: 56, column: 12, scope: !14506)
!14508 = !DILocation(line: 56, column: 19, scope: !14506)
!14509 = !DILocation(line: 57, column: 2, scope: !14506)
!14510 = !DILocation(line: 59, column: 23, scope: !14497)
!14511 = !DILocation(line: 59, column: 2, scope: !14497)
!14512 = !DILocation(line: 60, column: 1, scope: !14497)
!14513 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !221, file: !221, line: 496, type: !14514, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2145, retainedNodes: !14516)
!14514 = !DISubroutineType(types: !14515)
!14515 = !{null, !14342}
!14516 = !{!14517, !14518, !14519}
!14517 = !DILocalVariable(name: "node", arg: 1, scope: !14513, file: !221, line: 496, type: !14342)
!14518 = !DILocalVariable(name: "prev", scope: !14513, file: !221, line: 498, type: !14354)
!14519 = !DILocalVariable(name: "next", scope: !14513, file: !221, line: 499, type: !14354)
!14520 = !DILocation(line: 0, scope: !14513)
!14521 = !DILocation(line: 498, column: 34, scope: !14513)
!14522 = !DILocation(line: 499, column: 34, scope: !14513)
!14523 = !DILocation(line: 501, column: 8, scope: !14513)
!14524 = !DILocation(line: 501, column: 13, scope: !14513)
!14525 = !DILocation(line: 502, column: 8, scope: !14513)
!14526 = !DILocation(line: 502, column: 13, scope: !14513)
!14527 = !DILocation(line: 503, column: 2, scope: !14513)
!14528 = !DILocation(line: 504, column: 1, scope: !14513)
!14529 = distinct !DISubprogram(name: "sys_dnode_init", scope: !221, file: !221, line: 211, type: !14514, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2145, retainedNodes: !14530)
!14530 = !{!14531}
!14531 = !DILocalVariable(name: "node", arg: 1, scope: !14529, file: !221, line: 211, type: !14342)
!14532 = !DILocation(line: 0, scope: !14529)
!14533 = !DILocation(line: 213, column: 8, scope: !14529)
!14534 = !DILocation(line: 213, column: 13, scope: !14529)
!14535 = !DILocation(line: 214, column: 8, scope: !14529)
!14536 = !DILocation(line: 214, column: 13, scope: !14529)
!14537 = !DILocation(line: 215, column: 1, scope: !14529)
!14538 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2175, file: !2175, line: 183, type: !14539, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2145, retainedNodes: !14543)
!14539 = !DISubroutineType(types: !14540)
!14540 = !{!1390, !14541}
!14541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14542, size: 32)
!14542 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2149)
!14543 = !{!14544, !14545, !14546, !14548}
!14544 = !DILocalVariable(name: "timeout", arg: 1, scope: !14538, file: !2175, line: 183, type: !14541)
!14545 = !DILocalVariable(name: "ticks", scope: !14538, file: !2175, line: 185, type: !1390)
!14546 = !DILocalVariable(name: "__i", scope: !14547, file: !2175, line: 187, type: !14225)
!14547 = distinct !DILexicalBlock(scope: !14538, file: !2175, line: 187, column: 2)
!14548 = !DILocalVariable(name: "__key", scope: !14547, file: !2175, line: 187, type: !14225)
!14549 = !DILocation(line: 0, scope: !14538)
!14550 = !DILocation(line: 0, scope: !14547)
!14551 = !DILocation(line: 0, scope: !14247, inlinedAt: !14552)
!14552 = distinct !DILocation(line: 187, column: 2, scope: !14547)
!14553 = !DILocation(line: 55, column: 2, scope: !14256, inlinedAt: !14554)
!14554 = distinct !DILocation(line: 145, column: 10, scope: !14247, inlinedAt: !14552)
!14555 = !DILocation(line: 0, scope: !14256, inlinedAt: !14554)
!14556 = !DILocation(line: 188, column: 11, scope: !14557)
!14557 = distinct !DILexicalBlock(scope: !14558, file: !2175, line: 187, column: 24)
!14558 = distinct !DILexicalBlock(scope: !14547, file: !2175, line: 187, column: 2)
!14559 = !DILocation(line: 0, scope: !14315, inlinedAt: !14560)
!14560 = distinct !DILocation(line: 187, column: 2, scope: !14558)
!14561 = !DILocation(line: 0, scope: !14323, inlinedAt: !14562)
!14562 = distinct !DILocation(line: 215, column: 2, scope: !14315, inlinedAt: !14560)
!14563 = !DILocation(line: 95, column: 2, scope: !14323, inlinedAt: !14562)
!14564 = !DILocation(line: 191, column: 2, scope: !14538)
!14565 = distinct !DISubprogram(name: "timeout_rem", scope: !2175, file: !2175, line: 165, type: !14539, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2145, retainedNodes: !14566)
!14566 = !{!14567, !14568, !14569}
!14567 = !DILocalVariable(name: "timeout", arg: 1, scope: !14565, file: !2175, line: 165, type: !14541)
!14568 = !DILocalVariable(name: "ticks", scope: !14565, file: !2175, line: 167, type: !1390)
!14569 = !DILocalVariable(name: "t", scope: !14570, file: !2175, line: 173, type: !2148)
!14570 = distinct !DILexicalBlock(scope: !14565, file: !2175, line: 173, column: 2)
!14571 = !DILocation(line: 0, scope: !14565)
!14572 = !DILocation(line: 169, column: 6, scope: !14573)
!14573 = distinct !DILexicalBlock(scope: !14565, file: !2175, line: 169, column: 6)
!14574 = !DILocation(line: 169, column: 6, scope: !14565)
!14575 = !DILocation(line: 173, column: 28, scope: !14570)
!14576 = !DILocation(line: 0, scope: !14570)
!14577 = !DILocation(line: 173, column: 39, scope: !14578)
!14578 = distinct !DILexicalBlock(scope: !14570, file: !2175, line: 173, column: 2)
!14579 = !DILocation(line: 173, column: 2, scope: !14570)
!14580 = !DILocation(line: 174, column: 15, scope: !14581)
!14581 = distinct !DILexicalBlock(scope: !14578, file: !2175, line: 173, column: 61)
!14582 = !DILocation(line: 174, column: 9, scope: !14581)
!14583 = !DILocation(line: 175, column: 15, scope: !14584)
!14584 = distinct !DILexicalBlock(scope: !14581, file: !2175, line: 175, column: 7)
!14585 = !DILocation(line: 175, column: 7, scope: !14581)
!14586 = !DILocation(line: 173, column: 52, scope: !14578)
!14587 = distinct !{!14587, !14579, !14588}
!14588 = !DILocation(line: 178, column: 2, scope: !14570)
!14589 = !DILocation(line: 180, column: 17, scope: !14565)
!14590 = !DILocation(line: 180, column: 15, scope: !14565)
!14591 = !DILocation(line: 180, column: 2, scope: !14565)
!14592 = !DILocation(line: 181, column: 1, scope: !14565)
!14593 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !11902, file: !11902, line: 35, type: !14594, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2145, retainedNodes: !14596)
!14594 = !DISubroutineType(types: !14595)
!14595 = !{!157, !14541}
!14596 = !{!14597}
!14597 = !DILocalVariable(name: "to", arg: 1, scope: !14593, file: !11902, line: 35, type: !14541)
!14598 = !DILocation(line: 0, scope: !14593)
!14599 = !DILocation(line: 37, column: 35, scope: !14593)
!14600 = !DILocation(line: 37, column: 10, scope: !14593)
!14601 = !DILocation(line: 37, column: 9, scope: !14593)
!14602 = !DILocation(line: 37, column: 2, scope: !14593)
!14603 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2175, file: !2175, line: 194, type: !14539, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2145, retainedNodes: !14604)
!14604 = !{!14605, !14606, !14607, !14609}
!14605 = !DILocalVariable(name: "timeout", arg: 1, scope: !14603, file: !2175, line: 194, type: !14541)
!14606 = !DILocalVariable(name: "ticks", scope: !14603, file: !2175, line: 196, type: !1390)
!14607 = !DILocalVariable(name: "__i", scope: !14608, file: !2175, line: 198, type: !14225)
!14608 = distinct !DILexicalBlock(scope: !14603, file: !2175, line: 198, column: 2)
!14609 = !DILocalVariable(name: "__key", scope: !14608, file: !2175, line: 198, type: !14225)
!14610 = !DILocation(line: 0, scope: !14603)
!14611 = !DILocation(line: 0, scope: !14608)
!14612 = !DILocation(line: 0, scope: !14247, inlinedAt: !14613)
!14613 = distinct !DILocation(line: 198, column: 2, scope: !14608)
!14614 = !DILocation(line: 55, column: 2, scope: !14256, inlinedAt: !14615)
!14615 = distinct !DILocation(line: 145, column: 10, scope: !14247, inlinedAt: !14613)
!14616 = !DILocation(line: 0, scope: !14256, inlinedAt: !14615)
!14617 = !DILocation(line: 199, column: 11, scope: !14618)
!14618 = distinct !DILexicalBlock(scope: !14619, file: !2175, line: 198, column: 24)
!14619 = distinct !DILexicalBlock(scope: !14608, file: !2175, line: 198, column: 2)
!14620 = !DILocation(line: 199, column: 23, scope: !14618)
!14621 = !DILocation(line: 0, scope: !14315, inlinedAt: !14622)
!14622 = distinct !DILocation(line: 198, column: 2, scope: !14619)
!14623 = !DILocation(line: 0, scope: !14323, inlinedAt: !14624)
!14624 = distinct !DILocation(line: 215, column: 2, scope: !14315, inlinedAt: !14622)
!14625 = !DILocation(line: 95, column: 2, scope: !14323, inlinedAt: !14624)
!14626 = !DILocation(line: 199, column: 21, scope: !14618)
!14627 = !DILocation(line: 202, column: 2, scope: !14603)
!14628 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2175, file: !2175, line: 205, type: !14331, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2145, retainedNodes: !14629)
!14629 = !{!14630, !14631, !14633}
!14630 = !DILocalVariable(name: "ret", scope: !14628, file: !2175, line: 207, type: !587)
!14631 = !DILocalVariable(name: "__i", scope: !14632, file: !2175, line: 209, type: !14225)
!14632 = distinct !DILexicalBlock(scope: !14628, file: !2175, line: 209, column: 2)
!14633 = !DILocalVariable(name: "__key", scope: !14632, file: !2175, line: 209, type: !14225)
!14634 = !DILocation(line: 0, scope: !14628)
!14635 = !DILocation(line: 0, scope: !14632)
!14636 = !DILocation(line: 0, scope: !14247, inlinedAt: !14637)
!14637 = distinct !DILocation(line: 209, column: 2, scope: !14632)
!14638 = !DILocation(line: 55, column: 2, scope: !14256, inlinedAt: !14639)
!14639 = distinct !DILocation(line: 145, column: 10, scope: !14247, inlinedAt: !14637)
!14640 = !DILocation(line: 0, scope: !14256, inlinedAt: !14639)
!14641 = !DILocation(line: 210, column: 9, scope: !14642)
!14642 = distinct !DILexicalBlock(scope: !14643, file: !2175, line: 209, column: 24)
!14643 = distinct !DILexicalBlock(scope: !14632, file: !2175, line: 209, column: 2)
!14644 = !DILocation(line: 0, scope: !14315, inlinedAt: !14645)
!14645 = distinct !DILocation(line: 209, column: 2, scope: !14643)
!14646 = !DILocation(line: 0, scope: !14323, inlinedAt: !14647)
!14647 = distinct !DILocation(line: 215, column: 2, scope: !14315, inlinedAt: !14645)
!14648 = !DILocation(line: 95, column: 2, scope: !14323, inlinedAt: !14647)
!14649 = !DILocation(line: 212, column: 2, scope: !14628)
!14650 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2175, file: !2175, line: 215, type: !9522, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2145, retainedNodes: !14651)
!14651 = !{!14652, !14653, !14654, !14656, !14657, !14660, !14661}
!14652 = !DILocalVariable(name: "ticks", arg: 1, scope: !14650, file: !2175, line: 215, type: !587)
!14653 = !DILocalVariable(name: "is_idle", arg: 2, scope: !14650, file: !2175, line: 215, type: !157)
!14654 = !DILocalVariable(name: "__i", scope: !14655, file: !2175, line: 217, type: !14225)
!14655 = distinct !DILexicalBlock(scope: !14650, file: !2175, line: 217, column: 2)
!14656 = !DILocalVariable(name: "__key", scope: !14655, file: !2175, line: 217, type: !14225)
!14657 = !DILocalVariable(name: "next_to", scope: !14658, file: !2175, line: 218, type: !103)
!14658 = distinct !DILexicalBlock(scope: !14659, file: !2175, line: 217, column: 24)
!14659 = distinct !DILexicalBlock(scope: !14655, file: !2175, line: 217, column: 2)
!14660 = !DILocalVariable(name: "sooner", scope: !14658, file: !2175, line: 219, type: !157)
!14661 = !DILocalVariable(name: "imminent", scope: !14658, file: !2175, line: 221, type: !157)
!14662 = !DILocation(line: 0, scope: !14650)
!14663 = !DILocation(line: 0, scope: !14655)
!14664 = !DILocation(line: 0, scope: !14247, inlinedAt: !14665)
!14665 = distinct !DILocation(line: 217, column: 2, scope: !14655)
!14666 = !DILocation(line: 55, column: 2, scope: !14256, inlinedAt: !14667)
!14667 = distinct !DILocation(line: 145, column: 10, scope: !14247, inlinedAt: !14665)
!14668 = !DILocation(line: 0, scope: !14256, inlinedAt: !14667)
!14669 = !DILocation(line: 218, column: 17, scope: !14658)
!14670 = !DILocation(line: 0, scope: !14658)
!14671 = !DILocation(line: 221, column: 27, scope: !14658)
!14672 = !DILocation(line: 233, column: 17, scope: !14673)
!14673 = distinct !DILexicalBlock(scope: !14658, file: !2175, line: 233, column: 7)
!14674 = !DILocation(line: 234, column: 26, scope: !14675)
!14675 = distinct !DILexicalBlock(scope: !14673, file: !2175, line: 233, column: 56)
!14676 = !DILocation(line: 234, column: 4, scope: !14675)
!14677 = !DILocation(line: 235, column: 3, scope: !14675)
!14678 = !DILocation(line: 0, scope: !14315, inlinedAt: !14679)
!14679 = distinct !DILocation(line: 217, column: 2, scope: !14659)
!14680 = !DILocation(line: 0, scope: !14323, inlinedAt: !14681)
!14681 = distinct !DILocation(line: 215, column: 2, scope: !14315, inlinedAt: !14679)
!14682 = !DILocation(line: 95, column: 2, scope: !14323, inlinedAt: !14681)
!14683 = !DILocation(line: 237, column: 1, scope: !14650)
!14684 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2175, file: !2175, line: 239, type: !14685, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2145, retainedNodes: !14687)
!14685 = !DISubroutineType(types: !14686)
!14686 = !{null, !587}
!14687 = !{!14688, !14689, !14690, !14692}
!14688 = !DILocalVariable(name: "ticks", arg: 1, scope: !14684, file: !2175, line: 239, type: !587)
!14689 = !DILocalVariable(name: "key", scope: !14684, file: !2175, line: 245, type: !14225)
!14690 = !DILocalVariable(name: "t", scope: !14691, file: !2175, line: 262, type: !2148)
!14691 = distinct !DILexicalBlock(scope: !14684, file: !2175, line: 261, column: 67)
!14692 = !DILocalVariable(name: "dt", scope: !14691, file: !2175, line: 263, type: !103)
!14693 = !DILocation(line: 0, scope: !14684)
!14694 = !DILocation(line: 242, column: 2, scope: !14684)
!14695 = !DILocation(line: 0, scope: !14247, inlinedAt: !14696)
!14696 = distinct !DILocation(line: 245, column: 25, scope: !14684)
!14697 = !DILocation(line: 55, column: 2, scope: !14256, inlinedAt: !14698)
!14698 = distinct !DILocation(line: 145, column: 10, scope: !14247, inlinedAt: !14696)
!14699 = !DILocation(line: 0, scope: !14256, inlinedAt: !14698)
!14700 = !DILocation(line: 261, column: 9, scope: !14684)
!14701 = !DILocation(line: 261, column: 17, scope: !14684)
!14702 = !DILocation(line: 261, column: 25, scope: !14684)
!14703 = !DILocation(line: 261, column: 37, scope: !14684)
!14704 = !DILocation(line: 261, column: 47, scope: !14684)
!14705 = !DILocation(line: 261, column: 44, scope: !14684)
!14706 = !DILocation(line: 261, column: 2, scope: !14684)
!14707 = !DILocation(line: 0, scope: !14691)
!14708 = !DILocation(line: 263, column: 12, scope: !14691)
!14709 = !DILocation(line: 265, column: 16, scope: !14691)
!14710 = !DILocation(line: 265, column: 13, scope: !14691)
!14711 = !DILocation(line: 266, column: 13, scope: !14691)
!14712 = !DILocation(line: 267, column: 3, scope: !14691)
!14713 = !DILocation(line: 0, scope: !14315, inlinedAt: !14714)
!14714 = distinct !DILocation(line: 269, column: 3, scope: !14691)
!14715 = !DILocation(line: 0, scope: !14323, inlinedAt: !14716)
!14716 = distinct !DILocation(line: 215, column: 2, scope: !14315, inlinedAt: !14714)
!14717 = !DILocation(line: 95, column: 2, scope: !14323, inlinedAt: !14716)
!14718 = !DILocation(line: 270, column: 6, scope: !14691)
!14719 = !DILocation(line: 270, column: 3, scope: !14691)
!14720 = !DILocation(line: 0, scope: !14247, inlinedAt: !14721)
!14721 = distinct !DILocation(line: 271, column: 9, scope: !14691)
!14722 = !DILocation(line: 55, column: 2, scope: !14256, inlinedAt: !14723)
!14723 = distinct !DILocation(line: 145, column: 10, scope: !14247, inlinedAt: !14721)
!14724 = !DILocation(line: 0, scope: !14256, inlinedAt: !14723)
!14725 = !DILocation(line: 272, column: 22, scope: !14691)
!14726 = distinct !{!14726, !14706, !14727}
!14727 = !DILocation(line: 273, column: 2, scope: !14684)
!14728 = !DILocation(line: 276, column: 19, scope: !14729)
!14729 = distinct !DILexicalBlock(scope: !14730, file: !2175, line: 275, column: 23)
!14730 = distinct !DILexicalBlock(scope: !14684, file: !2175, line: 275, column: 6)
!14731 = !DILocation(line: 277, column: 2, scope: !14729)
!14732 = !DILocation(line: 279, column: 15, scope: !14684)
!14733 = !DILocation(line: 279, column: 12, scope: !14684)
!14734 = !DILocation(line: 280, column: 21, scope: !14684)
!14735 = !DILocation(line: 282, column: 24, scope: !14684)
!14736 = !DILocation(line: 282, column: 2, scope: !14684)
!14737 = !DILocation(line: 0, scope: !14315, inlinedAt: !14738)
!14738 = distinct !DILocation(line: 284, column: 2, scope: !14684)
!14739 = !DILocation(line: 0, scope: !14323, inlinedAt: !14740)
!14740 = distinct !DILocation(line: 215, column: 2, scope: !14315, inlinedAt: !14738)
!14741 = !DILocation(line: 95, column: 2, scope: !14323, inlinedAt: !14740)
!14742 = !DILocation(line: 285, column: 1, scope: !14684)
!14743 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2175, file: !2175, line: 287, type: !14744, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2145, retainedNodes: !14746)
!14744 = !DISubroutineType(types: !14745)
!14745 = !{!280}
!14746 = !{!14747, !14748, !14750}
!14747 = !DILocalVariable(name: "t", scope: !14743, file: !2175, line: 289, type: !1302)
!14748 = !DILocalVariable(name: "__i", scope: !14749, file: !2175, line: 291, type: !14225)
!14749 = distinct !DILexicalBlock(scope: !14743, file: !2175, line: 291, column: 2)
!14750 = !DILocalVariable(name: "__key", scope: !14749, file: !2175, line: 291, type: !14225)
!14751 = !DILocation(line: 0, scope: !14743)
!14752 = !DILocation(line: 0, scope: !14749)
!14753 = !DILocation(line: 0, scope: !14247, inlinedAt: !14754)
!14754 = distinct !DILocation(line: 291, column: 2, scope: !14749)
!14755 = !DILocation(line: 55, column: 2, scope: !14256, inlinedAt: !14756)
!14756 = distinct !DILocation(line: 145, column: 10, scope: !14247, inlinedAt: !14754)
!14757 = !DILocation(line: 0, scope: !14256, inlinedAt: !14756)
!14758 = !DILocation(line: 292, column: 7, scope: !14759)
!14759 = distinct !DILexicalBlock(scope: !14760, file: !2175, line: 291, column: 24)
!14760 = distinct !DILexicalBlock(scope: !14749, file: !2175, line: 291, column: 2)
!14761 = !DILocation(line: 292, column: 19, scope: !14759)
!14762 = !DILocation(line: 0, scope: !14315, inlinedAt: !14763)
!14763 = distinct !DILocation(line: 291, column: 2, scope: !14760)
!14764 = !DILocation(line: 0, scope: !14323, inlinedAt: !14765)
!14765 = distinct !DILocation(line: 215, column: 2, scope: !14315, inlinedAt: !14763)
!14766 = !DILocation(line: 95, column: 2, scope: !14323, inlinedAt: !14765)
!14767 = !DILocation(line: 292, column: 17, scope: !14759)
!14768 = !DILocation(line: 294, column: 2, scope: !14743)
!14769 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2175, file: !2175, line: 297, type: !5579, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2145, retainedNodes: !322)
!14770 = !DILocation(line: 300, column: 19, scope: !14769)
!14771 = !DILocation(line: 300, column: 9, scope: !14769)
!14772 = !DILocation(line: 300, column: 2, scope: !14769)
!14773 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2175, file: !2175, line: 306, type: !14744, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2145, retainedNodes: !322)
!14774 = !DILocation(line: 308, column: 9, scope: !14773)
!14775 = !DILocation(line: 308, column: 2, scope: !14773)
!14776 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2175, file: !2175, line: 319, type: !5589, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2145, retainedNodes: !14777)
!14777 = !{!14778, !14779, !14780, !14781}
!14778 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !14776, file: !2175, line: 319, type: !121)
!14779 = !DILocalVariable(name: "start_cycles", scope: !14776, file: !2175, line: 328, type: !121)
!14780 = !DILocalVariable(name: "cycles_to_wait", scope: !14776, file: !2175, line: 331, type: !121)
!14781 = !DILocalVariable(name: "current_cycles", scope: !14782, file: !2175, line: 338, type: !121)
!14782 = distinct !DILexicalBlock(scope: !14783, file: !2175, line: 337, column: 11)
!14783 = distinct !DILexicalBlock(scope: !14784, file: !2175, line: 337, column: 2)
!14784 = distinct !DILexicalBlock(scope: !14776, file: !2175, line: 337, column: 2)
!14785 = !DILocation(line: 0, scope: !14776)
!14786 = !DILocation(line: 322, column: 19, scope: !14787)
!14787 = distinct !DILexicalBlock(scope: !14776, file: !2175, line: 322, column: 6)
!14788 = !DILocation(line: 322, column: 6, scope: !14776)
!14789 = !DILocation(line: 328, column: 26, scope: !14776)
!14790 = !DILocation(line: 333, column: 43, scope: !14776)
!14791 = !DILocation(line: 337, column: 2, scope: !14776)
!14792 = !DILocation(line: 338, column: 29, scope: !14782)
!14793 = !DILocation(line: 0, scope: !14782)
!14794 = !DILocation(line: 341, column: 23, scope: !14795)
!14795 = distinct !DILexicalBlock(scope: !14782, file: !2175, line: 341, column: 7)
!14796 = !DILocation(line: 341, column: 39, scope: !14795)
!14797 = !DILocation(line: 349, column: 1, scope: !14776)
!14798 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !307, file: !307, line: 1675, type: !5579, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2145, retainedNodes: !322)
!14799 = !DILocation(line: 1677, column: 9, scope: !14798)
!14800 = !DILocation(line: 1677, column: 2, scope: !14798)
!14801 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !14802, file: !14802, line: 24, type: !5579, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2145, retainedNodes: !322)
!14802 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14803 = !DILocation(line: 26, column: 9, scope: !14801)
!14804 = !DILocation(line: 26, column: 2, scope: !14801)
!14805 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2175, file: !2175, line: 364, type: !14806, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2145, retainedNodes: !14808)
!14806 = !DISubroutineType(types: !14807)
!14807 = !{!1302, !14215}
!14808 = !{!14809, !14810}
!14809 = !DILocalVariable(name: "timeout", arg: 1, scope: !14805, file: !2175, line: 364, type: !14215)
!14810 = !DILocalVariable(name: "dt", scope: !14805, file: !2175, line: 366, type: !1390)
!14811 = !DILocation(line: 0, scope: !14805)
!14812 = !DILocation(line: 368, column: 6, scope: !14805)
!14813 = !DILocation(line: 371, column: 10, scope: !14814)
!14814 = distinct !DILexicalBlock(scope: !14815, file: !2175, line: 370, column: 47)
!14815 = distinct !DILexicalBlock(scope: !14816, file: !2175, line: 370, column: 13)
!14816 = distinct !DILexicalBlock(scope: !14805, file: !2175, line: 368, column: 6)
!14817 = !DILocation(line: 371, column: 3, scope: !14814)
!14818 = !DILocation(line: 376, column: 58, scope: !14819)
!14819 = distinct !DILexicalBlock(scope: !14820, file: !2175, line: 376, column: 7)
!14820 = distinct !DILexicalBlock(scope: !14815, file: !2175, line: 372, column: 9)
!14821 = !DILocation(line: 376, column: 7, scope: !14820)
!14822 = !DILocation(line: 376, column: 43, scope: !14819)
!14823 = !DILocation(line: 377, column: 4, scope: !14824)
!14824 = distinct !DILexicalBlock(scope: !14819, file: !2175, line: 376, column: 64)
!14825 = !DILocation(line: 379, column: 10, scope: !14820)
!14826 = !DILocation(line: 379, column: 33, scope: !14820)
!14827 = !DILocation(line: 379, column: 31, scope: !14820)
!14828 = !DILocation(line: 379, column: 3, scope: !14820)
!14829 = !DILocation(line: 0, scope: !14816)
!14830 = !DILocation(line: 381, column: 1, scope: !14805)
!14831 = distinct !DISubprogram(name: "boot_banner", scope: !14832, file: !14832, line: 26, type: !2928, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2914, retainedNodes: !322)
!14832 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14833 = !DILocation(line: 34, column: 2, scope: !14831)
!14834 = !DILocation(line: 36, column: 1, scope: !14831)
