; ModuleID = 'build/adafruit_feather_stm32f405/subsys/zbus/benchmark/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.zbus_observer = type { i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }
%struct.k_msgq = type { %struct._wait_q_t, %struct.k_spinlock, i32, i32, i8*, i8*, i8*, i8*, i32, i8 }
%struct._wait_q_t = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.k_spinlock = type {}
%struct.zbus_channel = type { i16, i8*, i8*, i1 (i8*, i32)*, %struct.k_mutex*, %struct.zbus_observer** }
%struct.k_mutex = type { %struct._wait_q_t, %struct.k_thread*, i32, i32 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %struct._wait_q_t, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %struct._wait_q_t, %struct._wait_q_t*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %struct._wait_q_t, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, [0 x %struct.z_heap_bucket] }
%struct.z_heap_bucket = type { i32 }
%struct._thread_arch = type { i32, i32 }
%struct.external_data_msg = type { i8*, i32 }
%struct.z_thread_stack_element = type { i8 }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.log_source_const_data = type { i8*, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.z_heap_bucket }
%struct.arm_mpu_region = type { i32, i8*, %struct.z_heap_bucket }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.z_heap_bucket, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.z_heap_bucket, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.bm_msg = type { [256 x i8] }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.z_heap_bucket, %struct.z_heap_bucket }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %struct._wait_q_t }
%struct._sflist = type { %struct.z_heap_bucket*, %struct.z_heap_bucket* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [82 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [82 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233376 to i8*), void (i8*)* inttoptr (i32 134231209 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233376 to i8*), void (i8*)* inttoptr (i32 134231189 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233376 to i8*), void (i8*)* inttoptr (i32 134231179 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233376 to i8*), void (i8*)* inttoptr (i32 134231279 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233376 to i8*), void (i8*)* inttoptr (i32 134231269 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233376 to i8*), void (i8*)* inttoptr (i32 134231259 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233376 to i8*), void (i8*)* inttoptr (i32 134231249 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233376 to i8*), void (i8*)* inttoptr (i32 134231239 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233376 to i8*), void (i8*)* inttoptr (i32 134231229 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233376 to i8*), void (i8*)* inttoptr (i32 134231219 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233376 to i8*), void (i8*)* inttoptr (i32 134231199 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [57 x i8*] [i8* bitcast (%struct._static_thread_data* @_k_thread_data_producer_thread_id to i8*), i8* bitcast (%struct.k_mutex* @_zbus_mutex_bm_channel to i8*), i8* bitcast (%struct.zbus_channel* @bm_channel to i8*), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @s1, i32 0, i32 0), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @s2, i32 0, i32 0), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @s3, i32 0, i32 0), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @s4, i32 0, i32 0), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @s5, i32 0, i32 0), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @s6, i32 0, i32 0), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @s7, i32 0, i32 0), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @s8, i32 0, i32 0), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_zbus to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_37 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_67 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_68 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_69 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_70 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_71 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_72 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_73 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_74 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_21 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_67 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_68 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_69 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_70 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_71 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_72 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_73 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_74 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*), i8* bitcast (%struct.k_heap* @_system_heap to i8*), i8* bitcast (%struct.init_entry* @__init_statics_init_pre to i8*)], section "llvm.metadata"
@_zbus_mutex_bm_channel = internal global %struct.k_mutex { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_bm_channel, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_bm_channel, i32 0, i32 0, i32 0) } } }, %struct.k_thread* null, i32 0, i32 14 }, section "._k_mutex.static._zbus_mutex_bm_channel", align 4, !dbg !25
@_zbus_message_bm_channel = internal global %struct.external_data_msg zeroinitializer, align 4, !dbg !350
@_zbus_observers_bm_channel = internal constant [9 x %struct.zbus_observer*] [%struct.zbus_observer* @s1, %struct.zbus_observer* @s2, %struct.zbus_observer* @s3, %struct.zbus_observer* @s4, %struct.zbus_observer* @s5, %struct.zbus_observer* @s6, %struct.zbus_observer* @s7, %struct.zbus_observer* @s8, %struct.zbus_observer* null], align 4, !dbg !357
@bm_channel = dso_local constant %struct.zbus_channel { i16 8, i8* null, i8* bitcast (%struct.external_data_msg* @_zbus_message_bm_channel to i8*), i1 (i8*, i32)* null, %struct.k_mutex* @_zbus_mutex_bm_channel, %struct.zbus_observer** getelementptr inbounds ([9 x %struct.zbus_observer*], [9 x %struct.zbus_observer*]* @_zbus_observers_bm_channel, i32 0, i32 0) }, section "._zbus_channel.static.bm_channel", align 4, !dbg !112
@s1 = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @s_cb }, section "._zbus_observer.static.s1", align 4, !dbg !290
@s2 = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @s_cb }, section "._zbus_observer.static.s2", align 4, !dbg !292
@s3 = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @s_cb }, section "._zbus_observer.static.s3", align 4, !dbg !294
@s4 = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @s_cb }, section "._zbus_observer.static.s4", align 4, !dbg !296
@s5 = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @s_cb }, section "._zbus_observer.static.s5", align 4, !dbg !298
@s6 = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @s_cb }, section "._zbus_observer.static.s6", align 4, !dbg !300
@s7 = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @s_cb }, section "._zbus_observer.static.s7", align 4, !dbg !302
@s8 = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @s_cb }, section "._zbus_observer.static.s8", align 4, !dbg !304
@_k_thread_obj_producer_thread_id = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !348
@_k_thread_stack_producer_thread_id = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/benchmark.c\22.0", align 64, !dbg !343
@.str = private unnamed_addr constant [19 x i8] c"producer_thread_id\00", align 1
@_k_thread_data_producer_thread_id = dso_local global %struct._static_thread_data { %struct.k_thread* @_k_thread_obj_producer_thread_id, %struct.z_thread_stack_element* getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @_k_thread_stack_producer_thread_id, i32 0, i32 0), i32 1024, void (i8*, i8*, i8*)* bitcast (void ()* @producer_thread to void (i8*, i8*, i8*)*), i8* null, i8* null, i8* null, i32 5, i32 0, i32 0, void ()* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i32 0, i32 0) }, section ".__static_thread_data.static._k_thread_data_producer_thread_id", align 4, !dbg !306
@producer_thread_id = dso_local local_unnamed_addr constant %struct.k_thread* @_k_thread_obj_producer_thread_id, align 4, !dbg !339
@count = internal unnamed_addr global i64 0, align 8, !dbg !362
@.str.1 = private unnamed_addr constant [80 x i8] c"%c: Benchmark 1 to %d: Dynamic memory, %sSYNC transmission and message size %u\0A\00", align 1
@.str.2 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.3 = private unnamed_addr constant [41 x i8] c"%c: Something wrong. Duration is zero!\0A\0A\00", align 1
@.str.4 = private unnamed_addr constant [40 x i8] c"%c: Bytes sent = %lld, received = %llu\0A\00", align 1
@.str.5 = private unnamed_addr constant [37 x i8] c"%c: Average data rate: %llu.%lluB/s\0A\00", align 1
@.str.6 = private unnamed_addr constant [20 x i8] c"%c: Duration: %ums\0A\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"\0A@%u\0A\00", align 1
@.str.8 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !364
@.str.1.10 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !388
@.str.15 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !398
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !448
@.str.21 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.23 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.24 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.22 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.26 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.27 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.25 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.28 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.29 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.30 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.31 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.45 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.1.40 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.2.41 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.3.42 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.4.43 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.5.44 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.6.38 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.7.39 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.8.36 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.9 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.10 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.11 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.12 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.13 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.14 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.15.37 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.16 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.17 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.18 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.19 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.20 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.21.35 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.22 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.23 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.24 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.25 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.26 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.27 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.28.34 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.29 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.51 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.51, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !477
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.z_heap_bucket { i32 101384192 } }], align 4, !dbg !608
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !483
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !617
@.str.57 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.1.58 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !653
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.69, i32 0, i32 0), %struct.z_heap_bucket { i32 117571622 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.70, i32 0, i32 0), %struct.z_heap_bucket { i32 285933600 } }], align 4, !dbg !663
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !668
@.str.69 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.70 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@.str.71 = private unnamed_addr constant [5 x i8] c"zbus\00", align 1
@log_const_zbus = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.71, i32 0, i32 0), i8 3 }, section ".log_const_zbus", align 4, !dbg !688
@.str.1.73 = private unnamed_addr constant [60 x i8] c"%c: Observer %s at %p could not be notified. Error code %d\0A\00", align 1
@.str.2.74 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !700
@__devicehdl_dts_ord_37 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !893
@.str.81 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_37 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !855
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !838
@__device_dts_ord_37 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.81, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_37, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_37, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !811
@__init___device_dts_ord_37 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_37 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !827
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !857
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !870
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !872
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !874
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !876
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !878
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !880
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !882
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !884
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !886
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_37 to i8*) }, section ".intList", align 4, !dbg !888
@__devicehdl_dts_ord_9 = dso_local constant [13 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 32767], section ".__device_handles_pass2", align 2, !dbg !898
@.str.83 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !927
@__devstate_dts_ord_9 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1021
@__init___device_dts_ord_9 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_9 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !1010
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1062
@__devicehdl_dts_ord_74 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !920
@.str.92 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1128
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1414
@__devstate_dts_ord_74 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1380
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1366
@__init___device_dts_ord_74 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_74 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1305
@__devicehdl_dts_ord_67 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !918
@.str.1.93 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1416
@__devstate_dts_ord_67 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1384
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1382
@__init___device_dts_ord_67 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_67 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1322
@__devicehdl_dts_ord_21 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !916
@.str.2.94 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1429
@__devstate_dts_ord_21 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1388
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1386
@__init___device_dts_ord_21 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_21 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1328
@__devicehdl_dts_ord_68 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !914
@.str.3.95 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1431
@__devstate_dts_ord_68 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1392
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1390
@__init___device_dts_ord_68 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_68 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1334
@__devicehdl_dts_ord_69 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !912
@.str.4.96 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1433
@__devstate_dts_ord_69 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1396
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1394
@__init___device_dts_ord_69 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_69 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1340
@__devicehdl_dts_ord_70 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !910
@.str.5.97 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1435
@__devstate_dts_ord_70 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1400
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1398
@__init___device_dts_ord_70 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_70 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1346
@__devicehdl_dts_ord_71 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !908
@.str.6.98 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1437
@__devstate_dts_ord_71 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1404
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1402
@__init___device_dts_ord_71 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_71 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1352
@__devicehdl_dts_ord_72 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !906
@.str.7.99 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1439
@__devstate_dts_ord_72 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1408
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1406
@__init___device_dts_ord_72 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_72 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1358
@__devicehdl_dts_ord_73 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !904
@.str.8.100 = private unnamed_addr constant [14 x i8] c"gpio@40022000\00", align 1
@gpio_stm32_cfg_i = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073881088 to i32*), i32 8, %struct._thread_arch { i32 48, i32 256 } }, align 4, !dbg !1441
@__devstate_dts_ord_73 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1412
@gpio_stm32_data_i = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1410
@__init___device_dts_ord_73 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_73 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1364
@.str.104 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.104, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1443
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !922
@.str.1.107 = private unnamed_addr constant [16 x i8] c"serial@40004800\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073760256 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45 }, align 4, !dbg !1599
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1654
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1597
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1656
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.107, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1588
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1590
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 262144 }], align 4, !dbg !1643
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !1646
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1648
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 839, i32 512 }, %struct._thread_arch { i32 871, i32 0 }], align 4, !dbg !1651
@.str.2.109 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.3.112 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.4.114 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.5.115 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_9 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.83, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_9, i8* null, i16* getelementptr inbounds ([13 x i16], [13 x i16]* @__devicehdl_dts_ord_9, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !994
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.6 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1667
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1776
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1778
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1774
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1745
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_74, %struct.device* @__device_dts_ord_67, %struct.device* @__device_dts_ord_21, %struct.device* @__device_dts_ord_68, %struct.device* @__device_dts_ord_69, %struct.device* @__device_dts_ord_70, %struct.device* @__device_dts_ord_71, %struct.device* @__device_dts_ord_72, %struct.device* @__device_dts_ord_73, %struct.device* null, %struct.device* null], align 4, !dbg !1780
@__device_dts_ord_74 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.92, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_74, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_74, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1303
@__device_dts_ord_67 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.93, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_67, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_67, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1320
@__device_dts_ord_21 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.94, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_21, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_21, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1326
@__device_dts_ord_68 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.95, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_68, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_68, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1332
@__device_dts_ord_69 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.96, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_69, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_69, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1338
@__device_dts_ord_70 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.97, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_70, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_70, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1344
@__device_dts_ord_71 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.98, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_71, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_71, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1350
@__device_dts_ord_72 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.99, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_72, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_72, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1356
@__device_dts_ord_73 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8.100, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_i to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_73, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_i to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_73, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1362
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1870
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1910
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1913
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1920
@.str.150 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.154 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.155 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.156 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.160 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.5.161 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.6.162 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.7.163 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.8.164 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.9.159 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.10.158 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.160, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.161, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.162, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.163, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.164, i32 0, i32 0)], align 4
@.str.166 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.166, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !1927
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@__ccm_bss_start = external dso_local global [0 x i8], align 1
@__ccm_bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2147
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2136
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2142
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2154
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2159
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.1.175 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.180, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.181, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.182, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.183, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.184, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.185, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.179, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.186, i32 0, i32 0)], align 4, !dbg !2187
@.str.180 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.181 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.182 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.183 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.184 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.185 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.179 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.186 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2299
@.str.8.178 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@lock = internal global %struct.k_spinlock zeroinitializer, align 1, !dbg !2312
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2420
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2528
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2531
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2533
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2152
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2144
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@__ccm_data_start = external dso_local global [0 x i8], align 1
@__ccm_data_rom_start = external dso_local global [0 x i8], align 1
@__ccm_data_end = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2535
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2571
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2569
@kheap__system_heap = dso_local global [1024 x i8] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/mempool.c\22.kheap_buf__system_heap", align 8, !dbg !2574
@_system_heap = dso_local global %struct.k_heap { %struct.sys_heap { %struct.z_heap* null, i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @kheap__system_heap, i32 0, i32 0), i32 1024 }, %struct._wait_q_t zeroinitializer, %struct.k_spinlock zeroinitializer }, section "._k_heap.static._system_heap", align 4, !dbg !2579
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2014
@.str.287 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1
@__init_statics_init_pre = internal constant %struct.init_entry { i32 (%struct.device*)* @statics_init, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !2614
@_k_heap_list_start = external dso_local global [0 x %struct.k_heap], align 4
@_k_heap_list_end = external dso_local global [0 x %struct.k_heap], align 4

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3360 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #25, !dbg !3362, !srcloc !3363
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #25, !dbg !3364, !srcloc !3365
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #25, !dbg !3366, !srcloc !3367
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #25, !dbg !3368, !srcloc !3369
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3370, !srcloc !3371
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #25, !dbg !3372, !srcloc !3373
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #25, !dbg !3374, !srcloc !3375
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #25, !dbg !3376, !srcloc !3377
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #25, !dbg !3378, !srcloc !3379
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #25, !dbg !3380, !srcloc !3381
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #25, !dbg !3382, !srcloc !3383
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #25, !dbg !3384, !srcloc !3385
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #25, !dbg !3386, !srcloc !3387
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #25, !dbg !3388, !srcloc !3389
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #25, !dbg !3390, !srcloc !3391
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #25, !dbg !3392, !srcloc !3393
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #25, !dbg !3394, !srcloc !3395
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #25, !dbg !3396, !srcloc !3397
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3398, !srcloc !3399
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #25, !dbg !3400, !srcloc !3401
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #25, !dbg !3402, !srcloc !3403
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3404, !srcloc !3405
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #25, !dbg !3406, !srcloc !3407
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3408, !srcloc !3409
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #25, !dbg !3410, !srcloc !3411
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #25, !dbg !3412, !srcloc !3413
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #25, !dbg !3414, !srcloc !3415
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #25, !dbg !3416, !srcloc !3419
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #25, !dbg !3420, !srcloc !3421
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3422, !srcloc !3423
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3424, !srcloc !3425
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3426, !srcloc !3427
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3428, !srcloc !3429
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #25, !dbg !3430, !srcloc !3431
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #25, !dbg !3432, !srcloc !3433
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #25, !dbg !3434, !srcloc !3435
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #25, !dbg !3436, !srcloc !3437
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3438, !srcloc !3439
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3440, !srcloc !3441
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3442, !srcloc !3443
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3444, !srcloc !3445
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3446, !srcloc !3447
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3448, !srcloc !3449
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #25, !dbg !3450, !srcloc !3451
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #25, !dbg !3452, !srcloc !3453
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #25, !dbg !3454, !srcloc !3455
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #25, !dbg !3456, !srcloc !3457
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #25, !dbg !3458, !srcloc !3459
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #25, !dbg !3460, !srcloc !3461
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3462, !srcloc !3463
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #25, !dbg !3464, !srcloc !3465
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3466, !srcloc !3467
  ret void, !dbg !3468
}

; Function Attrs: noinline nounwind optsize
define internal void @s_cb(%struct.zbus_channel* nocapture noundef readonly %0) #1 !dbg !3471 {
  %2 = alloca [256 x i8], align 1
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !3473, metadata !DIExpression()), !dbg !3484
  %3 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %3) #25, !dbg !3485
  call void @llvm.dbg.declare(metadata %struct.bm_msg* undef, metadata !3474, metadata !DIExpression()), !dbg !3486
  %4 = tail call fastcc i8* @zbus_chan_const_msg(%struct.zbus_channel* noundef %0) #26, !dbg !3487
  call void @llvm.dbg.value(metadata i8* %4, metadata !3481, metadata !DIExpression()), !dbg !3484
  %5 = bitcast i8* %4 to i8**, !dbg !3488
  %6 = load i8*, i8** %5, align 4, !dbg !3488
  %7 = call i8* @memcpy(i8* noundef nonnull %3, i8* noundef %6, i32 noundef 256) #27, !dbg !3489
  %8 = load i64, i64* @count, align 8, !dbg !3490
  %9 = add i64 %8, 256, !dbg !3490
  store i64 %9, i64* @count, align 8, !dbg !3490
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %3) #25, !dbg !3491
  ret void, !dbg !3491
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i8* @zbus_chan_const_msg(%struct.zbus_channel* nocapture noundef readonly %0) unnamed_addr #4 !dbg !3492 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !3496, metadata !DIExpression()), !dbg !3497
  %2 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 2, !dbg !3498
  %3 = load i8*, i8** %2, align 4, !dbg !3498
  ret i8* %3, !dbg !3499
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: noinline nounwind optsize
define internal void @producer_thread() #1 !dbg !3500 {
  %1 = alloca %struct.bm_msg, align 1
  %2 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !3513
  %3 = zext i8 %2 to i32, !dbg !3513
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.1, i32 0, i32 0), i32 noundef %3, i32 noundef 8, i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i32 0, i32 0), i32 noundef 256) #27, !dbg !3513
  %4 = getelementptr inbounds %struct.bm_msg, %struct.bm_msg* %1, i32 0, i32 0, i32 0, !dbg !3518
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %4) #25, !dbg !3518
  call void @llvm.dbg.declare(metadata %struct.bm_msg* %1, metadata !3502, metadata !DIExpression()), !dbg !3519
  call void @llvm.dbg.value(metadata i64 255, metadata !3505, metadata !DIExpression()), !dbg !3520
  br label %10, !dbg !3521

5:                                                ; preds = %10
  %6 = tail call i32 @zbus_chan_claim(%struct.zbus_channel* noundef nonnull @bm_channel, [1 x i64] zeroinitializer) #27, !dbg !3522
  call void @llvm.dbg.value(metadata %struct.external_data_msg* @_zbus_message_bm_channel, metadata !3503, metadata !DIExpression()), !dbg !3523
  %7 = tail call i8* @k_malloc(i32 noundef 256) #27, !dbg !3524
  store i8* %7, i8** getelementptr inbounds (%struct.external_data_msg, %struct.external_data_msg* @_zbus_message_bm_channel, i32 0, i32 0), align 4, !dbg !3525
  store i32 256, i32* getelementptr inbounds (%struct.external_data_msg, %struct.external_data_msg* @_zbus_message_bm_channel, i32 0, i32 1), align 4, !dbg !3526
  %8 = tail call i32 @zbus_chan_finish(%struct.zbus_channel* noundef nonnull @bm_channel) #27, !dbg !3527
  %9 = tail call fastcc i32 @k_uptime_get_32() #26, !dbg !3528
  call void @llvm.dbg.value(metadata i32 %9, metadata !3507, metadata !DIExpression()), !dbg !3523
  call void @llvm.dbg.value(metadata i64 32768, metadata !3508, metadata !DIExpression()), !dbg !3529
  br label %21, !dbg !3530

10:                                               ; preds = %0, %10
  %11 = phi i64 [ 255, %0 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata i64 %11, metadata !3505, metadata !DIExpression()), !dbg !3520
  %12 = trunc i64 %11 to i8, !dbg !3531
  %13 = trunc i64 %11 to i32, !dbg !3534
  %14 = getelementptr inbounds %struct.bm_msg, %struct.bm_msg* %1, i32 0, i32 0, i32 %13, !dbg !3534
  store i8 %12, i8* %14, align 1, !dbg !3535
  %15 = add nsw i64 %11, -1, !dbg !3536
  call void @llvm.dbg.value(metadata i64 %15, metadata !3505, metadata !DIExpression()), !dbg !3520
  %16 = icmp eq i64 %15, 0, !dbg !3537
  br i1 %16, label %5, label %10, !dbg !3521, !llvm.loop !3538

17:                                               ; preds = %21
  %18 = call fastcc i32 @k_uptime_get_32() #26, !dbg !3540
  %19 = sub i32 %18, %9, !dbg !3541
  call void @llvm.dbg.value(metadata i32 %19, metadata !3510, metadata !DIExpression()), !dbg !3523
  %20 = icmp eq i32 %19, 0, !dbg !3542
  br i1 %20, label %32, label %35, !dbg !3544

21:                                               ; preds = %5, %21
  %22 = phi i64 [ 32768, %5 ], [ %30, %21 ]
  call void @llvm.dbg.value(metadata i64 %22, metadata !3508, metadata !DIExpression()), !dbg !3529
  %23 = call i32 @zbus_chan_claim(%struct.zbus_channel* noundef nonnull @bm_channel, [1 x i64] zeroinitializer) #27, !dbg !3545
  call void @llvm.dbg.value(metadata %struct.external_data_msg* @_zbus_message_bm_channel, metadata !3503, metadata !DIExpression()), !dbg !3523
  %24 = load i8*, i8** getelementptr inbounds (%struct.external_data_msg, %struct.external_data_msg* @_zbus_message_bm_channel, i32 0, i32 0), align 4, !dbg !3548
  %25 = call i8* @memcpy(i8* noundef %24, i8* noundef nonnull %4, i32 noundef 256) #27, !dbg !3549
  %26 = call i32 @zbus_chan_finish(%struct.zbus_channel* noundef nonnull @bm_channel) #27, !dbg !3550
  %27 = tail call fastcc i64 @k_ms_to_ticks_ceil64() #26, !dbg !3551
  %28 = insertvalue [1 x i64] poison, i64 %27, 0, !dbg !3552
  %29 = call i32 @zbus_chan_notify(%struct.zbus_channel* noundef nonnull @bm_channel, [1 x i64] %28) #27, !dbg !3552
  %30 = add nsw i64 %22, -256, !dbg !3553
  call void @llvm.dbg.value(metadata i64 %30, metadata !3508, metadata !DIExpression()), !dbg !3529
  %31 = icmp eq i64 %30, 0, !dbg !3554
  br i1 %31, label %17, label %21, !dbg !3530, !llvm.loop !3555

32:                                               ; preds = %17
  %33 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3557
  %34 = zext i8 %33 to i32, !dbg !3557
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.3, i32 0, i32 0), i32 noundef %34) #27, !dbg !3557
  call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 3, i32 2) #25, !dbg !3563, !srcloc !3565
  br label %35, !dbg !3566

35:                                               ; preds = %32, %17
  %36 = zext i32 %19 to i64, !dbg !3567
  %37 = udiv i32 262144000, %19, !dbg !3568
  %38 = zext i32 %37 to i64, !dbg !3568
  call void @llvm.dbg.value(metadata i64 %38, metadata !3511, metadata !DIExpression()), !dbg !3523
  %39 = udiv i64 26214400000, %36, !dbg !3569
  %40 = urem i64 %39, 100, !dbg !3570
  call void @llvm.dbg.value(metadata i64 %40, metadata !3512, metadata !DIExpression()), !dbg !3523
  %41 = load i64, i64* @count, align 8, !dbg !3571
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.4, i32 0, i32 0), i32 noundef %3, i64 noundef 262144, i64 noundef %41) #27, !dbg !3571
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.5, i32 0, i32 0), i32 noundef %3, i64 noundef %38, i64 noundef %40) #27, !dbg !3576
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i32 0, i32 0), i32 noundef %3, i32 noundef %19) #27, !dbg !3581
  call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i32 0, i32 0), i32 noundef %19) #27, !dbg !3586
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %4) #25, !dbg !3587
  ret void, !dbg !3587
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #5 !dbg !3588 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3593, metadata !DIExpression()), !dbg !3594
  %2 = add i32 %0, -1, !dbg !3595
  %3 = icmp ult i32 %2, 3, !dbg !3595
  %4 = trunc i32 %2 to i24, !dbg !3595
  %5 = shl i24 %4, 3, !dbg !3595
  %6 = lshr i24 4806469, %5, !dbg !3595
  %7 = trunc i24 %6 to i8, !dbg !3595
  %8 = select i1 %3, i8 %7, i8 63, !dbg !3595
  ret i8 %8, !dbg !3596
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_uptime_get_32() unnamed_addr #1 !dbg !3597 {
  %1 = tail call fastcc i64 @k_uptime_get() #26, !dbg !3600
  %2 = trunc i64 %1 to i32, !dbg !3601
  ret i32 %2, !dbg !3602
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64() unnamed_addr #5 !dbg !3603 {
  call void @llvm.dbg.value(metadata i64 200, metadata !3608, metadata !DIExpression()), !dbg !3609
  ret i64 2000, !dbg !3610
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @k_uptime_get() unnamed_addr #1 !dbg !3611 {
  %1 = tail call fastcc i64 @k_uptime_ticks() #26, !dbg !3614
  %2 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %1) #26, !dbg !3615
  ret i64 %2, !dbg !3616
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @k_uptime_ticks() unnamed_addr #1 !dbg !3617 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3619, !srcloc !3621
  %1 = tail call i64 @z_impl_k_uptime_ticks() #27, !dbg !3622
  ret i64 %1, !dbg !3623
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #5 !dbg !3624 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3626, metadata !DIExpression()), !dbg !3627
  call void @llvm.dbg.value(metadata i64 %0, metadata !3628, metadata !DIExpression()), !dbg !3645
  call void @llvm.dbg.value(metadata i32 10000, metadata !3633, metadata !DIExpression()), !dbg !3645
  call void @llvm.dbg.value(metadata i32 1000, metadata !3634, metadata !DIExpression()), !dbg !3645
  call void @llvm.dbg.value(metadata i8 1, metadata !3635, metadata !DIExpression()), !dbg !3645
  call void @llvm.dbg.value(metadata i8 0, metadata !3636, metadata !DIExpression()), !dbg !3645
  call void @llvm.dbg.value(metadata i1 false, metadata !3637, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3645
  call void @llvm.dbg.value(metadata i8 0, metadata !3638, metadata !DIExpression()), !dbg !3645
  call void @llvm.dbg.value(metadata i1 false, metadata !3639, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3645
  call void @llvm.dbg.value(metadata i1 true, metadata !3640, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3645
  call void @llvm.dbg.value(metadata i64 0, metadata !3641, metadata !DIExpression()), !dbg !3645
  call void @llvm.dbg.value(metadata i64 0, metadata !3641, metadata !DIExpression()), !dbg !3645
  call void @llvm.dbg.value(metadata !DIArgList(i64 %0, i64 0), metadata !3628, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3645
  call void @llvm.dbg.value(metadata i64 %0, metadata !3628, metadata !DIExpression()), !dbg !3645
  %2 = udiv i64 %0, 10, !dbg !3647
  ret i64 %2, !dbg !3652
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !3653 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3668, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i8* %0, metadata !3664, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i32 %1, metadata !3665, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i32 %2, metadata !3666, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i8* %3, metadata !3667, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i8* %0, metadata !3669, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i8* %0, metadata !3670, metadata !DIExpression()), !dbg !3731
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !3732
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #25, !dbg !3732
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !3673, metadata !DIExpression()), !dbg !3733
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !3734
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #25, !dbg !3734
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !3675, metadata !DIExpression()), !dbg !3735
  call void @llvm.dbg.value(metadata i32 0, metadata !3676, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i32 0, metadata !3677, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i32 0, metadata !3678, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i32 -1, metadata !3679, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i8 0, metadata !3682, metadata !DIExpression()), !dbg !3731
  %12 = and i32 %2, 4, !dbg !3736
  %13 = icmp eq i32 %12, 0, !dbg !3737
  call void @llvm.dbg.value(metadata i1 %13, metadata !3683, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3731
  %14 = lshr i32 %2, 3, !dbg !3738
  %15 = and i32 %14, 7, !dbg !3738
  %16 = add nuw nsw i32 %15, 1, !dbg !3739
  call void @llvm.dbg.value(metadata i32 %16, metadata !3684, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i8 0, metadata !3685, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i8* %0, metadata !3686, metadata !DIExpression()), !dbg !3731
  %17 = ptrtoint i8* %0 to i32, !dbg !3740
  %18 = and i32 %17, 3, !dbg !3742
  %19 = icmp eq i32 %18, 0, !dbg !3742
  br i1 %19, label %20, label %316, !dbg !3743

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3744
  call void @llvm.dbg.value(metadata i8* %21, metadata !3670, metadata !DIExpression()), !dbg !3731
  %22 = icmp eq i8* %0, null, !dbg !3745
  %23 = and i32 %1, 7, !dbg !3747
  %24 = sub nuw nsw i32 8, %23, !dbg !3747
  %25 = select i1 %22, i32 %23, i32 0, !dbg !3747
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !3747
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !3747
  call void @llvm.dbg.value(metadata i32 %27, metadata !3665, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i8* %26, metadata !3670, metadata !DIExpression()), !dbg !3731
  br i1 %22, label %33, label %28, !dbg !3748

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !3750
  %30 = sub i32 4, %17, !dbg !3750
  %31 = add i32 %30, %29, !dbg !3751
  %32 = icmp ugt i32 %31, %27, !dbg !3752
  br i1 %32, label %316, label %33, !dbg !3753

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !3754
  call void @llvm.dbg.value(metadata i8* %34, metadata !3667, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i8* %3, metadata !3681, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i32 4, metadata !3672, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i32 4, metadata !3671, metadata !DIExpression()), !dbg !3731
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !3755

38:                                               ; preds = %63, %216
  %39 = phi i8 [ %221, %216 ], [ %64, %63 ]
  %40 = phi i8* [ %220, %216 ], [ %65, %63 ]
  %41 = phi i8* [ %218, %216 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %216 ], [ %67, %63 ]
  %43 = phi i8* [ %219, %216 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %216 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %216 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %216 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !3668, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i8* %42, metadata !3667, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i8* %43, metadata !3670, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i32 %44, metadata !3671, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i32 %45, metadata !3672, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i32 %72, metadata !3679, metadata !DIExpression()), !dbg !3731
  br i1 %46, label %73, label %47, !dbg !3756

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !3757
  %49 = zext i1 %48 to i32, !dbg !3761
  %50 = add nsw i32 %72, %49, !dbg !3761
  %51 = select i1 %48, i32 4, i32 %45, !dbg !3761
  %52 = select i1 %48, i32 4, i32 %44, !dbg !3761
  call void @llvm.dbg.value(metadata i32 %52, metadata !3671, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i32 %51, metadata !3672, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i8 poison, metadata !3682, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i32 %50, metadata !3679, metadata !DIExpression()), !dbg !3731
  br label %53, !dbg !3762

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3668, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i8* %40, metadata !3667, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i8* %58, metadata !3670, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i32 %57, metadata !3671, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i32 %56, metadata !3672, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i8 poison, metadata !3682, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i32 %54, metadata !3679, metadata !DIExpression()), !dbg !3731
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3763
  call void @llvm.dbg.value(metadata i8* %60, metadata !3667, metadata !DIExpression()), !dbg !3731
  %61 = load i8, i8* %60, align 1, !dbg !3765
  %62 = icmp eq i8 %61, 0, !dbg !3766
  br i1 %62, label %223, label %63, !dbg !3767, !llvm.loop !3768

63:                                               ; preds = %190, %53
  %64 = phi i8 [ %61, %53 ], [ %197, %190 ]
  %65 = phi i8* [ %60, %53 ], [ %196, %190 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %190 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %190 ]
  %68 = phi i8* [ %58, %53 ], [ %195, %190 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %190 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %190 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %190 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %190 ]
  br label %38, !dbg !3756

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !3771

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3682, metadata !DIExpression()), !dbg !3731
  %75 = add nsw i32 %72, -1, !dbg !3772
  call void @llvm.dbg.value(metadata i32 %75, metadata !3679, metadata !DIExpression()), !dbg !3731
  br label %53, !dbg !3773

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !3774

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3672, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i32 4, metadata !3671, metadata !DIExpression()), !dbg !3731
  br label %53, !dbg !3775

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3672, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i32 4, metadata !3671, metadata !DIExpression()), !dbg !3731
  br label %53, !dbg !3776

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !3777
  %81 = icmp eq i8 %80, 108, !dbg !3779
  br i1 %81, label %82, label %109, !dbg !3780

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !3781
  %84 = load i8, i8* %83, align 1, !dbg !3781
  %85 = icmp eq i8 %84, 108, !dbg !3784
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !3785
  %89 = add i32 %88, 7, !dbg !3785
  %90 = and i32 %89, -8, !dbg !3785
  %91 = inttoptr i32 %90 to i8*, !dbg !3785
  %92 = inttoptr i32 %90 to double*, !dbg !3785
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !3785
  %94 = load double, double* %92, align 8, !dbg !3785
  call void @llvm.dbg.value(metadata i8* %93, metadata !3668, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i32 8, metadata !3671, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i32 8, metadata !3672, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata double %94, metadata !3699, metadata !DIExpression()), !dbg !3787
  %95 = ptrtoint i8* %43 to i32, !dbg !3788
  %96 = add i32 %95, 7, !dbg !3788
  %97 = and i32 %96, -8, !dbg !3788
  %98 = inttoptr i32 %97 to i8*, !dbg !3789
  call void @llvm.dbg.value(metadata i8* %98, metadata !3670, metadata !DIExpression()), !dbg !3731
  br i1 %22, label %104, label %99, !dbg !3790

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !3791
  %101 = icmp ugt i32 %100, %194, !dbg !3795
  br i1 %101, label %316, label %102, !dbg !3796

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !3797
  store double %94, double* %103, align 8, !dbg !3797
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !3800
  call void @llvm.dbg.value(metadata i8* %105, metadata !3670, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i8 poison, metadata !3682, metadata !DIExpression()), !dbg !3731
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3682, metadata !DIExpression()), !dbg !3731
  br label %53, !dbg !3801

107:                                              ; preds = %73, %73
  br label %109, !dbg !3802

108:                                              ; preds = %73
  br label %109, !dbg !3802

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !3731
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !3731
  call void @llvm.dbg.value(metadata i32 %113, metadata !3671, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i32 %112, metadata !3672, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i8 poison, metadata !3685, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i8 poison, metadata !3682, metadata !DIExpression()), !dbg !3731
  %114 = ptrtoint i8* %43 to i32, !dbg !3802
  %115 = add i32 %114, -1, !dbg !3802
  %116 = add i32 %115, %112, !dbg !3802
  %117 = sub i32 0, %112, !dbg !3802
  %118 = and i32 %116, %117, !dbg !3802
  %119 = inttoptr i32 %118 to i8*, !dbg !3803
  call void @llvm.dbg.value(metadata i8* %119, metadata !3670, metadata !DIExpression()), !dbg !3731
  br i1 %22, label %124, label %120, !dbg !3804

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !3806
  %122 = add i32 %121, %118, !dbg !3807
  %123 = icmp ugt i32 %122, %194, !dbg !3808
  br i1 %123, label %316, label %124, !dbg !3809

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %199, !dbg !3810

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !3803
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3811
  call void @llvm.dbg.value(metadata i8* %127, metadata !3668, metadata !DIExpression()), !dbg !3731
  %128 = bitcast i8* %41 to i8**, !dbg !3811
  %129 = load i8*, i8** %128, align 4, !dbg !3811
  call void @llvm.dbg.value(metadata i8* %129, metadata !3681, metadata !DIExpression()), !dbg !3731
  br label %130, !dbg !3812

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %191, %125 ], !dbg !3813
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !3814
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !3731
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %192, %125 ], !dbg !3815
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !3731
  %137 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !3816
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !3731
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !3731
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !3731
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !3731
  %142 = phi i32 [ %27, %33 ], [ %194, %125 ], !dbg !3817
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !3668, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i32 %142, metadata !3665, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i8* %141, metadata !3667, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i8* %140, metadata !3670, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i32 %139, metadata !3671, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i32 %138, metadata !3672, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i32 %137, metadata !3676, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i32 %136, metadata !3684, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i32 %135, metadata !3677, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i8 poison, metadata !3682, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i8* %133, metadata !3681, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i32 %132, metadata !3679, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i32 %131, metadata !3678, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.label(metadata !3730), !dbg !3819
  br i1 %22, label %146, label %144, !dbg !3820

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !3821
  store i8* %133, i8** %145, align 4, !dbg !3824
  br label %146, !dbg !3825

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !3826
  call void @llvm.dbg.value(metadata i32 %147, metadata !3684, metadata !DIExpression()), !dbg !3731
  %148 = icmp sgt i32 %136, 0, !dbg !3827
  br i1 %148, label %152, label %149, !dbg !3828

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #26, !dbg !3829
  %151 = zext i1 %150 to i32, !dbg !3829
  br label %152, !dbg !3828

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !3828
  %154 = icmp eq i32 %153, 0, !dbg !3828
  call void @llvm.dbg.value(metadata i1 %154, metadata !3708, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3830
  call void @llvm.dbg.value(metadata i1 %36, metadata !3711, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3830
  %155 = or i1 %36, %154, !dbg !3831
  br i1 %155, label %156, label %190, !dbg !3831

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !3832
  %158 = sub i32 %157, %17, !dbg !3832
  %159 = lshr i32 %158, 2, !dbg !3833
  call void @llvm.dbg.value(metadata i32 %159, metadata !3712, metadata !DIExpression()), !dbg !3834
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !3835
  %162 = icmp ugt i32 %137, 15
  %163 = select i1 %161, i1 true, i1 %162, !dbg !3835
  br i1 %163, label %316, label %164, !dbg !3835

164:                                              ; preds = %156
  br i1 %22, label %175, label %165, !dbg !3837

165:                                              ; preds = %164
  %166 = trunc i32 %159 to i8, !dbg !3838
  %167 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !3841
  store i8 %166, i8* %167, align 1, !dbg !3842
  %168 = trunc i32 %132 to i8, !dbg !3843
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !3844
  store i8 %168, i8* %169, align 1, !dbg !3845
  br i1 %154, label %173, label %170, !dbg !3846

170:                                              ; preds = %165
  %171 = or i8 %166, -128, !dbg !3847
  store i8 %171, i8* %167, align 1, !dbg !3847
  %172 = add i32 %131, 1, !dbg !3850
  call void @llvm.dbg.value(metadata i32 %172, metadata !3678, metadata !DIExpression()), !dbg !3731
  br label %185, !dbg !3851

173:                                              ; preds = %165
  %174 = add i32 %135, 1, !dbg !3852
  call void @llvm.dbg.value(metadata i32 %174, metadata !3677, metadata !DIExpression()), !dbg !3731
  br label %185

175:                                              ; preds = %164
  br i1 %154, label %178, label %176, !dbg !3854

176:                                              ; preds = %175
  %177 = add i32 %142, 1, !dbg !3855
  call void @llvm.dbg.value(metadata i32 %177, metadata !3665, metadata !DIExpression()), !dbg !3731
  br label %185, !dbg !3858

178:                                              ; preds = %175
  br i1 %13, label %181, label %179, !dbg !3859

179:                                              ; preds = %178
  %180 = add i32 %142, 2, !dbg !3860
  call void @llvm.dbg.value(metadata i32 %180, metadata !3665, metadata !DIExpression()), !dbg !3731
  br label %185, !dbg !3863

181:                                              ; preds = %178
  %182 = tail call i32 @strlen(i8* noundef %133) #27, !dbg !3864
  %183 = add i32 %142, 2, !dbg !3866
  %184 = add i32 %183, %182, !dbg !3867
  call void @llvm.dbg.value(metadata i32 %184, metadata !3665, metadata !DIExpression()), !dbg !3731
  br label %185

185:                                              ; preds = %173, %170, %179, %181, %176
  %186 = phi i32 [ %172, %170 ], [ %131, %173 ], [ %131, %176 ], [ %131, %179 ], [ %131, %181 ], !dbg !3731
  %187 = phi i32 [ %135, %170 ], [ %174, %173 ], [ %135, %176 ], [ %135, %179 ], [ %135, %181 ], !dbg !3731
  %188 = phi i32 [ %142, %170 ], [ %142, %173 ], [ %177, %176 ], [ %180, %179 ], [ %184, %181 ], !dbg !3731
  call void @llvm.dbg.value(metadata i32 %188, metadata !3665, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i32 %187, metadata !3677, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i32 %186, metadata !3678, metadata !DIExpression()), !dbg !3731
  %189 = add nuw nsw i32 %137, 1, !dbg !3868
  call void @llvm.dbg.value(metadata i32 undef, metadata !3665, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i32 undef, metadata !3676, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i32 undef, metadata !3677, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i32 undef, metadata !3678, metadata !DIExpression()), !dbg !3731
  br label %190

190:                                              ; preds = %185, %152
  %191 = phi i32 [ %131, %152 ], [ %186, %185 ], !dbg !3813
  %192 = phi i32 [ %135, %152 ], [ %187, %185 ], !dbg !3815
  %193 = phi i32 [ %137, %152 ], [ %189, %185 ], !dbg !3816
  %194 = phi i32 [ %142, %152 ], [ %188, %185 ], !dbg !3817
  call void @llvm.dbg.value(metadata i32 %194, metadata !3665, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i32 %193, metadata !3676, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i32 %192, metadata !3677, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i32 %191, metadata !3678, metadata !DIExpression()), !dbg !3731
  %195 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !3869
  call void @llvm.dbg.value(metadata i8* %195, metadata !3670, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i8* %143, metadata !3668, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i8* %141, metadata !3667, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i32 %139, metadata !3671, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i32 %138, metadata !3672, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i8 poison, metadata !3685, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i8 poison, metadata !3682, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i32 %132, metadata !3679, metadata !DIExpression()), !dbg !3731
  %196 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !3763
  call void @llvm.dbg.value(metadata i8* %196, metadata !3667, metadata !DIExpression()), !dbg !3731
  %197 = load i8, i8* %196, align 1, !dbg !3765
  %198 = icmp eq i8 %197, 0, !dbg !3766
  br i1 %198, label %223, label %63, !dbg !3767

199:                                              ; preds = %124
  switch i32 %113, label %316 [
    i32 4, label %200
    i32 8, label %206
  ], !dbg !3870

200:                                              ; preds = %199
  %201 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3871
  call void @llvm.dbg.value(metadata i8* %201, metadata !3668, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i32 undef, metadata !3715, metadata !DIExpression()), !dbg !3872
  br i1 %22, label %216, label %202, !dbg !3873

202:                                              ; preds = %200
  %203 = bitcast i8* %41 to i32*, !dbg !3871
  %204 = load i32, i32* %203, align 4, !dbg !3871
  call void @llvm.dbg.value(metadata i32 %204, metadata !3715, metadata !DIExpression()), !dbg !3872
  %205 = inttoptr i32 %118 to i32*, !dbg !3874
  store i32 %204, i32* %205, align 4, !dbg !3877
  br label %216, !dbg !3878

206:                                              ; preds = %199
  %207 = ptrtoint i8* %41 to i32, !dbg !3879
  %208 = add i32 %207, 7, !dbg !3879
  %209 = and i32 %208, -8, !dbg !3879
  %210 = inttoptr i32 %209 to i8*, !dbg !3879
  %211 = getelementptr inbounds i8, i8* %210, i32 8, !dbg !3879
  call void @llvm.dbg.value(metadata i8* %211, metadata !3668, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i64 undef, metadata !3721, metadata !DIExpression()), !dbg !3880
  br i1 %22, label %216, label %212, !dbg !3881

212:                                              ; preds = %206
  %213 = inttoptr i32 %209 to i64*, !dbg !3879
  %214 = load i64, i64* %213, align 8, !dbg !3879
  call void @llvm.dbg.value(metadata i64 %214, metadata !3721, metadata !DIExpression()), !dbg !3880
  %215 = inttoptr i32 %118 to i64*, !dbg !3882
  store i64 %214, i64* %215, align 8, !dbg !3887
  br label %216, !dbg !3888

216:                                              ; preds = %206, %212, %200, %202
  %217 = phi i32 [ 4, %202 ], [ 4, %200 ], [ 8, %212 ], [ 8, %206 ]
  %218 = phi i8* [ %201, %202 ], [ %201, %200 ], [ %211, %212 ], [ %211, %206 ], !dbg !3889
  %219 = getelementptr inbounds i8, i8* %119, i32 %217, !dbg !3889
  call void @llvm.dbg.value(metadata i8* %218, metadata !3668, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i8* %40, metadata !3667, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i8* %219, metadata !3670, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i32 %113, metadata !3671, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i32 %112, metadata !3672, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i8 poison, metadata !3685, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i8 poison, metadata !3682, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i32 %72, metadata !3679, metadata !DIExpression()), !dbg !3731
  %220 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3763
  call void @llvm.dbg.value(metadata i8* %220, metadata !3667, metadata !DIExpression()), !dbg !3731
  %221 = load i8, i8* %220, align 1, !dbg !3765
  %222 = icmp eq i8 %221, 0, !dbg !3766
  br i1 %222, label %223, label %38, !dbg !3767

223:                                              ; preds = %190, %216, %53
  %224 = phi i8* [ %219, %216 ], [ %58, %53 ], [ %195, %190 ], !dbg !3890
  %225 = ptrtoint i8* %224 to i32, !dbg !3891
  %226 = sub i32 %225, %17, !dbg !3891
  %227 = lshr i32 %226, 2, !dbg !3893
  %228 = icmp ugt i32 %226, 1023, !dbg !3894
  br i1 %228, label %316, label %229, !dbg !3895

229:                                              ; preds = %223
  br i1 %22, label %230, label %233, !dbg !3896

230:                                              ; preds = %229
  %231 = add i32 %194, -8, !dbg !3897
  %232 = add i32 %231, %226, !dbg !3900
  br label %316, !dbg !3901

233:                                              ; preds = %229
  %234 = trunc i32 %227 to i8, !dbg !3902
  store i8 %234, i8* %0, align 1, !dbg !3903
  %235 = trunc i32 %192 to i8, !dbg !3904
  %236 = select i1 %13, i8 %235, i8 0
  %237 = select i1 %13, i8 0, i8 %235
  %238 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !3906
  store i8 %236, i8* %238, align 1, !dbg !3908
  %239 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3909
  store i8 %237, i8* %239, align 1, !dbg !3910
  %240 = trunc i32 %191 to i8, !dbg !3911
  %241 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3912
  store i8 %240, i8* %241, align 1, !dbg !3913
  %242 = icmp eq i32 %191, 0, !dbg !3914
  %243 = xor i1 %242, true, !dbg !3915
  %244 = icmp ne i32 %193, 0
  %245 = select i1 %243, i1 %244, i1 false, !dbg !3915
  call void @llvm.dbg.value(metadata i8* %224, metadata !3670, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i32 0, metadata !3680, metadata !DIExpression()), !dbg !3731
  br i1 %245, label %246, label %265, !dbg !3915

246:                                              ; preds = %233
  %247 = sub i32 1, %17
  br label %248, !dbg !3916

248:                                              ; preds = %246, %261
  %249 = phi i8* [ %224, %246 ], [ %262, %261 ]
  %250 = phi i32 [ 0, %246 ], [ %263, %261 ]
  call void @llvm.dbg.value(metadata i8* %249, metadata !3670, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i32 %250, metadata !3680, metadata !DIExpression()), !dbg !3731
  %251 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %250, !dbg !3917
  %252 = load i8, i8* %251, align 1, !dbg !3917
  %253 = icmp sgt i8 %252, -1, !dbg !3919
  br i1 %253, label %261, label %254, !dbg !3920

254:                                              ; preds = %248
  call void @llvm.dbg.value(metadata i8 %252, metadata !3724, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3921
  %255 = ptrtoint i8* %249 to i32, !dbg !3922
  %256 = add i32 %247, %255, !dbg !3924
  %257 = icmp ugt i32 %256, %194, !dbg !3925
  br i1 %257, label %316, label %258, !dbg !3926

258:                                              ; preds = %254
  %259 = and i8 %252, 127, !dbg !3927
  call void @llvm.dbg.value(metadata i8 %259, metadata !3724, metadata !DIExpression()), !dbg !3921
  %260 = getelementptr inbounds i8, i8* %249, i32 1, !dbg !3928
  call void @llvm.dbg.value(metadata i8* %260, metadata !3670, metadata !DIExpression()), !dbg !3731
  store i8 %259, i8* %249, align 1, !dbg !3929
  br label %261

261:                                              ; preds = %258, %248
  %262 = phi i8* [ %260, %258 ], [ %249, %248 ], !dbg !3869
  call void @llvm.dbg.value(metadata i8* %262, metadata !3670, metadata !DIExpression()), !dbg !3731
  %263 = add nuw i32 %250, 1, !dbg !3930
  call void @llvm.dbg.value(metadata i32 %263, metadata !3680, metadata !DIExpression()), !dbg !3731
  %264 = icmp eq i32 %263, %193, !dbg !3931
  br i1 %264, label %265, label %248, !dbg !3916, !llvm.loop !3932

265:                                              ; preds = %261, %233
  %266 = phi i8* [ %224, %233 ], [ %262, %261 ], !dbg !3869
  call void @llvm.dbg.value(metadata i8* %266, metadata !3670, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i32 0, metadata !3680, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i8* %133, metadata !3681, metadata !DIExpression()), !dbg !3731
  %267 = icmp eq i32 %193, 0, !dbg !3934
  br i1 %267, label %312, label %268, !dbg !3937

268:                                              ; preds = %265
  %269 = sub i32 1, %17
  br label %270, !dbg !3937

270:                                              ; preds = %268, %307
  %271 = phi i8* [ %266, %268 ], [ %309, %307 ]
  %272 = phi i8* [ %133, %268 ], [ %308, %307 ]
  %273 = phi i32 [ 0, %268 ], [ %310, %307 ]
  call void @llvm.dbg.value(metadata i8* %271, metadata !3670, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i8* %272, metadata !3681, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i32 %273, metadata !3680, metadata !DIExpression()), !dbg !3731
  br i1 %242, label %278, label %274, !dbg !3938

274:                                              ; preds = %270
  %275 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !3941
  %276 = load i8, i8* %275, align 1, !dbg !3941
  %277 = icmp sgt i8 %276, -1, !dbg !3942
  br i1 %277, label %278, label %307, !dbg !3943

278:                                              ; preds = %274, %270
  br i1 %13, label %283, label %279, !dbg !3944

279:                                              ; preds = %278
  call void @llvm.dbg.value(metadata i32 0, metadata !3671, metadata !DIExpression()), !dbg !3731
  %280 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %273, !dbg !3945
  %281 = load i8, i8* %280, align 1, !dbg !3945
  %282 = getelementptr inbounds i8, i8* %271, i32 1, !dbg !3948
  call void @llvm.dbg.value(metadata i8* %282, metadata !3670, metadata !DIExpression()), !dbg !3731
  store i8 %281, i8* %271, align 1, !dbg !3949
  br label %293, !dbg !3950

283:                                              ; preds = %278
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !3951
  %285 = load i8, i8* %284, align 1, !dbg !3951
  %286 = zext i8 %285 to i32, !dbg !3951
  %287 = shl nuw nsw i32 %286, 2, !dbg !3953
  %288 = getelementptr inbounds i8, i8* %0, i32 %287, !dbg !3954
  %289 = bitcast i8* %288 to i8**, !dbg !3955
  %290 = load i8*, i8** %289, align 4, !dbg !3955
  call void @llvm.dbg.value(metadata i8* %290, metadata !3681, metadata !DIExpression()), !dbg !3731
  store i8* null, i8** %289, align 4, !dbg !3956
  %291 = tail call i32 @strlen(i8* noundef %290) #27, !dbg !3957
  %292 = add i32 %291, 1, !dbg !3958
  call void @llvm.dbg.value(metadata i32 %292, metadata !3671, metadata !DIExpression()), !dbg !3731
  br label %293

293:                                              ; preds = %283, %279
  %294 = phi i8* [ %272, %279 ], [ %290, %283 ], !dbg !3731
  %295 = phi i32 [ 0, %279 ], [ %292, %283 ], !dbg !3959
  %296 = phi i8* [ %282, %279 ], [ %271, %283 ], !dbg !3731
  call void @llvm.dbg.value(metadata i8* %296, metadata !3670, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i32 %295, metadata !3671, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i8* %294, metadata !3681, metadata !DIExpression()), !dbg !3731
  %297 = ptrtoint i8* %296 to i32, !dbg !3960
  %298 = add i32 %269, %295, !dbg !3962
  %299 = add i32 %298, %297, !dbg !3963
  %300 = icmp ugt i32 %299, %194, !dbg !3964
  br i1 %300, label %316, label %301, !dbg !3965

301:                                              ; preds = %293
  %302 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !3966
  %303 = load i8, i8* %302, align 1, !dbg !3966
  %304 = getelementptr inbounds i8, i8* %296, i32 1, !dbg !3967
  call void @llvm.dbg.value(metadata i8* %304, metadata !3670, metadata !DIExpression()), !dbg !3731
  store i8 %303, i8* %296, align 1, !dbg !3968
  %305 = tail call i8* @memcpy(i8* noundef nonnull %304, i8* noundef %294, i32 noundef %295) #27, !dbg !3969
  %306 = getelementptr inbounds i8, i8* %304, i32 %295, !dbg !3970
  call void @llvm.dbg.value(metadata i8* %306, metadata !3670, metadata !DIExpression()), !dbg !3731
  br label %307, !dbg !3971

307:                                              ; preds = %274, %301
  %308 = phi i8* [ %272, %274 ], [ %294, %301 ], !dbg !3972
  %309 = phi i8* [ %271, %274 ], [ %306, %301 ], !dbg !3731
  call void @llvm.dbg.value(metadata i8* %309, metadata !3670, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i8* %308, metadata !3681, metadata !DIExpression()), !dbg !3731
  %310 = add nuw i32 %273, 1, !dbg !3973
  call void @llvm.dbg.value(metadata i32 %310, metadata !3680, metadata !DIExpression()), !dbg !3731
  %311 = icmp eq i32 %310, %193, !dbg !3934
  br i1 %311, label %312, label %270, !dbg !3937, !llvm.loop !3974

312:                                              ; preds = %307, %265
  %313 = phi i8* [ %266, %265 ], [ %309, %307 ], !dbg !3869
  %314 = ptrtoint i8* %313 to i32, !dbg !3976
  %315 = sub i32 %314, %17, !dbg !3976
  br label %316, !dbg !3977

316:                                              ; preds = %156, %199, %120, %99, %254, %293, %223, %28, %5, %312, %230
  %317 = phi i32 [ %232, %230 ], [ %315, %312 ], [ -14, %5 ], [ -28, %28 ], [ -22, %223 ], [ -28, %293 ], [ -28, %254 ], [ -28, %120 ], [ -22, %199 ], [ -28, %99 ], [ -22, %156 ], !dbg !3731
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #25, !dbg !3978
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #25, !dbg !3978
  ret i32 %317, !dbg !3978
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #5 !dbg !3979 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3983, metadata !DIExpression()), !dbg !3984
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #26, !dbg !3985
  ret i1 %2, !dbg !3986
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #5 !dbg !3987 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3992, metadata !DIExpression()), !dbg !3993
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !3994
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !3995
  %4 = and i1 %2, %3, !dbg !3995
  ret i1 %4, !dbg !3996
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !3997 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4001, metadata !DIExpression()), !dbg !4007
  call void @llvm.dbg.value(metadata i32 %1, metadata !4002, metadata !DIExpression()), !dbg !4007
  call void @llvm.dbg.value(metadata i32 %2, metadata !4003, metadata !DIExpression()), !dbg !4007
  call void @llvm.dbg.value(metadata i8* %3, metadata !4004, metadata !DIExpression()), !dbg !4007
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !4008
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #25, !dbg !4008
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !4005, metadata !DIExpression()), !dbg !4009
  call void @llvm.va_start(i8* nonnull %6), !dbg !4010
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !4011
  %8 = load i32, i32* %7, align 4, !dbg !4011
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !4011
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #26, !dbg !4011
  call void @llvm.dbg.value(metadata i32 %10, metadata !4006, metadata !DIExpression()), !dbg !4007
  call void @llvm.va_end(i8* nonnull %6), !dbg !4012
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #25, !dbg !4013
  ret i32 %10, !dbg !4014
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #6

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !4015 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4027, metadata !DIExpression()), !dbg !4046
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4028, metadata !DIExpression()), !dbg !4046
  call void @llvm.dbg.value(metadata i8* %2, metadata !4029, metadata !DIExpression()), !dbg !4046
  call void @llvm.dbg.value(metadata i8* %3, metadata !4030, metadata !DIExpression()), !dbg !4046
  call void @llvm.dbg.value(metadata i8* %3, metadata !4031, metadata !DIExpression()), !dbg !4046
  call void @llvm.dbg.value(metadata i8* %3, metadata !4032, metadata !DIExpression()), !dbg !4046
  %5 = icmp eq i8* %3, null, !dbg !4047
  br i1 %5, label %45, label %6, !dbg !4049

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !4041, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4046
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !4050
  %8 = load i8, i8* %7, align 1, !dbg !4050
  %9 = zext i8 %8 to i32, !dbg !4051
  call void @llvm.dbg.value(metadata i32 %9, metadata !4042, metadata !DIExpression()), !dbg !4046
  call void @llvm.dbg.value(metadata i8 undef, metadata !4043, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4046
  call void @llvm.dbg.value(metadata i8 undef, metadata !4044, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4046
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !4038, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4046
  call void @llvm.dbg.value(metadata i32 0, metadata !4040, metadata !DIExpression()), !dbg !4046
  %10 = icmp eq i8 %8, 0, !dbg !4052
  br i1 %10, label %39, label %11, !dbg !4055

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !4056
  call void @llvm.dbg.value(metadata i8 %12, metadata !4041, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4046
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !4038, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4046
  %13 = zext i8 %12 to i32, !dbg !4057
  call void @llvm.dbg.value(metadata i32 %13, metadata !4041, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4046
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !4038, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4046
  %14 = shl nuw nsw i32 %13, 2, !dbg !4058
  call void @llvm.dbg.value(metadata i32 %14, metadata !4041, metadata !DIExpression()), !dbg !4046
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !4038, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4046
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !4059
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !4038, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4046
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !4060
  %17 = load i8, i8* %16, align 1, !dbg !4060
  call void @llvm.dbg.value(metadata i8 %17, metadata !4043, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4046
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !4038, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4046
  %18 = zext i8 %17 to i32, !dbg !4061
  call void @llvm.dbg.value(metadata i32 %18, metadata !4043, metadata !DIExpression()), !dbg !4046
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !4038, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4046
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !4062
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !4038, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4046
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !4063
  %21 = load i8, i8* %20, align 1, !dbg !4063
  call void @llvm.dbg.value(metadata i8 %21, metadata !4044, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4046
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !4038, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4046
  %22 = zext i8 %21 to i32, !dbg !4064
  call void @llvm.dbg.value(metadata i32 %22, metadata !4044, metadata !DIExpression()), !dbg !4046
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !4038, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4046
  %23 = shl nuw nsw i32 %22, 1, !dbg !4065
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !4038, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4046
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !4066
  call void @llvm.dbg.value(metadata i8* %24, metadata !4038, metadata !DIExpression()), !dbg !4046
  br label %25, !dbg !4055

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !4038, metadata !DIExpression()), !dbg !4046
  call void @llvm.dbg.value(metadata i32 %27, metadata !4040, metadata !DIExpression()), !dbg !4046
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !4067
  call void @llvm.dbg.value(metadata i8* %28, metadata !4038, metadata !DIExpression()), !dbg !4046
  %29 = load i8, i8* %26, align 1, !dbg !4069
  %30 = zext i8 %29 to i32, !dbg !4069
  call void @llvm.dbg.value(metadata i32 %30, metadata !4045, metadata !DIExpression()), !dbg !4046
  %31 = shl nuw nsw i32 %30, 2, !dbg !4070
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !4071
  %33 = bitcast i8* %32 to i8**, !dbg !4072
  call void @llvm.dbg.value(metadata i8** %33, metadata !4039, metadata !DIExpression()), !dbg !4046
  store i8* %28, i8** %33, align 4, !dbg !4073
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #27, !dbg !4074
  %35 = add i32 %34, 1, !dbg !4075
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !4076
  call void @llvm.dbg.value(metadata i8* %36, metadata !4038, metadata !DIExpression()), !dbg !4046
  %37 = add nuw nsw i32 %27, 1, !dbg !4077
  call void @llvm.dbg.value(metadata i32 %37, metadata !4040, metadata !DIExpression()), !dbg !4046
  %38 = icmp eq i32 %37, %9, !dbg !4052
  br i1 %38, label %39, label %25, !dbg !4055, !llvm.loop !4078

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !4080
  call void @llvm.dbg.value(metadata i8* %40, metadata !4031, metadata !DIExpression()), !dbg !4046
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !4081
  %42 = bitcast i8* %41 to i8**, !dbg !4081
  %43 = load i8*, i8** %42, align 1, !dbg !4081
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #26, !dbg !4082
  br label %45, !dbg !4083

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !4046
  ret i32 %46, !dbg !4084
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !4085 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4089, metadata !DIExpression()), !dbg !4099
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4090, metadata !DIExpression()), !dbg !4099
  call void @llvm.dbg.value(metadata i8* %2, metadata !4091, metadata !DIExpression()), !dbg !4099
  call void @llvm.dbg.value(metadata i8* %3, metadata !4092, metadata !DIExpression()), !dbg !4099
  call void @llvm.dbg.value(metadata i8* %4, metadata !4093, metadata !DIExpression()), !dbg !4099
  call void @llvm.dbg.value(metadata i8* %4, metadata !4094, metadata !DIExpression()), !dbg !4099
  %6 = ptrtoint i8* %4 to i32, !dbg !4100
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !4100
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #27, !dbg !4100
  ret i32 %8, !dbg !4101
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #7 !dbg !4102 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4106, metadata !DIExpression()), !dbg !4111
  call void @llvm.dbg.value(metadata i32 %1, metadata !4107, metadata !DIExpression()), !dbg !4111
  call void @llvm.dbg.value(metadata i8 0, metadata !4109, metadata !DIExpression()), !dbg !4111
  call void @llvm.dbg.value(metadata i32 0, metadata !4110, metadata !DIExpression()), !dbg !4111
  call void @llvm.dbg.value(metadata i8 poison, metadata !4109, metadata !DIExpression()), !dbg !4111
  call void @llvm.dbg.value(metadata i8* %0, metadata !4106, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4111
  %3 = load i8, i8* %0, align 1, !dbg !4112
  call void @llvm.dbg.value(metadata i8 %3, metadata !4108, metadata !DIExpression()), !dbg !4111
  %4 = icmp eq i8 %3, 0, !dbg !4113
  br i1 %4, label %29, label %5, !dbg !4114

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !4115
  call void @llvm.dbg.value(metadata i32 %8, metadata !4110, metadata !DIExpression()), !dbg !4111
  br i1 %9, label %11, label %22, !dbg !4116

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !4118
  br i1 %12, label %13, label %17, !dbg !4122

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !4123
  br i1 %14, label %29, label %15, !dbg !4126

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #26, !dbg !4127
  br i1 %16, label %29, label %22, !dbg !4129

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #26, !dbg !4130
  %19 = xor i1 %18, true, !dbg !4132
  %20 = zext i1 %18 to i32, !dbg !4132
  %21 = add nsw i32 %8, %20, !dbg !4132
  br label %22, !dbg !4132

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !4111
  call void @llvm.dbg.value(metadata i32 %24, metadata !4110, metadata !DIExpression()), !dbg !4111
  call void @llvm.dbg.value(metadata i8 poison, metadata !4109, metadata !DIExpression()), !dbg !4111
  %25 = icmp eq i8 %6, 37, !dbg !4133
  %26 = xor i1 %25, %23, !dbg !4135
  call void @llvm.dbg.value(metadata i8* %10, metadata !4106, metadata !DIExpression()), !dbg !4111
  call void @llvm.dbg.value(metadata i8* %10, metadata !4106, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4111
  %27 = load i8, i8* %10, align 1, !dbg !4112
  call void @llvm.dbg.value(metadata i8 %27, metadata !4108, metadata !DIExpression()), !dbg !4111
  %28 = icmp eq i8 %27, 0, !dbg !4113
  br i1 %28, label %29, label %5, !dbg !4114, !llvm.loop !4136

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !4111
  ret i1 %30, !dbg !4138
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #5 !dbg !4139 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4143, metadata !DIExpression()), !dbg !4144
  %2 = add i8 %0, -64, !dbg !4145
  %3 = icmp ult i8 %2, 59, !dbg !4145
  ret i1 %3, !dbg !4146
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !4147 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4155, metadata !DIExpression()), !dbg !4224
  call void @llvm.dbg.value(metadata i32 %1, metadata !4156, metadata !DIExpression()), !dbg !4224
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !4157, metadata !DIExpression()), !dbg !4224
  call void @llvm.dbg.value(metadata i8* %3, metadata !4158, metadata !DIExpression()), !dbg !4224
  call void @llvm.dbg.value(metadata i32 %4, metadata !4159, metadata !DIExpression()), !dbg !4224
  call void @llvm.dbg.value(metadata i16* %5, metadata !4160, metadata !DIExpression()), !dbg !4224
  call void @llvm.dbg.value(metadata i32 %6, metadata !4161, metadata !DIExpression()), !dbg !4224
  call void @llvm.dbg.value(metadata i8* %0, metadata !4162, metadata !DIExpression()), !dbg !4224
  %11 = bitcast i8* %0 to i32*, !dbg !4225
  call void @llvm.dbg.value(metadata i32* %11, metadata !4163, metadata !DIExpression()), !dbg !4224
  %12 = and i32 %4, 8, !dbg !4226
  %13 = icmp eq i32 %12, 0, !dbg !4227
  call void @llvm.dbg.value(metadata i1 %13, metadata !4167, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4224
  call void @llvm.dbg.value(metadata i8* %0, metadata !4170, metadata !DIExpression()), !dbg !4224
  %14 = icmp eq i32 %1, 0, !dbg !4228
  br i1 %14, label %15, label %17, !dbg !4229

15:                                               ; preds = %7
  %16 = tail call fastcc i32 @get_package_len(i8* noundef %0) #26, !dbg !4230
  br label %17, !dbg !4229

17:                                               ; preds = %7, %15
  %18 = phi i32 [ %16, %15 ], [ %1, %7 ], !dbg !4229
  call void @llvm.dbg.value(metadata i32 %18, metadata !4156, metadata !DIExpression()), !dbg !4224
  %19 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4231
  %20 = load i8, i8* %19, align 1, !dbg !4231
  %21 = zext i8 %20 to i32, !dbg !4232
  call void @llvm.dbg.value(metadata i32 %21, metadata !4165, metadata !DIExpression()), !dbg !4224
  %22 = icmp ne i8 %20, 0, !dbg !4233
  %23 = and i32 %4, 1, !dbg !4234
  %24 = icmp ne i32 %23, 0, !dbg !4234
  %25 = and i1 %24, %22, !dbg !4234
  call void @llvm.dbg.value(metadata i1 %25, metadata !4169, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4224
  %26 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4235
  %27 = load i8, i8* %26, align 1, !dbg !4235
  %28 = zext i8 %27 to i32, !dbg !4236
  call void @llvm.dbg.value(metadata i32 %28, metadata !4166, metadata !DIExpression()), !dbg !4224
  %29 = icmp ne i8 %27, 0, !dbg !4237
  %30 = and i32 %4, 2, !dbg !4238
  %31 = icmp ne i32 %30, 0, !dbg !4238
  %32 = and i1 %31, %29, !dbg !4238
  call void @llvm.dbg.value(metadata i1 %32, metadata !4168, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4224
  %33 = select i1 %32, i1 true, i1 %25, !dbg !4239
  br i1 %33, label %38, label %34, !dbg !4239

34:                                               ; preds = %17
  %35 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4241
  br i1 %35, label %267, label %36, !dbg !4244

36:                                               ; preds = %34
  %37 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %18, i8* noundef %3) #27, !dbg !4245
  br label %267, !dbg !4247

38:                                               ; preds = %17
  %39 = load i8, i8* %0, align 1, !dbg !4248
  %40 = zext i8 %39 to i32, !dbg !4249
  %41 = shl nuw nsw i32 %40, 2, !dbg !4250
  call void @llvm.dbg.value(metadata i32 %41, metadata !4164, metadata !DIExpression()), !dbg !4224
  %42 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4251
  %43 = bitcast i8* %42 to i8**, !dbg !4252
  %44 = load i8*, i8** %43, align 4, !dbg !4252
  call void @llvm.dbg.value(metadata i8* %44, metadata !4173, metadata !DIExpression()), !dbg !4224
  %45 = getelementptr inbounds i8, i8* %0, i32 %41, !dbg !4253
  call void @llvm.dbg.value(metadata i8* %45, metadata !4174, metadata !DIExpression()), !dbg !4224
  call void @llvm.dbg.value(metadata i32 0, metadata !4175, metadata !DIExpression()), !dbg !4224
  %46 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4254
  br i1 %46, label %47, label %132, !dbg !4255

47:                                               ; preds = %38
  call void @llvm.dbg.value(metadata i32 %18, metadata !4172, metadata !DIExpression()), !dbg !4224
  br i1 %25, label %48, label %73, !dbg !4256

48:                                               ; preds = %47
  call void @llvm.dbg.value(metadata i32 %18, metadata !4172, metadata !DIExpression()), !dbg !4224
  call void @llvm.dbg.value(metadata i8* %45, metadata !4174, metadata !DIExpression()), !dbg !4224
  call void @llvm.dbg.value(metadata i32 0, metadata !4175, metadata !DIExpression()), !dbg !4224
  call void @llvm.dbg.value(metadata i32 0, metadata !4176, metadata !DIExpression()), !dbg !4257
  %49 = icmp ne i16* %5, null
  br label %50, !dbg !4258

50:                                               ; preds = %48, %67
  %51 = phi i32 [ %18, %48 ], [ %69, %67 ]
  %52 = phi i8* [ %45, %48 ], [ %70, %67 ]
  %53 = phi i32 [ 0, %48 ], [ %68, %67 ]
  %54 = phi i32 [ 0, %48 ], [ %71, %67 ]
  call void @llvm.dbg.value(metadata i32 %51, metadata !4172, metadata !DIExpression()), !dbg !4224
  call void @llvm.dbg.value(metadata i8* %52, metadata !4174, metadata !DIExpression()), !dbg !4224
  call void @llvm.dbg.value(metadata i32 %53, metadata !4175, metadata !DIExpression()), !dbg !4224
  call void @llvm.dbg.value(metadata i32 %54, metadata !4176, metadata !DIExpression()), !dbg !4257
  %55 = load i8, i8* %52, align 1, !dbg !4259
  %56 = zext i8 %55 to i32, !dbg !4260
  %57 = getelementptr inbounds i32, i32* %11, i32 %56, !dbg !4260
  %58 = bitcast i32* %57 to i8**, !dbg !4261
  %59 = load i8*, i8** %58, align 4, !dbg !4261
  call void @llvm.dbg.value(metadata i8* %59, metadata !4182, metadata !DIExpression()), !dbg !4262
  %60 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %59, i16 noundef zeroext 0) #26, !dbg !4263
  call void @llvm.dbg.value(metadata i32 %60, metadata !4185, metadata !DIExpression()), !dbg !4262
  %61 = icmp ult i32 %53, %6
  %62 = select i1 %49, i1 %61, i1 false, !dbg !4264
  br i1 %62, label %63, label %67, !dbg !4264

63:                                               ; preds = %50
  %64 = trunc i32 %60 to i16, !dbg !4266
  %65 = add nuw i32 %53, 1, !dbg !4268
  call void @llvm.dbg.value(metadata i32 %65, metadata !4175, metadata !DIExpression()), !dbg !4224
  %66 = getelementptr inbounds i16, i16* %5, i32 %53, !dbg !4269
  store i16 %64, i16* %66, align 2, !dbg !4270
  br label %67, !dbg !4271

67:                                               ; preds = %63, %50
  %68 = phi i32 [ %65, %63 ], [ %53, %50 ], !dbg !4224
  call void @llvm.dbg.value(metadata i32 %68, metadata !4175, metadata !DIExpression()), !dbg !4224
  %69 = add nsw i32 %60, %51, !dbg !4272
  call void @llvm.dbg.value(metadata i32 %69, metadata !4172, metadata !DIExpression()), !dbg !4224
  %70 = getelementptr inbounds i8, i8* %52, i32 1, !dbg !4273
  call void @llvm.dbg.value(metadata i8* %70, metadata !4174, metadata !DIExpression()), !dbg !4224
  %71 = add nuw nsw i32 %54, 1, !dbg !4274
  call void @llvm.dbg.value(metadata i32 %71, metadata !4176, metadata !DIExpression()), !dbg !4257
  %72 = icmp eq i32 %71, %21, !dbg !4275
  br i1 %72, label %79, label %50, !dbg !4258, !llvm.loop !4276

73:                                               ; preds = %47
  %74 = and i32 %4, 4
  %75 = icmp ne i32 %74, 0
  %76 = and i1 %75, %22, !dbg !4278
  %77 = select i1 %76, i32 %21, i32 0, !dbg !4278
  %78 = getelementptr i8, i8* %45, i32 %77, !dbg !4278
  br label %79, !dbg !4278

79:                                               ; preds = %67, %73
  %80 = phi i32 [ 0, %73 ], [ %68, %67 ], !dbg !4281
  %81 = phi i8* [ %78, %73 ], [ %70, %67 ], !dbg !4224
  %82 = phi i32 [ %18, %73 ], [ %69, %67 ], !dbg !4282
  call void @llvm.dbg.value(metadata i1 undef, metadata !4186, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4283
  call void @llvm.dbg.value(metadata i32 0, metadata !4187, metadata !DIExpression()), !dbg !4284
  call void @llvm.dbg.value(metadata i32 %82, metadata !4172, metadata !DIExpression()), !dbg !4224
  call void @llvm.dbg.value(metadata i8* %81, metadata !4174, metadata !DIExpression()), !dbg !4224
  call void @llvm.dbg.value(metadata i32 %80, metadata !4175, metadata !DIExpression()), !dbg !4224
  %83 = icmp eq i8 %27, 0, !dbg !4285
  br i1 %83, label %267, label %84, !dbg !4286

84:                                               ; preds = %79
  %85 = and i32 %4, 5, !dbg !4287
  %86 = icmp eq i32 %85, 0, !dbg !4288
  call void @llvm.dbg.value(metadata i1 %86, metadata !4186, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4283
  %87 = icmp eq i32 %30, 0
  %88 = icmp eq i32 %23, 0
  %89 = icmp ne i16* %5, null
  %90 = select i1 %86, i32 -2, i32 -1
  br label %91, !dbg !4286

91:                                               ; preds = %84, %127
  %92 = phi i32 [ %82, %84 ], [ %129, %127 ]
  %93 = phi i8* [ %81, %84 ], [ %97, %127 ]
  %94 = phi i32 [ %80, %84 ], [ %128, %127 ]
  %95 = phi i32 [ 0, %84 ], [ %130, %127 ]
  call void @llvm.dbg.value(metadata i32 %92, metadata !4172, metadata !DIExpression()), !dbg !4224
  call void @llvm.dbg.value(metadata i8* %93, metadata !4174, metadata !DIExpression()), !dbg !4224
  call void @llvm.dbg.value(metadata i32 %94, metadata !4175, metadata !DIExpression()), !dbg !4224
  call void @llvm.dbg.value(metadata i32 %95, metadata !4187, metadata !DIExpression()), !dbg !4284
  %96 = getelementptr inbounds i8, i8* %93, i32 1, !dbg !4289
  call void @llvm.dbg.value(metadata i8* %96, metadata !4174, metadata !DIExpression()), !dbg !4224
  call void @llvm.dbg.value(metadata i8 undef, metadata !4189, metadata !DIExpression()), !dbg !4290
  %97 = getelementptr inbounds i8, i8* %93, i32 2, !dbg !4291
  call void @llvm.dbg.value(metadata i8* %97, metadata !4174, metadata !DIExpression()), !dbg !4224
  %98 = load i8, i8* %96, align 1, !dbg !4292
  call void @llvm.dbg.value(metadata i8 %98, metadata !4192, metadata !DIExpression()), !dbg !4290
  %99 = zext i8 %98 to i32, !dbg !4293
  %100 = getelementptr inbounds i32, i32* %11, i32 %99, !dbg !4293
  %101 = bitcast i32* %100 to i8**, !dbg !4294
  %102 = load i8*, i8** %101, align 4, !dbg !4294
  call void @llvm.dbg.value(metadata i8* %102, metadata !4193, metadata !DIExpression()), !dbg !4290
  %103 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %102) #26, !dbg !4295
  call void @llvm.dbg.value(metadata i1 %103, metadata !4194, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4290
  br i1 %13, label %110, label %104, !dbg !4296

104:                                              ; preds = %91
  %105 = load i8, i8* %93, align 1, !dbg !4298
  call void @llvm.dbg.value(metadata i8 %105, metadata !4189, metadata !DIExpression()), !dbg !4290
  %106 = zext i8 %105 to i32, !dbg !4299
  %107 = tail call zeroext i1 @is_ptr(i8* noundef %44, i32 noundef %106) #26, !dbg !4300
  br i1 %107, label %108, label %110, !dbg !4301

108:                                              ; preds = %104
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.1.10, i32 0, i32 0), i32 noundef 87, i8* noundef %44, i32 noundef %106) #27, !dbg !4302
  %109 = add nsw i32 %92, -2, !dbg !4308
  call void @llvm.dbg.value(metadata i32 %109, metadata !4172, metadata !DIExpression()), !dbg !4224
  br label %127, !dbg !4309

110:                                              ; preds = %104, %91
  br i1 %103, label %111, label %114, !dbg !4310

111:                                              ; preds = %110
  br i1 %88, label %112, label %115, !dbg !4311

112:                                              ; preds = %111
  %113 = add i32 %92, %90, !dbg !4313
  call void @llvm.dbg.value(metadata i32 %113, metadata !4172, metadata !DIExpression()), !dbg !4224
  br label %127, !dbg !4316

114:                                              ; preds = %110
  br i1 %87, label %127, label %115, !dbg !4317

115:                                              ; preds = %114, %111
  call void @llvm.dbg.label(metadata !4220), !dbg !4318
  %116 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %102, i16 noundef zeroext 0) #26, !dbg !4319
  call void @llvm.dbg.value(metadata i32 %116, metadata !4195, metadata !DIExpression()), !dbg !4290
  %117 = icmp ult i32 %94, %6
  %118 = select i1 %89, i1 %117, i1 false, !dbg !4320
  br i1 %118, label %119, label %123, !dbg !4320

119:                                              ; preds = %115
  %120 = trunc i32 %116 to i16, !dbg !4322
  %121 = add nuw i32 %94, 1, !dbg !4324
  call void @llvm.dbg.value(metadata i32 %121, metadata !4175, metadata !DIExpression()), !dbg !4224
  %122 = getelementptr inbounds i16, i16* %5, i32 %94, !dbg !4325
  store i16 %120, i16* %122, align 2, !dbg !4326
  br label %123, !dbg !4327

123:                                              ; preds = %119, %115
  %124 = phi i32 [ %121, %119 ], [ %94, %115 ], !dbg !4224
  call void @llvm.dbg.value(metadata i32 %124, metadata !4175, metadata !DIExpression()), !dbg !4224
  %125 = add i32 %92, -1, !dbg !4328
  %126 = add i32 %125, %116, !dbg !4329
  call void @llvm.dbg.value(metadata i32 %126, metadata !4172, metadata !DIExpression()), !dbg !4224
  br label %127, !dbg !4330

127:                                              ; preds = %112, %123, %114, %108
  %128 = phi i32 [ %94, %108 ], [ %124, %123 ], [ %94, %112 ], [ %94, %114 ], !dbg !4224
  %129 = phi i32 [ %109, %108 ], [ %126, %123 ], [ %113, %112 ], [ %92, %114 ], !dbg !4290
  call void @llvm.dbg.value(metadata i32 %129, metadata !4172, metadata !DIExpression()), !dbg !4224
  call void @llvm.dbg.value(metadata i32 %128, metadata !4175, metadata !DIExpression()), !dbg !4224
  %130 = add nuw nsw i32 %95, 1, !dbg !4331
  call void @llvm.dbg.value(metadata i8* %97, metadata !4174, metadata !DIExpression()), !dbg !4224
  call void @llvm.dbg.value(metadata i32 %130, metadata !4187, metadata !DIExpression()), !dbg !4284
  %131 = icmp eq i32 %130, %28, !dbg !4285
  br i1 %131, label %267, label %91, !dbg !4286, !llvm.loop !4332

132:                                              ; preds = %38
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !4197, metadata !DIExpression()), !dbg !4334
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !4198, metadata !DIExpression()), !dbg !4335
  br i1 %25, label %133, label %135, !dbg !4336

133:                                              ; preds = %132
  call void @llvm.dbg.value(metadata i8 %20, metadata !4199, metadata !DIExpression()), !dbg !4224
  call void @llvm.dbg.value(metadata i8 0, metadata !4200, metadata !DIExpression()), !dbg !4224
  %134 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !4337
  call void @llvm.dbg.value(metadata i8* %134, metadata !4201, metadata !DIExpression()), !dbg !4224
  br label %140, !dbg !4340

135:                                              ; preds = %132
  %136 = and i32 %4, 4
  %137 = icmp ne i32 %136, 0
  %138 = and i1 %137, %22, !dbg !4341
  %139 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %138, label %140, label %145, !dbg !4341

140:                                              ; preds = %133, %135
  %141 = phi i8 [ 0, %135 ], [ %20, %133 ]
  %142 = phi i8 [ %20, %135 ], [ 0, %133 ]
  %143 = phi i8* [ %139, %135 ], [ %134, %133 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !4201, metadata !DIExpression()), !dbg !4224
  call void @llvm.dbg.value(metadata i8 undef, metadata !4200, metadata !DIExpression()), !dbg !4224
  call void @llvm.dbg.value(metadata i8 0, metadata !4199, metadata !DIExpression()), !dbg !4224
  %144 = call i8* @memcpy(i8* noundef nonnull %143, i8* noundef nonnull %45, i32 noundef %21) #27, !dbg !4343
  br label %145, !dbg !4346

145:                                              ; preds = %135, %140
  %146 = phi i8 [ %142, %140 ], [ 0, %135 ]
  %147 = phi i8 [ %141, %140 ], [ 0, %135 ]
  %148 = getelementptr inbounds i8, i8* %45, i32 %21, !dbg !4347
  call void @llvm.dbg.value(metadata i8* %148, metadata !4174, metadata !DIExpression()), !dbg !4224
  call void @llvm.dbg.value(metadata i32 0, metadata !4203, metadata !DIExpression()), !dbg !4348
  call void @llvm.dbg.value(metadata i8 %146, metadata !4200, metadata !DIExpression()), !dbg !4224
  call void @llvm.dbg.value(metadata i8 %147, metadata !4199, metadata !DIExpression()), !dbg !4224
  %149 = icmp eq i8 %27, 0, !dbg !4349
  br i1 %149, label %150, label %152, !dbg !4350

150:                                              ; preds = %145
  %151 = and i32 %4, 4, !dbg !4351
  br label %157, !dbg !4350

152:                                              ; preds = %145
  %153 = icmp eq i32 %30, 0
  %154 = icmp eq i32 %23, 0
  %155 = and i32 %4, 4
  %156 = icmp eq i32 %155, 0
  br label %176, !dbg !4350

157:                                              ; preds = %215, %150
  %158 = phi i32 [ %151, %150 ], [ %155, %215 ], !dbg !4351
  %159 = phi i8 [ %147, %150 ], [ %216, %215 ], !dbg !4352
  %160 = phi i8 [ %146, %150 ], [ %217, %215 ], !dbg !4353
  %161 = phi i8* [ %148, %150 ], [ %183, %215 ], !dbg !4224
  call void @llvm.dbg.value(metadata i8 undef, metadata !4196, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !4224
  %162 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4354
  %163 = load i8, i8* %162, align 1, !dbg !4354
  %164 = zext i8 %159 to i32, !dbg !4355
  %165 = add i8 %163, %159, !dbg !4356
  call void @llvm.dbg.value(metadata i8 %165, metadata !4196, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !4224
  %166 = icmp eq i32 %30, 0, !dbg !4357
  %167 = lshr i8 %160, 1, !dbg !4358
  %168 = select i1 %166, i8 %167, i8 0, !dbg !4358
  call void @llvm.dbg.value(metadata i8 %168, metadata !4196, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !4224
  %169 = icmp eq i32 %23, 0, !dbg !4359
  %170 = icmp eq i32 %158, 0, !dbg !4351
  %171 = select i1 %170, i8 0, i8 %160, !dbg !4351
  %172 = select i1 %169, i8 %171, i8 0, !dbg !4351
  call void @llvm.dbg.value(metadata i8 %172, metadata !4196, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !4224
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !4211, metadata !DIExpression()), !dbg !4360
  %173 = load i32, i32* %11, align 1, !dbg !4361
  store i8 %165, i8* %162, align 1, !dbg !4362
  store i8 %172, i8* %19, align 1, !dbg !4362
  store i8 %168, i8* %26, align 1, !dbg !4362
  %174 = call i32 %2(i8* noundef nonnull %0, i32 noundef %41, i8* noundef %3) #27, !dbg !4363
  call void @llvm.dbg.value(metadata i32 %174, metadata !4202, metadata !DIExpression()), !dbg !4224
  %175 = icmp slt i32 %174, 0, !dbg !4364
  br i1 %175, label %267, label %220, !dbg !4366

176:                                              ; preds = %152, %215
  %177 = phi i8* [ %148, %152 ], [ %183, %215 ]
  %178 = phi i32 [ 0, %152 ], [ %218, %215 ]
  %179 = phi i8 [ %146, %152 ], [ %217, %215 ]
  %180 = phi i8 [ %147, %152 ], [ %216, %215 ]
  call void @llvm.dbg.value(metadata i8* %177, metadata !4174, metadata !DIExpression()), !dbg !4224
  call void @llvm.dbg.value(metadata i32 %178, metadata !4203, metadata !DIExpression()), !dbg !4348
  call void @llvm.dbg.value(metadata i8 %179, metadata !4200, metadata !DIExpression()), !dbg !4224
  call void @llvm.dbg.value(metadata i8 %180, metadata !4199, metadata !DIExpression()), !dbg !4224
  %181 = getelementptr inbounds i8, i8* %177, i32 1, !dbg !4367
  call void @llvm.dbg.value(metadata i8* %181, metadata !4174, metadata !DIExpression()), !dbg !4224
  %182 = load i8, i8* %177, align 1, !dbg !4368
  call void @llvm.dbg.value(metadata i8 %182, metadata !4205, metadata !DIExpression()), !dbg !4369
  %183 = getelementptr inbounds i8, i8* %177, i32 2, !dbg !4370
  call void @llvm.dbg.value(metadata i8* %183, metadata !4174, metadata !DIExpression()), !dbg !4224
  %184 = load i8, i8* %181, align 1, !dbg !4371
  call void @llvm.dbg.value(metadata i8 %184, metadata !4208, metadata !DIExpression()), !dbg !4369
  %185 = zext i8 %184 to i32, !dbg !4372
  %186 = getelementptr inbounds i32, i32* %11, i32 %185, !dbg !4372
  %187 = bitcast i32* %186 to i8**, !dbg !4373
  %188 = load i8*, i8** %187, align 4, !dbg !4373
  call void @llvm.dbg.value(metadata i8* %188, metadata !4209, metadata !DIExpression()), !dbg !4369
  %189 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %188) #26, !dbg !4374
  call void @llvm.dbg.value(metadata i1 %189, metadata !4210, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4369
  br i1 %13, label %193, label %190, !dbg !4375

190:                                              ; preds = %176
  %191 = zext i8 %182 to i32, !dbg !4377
  %192 = call zeroext i1 @is_ptr(i8* noundef %44, i32 noundef %191) #26, !dbg !4378
  br i1 %192, label %215, label %193, !dbg !4379

193:                                              ; preds = %190, %176
  br i1 %189, label %194, label %200, !dbg !4380

194:                                              ; preds = %193
  br i1 %154, label %197, label %195, !dbg !4381

195:                                              ; preds = %194
  %196 = add i8 %180, 1, !dbg !4384
  call void @llvm.dbg.value(metadata i8 %196, metadata !4199, metadata !DIExpression()), !dbg !4224
  br label %208, !dbg !4387

197:                                              ; preds = %194
  br i1 %156, label %215, label %198, !dbg !4388

198:                                              ; preds = %197
  %199 = add i8 %179, 1, !dbg !4389
  call void @llvm.dbg.value(metadata i8 %199, metadata !4200, metadata !DIExpression()), !dbg !4224
  br label %208, !dbg !4392

200:                                              ; preds = %193
  br i1 %153, label %203, label %201, !dbg !4393

201:                                              ; preds = %200
  %202 = add i8 %180, 1, !dbg !4395
  call void @llvm.dbg.value(metadata i8 %202, metadata !4199, metadata !DIExpression()), !dbg !4224
  br label %208, !dbg !4398

203:                                              ; preds = %200
  %204 = add i8 %179, 1, !dbg !4399
  call void @llvm.dbg.value(metadata i8 %204, metadata !4200, metadata !DIExpression()), !dbg !4224
  %205 = zext i8 %179 to i32, !dbg !4401
  %206 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %205, !dbg !4401
  store i8 %182, i8* %206, align 1, !dbg !4402
  %207 = add i8 %179, 2, !dbg !4403
  call void @llvm.dbg.value(metadata i8 %207, metadata !4200, metadata !DIExpression()), !dbg !4224
  br label %208

208:                                              ; preds = %201, %203, %195, %198
  %209 = phi i8 [ %179, %198 ], [ %180, %195 ], [ %204, %203 ], [ %180, %201 ]
  %210 = phi [16 x i8]* [ %9, %198 ], [ %8, %195 ], [ %9, %203 ], [ %8, %201 ]
  %211 = phi i8 [ %180, %198 ], [ %196, %195 ], [ %180, %203 ], [ %202, %201 ]
  %212 = phi i8 [ %199, %198 ], [ %179, %195 ], [ %207, %203 ], [ %179, %201 ]
  %213 = zext i8 %209 to i32, !dbg !4404
  %214 = getelementptr inbounds [16 x i8], [16 x i8]* %210, i32 0, i32 %213, !dbg !4404
  store i8 %184, i8* %214, align 1, !dbg !4404
  br label %215, !dbg !4405

215:                                              ; preds = %208, %197, %190
  %216 = phi i8 [ %180, %190 ], [ %180, %197 ], [ %211, %208 ], !dbg !4224
  %217 = phi i8 [ %179, %190 ], [ %179, %197 ], [ %212, %208 ], !dbg !4353
  call void @llvm.dbg.value(metadata i8 %217, metadata !4200, metadata !DIExpression()), !dbg !4224
  call void @llvm.dbg.value(metadata i8 %216, metadata !4199, metadata !DIExpression()), !dbg !4224
  %218 = add nuw nsw i32 %178, 1, !dbg !4405
  call void @llvm.dbg.value(metadata i8* %183, metadata !4174, metadata !DIExpression()), !dbg !4224
  call void @llvm.dbg.value(metadata i32 %218, metadata !4203, metadata !DIExpression()), !dbg !4348
  %219 = icmp eq i32 %218, %28, !dbg !4349
  br i1 %219, label %157, label %176, !dbg !4350, !llvm.loop !4406

220:                                              ; preds = %157
  %221 = zext i8 %160 to i32, !dbg !4358
  call void @llvm.dbg.value(metadata i32 %174, metadata !4172, metadata !DIExpression()), !dbg !4224
  store i32 %173, i32* %11, align 1, !dbg !4408
  %222 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4409
  %223 = call i32 %2(i8* noundef nonnull %222, i32 noundef %221, i8* noundef %3) #27, !dbg !4410
  call void @llvm.dbg.value(metadata i32 %223, metadata !4202, metadata !DIExpression()), !dbg !4224
  %224 = icmp slt i32 %223, 0, !dbg !4411
  br i1 %224, label %267, label %225, !dbg !4413

225:                                              ; preds = %220
  call void @llvm.dbg.value(metadata !DIArgList(i32 %174, i32 %223), metadata !4172, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4224
  %226 = mul nsw i32 %28, -2
  %227 = add i32 %18, %226, !dbg !4414
  %228 = add nuw nsw i32 %41, %21, !dbg !4414
  %229 = sub i32 %227, %228, !dbg !4414
  call void @llvm.dbg.value(metadata i32 %229, metadata !4212, metadata !DIExpression()), !dbg !4224
  %230 = call i32 %2(i8* noundef %161, i32 noundef %229, i8* noundef %3) #27, !dbg !4415
  call void @llvm.dbg.value(metadata i32 %230, metadata !4202, metadata !DIExpression()), !dbg !4224
  %231 = icmp slt i32 %230, 0, !dbg !4416
  br i1 %231, label %267, label %232, !dbg !4418

232:                                              ; preds = %225
  %233 = add nuw nsw i32 %223, %174, !dbg !4419
  call void @llvm.dbg.value(metadata i32 %233, metadata !4172, metadata !DIExpression()), !dbg !4224
  %234 = add nuw nsw i32 %233, %230, !dbg !4420
  call void @llvm.dbg.value(metadata i32 %234, metadata !4172, metadata !DIExpression()), !dbg !4224
  call void @llvm.dbg.value(metadata i32 0, metadata !4213, metadata !DIExpression()), !dbg !4421
  %235 = icmp eq i8 %159, 0, !dbg !4422
  br i1 %235, label %264, label %236, !dbg !4423

236:                                              ; preds = %232
  %237 = icmp eq i16* %5, null
  br label %238, !dbg !4423

238:                                              ; preds = %236, %259
  %239 = phi i32 [ 0, %236 ], [ %262, %259 ]
  %240 = phi i32 [ %234, %236 ], [ %261, %259 ]
  call void @llvm.dbg.value(metadata i32 %239, metadata !4213, metadata !DIExpression()), !dbg !4421
  call void @llvm.dbg.value(metadata i32 %240, metadata !4172, metadata !DIExpression()), !dbg !4224
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #25, !dbg !4424
  %241 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %239, !dbg !4425
  %242 = load i8, i8* %241, align 1, !dbg !4425
  call void @llvm.dbg.value(metadata i8 %242, metadata !4215, metadata !DIExpression()), !dbg !4426
  store i8 %242, i8* %10, align 1, !dbg !4427
  %243 = zext i8 %242 to i32, !dbg !4428
  %244 = getelementptr inbounds i32, i32* %11, i32 %243, !dbg !4428
  %245 = bitcast i32* %244 to i8**, !dbg !4429
  %246 = load i8*, i8** %245, align 4, !dbg !4429
  call void @llvm.dbg.value(metadata i8* %246, metadata !4218, metadata !DIExpression()), !dbg !4426
  br i1 %237, label %250, label %247, !dbg !4430

247:                                              ; preds = %238
  %248 = getelementptr inbounds i16, i16* %5, i32 %239, !dbg !4431
  %249 = load i16, i16* %248, align 2, !dbg !4431
  br label %250, !dbg !4430

250:                                              ; preds = %238, %247
  %251 = phi i16 [ %249, %247 ], [ 0, %238 ], !dbg !4430
  call void @llvm.dbg.value(metadata i32 undef, metadata !4219, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4426
  call void @llvm.dbg.value(metadata i8* %10, metadata !4215, metadata !DIExpression(DW_OP_deref)), !dbg !4426
  %252 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #27, !dbg !4432
  call void @llvm.dbg.value(metadata i32 %252, metadata !4202, metadata !DIExpression()), !dbg !4224
  %253 = icmp slt i32 %252, 0, !dbg !4433
  br i1 %253, label %257, label %254, !dbg !4435

254:                                              ; preds = %250
  call void @llvm.dbg.value(metadata i16 %251, metadata !4219, metadata !DIExpression()), !dbg !4426
  call void @llvm.dbg.value(metadata !DIArgList(i32 %240, i32 %252), metadata !4172, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4224
  %255 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %246, i16 noundef zeroext %251) #26, !dbg !4436
  call void @llvm.dbg.value(metadata i32 %255, metadata !4202, metadata !DIExpression()), !dbg !4224
  %256 = icmp slt i32 %255, 0, !dbg !4437
  br i1 %256, label %257, label %259, !dbg !4439

257:                                              ; preds = %254, %250
  %258 = phi i32 [ %255, %254 ], [ %252, %250 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4172, metadata !DIExpression()), !dbg !4224
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #25, !dbg !4440
  call void @llvm.dbg.value(metadata i32 undef, metadata !4172, metadata !DIExpression()), !dbg !4224
  br label %267

259:                                              ; preds = %254
  %260 = add nsw i32 %252, %240, !dbg !4441
  call void @llvm.dbg.value(metadata i32 %260, metadata !4172, metadata !DIExpression()), !dbg !4224
  %261 = add nsw i32 %260, %255, !dbg !4442
  call void @llvm.dbg.value(metadata i32 %261, metadata !4172, metadata !DIExpression()), !dbg !4224
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #25, !dbg !4440
  %262 = add nuw nsw i32 %239, 1, !dbg !4443
  call void @llvm.dbg.value(metadata i32 %262, metadata !4213, metadata !DIExpression()), !dbg !4421
  %263 = icmp eq i32 %262, %164, !dbg !4422
  br i1 %263, label %264, label %238, !dbg !4423, !llvm.loop !4444

264:                                              ; preds = %259, %232
  %265 = phi i32 [ %234, %232 ], [ %261, %259 ], !dbg !4420
  call void @llvm.dbg.value(metadata i32 %265, metadata !4172, metadata !DIExpression()), !dbg !4224
  %266 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #27, !dbg !4446
  br label %267, !dbg !4447

267:                                              ; preds = %127, %79, %257, %264, %157, %220, %225, %34, %36
  %268 = phi i32 [ %18, %36 ], [ %18, %34 ], [ %265, %264 ], [ %174, %157 ], [ %223, %220 ], [ %230, %225 ], [ %258, %257 ], [ %82, %79 ], [ %129, %127 ], !dbg !4224
  ret i32 %268, !dbg !4448
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4449 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4453, metadata !DIExpression()), !dbg !4461
  call void @llvm.dbg.value(metadata i8* %0, metadata !4454, metadata !DIExpression()), !dbg !4461
  call void @llvm.dbg.value(metadata i8* %0, metadata !4455, metadata !DIExpression()), !dbg !4461
  %2 = load i8, i8* %0, align 1, !dbg !4462
  %3 = zext i8 %2 to i32, !dbg !4462
  %4 = shl nuw nsw i32 %3, 2, !dbg !4463
  call void @llvm.dbg.value(metadata i32 %4, metadata !4456, metadata !DIExpression()), !dbg !4461
  %5 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4464
  %6 = load i8, i8* %5, align 1, !dbg !4464
  %7 = zext i8 %6 to i32, !dbg !4464
  call void @llvm.dbg.value(metadata i32 %7, metadata !4457, metadata !DIExpression()), !dbg !4461
  %8 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4465
  %9 = load i8, i8* %8, align 1, !dbg !4465
  %10 = zext i8 %9 to i32, !dbg !4465
  call void @llvm.dbg.value(metadata i32 %10, metadata !4458, metadata !DIExpression()), !dbg !4461
  %11 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !4466
  call void @llvm.dbg.value(metadata i8* %11, metadata !4454, metadata !DIExpression()), !dbg !4461
  %12 = getelementptr inbounds i8, i8* %11, i32 %10, !dbg !4467
  call void @llvm.dbg.value(metadata i8* %12, metadata !4454, metadata !DIExpression()), !dbg !4461
  call void @llvm.dbg.value(metadata i32 0, metadata !4459, metadata !DIExpression()), !dbg !4468
  %13 = icmp eq i8 %6, 0, !dbg !4469
  br i1 %13, label %14, label %19, !dbg !4471

14:                                               ; preds = %19, %1
  %15 = phi i8* [ %12, %1 ], [ %25, %19 ], !dbg !4461
  %16 = ptrtoint i8* %15 to i32, !dbg !4472
  %17 = ptrtoint i8* %0 to i32, !dbg !4472
  %18 = sub i32 %16, %17, !dbg !4472
  ret i32 %18, !dbg !4473

19:                                               ; preds = %1, %19
  %20 = phi i32 [ %26, %19 ], [ 0, %1 ]
  %21 = phi i8* [ %25, %19 ], [ %12, %1 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !4459, metadata !DIExpression()), !dbg !4468
  call void @llvm.dbg.value(metadata i8* %21, metadata !4454, metadata !DIExpression()), !dbg !4461
  %22 = getelementptr inbounds i8, i8* %21, i32 1, !dbg !4474
  call void @llvm.dbg.value(metadata i8* %22, metadata !4454, metadata !DIExpression()), !dbg !4461
  %23 = tail call i32 @strlen(i8* noundef nonnull %22) #27, !dbg !4476
  %24 = add i32 %23, 1, !dbg !4477
  %25 = getelementptr inbounds i8, i8* %22, i32 %24, !dbg !4478
  call void @llvm.dbg.value(metadata i8* %25, metadata !4454, metadata !DIExpression()), !dbg !4461
  %26 = add nuw nsw i32 %20, 1, !dbg !4479
  call void @llvm.dbg.value(metadata i32 %26, metadata !4459, metadata !DIExpression()), !dbg !4468
  %27 = icmp eq i32 %26, %7, !dbg !4469
  br i1 %27, label %14, label %19, !dbg !4471, !llvm.loop !4480
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !4482 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !4486, metadata !DIExpression()), !dbg !4490
  call void @llvm.dbg.value(metadata i8* %1, metadata !4487, metadata !DIExpression()), !dbg !4490
  call void @llvm.dbg.value(metadata i8* %2, metadata !4488, metadata !DIExpression()), !dbg !4490
  call void @llvm.dbg.value(metadata i16 %3, metadata !4489, metadata !DIExpression()), !dbg !4490
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !4491
  br i1 %5, label %6, label %9, !dbg !4493

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #27, !dbg !4494
  %8 = add i32 %7, 1, !dbg !4496
  br label %20, !dbg !4497

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !4498
  br i1 %10, label %13, label %11, !dbg !4499

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !4499
  br label %16, !dbg !4499

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #27, !dbg !4500
  %15 = add i32 %14, 1, !dbg !4501
  br label %16, !dbg !4499

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !4499
  %18 = and i32 %17, 65535, !dbg !4502
  call void @llvm.dbg.value(metadata i32 %17, metadata !4489, metadata !DIExpression()), !dbg !4490
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #27, !dbg !4503
  br label %20, !dbg !4504

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !4490
  ret i32 %21, !dbg !4505
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !4506 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4508, metadata !DIExpression()), !dbg !4509
  ret i32 0, !dbg !4510
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #8 !dbg !4511 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !4515, metadata !DIExpression()), !dbg !4516
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !4517
  ret void, !dbg !4518
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #4 !dbg !4519 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !4522
  ret i8* %1, !dbg !4523
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !4524 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4535, metadata !DIExpression()), !dbg !4544
  call void @llvm.dbg.value(metadata i8* %0, metadata !4534, metadata !DIExpression()), !dbg !4544
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #26, !dbg !4545
  ret void, !dbg !4547
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !4548 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4552, metadata !DIExpression()), !dbg !4554
  call void @llvm.dbg.value(metadata i8* %1, metadata !4553, metadata !DIExpression()), !dbg !4554
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4555
  %4 = tail call i32 %3(i32 noundef %0) #27, !dbg !4555
  ret i32 %4, !dbg !4556
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !4557 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4564, metadata !DIExpression()), !dbg !4565
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4561, metadata !DIExpression()), !dbg !4565
  call void @llvm.dbg.value(metadata i8* %1, metadata !4562, metadata !DIExpression()), !dbg !4565
  call void @llvm.dbg.value(metadata i8* %2, metadata !4563, metadata !DIExpression()), !dbg !4565
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #27, !dbg !4566
  ret void, !dbg !4567
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !4568 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4572, metadata !DIExpression()), !dbg !4575
  call void @llvm.dbg.value(metadata i32 %1, metadata !4573, metadata !DIExpression()), !dbg !4575
  call void @llvm.dbg.value(metadata i32 0, metadata !4574, metadata !DIExpression()), !dbg !4575
  %3 = icmp eq i32 %1, 0, !dbg !4576
  br i1 %3, label %13, label %4, !dbg !4579

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !4574, metadata !DIExpression()), !dbg !4575
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4580
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !4582
  %8 = load i8, i8* %7, align 1, !dbg !4582
  %9 = zext i8 %8 to i32, !dbg !4582
  %10 = tail call i32 %6(i32 noundef %9) #27, !dbg !4580
  %11 = add nuw i32 %5, 1, !dbg !4583
  call void @llvm.dbg.value(metadata i32 %11, metadata !4574, metadata !DIExpression()), !dbg !4575
  %12 = icmp eq i32 %11, %1, !dbg !4576
  br i1 %12, label %13, label %4, !dbg !4579, !llvm.loop !4584

13:                                               ; preds = %4, %2
  ret void, !dbg !4586
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !4587 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4591, metadata !DIExpression()), !dbg !4593
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !4594
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !4594
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !4592, metadata !DIExpression()), !dbg !4595
  call void @llvm.va_start(i8* nonnull %3), !dbg !4596
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !4597
  %5 = load i32, i32* %4, align 4, !dbg !4597
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !4597
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #26, !dbg !4597
  call void @llvm.va_end(i8* nonnull %3), !dbg !4598
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !4599
  ret void, !dbg !4599
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !4600 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4604, metadata !DIExpression()), !dbg !4609
  call void @llvm.dbg.value(metadata i32 %1, metadata !4605, metadata !DIExpression()), !dbg !4609
  call void @llvm.dbg.value(metadata i8* %2, metadata !4606, metadata !DIExpression()), !dbg !4609
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !4610
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !4610
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !4607, metadata !DIExpression()), !dbg !4611
  call void @llvm.va_start(i8* nonnull %5), !dbg !4612
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !4613
  %7 = load i32, i32* %6, align 4, !dbg !4613
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !4613
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #26, !dbg !4613
  call void @llvm.dbg.value(metadata i32 %9, metadata !4608, metadata !DIExpression()), !dbg !4609
  call void @llvm.va_end(i8* nonnull %5), !dbg !4614
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !4615
  ret i32 %9, !dbg !4616
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !4617 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !4624, metadata !DIExpression()), !dbg !4631
  call void @llvm.dbg.value(metadata i8* %0, metadata !4621, metadata !DIExpression()), !dbg !4631
  call void @llvm.dbg.value(metadata i32 %1, metadata !4622, metadata !DIExpression()), !dbg !4631
  call void @llvm.dbg.value(metadata i8* %2, metadata !4623, metadata !DIExpression()), !dbg !4631
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !4632
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #25, !dbg !4632
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !4625, metadata !DIExpression()), !dbg !4633
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !4634
  store i8* %0, i8** %7, align 4, !dbg !4634
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !4634
  store i32 %1, i32* %8, align 4, !dbg !4634
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !4634
  store i32 0, i32* %9, align 4, !dbg !4634
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #26, !dbg !4635
  %10 = load i32, i32* %9, align 4, !dbg !4636
  %11 = load i32, i32* %8, align 4, !dbg !4638
  %12 = icmp slt i32 %10, %11, !dbg !4639
  br i1 %12, label %13, label %15, !dbg !4640

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !4641
  store i8 0, i8* %14, align 1, !dbg !4643
  br label %15, !dbg !4644

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #25, !dbg !4645
  ret i32 %10, !dbg !4646
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #9 !dbg !4647 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4652, metadata !DIExpression()), !dbg !4654
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !4653, metadata !DIExpression()), !dbg !4654
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !4655
  %4 = load i8*, i8** %3, align 4, !dbg !4655
  %5 = icmp eq i8* %4, null, !dbg !4657
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !4658
  br i1 %5, label %12, label %8, !dbg !4659

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !4660
  %10 = load i32, i32* %9, align 4, !dbg !4660
  %11 = icmp slt i32 %7, %10, !dbg !4661
  br i1 %11, label %15, label %12, !dbg !4662

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !4663
  %14 = add nsw i32 %7, 1, !dbg !4665
  store i32 %14, i32* %13, align 4, !dbg !4665
  br label %25, !dbg !4666

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !4667
  %17 = icmp eq i32 %7, %16, !dbg !4669
  br i1 %17, label %18, label %21, !dbg !4670

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !4671
  store i32 %19, i32* %6, align 4, !dbg !4671
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4673
  store i8 0, i8* %20, align 1, !dbg !4674
  br label %25, !dbg !4675

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !4676
  %23 = add nsw i32 %7, 1, !dbg !4678
  store i32 %23, i32* %6, align 4, !dbg !4678
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4679
  store i8 %22, i8* %24, align 1, !dbg !4680
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !4681
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #10 !dbg !4682 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !4687, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i8* %1, metadata !4688, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i8* %2, metadata !4689, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i8* %3, metadata !4690, metadata !DIExpression()), !dbg !4691
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !4692
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #28, !dbg !4693
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #26, !dbg !4694
  unreachable, !dbg !4695
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #11 !dbg !4696 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #28, !dbg !4800
  ret %struct.k_thread* %1, !dbg !4801
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !4802 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !4806, metadata !DIExpression()), !dbg !4807
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !4808, !srcloc !4810
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !4811
  ret void, !dbg !4812
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #11 !dbg !4813 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !4814, !srcloc !4816
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !4817
  ret %struct.k_thread* %1, !dbg !4818
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #12 !dbg !4819 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4830, metadata !DIExpression()), !dbg !4834
  call void @llvm.dbg.value(metadata i8* %1, metadata !4831, metadata !DIExpression()), !dbg !4834
  %3 = icmp eq i8* %1, null, !dbg !4835
  br i1 %3, label %8, label %4, !dbg !4837

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4838
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !4838
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !4832, metadata !DIExpression()), !dbg !4834
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !4839, !range !4840
  call void @llvm.dbg.value(metadata i32 %7, metadata !4833, metadata !DIExpression()), !dbg !4834
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #26, !dbg !4841
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #26, !dbg !4842
  br label %8

8:                                                ; preds = %2, %4
  ret void, !dbg !4843
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #5 !dbg !4844 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4848, metadata !DIExpression()), !dbg !4852
  call void @llvm.dbg.value(metadata i8* %1, metadata !4849, metadata !DIExpression()), !dbg !4852
  call void @llvm.dbg.value(metadata i8* %1, metadata !4850, metadata !DIExpression()), !dbg !4852
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4853
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !4851, metadata !DIExpression()), !dbg !4852
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !4854
  %5 = ptrtoint i8* %4 to i32, !dbg !4855
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !4855
  %7 = sub i32 %5, %6, !dbg !4855
  %8 = lshr i32 %7, 3, !dbg !4856
  ret i32 %8, !dbg !4857
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #9 !dbg !4858 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4862, metadata !DIExpression()), !dbg !4867
  call void @llvm.dbg.value(metadata i32 %1, metadata !4863, metadata !DIExpression()), !dbg !4867
  call void @llvm.dbg.value(metadata i1 %2, metadata !4864, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4867
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4868
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !4865, metadata !DIExpression()), !dbg !4867
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4866, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4867
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !4869
  %6 = bitcast i8* %5 to i16*, !dbg !4869
  %7 = load i16, i16* %6, align 2, !dbg !4869
  %8 = and i16 %7, -2, !dbg !4873
  %9 = zext i1 %2 to i16, !dbg !4873
  %10 = or i16 %8, %9, !dbg !4873
  store i16 %10, i16* %6, align 2, !dbg !4869
  ret void, !dbg !4874
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !4875 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4879, metadata !DIExpression()), !dbg !4881
  call void @llvm.dbg.value(metadata i32 %1, metadata !4880, metadata !DIExpression()), !dbg !4881
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4882
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !4884
  br i1 %4, label %7, label %5, !dbg !4885

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !4886
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4888
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !4889
  br label %7, !dbg !4890

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4891, !range !4893
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !4894
  br i1 %9, label %13, label %10, !dbg !4895

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !4896
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4898, !range !4893
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #26, !dbg !4899
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4900
  call void @llvm.dbg.value(metadata i32 %12, metadata !4880, metadata !DIExpression()), !dbg !4881
  br label %13, !dbg !4901

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !4880, metadata !DIExpression()), !dbg !4881
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #26, !dbg !4902
  ret void, !dbg !4903
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !4904 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4908, metadata !DIExpression()), !dbg !4910
  call void @llvm.dbg.value(metadata i32 %1, metadata !4909, metadata !DIExpression()), !dbg !4910
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4911
  %4 = add i32 %3, %1, !dbg !4912
  ret i32 %4, !dbg !4913
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !4914 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4918, metadata !DIExpression()), !dbg !4920
  call void @llvm.dbg.value(metadata i32 %1, metadata !4919, metadata !DIExpression()), !dbg !4920
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !4921
  %4 = and i32 %3, 1, !dbg !4922
  %5 = icmp ne i32 %4, 0, !dbg !4921
  ret i1 %5, !dbg !4923
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !4924 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4926, metadata !DIExpression()), !dbg !4931
  call void @llvm.dbg.value(metadata i32 %1, metadata !4927, metadata !DIExpression()), !dbg !4931
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4932, !range !4933
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !4934
  call void @llvm.dbg.value(metadata i32 %4, metadata !4928, metadata !DIExpression()), !dbg !4935
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !4936
  ret void, !dbg !4937
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !4938 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4942, metadata !DIExpression()), !dbg !4947
  call void @llvm.dbg.value(metadata i32 %1, metadata !4943, metadata !DIExpression()), !dbg !4947
  call void @llvm.dbg.value(metadata i32 %2, metadata !4944, metadata !DIExpression()), !dbg !4947
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4948
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !4949
  %6 = add i32 %5, %4, !dbg !4950
  call void @llvm.dbg.value(metadata i32 %6, metadata !4945, metadata !DIExpression()), !dbg !4947
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !4951
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !4952
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !4953
  ret void, !dbg !4954
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !4955 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4957, metadata !DIExpression()), !dbg !4959
  call void @llvm.dbg.value(metadata i32 %1, metadata !4958, metadata !DIExpression()), !dbg !4959
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #26, !dbg !4960
  %4 = sub i32 %1, %3, !dbg !4961
  ret i32 %4, !dbg !4962
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !4963 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4965, metadata !DIExpression()), !dbg !4970
  call void @llvm.dbg.value(metadata i32 %1, metadata !4966, metadata !DIExpression()), !dbg !4970
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4971, !range !4933
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !4972
  call void @llvm.dbg.value(metadata i32 %4, metadata !4967, metadata !DIExpression()), !dbg !4973
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !4974
  ret void, !dbg !4975
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !4976 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4980, metadata !DIExpression()), !dbg !4982
  call void @llvm.dbg.value(metadata i32 %1, metadata !4981, metadata !DIExpression()), !dbg !4982
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !4983
  %4 = lshr i32 %3, 1, !dbg !4984
  ret i32 %4, !dbg !4985
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4986 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4990, metadata !DIExpression()), !dbg !4993
  call void @llvm.dbg.value(metadata i32 %1, metadata !4991, metadata !DIExpression()), !dbg !4993
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #26, !dbg !4994
  %4 = add i32 %1, 1, !dbg !4995
  %5 = sub i32 %4, %3, !dbg !4996
  call void @llvm.dbg.value(metadata i32 %5, metadata !4992, metadata !DIExpression()), !dbg !4993
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !4997, !range !4998
  %7 = sub nsw i32 31, %6, !dbg !4999
  ret i32 %7, !dbg !5000
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !5001 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5005, metadata !DIExpression()), !dbg !5014
  call void @llvm.dbg.value(metadata i32 %1, metadata !5006, metadata !DIExpression()), !dbg !5014
  call void @llvm.dbg.value(metadata i32 %2, metadata !5007, metadata !DIExpression()), !dbg !5014
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !5008, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !5014
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, i32 0, !dbg !5015
  %5 = load i32, i32* %4, align 4, !dbg !5015
  %6 = icmp eq i32 %5, 0, !dbg !5016
  br i1 %6, label %7, label %12, !dbg !5017

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !5018
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5020
  %10 = load i32, i32* %9, align 4, !dbg !5021
  %11 = or i32 %10, %8, !dbg !5021
  store i32 %11, i32* %9, align 4, !dbg !5021
  store i32 %1, i32* %4, align 4, !dbg !5022
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !5023
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !5024
  br label %14, !dbg !5025

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !5010, metadata !DIExpression()), !dbg !5026
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #26, !dbg !5027, !range !5028
  call void @llvm.dbg.value(metadata i32 %13, metadata !5013, metadata !DIExpression()), !dbg !5026
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #26, !dbg !5029
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #26, !dbg !5030
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #26, !dbg !5031
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #26, !dbg !5032
  br label %14

14:                                               ; preds = %12, %7
  ret void, !dbg !5033
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !5034 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5036, metadata !DIExpression()), !dbg !5039
  call void @llvm.dbg.value(metadata i32 %1, metadata !5037, metadata !DIExpression()), !dbg !5039
  call void @llvm.dbg.value(metadata i32 %2, metadata !5038, metadata !DIExpression()), !dbg !5039
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #26, !dbg !5040
  ret void, !dbg !5041
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !5042 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5044, metadata !DIExpression()), !dbg !5047
  call void @llvm.dbg.value(metadata i32 %1, metadata !5045, metadata !DIExpression()), !dbg !5047
  call void @llvm.dbg.value(metadata i32 %2, metadata !5046, metadata !DIExpression()), !dbg !5047
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #26, !dbg !5048
  ret void, !dbg !5049
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #4 !dbg !5050 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5052, metadata !DIExpression()), !dbg !5054
  call void @llvm.dbg.value(metadata i32 %1, metadata !5053, metadata !DIExpression()), !dbg !5054
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #26, !dbg !5055
  ret i32 %3, !dbg !5056
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !5057 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5061, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i32 %1, metadata !5062, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i32 %2, metadata !5063, metadata !DIExpression()), !dbg !5066
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !5067
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !5064, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5065, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5066
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5065, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5066
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !5068
  call void @llvm.dbg.value(metadata i8* %5, metadata !5065, metadata !DIExpression()), !dbg !5066
  %6 = bitcast i8* %5 to i16*, !dbg !5069
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !5072
  %8 = load i16, i16* %7, align 2, !dbg !5072
  %9 = zext i16 %8 to i32, !dbg !5072
  ret i32 %9, !dbg !5073
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #5 !dbg !5074 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5078, metadata !DIExpression()), !dbg !5079
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !5080
  ret %struct.chunk_unit_t* %2, !dbg !5081
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #8 !dbg !5082 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5086, metadata !DIExpression()), !dbg !5092
  call void @llvm.dbg.value(metadata i32 %1, metadata !5087, metadata !DIExpression()), !dbg !5092
  call void @llvm.dbg.value(metadata i32 %2, metadata !5088, metadata !DIExpression()), !dbg !5092
  call void @llvm.dbg.value(metadata i32 %3, metadata !5089, metadata !DIExpression()), !dbg !5092
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !5093
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !5090, metadata !DIExpression()), !dbg !5092
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !5091, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5092
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !5094
  call void @llvm.dbg.value(metadata i8* %6, metadata !5091, metadata !DIExpression()), !dbg !5092
  %7 = trunc i32 %3 to i16, !dbg !5095
  %8 = bitcast i8* %6 to i16*, !dbg !5098
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !5099
  store i16 %7, i16* %9, align 2, !dbg !5100
  ret void, !dbg !5101
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #5 !dbg !5102 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5106, metadata !DIExpression()), !dbg !5107
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #26, !dbg !5108
  ret i32 %2, !dbg !5109
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #5 !dbg !5110 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5114, metadata !DIExpression()), !dbg !5116
  call void @llvm.dbg.value(metadata i32 %1, metadata !5115, metadata !DIExpression()), !dbg !5116
  %3 = add i32 %1, 4, !dbg !5117
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #26, !dbg !5118
  ret i32 %4, !dbg !5119
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #5 !dbg !5120 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5124, metadata !DIExpression()), !dbg !5125
  %2 = add i32 %0, 7, !dbg !5126
  %3 = lshr i32 %2, 3, !dbg !5127
  ret i32 %3, !dbg !5128
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !5129 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5133, metadata !DIExpression()), !dbg !5136
  call void @llvm.dbg.value(metadata i32 %1, metadata !5134, metadata !DIExpression()), !dbg !5136
  call void @llvm.dbg.value(metadata i32 %2, metadata !5135, metadata !DIExpression()), !dbg !5136
  %4 = shl i32 %2, 1, !dbg !5137
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #26, !dbg !5138
  ret void, !dbg !5139
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !5140 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5142, metadata !DIExpression()), !dbg !5145
  call void @llvm.dbg.value(metadata i32 %1, metadata !5143, metadata !DIExpression()), !dbg !5145
  call void @llvm.dbg.value(metadata i32 %2, metadata !5144, metadata !DIExpression()), !dbg !5145
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #26, !dbg !5146
  ret void, !dbg !5147
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !5148 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5150, metadata !DIExpression()), !dbg !5158
  call void @llvm.dbg.value(metadata i32 %1, metadata !5151, metadata !DIExpression()), !dbg !5158
  call void @llvm.dbg.value(metadata i32 %2, metadata !5152, metadata !DIExpression()), !dbg !5158
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, !dbg !5159
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %4, metadata !5153, metadata !DIExpression()), !dbg !5158
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !5160
  %6 = icmp eq i32 %5, %1, !dbg !5161
  br i1 %6, label %7, label %14, !dbg !5162

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !5163
  %9 = xor i32 %8, -1, !dbg !5165
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5166
  %11 = load i32, i32* %10, align 4, !dbg !5167
  %12 = and i32 %11, %9, !dbg !5167
  store i32 %12, i32* %10, align 4, !dbg !5167
  %13 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !5168
  store i32 0, i32* %13, align 4, !dbg !5169
  br label %17, !dbg !5170

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !5171
  call void @llvm.dbg.value(metadata i32 %15, metadata !5154, metadata !DIExpression()), !dbg !5172
  call void @llvm.dbg.value(metadata i32 %5, metadata !5157, metadata !DIExpression()), !dbg !5172
  %16 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !5173
  store i32 %5, i32* %16, align 4, !dbg !5174
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #26, !dbg !5175
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #26, !dbg !5176
  br label %17

17:                                               ; preds = %14, %7
  ret void, !dbg !5177
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #4 !dbg !5178 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5180, metadata !DIExpression()), !dbg !5182
  call void @llvm.dbg.value(metadata i32 %1, metadata !5181, metadata !DIExpression()), !dbg !5182
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #26, !dbg !5183
  ret i32 %3, !dbg !5184
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #4 !dbg !5185 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5189, metadata !DIExpression()), !dbg !5196
  call void @llvm.dbg.value(metadata i8* %1, metadata !5190, metadata !DIExpression()), !dbg !5196
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5197
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !5197
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !5191, metadata !DIExpression()), !dbg !5196
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #26, !dbg !5198
  call void @llvm.dbg.value(metadata i32 %5, metadata !5192, metadata !DIExpression()), !dbg !5196
  %6 = ptrtoint i8* %1 to i32, !dbg !5199
  call void @llvm.dbg.value(metadata i32 %6, metadata !5193, metadata !DIExpression()), !dbg !5196
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #26, !dbg !5200
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !5200
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !5201
  call void @llvm.dbg.value(metadata i32 %9, metadata !5194, metadata !DIExpression()), !dbg !5196
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #26, !dbg !5202
  %11 = shl i32 %10, 3, !dbg !5203
  call void @llvm.dbg.value(metadata i32 %11, metadata !5195, metadata !DIExpression()), !dbg !5196
  %12 = sub i32 %9, %6, !dbg !5204
  %13 = add i32 %12, %11, !dbg !5205
  ret i32 %13, !dbg !5206
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #13 !dbg !5207 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5211, metadata !DIExpression()), !dbg !5217
  call void @llvm.dbg.value(metadata i32 %1, metadata !5212, metadata !DIExpression()), !dbg !5217
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5218
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !5218
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !5213, metadata !DIExpression()), !dbg !5217
  %5 = icmp eq i32 %1, 0, !dbg !5219
  br i1 %5, label %19, label %6, !dbg !5221

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !5222
  br i1 %7, label %19, label %8, !dbg !5223

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !5224, !range !4840
  call void @llvm.dbg.value(metadata i32 %9, metadata !5215, metadata !DIExpression()), !dbg !5217
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #26, !dbg !5225
  call void @llvm.dbg.value(metadata i32 %10, metadata !5216, metadata !DIExpression()), !dbg !5217
  %11 = icmp eq i32 %10, 0, !dbg !5226
  br i1 %11, label %19, label %12, !dbg !5228

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !5229
  %14 = icmp ugt i32 %13, %9, !dbg !5231
  br i1 %14, label %15, label %17, !dbg !5232

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !5233
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #26, !dbg !5235
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #26, !dbg !5236
  br label %17, !dbg !5237

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #26, !dbg !5238
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !5239
  call void @llvm.dbg.value(metadata i8* %18, metadata !5214, metadata !DIExpression()), !dbg !5217
  br label %19, !dbg !5240

19:                                               ; preds = %17, %8, %2, %6
  %20 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !5217
  ret i8* %20, !dbg !5241
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #4 !dbg !5242 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5246, metadata !DIExpression()), !dbg !5248
  call void @llvm.dbg.value(metadata i32 %1, metadata !5247, metadata !DIExpression()), !dbg !5248
  %3 = lshr i32 %1, 3, !dbg !5249
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !5250
  %5 = load i32, i32* %4, align 4, !dbg !5250
  %6 = icmp uge i32 %3, %5, !dbg !5251
  ret i1 %6, !dbg !5252
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5253 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5257, metadata !DIExpression()), !dbg !5272
  call void @llvm.dbg.value(metadata i32 %1, metadata !5258, metadata !DIExpression()), !dbg !5272
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !5273
  call void @llvm.dbg.value(metadata i32 %3, metadata !5259, metadata !DIExpression()), !dbg !5272
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !5260, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !5272
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %3, i32 0, !dbg !5274
  %5 = load i32, i32* %4, align 4, !dbg !5274
  %6 = icmp eq i32 %5, 0, !dbg !5275
  br i1 %6, label %19, label %7, !dbg !5276

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !5277
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !5278
  call void @llvm.dbg.value(metadata i32 %9, metadata !5264, metadata !DIExpression()), !dbg !5278
  call void @llvm.dbg.value(metadata i32 %8, metadata !5265, metadata !DIExpression()), !dbg !5279
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !5280
  %11 = icmp ult i32 %10, %1, !dbg !5282
  br i1 %11, label %13, label %12, !dbg !5283

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #26, !dbg !5284
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !5286
  store i32 %14, i32* %4, align 4, !dbg !5287
  %15 = add nsw i32 %9, -1, !dbg !5288
  call void @llvm.dbg.value(metadata i32 %15, metadata !5264, metadata !DIExpression()), !dbg !5278
  %16 = icmp eq i32 %15, 0, !dbg !5288
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !5289
  br i1 %18, label %19, label %7, !dbg !5289, !llvm.loop !5290

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5293
  %21 = load i32, i32* %20, align 4, !dbg !5293
  %22 = add nsw i32 %3, 1, !dbg !5294
  %23 = shl nsw i32 -1, %22, !dbg !5294
  %24 = and i32 %21, %23, !dbg !5295
  call void @llvm.dbg.value(metadata i32 %24, metadata !5267, metadata !DIExpression()), !dbg !5272
  %25 = icmp eq i32 %24, 0, !dbg !5296
  br i1 %25, label %30, label %26, !dbg !5297

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !5298, !range !4998
  call void @llvm.dbg.value(metadata i32 %27, metadata !5268, metadata !DIExpression()), !dbg !5299
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %27, i32 0, !dbg !5300
  %29 = load i32, i32* %28, align 4, !dbg !5300
  call void @llvm.dbg.value(metadata i32 %29, metadata !5271, metadata !DIExpression()), !dbg !5299
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #26, !dbg !5301
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !5272
  ret i32 %31, !dbg !5302
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !5303 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5305, metadata !DIExpression()), !dbg !5311
  call void @llvm.dbg.value(metadata i32 %1, metadata !5306, metadata !DIExpression()), !dbg !5311
  call void @llvm.dbg.value(metadata i32 %2, metadata !5307, metadata !DIExpression()), !dbg !5311
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !5312
  call void @llvm.dbg.value(metadata i32 %4, metadata !5308, metadata !DIExpression()), !dbg !5311
  %5 = sub i32 %2, %1, !dbg !5313
  call void @llvm.dbg.value(metadata i32 %5, metadata !5309, metadata !DIExpression()), !dbg !5311
  %6 = sub i32 %4, %5, !dbg !5314
  call void @llvm.dbg.value(metadata i32 %6, metadata !5310, metadata !DIExpression()), !dbg !5311
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #26, !dbg !5315
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #26, !dbg !5316
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #26, !dbg !5317
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !5318
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !5319
  ret void, !dbg !5320
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #5 !dbg !5321 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5325, metadata !DIExpression()), !dbg !5329
  call void @llvm.dbg.value(metadata i32 %1, metadata !5326, metadata !DIExpression()), !dbg !5329
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !5330
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !5327, metadata !DIExpression()), !dbg !5329
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !5331
  call void @llvm.dbg.value(metadata i8* %4, metadata !5328, metadata !DIExpression()), !dbg !5329
  ret i8* %4, !dbg !5332
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !5333 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5337, metadata !DIExpression()), !dbg !5349
  call void @llvm.dbg.value(metadata i32 %1, metadata !5338, metadata !DIExpression()), !dbg !5349
  call void @llvm.dbg.value(metadata i32 %2, metadata !5339, metadata !DIExpression()), !dbg !5349
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5350
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !5350
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !5340, metadata !DIExpression()), !dbg !5349
  %6 = sub i32 0, %1, !dbg !5351
  %7 = and i32 %6, %1, !dbg !5352
  call void @llvm.dbg.value(metadata i32 %7, metadata !5342, metadata !DIExpression()), !dbg !5349
  %8 = icmp eq i32 %7, %1, !dbg !5353
  br i1 %8, label %13, label %9, !dbg !5355

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !5356
  call void @llvm.dbg.value(metadata i32 %10, metadata !5338, metadata !DIExpression()), !dbg !5349
  %11 = icmp ult i32 %7, 4, !dbg !5358
  %12 = select i1 %11, i32 %7, i32 4, !dbg !5358
  br label %17, !dbg !5358

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !5359
  br i1 %14, label %15, label %17, !dbg !5362

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #26, !dbg !5363
  br label %57, !dbg !5365

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !5349
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !5366
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !5338, metadata !DIExpression()), !dbg !5349
  call void @llvm.dbg.value(metadata i32 %19, metadata !5341, metadata !DIExpression()), !dbg !5349
  call void @llvm.dbg.value(metadata i32 %18, metadata !5342, metadata !DIExpression()), !dbg !5349
  %21 = icmp eq i32 %2, 0, !dbg !5367
  br i1 %21, label %57, label %22, !dbg !5369

22:                                               ; preds = %17
  %23 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #26, !dbg !5370
  br i1 %23, label %57, label %24, !dbg !5371

24:                                               ; preds = %22
  %25 = sub i32 %2, %19, !dbg !5372
  %26 = add i32 %25, %20, !dbg !5373
  %27 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %26) #26, !dbg !5374, !range !4840
  call void @llvm.dbg.value(metadata i32 %27, metadata !5343, metadata !DIExpression()), !dbg !5349
  %28 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %27) #26, !dbg !5375
  call void @llvm.dbg.value(metadata i32 %28, metadata !5344, metadata !DIExpression()), !dbg !5349
  %29 = icmp eq i32 %28, 0, !dbg !5376
  br i1 %29, label %57, label %30, !dbg !5378

30:                                               ; preds = %24
  %31 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %28) #26, !dbg !5379
  call void @llvm.dbg.value(metadata i8* %31, metadata !5345, metadata !DIExpression()), !dbg !5349
  %32 = getelementptr inbounds i8, i8* %31, i32 %18, !dbg !5380
  %33 = ptrtoint i8* %32 to i32, !dbg !5380
  %34 = add i32 %20, -1, !dbg !5380
  %35 = add i32 %34, %33, !dbg !5380
  %36 = sub i32 0, %20, !dbg !5380
  %37 = and i32 %35, %36, !dbg !5380
  %38 = inttoptr i32 %37 to i8*, !dbg !5381
  %39 = sub i32 0, %18, !dbg !5382
  %40 = getelementptr inbounds i8, i8* %38, i32 %39, !dbg !5382
  call void @llvm.dbg.value(metadata i8* %40, metadata !5345, metadata !DIExpression()), !dbg !5349
  %41 = getelementptr inbounds i8, i8* %40, i32 %2, !dbg !5383
  %42 = ptrtoint i8* %41 to i32, !dbg !5383
  %43 = add i32 %42, 7, !dbg !5383
  %44 = and i32 %43, -8, !dbg !5383
  call void @llvm.dbg.value(metadata i32 %44, metadata !5346, metadata !DIExpression()), !dbg !5349
  %45 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %40) #26, !dbg !5384
  call void @llvm.dbg.value(metadata i32 %45, metadata !5347, metadata !DIExpression()), !dbg !5349
  %46 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #26, !dbg !5385
  %47 = ptrtoint %struct.chunk_unit_t* %46 to i32, !dbg !5386
  %48 = sub i32 %44, %47, !dbg !5386
  %49 = ashr exact i32 %48, 3, !dbg !5386
  call void @llvm.dbg.value(metadata i32 %49, metadata !5348, metadata !DIExpression()), !dbg !5349
  %50 = icmp ugt i32 %45, %28, !dbg !5387
  br i1 %50, label %51, label %52, !dbg !5389

51:                                               ; preds = %30
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %28, i32 noundef %45) #26, !dbg !5390
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %28) #26, !dbg !5392
  br label %52, !dbg !5393

52:                                               ; preds = %51, %30
  %53 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %45) #26, !dbg !5394
  %54 = icmp ugt i32 %53, %49, !dbg !5396
  br i1 %54, label %55, label %56, !dbg !5397

55:                                               ; preds = %52
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %45, i32 noundef %49) #26, !dbg !5398
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %49) #26, !dbg !5400
  br label %56, !dbg !5401

56:                                               ; preds = %55, %52
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %45, i1 noundef zeroext true) #26, !dbg !5402
  br label %57

57:                                               ; preds = %56, %24, %17, %22, %15
  %58 = phi i8* [ %16, %15 ], [ null, %22 ], [ null, %17 ], [ %40, %56 ], [ null, %24 ], !dbg !5349
  ret i8* %58, !dbg !5403
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !5404 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5408, metadata !DIExpression()), !dbg !5427
  call void @llvm.dbg.value(metadata i8* %1, metadata !5409, metadata !DIExpression()), !dbg !5427
  call void @llvm.dbg.value(metadata i32 %2, metadata !5410, metadata !DIExpression()), !dbg !5427
  call void @llvm.dbg.value(metadata i32 %3, metadata !5411, metadata !DIExpression()), !dbg !5427
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5428
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !5428
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !5412, metadata !DIExpression()), !dbg !5427
  %7 = icmp eq i8* %1, null, !dbg !5429
  br i1 %7, label %8, label %10, !dbg !5431

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !5432
  br label %59, !dbg !5434

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !5435
  br i1 %11, label %12, label %13, !dbg !5437

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !5438
  br label %59, !dbg !5440

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #26, !dbg !5441
  br i1 %14, label %59, label %15, !dbg !5443

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !5444, !range !4840
  call void @llvm.dbg.value(metadata i32 %16, metadata !5413, metadata !DIExpression()), !dbg !5427
  %17 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !5445
  call void @llvm.dbg.value(metadata i32 %17, metadata !5414, metadata !DIExpression()), !dbg !5427
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !5446
  %19 = ptrtoint i8* %1 to i32, !dbg !5447
  %20 = ptrtoint i8* %18 to i32, !dbg !5447
  %21 = sub i32 %19, %20, !dbg !5447
  call void @llvm.dbg.value(metadata i32 %21, metadata !5415, metadata !DIExpression()), !dbg !5427
  %22 = add i32 %21, %3, !dbg !5448
  %23 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %22) #26, !dbg !5449
  call void @llvm.dbg.value(metadata i32 %23, metadata !5416, metadata !DIExpression()), !dbg !5427
  %24 = icmp eq i32 %2, 0, !dbg !5450
  br i1 %24, label %29, label %25, !dbg !5451

25:                                               ; preds = %15
  %26 = add i32 %2, -1, !dbg !5452
  %27 = and i32 %26, %19, !dbg !5453
  %28 = icmp eq i32 %27, 0, !dbg !5453
  br i1 %28, label %29, label %49, !dbg !5454

29:                                               ; preds = %25, %15
  %30 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !5455
  %31 = icmp eq i32 %23, %30, !dbg !5456
  br i1 %31, label %59, label %32, !dbg !5457

32:                                               ; preds = %29
  %33 = icmp ult i32 %23, %30, !dbg !5458
  br i1 %33, label %34, label %36, !dbg !5459

34:                                               ; preds = %32
  %35 = add i32 %23, %16, !dbg !5460
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %35) #26, !dbg !5462
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #26, !dbg !5463
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %35) #26, !dbg !5464
  br label %59, !dbg !5465

36:                                               ; preds = %32
  %37 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !5466
  br i1 %37, label %49, label %38, !dbg !5467

38:                                               ; preds = %36
  %39 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !5468
  %40 = add i32 %39, %30, !dbg !5469
  %41 = icmp ult i32 %40, %23, !dbg !5470
  br i1 %41, label %49, label %42, !dbg !5471

42:                                               ; preds = %38
  %43 = sub i32 %23, %30, !dbg !5472
  call void @llvm.dbg.value(metadata i32 %43, metadata !5417, metadata !DIExpression()), !dbg !5473
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !5474
  %44 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !5475
  %45 = icmp ult i32 %43, %44, !dbg !5477
  br i1 %45, label %46, label %48, !dbg !5478

46:                                               ; preds = %42
  %47 = add i32 %43, %17, !dbg !5479
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %17, i32 noundef %47) #26, !dbg !5481
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %47) #26, !dbg !5482
  br label %48, !dbg !5483

48:                                               ; preds = %46, %42
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %17) #26, !dbg !5484
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #26, !dbg !5485
  br label %59

49:                                               ; preds = %38, %36, %25
  %50 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !5486
  call void @llvm.dbg.value(metadata i8* %50, metadata !5423, metadata !DIExpression()), !dbg !5427
  %51 = icmp eq i8* %50, null, !dbg !5487
  br i1 %51, label %59, label %52, !dbg !5488

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !5489, !range !4933
  %54 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %53) #26, !dbg !5490
  %55 = sub i32 %54, %21, !dbg !5491
  call void @llvm.dbg.value(metadata i32 %55, metadata !5424, metadata !DIExpression()), !dbg !5492
  %56 = icmp ult i32 %55, %3, !dbg !5493
  %57 = select i1 %56, i32 %55, i32 %3, !dbg !5493
  %58 = tail call i8* @memcpy(i8* noundef nonnull %50, i8* noundef nonnull %1, i32 noundef %57) #27, !dbg !5494
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !5495
  br label %59, !dbg !5496

59:                                               ; preds = %34, %48, %29, %52, %49, %13, %12, %8
  %60 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %13 ], [ %1, %34 ], [ %1, %48 ], [ %1, %29 ], [ %50, %52 ], [ null, %49 ], !dbg !5427
  ret i8* %60, !dbg !5497
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #5 !dbg !5498 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5502, metadata !DIExpression()), !dbg !5504
  call void @llvm.dbg.value(metadata i32 %1, metadata !5503, metadata !DIExpression()), !dbg !5504
  %3 = shl i32 %1, 3, !dbg !5505
  %4 = add i32 %3, -4, !dbg !5506
  ret i32 %4, !dbg !5507
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !5508 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5512, metadata !DIExpression()), !dbg !5523
  call void @llvm.dbg.value(metadata i8* %1, metadata !5513, metadata !DIExpression()), !dbg !5523
  call void @llvm.dbg.value(metadata i32 %2, metadata !5514, metadata !DIExpression()), !dbg !5523
  %4 = add i32 %2, -4, !dbg !5524
  call void @llvm.dbg.value(metadata i32 %4, metadata !5514, metadata !DIExpression()), !dbg !5523
  %5 = ptrtoint i8* %1 to i32, !dbg !5525
  %6 = add i32 %5, 7, !dbg !5525
  %7 = and i32 %6, -8, !dbg !5525
  call void @llvm.dbg.value(metadata i32 %7, metadata !5515, metadata !DIExpression()), !dbg !5523
  %8 = getelementptr inbounds i8, i8* %1, i32 %4, !dbg !5526
  %9 = ptrtoint i8* %8 to i32, !dbg !5526
  %10 = and i32 %9, -8, !dbg !5526
  call void @llvm.dbg.value(metadata i32 %10, metadata !5516, metadata !DIExpression()), !dbg !5523
  %11 = sub i32 %10, %7, !dbg !5527
  %12 = lshr exact i32 %11, 3, !dbg !5528
  call void @llvm.dbg.value(metadata i32 %12, metadata !5517, metadata !DIExpression()), !dbg !5523
  %13 = inttoptr i32 %7 to %struct.z_heap*, !dbg !5529
  call void @llvm.dbg.value(metadata %struct.z_heap* %13, metadata !5518, metadata !DIExpression()), !dbg !5523
  %14 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5530
  store %struct.z_heap* %13, %struct.z_heap** %14, align 4, !dbg !5531
  %15 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 1, !dbg !5532
  store i32 %12, i32* %15, align 8, !dbg !5533
  %16 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 2, !dbg !5534
  store i32 0, i32* %16, align 4, !dbg !5535
  %17 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %13, i32 noundef %12) #26, !dbg !5536
  call void @llvm.dbg.value(metadata i32 %17, metadata !5519, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5523
  %18 = shl i32 %17, 2, !dbg !5537
  %19 = add i32 %18, 20, !dbg !5538
  %20 = tail call fastcc i32 @chunksz(i32 noundef %19) #26, !dbg !5539
  call void @llvm.dbg.value(metadata i32 %20, metadata !5520, metadata !DIExpression()), !dbg !5523
  call void @llvm.dbg.value(metadata i32 0, metadata !5521, metadata !DIExpression()), !dbg !5540
  %21 = icmp slt i32 %17, 0, !dbg !5541
  br i1 %21, label %22, label %24, !dbg !5543

22:                                               ; preds = %24, %3
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef %20) #26, !dbg !5544
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef 0) #26, !dbg !5545
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i1 noundef zeroext true) #26, !dbg !5546
  %23 = sub i32 %12, %20, !dbg !5547
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %23) #26, !dbg !5548
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %20) #26, !dbg !5549
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef 0) #26, !dbg !5550
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef %23) #26, !dbg !5551
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i1 noundef zeroext true) #26, !dbg !5552
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %13, i32 noundef %20) #26, !dbg !5553
  ret void, !dbg !5554

24:                                               ; preds = %3, %24
  %25 = phi i32 [ %27, %24 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %25, metadata !5521, metadata !DIExpression()), !dbg !5540
  %26 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 3, i32 %25, i32 0, !dbg !5555
  store i32 0, i32* %26, align 4, !dbg !5557
  %27 = add nuw i32 %25, 1, !dbg !5558
  call void @llvm.dbg.value(metadata i32 %27, metadata !5521, metadata !DIExpression()), !dbg !5540
  %28 = icmp eq i32 %25, %17, !dbg !5541
  br i1 %28, label %22, label %24, !dbg !5543, !llvm.loop !5559
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !5561 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !5574, metadata !DIExpression()), !dbg !5700
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5571, metadata !DIExpression()), !dbg !5700
  call void @llvm.dbg.value(metadata i8* %1, metadata !5572, metadata !DIExpression()), !dbg !5700
  call void @llvm.dbg.value(metadata i8* %2, metadata !5573, metadata !DIExpression()), !dbg !5700
  call void @llvm.dbg.value(metadata i32 %4, metadata !5575, metadata !DIExpression()), !dbg !5700
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !5701
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #25, !dbg !5701
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !5576, metadata !DIExpression()), !dbg !5702
  call void @llvm.dbg.value(metadata i32 0, metadata !5580, metadata !DIExpression()), !dbg !5700
  call void @llvm.dbg.value(metadata i1 undef, metadata !5582, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5700
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !5703

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !5703

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !5704
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !5574, metadata !DIExpression()), !dbg !5700
  call void @llvm.dbg.value(metadata i8* %30, metadata !5573, metadata !DIExpression()), !dbg !5700
  call void @llvm.dbg.value(metadata i32 %29, metadata !5580, metadata !DIExpression()), !dbg !5700
  %31 = load i8, i8* %30, align 1, !dbg !5705
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !5703

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !5705
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !5706
  call void @llvm.dbg.value(metadata i8* %34, metadata !5573, metadata !DIExpression()), !dbg !5700
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #27, !dbg !5706
  call void @llvm.dbg.value(metadata i32 %35, metadata !5584, metadata !DIExpression()), !dbg !5707
  %36 = icmp slt i32 %35, 0, !dbg !5708
  %37 = add i32 %29, 1, !dbg !5706
  call void @llvm.dbg.value(metadata i32 undef, metadata !5580, metadata !DIExpression()), !dbg !5700
  br i1 %36, label %365, label %28, !llvm.loop !5710

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #25, !dbg !5712
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !5589, metadata !DIExpression()), !dbg !5713
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !5713
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !5632, metadata !DIExpression()), !dbg !5714
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !5635, metadata !DIExpression()), !dbg !5714
  call void @llvm.dbg.value(metadata i8* %30, metadata !5638, metadata !DIExpression()), !dbg !5714
  call void @llvm.dbg.value(metadata i32 -1, metadata !5639, metadata !DIExpression()), !dbg !5714
  call void @llvm.dbg.value(metadata i32 -1, metadata !5640, metadata !DIExpression()), !dbg !5714
  call void @llvm.dbg.value(metadata i8* null, metadata !5641, metadata !DIExpression()), !dbg !5714
  call void @llvm.dbg.value(metadata i8* %14, metadata !5642, metadata !DIExpression()), !dbg !5714
  call void @llvm.dbg.value(metadata i8 0, metadata !5643, metadata !DIExpression()), !dbg !5714
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #26, !dbg !5715
  call void @llvm.dbg.value(metadata i8* %39, metadata !5573, metadata !DIExpression()), !dbg !5700
  %40 = load i24, i24* %15, align 8, !dbg !5716
  %41 = and i24 %40, 256, !dbg !5716
  %42 = icmp eq i24 %41, 0, !dbg !5716
  br i1 %42, label %51, label %43, !dbg !5718

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !5719
  call void @llvm.dbg.value(metadata i8* %44, metadata !5574, metadata !DIExpression()), !dbg !5700
  %45 = bitcast i8* %27 to i32*, !dbg !5719
  %46 = load i32, i32* %45, align 4, !dbg !5719
  call void @llvm.dbg.value(metadata i32 %46, metadata !5639, metadata !DIExpression()), !dbg !5714
  %47 = icmp slt i32 %46, 0, !dbg !5721
  br i1 %47, label %48, label %56, !dbg !5723

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !5724
  store i24 %49, i24* %15, align 8, !dbg !5724
  %50 = sub nsw i32 0, %46, !dbg !5726
  call void @llvm.dbg.value(metadata i32 %50, metadata !5639, metadata !DIExpression()), !dbg !5714
  br label %56, !dbg !5727

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !5728
  %53 = icmp eq i24 %52, 0, !dbg !5728
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !5730
  br label %56, !dbg !5730

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !5731
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !5714
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !5574, metadata !DIExpression()), !dbg !5700
  call void @llvm.dbg.value(metadata i32 %58, metadata !5639, metadata !DIExpression()), !dbg !5714
  %60 = and i24 %57, 1024, !dbg !5731
  %61 = icmp eq i24 %60, 0, !dbg !5731
  br i1 %61, label %69, label %62, !dbg !5732

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !5733
  call void @llvm.dbg.value(metadata i8* %63, metadata !5574, metadata !DIExpression()), !dbg !5700
  %64 = bitcast i8* %59 to i32*, !dbg !5733
  %65 = load i32, i32* %64, align 4, !dbg !5733
  call void @llvm.dbg.value(metadata i32 %65, metadata !5644, metadata !DIExpression()), !dbg !5734
  %66 = icmp slt i32 %65, 0, !dbg !5735
  br i1 %66, label %67, label %74, !dbg !5737

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !5738
  store i24 %68, i24* %15, align 8, !dbg !5738
  br label %74, !dbg !5740

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !5741
  %71 = icmp eq i24 %70, 0, !dbg !5741
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !5743
  br label %74, !dbg !5743

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !5744
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !5714
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !5714
  call void @llvm.dbg.value(metadata i8* %77, metadata !5574, metadata !DIExpression()), !dbg !5700
  call void @llvm.dbg.value(metadata i32 %76, metadata !5640, metadata !DIExpression()), !dbg !5714
  store i32 0, i32* %16, align 4, !dbg !5745
  store i32 0, i32* %17, align 8, !dbg !5746
  %78 = lshr i24 %75, 16, !dbg !5744
  call void @llvm.dbg.value(metadata i24 %78, metadata !5647, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5714
  %79 = lshr i24 %75, 11, !dbg !5747
  %80 = and i24 %79, 15, !dbg !5747
  %81 = zext i24 %80 to i32, !dbg !5747
  call void @llvm.dbg.value(metadata i32 %81, metadata !5648, metadata !DIExpression()), !dbg !5714
  %82 = trunc i24 %78 to i3, !dbg !5748
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !5748

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !5749

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5752
  call void @llvm.dbg.value(metadata i8* %85, metadata !5574, metadata !DIExpression()), !dbg !5700
  %86 = bitcast i8* %77 to i32*, !dbg !5752
  %87 = load i32, i32* %86, align 4, !dbg !5752
  %88 = sext i32 %87 to i64, !dbg !5752
  store i64 %88, i64* %20, align 8, !dbg !5754
  br label %115, !dbg !5755

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5756
  call void @llvm.dbg.value(metadata i8* %90, metadata !5574, metadata !DIExpression()), !dbg !5700
  %91 = bitcast i8* %77 to i32*, !dbg !5756
  %92 = load i32, i32* %91, align 4, !dbg !5756
  %93 = sext i32 %92 to i64, !dbg !5756
  store i64 %93, i64* %20, align 8, !dbg !5759
  br label %115, !dbg !5760

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !5761
  %96 = add i32 %95, 7, !dbg !5761
  %97 = and i32 %96, -8, !dbg !5761
  %98 = inttoptr i32 %97 to i8*, !dbg !5761
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !5761
  call void @llvm.dbg.value(metadata i8* %99, metadata !5574, metadata !DIExpression()), !dbg !5700
  %100 = inttoptr i32 %97 to i64*, !dbg !5761
  %101 = load i64, i64* %100, align 8, !dbg !5761
  store i64 %101, i64* %20, align 8, !dbg !5762
  br label %115, !dbg !5763

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !5764
  %104 = add i32 %103, 7, !dbg !5764
  %105 = and i32 %104, -8, !dbg !5764
  %106 = inttoptr i32 %105 to i8*, !dbg !5764
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !5764
  call void @llvm.dbg.value(metadata i8* %107, metadata !5574, metadata !DIExpression()), !dbg !5700
  %108 = inttoptr i32 %105 to i64*, !dbg !5764
  %109 = load i64, i64* %108, align 8, !dbg !5764
  store i64 %109, i64* %20, align 8, !dbg !5765
  br label %115, !dbg !5766

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5767
  call void @llvm.dbg.value(metadata i8* %111, metadata !5574, metadata !DIExpression()), !dbg !5700
  %112 = bitcast i8* %77 to i32*, !dbg !5767
  %113 = load i32, i32* %112, align 4, !dbg !5767
  %114 = sext i32 %113 to i64, !dbg !5768
  store i64 %114, i64* %20, align 8, !dbg !5769
  br label %115, !dbg !5770

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !5771
  call void @llvm.dbg.value(metadata i8* %117, metadata !5574, metadata !DIExpression()), !dbg !5700
  %118 = trunc i24 %79 to i4, !dbg !5772
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !5772

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !5773
  %121 = ashr exact i64 %120, 56, !dbg !5773
  store i64 %121, i64* %20, align 8, !dbg !5776
  br label %177, !dbg !5777

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !5778
  %124 = ashr exact i64 %123, 48, !dbg !5778
  store i64 %124, i64* %20, align 8, !dbg !5781
  br label %177, !dbg !5782

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !5783

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5786
  call void @llvm.dbg.value(metadata i8* %127, metadata !5574, metadata !DIExpression()), !dbg !5700
  %128 = bitcast i8* %77 to i32*, !dbg !5786
  %129 = load i32, i32* %128, align 4, !dbg !5786
  %130 = zext i32 %129 to i64, !dbg !5786
  store i64 %130, i64* %20, align 8, !dbg !5788
  br label %157, !dbg !5789

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5790
  call void @llvm.dbg.value(metadata i8* %132, metadata !5574, metadata !DIExpression()), !dbg !5700
  call void @llvm.dbg.value(metadata i8* %132, metadata !5574, metadata !DIExpression()), !dbg !5700
  %133 = bitcast i8* %77 to i32*, !dbg !5790
  %134 = load i32, i32* %133, align 4, !dbg !5790
  %135 = zext i32 %134 to i64, !dbg !5790
  store i64 %135, i64* %20, align 8, !dbg !5790
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !5792
  %138 = add i32 %137, 7, !dbg !5792
  %139 = and i32 %138, -8, !dbg !5792
  %140 = inttoptr i32 %139 to i8*, !dbg !5792
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !5792
  call void @llvm.dbg.value(metadata i8* %141, metadata !5574, metadata !DIExpression()), !dbg !5700
  %142 = inttoptr i32 %139 to i64*, !dbg !5792
  %143 = load i64, i64* %142, align 8, !dbg !5792
  store i64 %143, i64* %20, align 8, !dbg !5793
  br label %157, !dbg !5794

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !5795
  %146 = add i32 %145, 7, !dbg !5795
  %147 = and i32 %146, -8, !dbg !5795
  %148 = inttoptr i32 %147 to i8*, !dbg !5795
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !5795
  call void @llvm.dbg.value(metadata i8* %149, metadata !5574, metadata !DIExpression()), !dbg !5700
  %150 = inttoptr i32 %147 to i64*, !dbg !5795
  %151 = load i64, i64* %150, align 8, !dbg !5795
  store i64 %151, i64* %20, align 8, !dbg !5796
  br label %157, !dbg !5797

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5798
  call void @llvm.dbg.value(metadata i8* %153, metadata !5574, metadata !DIExpression()), !dbg !5700
  %154 = bitcast i8* %77 to i32*, !dbg !5798
  %155 = load i32, i32* %154, align 4, !dbg !5798
  %156 = zext i32 %155 to i64, !dbg !5799
  store i64 %156, i64* %20, align 8, !dbg !5800
  br label %157, !dbg !5801

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !5802
  call void @llvm.dbg.value(metadata i8* %159, metadata !5574, metadata !DIExpression()), !dbg !5700
  %160 = trunc i24 %79 to i4, !dbg !5803
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !5803

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !5804
  store i64 %162, i64* %20, align 8, !dbg !5807
  br label %177, !dbg !5808

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !5809
  store i64 %164, i64* %20, align 8, !dbg !5812
  br label %177, !dbg !5813

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !5814
  %167 = add i32 %166, 7, !dbg !5814
  %168 = and i32 %167, -8, !dbg !5814
  %169 = inttoptr i32 %168 to i8*, !dbg !5814
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !5814
  call void @llvm.dbg.value(metadata i8* %170, metadata !5574, metadata !DIExpression()), !dbg !5700
  call void @llvm.dbg.value(metadata i8* %170, metadata !5574, metadata !DIExpression()), !dbg !5700
  %171 = inttoptr i32 %168 to double*, !dbg !5814
  %172 = load double, double* %171, align 8, !dbg !5814
  store double %172, double* %19, align 8, !dbg !5814
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5818
  call void @llvm.dbg.value(metadata i8* %174, metadata !5574, metadata !DIExpression()), !dbg !5700
  %175 = bitcast i8* %77 to i8**, !dbg !5818
  %176 = load i8*, i8** %175, align 4, !dbg !5818
  store i8* %176, i8** %18, align 8, !dbg !5821
  br label %177, !dbg !5822

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !5714
  call void @llvm.dbg.value(metadata i8* %178, metadata !5574, metadata !DIExpression()), !dbg !5700
  %179 = and i24 %75, 3, !dbg !5823
  %180 = icmp eq i24 %179, 0, !dbg !5823
  br i1 %180, label %185, label %181, !dbg !5823

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #26, !dbg !5824
  call void @llvm.dbg.value(metadata i32 %182, metadata !5649, metadata !DIExpression()), !dbg !5825
  %183 = icmp slt i32 %182, 0, !dbg !5826
  %184 = add i32 %182, %29, !dbg !5824
  call void @llvm.dbg.value(metadata i32 undef, metadata !5580, metadata !DIExpression()), !dbg !5700
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !5828
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !5829

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #27, !dbg !5830
  call void @llvm.dbg.value(metadata i32 %188, metadata !5653, metadata !DIExpression()), !dbg !5831
  %189 = icmp slt i32 %188, 0, !dbg !5832
  %190 = add i32 %29, 1, !dbg !5830
  call void @llvm.dbg.value(metadata i32 undef, metadata !5580, metadata !DIExpression()), !dbg !5700
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !5834
  call void @llvm.dbg.value(metadata i8* %192, metadata !5641, metadata !DIExpression()), !dbg !5714
  %193 = icmp sgt i32 %76, -1, !dbg !5835
  br i1 %193, label %194, label %196, !dbg !5837

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #27, !dbg !5838
  call void @llvm.dbg.value(metadata i32 %195, metadata !5656, metadata !DIExpression()), !dbg !5840
  br label %241, !dbg !5841

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #27, !dbg !5842
  call void @llvm.dbg.value(metadata i32 %197, metadata !5656, metadata !DIExpression()), !dbg !5840
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !5641, metadata !DIExpression()), !dbg !5714
  %199 = load i64, i64* %20, align 8, !dbg !5844
  %200 = trunc i64 %199 to i8, !dbg !5845
  store i8 %200, i8* %10, align 1, !dbg !5846
  call void @llvm.dbg.value(metadata i8* %23, metadata !5642, metadata !DIExpression()), !dbg !5714
  br label %245, !dbg !5847

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !5848
  %203 = icmp eq i24 %202, 0, !dbg !5848
  %204 = trunc i24 %75 to i8, !dbg !5850
  %205 = shl i8 %204, 1, !dbg !5850
  %206 = and i8 %205, 32, !dbg !5850
  %207 = select i1 %203, i8 %206, i8 43, !dbg !5850
  call void @llvm.dbg.value(metadata i8 %207, metadata !5643, metadata !DIExpression()), !dbg !5714
  %208 = load i64, i64* %20, align 8, !dbg !5851
  call void @llvm.dbg.value(metadata i64 %208, metadata !5581, metadata !DIExpression()), !dbg !5700
  %209 = icmp slt i64 %208, 0, !dbg !5852
  br i1 %209, label %210, label %212, !dbg !5854

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !5643, metadata !DIExpression()), !dbg !5714
  %211 = sub nsw i64 0, %208, !dbg !5855
  store i64 %211, i64* %20, align 8, !dbg !5857
  br label %212, !dbg !5858

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !5714
  call void @llvm.dbg.value(metadata i8 %213, metadata !5643, metadata !DIExpression()), !dbg !5714
  %214 = load i64, i64* %20, align 8, !dbg !5859
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !5860
  call void @llvm.dbg.value(metadata i8* %215, metadata !5641, metadata !DIExpression()), !dbg !5714
  br label %216, !dbg !5861

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !5862
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !5863
  call void @llvm.dbg.value(metadata i8* %218, metadata !5641, metadata !DIExpression()), !dbg !5714
  call void @llvm.dbg.value(metadata i8 %217, metadata !5643, metadata !DIExpression()), !dbg !5714
  call void @llvm.dbg.label(metadata !5699), !dbg !5864
  %219 = icmp sgt i32 %76, -1, !dbg !5865
  br i1 %219, label %222, label %220, !dbg !5866

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !5867
  br label %245, !dbg !5866

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !5869
  %224 = sub i32 %22, %223, !dbg !5869
  call void @llvm.dbg.value(metadata i32 %224, metadata !5658, metadata !DIExpression()), !dbg !5870
  %225 = load i24, i24* %15, align 8, !dbg !5871
  %226 = and i24 %225, -65, !dbg !5871
  store i24 %226, i24* %15, align 8, !dbg !5871
  %227 = icmp ugt i32 %76, %224, !dbg !5872
  br i1 %227, label %228, label %245, !dbg !5874

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !5875
  store i32 %229, i32* %16, align 4, !dbg !5877
  br label %245, !dbg !5878

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !5879
  %232 = icmp eq i8* %231, null, !dbg !5881
  br i1 %232, label %245, label %233, !dbg !5882

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !5883
  %235 = zext i32 %234 to i64, !dbg !5883
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !5885
  call void @llvm.dbg.value(metadata i8* %236, metadata !5641, metadata !DIExpression()), !dbg !5714
  %237 = load i24, i24* %15, align 8, !dbg !5886
  %238 = or i24 %237, 1048576, !dbg !5886
  store i24 %238, i24* %15, align 8, !dbg !5886
  store i8 120, i8* %21, align 1, !dbg !5887
  br label %216, !dbg !5888

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !5889
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #26, !dbg !5892
  br label %363, !dbg !5893

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !5894
  call void @llvm.dbg.value(metadata i32 %242, metadata !5656, metadata !DIExpression()), !dbg !5840
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !5895
  call void @llvm.dbg.value(metadata i32 -1, metadata !5640, metadata !DIExpression()), !dbg !5714
  call void @llvm.dbg.value(metadata i32 %29, metadata !5580, metadata !DIExpression()), !dbg !5700
  call void @llvm.dbg.value(metadata i8* %192, metadata !5641, metadata !DIExpression()), !dbg !5714
  call void @llvm.dbg.value(metadata i8* %243, metadata !5642, metadata !DIExpression()), !dbg !5714
  call void @llvm.dbg.value(metadata i8 0, metadata !5643, metadata !DIExpression()), !dbg !5714
  %244 = icmp eq i8* %192, null, !dbg !5896
  br i1 %244, label %363, label %245, !dbg !5898, !llvm.loop !5710

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !5867
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !5661, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5714
  call void @llvm.dbg.value(metadata i32 0, metadata !5662, metadata !DIExpression()), !dbg !5714
  %250 = zext i8 %249 to i32, !dbg !5899
  %251 = icmp eq i8 %249, 0, !dbg !5901
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !5661, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5714
  call void @llvm.dbg.value(metadata i32 undef, metadata !5661, metadata !DIExpression()), !dbg !5714
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !5661, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5714
  call void @llvm.dbg.value(metadata i32 undef, metadata !5661, metadata !DIExpression()), !dbg !5714
  %252 = icmp sgt i32 %58, 0, !dbg !5902
  br i1 %252, label %253, label %302, !dbg !5903

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !5867
  %255 = icmp eq i24 %254, 0, !dbg !5867
  %256 = ptrtoint i8* %248 to i32, !dbg !5904
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !5661, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5714
  %257 = ptrtoint i8* %247 to i32, !dbg !5904
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !5661, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5714
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !5661, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5714
  %258 = xor i1 %251, true, !dbg !5905
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5661, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5714
  %259 = sext i1 %258 to i32, !dbg !5905
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5661, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5714
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !5661, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5714
  %260 = lshr i24 %246, 19, !dbg !5906
  %261 = and i24 %260, 1, !dbg !5906
  %262 = select i1 %255, i24 %261, i24 2, !dbg !5906
  %263 = zext i24 %262 to i32, !dbg !5906
  %264 = add i32 %257, %259, !dbg !5906
  %265 = add i32 %256, %263, !dbg !5906
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !5661, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5714
  %266 = and i24 %246, 4194304, !dbg !5907
  %267 = icmp eq i24 %266, 0, !dbg !5907
  %268 = load i32, i32* %16, align 4, !dbg !5909
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !5661, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5714
  call void @llvm.dbg.value(metadata i32 undef, metadata !5661, metadata !DIExpression()), !dbg !5714
  %269 = load i32, i32* %17, align 8, !dbg !5910
  %270 = select i1 %267, i32 0, i32 %269, !dbg !5910
  call void @llvm.dbg.value(metadata i32 undef, metadata !5661, metadata !DIExpression()), !dbg !5714
  %271 = add i32 %264, %58, !dbg !5910
  %272 = add i32 %265, %268, !dbg !5910
  %273 = add i32 %272, %270, !dbg !5911
  %274 = sub i32 %271, %273, !dbg !5911
  call void @llvm.dbg.value(metadata i32 %274, metadata !5639, metadata !DIExpression()), !dbg !5714
  %275 = and i24 %246, 4, !dbg !5912
  %276 = icmp eq i24 %275, 0, !dbg !5912
  br i1 %276, label %277, label %302, !dbg !5913

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !5663, metadata !DIExpression()), !dbg !5914
  %278 = and i24 %246, 64, !dbg !5915
  %279 = icmp eq i24 %278, 0, !dbg !5915
  %280 = select i1 %279, i1 true, i1 %251, !dbg !5916
  %281 = select i1 %279, i8 %249, i8 0, !dbg !5916
  %282 = select i1 %279, i32 32, i32 48, !dbg !5916
  br i1 %280, label %287, label %283, !dbg !5916

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #27, !dbg !5917
  call void @llvm.dbg.value(metadata i32 %284, metadata !5668, metadata !DIExpression()), !dbg !5918
  %285 = icmp slt i32 %284, 0, !dbg !5919
  %286 = add i32 %29, 1, !dbg !5917
  call void @llvm.dbg.value(metadata i32 undef, metadata !5580, metadata !DIExpression()), !dbg !5700
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !5714
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !5704
  call void @llvm.dbg.value(metadata i32 %290, metadata !5580, metadata !DIExpression()), !dbg !5700
  call void @llvm.dbg.value(metadata i8 undef, metadata !5663, metadata !DIExpression()), !dbg !5914
  call void @llvm.dbg.value(metadata i8 %288, metadata !5643, metadata !DIExpression()), !dbg !5714
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !5921
  %292 = add i32 %291, -1, !dbg !5921
  br label %293, !dbg !5921

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !5922
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !5704
  call void @llvm.dbg.value(metadata i32 %295, metadata !5580, metadata !DIExpression()), !dbg !5700
  call void @llvm.dbg.value(metadata i32 %294, metadata !5639, metadata !DIExpression()), !dbg !5714
  call void @llvm.dbg.value(metadata i32 %294, metadata !5639, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5714
  %296 = icmp sgt i32 %294, 0, !dbg !5923
  br i1 %296, label %297, label %302, !dbg !5921

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !5924
  call void @llvm.dbg.value(metadata i32 %298, metadata !5639, metadata !DIExpression()), !dbg !5714
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #27, !dbg !5925
  call void @llvm.dbg.value(metadata i32 %299, metadata !5674, metadata !DIExpression()), !dbg !5926
  %300 = icmp slt i32 %299, 0, !dbg !5927
  %301 = add i32 %295, 1, !dbg !5925
  call void @llvm.dbg.value(metadata i32 undef, metadata !5580, metadata !DIExpression()), !dbg !5700
  br i1 %300, label %361, label %293, !llvm.loop !5929

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !5714
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !5714
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !5704
  call void @llvm.dbg.value(metadata i32 %305, metadata !5580, metadata !DIExpression()), !dbg !5700
  call void @llvm.dbg.value(metadata i32 %304, metadata !5639, metadata !DIExpression()), !dbg !5714
  call void @llvm.dbg.value(metadata i8 %303, metadata !5643, metadata !DIExpression()), !dbg !5714
  %306 = icmp eq i8 %303, 0, !dbg !5931
  br i1 %306, label %312, label %307, !dbg !5932

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !5933
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #27, !dbg !5934
  call void @llvm.dbg.value(metadata i32 %309, metadata !5677, metadata !DIExpression()), !dbg !5935
  %310 = icmp slt i32 %309, 0, !dbg !5936
  %311 = add i32 %305, 1, !dbg !5934
  call void @llvm.dbg.value(metadata i32 undef, metadata !5580, metadata !DIExpression()), !dbg !5700
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !5704
  call void @llvm.dbg.value(metadata i32 %313, metadata !5580, metadata !DIExpression()), !dbg !5700
  %314 = lshr i24 %246, 20, !dbg !5938
  %315 = lshr i24 %246, 19, !dbg !5939
  %316 = or i24 %314, %315, !dbg !5940
  %317 = and i24 %316, 1, !dbg !5940
  %318 = icmp eq i24 %317, 0, !dbg !5940
  br i1 %318, label %323, label %319, !dbg !5941

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #27, !dbg !5942
  call void @llvm.dbg.value(metadata i32 %320, metadata !5681, metadata !DIExpression()), !dbg !5943
  %321 = icmp slt i32 %320, 0, !dbg !5944
  %322 = add i32 %313, 1, !dbg !5942
  call void @llvm.dbg.value(metadata i32 undef, metadata !5580, metadata !DIExpression()), !dbg !5700
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !5704
  call void @llvm.dbg.value(metadata i32 %324, metadata !5580, metadata !DIExpression()), !dbg !5700
  %325 = and i24 %246, 1048576, !dbg !5946
  %326 = icmp eq i24 %325, 0, !dbg !5946
  br i1 %326, label %333, label %327, !dbg !5947

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !5948
  %329 = zext i8 %328 to i32, !dbg !5948
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #27, !dbg !5948
  call void @llvm.dbg.value(metadata i32 %330, metadata !5687, metadata !DIExpression()), !dbg !5949
  %331 = icmp slt i32 %330, 0, !dbg !5950
  %332 = add i32 %324, 1, !dbg !5948
  call void @llvm.dbg.value(metadata i32 undef, metadata !5580, metadata !DIExpression()), !dbg !5700
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !5704
  call void @llvm.dbg.value(metadata i32 %334, metadata !5580, metadata !DIExpression()), !dbg !5700
  %335 = load i32, i32* %16, align 4, !dbg !5952
  call void @llvm.dbg.value(metadata i32 %335, metadata !5662, metadata !DIExpression()), !dbg !5714
  br label %336, !dbg !5953

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !5954
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !5704
  call void @llvm.dbg.value(metadata i32 %338, metadata !5580, metadata !DIExpression()), !dbg !5700
  call void @llvm.dbg.value(metadata i32 %337, metadata !5662, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5714
  %339 = icmp sgt i32 %337, 0, !dbg !5955
  br i1 %339, label %340, label %345, !dbg !5953

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !5956
  call void @llvm.dbg.value(metadata i32 %341, metadata !5662, metadata !DIExpression()), !dbg !5714
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #27, !dbg !5957
  call void @llvm.dbg.value(metadata i32 %342, metadata !5691, metadata !DIExpression()), !dbg !5958
  %343 = icmp slt i32 %342, 0, !dbg !5959
  %344 = add i32 %338, 1, !dbg !5957
  call void @llvm.dbg.value(metadata i32 undef, metadata !5580, metadata !DIExpression()), !dbg !5700
  br i1 %343, label %361, label %336, !llvm.loop !5961

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #26, !dbg !5963
  call void @llvm.dbg.value(metadata i32 %346, metadata !5694, metadata !DIExpression()), !dbg !5964
  %347 = icmp slt i32 %346, 0, !dbg !5965
  call void @llvm.dbg.value(metadata i32 undef, metadata !5580, metadata !DIExpression()), !dbg !5700
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !5963
  call void @llvm.dbg.value(metadata i32 %349, metadata !5580, metadata !DIExpression()), !dbg !5700
  call void @llvm.dbg.value(metadata i32 %304, metadata !5639, metadata !DIExpression()), !dbg !5714
  %350 = icmp sgt i32 %304, 0, !dbg !5967
  br i1 %350, label %351, label %363, !dbg !5968

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !5968
  %353 = add i32 %352, %338, !dbg !5968
  br label %354, !dbg !5968

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !5580, metadata !DIExpression()), !dbg !5700
  call void @llvm.dbg.value(metadata i32 %355, metadata !5639, metadata !DIExpression()), !dbg !5714
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #27, !dbg !5969
  call void @llvm.dbg.value(metadata i32 %356, metadata !5696, metadata !DIExpression()), !dbg !5970
  %357 = icmp slt i32 %356, 0, !dbg !5971
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !5973
  call void @llvm.dbg.value(metadata i32 undef, metadata !5580, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5700
  call void @llvm.dbg.value(metadata i32 %359, metadata !5639, metadata !DIExpression()), !dbg !5714
  %360 = icmp sgt i32 %355, 1, !dbg !5967
  br i1 %360, label %354, label %363, !dbg !5968, !llvm.loop !5974

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !5580, metadata !DIExpression()), !dbg !5700
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !5711
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !5704
  call void @llvm.dbg.value(metadata i32 %364, metadata !5580, metadata !DIExpression()), !dbg !5700
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !5711
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !5700
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #25, !dbg !5976
  ret i32 %366, !dbg !5976
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #14

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #15 !dbg !5977 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5981, metadata !DIExpression()), !dbg !5983
  call void @llvm.dbg.value(metadata i8* %1, metadata !5982, metadata !DIExpression()), !dbg !5983
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !5984
  store i24 0, i24* %3, align 4, !dbg !5984
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5984
  store i8 0, i8* %4, align 1, !dbg !5984
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5984
  store i32 0, i32* %5, align 4, !dbg !5984
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5984
  store i32 0, i32* %6, align 4, !dbg !5984
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5985
  call void @llvm.dbg.value(metadata i8* %7, metadata !5982, metadata !DIExpression()), !dbg !5983
  %8 = load i8, i8* %7, align 1, !dbg !5986
  %9 = icmp eq i8 %8, 37, !dbg !5988
  br i1 %9, label %10, label %12, !dbg !5989

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5990
  call void @llvm.dbg.value(metadata i8* %11, metadata !5982, metadata !DIExpression()), !dbg !5983
  store i8 37, i8* %4, align 1, !dbg !5992
  br label %18, !dbg !5993

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #26, !dbg !5994
  call void @llvm.dbg.value(metadata i8* %13, metadata !5982, metadata !DIExpression()), !dbg !5983
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #26, !dbg !5995
  call void @llvm.dbg.value(metadata i8* %14, metadata !5982, metadata !DIExpression()), !dbg !5983
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #26, !dbg !5996
  call void @llvm.dbg.value(metadata i8* %15, metadata !5982, metadata !DIExpression()), !dbg !5983
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #26, !dbg !5997
  call void @llvm.dbg.value(metadata i8* %16, metadata !5982, metadata !DIExpression()), !dbg !5983
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #26, !dbg !5998
  call void @llvm.dbg.value(metadata i8* %17, metadata !5982, metadata !DIExpression()), !dbg !5983
  br label %18, !dbg !5999

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !5983
  ret i8* %19, !dbg !6000
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !6001 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !6005, metadata !DIExpression()), !dbg !6012
  call void @llvm.dbg.value(metadata i8* %1, metadata !6006, metadata !DIExpression()), !dbg !6012
  call void @llvm.dbg.value(metadata i8* %2, metadata !6007, metadata !DIExpression()), !dbg !6012
  call void @llvm.dbg.value(metadata i8* %3, metadata !6008, metadata !DIExpression()), !dbg !6012
  call void @llvm.dbg.value(metadata i32 0, metadata !6009, metadata !DIExpression()), !dbg !6012
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !6013

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !6014
  call void @llvm.dbg.value(metadata i32 %9, metadata !6009, metadata !DIExpression()), !dbg !6012
  call void @llvm.dbg.value(metadata i8* %8, metadata !6007, metadata !DIExpression()), !dbg !6012
  %10 = icmp ult i8* %8, %3, !dbg !6015
  br i1 %10, label %11, label %13, !dbg !6016

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !6017
  br label %17, !dbg !6016

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !6018

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !6019
  %16 = icmp eq i8 %15, 0, !dbg !6018
  br i1 %16, label %24, label %17, !dbg !6013

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !6017
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6020
  call void @llvm.dbg.value(metadata i8* %19, metadata !6007, metadata !DIExpression()), !dbg !6012
  %20 = zext i8 %18 to i32, !dbg !6021
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #27, !dbg !6022
  call void @llvm.dbg.value(metadata i32 %21, metadata !6010, metadata !DIExpression()), !dbg !6023
  %22 = icmp slt i32 %21, 0, !dbg !6024
  %23 = add i32 %9, 1, !dbg !6026
  call void @llvm.dbg.value(metadata i32 undef, metadata !6009, metadata !DIExpression()), !dbg !6012
  br i1 %22, label %24, label %7, !llvm.loop !6027

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !6012
  ret i32 %25, !dbg !6029
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #15 !dbg !6030 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !6034, metadata !DIExpression()), !dbg !6044
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !6035, metadata !DIExpression()), !dbg !6044
  call void @llvm.dbg.value(metadata i8* %2, metadata !6036, metadata !DIExpression()), !dbg !6044
  call void @llvm.dbg.value(metadata i8* %3, metadata !6037, metadata !DIExpression()), !dbg !6044
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !6045
  %6 = load i8, i8* %5, align 1, !dbg !6045
  %7 = zext i8 %6 to i32, !dbg !6046
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #26, !dbg !6047
  %9 = icmp eq i32 %8, 0, !dbg !6047
  call void @llvm.dbg.value(metadata i1 %9, metadata !6038, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6044
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #26, !dbg !6048
  call void @llvm.dbg.value(metadata i32 %10, metadata !6039, metadata !DIExpression()), !dbg !6044
  %11 = ptrtoint i8* %3 to i32, !dbg !6049
  %12 = ptrtoint i8* %2 to i32, !dbg !6049
  %13 = sub i32 %11, %12, !dbg !6049
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !6050
  call void @llvm.dbg.value(metadata i8* %14, metadata !6041, metadata !DIExpression()), !dbg !6044
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !6051

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !6044
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !6034, metadata !DIExpression()), !dbg !6044
  call void @llvm.dbg.value(metadata i8* %18, metadata !6041, metadata !DIExpression()), !dbg !6044
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !6052
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !6053
  call void @llvm.dbg.value(metadata i32 %25, metadata !6042, metadata !DIExpression()), !dbg !6054
  %26 = icmp ult i32 %25, 10, !dbg !6055
  %27 = select i1 %26, i32 48, i32 %16, !dbg !6056
  %28 = add i32 %27, %25, !dbg !6054
  %29 = trunc i32 %28 to i8, !dbg !6056
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !6057
  call void @llvm.dbg.value(metadata i8* %30, metadata !6041, metadata !DIExpression()), !dbg !6044
  store i8 %29, i8* %30, align 1, !dbg !6058
  call void @llvm.dbg.value(metadata i64 %22, metadata !6034, metadata !DIExpression()), !dbg !6044
  %31 = icmp uge i64 %19, %15, !dbg !6059
  %32 = icmp ugt i8* %30, %2, !dbg !6060
  %33 = and i1 %31, %32, !dbg !6060
  br i1 %33, label %17, label %34, !dbg !6061, !llvm.loop !6062

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !6064
  %36 = load i24, i24* %35, align 4, !dbg !6064
  %37 = and i24 %36, 32, !dbg !6064
  %38 = icmp eq i24 %37, 0, !dbg !6064
  br i1 %38, label %44, label %39, !dbg !6066

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !6067

40:                                               ; preds = %39
  br label %41, !dbg !6069

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !6073
  store i24 %43, i24* %35, align 4, !dbg !6073
  br label %44, !dbg !6074

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !6074
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #9 !dbg !6075 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6081, metadata !DIExpression()), !dbg !6084
  call void @llvm.dbg.value(metadata i8* %1, metadata !6082, metadata !DIExpression()), !dbg !6084
  call void @llvm.dbg.value(metadata i32 %2, metadata !6083, metadata !DIExpression()), !dbg !6084
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !6085
  %5 = load i24, i24* %4, align 4, !dbg !6085
  %6 = lshr i24 %5, 11, !dbg !6085
  %7 = and i24 %6, 15, !dbg !6085
  %8 = zext i24 %7 to i32, !dbg !6085
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !6086

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !6087
  store i32 %2, i32* %10, align 4, !dbg !6089
  br label %28, !dbg !6090

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !6091
  store i8 %12, i8* %1, align 1, !dbg !6092
  br label %28, !dbg !6093

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !6094
  %15 = bitcast i8* %1 to i16*, !dbg !6095
  store i16 %14, i16* %15, align 2, !dbg !6096
  br label %28, !dbg !6097

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !6098
  store i32 %2, i32* %17, align 4, !dbg !6099
  br label %28, !dbg !6100

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !6101
  %20 = bitcast i8* %1 to i64*, !dbg !6102
  store i64 %19, i64* %20, align 8, !dbg !6103
  br label %28, !dbg !6104

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !6105
  %23 = bitcast i8* %1 to i64*, !dbg !6106
  store i64 %22, i64* %23, align 8, !dbg !6107
  br label %28, !dbg !6108

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !6109
  store i32 %2, i32* %25, align 4, !dbg !6110
  br label %28, !dbg !6111

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !6112
  store i32 %2, i32* %27, align 4, !dbg !6113
  br label %28, !dbg !6114

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !6115
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #5 !dbg !6116 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6119, metadata !DIExpression()), !dbg !6120
  %2 = add i32 %0, -65, !dbg !6121
  %3 = icmp ult i32 %2, 26, !dbg !6122
  %4 = zext i1 %3 to i32, !dbg !6122
  ret i32 %4, !dbg !6123
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #5 !dbg !6124 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !6128, metadata !DIExpression()), !dbg !6129
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !6130

2:                                                ; preds = %1
  br label %4, !dbg !6131

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !6133

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !6134
  ret i32 %5, !dbg !6135
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #15 !dbg !6136 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6138, metadata !DIExpression()), !dbg !6141
  call void @llvm.dbg.value(metadata i8* %1, metadata !6139, metadata !DIExpression()), !dbg !6141
  call void @llvm.dbg.value(metadata i8 1, metadata !6140, metadata !DIExpression()), !dbg !6141
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !6142

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !6140, metadata !DIExpression()), !dbg !6141
  call void @llvm.dbg.value(metadata i8* %5, metadata !6139, metadata !DIExpression()), !dbg !6141
  %6 = load i8, i8* %5, align 1, !dbg !6143
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !6145

7:                                                ; preds = %4
  br label %11, !dbg !6146

8:                                                ; preds = %4
  br label %11, !dbg !6148

9:                                                ; preds = %4
  br label %11, !dbg !6149

10:                                               ; preds = %4
  br label %11, !dbg !6150

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !6151
  %14 = or i24 %13, %12, !dbg !6151
  store i24 %14, i24* %3, align 4, !dbg !6151
  call void @llvm.dbg.value(metadata i8 poison, metadata !6140, metadata !DIExpression()), !dbg !6141
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !6139, metadata !DIExpression()), !dbg !6141
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !6140, metadata !DIExpression()), !dbg !6141
  call void @llvm.dbg.value(metadata i8* %15, metadata !6139, metadata !DIExpression()), !dbg !6141
  %17 = load i24, i24* %3, align 4, !dbg !6152
  %18 = and i24 %17, 68, !dbg !6154
  %19 = icmp eq i24 %18, 68, !dbg !6154
  br i1 %19, label %20, label %22, !dbg !6154

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !6155
  store i24 %21, i24* %3, align 4, !dbg !6155
  br label %22, !dbg !6157

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !6158
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #15 !dbg !6159 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6161, metadata !DIExpression()), !dbg !6165
  call void @llvm.dbg.value(metadata i8* %1, metadata !6162, metadata !DIExpression()), !dbg !6165
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !6166
  %5 = load i24, i24* %4, align 4, !dbg !6167
  %6 = or i24 %5, 128, !dbg !6167
  store i24 %6, i24* %4, align 4, !dbg !6167
  call void @llvm.dbg.value(metadata i8* %1, metadata !6162, metadata !DIExpression()), !dbg !6165
  %7 = load i8, i8* %1, align 1, !dbg !6168
  %8 = icmp eq i8 %7, 42, !dbg !6170
  br i1 %8, label %9, label %12, !dbg !6171

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !6172
  store i24 %10, i24* %4, align 4, !dbg !6172
  call void @llvm.dbg.value(metadata i8* %1, metadata !6162, metadata !DIExpression()), !dbg !6165
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6174
  call void @llvm.dbg.value(metadata i8* %11, metadata !6162, metadata !DIExpression()), !dbg !6165
  store i8* %11, i8** %3, align 4, !dbg !6174
  br label %29, !dbg !6175

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6163, metadata !DIExpression()), !dbg !6165
  call void @llvm.dbg.value(metadata i8** %3, metadata !6162, metadata !DIExpression(DW_OP_deref)), !dbg !6165
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !6176
  call void @llvm.dbg.value(metadata i32 %13, metadata !6164, metadata !DIExpression()), !dbg !6165
  %14 = load i8*, i8** %3, align 4, !dbg !6177
  call void @llvm.dbg.value(metadata i8* %14, metadata !6162, metadata !DIExpression()), !dbg !6165
  %15 = icmp eq i8* %14, %1, !dbg !6179
  br i1 %15, label %29, label %16, !dbg !6180

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !6181
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !6183
  store i32 %13, i32* %18, align 4, !dbg !6184
  %19 = lshr i32 %13, 31, !dbg !6185
  %20 = lshr i24 %17, 1, !dbg !6186
  %21 = and i24 %20, 1, !dbg !6186
  %22 = zext i24 %21 to i32, !dbg !6186
  %23 = or i32 %19, %22, !dbg !6186
  %24 = trunc i32 %23 to i24, !dbg !6186
  %25 = shl nuw nsw i24 %24, 1, !dbg !6186
  %26 = and i24 %17, -131, !dbg !6186
  %27 = or i24 %26, 128, !dbg !6186
  %28 = or i24 %25, %27, !dbg !6186
  store i24 %28, i24* %4, align 4, !dbg !6186
  br label %29, !dbg !6187

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !6165
  ret i8* %30, !dbg !6188
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #15 !dbg !6189 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6191, metadata !DIExpression()), !dbg !6194
  call void @llvm.dbg.value(metadata i8* %1, metadata !6192, metadata !DIExpression()), !dbg !6194
  %4 = load i8, i8* %1, align 1, !dbg !6195
  %5 = icmp eq i8 %4, 46, !dbg !6196
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !6197
  %7 = load i24, i24* %6, align 4, !dbg !6198
  %8 = select i1 %5, i24 512, i24 0, !dbg !6198
  %9 = and i24 %7, -513, !dbg !6198
  %10 = or i24 %9, %8, !dbg !6198
  store i24 %10, i24* %6, align 4, !dbg !6198
  br i1 %5, label %11, label %32, !dbg !6199

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6192, metadata !DIExpression()), !dbg !6194
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6200
  call void @llvm.dbg.value(metadata i8* %12, metadata !6192, metadata !DIExpression()), !dbg !6194
  store i8* %12, i8** %3, align 4, !dbg !6200
  %13 = load i8, i8* %12, align 1, !dbg !6201
  %14 = icmp eq i8 %13, 42, !dbg !6203
  br i1 %14, label %15, label %18, !dbg !6204

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !6205
  store i24 %16, i24* %6, align 4, !dbg !6205
  call void @llvm.dbg.value(metadata i8* %12, metadata !6192, metadata !DIExpression()), !dbg !6194
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6207
  call void @llvm.dbg.value(metadata i8* %17, metadata !6192, metadata !DIExpression()), !dbg !6194
  store i8* %17, i8** %3, align 4, !dbg !6207
  br label %32, !dbg !6208

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !6192, metadata !DIExpression(DW_OP_deref)), !dbg !6194
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !6209
  call void @llvm.dbg.value(metadata i32 %19, metadata !6193, metadata !DIExpression()), !dbg !6194
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !6210
  store i32 %19, i32* %20, align 4, !dbg !6211
  %21 = lshr i32 %19, 31, !dbg !6212
  %22 = load i24, i24* %6, align 4, !dbg !6213
  %23 = lshr i24 %22, 1, !dbg !6213
  %24 = and i24 %23, 1, !dbg !6213
  %25 = zext i24 %24 to i32, !dbg !6213
  %26 = or i32 %21, %25, !dbg !6213
  %27 = trunc i32 %26 to i24, !dbg !6213
  %28 = shl nuw nsw i24 %27, 1, !dbg !6213
  %29 = and i24 %22, -3, !dbg !6213
  %30 = or i24 %28, %29, !dbg !6213
  store i24 %30, i24* %6, align 4, !dbg !6213
  %31 = load i8*, i8** %3, align 4, !dbg !6214
  call void @llvm.dbg.value(metadata i8* %31, metadata !6192, metadata !DIExpression()), !dbg !6194
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !6194
  ret i8* %33, !dbg !6215
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !6216 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6218, metadata !DIExpression()), !dbg !6220
  call void @llvm.dbg.value(metadata i8* %1, metadata !6219, metadata !DIExpression()), !dbg !6220
  %3 = load i8, i8* %1, align 1, !dbg !6221
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !6222

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6223
  call void @llvm.dbg.value(metadata i8* %5, metadata !6219, metadata !DIExpression()), !dbg !6220
  %6 = load i8, i8* %5, align 1, !dbg !6226
  %7 = icmp eq i8 %6, 104, !dbg !6227
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6228
  %9 = load i24, i24* %8, align 4, !dbg !6228
  %10 = and i24 %9, -30721, !dbg !6228
  br i1 %7, label %11, label %14, !dbg !6229

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !6230
  store i24 %12, i24* %8, align 4, !dbg !6230
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6232
  call void @llvm.dbg.value(metadata i8* %13, metadata !6219, metadata !DIExpression()), !dbg !6220
  br label %56, !dbg !6233

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !6234
  store i24 %15, i24* %8, align 4, !dbg !6234
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6236
  call void @llvm.dbg.value(metadata i8* %17, metadata !6219, metadata !DIExpression()), !dbg !6220
  %18 = load i8, i8* %17, align 1, !dbg !6238
  %19 = icmp eq i8 %18, 108, !dbg !6239
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !6240
  %21 = load i24, i24* %20, align 4, !dbg !6240
  %22 = and i24 %21, -30721, !dbg !6240
  br i1 %19, label %23, label %26, !dbg !6241

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !6242
  store i24 %24, i24* %20, align 4, !dbg !6242
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6244
  call void @llvm.dbg.value(metadata i8* %25, metadata !6219, metadata !DIExpression()), !dbg !6220
  br label %56, !dbg !6245

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !6246
  store i24 %27, i24* %20, align 4, !dbg !6246
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !6248
  %30 = load i24, i24* %29, align 4, !dbg !6249
  %31 = and i24 %30, -30721, !dbg !6249
  %32 = or i24 %31, 10240, !dbg !6249
  store i24 %32, i24* %29, align 4, !dbg !6249
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6250
  call void @llvm.dbg.value(metadata i8* %33, metadata !6219, metadata !DIExpression()), !dbg !6220
  br label %56, !dbg !6251

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !6252
  %36 = load i24, i24* %35, align 4, !dbg !6253
  %37 = and i24 %36, -30721, !dbg !6253
  %38 = or i24 %37, 12288, !dbg !6253
  store i24 %38, i24* %35, align 4, !dbg !6253
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6254
  call void @llvm.dbg.value(metadata i8* %39, metadata !6219, metadata !DIExpression()), !dbg !6220
  br label %56, !dbg !6255

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !6256
  %42 = load i24, i24* %41, align 4, !dbg !6257
  %43 = and i24 %42, -30721, !dbg !6257
  %44 = or i24 %43, 14336, !dbg !6257
  store i24 %44, i24* %41, align 4, !dbg !6257
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6258
  call void @llvm.dbg.value(metadata i8* %45, metadata !6219, metadata !DIExpression()), !dbg !6220
  br label %56, !dbg !6259

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !6260
  %48 = load i24, i24* %47, align 4, !dbg !6261
  %49 = and i24 %48, -30723, !dbg !6261
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6262
  call void @llvm.dbg.value(metadata i8* %50, metadata !6219, metadata !DIExpression()), !dbg !6220
  %51 = or i24 %49, 16386, !dbg !6263
  store i24 %51, i24* %47, align 4, !dbg !6263
  br label %56, !dbg !6264

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !6265
  %54 = load i24, i24* %53, align 4, !dbg !6266
  %55 = and i24 %54, -30721, !dbg !6266
  store i24 %55, i24* %53, align 4, !dbg !6266
  br label %56, !dbg !6267

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !6219, metadata !DIExpression()), !dbg !6220
  ret i8* %57, !dbg !6268
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !6269 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6271, metadata !DIExpression()), !dbg !6276
  call void @llvm.dbg.value(metadata i8* %1, metadata !6272, metadata !DIExpression()), !dbg !6276
  call void @llvm.dbg.value(metadata i8 0, metadata !6273, metadata !DIExpression()), !dbg !6276
  call void @llvm.dbg.value(metadata i8* %1, metadata !6272, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6276
  %3 = load i8, i8* %1, align 1, !dbg !6277
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6278
  store i8 %3, i8* %4, align 1, !dbg !6279
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !6280

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !6281

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6282
  %9 = load i24, i24* %8, align 4, !dbg !6282
  %10 = and i24 %9, -458753, !dbg !6282
  %11 = or i24 %10, %7, !dbg !6282
  call void @llvm.dbg.label(metadata !6274), !dbg !6283
  %12 = and i24 %9, 30720, !dbg !6284
  %13 = icmp eq i24 %12, 16384, !dbg !6284
  %14 = zext i1 %13 to i24, !dbg !6286
  %15 = or i24 %11, %14, !dbg !6286
  %16 = icmp eq i8 %3, 99, !dbg !6287
  br i1 %16, label %17, label %43, !dbg !6289

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !6290
  %19 = icmp ne i24 %18, 0, !dbg !6290
  call void @llvm.dbg.value(metadata i1 %19, metadata !6273, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6276
  br label %43, !dbg !6292

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !6293
  %22 = load i24, i24* %21, align 4, !dbg !6294
  %23 = and i24 %22, -458753, !dbg !6294
  %24 = or i24 %23, 262144, !dbg !6294
  call void @llvm.dbg.value(metadata i8 1, metadata !6273, metadata !DIExpression()), !dbg !6276
  br label %43, !dbg !6295

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !6298
  %27 = load i24, i24* %26, align 4, !dbg !6299
  %28 = and i24 %27, -458753, !dbg !6299
  %29 = or i24 %28, 196608, !dbg !6299
  %30 = and i24 %27, 30720, !dbg !6300
  %31 = icmp eq i24 %30, 16384, !dbg !6300
  br label %43, !dbg !6302

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !6303
  %34 = load i24, i24* %33, align 4, !dbg !6304
  %35 = and i24 %34, -458753, !dbg !6304
  %36 = or i24 %35, 196608, !dbg !6304
  %37 = and i24 %34, 30720, !dbg !6305
  %38 = icmp ne i24 %37, 0, !dbg !6305
  br label %43, !dbg !6307

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !6308
  %41 = load i24, i24* %40, align 4, !dbg !6309
  %42 = or i24 %41, 1, !dbg !6309
  br label %43, !dbg !6310

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !6311
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !6312
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6313
  call void @llvm.dbg.value(metadata i8* %48, metadata !6272, metadata !DIExpression()), !dbg !6276
  call void @llvm.dbg.value(metadata i8 poison, metadata !6273, metadata !DIExpression()), !dbg !6276
  %49 = lshr i24 %44, 1, !dbg !6311
  %50 = and i24 %49, 1, !dbg !6311
  %51 = zext i24 %50 to i32, !dbg !6311
  %52 = or i32 %51, %47, !dbg !6311
  %53 = trunc i32 %52 to i24, !dbg !6311
  %54 = shl nuw nsw i24 %53, 1, !dbg !6311
  %55 = and i24 %44, -3, !dbg !6311
  %56 = or i24 %54, %55, !dbg !6311
  store i24 %56, i24* %46, align 4, !dbg !6311
  ret i8* %48, !dbg !6314
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #15 !dbg !6315 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !6319, metadata !DIExpression()), !dbg !6322
  %2 = load i8*, i8** %0, align 4, !dbg !6323
  call void @llvm.dbg.value(metadata i8* %2, metadata !6320, metadata !DIExpression()), !dbg !6322
  call void @llvm.dbg.value(metadata i32 0, metadata !6321, metadata !DIExpression()), !dbg !6322
  %3 = load i8, i8* %2, align 1, !dbg !6324
  %4 = zext i8 %3 to i32, !dbg !6325
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #26, !dbg !6326
  %6 = icmp eq i32 %5, 0, !dbg !6327
  br i1 %6, label %19, label %7, !dbg !6327

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6321, metadata !DIExpression()), !dbg !6322
  call void @llvm.dbg.value(metadata i8* %10, metadata !6320, metadata !DIExpression()), !dbg !6322
  %11 = mul i32 %9, 10, !dbg !6328
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6330
  call void @llvm.dbg.value(metadata i8* %12, metadata !6320, metadata !DIExpression()), !dbg !6322
  %13 = add i32 %11, -48, !dbg !6331
  %14 = add i32 %13, %8, !dbg !6332
  call void @llvm.dbg.value(metadata i32 %14, metadata !6321, metadata !DIExpression()), !dbg !6322
  %15 = load i8, i8* %12, align 1, !dbg !6324
  %16 = zext i8 %15 to i32, !dbg !6325
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #26, !dbg !6326
  %18 = icmp eq i32 %17, 0, !dbg !6327
  br i1 %18, label %19, label %7, !dbg !6327, !llvm.loop !6333

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !6322
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !6322
  store i8* %20, i8** %0, align 4, !dbg !6335
  ret i32 %21, !dbg !6336
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #5 !dbg !6337 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6339, metadata !DIExpression()), !dbg !6340
  %2 = add i32 %0, -48, !dbg !6341
  %3 = icmp ult i32 %2, 10, !dbg !6342
  %4 = zext i1 %3 to i32, !dbg !6342
  ret i32 %4, !dbg !6343
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !6344 {
  tail call void asm sideeffect ".globl\09CONFIG_BM_MESSAGE_SIZE\0A\09.equ\09CONFIG_BM_MESSAGE_SIZE,256\0A\09.type\09CONFIG_BM_MESSAGE_SIZE,%object", ""() #25, !dbg !6346, !srcloc !6347
  tail call void asm sideeffect ".globl\09CONFIG_BM_ONE_TO\0A\09.equ\09CONFIG_BM_ONE_TO,8\0A\09.type\09CONFIG_BM_ONE_TO,%object", ""() #25, !dbg !6348, !srcloc !6349
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #25, !dbg !6350, !srcloc !6351
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #25, !dbg !6352, !srcloc !6353
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #25, !dbg !6354, !srcloc !6355
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #25, !dbg !6356, !srcloc !6357
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #25, !dbg !6358, !srcloc !6359
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,82\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #25, !dbg !6360, !srcloc !6361
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,168000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #25, !dbg !6362, !srcloc !6363
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #25, !dbg !6364, !srcloc !6365
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,1024\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #25, !dbg !6366, !srcloc !6367
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #25, !dbg !6368, !srcloc !6369
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #25, !dbg !6370, !srcloc !6371
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #25, !dbg !6372, !srcloc !6373
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #25, !dbg !6374, !srcloc !6375
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,1024\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #25, !dbg !6376, !srcloc !6377
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #25, !dbg !6378, !srcloc !6379
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #25, !dbg !6380, !srcloc !6381
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #25, !dbg !6382, !srcloc !6383
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #25, !dbg !6384, !srcloc !6385
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #25, !dbg !6386, !srcloc !6387
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #25, !dbg !6388, !srcloc !6389
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #25, !dbg !6390, !srcloc !6391
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #25, !dbg !6392, !srcloc !6393
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #25, !dbg !6394, !srcloc !6395
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #25, !dbg !6396, !srcloc !6397
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #25, !dbg !6398, !srcloc !6399
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #25, !dbg !6400, !srcloc !6401
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ADAFRUIT_FEATHER_HEADER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ADAFRUIT_FEATHER_HEADER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ADAFRUIT_FEATHER_HEADER_ENABLED,%object", ""() #25, !dbg !6402, !srcloc !6403
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #25, !dbg !6404, !srcloc !6405
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #25, !dbg !6406, !srcloc !6407
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #25, !dbg !6408, !srcloc !6409
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #25, !dbg !6410, !srcloc !6411
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #25, !dbg !6412, !srcloc !6413
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_JEDEC_SPI_NOR_ENABLED\0A\09.equ\09CONFIG_DT_HAS_JEDEC_SPI_NOR_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_JEDEC_SPI_NOR_ENABLED,%object", ""() #25, !dbg !6414, !srcloc !6415
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #25, !dbg !6416, !srcloc !6417
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #25, !dbg !6418, !srcloc !6419
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED,%object", ""() #25, !dbg !6420, !srcloc !6421
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #25, !dbg !6422, !srcloc !6423
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !6424, !srcloc !6425
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #25, !dbg !6426, !srcloc !6427
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #25, !dbg !6428, !srcloc !6429
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #25, !dbg !6430, !srcloc !6431
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #25, !dbg !6432, !srcloc !6433
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,%object", ""() #25, !dbg !6434, !srcloc !6435
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #25, !dbg !6436, !srcloc !6437
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #25, !dbg !6438, !srcloc !6439
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #25, !dbg !6440, !srcloc !6441
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #25, !dbg !6442, !srcloc !6443
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #25, !dbg !6444, !srcloc !6445
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #25, !dbg !6446, !srcloc !6447
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !6448, !srcloc !6449
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #25, !dbg !6450, !srcloc !6451
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #25, !dbg !6452, !srcloc !6453
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED,%object", ""() #25, !dbg !6454, !srcloc !6455
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #25, !dbg !6456, !srcloc !6457
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #25, !dbg !6458, !srcloc !6459
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #25, !dbg !6460, !srcloc !6461
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #25, !dbg !6462, !srcloc !6463
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #25, !dbg !6464, !srcloc !6465
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #25, !dbg !6466, !srcloc !6467
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #25, !dbg !6468, !srcloc !6469
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #25, !dbg !6470, !srcloc !6471
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #25, !dbg !6472, !srcloc !6473
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #25, !dbg !6474, !srcloc !6475
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #25, !dbg !6476, !srcloc !6477
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #25, !dbg !6478, !srcloc !6479
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #25, !dbg !6480, !srcloc !6481
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #25, !dbg !6482, !srcloc !6483
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #25, !dbg !6484, !srcloc !6485
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #25, !dbg !6486, !srcloc !6487
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #25, !dbg !6488, !srcloc !6489
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #25, !dbg !6490, !srcloc !6491
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #25, !dbg !6492, !srcloc !6493
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #25, !dbg !6494, !srcloc !6495
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #25, !dbg !6496, !srcloc !6497
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #25, !dbg !6498, !srcloc !6499
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #25, !dbg !6500, !srcloc !6501
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #25, !dbg !6502, !srcloc !6503
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #25, !dbg !6504, !srcloc !6505
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #25, !dbg !6506, !srcloc !6507
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #25, !dbg !6508, !srcloc !6509
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #25, !dbg !6510, !srcloc !6511
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #25, !dbg !6512, !srcloc !6513
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #25, !dbg !6514, !srcloc !6515
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #25, !dbg !6516, !srcloc !6517
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #25, !dbg !6518, !srcloc !6519
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #25, !dbg !6520, !srcloc !6521
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #25, !dbg !6522, !srcloc !6523
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #25, !dbg !6524, !srcloc !6525
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_ADAFRUIT_FEATHER_STM32F405\0A\09.equ\09CONFIG_BOARD_ADAFRUIT_FEATHER_STM32F405,1\0A\09.type\09CONFIG_BOARD_ADAFRUIT_FEATHER_STM32F405,%object", ""() #25, !dbg !6526, !srcloc !6527
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #25, !dbg !6528, !srcloc !6529
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #25, !dbg !6530, !srcloc !6531
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #25, !dbg !6532, !srcloc !6533
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #25, !dbg !6534, !srcloc !6535
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #25, !dbg !6536, !srcloc !6537
  tail call void asm sideeffect ".globl\09CONFIG_STM32_CCM\0A\09.equ\09CONFIG_STM32_CCM,1\0A\09.type\09CONFIG_STM32_CCM,%object", ""() #25, !dbg !6538, !srcloc !6539
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F405XG\0A\09.equ\09CONFIG_SOC_STM32F405XG,1\0A\09.type\09CONFIG_SOC_STM32F405XG,%object", ""() #25, !dbg !6540, !srcloc !6541
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #25, !dbg !6542, !srcloc !6543
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #25, !dbg !6544, !srcloc !6545
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #25, !dbg !6546, !srcloc !6547
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #25, !dbg !6548, !srcloc !6549
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #25, !dbg !6550, !srcloc !6551
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #25, !dbg !6552, !srcloc !6553
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #25, !dbg !6554, !srcloc !6555
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #25, !dbg !6556, !srcloc !6557
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #25, !dbg !6558, !srcloc !6559
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #25, !dbg !6560, !srcloc !6561
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #25, !dbg !6562, !srcloc !6563
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #25, !dbg !6564, !srcloc !6565
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #25, !dbg !6566, !srcloc !6567
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #25, !dbg !6568, !srcloc !6569
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #25, !dbg !6570, !srcloc !6571
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #25, !dbg !6572, !srcloc !6573
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #25, !dbg !6574, !srcloc !6575
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #25, !dbg !6576, !srcloc !6577
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #25, !dbg !6578, !srcloc !6579
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #25, !dbg !6580, !srcloc !6581
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #25, !dbg !6582, !srcloc !6583
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #25, !dbg !6584, !srcloc !6585
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #25, !dbg !6586, !srcloc !6587
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #25, !dbg !6588, !srcloc !6589
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #25, !dbg !6590, !srcloc !6591
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #25, !dbg !6592, !srcloc !6593
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #25, !dbg !6594, !srcloc !6595
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #25, !dbg !6596, !srcloc !6597
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #25, !dbg !6598, !srcloc !6599
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #25, !dbg !6600, !srcloc !6601
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #25, !dbg !6602, !srcloc !6603
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #25, !dbg !6604, !srcloc !6605
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #25, !dbg !6606, !srcloc !6607
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #25, !dbg !6608, !srcloc !6609
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #25, !dbg !6610, !srcloc !6611
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #25, !dbg !6612, !srcloc !6613
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #25, !dbg !6614, !srcloc !6615
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #25, !dbg !6616, !srcloc !6617
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #25, !dbg !6618, !srcloc !6619
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #25, !dbg !6620, !srcloc !6621
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #25, !dbg !6622, !srcloc !6623
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #25, !dbg !6624, !srcloc !6625
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #25, !dbg !6626, !srcloc !6627
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #25, !dbg !6628, !srcloc !6629
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #25, !dbg !6630, !srcloc !6631
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #25, !dbg !6632, !srcloc !6633
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #25, !dbg !6634, !srcloc !6635
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #25, !dbg !6636, !srcloc !6637
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #25, !dbg !6638, !srcloc !6639
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #25, !dbg !6640, !srcloc !6641
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #25, !dbg !6642, !srcloc !6643
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #25, !dbg !6644, !srcloc !6645
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #25, !dbg !6646, !srcloc !6647
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #25, !dbg !6648, !srcloc !6649
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #25, !dbg !6650, !srcloc !6651
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #25, !dbg !6652, !srcloc !6653
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !6654, !srcloc !6655
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #25, !dbg !6656, !srcloc !6657
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #25, !dbg !6658, !srcloc !6659
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #25, !dbg !6660, !srcloc !6661
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #25, !dbg !6662, !srcloc !6663
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #25, !dbg !6664, !srcloc !6665
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #25, !dbg !6666, !srcloc !6667
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #25, !dbg !6668, !srcloc !6669
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #25, !dbg !6670, !srcloc !6671
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #25, !dbg !6672, !srcloc !6673
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #25, !dbg !6674, !srcloc !6675
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #25, !dbg !6676, !srcloc !6677
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #25, !dbg !6678, !srcloc !6679
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #25, !dbg !6680, !srcloc !6681
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #25, !dbg !6682, !srcloc !6683
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #25, !dbg !6684, !srcloc !6685
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #25, !dbg !6686, !srcloc !6687
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #25, !dbg !6688, !srcloc !6689
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #25, !dbg !6690, !srcloc !6691
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #25, !dbg !6692, !srcloc !6693
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #25, !dbg !6694, !srcloc !6695
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #25, !dbg !6696, !srcloc !6697
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #25, !dbg !6698, !srcloc !6699
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #25, !dbg !6700, !srcloc !6701
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #25, !dbg !6702, !srcloc !6703
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #25, !dbg !6704, !srcloc !6705
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #25, !dbg !6706, !srcloc !6707
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #25, !dbg !6708, !srcloc !6709
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #25, !dbg !6710, !srcloc !6711
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #25, !dbg !6712, !srcloc !6713
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #25, !dbg !6714, !srcloc !6715
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #25, !dbg !6716, !srcloc !6717
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #25, !dbg !6718, !srcloc !6719
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #25, !dbg !6720, !srcloc !6721
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #25, !dbg !6722, !srcloc !6723
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #25, !dbg !6724, !srcloc !6725
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #25, !dbg !6726, !srcloc !6727
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #25, !dbg !6728, !srcloc !6729
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #25, !dbg !6730, !srcloc !6731
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #25, !dbg !6732, !srcloc !6733
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #25, !dbg !6734, !srcloc !6735
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #25, !dbg !6736, !srcloc !6737
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #25, !dbg !6738, !srcloc !6739
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #25, !dbg !6740, !srcloc !6741
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #25, !dbg !6742, !srcloc !6743
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #25, !dbg !6744, !srcloc !6745
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #25, !dbg !6746, !srcloc !6747
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #25, !dbg !6748, !srcloc !6749
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #25, !dbg !6750, !srcloc !6751
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #25, !dbg !6752, !srcloc !6753
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !6754, !srcloc !6755
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #25, !dbg !6756, !srcloc !6757
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #25, !dbg !6758, !srcloc !6759
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #25, !dbg !6760, !srcloc !6761
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #25, !dbg !6762, !srcloc !6763
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #25, !dbg !6764, !srcloc !6765
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #25, !dbg !6766, !srcloc !6767
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #25, !dbg !6768, !srcloc !6769
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #25, !dbg !6770, !srcloc !6771
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #25, !dbg !6772, !srcloc !6773
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #25, !dbg !6774, !srcloc !6775
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #25, !dbg !6776, !srcloc !6777
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #25, !dbg !6778, !srcloc !6779
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #25, !dbg !6780, !srcloc !6781
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #25, !dbg !6782, !srcloc !6783
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #25, !dbg !6784, !srcloc !6785
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #25, !dbg !6786, !srcloc !6787
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #25, !dbg !6788, !srcloc !6789
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #25, !dbg !6790, !srcloc !6791
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #25, !dbg !6792, !srcloc !6793
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #25, !dbg !6794, !srcloc !6795
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #25, !dbg !6796, !srcloc !6797
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #25, !dbg !6798, !srcloc !6799
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #25, !dbg !6800, !srcloc !6801
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #25, !dbg !6802, !srcloc !6803
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #25, !dbg !6804, !srcloc !6805
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #25, !dbg !6806, !srcloc !6807
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #25, !dbg !6808, !srcloc !6809
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #25, !dbg !6810, !srcloc !6811
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #25, !dbg !6812, !srcloc !6813
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #25, !dbg !6814, !srcloc !6815
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #25, !dbg !6816, !srcloc !6817
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #25, !dbg !6818, !srcloc !6819
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #25, !dbg !6820, !srcloc !6821
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #25, !dbg !6822, !srcloc !6823
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #25, !dbg !6824, !srcloc !6825
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #25, !dbg !6826, !srcloc !6827
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #25, !dbg !6828, !srcloc !6829
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #25, !dbg !6830, !srcloc !6831
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #25, !dbg !6832, !srcloc !6833
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #25, !dbg !6834, !srcloc !6835
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #25, !dbg !6836, !srcloc !6837
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,12000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #25, !dbg !6838, !srcloc !6839
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #25, !dbg !6840, !srcloc !6841
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #25, !dbg !6842, !srcloc !6843
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #25, !dbg !6844, !srcloc !6845
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #25, !dbg !6846, !srcloc !6847
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #25, !dbg !6848, !srcloc !6849
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #25, !dbg !6850, !srcloc !6851
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #25, !dbg !6852, !srcloc !6853
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #25, !dbg !6854, !srcloc !6855
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #25, !dbg !6856, !srcloc !6857
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #25, !dbg !6858, !srcloc !6859
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #25, !dbg !6860, !srcloc !6861
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #25, !dbg !6862, !srcloc !6863
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #25, !dbg !6864, !srcloc !6865
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #25, !dbg !6866, !srcloc !6867
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #25, !dbg !6868, !srcloc !6869
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #25, !dbg !6870, !srcloc !6871
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #25, !dbg !6872, !srcloc !6873
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #25, !dbg !6874, !srcloc !6875
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #25, !dbg !6876, !srcloc !6877
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #25, !dbg !6878, !srcloc !6879
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #25, !dbg !6880, !srcloc !6881
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #25, !dbg !6882, !srcloc !6883
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #25, !dbg !6884, !srcloc !6885
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #25, !dbg !6886, !srcloc !6887
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #25, !dbg !6888, !srcloc !6889
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #25, !dbg !6890, !srcloc !6891
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #25, !dbg !6892, !srcloc !6893
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #25, !dbg !6894, !srcloc !6895
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #25, !dbg !6896, !srcloc !6897
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #25, !dbg !6898, !srcloc !6899
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #25, !dbg !6900, !srcloc !6901
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #25, !dbg !6902, !srcloc !6903
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #25, !dbg !6904, !srcloc !6905
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #25, !dbg !6906, !srcloc !6907
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #25, !dbg !6908, !srcloc !6909
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #25, !dbg !6910, !srcloc !6911
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #25, !dbg !6912, !srcloc !6913
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #25, !dbg !6914, !srcloc !6915
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #25, !dbg !6916, !srcloc !6917
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #25, !dbg !6918, !srcloc !6919
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #25, !dbg !6920, !srcloc !6921
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS\0A\09.equ\09CONFIG_ZBUS,1\0A\09.type\09CONFIG_ZBUS,%object", ""() #25, !dbg !6922, !srcloc !6923
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_STRUCTS_ITERABLE_ACCESS\0A\09.equ\09CONFIG_ZBUS_STRUCTS_ITERABLE_ACCESS,1\0A\09.type\09CONFIG_ZBUS_STRUCTS_ITERABLE_ACCESS,%object", ""() #25, !dbg !6924, !srcloc !6925
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_RUNTIME_OBSERVERS_POOL_SIZE\0A\09.equ\09CONFIG_ZBUS_RUNTIME_OBSERVERS_POOL_SIZE,0\0A\09.type\09CONFIG_ZBUS_RUNTIME_OBSERVERS_POOL_SIZE,%object", ""() #25, !dbg !6926, !srcloc !6927
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ZBUS_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ZBUS_LOG_LEVEL_INF,%object", ""() #25, !dbg !6928, !srcloc !6929
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_LOG_LEVEL\0A\09.equ\09CONFIG_ZBUS_LOG_LEVEL,3\0A\09.type\09CONFIG_ZBUS_LOG_LEVEL,%object", ""() #25, !dbg !6930, !srcloc !6931
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #25, !dbg !6932, !srcloc !6933
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !6934, !srcloc !6935
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #25, !dbg !6936, !srcloc !6937
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !6938, !srcloc !6939
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !6940, !srcloc !6941
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #25, !dbg !6942, !srcloc !6943
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #25, !dbg !6944, !srcloc !6945
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #25, !dbg !6946, !srcloc !6947
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #25, !dbg !6948, !srcloc !6949
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #25, !dbg !6950, !srcloc !6951
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #25, !dbg !6952, !srcloc !6953
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #25, !dbg !6954, !srcloc !6955
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #25, !dbg !6956, !srcloc !6957
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #25, !dbg !6958, !srcloc !6959
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #25, !dbg !6960, !srcloc !6961
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #25, !dbg !6962, !srcloc !6963
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #25, !dbg !6964, !srcloc !6965
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #25, !dbg !6966, !srcloc !6967
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #25, !dbg !6968, !srcloc !6969
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #25, !dbg !6970, !srcloc !6971
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #25, !dbg !6972, !srcloc !6973
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #25, !dbg !6974, !srcloc !6975
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #25, !dbg !6976, !srcloc !6977
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #25, !dbg !6978, !srcloc !6979
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #25, !dbg !6980, !srcloc !6981
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #25, !dbg !6982, !srcloc !6983
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #25, !dbg !6984, !srcloc !6985
  ret void, !dbg !6986
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6987 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6989, metadata !DIExpression()), !dbg !6991
  tail call fastcc void @LL_FLASH_EnableInstCache() #26, !dbg !6992
  tail call fastcc void @LL_FLASH_EnableDataCache() #26, !dbg !6993
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !6994, !srcloc !7003
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !6994
  call void @llvm.dbg.value(metadata i32 %3, metadata !7000, metadata !DIExpression()) #25, !dbg !7004
  call void @llvm.dbg.value(metadata i32 undef, metadata !7001, metadata !DIExpression()) #25, !dbg !7004
  call void @llvm.dbg.value(metadata i32 %3, metadata !6990, metadata !DIExpression()), !dbg !6991
  call void @llvm.dbg.value(metadata i32 %3, metadata !7005, metadata !DIExpression()) #25, !dbg !7010
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !7012, !srcloc !7013
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !7014
  ret i32 0, !dbg !7015
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #16 !dbg !7016 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7018
  %2 = or i32 %1, 512, !dbg !7018
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7018
  ret void, !dbg !7019
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #16 !dbg !7020 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7021
  %2 = or i32 %1, 1024, !dbg !7021
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7021
  ret void, !dbg !7022
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #5 !dbg !7023 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7025, metadata !DIExpression()), !dbg !7026
  ret i32 0, !dbg !7027
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !7028 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7031, metadata !DIExpression()), !dbg !7039
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !7040
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !7040
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !7032, metadata !DIExpression()), !dbg !7041
  call void @llvm.va_start(i8* nonnull %3), !dbg !7042
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !7043
  %5 = load i32, i32* %4, align 4, !dbg !7043
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !7043
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #27, !dbg !7043
  call void @llvm.va_end(i8* nonnull %3), !dbg !7044
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !7045
  ret void, !dbg !7045
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !7046 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !7051, metadata !DIExpression()), !dbg !7052
  call void @llvm.dbg.value(metadata i8* %0, metadata !7050, metadata !DIExpression()), !dbg !7052
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #27, !dbg !7053
  ret void, !dbg !7054
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !7055 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7059, metadata !DIExpression()), !dbg !7063
  call void @llvm.dbg.value(metadata i8* %1, metadata !7060, metadata !DIExpression()), !dbg !7063
  call void @llvm.dbg.value(metadata i32 %2, metadata !7061, metadata !DIExpression()), !dbg !7063
  call void @llvm.dbg.value(metadata i8* %1, metadata !7062, metadata !DIExpression()), !dbg !7063
  %4 = icmp eq i32 %2, 0, !dbg !7064
  br i1 %4, label %14, label %5, !dbg !7065

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.20(i32 noundef %0) #26, !dbg !7063
  %7 = zext i8 %6 to i32
  br label %8, !dbg !7065

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7062, metadata !DIExpression()), !dbg !7063
  call void @llvm.dbg.value(metadata i32 %10, metadata !7061, metadata !DIExpression()), !dbg !7063
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i32 0, i32 0), i32 noundef %7) #27, !dbg !7066
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #26, !dbg !7068
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !7069
  call void @llvm.dbg.value(metadata i32 %11, metadata !7061, metadata !DIExpression()), !dbg !7063
  call void @llvm.dbg.value(metadata i8* %12, metadata !7062, metadata !DIExpression()), !dbg !7063
  br i1 %13, label %14, label %8, !dbg !7069, !llvm.loop !7070

14:                                               ; preds = %8, %3
  ret void, !dbg !7072
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.20(i32 noundef %0) unnamed_addr #5 !dbg !7073 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7075, metadata !DIExpression()), !dbg !7076
  %2 = add i32 %0, -1, !dbg !7077
  %3 = icmp ult i32 %2, 4, !dbg !7077
  %4 = shl i32 %2, 3, !dbg !7077
  %5 = lshr i32 1145657157, %4, !dbg !7077
  %6 = trunc i32 %5 to i8, !dbg !7077
  %7 = select i1 %3, i8 %6, i8 63, !dbg !7077
  ret i8 %7, !dbg !7078
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !7079 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7083, metadata !DIExpression()), !dbg !7094
  call void @llvm.dbg.value(metadata i32 %1, metadata !7084, metadata !DIExpression()), !dbg !7094
  call void @llvm.dbg.value(metadata i32 0, metadata !7085, metadata !DIExpression()), !dbg !7095
  br label %4, !dbg !7096

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.22, i32 0, i32 0)) #27, !dbg !7097
  call void @llvm.dbg.value(metadata i32 0, metadata !7087, metadata !DIExpression()), !dbg !7098
  br label %16, !dbg !7099

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7085, metadata !DIExpression()), !dbg !7095
  %6 = icmp ult i32 %5, %1, !dbg !7100
  br i1 %6, label %7, label %11, !dbg !7104

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !7105
  %9 = load i8, i8* %8, align 1, !dbg !7105
  %10 = zext i8 %9 to i32, !dbg !7107
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.23, i32 0, i32 0), i32 noundef %10) #27, !dbg !7108
  br label %12, !dbg !7109

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.24, i32 0, i32 0)) #27, !dbg !7110
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !7112
  call void @llvm.dbg.value(metadata i32 %13, metadata !7085, metadata !DIExpression()), !dbg !7095
  %14 = icmp eq i32 %13, 8, !dbg !7113
  br i1 %14, label %3, label %4, !dbg !7096, !llvm.loop !7114

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.25, i32 0, i32 0)) #27, !dbg !7116
  ret void, !dbg !7117

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !7087, metadata !DIExpression()), !dbg !7098
  %18 = icmp ult i32 %17, %1, !dbg !7118
  br i1 %18, label %19, label %26, !dbg !7119

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !7120
  %21 = load i8, i8* %20, align 1, !dbg !7120
  call void @llvm.dbg.value(metadata i8 %21, metadata !7089, metadata !DIExpression()), !dbg !7121
  %22 = zext i8 %21 to i32, !dbg !7122
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #26, !dbg !7123
  %24 = icmp eq i32 %23, 0, !dbg !7124
  %25 = select i1 %24, i32 46, i32 %22, !dbg !7123
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.26, i32 0, i32 0), i32 noundef %25) #27, !dbg !7125
  br label %27, !dbg !7126

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.27, i32 0, i32 0)) #27, !dbg !7127
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !7129
  call void @llvm.dbg.value(metadata i32 %28, metadata !7087, metadata !DIExpression()), !dbg !7098
  %29 = icmp eq i32 %28, 8, !dbg !7130
  br i1 %29, label %15, label %16, !dbg !7099, !llvm.loop !7131
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #5 !dbg !7133 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7135, metadata !DIExpression()), !dbg !7136
  %2 = add i32 %0, -32, !dbg !7137
  %3 = icmp ult i32 %2, 95, !dbg !7137
  %4 = zext i1 %3 to i32, !dbg !7137
  ret i32 %4, !dbg !7138
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !7139 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7188, metadata !DIExpression()), !dbg !7190
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !7189, metadata !DIExpression()), !dbg !7190
  %3 = icmp eq %struct.__esf* %1, null, !dbg !7191
  br i1 %3, label %5, label %4, !dbg !7193

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #26, !dbg !7194
  br label %5, !dbg !7196

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #27, !dbg !7197
  ret void, !dbg !7198
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7199 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7203, metadata !DIExpression()), !dbg !7204
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7205
  %3 = load i32, i32* %2, align 4, !dbg !7205
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !7205
  %5 = load i32, i32* %4, align 4, !dbg !7205
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !7205
  %7 = load i32, i32* %6, align 4, !dbg !7205
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.28, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #27, !dbg !7205
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !7210
  %9 = load i32, i32* %8, align 4, !dbg !7210
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !7210
  %11 = load i32, i32* %10, align 4, !dbg !7210
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !7210
  %13 = load i32, i32* %12, align 4, !dbg !7210
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.29, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #27, !dbg !7210
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !7215
  %15 = load i32, i32* %14, align 4, !dbg !7215
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.30, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #27, !dbg !7215
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7220
  %17 = load i32, i32* %16, align 4, !dbg !7220
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.31, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #27, !dbg !7220
  ret void, !dbg !7225
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !7226 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7243, metadata !DIExpression()), !dbg !7246
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !7244, metadata !DIExpression()), !dbg !7246
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7247
  %4 = load i32, i32* %3, align 4, !dbg !7247
  call void @llvm.dbg.value(metadata i32 %4, metadata !7245, metadata !DIExpression()), !dbg !7246
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #26, !dbg !7248
  ret void, !dbg !7249
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !7250 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7254, metadata !DIExpression()), !dbg !7257
  call void @llvm.dbg.value(metadata i8* %0, metadata !7255, metadata !DIExpression()), !dbg !7257
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !7258
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #25, !dbg !7258
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !7256, metadata !DIExpression()), !dbg !7259
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !7259
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7260
  %5 = bitcast i8* %4 to i32*, !dbg !7260
  %6 = load i32, i32* %5, align 4, !dbg !7260
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !7261
  store i32 %6, i32* %7, align 4, !dbg !7262
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #26, !dbg !7263
  unreachable, !dbg !7264
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !7265 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7268, metadata !DIExpression()), !dbg !7269
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #26, !dbg !7270
  ret void, !dbg !7271
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7272 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7276, metadata !DIExpression()), !dbg !7277
  %2 = icmp sgt i32 %0, -1, !dbg !7278
  br i1 %2, label %3, label %8, !dbg !7280

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !7281, !srcloc !7283
  %4 = and i32 %0, 31, !dbg !7284
  %5 = shl nuw i32 1, %4, !dbg !7285
  %6 = lshr i32 %0, 5, !dbg !7286
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !7287
  store volatile i32 %5, i32* %7, align 4, !dbg !7288
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !7289, !srcloc !7290
  br label %8, !dbg !7291

8:                                                ; preds = %3, %1
  ret void, !dbg !7292
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !7293 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7295, metadata !DIExpression()), !dbg !7296
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #26, !dbg !7297
  ret void, !dbg !7298
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7299 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7301, metadata !DIExpression()), !dbg !7302
  %2 = icmp sgt i32 %0, -1, !dbg !7303
  br i1 %2, label %3, label %8, !dbg !7305

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !7306
  %5 = shl nuw i32 1, %4, !dbg !7308
  %6 = lshr i32 %0, 5, !dbg !7309
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !7310
  store volatile i32 %5, i32* %7, align 4, !dbg !7311
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !7312, !srcloc !7316
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !7317, !srcloc !7320
  br label %8, !dbg !7321

8:                                                ; preds = %3, %1
  ret void, !dbg !7322
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #17 !dbg !7323 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7327, metadata !DIExpression()), !dbg !7328
  %2 = lshr i32 %0, 5, !dbg !7329
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !7330
  %4 = load volatile i32, i32* %3, align 4, !dbg !7330
  %5 = and i32 %0, 31, !dbg !7331
  %6 = shl nuw i32 1, %5, !dbg !7331
  %7 = and i32 %4, %6, !dbg !7332
  ret i32 %7, !dbg !7333
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #16 !dbg !7334 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7338, metadata !DIExpression()), !dbg !7341
  call void @llvm.dbg.value(metadata i32 %1, metadata !7339, metadata !DIExpression()), !dbg !7341
  call void @llvm.dbg.value(metadata i32 %2, metadata !7340, metadata !DIExpression()), !dbg !7341
  %4 = add i32 %1, 1, !dbg !7342
  call void @llvm.dbg.value(metadata i32 %4, metadata !7339, metadata !DIExpression()), !dbg !7341
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #26, !dbg !7345
  ret void, !dbg !7346
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !7347 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7351, metadata !DIExpression()), !dbg !7353
  call void @llvm.dbg.value(metadata i32 %1, metadata !7352, metadata !DIExpression()), !dbg !7353
  %3 = trunc i32 %1 to i8, !dbg !7354
  %4 = shl i8 %3, 4, !dbg !7354
  %5 = and i32 %0, 15, !dbg !7356
  %6 = add nsw i32 %5, -4, !dbg !7356
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !7356
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7356
  %9 = icmp slt i32 %0, 0, !dbg !7356
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !7356
  store volatile i8 %4, i8* %10, align 1, !dbg !7354
  ret void, !dbg !7357
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !7358 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7360, metadata !DIExpression()), !dbg !7361
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #27, !dbg !7362
  ret void, !dbg !7363
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !7364 {
  tail call void @z_SysNmiOnReset() #27, !dbg !7366
  tail call void @z_arm_int_exit() #27, !dbg !7367
  ret void, !dbg !7368
}

; Function Attrs: optsize
declare !dbg !7369 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !7370 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #10 !dbg !7372 {
  tail call fastcc void @relocate_vector_table() #26, !dbg !7374
  tail call fastcc void @z_arm_floating_point_init() #26, !dbg !7375
  tail call void @z_bss_zero() #27, !dbg !7376
  tail call void @z_data_copy() #27, !dbg !7377
  tail call void @z_arm_interrupt_init() #27, !dbg !7378
  tail call void @z_cstart() #29, !dbg !7379
  unreachable, !dbg !7379
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !7380 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !7381
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !7382, !srcloc !7385
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !7386, !srcloc !7389
  ret void, !dbg !7390
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !7391 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7392
  %2 = and i32 %1, -15728641, !dbg !7392
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7392
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #25, !dbg !7393, !srcloc !7398
  call void @llvm.dbg.value(metadata i32 %3, metadata !7396, metadata !DIExpression()) #25, !dbg !7399
  %4 = and i32 %3, -5, !dbg !7400
  call void @llvm.dbg.value(metadata i32 %4, metadata !7401, metadata !DIExpression()) #25, !dbg !7406
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #25, !dbg !7408, !srcloc !7409
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !7410, !srcloc !7389
  ret void, !dbg !7412
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !7413 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7416, metadata !DIExpression()), !dbg !7417
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7418
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !7419
  store i32 %0, i32* %3, align 4, !dbg !7420
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !7421
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !7422
  store i32 %4, i32* %5, align 4, !dbg !7423
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7424
  %7 = or i32 %6, 268435456, !dbg !7424
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7424
  call void @llvm.dbg.value(metadata i32 0, metadata !7425, metadata !DIExpression()) #25, !dbg !7428
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !7430, !srcloc !7431
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7432
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !7433
  %10 = load i32, i32* %9, align 4, !dbg !7433
  ret i32 %10, !dbg !7434
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #8 !dbg !7435 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7545, metadata !DIExpression()), !dbg !7553
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !7546, metadata !DIExpression()), !dbg !7553
  call void @llvm.dbg.value(metadata i8* %2, metadata !7547, metadata !DIExpression()), !dbg !7553
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !7548, metadata !DIExpression()), !dbg !7553
  call void @llvm.dbg.value(metadata i8* %4, metadata !7549, metadata !DIExpression()), !dbg !7553
  call void @llvm.dbg.value(metadata i8* %5, metadata !7550, metadata !DIExpression()), !dbg !7553
  call void @llvm.dbg.value(metadata i8* %6, metadata !7551, metadata !DIExpression()), !dbg !7553
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !7554
  call void @llvm.dbg.value(metadata i8* %8, metadata !7552, metadata !DIExpression()), !dbg !7553
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !7555
  %10 = bitcast i8* %9 to i32*, !dbg !7555
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !7556
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !7557
  %12 = bitcast i8* %8 to i32*, !dbg !7558
  store i32 %11, i32* %12, align 4, !dbg !7559
  %13 = ptrtoint i8* %4 to i32, !dbg !7560
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !7561
  %15 = bitcast i8* %14 to i32*, !dbg !7561
  store i32 %13, i32* %15, align 4, !dbg !7562
  %16 = ptrtoint i8* %5 to i32, !dbg !7563
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !7564
  %18 = bitcast i8* %17 to i32*, !dbg !7564
  store i32 %16, i32* %18, align 4, !dbg !7565
  %19 = ptrtoint i8* %6 to i32, !dbg !7566
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !7567
  %21 = bitcast i8* %20 to i32*, !dbg !7567
  store i32 %19, i32* %21, align 4, !dbg !7568
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !7569
  %23 = bitcast i8* %22 to i32*, !dbg !7569
  store i32 16777216, i32* %23, align 4, !dbg !7570
  %24 = ptrtoint i8* %8 to i32, !dbg !7571
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !7572
  store i32 %24, i32* %25, align 8, !dbg !7573
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !7574
  store i32 0, i32* %26, align 4, !dbg !7575
  ret void, !dbg !7576
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !7577 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7582, metadata !DIExpression()), !dbg !7588
  call void @llvm.dbg.value(metadata i32 %1, metadata !7583, metadata !DIExpression()), !dbg !7588
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7589
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !7584, metadata !DIExpression()), !dbg !7588
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !7590
  br i1 %4, label %19, label %5, !dbg !7592

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !7587, metadata !DIExpression()), !dbg !7588
  %6 = icmp eq i32 %0, -22, !dbg !7593
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !7593
  %8 = load i32, i32* %7, align 4, !dbg !7593
  br i1 %6, label %16, label %9, !dbg !7595

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !7593
  %11 = icmp ule i32 %10, %0, !dbg !7593
  %12 = icmp ugt i32 %8, %0, !dbg !7593
  %13 = and i1 %12, %11, !dbg !7593
  %14 = icmp ugt i32 %8, %1, !dbg !7593
  %15 = and i1 %14, %13, !dbg !7593
  br i1 %15, label %18, label %19, !dbg !7593

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !7593
  br i1 %17, label %18, label %19, !dbg !7595

18:                                               ; preds = %9, %16
  br label %19, !dbg !7596

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !7588
  ret i32 %20, !dbg !7598
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #10 !dbg !7599 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7603, metadata !DIExpression()), !dbg !7606
  call void @llvm.dbg.value(metadata i8* %1, metadata !7604, metadata !DIExpression()), !dbg !7606
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !7605, metadata !DIExpression()), !dbg !7606
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7607
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #27, !dbg !7608
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #25, !dbg !7609, !srcloc !7610
  unreachable, !dbg !7611
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !7612 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7630, metadata !DIExpression()), !dbg !7640
  call void @llvm.dbg.value(metadata i32 %1, metadata !7631, metadata !DIExpression()), !dbg !7640
  call void @llvm.dbg.value(metadata i32 %2, metadata !7632, metadata !DIExpression()), !dbg !7640
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !7633, metadata !DIExpression()), !dbg !7640
  call void @llvm.dbg.value(metadata i32 0, metadata !7634, metadata !DIExpression()), !dbg !7640
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7641
  %9 = and i32 %8, 511, !dbg !7642
  call void @llvm.dbg.value(metadata i32 %9, metadata !7635, metadata !DIExpression()), !dbg !7640
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #25, !dbg !7643
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #25, !dbg !7643
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !7644
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #25, !dbg !7644
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !7639, metadata !DIExpression()), !dbg !7645
  call void @llvm.dbg.value(metadata i32 0, metadata !7646, metadata !DIExpression()) #25, !dbg !7649
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !7651, !srcloc !7652
  call void @llvm.dbg.value(metadata i8* %6, metadata !7637, metadata !DIExpression(DW_OP_deref)), !dbg !7640
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #26, !dbg !7653
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !7638, metadata !DIExpression()), !dbg !7640
  call void @llvm.dbg.value(metadata i8* %5, metadata !7636, metadata !DIExpression(DW_OP_deref)), !dbg !7640
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #26, !dbg !7654
  call void @llvm.dbg.value(metadata i32 %12, metadata !7634, metadata !DIExpression()), !dbg !7640
  %13 = load i8, i8* %5, align 1, !dbg !7655, !range !7657
  call void @llvm.dbg.value(metadata i8 %13, metadata !7636, metadata !DIExpression()), !dbg !7640
  %14 = icmp eq i8 %13, 0, !dbg !7655
  br i1 %14, label %15, label %32, !dbg !7658

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !7659
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #27, !dbg !7660
  %18 = load i8, i8* %6, align 1, !dbg !7661, !range !7657
  call void @llvm.dbg.value(metadata i8 %18, metadata !7637, metadata !DIExpression()), !dbg !7640
  %19 = icmp eq i8 %18, 0, !dbg !7661
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !7663
  %21 = load i32, i32* %20, align 4, !dbg !7663
  br i1 %19, label %27, label %22, !dbg !7664

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !7665
  %24 = icmp eq i32 %23, 0, !dbg !7668
  br i1 %24, label %25, label %31, !dbg !7669

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !7670
  br label %29, !dbg !7672

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !7673
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !7663
  br label %31, !dbg !7675

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #27, !dbg !7675
  br label %32, !dbg !7676

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #25, !dbg !7676
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #25, !dbg !7676
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #25, !dbg !7676
  ret void, !dbg !7676
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !7677 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7682, metadata !DIExpression()), !dbg !7688
  call void @llvm.dbg.value(metadata i32 %1, metadata !7683, metadata !DIExpression()), !dbg !7688
  call void @llvm.dbg.value(metadata i32 %2, metadata !7684, metadata !DIExpression()), !dbg !7688
  call void @llvm.dbg.value(metadata i8* %3, metadata !7685, metadata !DIExpression()), !dbg !7688
  call void @llvm.dbg.value(metadata i8 0, metadata !7686, metadata !DIExpression()), !dbg !7688
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !7687, metadata !DIExpression()), !dbg !7688
  store i8 0, i8* %3, align 1, !dbg !7689
  %5 = icmp ugt i32 %2, -16777217, !dbg !7690
  br i1 %5, label %6, label %17, !dbg !7692

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !7693
  %8 = icmp eq i32 %7, 8, !dbg !7693
  br i1 %8, label %9, label %10, !dbg !7693

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.45, i32 0, i32 0), i32 noundef 69) #27, !dbg !7695
  br label %17, !dbg !7701

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !7702
  %12 = icmp eq i32 %11, 0, !dbg !7702
  br i1 %12, label %13, label %14, !dbg !7703

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !7687, metadata !DIExpression()), !dbg !7688
  store i8 1, i8* %3, align 1, !dbg !7706
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !7688
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !7687, metadata !DIExpression()), !dbg !7688
  br label %17, !dbg !7709

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !7688
  ret %struct.__esf* %18, !dbg !7710
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !7711 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7715, metadata !DIExpression()), !dbg !7719
  call void @llvm.dbg.value(metadata i32 %1, metadata !7716, metadata !DIExpression()), !dbg !7719
  call void @llvm.dbg.value(metadata i8* %2, metadata !7717, metadata !DIExpression()), !dbg !7719
  call void @llvm.dbg.value(metadata i32 0, metadata !7718, metadata !DIExpression()), !dbg !7719
  store i8 0, i8* %2, align 1, !dbg !7720
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !7721

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #26, !dbg !7722
  call void @llvm.dbg.value(metadata i32 %5, metadata !7718, metadata !DIExpression()), !dbg !7719
  br label %12, !dbg !7724

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !7725
  call void @llvm.dbg.value(metadata i32 %7, metadata !7718, metadata !DIExpression()), !dbg !7719
  br label %12, !dbg !7726

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !7727
  call void @llvm.dbg.value(metadata i32 0, metadata !7718, metadata !DIExpression()), !dbg !7719
  br label %12, !dbg !7728

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #26, !dbg !7729
  call void @llvm.dbg.value(metadata i32 0, metadata !7718, metadata !DIExpression()), !dbg !7719
  br label %12, !dbg !7730

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #26, !dbg !7731
  br label %12, !dbg !7732

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #26, !dbg !7733
  br label %12, !dbg !7734

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !7719
  call void @llvm.dbg.value(metadata i32 %13, metadata !7718, metadata !DIExpression()), !dbg !7719
  ret i32 %13, !dbg !7735
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7736 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7740, metadata !DIExpression()), !dbg !7743
  call void @llvm.dbg.value(metadata i8* %1, metadata !7741, metadata !DIExpression()), !dbg !7743
  call void @llvm.dbg.value(metadata i32 0, metadata !7742, metadata !DIExpression()), !dbg !7743
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1.40, i32 0, i32 0), i32 noundef 69) #27, !dbg !7744
  store i8 0, i8* %1, align 1, !dbg !7749
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7750
  %4 = and i32 %3, 2, !dbg !7752
  %5 = icmp eq i32 %4, 0, !dbg !7753
  br i1 %5, label %7, label %6, !dbg !7754

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 69) #27, !dbg !7755
  br label %36, !dbg !7761

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7762
  %9 = icmp sgt i32 %8, -1, !dbg !7764
  br i1 %9, label %11, label %10, !dbg !7765

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3.42, i32 0, i32 0), i32 noundef 69) #27, !dbg !7766
  br label %36, !dbg !7772

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7773
  %13 = and i32 %12, 1073741824, !dbg !7775
  %14 = icmp eq i32 %13, 0, !dbg !7776
  br i1 %14, label %36, label %15, !dbg !7777

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4.43, i32 0, i32 0), i32 noundef 69) #27, !dbg !7778
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #26, !dbg !7784
  br i1 %16, label %17, label %21, !dbg !7786

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7787
  %19 = load i32, i32* %18, align 4, !dbg !7787
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5.44, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #27, !dbg !7787
  %20 = load i32, i32* %18, align 4, !dbg !7793
  call void @llvm.dbg.value(metadata i32 %20, metadata !7742, metadata !DIExpression()), !dbg !7743
  br label %36, !dbg !7794

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7795
  %23 = and i32 %22, 255, !dbg !7797
  %24 = icmp eq i32 %23, 0, !dbg !7798
  br i1 %24, label %27, label %25, !dbg !7799

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !7800
  call void @llvm.dbg.value(metadata i32 %26, metadata !7742, metadata !DIExpression()), !dbg !7743
  br label %36, !dbg !7802

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7803
  %29 = and i32 %28, 65280, !dbg !7805
  %30 = icmp eq i32 %29, 0, !dbg !7806
  br i1 %30, label %32, label %31, !dbg !7807

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !7808
  call void @llvm.dbg.value(metadata i32 0, metadata !7742, metadata !DIExpression()), !dbg !7743
  br label %36, !dbg !7810

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7811
  %34 = icmp ult i32 %33, 65536, !dbg !7813
  br i1 %34, label %36, label %35, !dbg !7814

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #26, !dbg !7815
  call void @llvm.dbg.value(metadata i32 0, metadata !7742, metadata !DIExpression()), !dbg !7743
  br label %36, !dbg !7817

36:                                               ; preds = %10, %11, %17, %31, %32, %35, %25, %6
  %37 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], [ 0, %32 ], [ 0, %11 ], !dbg !7743
  call void @llvm.dbg.value(metadata i32 %37, metadata !7742, metadata !DIExpression()), !dbg !7743
  ret i32 %37, !dbg !7818
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !7819 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7821, metadata !DIExpression()), !dbg !7834
  call void @llvm.dbg.value(metadata i32 %1, metadata !7822, metadata !DIExpression()), !dbg !7834
  call void @llvm.dbg.value(metadata i8* %2, metadata !7823, metadata !DIExpression()), !dbg !7834
  call void @llvm.dbg.value(metadata i32 0, metadata !7824, metadata !DIExpression()), !dbg !7834
  call void @llvm.dbg.value(metadata i32 -22, metadata !7825, metadata !DIExpression()), !dbg !7834
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.38, i32 0, i32 0), i32 noundef 69) #27, !dbg !7835
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7840
  %5 = and i32 %4, 16, !dbg !7842
  %6 = icmp eq i32 %5, 0, !dbg !7843
  br i1 %6, label %8, label %7, !dbg !7844

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.7.39, i32 0, i32 0), i32 noundef 69) #27, !dbg !7845
  br label %8, !dbg !7851

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7852
  %10 = and i32 %9, 8, !dbg !7854
  %11 = icmp eq i32 %10, 0, !dbg !7855
  br i1 %11, label %13, label %12, !dbg !7856

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.36, i32 0, i32 0), i32 noundef 69) #27, !dbg !7857
  br label %13, !dbg !7863

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7864
  %15 = and i32 %14, 2, !dbg !7865
  %16 = icmp eq i32 %15, 0, !dbg !7866
  br i1 %16, label %27, label %17, !dbg !7867

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i32 0, i32 0), i32 noundef 69) #27, !dbg !7868
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !7873
  call void @llvm.dbg.value(metadata i32 %18, metadata !7826, metadata !DIExpression()), !dbg !7874
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7875
  %20 = and i32 %19, 128, !dbg !7877
  %21 = icmp eq i32 %20, 0, !dbg !7878
  br i1 %21, label %27, label %22, !dbg !7879

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !7825, metadata !DIExpression()), !dbg !7834
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #27, !dbg !7880
  %23 = icmp eq i32 %1, 0, !dbg !7886
  br i1 %23, label %27, label %24, !dbg !7888

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7889
  %26 = and i32 %25, -129, !dbg !7889
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7889
  br label %27, !dbg !7891

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !7834
  call void @llvm.dbg.value(metadata i32 %28, metadata !7825, metadata !DIExpression()), !dbg !7834
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7892
  %30 = and i32 %29, 1, !dbg !7894
  %31 = icmp eq i32 %30, 0, !dbg !7895
  br i1 %31, label %33, label %32, !dbg !7896

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11, i32 0, i32 0), i32 noundef 69) #27, !dbg !7897
  br label %33, !dbg !7903

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7904
  %35 = and i32 %34, 32, !dbg !7906
  %36 = icmp eq i32 %35, 0, !dbg !7907
  br i1 %36, label %38, label %37, !dbg !7908

37:                                               ; preds = %33
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12, i32 0, i32 0), i32 noundef 69) #27, !dbg !7909
  br label %38, !dbg !7915

38:                                               ; preds = %37, %33
  %39 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7916
  %40 = and i32 %39, 16, !dbg !7917
  %41 = icmp eq i32 %40, 0, !dbg !7917
  br i1 %41, label %42, label %46, !dbg !7918

42:                                               ; preds = %38
  %43 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7919
  %44 = and i32 %43, 2, !dbg !7920
  %45 = icmp eq i32 %44, 0, !dbg !7920
  br i1 %45, label %55, label %46, !dbg !7921

46:                                               ; preds = %42, %38
  %47 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7922
  %48 = and i32 %47, 2048, !dbg !7923
  %49 = icmp eq i32 %48, 0, !dbg !7923
  br i1 %49, label %55, label %50, !dbg !7924

50:                                               ; preds = %46
  %51 = ptrtoint %struct.__esf* %0 to i32, !dbg !7925
  %52 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %51) #27, !dbg !7926
  call void @llvm.dbg.value(metadata i32 %52, metadata !7829, metadata !DIExpression()), !dbg !7927
  %53 = icmp eq i32 %52, 0, !dbg !7928
  br i1 %53, label %55, label %54, !dbg !7930

54:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %52, metadata !7931, metadata !DIExpression()) #25, !dbg !7934
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %52) #25, !dbg !7937, !srcloc !7938
  call void @llvm.dbg.value(metadata i32 2, metadata !7824, metadata !DIExpression()), !dbg !7834
  br label %55, !dbg !7939

55:                                               ; preds = %54, %50, %46, %42
  %56 = phi i32 [ 0, %46 ], [ 0, %42 ], [ 2, %54 ], [ 0, %50 ], !dbg !7834
  call void @llvm.dbg.value(metadata i32 %56, metadata !7824, metadata !DIExpression()), !dbg !7834
  %57 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7940
  %58 = and i32 %57, 32, !dbg !7942
  %59 = icmp eq i32 %58, 0, !dbg !7943
  br i1 %59, label %63, label %60, !dbg !7944

60:                                               ; preds = %55
  %61 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7945
  %62 = and i32 %61, -8193, !dbg !7945
  store volatile i32 %62, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7945
  br label %63, !dbg !7947

63:                                               ; preds = %60, %55
  %64 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7948
  %65 = or i32 %64, 255, !dbg !7948
  store volatile i32 %65, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7948
  store i8 0, i8* %2, align 1, !dbg !7949
  ret i32 %56, !dbg !7950
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7951 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7955, metadata !DIExpression()), !dbg !7962
  call void @llvm.dbg.value(metadata i32 %0, metadata !7956, metadata !DIExpression()), !dbg !7962
  call void @llvm.dbg.value(metadata i8* %1, metadata !7957, metadata !DIExpression()), !dbg !7962
  call void @llvm.dbg.value(metadata i32 0, metadata !7958, metadata !DIExpression()), !dbg !7962
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i32 0, i32 0), i32 noundef 69) #27, !dbg !7963
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7968
  %4 = and i32 %3, 4096, !dbg !7970
  %5 = icmp eq i32 %4, 0, !dbg !7970
  br i1 %5, label %7, label %6, !dbg !7971

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14, i32 0, i32 0), i32 noundef 69) #27, !dbg !7972
  br label %7, !dbg !7978

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7979
  %9 = and i32 %8, 2048, !dbg !7981
  %10 = icmp eq i32 %9, 0, !dbg !7981
  br i1 %10, label %12, label %11, !dbg !7982

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.36, i32 0, i32 0), i32 noundef 69) #27, !dbg !7983
  br label %12, !dbg !7989

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7990
  %14 = and i32 %13, 512, !dbg !7991
  %15 = icmp eq i32 %14, 0, !dbg !7991
  br i1 %15, label %26, label %16, !dbg !7992

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.15.37, i32 0, i32 0), i32 noundef 69) #27, !dbg !7993
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !7998
  call void @llvm.dbg.value(metadata i32 %17, metadata !7959, metadata !DIExpression()), !dbg !7999
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8000
  %19 = and i32 %18, 32768, !dbg !8002
  %20 = icmp eq i32 %19, 0, !dbg !8003
  br i1 %20, label %26, label %21, !dbg !8004

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.16, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #27, !dbg !8005
  %22 = icmp eq i32 %0, 0, !dbg !8011
  br i1 %22, label %26, label %23, !dbg !8013

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8014
  %25 = and i32 %24, -32769, !dbg !8014
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8014
  br label %26, !dbg !8016

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8017
  %28 = and i32 %27, 1024, !dbg !8019
  %29 = icmp eq i32 %28, 0, !dbg !8019
  br i1 %29, label %31, label %30, !dbg !8020

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69) #27, !dbg !8021
  br label %31, !dbg !8027

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8028
  %33 = and i32 %32, 256, !dbg !8030
  %34 = icmp eq i32 %33, 0, !dbg !8031
  br i1 %34, label %35, label %39, !dbg !8032

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8033
  %37 = and i32 %36, 8192, !dbg !8035
  %38 = icmp eq i32 %37, 0, !dbg !8035
  br i1 %38, label %41, label %39, !dbg !8036

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.18, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #27, !dbg !8037
  br label %41, !dbg !8038

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8038
  %43 = or i32 %42, 65280, !dbg !8038
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8038
  store i8 0, i8* %1, align 1, !dbg !8039
  ret void, !dbg !8040
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !8041 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8047, metadata !DIExpression()), !dbg !8049
  call void @llvm.dbg.value(metadata i32 0, metadata !8048, metadata !DIExpression()), !dbg !8049
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.19, i32 0, i32 0), i32 noundef 69) #27, !dbg !8050
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8055
  %2 = and i32 %1, 33554432, !dbg !8057
  %3 = icmp eq i32 %2, 0, !dbg !8058
  br i1 %3, label %5, label %4, !dbg !8059

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.20, i32 0, i32 0), i32 noundef 69) #27, !dbg !8060
  br label %5, !dbg !8066

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8067
  %7 = and i32 %6, 16777216, !dbg !8069
  %8 = icmp eq i32 %7, 0, !dbg !8070
  br i1 %8, label %10, label %9, !dbg !8071

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.21.35, i32 0, i32 0), i32 noundef 69) #27, !dbg !8072
  br label %10, !dbg !8078

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8079
  %12 = and i32 %11, 524288, !dbg !8081
  %13 = icmp eq i32 %12, 0, !dbg !8082
  br i1 %13, label %15, label %14, !dbg !8083

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.22, i32 0, i32 0), i32 noundef 69) #27, !dbg !8084
  br label %15, !dbg !8090

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8091
  %17 = and i32 %16, 262144, !dbg !8093
  %18 = icmp eq i32 %17, 0, !dbg !8094
  br i1 %18, label %20, label %19, !dbg !8095

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.23, i32 0, i32 0), i32 noundef 69) #27, !dbg !8096
  br label %20, !dbg !8102

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8103
  %22 = and i32 %21, 131072, !dbg !8105
  %23 = icmp eq i32 %22, 0, !dbg !8106
  br i1 %23, label %25, label %24, !dbg !8107

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69) #27, !dbg !8108
  br label %25, !dbg !8114

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8115
  %27 = and i32 %26, 65536, !dbg !8117
  %28 = icmp eq i32 %27, 0, !dbg !8118
  br i1 %28, label %30, label %29, !dbg !8119

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.25, i32 0, i32 0), i32 noundef 69) #27, !dbg !8120
  br label %30, !dbg !8126

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8127
  %32 = or i32 %31, -65536, !dbg !8127
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8127
  ret void, !dbg !8128
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !8129 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8133, metadata !DIExpression()), !dbg !8135
  call void @llvm.dbg.value(metadata i8* %0, metadata !8134, metadata !DIExpression()), !dbg !8135
  store i8 0, i8* %0, align 1, !dbg !8136
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.26, i32 0, i32 0), i32 noundef 69) #27, !dbg !8137
  ret void, !dbg !8142
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !8143 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8147, metadata !DIExpression()), !dbg !8149
  call void @llvm.dbg.value(metadata i32 %0, metadata !8148, metadata !DIExpression()), !dbg !8149
  %2 = icmp slt i32 %0, 16, !dbg !8150
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.28.34, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.29, i32 0, i32 0), !dbg !8150
  %4 = add nsw i32 %0, -16, !dbg !8150
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.27, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #27, !dbg !8150
  ret void, !dbg !8155
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8156 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8160, metadata !DIExpression()), !dbg !8163
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !8164
  %3 = load i32, i32* %2, align 4, !dbg !8164
  %4 = inttoptr i32 %3 to i16*, !dbg !8165
  call void @llvm.dbg.value(metadata i16* %4, metadata !8161, metadata !DIExpression()), !dbg !8163
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8166
  %6 = or i32 %5, 256, !dbg !8166
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8166
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !8167, !srcloc !8170
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !8171, !srcloc !8174
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !8175
  %8 = load i16, i16* %7, align 2, !dbg !8176
  call void @llvm.dbg.value(metadata i16 %8, metadata !8162, metadata !DIExpression()), !dbg !8163
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8177
  %10 = and i32 %9, -257, !dbg !8177
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8177
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !8178, !srcloc !8170
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !8180, !srcloc !8174
  %11 = icmp eq i16 %8, -8446, !dbg !8182
  ret i1 %11, !dbg !8184
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #16 !dbg !8185 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8186
  %2 = or i32 %1, 16, !dbg !8186
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8186
  ret void, !dbg !8187
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #16 !dbg !8188 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8191, metadata !DIExpression()), !dbg !8192
  br label %1, !dbg !8193

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !8191, metadata !DIExpression()), !dbg !8192
  tail call fastcc void @__NVIC_SetPriority.48(i32 noundef %2) #26, !dbg !8195
  %3 = add nuw nsw i32 %2, 1, !dbg !8198
  call void @llvm.dbg.value(metadata i32 %3, metadata !8191, metadata !DIExpression()), !dbg !8192
  %4 = icmp eq i32 %3, 82, !dbg !8199
  br i1 %4, label %5, label %1, !dbg !8193, !llvm.loop !8200

5:                                                ; preds = %1
  ret void, !dbg !8202
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.48(i32 noundef %0) unnamed_addr #16 !dbg !8203 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8205, metadata !DIExpression()), !dbg !8207
  call void @llvm.dbg.value(metadata i32 1, metadata !8206, metadata !DIExpression()), !dbg !8207
  %2 = and i32 %0, 15, !dbg !8208
  %3 = add nsw i32 %2, -4, !dbg !8208
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !8208
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !8208
  %6 = icmp slt i32 %0, 0, !dbg !8208
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !8208
  store volatile i8 16, i8* %7, align 1, !dbg !8209
  ret void, !dbg !8211
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !8212 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8318, metadata !DIExpression()), !dbg !8319
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8320
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !8322
  br i1 %3, label %4, label %12, !dbg !8323

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !8324, !srcloc !8336
  call void @llvm.dbg.value(metadata i32 %5, metadata !8327, metadata !DIExpression()) #25, !dbg !8337
  %6 = icmp eq i32 %5, 0, !dbg !8338
  br i1 %6, label %12, label %7, !dbg !8339

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8340
  %9 = or i32 %8, 268435456, !dbg !8340
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8340
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8342
  %11 = and i32 %10, -32769, !dbg !8342
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8342
  br label %12, !dbg !8343

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !8344
  ret void, !dbg !8345
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !8346 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #27, !dbg !8347
  ret void, !dbg !8348
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !485 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !590, metadata !DIExpression()), !dbg !8349
  call void @llvm.dbg.value(metadata i8 0, metadata !591, metadata !DIExpression()), !dbg !8349
  call void @llvm.dbg.value(metadata i32 64, metadata !593, metadata !DIExpression()), !dbg !8349
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !8350
  %3 = load i32, i32* %2, align 4, !dbg !8350
  %4 = add i32 %3, -64, !dbg !8352
  call void @llvm.dbg.value(metadata i32 %4, metadata !592, metadata !DIExpression()), !dbg !8349
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !8353
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !8354
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !8355
  call void @llvm.dbg.value(metadata i8 1, metadata !591, metadata !DIExpression()), !dbg !8349
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #27, !dbg !8356
  ret void, !dbg !8357
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !8358 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !8359
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !8360, !srcloc !8363
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !8364, !srcloc !8367
  ret void, !dbg !8368
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !8369 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #25, !dbg !8370, !srcloc !8373
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !8374
  ret void, !dbg !8375
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !8376 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8391, metadata !DIExpression()), !dbg !8395
  call void @llvm.dbg.value(metadata i8 %1, metadata !8392, metadata !DIExpression()), !dbg !8395
  call void @llvm.dbg.value(metadata i32 %2, metadata !8393, metadata !DIExpression()), !dbg !8395
  call void @llvm.dbg.value(metadata i32 %3, metadata !8394, metadata !DIExpression()), !dbg !8395
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !8396
  ret void, !dbg !8398
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !8399 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8404, metadata !DIExpression()), !dbg !8409
  call void @llvm.dbg.value(metadata i8 %1, metadata !8405, metadata !DIExpression()), !dbg !8409
  call void @llvm.dbg.value(metadata i32 undef, metadata !8406, metadata !DIExpression()), !dbg !8409
  call void @llvm.dbg.value(metadata i32 undef, metadata !8407, metadata !DIExpression()), !dbg !8409
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !8410
  call void @llvm.dbg.value(metadata i8 %3, metadata !8408, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8409
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #26, !dbg !8411
  call void @llvm.dbg.value(metadata i32 %4, metadata !8408, metadata !DIExpression()), !dbg !8409
  %5 = trunc i32 %4 to i8, !dbg !8412
  store i8 %5, i8* @static_regions_num, align 1, !dbg !8413
  ret void, !dbg !8414
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !8415 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8419, metadata !DIExpression()), !dbg !8425
  call void @llvm.dbg.value(metadata i8 %1, metadata !8420, metadata !DIExpression()), !dbg !8425
  call void @llvm.dbg.value(metadata i8 %2, metadata !8421, metadata !DIExpression()), !dbg !8425
  call void @llvm.dbg.value(metadata i1 %3, metadata !8422, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8425
  %5 = zext i8 %2 to i32, !dbg !8426
  call void @llvm.dbg.value(metadata i32 %5, metadata !8424, metadata !DIExpression()), !dbg !8425
  call void @llvm.dbg.value(metadata i32 0, metadata !8423, metadata !DIExpression()), !dbg !8425
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !8424, metadata !DIExpression()), !dbg !8425
  call void @llvm.dbg.value(metadata i32 0, metadata !8423, metadata !DIExpression()), !dbg !8425
  %7 = icmp eq i8 %1, 0, !dbg !8427
  br i1 %7, label %30, label %8, !dbg !8430

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8424, metadata !DIExpression()), !dbg !8425
  call void @llvm.dbg.value(metadata i32 %10, metadata !8423, metadata !DIExpression()), !dbg !8425
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !8431
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !8434
  %13 = load i32, i32* %12, align 4, !dbg !8434
  %14 = icmp eq i32 %13, 0, !dbg !8435
  br i1 %14, label %26, label %15, !dbg !8436

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !8437

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !8439
  %18 = icmp eq i32 %17, 0, !dbg !8439
  br i1 %18, label %19, label %20, !dbg !8440

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.57, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #27, !dbg !8441
  br label %30, !dbg !8447

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !8448
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !8449
  call void @llvm.dbg.value(metadata i32 %22, metadata !8424, metadata !DIExpression()), !dbg !8425
  %23 = icmp eq i32 %22, -22, !dbg !8450
  br i1 %23, label %30, label %24, !dbg !8452

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !8453
  call void @llvm.dbg.value(metadata i32 %25, metadata !8424, metadata !DIExpression()), !dbg !8425
  br label %26, !dbg !8454

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !8425
  call void @llvm.dbg.value(metadata i32 %27, metadata !8424, metadata !DIExpression()), !dbg !8425
  %28 = add nuw nsw i32 %10, 1, !dbg !8455
  call void @llvm.dbg.value(metadata i32 %28, metadata !8423, metadata !DIExpression()), !dbg !8425
  %29 = icmp eq i32 %28, %6, !dbg !8427
  br i1 %29, label %30, label %8, !dbg !8430, !llvm.loop !8456

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !8425
  ret i32 %31, !dbg !8458
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #18 !dbg !8459 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8463, metadata !DIExpression()), !dbg !8465
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !8466
  %3 = load i32, i32* %2, align 4, !dbg !8466
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !8467, !range !4998
  %5 = icmp ult i32 %4, 2, !dbg !8467
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !8468
  br i1 %7, label %8, label %15, !dbg !8468

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !8469
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !8470
  %11 = load i32, i32* %10, align 4, !dbg !8470
  %12 = and i32 %11, %9, !dbg !8471
  %13 = icmp eq i32 %12, 0, !dbg !8472
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !8464, metadata !DIExpression()), !dbg !8465
  ret i32 %16, !dbg !8473
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !8474 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !8478, metadata !DIExpression()), !dbg !8481
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !8479, metadata !DIExpression()), !dbg !8481
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !8482
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #25, !dbg !8482
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !8480, metadata !DIExpression()), !dbg !8483
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !8484
  %6 = load i32, i32* %5, align 4, !dbg !8484
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !8485
  store i32 %6, i32* %7, align 4, !dbg !8486
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !8487
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !8488
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !8489
  %11 = load i32, i32* %10, align 4, !dbg !8489
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* noundef nonnull %8, %struct.z_heap_bucket* noundef nonnull %9, i32 noundef %11) #26, !dbg !8490
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #26, !dbg !8491
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #25, !dbg !8492
  ret i32 %12, !dbg !8493
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* nocapture noundef writeonly %0, %struct.z_heap_bucket* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #12 !dbg !8494 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !8501, metadata !DIExpression()), !dbg !8505
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !8502, metadata !DIExpression()), !dbg !8505
  call void @llvm.dbg.value(metadata i32 undef, metadata !8503, metadata !DIExpression()), !dbg !8505
  call void @llvm.dbg.value(metadata i32 %2, metadata !8504, metadata !DIExpression()), !dbg !8505
  %4 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %1, i32 0, i32 0, !dbg !8506
  %5 = load i32, i32* %4, align 4, !dbg !8506
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #26, !dbg !8507
  %7 = or i32 %6, %5, !dbg !8508
  %8 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !8509
  store i32 %7, i32* %8, align 4, !dbg !8510
  ret void, !dbg !8511
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !8512 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !8516, metadata !DIExpression()), !dbg !8518
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !8517, metadata !DIExpression()), !dbg !8518
  %3 = zext i8 %0 to i32, !dbg !8519
  %4 = icmp ugt i8 %0, 7, !dbg !8521
  br i1 %4, label %5, label %6, !dbg !8522

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.1.58, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #27, !dbg !8523
  br label %7, !dbg !8529

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #26, !dbg !8530
  br label %7, !dbg !8531

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !8518
  ret i32 %8, !dbg !8532
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #16 !dbg !8533 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8537, metadata !DIExpression()), !dbg !8539
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !8538, metadata !DIExpression()), !dbg !8539
  tail call fastcc void @set_region_number(i32 noundef %0) #26, !dbg !8540
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !8541
  %4 = load i32, i32* %3, align 4, !dbg !8541
  %5 = and i32 %4, -32, !dbg !8542
  %6 = or i32 %5, %0, !dbg !8543
  %7 = or i32 %6, 16, !dbg !8543
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !8544
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !8545
  %9 = load i32, i32* %8, align 4, !dbg !8545
  %10 = or i32 %9, 1, !dbg !8546
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !8547
  ret void, !dbg !8548
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #16 !dbg !8549 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8552, metadata !DIExpression()), !dbg !8553
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !8554
  ret void, !dbg !8555
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #11 !dbg !8556 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8560, metadata !DIExpression()), !dbg !8561
  %2 = icmp ult i32 %0, 33, !dbg !8562
  br i1 %2, label %11, label %3, !dbg !8564

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !8565
  br i1 %4, label %11, label %5, !dbg !8567

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !8568
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !8569, !range !4998
  %8 = mul nsw i32 %7, -2, !dbg !8570
  %9 = add nsw i32 %8, 62, !dbg !8570
  %10 = and i32 %9, 62, !dbg !8571
  br label %11, !dbg !8572

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !8561
  ret i32 %12, !dbg !8573
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !8574 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8578, metadata !DIExpression()), !dbg !8580
  call void @llvm.dbg.value(metadata i8 %1, metadata !8579, metadata !DIExpression()), !dbg !8580
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !8581
  ret void, !dbg !8583
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !8584 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8588, metadata !DIExpression()), !dbg !8595
  call void @llvm.dbg.value(metadata i8 %1, metadata !8589, metadata !DIExpression()), !dbg !8595
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !8596
  call void @llvm.dbg.value(metadata i8 %3, metadata !8590, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8595
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #26, !dbg !8597
  call void @llvm.dbg.value(metadata i32 %4, metadata !8590, metadata !DIExpression()), !dbg !8595
  %5 = icmp ne i32 %4, -22, !dbg !8598
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !8599
  call void @llvm.dbg.value(metadata i32 %4, metadata !8591, metadata !DIExpression()), !dbg !8600
  br i1 %7, label %8, label %12, !dbg !8599

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8591, metadata !DIExpression()), !dbg !8600
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #26, !dbg !8601
  %10 = add i32 %9, 1, !dbg !8604
  call void @llvm.dbg.value(metadata i32 %10, metadata !8591, metadata !DIExpression()), !dbg !8600
  %11 = icmp eq i32 %10, 8, !dbg !8605
  br i1 %11, label %12, label %8, !dbg !8606, !llvm.loop !8607

12:                                               ; preds = %8, %2
  ret void, !dbg !8609
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #16 !dbg !8610 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8613, metadata !DIExpression()), !dbg !8614
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !8615
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !8616
  ret void, !dbg !8617
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !8618 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !8623
  %2 = icmp ugt i32 %1, 8, !dbg !8625
  br i1 %2, label %14, label %3, !dbg !8626

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #26, !dbg !8627
  call void @llvm.dbg.value(metadata i32 0, metadata !8622, metadata !DIExpression()), !dbg !8628
  %4 = icmp eq i32 %1, 0, !dbg !8629
  br i1 %4, label %12, label %5, !dbg !8632

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !8632

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8622, metadata !DIExpression()), !dbg !8628
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !8633
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #26, !dbg !8635
  %10 = add nuw i32 %8, 1, !dbg !8636
  call void @llvm.dbg.value(metadata i32 %10, metadata !8622, metadata !DIExpression()), !dbg !8628
  %11 = icmp eq i32 %10, %1, !dbg !8629
  br i1 %11, label %12, label %7, !dbg !8632, !llvm.loop !8637

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !8639
  store i8 %13, i8* @static_regions_num, align 1, !dbg !8640
  tail call void @arm_core_mpu_enable() #26, !dbg !8641
  br label %14, !dbg !8642

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !8628
  ret i32 %15, !dbg !8643
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !8644 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8651, metadata !DIExpression()), !dbg !8654
  call void @llvm.dbg.value(metadata i8* %1, metadata !8652, metadata !DIExpression()), !dbg !8654
  call void @llvm.dbg.value(metadata i8* %0, metadata !8653, metadata !DIExpression()), !dbg !8654
  %3 = load i8, i8* %1, align 1, !dbg !8655
  %4 = icmp eq i8 %3, 0, !dbg !8656
  br i1 %4, label %13, label %5, !dbg !8657

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !8651, metadata !DIExpression()), !dbg !8654
  call void @llvm.dbg.value(metadata i8* %8, metadata !8652, metadata !DIExpression()), !dbg !8654
  store i8 %6, i8* %7, align 1, !dbg !8658
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8660
  call void @llvm.dbg.value(metadata i8* %9, metadata !8651, metadata !DIExpression()), !dbg !8654
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8661
  call void @llvm.dbg.value(metadata i8* %10, metadata !8652, metadata !DIExpression()), !dbg !8654
  %11 = load i8, i8* %10, align 1, !dbg !8655
  %12 = icmp eq i8 %11, 0, !dbg !8656
  br i1 %12, label %13, label %5, !dbg !8657, !llvm.loop !8662

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !8664
  ret i8* %0, !dbg !8665
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #15 !dbg !8666 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8670, metadata !DIExpression()), !dbg !8674
  call void @llvm.dbg.value(metadata i8* %1, metadata !8671, metadata !DIExpression()), !dbg !8674
  call void @llvm.dbg.value(metadata i32 %2, metadata !8672, metadata !DIExpression()), !dbg !8674
  call void @llvm.dbg.value(metadata i8* %0, metadata !8673, metadata !DIExpression()), !dbg !8674
  %4 = icmp eq i32 %2, 0, !dbg !8675
  br i1 %4, label %22, label %5, !dbg !8676

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8670, metadata !DIExpression()), !dbg !8674
  call void @llvm.dbg.value(metadata i32 %7, metadata !8672, metadata !DIExpression()), !dbg !8674
  call void @llvm.dbg.value(metadata i8* %8, metadata !8671, metadata !DIExpression()), !dbg !8674
  %9 = load i8, i8* %8, align 1, !dbg !8677
  %10 = icmp eq i8 %9, 0, !dbg !8678
  br i1 %10, label %16, label %11, !dbg !8679

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !8680
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8682
  call void @llvm.dbg.value(metadata i8* %12, metadata !8671, metadata !DIExpression()), !dbg !8674
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8683
  call void @llvm.dbg.value(metadata i8* %13, metadata !8670, metadata !DIExpression()), !dbg !8674
  %14 = add i32 %7, -1, !dbg !8684
  call void @llvm.dbg.value(metadata i32 %14, metadata !8672, metadata !DIExpression()), !dbg !8674
  %15 = icmp eq i32 %14, 0, !dbg !8675
  br i1 %15, label %22, label %5, !dbg !8676, !llvm.loop !8685

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !8670, metadata !DIExpression()), !dbg !8674
  call void @llvm.dbg.value(metadata i32 %18, metadata !8672, metadata !DIExpression()), !dbg !8674
  store i8 0, i8* %17, align 1, !dbg !8687
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8689
  call void @llvm.dbg.value(metadata i8* %19, metadata !8670, metadata !DIExpression()), !dbg !8674
  %20 = add i32 %18, -1, !dbg !8690
  call void @llvm.dbg.value(metadata i32 %20, metadata !8672, metadata !DIExpression()), !dbg !8674
  %21 = icmp eq i32 %20, 0, !dbg !8691
  br i1 %21, label %22, label %16, !dbg !8692, !llvm.loop !8693

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !8695
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #7 !dbg !8696 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8700, metadata !DIExpression()), !dbg !8703
  call void @llvm.dbg.value(metadata i32 %1, metadata !8701, metadata !DIExpression()), !dbg !8703
  call void @llvm.dbg.value(metadata i32 %1, metadata !8702, metadata !DIExpression()), !dbg !8703
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !8704

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !8700, metadata !DIExpression()), !dbg !8703
  %6 = load i8, i8* %5, align 1, !dbg !8705
  %7 = icmp eq i8 %6, %3, !dbg !8706
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !8707
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8708
  call void @llvm.dbg.value(metadata i8* %10, metadata !8700, metadata !DIExpression()), !dbg !8703
  br i1 %9, label %11, label %4, !dbg !8707, !llvm.loop !8710

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !8712
  ret i8* %12, !dbg !8713
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #7 !dbg !8714 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8716, metadata !DIExpression()), !dbg !8719
  call void @llvm.dbg.value(metadata i32 %1, metadata !8717, metadata !DIExpression()), !dbg !8719
  call void @llvm.dbg.value(metadata i8* null, metadata !8718, metadata !DIExpression()), !dbg !8719
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !8720

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !8719
  call void @llvm.dbg.value(metadata i8* %6, metadata !8718, metadata !DIExpression()), !dbg !8719
  call void @llvm.dbg.value(metadata i8* %5, metadata !8716, metadata !DIExpression()), !dbg !8719
  %7 = load i8, i8* %5, align 1, !dbg !8721
  %8 = icmp eq i8 %7, %3, !dbg !8724
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !8725
  call void @llvm.dbg.value(metadata i8* %9, metadata !8718, metadata !DIExpression()), !dbg !8719
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8726
  call void @llvm.dbg.value(metadata i8* %10, metadata !8716, metadata !DIExpression()), !dbg !8719
  %11 = icmp eq i8 %7, 0, !dbg !8727
  br i1 %11, label %12, label %4, !dbg !8727, !llvm.loop !8728

12:                                               ; preds = %4
  ret i8* %9, !dbg !8730
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #7 !dbg !8731 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8735, metadata !DIExpression()), !dbg !8737
  call void @llvm.dbg.value(metadata i32 0, metadata !8736, metadata !DIExpression()), !dbg !8737
  %2 = load i8, i8* %0, align 1, !dbg !8738
  %3 = icmp eq i8 %2, 0, !dbg !8739
  br i1 %3, label %11, label %4, !dbg !8740

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !8736, metadata !DIExpression()), !dbg !8737
  call void @llvm.dbg.value(metadata i8* %6, metadata !8735, metadata !DIExpression()), !dbg !8737
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8741
  call void @llvm.dbg.value(metadata i8* %7, metadata !8735, metadata !DIExpression()), !dbg !8737
  %8 = add i32 %5, 1, !dbg !8743
  call void @llvm.dbg.value(metadata i32 %8, metadata !8736, metadata !DIExpression()), !dbg !8737
  %9 = load i8, i8* %7, align 1, !dbg !8738
  %10 = icmp eq i8 %9, 0, !dbg !8739
  br i1 %10, label %11, label %4, !dbg !8740, !llvm.loop !8744

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !8737
  ret i32 %12, !dbg !8746
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #7 !dbg !8747 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8751, metadata !DIExpression()), !dbg !8754
  call void @llvm.dbg.value(metadata i32 %1, metadata !8752, metadata !DIExpression()), !dbg !8754
  call void @llvm.dbg.value(metadata i32 0, metadata !8753, metadata !DIExpression()), !dbg !8754
  %3 = load i8, i8* %0, align 1, !dbg !8755
  %4 = icmp ne i8 %3, 0, !dbg !8756
  %5 = icmp ne i32 %1, 0, !dbg !8757
  %6 = and i1 %4, %5, !dbg !8757
  br i1 %6, label %7, label %16, !dbg !8758

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8753, metadata !DIExpression()), !dbg !8754
  call void @llvm.dbg.value(metadata i8* %9, metadata !8751, metadata !DIExpression()), !dbg !8754
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8759
  call void @llvm.dbg.value(metadata i8* %10, metadata !8751, metadata !DIExpression()), !dbg !8754
  %11 = add nuw i32 %8, 1, !dbg !8761
  call void @llvm.dbg.value(metadata i32 %11, metadata !8753, metadata !DIExpression()), !dbg !8754
  %12 = load i8, i8* %10, align 1, !dbg !8755
  %13 = icmp ne i8 %12, 0, !dbg !8756
  %14 = icmp ult i32 %11, %1, !dbg !8757
  %15 = select i1 %13, i1 %14, i1 false, !dbg !8757
  br i1 %15, label %7, label %16, !dbg !8758, !llvm.loop !8762

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !8754
  ret i32 %17, !dbg !8764
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #7 !dbg !8765 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8769, metadata !DIExpression()), !dbg !8771
  call void @llvm.dbg.value(metadata i8* %1, metadata !8770, metadata !DIExpression()), !dbg !8771
  %3 = load i8, i8* %0, align 1, !dbg !8772
  %4 = load i8, i8* %1, align 1, !dbg !8773
  %5 = icmp ne i8 %3, %4, !dbg !8774
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !8775
  br i1 %7, label %18, label %8, !dbg !8775

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !8770, metadata !DIExpression()), !dbg !8771
  call void @llvm.dbg.value(metadata i8* %10, metadata !8769, metadata !DIExpression()), !dbg !8771
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8776
  call void @llvm.dbg.value(metadata i8* %11, metadata !8769, metadata !DIExpression()), !dbg !8771
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8778
  call void @llvm.dbg.value(metadata i8* %12, metadata !8770, metadata !DIExpression()), !dbg !8771
  %13 = load i8, i8* %11, align 1, !dbg !8772
  %14 = load i8, i8* %12, align 1, !dbg !8773
  %15 = icmp ne i8 %13, %14, !dbg !8774
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !8775
  br i1 %17, label %18, label %8, !dbg !8775, !llvm.loop !8779

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !8772
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !8773
  %21 = zext i8 %19 to i32, !dbg !8782
  %22 = zext i8 %20 to i32, !dbg !8783
  %23 = sub nsw i32 %21, %22, !dbg !8784
  ret i32 %23, !dbg !8785
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #7 !dbg !8786 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8790, metadata !DIExpression()), !dbg !8793
  call void @llvm.dbg.value(metadata i8* %1, metadata !8791, metadata !DIExpression()), !dbg !8793
  call void @llvm.dbg.value(metadata i32 %2, metadata !8792, metadata !DIExpression()), !dbg !8793
  %4 = icmp eq i32 %2, 0, !dbg !8794
  br i1 %4, label %23, label %5, !dbg !8794

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !8792, metadata !DIExpression()), !dbg !8793
  call void @llvm.dbg.value(metadata i8* %7, metadata !8791, metadata !DIExpression()), !dbg !8793
  call void @llvm.dbg.value(metadata i8* %8, metadata !8790, metadata !DIExpression()), !dbg !8793
  %9 = load i8, i8* %8, align 1, !dbg !8795
  %10 = load i8, i8* %7, align 1, !dbg !8796
  %11 = icmp ne i8 %9, %10, !dbg !8797
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !8798
  br i1 %13, label %19, label %14, !dbg !8798

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8799
  call void @llvm.dbg.value(metadata i8* %15, metadata !8790, metadata !DIExpression()), !dbg !8793
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8801
  call void @llvm.dbg.value(metadata i8* %16, metadata !8791, metadata !DIExpression()), !dbg !8793
  %17 = add i32 %6, -1, !dbg !8802
  call void @llvm.dbg.value(metadata i32 %17, metadata !8792, metadata !DIExpression()), !dbg !8793
  %18 = icmp eq i32 %17, 0, !dbg !8794
  br i1 %18, label %23, label %5, !dbg !8794, !llvm.loop !8803

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !8806
  %21 = zext i8 %10 to i32, !dbg !8807
  %22 = sub nsw i32 %20, %21, !dbg !8808
  br label %23, !dbg !8809

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !8809
  ret i32 %24, !dbg !8810
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #15 !dbg !8811 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8815, metadata !DIExpression()), !dbg !8820
  call void @llvm.dbg.value(metadata i8* %1, metadata !8816, metadata !DIExpression()), !dbg !8820
  call void @llvm.dbg.value(metadata i8** %2, metadata !8817, metadata !DIExpression()), !dbg !8820
  %4 = icmp eq i8* %0, null, !dbg !8821
  br i1 %4, label %5, label %7, !dbg !8821

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !8822
  br label %7, !dbg !8821

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !8821
  call void @llvm.dbg.value(metadata i8* %8, metadata !8818, metadata !DIExpression()), !dbg !8820
  %9 = load i8, i8* %8, align 1, !dbg !8823
  %10 = icmp eq i8 %9, 0, !dbg !8823
  br i1 %10, label %33, label %11, !dbg !8824

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8818, metadata !DIExpression()), !dbg !8820
  %14 = zext i8 %12 to i32, !dbg !8823
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #26, !dbg !8825
  %16 = icmp eq i8* %15, null, !dbg !8824
  br i1 %16, label %21, label %17, !dbg !8826

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8827
  call void @llvm.dbg.value(metadata i8* %18, metadata !8818, metadata !DIExpression()), !dbg !8820
  %19 = load i8, i8* %18, align 1, !dbg !8823
  %20 = icmp eq i8 %19, 0, !dbg !8823
  br i1 %20, label %33, label %11, !dbg !8824, !llvm.loop !8829

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !8819, metadata !DIExpression()), !dbg !8820
  %24 = zext i8 %22 to i32, !dbg !8831
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #26, !dbg !8832
  %26 = icmp eq i8* %25, null, !dbg !8833
  br i1 %26, label %27, label %31, !dbg !8834

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8835
  call void @llvm.dbg.value(metadata i8* %28, metadata !8819, metadata !DIExpression()), !dbg !8820
  %29 = load i8, i8* %28, align 1, !dbg !8831
  %30 = icmp eq i8 %29, 0, !dbg !8831
  br i1 %30, label %33, label %21, !dbg !8837, !llvm.loop !8838

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !8840
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8843
  br label %33, !dbg !8844

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !8820
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !8820
  store i8* %34, i8** %2, align 4, !dbg !8820
  ret i8* %35, !dbg !8845
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !8846 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8848, metadata !DIExpression()), !dbg !8850
  call void @llvm.dbg.value(metadata i8* %1, metadata !8849, metadata !DIExpression()), !dbg !8850
  %3 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !8851
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !8852
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #26, !dbg !8853
  ret i8* %0, !dbg !8854
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #15 !dbg !8855 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8857, metadata !DIExpression()), !dbg !8862
  call void @llvm.dbg.value(metadata i8* %1, metadata !8858, metadata !DIExpression()), !dbg !8862
  call void @llvm.dbg.value(metadata i32 %2, metadata !8859, metadata !DIExpression()), !dbg !8862
  call void @llvm.dbg.value(metadata i8* %0, metadata !8860, metadata !DIExpression()), !dbg !8862
  %4 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !8863
  call void @llvm.dbg.value(metadata i32 %4, metadata !8861, metadata !DIExpression()), !dbg !8862
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !8864
  call void @llvm.dbg.value(metadata i8* %5, metadata !8857, metadata !DIExpression()), !dbg !8862
  call void @llvm.dbg.value(metadata i8* %1, metadata !8858, metadata !DIExpression()), !dbg !8862
  call void @llvm.dbg.value(metadata i32 %2, metadata !8859, metadata !DIExpression()), !dbg !8862
  call void @llvm.dbg.value(metadata i32 %2, metadata !8859, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8862
  %6 = icmp eq i32 %2, 0, !dbg !8865
  br i1 %6, label %18, label %7, !dbg !8866

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !8867
  call void @llvm.dbg.value(metadata i8* %9, metadata !8857, metadata !DIExpression()), !dbg !8862
  call void @llvm.dbg.value(metadata i8* %10, metadata !8858, metadata !DIExpression()), !dbg !8862
  %12 = load i8, i8* %10, align 1, !dbg !8868
  %13 = icmp eq i8 %12, 0, !dbg !8869
  br i1 %13, label %18, label %14, !dbg !8870

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8871
  call void @llvm.dbg.value(metadata i8* %15, metadata !8858, metadata !DIExpression()), !dbg !8862
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8873
  call void @llvm.dbg.value(metadata i8* %16, metadata !8857, metadata !DIExpression()), !dbg !8862
  store i8 %12, i8* %9, align 1, !dbg !8874
  call void @llvm.dbg.value(metadata i32 %11, metadata !8859, metadata !DIExpression()), !dbg !8862
  call void @llvm.dbg.value(metadata i32 %11, metadata !8859, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8862
  %17 = icmp eq i32 %11, 0, !dbg !8865
  br i1 %17, label %18, label %7, !dbg !8866, !llvm.loop !8875

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !8862
  store i8 0, i8* %19, align 1, !dbg !8877
  ret i8* %0, !dbg !8878
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #7 !dbg !8879 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8883, metadata !DIExpression()), !dbg !8888
  call void @llvm.dbg.value(metadata i8* %1, metadata !8884, metadata !DIExpression()), !dbg !8888
  call void @llvm.dbg.value(metadata i32 %2, metadata !8885, metadata !DIExpression()), !dbg !8888
  call void @llvm.dbg.value(metadata i8* %0, metadata !8886, metadata !DIExpression()), !dbg !8888
  call void @llvm.dbg.value(metadata i8* %1, metadata !8887, metadata !DIExpression()), !dbg !8888
  %4 = icmp eq i32 %2, 0, !dbg !8889
  br i1 %4, label %31, label %5, !dbg !8891

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8887, metadata !DIExpression()), !dbg !8888
  call void @llvm.dbg.value(metadata i8* %0, metadata !8886, metadata !DIExpression()), !dbg !8888
  call void @llvm.dbg.value(metadata i32 %2, metadata !8885, metadata !DIExpression()), !dbg !8888
  %6 = add i32 %2, -1, !dbg !8892
  call void @llvm.dbg.value(metadata i32 %6, metadata !8885, metadata !DIExpression()), !dbg !8888
  %7 = icmp eq i32 %6, 0, !dbg !8893
  br i1 %7, label %23, label %8, !dbg !8894

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !8895
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !8895
  br label %11, !dbg !8895

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8887, metadata !DIExpression()), !dbg !8888
  call void @llvm.dbg.value(metadata i8* %14, metadata !8886, metadata !DIExpression()), !dbg !8888
  %15 = load i8, i8* %14, align 1, !dbg !8896
  %16 = load i8, i8* %13, align 1, !dbg !8897
  %17 = icmp eq i8 %15, %16, !dbg !8898
  br i1 %17, label %18, label %23, !dbg !8895

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !8899
  call void @llvm.dbg.value(metadata i8* %19, metadata !8886, metadata !DIExpression()), !dbg !8888
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8901
  call void @llvm.dbg.value(metadata i8* %20, metadata !8887, metadata !DIExpression()), !dbg !8888
  call void @llvm.dbg.value(metadata i32 %12, metadata !8885, metadata !DIExpression()), !dbg !8888
  %21 = add i32 %12, -1, !dbg !8892
  call void @llvm.dbg.value(metadata i32 %21, metadata !8885, metadata !DIExpression()), !dbg !8888
  %22 = icmp eq i32 %21, 0, !dbg !8893
  br i1 %22, label %23, label %11, !dbg !8894, !llvm.loop !8902

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !8888
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !8888
  %26 = load i8, i8* %24, align 1, !dbg !8904
  %27 = zext i8 %26 to i32, !dbg !8904
  %28 = load i8, i8* %25, align 1, !dbg !8905
  %29 = zext i8 %28 to i32, !dbg !8905
  %30 = sub nsw i32 %27, %29, !dbg !8906
  br label %31, !dbg !8907

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !8888
  ret i32 %32, !dbg !8908
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !8909 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8913, metadata !DIExpression()), !dbg !8918
  call void @llvm.dbg.value(metadata i8* %1, metadata !8914, metadata !DIExpression()), !dbg !8918
  call void @llvm.dbg.value(metadata i32 %2, metadata !8915, metadata !DIExpression()), !dbg !8918
  call void @llvm.dbg.value(metadata i8* %0, metadata !8916, metadata !DIExpression()), !dbg !8918
  call void @llvm.dbg.value(metadata i8* %1, metadata !8917, metadata !DIExpression()), !dbg !8918
  %4 = ptrtoint i8* %0 to i32, !dbg !8919
  %5 = ptrtoint i8* %1 to i32, !dbg !8919
  %6 = sub i32 %4, %5, !dbg !8919
  %7 = icmp ult i32 %6, %2, !dbg !8921
  br i1 %7, label %10, label %8, !dbg !8922

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8917, metadata !DIExpression()), !dbg !8918
  call void @llvm.dbg.value(metadata i8* %0, metadata !8916, metadata !DIExpression()), !dbg !8918
  call void @llvm.dbg.value(metadata i32 %2, metadata !8915, metadata !DIExpression()), !dbg !8918
  %9 = icmp eq i32 %2, 0, !dbg !8923
  br i1 %9, label %26, label %17, !dbg !8925

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !8915, metadata !DIExpression()), !dbg !8918
  %12 = add i32 %11, -1, !dbg !8926
  call void @llvm.dbg.value(metadata i32 %12, metadata !8915, metadata !DIExpression()), !dbg !8918
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !8929
  %14 = load i8, i8* %13, align 1, !dbg !8929
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !8930
  store i8 %14, i8* %15, align 1, !dbg !8931
  %16 = icmp eq i32 %12, 0, !dbg !8932
  br i1 %16, label %26, label %10, !dbg !8933, !llvm.loop !8934

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !8917, metadata !DIExpression()), !dbg !8918
  call void @llvm.dbg.value(metadata i8* %19, metadata !8916, metadata !DIExpression()), !dbg !8918
  call void @llvm.dbg.value(metadata i32 %20, metadata !8915, metadata !DIExpression()), !dbg !8918
  %21 = load i8, i8* %18, align 1, !dbg !8936
  store i8 %21, i8* %19, align 1, !dbg !8938
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !8939
  call void @llvm.dbg.value(metadata i8* %22, metadata !8916, metadata !DIExpression()), !dbg !8918
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !8940
  call void @llvm.dbg.value(metadata i8* %23, metadata !8917, metadata !DIExpression()), !dbg !8918
  %24 = add i32 %20, -1, !dbg !8941
  call void @llvm.dbg.value(metadata i32 %24, metadata !8915, metadata !DIExpression()), !dbg !8918
  %25 = icmp eq i32 %24, 0, !dbg !8923
  br i1 %25, label %26, label %17, !dbg !8925, !llvm.loop !8942

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !8944
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #15 !dbg !8945 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8951, metadata !DIExpression()), !dbg !8956
  call void @llvm.dbg.value(metadata i8* %1, metadata !8952, metadata !DIExpression()), !dbg !8956
  call void @llvm.dbg.value(metadata i32 %2, metadata !8953, metadata !DIExpression()), !dbg !8956
  call void @llvm.dbg.value(metadata i8* %0, metadata !8954, metadata !DIExpression()), !dbg !8956
  call void @llvm.dbg.value(metadata i8* %1, metadata !8955, metadata !DIExpression()), !dbg !8956
  %4 = icmp eq i32 %2, 0, !dbg !8957
  br i1 %4, label %14, label %5, !dbg !8958

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8955, metadata !DIExpression()), !dbg !8956
  call void @llvm.dbg.value(metadata i8* %7, metadata !8954, metadata !DIExpression()), !dbg !8956
  call void @llvm.dbg.value(metadata i32 %8, metadata !8953, metadata !DIExpression()), !dbg !8956
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8959
  call void @llvm.dbg.value(metadata i8* %9, metadata !8955, metadata !DIExpression()), !dbg !8956
  %10 = load i8, i8* %6, align 1, !dbg !8961
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8962
  call void @llvm.dbg.value(metadata i8* %11, metadata !8954, metadata !DIExpression()), !dbg !8956
  store i8 %10, i8* %7, align 1, !dbg !8963
  %12 = add i32 %8, -1, !dbg !8964
  call void @llvm.dbg.value(metadata i32 %12, metadata !8953, metadata !DIExpression()), !dbg !8956
  %13 = icmp eq i32 %12, 0, !dbg !8957
  br i1 %13, label %14, label %5, !dbg !8958, !llvm.loop !8965

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !8967
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !8968 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8972, metadata !DIExpression()), !dbg !8977
  call void @llvm.dbg.value(metadata i32 %1, metadata !8973, metadata !DIExpression()), !dbg !8977
  call void @llvm.dbg.value(metadata i32 %2, metadata !8974, metadata !DIExpression()), !dbg !8977
  call void @llvm.dbg.value(metadata i8* %0, metadata !8975, metadata !DIExpression()), !dbg !8977
  %4 = trunc i32 %1 to i8, !dbg !8978
  call void @llvm.dbg.value(metadata i8 %4, metadata !8976, metadata !DIExpression()), !dbg !8977
  call void @llvm.dbg.value(metadata i32 %2, metadata !8974, metadata !DIExpression()), !dbg !8977
  call void @llvm.dbg.value(metadata i8* %0, metadata !8975, metadata !DIExpression()), !dbg !8977
  %5 = icmp eq i32 %2, 0, !dbg !8979
  br i1 %5, label %12, label %6, !dbg !8980

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !8974, metadata !DIExpression()), !dbg !8977
  call void @llvm.dbg.value(metadata i8* %8, metadata !8975, metadata !DIExpression()), !dbg !8977
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8981
  call void @llvm.dbg.value(metadata i8* %9, metadata !8975, metadata !DIExpression()), !dbg !8977
  store i8 %4, i8* %8, align 1, !dbg !8983
  %10 = add i32 %7, -1, !dbg !8984
  call void @llvm.dbg.value(metadata i32 %10, metadata !8974, metadata !DIExpression()), !dbg !8977
  %11 = icmp eq i32 %10, 0, !dbg !8979
  br i1 %11, label %12, label %6, !dbg !8980, !llvm.loop !8985

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !8987
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #7 !dbg !8988 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8992, metadata !DIExpression()), !dbg !8998
  call void @llvm.dbg.value(metadata i32 %1, metadata !8993, metadata !DIExpression()), !dbg !8998
  call void @llvm.dbg.value(metadata i32 %2, metadata !8994, metadata !DIExpression()), !dbg !8998
  %4 = icmp eq i32 %2, 0, !dbg !8999
  br i1 %4, label %17, label %5, !dbg !9000

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !9001

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !9002
  call void @llvm.dbg.value(metadata i8* %9, metadata !8995, metadata !DIExpression()), !dbg !9002
  call void @llvm.dbg.value(metadata i32 %8, metadata !8994, metadata !DIExpression()), !dbg !8998
  call void @llvm.dbg.value(metadata i8* %9, metadata !8995, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9002
  %10 = load i8, i8* %9, align 1, !dbg !9003
  %11 = icmp eq i8 %10, %6, !dbg !9006
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !9007
  call void @llvm.dbg.value(metadata i8* %12, metadata !8995, metadata !DIExpression()), !dbg !9002
  call void @llvm.dbg.value(metadata i32 %13, metadata !8994, metadata !DIExpression()), !dbg !8998
  br i1 %15, label %16, label %7, !dbg !9007, !llvm.loop !9008

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !9010

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !8998
  ret i8* %19, !dbg !9011
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #8 !dbg !9012 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !9014, metadata !DIExpression()), !dbg !9015
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !9016
  ret void, !dbg !9017
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #5 !dbg !9018 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9020, metadata !DIExpression()), !dbg !9021
  ret i32 -1, !dbg !9022
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !9023 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9027, metadata !DIExpression()), !dbg !9029
  call void @llvm.dbg.value(metadata i32* %1, metadata !9028, metadata !DIExpression()), !dbg !9029
  %3 = ptrtoint i32* %1 to i32, !dbg !9030
  %4 = and i32 %3, -2, !dbg !9030
  %5 = icmp eq i32 %4, 2, !dbg !9030
  br i1 %5, label %6, label %9, !dbg !9030

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !9031
  %8 = tail call i32 %7(i32 noundef %0) #27, !dbg !9031
  br label %9, !dbg !9032

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !9032
  ret i32 %10, !dbg !9033
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !9034 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9036, metadata !DIExpression()), !dbg !9038
  call void @llvm.dbg.value(metadata i32* %1, metadata !9037, metadata !DIExpression()), !dbg !9038
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !9039
  ret i32 %3, !dbg !9040
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !9041 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9044, metadata !DIExpression()), !dbg !9046
  call void @llvm.dbg.value(metadata i32* %1, metadata !9045, metadata !DIExpression()), !dbg !9046
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9047, !srcloc !9049
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !9050
  ret i32 %3, !dbg !9051
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !9052 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9057, metadata !DIExpression()), !dbg !9061
  call void @llvm.dbg.value(metadata i32* %1, metadata !9058, metadata !DIExpression()), !dbg !9061
  %3 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !9062
  call void @llvm.dbg.value(metadata i32 %3, metadata !9059, metadata !DIExpression()), !dbg !9061
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #26, !dbg !9063
  call void @llvm.dbg.value(metadata i32 %4, metadata !9060, metadata !DIExpression()), !dbg !9061
  %5 = icmp ne i32 %3, %4, !dbg !9064
  %6 = sext i1 %5 to i32, !dbg !9065
  ret i32 %6, !dbg !9066
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !9067 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9071, metadata !DIExpression()), !dbg !9075
  call void @llvm.dbg.value(metadata i32 %1, metadata !9072, metadata !DIExpression()), !dbg !9075
  call void @llvm.dbg.value(metadata i32 %2, metadata !9073, metadata !DIExpression()), !dbg !9075
  call void @llvm.dbg.value(metadata i32* %3, metadata !9074, metadata !DIExpression()), !dbg !9075
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !9076
  ret i32 %5, !dbg !9077
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !9078 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9080, metadata !DIExpression()), !dbg !9084
  call void @llvm.dbg.value(metadata i32 %1, metadata !9081, metadata !DIExpression()), !dbg !9084
  call void @llvm.dbg.value(metadata i32 %2, metadata !9082, metadata !DIExpression()), !dbg !9084
  call void @llvm.dbg.value(metadata i32* %3, metadata !9083, metadata !DIExpression()), !dbg !9084
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9085, !srcloc !9087
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !9088
  ret i32 %5, !dbg !9089
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !9090 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9092, metadata !DIExpression()), !dbg !9100
  call void @llvm.dbg.value(metadata i32 %1, metadata !9093, metadata !DIExpression()), !dbg !9100
  call void @llvm.dbg.value(metadata i32 %2, metadata !9094, metadata !DIExpression()), !dbg !9100
  call void @llvm.dbg.value(metadata i32* %3, metadata !9095, metadata !DIExpression()), !dbg !9100
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !9101
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !9103
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !9103
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !9103
  br i1 %11, label %33, label %12, !dbg !9103

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !9100
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !9100
  call void @llvm.dbg.value(metadata i8* %14, metadata !9098, metadata !DIExpression()), !dbg !9100
  call void @llvm.dbg.value(metadata i32 %13, metadata !9096, metadata !DIExpression()), !dbg !9100
  call void @llvm.dbg.value(metadata i32 %1, metadata !9097, metadata !DIExpression()), !dbg !9100
  br label %15, !dbg !9104

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !9106
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !9100
  call void @llvm.dbg.value(metadata i8* %17, metadata !9098, metadata !DIExpression()), !dbg !9100
  call void @llvm.dbg.value(metadata i32 %16, metadata !9097, metadata !DIExpression()), !dbg !9100
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !9107
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !9110
  call void @llvm.dbg.value(metadata i8* %19, metadata !9098, metadata !DIExpression()), !dbg !9100
  %20 = load i8, i8* %17, align 1, !dbg !9111
  %21 = zext i8 %20 to i32, !dbg !9112
  %22 = tail call i32 %18(i32 noundef %21) #27, !dbg !9107
  %23 = icmp eq i32 %22, -1, !dbg !9113
  br i1 %23, label %30, label %24, !dbg !9114

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !9115
  call void @llvm.dbg.value(metadata i32 %25, metadata !9097, metadata !DIExpression()), !dbg !9100
  %26 = icmp eq i32 %25, 0, !dbg !9116
  br i1 %26, label %27, label %15, !dbg !9117, !llvm.loop !9118

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !9120
  call void @llvm.dbg.value(metadata i32 %28, metadata !9096, metadata !DIExpression()), !dbg !9100
  %29 = icmp eq i32 %28, 0, !dbg !9121
  br i1 %29, label %30, label %12, !dbg !9122, !llvm.loop !9123

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !9100
  call void @llvm.dbg.value(metadata i32 %31, metadata !9096, metadata !DIExpression()), !dbg !9100
  call void @llvm.dbg.label(metadata !9099), !dbg !9126
  %32 = sub i32 %2, %31, !dbg !9127
  br label %33, !dbg !9128

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !9100
  ret i32 %34, !dbg !9129
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !9130 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9134, metadata !DIExpression()), !dbg !9135
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !9136
  %3 = icmp eq i32 %2, -1, !dbg !9138
  br i1 %3, label %8, label %4, !dbg !9139

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !9140
  %6 = icmp eq i32 %5, -1, !dbg !9141
  %7 = sext i1 %6 to i32, !dbg !9140
  br label %8, !dbg !9142

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !9135
  ret i32 %9, !dbg !9143
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_zbus_timeout_remainder(%union.argument_value* noalias nocapture writeonly sret(%union.argument_value) align 8 %0, i64 noundef %1) local_unnamed_addr #1 !dbg !9144 {
  call void @llvm.dbg.value(metadata i64 %1, metadata !9152, metadata !DIExpression()), !dbg !9154
  %3 = tail call i64 @sys_clock_tick_get() #27, !dbg !9155
  call void @llvm.dbg.value(metadata i64 %3, metadata !9153, metadata !DIExpression()), !dbg !9154
  %4 = getelementptr inbounds %union.argument_value, %union.argument_value* %0, i32 0, i32 0, !dbg !9156
  %5 = sub i64 %1, %3, !dbg !9156
  store i64 %5, i64* %4, align 8, !dbg !9156
  ret void, !dbg !9157
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_pub(%struct.zbus_channel* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !9158 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9308, metadata !DIExpression()), !dbg !9311
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9306, metadata !DIExpression()), !dbg !9311
  call void @llvm.dbg.value(metadata i8* %1, metadata !9307, metadata !DIExpression()), !dbg !9311
  %4 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %2) #27, !dbg !9312
  call void @llvm.dbg.value(metadata i64 %4, metadata !9310, metadata !DIExpression()), !dbg !9311
  %5 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 3, !dbg !9313
  %6 = load i1 (i8*, i32)*, i1 (i8*, i32)** %5, align 4, !dbg !9313
  %7 = icmp eq i1 (i8*, i32)* %6, null, !dbg !9315
  br i1 %7, label %13, label %8, !dbg !9316

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 0, !dbg !9317
  %10 = load i16, i16* %9, align 4, !dbg !9317
  %11 = zext i16 %10 to i32, !dbg !9318
  %12 = tail call zeroext i1 %6(i8* noundef %1, i32 noundef %11) #27, !dbg !9319
  br i1 %12, label %13, label %28, !dbg !9320

13:                                               ; preds = %8, %3
  %14 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 4, !dbg !9321
  %15 = load %struct.k_mutex*, %struct.k_mutex** %14, align 4, !dbg !9321
  %16 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %15, [1 x i64] %2) #26, !dbg !9322
  call void @llvm.dbg.value(metadata i32 %16, metadata !9309, metadata !DIExpression()), !dbg !9311
  %17 = icmp eq i32 %16, 0, !dbg !9323
  br i1 %17, label %18, label %28, !dbg !9325

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 2, !dbg !9326
  %20 = load i8*, i8** %19, align 4, !dbg !9326
  %21 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 0, !dbg !9327
  %22 = load i16, i16* %21, align 4, !dbg !9327
  %23 = zext i16 %22 to i32, !dbg !9328
  %24 = tail call i8* @memcpy(i8* noundef %20, i8* noundef %1, i32 noundef %23) #27, !dbg !9329
  %25 = tail call fastcc i32 @_zbus_notify_observers(%struct.zbus_channel* noundef nonnull %0, i64 noundef %4) #26, !dbg !9330
  call void @llvm.dbg.value(metadata i32 %25, metadata !9309, metadata !DIExpression()), !dbg !9311
  %26 = load %struct.k_mutex*, %struct.k_mutex** %14, align 4, !dbg !9331
  %27 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %26) #26, !dbg !9332
  br label %28, !dbg !9333

28:                                               ; preds = %13, %8, %18
  %29 = phi i32 [ %25, %18 ], [ -35, %8 ], [ %16, %13 ], !dbg !9311
  ret i32 %29, !dbg !9334
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !9335 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9340, metadata !DIExpression()), !dbg !9341
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !9339, metadata !DIExpression()), !dbg !9341
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9342, !srcloc !9344
  %3 = tail call i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) #27, !dbg !9345
  ret i32 %3, !dbg !9346
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @_zbus_notify_observers(%struct.zbus_channel* noundef %0, i64 noundef %1) unnamed_addr #1 !dbg !9347 {
  %3 = alloca %struct.zbus_channel*, align 4
  %4 = alloca %union.argument_value, align 8
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9351, metadata !DIExpression()), !dbg !9359
  store %struct.zbus_channel* %0, %struct.zbus_channel** %3, align 4
  call void @llvm.dbg.value(metadata i64 %1, metadata !9352, metadata !DIExpression()), !dbg !9359
  call void @llvm.dbg.value(metadata i32 0, metadata !9353, metadata !DIExpression()), !dbg !9359
  %5 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 5, !dbg !9360
  %6 = load %struct.zbus_observer**, %struct.zbus_observer*** %5, align 4, !dbg !9360
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %6, metadata !9355, metadata !DIExpression()), !dbg !9361
  %7 = load %struct.zbus_observer*, %struct.zbus_observer** %6, align 4, !dbg !9362
  %8 = icmp eq %struct.zbus_observer* %7, null, !dbg !9364
  br i1 %8, label %31, label %16, !dbg !9365

9:                                                ; preds = %27
  %10 = load %struct.zbus_observer**, %struct.zbus_observer*** %5, align 4, !dbg !9366
  %11 = load %struct.zbus_observer*, %struct.zbus_observer** %10, align 4, !dbg !9367
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9351, metadata !DIExpression()), !dbg !9359
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %10, metadata !9357, metadata !DIExpression()), !dbg !9369
  call void @llvm.dbg.value(metadata i32 0, metadata !9353, metadata !DIExpression()), !dbg !9359
  %12 = icmp eq %struct.zbus_observer* %11, null, !dbg !9370
  br i1 %12, label %31, label %13, !dbg !9371

13:                                               ; preds = %9
  %14 = bitcast %struct.zbus_channel** %3 to i8*
  %15 = getelementptr inbounds %union.argument_value, %union.argument_value* %4, i32 0, i32 0
  br label %33, !dbg !9371

16:                                               ; preds = %2, %27
  %17 = phi %struct.zbus_observer* [ %29, %27 ], [ %7, %2 ]
  %18 = phi %struct.zbus_observer** [ %28, %27 ], [ %6, %2 ]
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %18, metadata !9355, metadata !DIExpression()), !dbg !9361
  %19 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %17, i32 0, i32 0, !dbg !9372
  %20 = load i8, i8* %19, align 4, !dbg !9372, !range !7657
  %21 = icmp eq i8 %20, 0, !dbg !9372
  br i1 %21, label %27, label %22, !dbg !9375

22:                                               ; preds = %16
  %23 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %17, i32 0, i32 2, !dbg !9376
  %24 = load void (%struct.zbus_channel*)*, void (%struct.zbus_channel*)** %23, align 4, !dbg !9376
  %25 = icmp eq void (%struct.zbus_channel*)* %24, null, !dbg !9377
  br i1 %25, label %27, label %26, !dbg !9378

26:                                               ; preds = %22
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9351, metadata !DIExpression()), !dbg !9359
  tail call void %24(%struct.zbus_channel* noundef %0) #27, !dbg !9379
  br label %27, !dbg !9381

27:                                               ; preds = %16, %22, %26
  %28 = getelementptr inbounds %struct.zbus_observer*, %struct.zbus_observer** %18, i32 1, !dbg !9382
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %28, metadata !9355, metadata !DIExpression()), !dbg !9361
  %29 = load %struct.zbus_observer*, %struct.zbus_observer** %28, align 4, !dbg !9362
  %30 = icmp eq %struct.zbus_observer* %29, null, !dbg !9364
  br i1 %30, label %9, label %16, !dbg !9365, !llvm.loop !9383

31:                                               ; preds = %51, %2, %9
  %32 = phi i32 [ 0, %9 ], [ 0, %2 ], [ %52, %51 ], !dbg !9359
  ret i32 %32, !dbg !9385

33:                                               ; preds = %13, %51
  %34 = phi %struct.zbus_observer* [ %11, %13 ], [ %54, %51 ]
  %35 = phi %struct.zbus_observer** [ %10, %13 ], [ %53, %51 ]
  %36 = phi i32 [ 0, %13 ], [ %52, %51 ]
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %35, metadata !9357, metadata !DIExpression()), !dbg !9369
  call void @llvm.dbg.value(metadata i32 %36, metadata !9353, metadata !DIExpression()), !dbg !9359
  %37 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %34, i32 0, i32 0, !dbg !9386
  %38 = load i8, i8* %37, align 4, !dbg !9386, !range !7657
  %39 = icmp eq i8 %38, 0, !dbg !9386
  br i1 %39, label %51, label %40, !dbg !9389

40:                                               ; preds = %33
  %41 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %34, i32 0, i32 1, !dbg !9390
  %42 = load %struct.k_msgq*, %struct.k_msgq** %41, align 4, !dbg !9390
  %43 = icmp eq %struct.k_msgq* %42, null, !dbg !9391
  br i1 %43, label %51, label %44, !dbg !9392

44:                                               ; preds = %40
  call void @_zbus_timeout_remainder(%union.argument_value* nonnull sret(%union.argument_value) align 8 %4, i64 noundef %1) #26, !dbg !9393
  %45 = load i64, i64* %15, align 8, !dbg !9395
  %46 = insertvalue [1 x i64] poison, i64 %45, 0, !dbg !9395
  call void @llvm.dbg.value(metadata %struct.zbus_channel** %3, metadata !9351, metadata !DIExpression(DW_OP_deref)), !dbg !9359
  %47 = call fastcc i32 @k_msgq_put(%struct.k_msgq* noundef nonnull %42, i8* noundef nonnull %14, [1 x i64] %46) #26, !dbg !9395
  call void @llvm.dbg.value(metadata i32 %47, metadata !9354, metadata !DIExpression()), !dbg !9359
  %48 = icmp eq i32 %47, 0, !dbg !9396
  br i1 %48, label %51, label %49, !dbg !9398

49:                                               ; preds = %44
  %50 = load %struct.zbus_observer*, %struct.zbus_observer** %35, align 4, !dbg !9399
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.1.73, i32 0, i32 0), i32 noundef 69, i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2.74, i32 0, i32 0), %struct.zbus_observer* noundef %50, i32 noundef %47) #27, !dbg !9399
  call void @llvm.dbg.value(metadata i32 %47, metadata !9353, metadata !DIExpression()), !dbg !9359
  br label %51, !dbg !9405

51:                                               ; preds = %33, %40, %49, %44
  %52 = phi i32 [ %47, %49 ], [ %36, %44 ], [ %36, %40 ], [ %36, %33 ], !dbg !9359
  call void @llvm.dbg.value(metadata i32 %52, metadata !9353, metadata !DIExpression()), !dbg !9359
  %53 = getelementptr inbounds %struct.zbus_observer*, %struct.zbus_observer** %35, i32 1, !dbg !9406
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %53, metadata !9357, metadata !DIExpression()), !dbg !9369
  %54 = load %struct.zbus_observer*, %struct.zbus_observer** %53, align 4, !dbg !9367
  %55 = icmp eq %struct.zbus_observer* %54, null, !dbg !9370
  br i1 %55, label %31, label %33, !dbg !9371, !llvm.loop !9407
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %0) unnamed_addr #1 !dbg !9409 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !9413, metadata !DIExpression()), !dbg !9414
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9415, !srcloc !9417
  %2 = tail call i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) #27, !dbg !9418
  ret i32 %2, !dbg !9419
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !9420 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9426, metadata !DIExpression()), !dbg !9427
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !9424, metadata !DIExpression()), !dbg !9427
  call void @llvm.dbg.value(metadata i8* %1, metadata !9425, metadata !DIExpression()), !dbg !9427
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9428, !srcloc !9430
  %4 = tail call i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) #27, !dbg !9431
  ret i32 %4, !dbg !9432
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_read(%struct.zbus_channel* nocapture noundef readonly %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !9433 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9439, metadata !DIExpression()), !dbg !9441
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9437, metadata !DIExpression()), !dbg !9441
  call void @llvm.dbg.value(metadata i8* %1, metadata !9438, metadata !DIExpression()), !dbg !9441
  %4 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 4, !dbg !9442
  %5 = load %struct.k_mutex*, %struct.k_mutex** %4, align 4, !dbg !9442
  %6 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %5, [1 x i64] %2) #26, !dbg !9443
  call void @llvm.dbg.value(metadata i32 %6, metadata !9440, metadata !DIExpression()), !dbg !9441
  %7 = icmp eq i32 %6, 0, !dbg !9444
  br i1 %7, label %8, label %17, !dbg !9446

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 2, !dbg !9447
  %10 = load i8*, i8** %9, align 4, !dbg !9447
  %11 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 0, !dbg !9448
  %12 = load i16, i16* %11, align 4, !dbg !9448
  %13 = zext i16 %12 to i32, !dbg !9449
  %14 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %10, i32 noundef %13) #27, !dbg !9450
  %15 = load %struct.k_mutex*, %struct.k_mutex** %4, align 4, !dbg !9451
  %16 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %15) #26, !dbg !9452
  br label %17, !dbg !9453

17:                                               ; preds = %3, %8
  %18 = phi i32 [ %16, %8 ], [ %6, %3 ], !dbg !9441
  ret i32 %18, !dbg !9454
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_notify(%struct.zbus_channel* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !9455 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9460, metadata !DIExpression()), !dbg !9463
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9459, metadata !DIExpression()), !dbg !9463
  %3 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %1) #27, !dbg !9464
  call void @llvm.dbg.value(metadata i64 %3, metadata !9462, metadata !DIExpression()), !dbg !9463
  %4 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 4, !dbg !9465
  %5 = load %struct.k_mutex*, %struct.k_mutex** %4, align 4, !dbg !9465
  %6 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %5, [1 x i64] %1) #26, !dbg !9466
  call void @llvm.dbg.value(metadata i32 %6, metadata !9461, metadata !DIExpression()), !dbg !9463
  %7 = icmp eq i32 %6, 0, !dbg !9467
  br i1 %7, label %8, label %12, !dbg !9469

8:                                                ; preds = %2
  %9 = tail call fastcc i32 @_zbus_notify_observers(%struct.zbus_channel* noundef nonnull %0, i64 noundef %3) #26, !dbg !9470
  call void @llvm.dbg.value(metadata i32 %9, metadata !9461, metadata !DIExpression()), !dbg !9463
  %10 = load %struct.k_mutex*, %struct.k_mutex** %4, align 4, !dbg !9471
  %11 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %10) #26, !dbg !9472
  br label %12, !dbg !9473

12:                                               ; preds = %2, %8
  %13 = phi i32 [ %9, %8 ], [ %6, %2 ], !dbg !9463
  ret i32 %13, !dbg !9474
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_claim(%struct.zbus_channel* nocapture noundef readonly %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !9475 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9478, metadata !DIExpression()), !dbg !9480
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9477, metadata !DIExpression()), !dbg !9480
  %3 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 4, !dbg !9481
  %4 = load %struct.k_mutex*, %struct.k_mutex** %3, align 4, !dbg !9481
  %5 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %4, [1 x i64] %1) #26, !dbg !9482
  call void @llvm.dbg.value(metadata i32 %5, metadata !9479, metadata !DIExpression()), !dbg !9480
  ret i32 %5, !dbg !9483
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_finish(%struct.zbus_channel* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !9484 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9488, metadata !DIExpression()), !dbg !9490
  %2 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 4, !dbg !9491
  %3 = load %struct.k_mutex*, %struct.k_mutex** %2, align 4, !dbg !9491
  %4 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %3) #26, !dbg !9492
  call void @llvm.dbg.value(metadata i32 %4, metadata !9489, metadata !DIExpression()), !dbg !9490
  ret i32 %4, !dbg !9493
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_sub_wait(%struct.zbus_observer* nocapture noundef readonly %0, %struct.zbus_channel** noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !9494 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9501, metadata !DIExpression()), !dbg !9502
  call void @llvm.dbg.value(metadata %struct.zbus_observer* %0, metadata !9499, metadata !DIExpression()), !dbg !9502
  call void @llvm.dbg.value(metadata %struct.zbus_channel** %1, metadata !9500, metadata !DIExpression()), !dbg !9502
  %4 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %0, i32 0, i32 1, !dbg !9503
  %5 = load %struct.k_msgq*, %struct.k_msgq** %4, align 4, !dbg !9503
  %6 = icmp eq %struct.k_msgq* %5, null, !dbg !9505
  br i1 %6, label %10, label %7, !dbg !9506

7:                                                ; preds = %3
  %8 = bitcast %struct.zbus_channel** %1 to i8*, !dbg !9507
  %9 = tail call fastcc i32 @k_msgq_get(%struct.k_msgq* noundef nonnull %5, i8* noundef %8, [1 x i64] %2) #26, !dbg !9508
  br label %10, !dbg !9509

10:                                               ; preds = %3, %7
  %11 = phi i32 [ %9, %7 ], [ -22, %3 ], !dbg !9502
  ret i32 %11, !dbg !9510
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !9511 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9517, metadata !DIExpression()), !dbg !9518
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !9515, metadata !DIExpression()), !dbg !9518
  call void @llvm.dbg.value(metadata i8* %1, metadata !9516, metadata !DIExpression()), !dbg !9518
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9519, !srcloc !9521
  %4 = tail call i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) #27, !dbg !9522
  ret i32 %4, !dbg !9523
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !9524 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9526, metadata !DIExpression()), !dbg !9527
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #26, !dbg !9528
  ret void, !dbg !9529
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !9530 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9534, metadata !DIExpression()), !dbg !9540
  call void @llvm.dbg.value(metadata i32 %1, metadata !9535, metadata !DIExpression()), !dbg !9540
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !9536, metadata !DIExpression()), !dbg !9540
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !9541
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !9541
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !9541
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !9537, metadata !DIExpression()), !dbg !9540
  call void @llvm.dbg.value(metadata i32 %0, metadata !9539, metadata !DIExpression()), !dbg !9540
  %7 = icmp slt i32 %0, %1, !dbg !9542
  br i1 %7, label %8, label %22, !dbg !9545

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9539, metadata !DIExpression()), !dbg !9540
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #26, !dbg !9546
  %11 = icmp eq i32 %10, 0, !dbg !9546
  br i1 %11, label %19, label %12, !dbg !9549

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #26, !dbg !9550
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !9552
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !9552
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !9554
  br i1 %15, label %19, label %16, !dbg !9555

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !9556
  %18 = load i8*, i8** %17, align 4, !dbg !9556
  tail call void %14(i32 noundef %9, i8* noundef %18) #27, !dbg !9557
  br label %19, !dbg !9558

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !9559
  call void @llvm.dbg.value(metadata i32 %20, metadata !9539, metadata !DIExpression()), !dbg !9540
  %21 = icmp eq i32 %20, %1, !dbg !9542
  br i1 %21, label %22, label %8, !dbg !9545, !llvm.loop !9560

22:                                               ; preds = %19, %3
  ret void, !dbg !9562
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #17 !dbg !9563 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9565, metadata !DIExpression()), !dbg !9566
  %2 = shl nuw i32 1, %0, !dbg !9567
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #26, !dbg !9570
  ret i32 %3, !dbg !9571
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #16 !dbg !9572 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9576, metadata !DIExpression()), !dbg !9577
  %2 = shl nuw i32 1, %0, !dbg !9578
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #26, !dbg !9581
  ret void, !dbg !9582
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #16 !dbg !9583 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9586, metadata !DIExpression()), !dbg !9587
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9588
  ret void, !dbg !9589
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #17 !dbg !9590 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9592, metadata !DIExpression()), !dbg !9593
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9594
  %3 = and i32 %2, %0, !dbg !9594
  %4 = icmp eq i32 %3, %0, !dbg !9595
  %5 = zext i1 %4 to i32, !dbg !9595
  ret i32 %5, !dbg !9596
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !9597 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9599, metadata !DIExpression()), !dbg !9600
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #26, !dbg !9601
  ret void, !dbg !9602
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !9603 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9605, metadata !DIExpression()), !dbg !9606
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #26, !dbg !9607
  ret void, !dbg !9608
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !9609 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9611, metadata !DIExpression()), !dbg !9612
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #26, !dbg !9613
  ret void, !dbg !9614
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !9615 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9617, metadata !DIExpression()), !dbg !9618
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #26, !dbg !9619
  ret void, !dbg !9620
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !9621 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9623, metadata !DIExpression()), !dbg !9624
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #26, !dbg !9625
  ret void, !dbg !9626
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !9627 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9629, metadata !DIExpression()), !dbg !9630
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #26, !dbg !9631
  ret void, !dbg !9632
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !9633 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9635, metadata !DIExpression()), !dbg !9636
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #26, !dbg !9637
  ret void, !dbg !9638
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !9639 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9641, metadata !DIExpression()), !dbg !9642
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #26, !dbg !9643
  ret void, !dbg !9644
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !9645 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9647, metadata !DIExpression()), !dbg !9648
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #26, !dbg !9649
  ret void, !dbg !9650
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !9651 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9653, metadata !DIExpression()), !dbg !9654
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #26, !dbg !9655
  ret void, !dbg !9656
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9657 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9659, metadata !DIExpression()), !dbg !9660
  tail call fastcc void @__stm32_exti_connect_irqs() #26, !dbg !9661
  ret i32 0, !dbg !9662
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !859 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !863, metadata !DIExpression()), !dbg !9663
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #27, !dbg !9664
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #27, !dbg !9666
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #27, !dbg !9668
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #27, !dbg !9670
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #27, !dbg !9672
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #27, !dbg !9674
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #27, !dbg !9676
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #27, !dbg !9678
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #27, !dbg !9680
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #27, !dbg !9682
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #27, !dbg !9684
  ret void, !dbg !9686
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !9687 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9689, metadata !DIExpression()), !dbg !9691
  call void @llvm.dbg.value(metadata i32 0, metadata !9690, metadata !DIExpression()), !dbg !9691
  %2 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !9692
  %3 = load i32, i32* %2, align 4, !dbg !9692
  call void @llvm.dbg.value(metadata i32 %3, metadata !9690, metadata !DIExpression()), !dbg !9691
  %4 = shl nuw i32 1, %0, !dbg !9693
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #26, !dbg !9694
  tail call void @arch_irq_enable(i32 noundef %3) #27, !dbg !9695
  ret void, !dbg !9696
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #16 !dbg !9697 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9699, metadata !DIExpression()), !dbg !9700
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9701
  %3 = or i32 %2, %0, !dbg !9701
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9701
  ret void, !dbg !9702
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #16 !dbg !9703 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9705, metadata !DIExpression()), !dbg !9706
  %2 = icmp slt i32 %0, 32, !dbg !9707
  br i1 %2, label %3, label %5, !dbg !9709

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !9710
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #26, !dbg !9712
  br label %5, !dbg !9713

5:                                                ; preds = %1, %3
  ret void, !dbg !9714
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #16 !dbg !9715 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9717, metadata !DIExpression()), !dbg !9718
  %2 = xor i32 %0, -1, !dbg !9719
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9719
  %4 = and i32 %3, %2, !dbg !9719
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9719
  ret void, !dbg !9720
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #16 !dbg !9721 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9725, metadata !DIExpression()), !dbg !9727
  call void @llvm.dbg.value(metadata i32 %1, metadata !9726, metadata !DIExpression()), !dbg !9727
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !9728

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !9729
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #26, !dbg !9731
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #26, !dbg !9732
  br label %11, !dbg !9733

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !9734
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #26, !dbg !9735
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #26, !dbg !9736
  br label %11, !dbg !9737

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !9738
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #26, !dbg !9739
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #26, !dbg !9740
  br label %11, !dbg !9741

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !9742
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #26, !dbg !9743
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #26, !dbg !9744
  br label %11, !dbg !9745

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !9746
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #16 !dbg !9747 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9749, metadata !DIExpression()), !dbg !9750
  %2 = xor i32 %0, -1, !dbg !9751
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9751
  %4 = and i32 %3, %2, !dbg !9751
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9751
  ret void, !dbg !9752
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #16 !dbg !9753 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9755, metadata !DIExpression()), !dbg !9756
  %2 = xor i32 %0, -1, !dbg !9757
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9757
  %4 = and i32 %3, %2, !dbg !9757
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9757
  ret void, !dbg !9758
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #16 !dbg !9759 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9761, metadata !DIExpression()), !dbg !9762
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9763
  %3 = or i32 %2, %0, !dbg !9763
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9763
  ret void, !dbg !9764
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #16 !dbg !9765 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9767, metadata !DIExpression()), !dbg !9768
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9769
  %3 = or i32 %2, %0, !dbg !9769
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9769
  ret void, !dbg !9770
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #9 !dbg !9771 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9775, metadata !DIExpression()), !dbg !9781
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !9776, metadata !DIExpression()), !dbg !9781
  call void @llvm.dbg.value(metadata i8* %2, metadata !9777, metadata !DIExpression()), !dbg !9781
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_37, metadata !9778, metadata !DIExpression()), !dbg !9781
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9780, metadata !DIExpression()), !dbg !9781
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9782
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !9782
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !9784
  br i1 %6, label %7, label %9, !dbg !9785

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !9786
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9787
  store i8* %2, i8** %8, align 4, !dbg !9788
  br label %9, !dbg !9789

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !9781
  ret i32 %10, !dbg !9790
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #8 !dbg !9791 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9793, metadata !DIExpression()), !dbg !9796
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_37, metadata !9794, metadata !DIExpression()), !dbg !9796
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9795, metadata !DIExpression()), !dbg !9796
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9797
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !9798
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9799
  store i8* null, i8** %3, align 4, !dbg !9800
  ret void, !dbg !9801
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #16 !dbg !9802 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9804, metadata !DIExpression()), !dbg !9809
  call void @llvm.dbg.value(metadata i8* %1, metadata !9805, metadata !DIExpression()), !dbg !9809
  call void @llvm.dbg.value(metadata i8* %1, metadata !9806, metadata !DIExpression()), !dbg !9809
  %3 = bitcast i8* %1 to i32*, !dbg !9810
  %4 = load i32, i32* %3, align 4, !dbg !9810
  %5 = add i32 %4, -169, !dbg !9810
  %6 = icmp ult i32 %5, -121, !dbg !9810
  br i1 %6, label %15, label %7, !dbg !9812

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !9813
  %9 = inttoptr i32 %8 to i32*, !dbg !9814
  call void @llvm.dbg.value(metadata i32* %9, metadata !9807, metadata !DIExpression()), !dbg !9809
  %10 = load volatile i32, i32* %9, align 4, !dbg !9815
  call void @llvm.dbg.value(metadata i32 %10, metadata !9808, metadata !DIExpression()), !dbg !9809
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9816
  %12 = bitcast i8* %11 to i32*, !dbg !9816
  %13 = load i32, i32* %12, align 4, !dbg !9816
  %14 = or i32 %13, %10, !dbg !9817
  call void @llvm.dbg.value(metadata i32 %14, metadata !9808, metadata !DIExpression()), !dbg !9809
  store volatile i32 %14, i32* %9, align 4, !dbg !9818
  br label %15, !dbg !9819

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !9809
  ret i32 %16, !dbg !9820
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #16 !dbg !9821 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9823, metadata !DIExpression()), !dbg !9828
  call void @llvm.dbg.value(metadata i8* %1, metadata !9824, metadata !DIExpression()), !dbg !9828
  call void @llvm.dbg.value(metadata i8* %1, metadata !9825, metadata !DIExpression()), !dbg !9828
  %3 = bitcast i8* %1 to i32*, !dbg !9829
  %4 = load i32, i32* %3, align 4, !dbg !9829
  %5 = add i32 %4, -169, !dbg !9829
  %6 = icmp ult i32 %5, -121, !dbg !9829
  br i1 %6, label %16, label %7, !dbg !9831

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !9832
  %9 = inttoptr i32 %8 to i32*, !dbg !9833
  call void @llvm.dbg.value(metadata i32* %9, metadata !9826, metadata !DIExpression()), !dbg !9828
  %10 = load volatile i32, i32* %9, align 4, !dbg !9834
  call void @llvm.dbg.value(metadata i32 %10, metadata !9827, metadata !DIExpression()), !dbg !9828
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9835
  %12 = bitcast i8* %11 to i32*, !dbg !9835
  %13 = load i32, i32* %12, align 4, !dbg !9835
  %14 = xor i32 %13, -1, !dbg !9836
  %15 = and i32 %10, %14, !dbg !9837
  call void @llvm.dbg.value(metadata i32 %15, metadata !9827, metadata !DIExpression()), !dbg !9828
  store volatile i32 %15, i32* %9, align 4, !dbg !9838
  br label %16, !dbg !9839

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !9828
  ret i32 %17, !dbg !9840
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !9841 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9843, metadata !DIExpression()), !dbg !9851
  call void @llvm.dbg.value(metadata i8* %1, metadata !9844, metadata !DIExpression()), !dbg !9851
  call void @llvm.dbg.value(metadata i32* %2, metadata !9845, metadata !DIExpression()), !dbg !9851
  call void @llvm.dbg.value(metadata i8* %1, metadata !9846, metadata !DIExpression()), !dbg !9851
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !9852
  call void @llvm.dbg.value(metadata i32 %4, metadata !9847, metadata !DIExpression()), !dbg !9851
  call void @llvm.dbg.value(metadata i32 undef, metadata !9848, metadata !DIExpression()), !dbg !9851
  call void @llvm.dbg.value(metadata i32 undef, metadata !9849, metadata !DIExpression()), !dbg !9851
  call void @llvm.dbg.value(metadata i32 %4, metadata !9850, metadata !DIExpression()), !dbg !9851
  %5 = bitcast i8* %1 to i32*, !dbg !9853
  %6 = load i32, i32* %5, align 4, !dbg !9853
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !9854

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 4) #26, !dbg !9855
  call void @llvm.dbg.value(metadata i32 %8, metadata !9848, metadata !DIExpression()), !dbg !9851
  br label %19, !dbg !9856

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #26, !dbg !9858
  call void @llvm.dbg.value(metadata i32 %10, metadata !9849, metadata !DIExpression()), !dbg !9851
  br label %19, !dbg !9859

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #27, !dbg !9860
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 2) #26, !dbg !9861
  br label %19, !dbg !9862

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #27, !dbg !9863
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 7) #26, !dbg !9864
  br label %19, !dbg !9865

17:                                               ; preds = %3
  br label %19, !dbg !9866

18:                                               ; preds = %3
  br label %19, !dbg !9867

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 32000, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !9868
  br label %21, !dbg !9869

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !9851
  ret i32 %22, !dbg !9869
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #16 !dbg !9870 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9872, metadata !DIExpression()), !dbg !9880
  call void @llvm.dbg.value(metadata i8* %1, metadata !9873, metadata !DIExpression()), !dbg !9880
  call void @llvm.dbg.value(metadata i8* %2, metadata !9874, metadata !DIExpression()), !dbg !9880
  call void @llvm.dbg.value(metadata i8* %1, metadata !9875, metadata !DIExpression()), !dbg !9880
  %4 = bitcast i8* %1 to i32*, !dbg !9881
  %5 = load i32, i32* %4, align 4, !dbg !9881
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #26, !dbg !9882
  call void @llvm.dbg.value(metadata i32 %6, metadata !9879, metadata !DIExpression()), !dbg !9880
  %7 = icmp slt i32 %6, 0, !dbg !9883
  br i1 %7, label %22, label %8, !dbg !9885

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9875, metadata !DIExpression()), !dbg !9880
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9886
  %10 = bitcast i8* %9 to i32*, !dbg !9886
  %11 = load i32, i32* %10, align 4, !dbg !9886
  %12 = lshr i32 %11, 16, !dbg !9886
  %13 = and i32 %12, 7, !dbg !9886
  %14 = lshr i32 %11, 8, !dbg !9887
  %15 = and i32 %14, 31, !dbg !9887
  %16 = shl i32 %13, %15, !dbg !9888
  call void @llvm.dbg.value(metadata i32 %16, metadata !9878, metadata !DIExpression()), !dbg !9880
  %17 = and i32 %11, 255, !dbg !9889
  %18 = or i32 %17, 1073887232, !dbg !9890
  %19 = inttoptr i32 %18 to i32*, !dbg !9891
  call void @llvm.dbg.value(metadata i32* %19, metadata !9876, metadata !DIExpression()), !dbg !9880
  %20 = load volatile i32, i32* %19, align 4, !dbg !9892
  call void @llvm.dbg.value(metadata i32 %20, metadata !9877, metadata !DIExpression()), !dbg !9880
  %21 = or i32 %16, %20, !dbg !9893
  call void @llvm.dbg.value(metadata i32 %21, metadata !9877, metadata !DIExpression()), !dbg !9880
  store volatile i32 %21, i32* %19, align 4, !dbg !9894
  br label %22, !dbg !9895

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !9880
  ret i32 %23, !dbg !9896
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #5 !dbg !9897 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9901, metadata !DIExpression()), !dbg !9903
  call void @llvm.dbg.value(metadata i32 0, metadata !9902, metadata !DIExpression()), !dbg !9903
  %2 = add i32 %0, -1, !dbg !9904
  %3 = icmp ult i32 %2, 6, !dbg !9904
  br i1 %3, label %4, label %7, !dbg !9904

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !9904
  %6 = load i32, i32* %5, align 4, !dbg !9904
  call void @llvm.dbg.value(metadata i32 %6, metadata !9902, metadata !DIExpression()), !dbg !9903
  br label %7, !dbg !9905

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !9903
  ret i32 %8, !dbg !9906
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !9907 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9911, metadata !DIExpression()), !dbg !9913
  call void @llvm.dbg.value(metadata i32 %1, metadata !9912, metadata !DIExpression()), !dbg !9913
  %3 = udiv i32 %0, %1, !dbg !9914
  ret i32 %3, !dbg !9915
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !9916 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9920, metadata !DIExpression()), !dbg !9924
  call void @llvm.dbg.value(metadata i32 12, metadata !9921, metadata !DIExpression()), !dbg !9924
  call void @llvm.dbg.value(metadata i32 336, metadata !9922, metadata !DIExpression()), !dbg !9924
  call void @llvm.dbg.value(metadata i32 %1, metadata !9923, metadata !DIExpression()), !dbg !9924
  %3 = mul i32 %0, 336, !dbg !9925
  %4 = mul nsw i32 %1, 12, !dbg !9926
  %5 = udiv i32 %3, %4, !dbg !9927
  ret i32 %5, !dbg !9928
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !9929 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !9931, metadata !DIExpression()), !dbg !9934
  tail call void @config_enable_default_clocks() #27, !dbg !9935
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #27, !dbg !9936
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #26, !dbg !9936
  %4 = lshr i32 %3, 4, !dbg !9936
  %5 = and i32 %4, 15, !dbg !9936
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !9936
  %7 = load i8, i8* %6, align 1, !dbg !9936
  %8 = zext i8 %7 to i32, !dbg !9936
  %9 = lshr i32 %2, %8, !dbg !9936
  call void @llvm.dbg.value(metadata i32 %9, metadata !9932, metadata !DIExpression()), !dbg !9934
  call void @llvm.dbg.value(metadata !DIArgList(i32 168000000, i8 undef), metadata !9933, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !9934
  %10 = icmp ult i32 %9, 168000000, !dbg !9937
  br i1 %10, label %11, label %13, !dbg !9939

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 168000000) #27, !dbg !9940
  br label %13, !dbg !9942

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #26, !dbg !9943
  tail call fastcc void @set_up_plls() #26, !dbg !9944
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !9945
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #26, !dbg !9948
  br label %14, !dbg !9949

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !9950
  %16 = icmp eq i32 %15, 8, !dbg !9951
  br i1 %16, label %17, label %14, !dbg !9949, !llvm.loop !9952

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 167999999, !dbg !9954
  br i1 %18, label %19, label %21, !dbg !9956

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 168000000) #27, !dbg !9957
  br label %21, !dbg !9959

21:                                               ; preds = %19, %17
  store i32 168000000, i32* @SystemCoreClock, align 4, !dbg !9960
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #26, !dbg !9961
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #26, !dbg !9962
  ret i32 0, !dbg !9963
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #17 !dbg !9964 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9966
  %2 = and i32 %1, 240, !dbg !9966
  ret i32 %2, !dbg !9967
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #16 !dbg !9968 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #26, !dbg !9969
  tail call fastcc void @LL_RCC_HSE_Enable() #26, !dbg !9974
  br label %1, !dbg !9975

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #26, !dbg !9976
  %3 = icmp eq i32 %2, 1, !dbg !9977
  br i1 %3, label %4, label %1, !dbg !9975, !llvm.loop !9978

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #26, !dbg !9980
  br label %5, !dbg !9983

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #26, !dbg !9984
  %7 = icmp eq i32 %6, 1, !dbg !9985
  br i1 %7, label %8, label %5, !dbg !9983, !llvm.loop !9986

8:                                                ; preds = %5
  ret void, !dbg !9988
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !9989 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !9990
  %2 = icmp eq i32 %1, 8, !dbg !9992
  br i1 %2, label %3, label %4, !dbg !9993

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !9994
  tail call fastcc void @stm32_clock_switch_to_hsi() #26, !dbg !9996
  br label %4, !dbg !9997

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #26, !dbg !9998
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9999
  %6 = and i32 %5, -196609, !dbg !9999
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9999
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10000
  %8 = and i32 %7, -251658241, !dbg !10000
  %9 = or i32 %8, 117440512, !dbg !10000
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10000
  tail call void @config_pll_sysclock() #27, !dbg !10001
  tail call fastcc void @LL_RCC_PLL_Enable() #26, !dbg !10002
  br label %10, !dbg !10003

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #26, !dbg !10004
  %12 = icmp eq i32 %11, 1, !dbg !10005
  br i1 %12, label %13, label %10, !dbg !10003, !llvm.loop !10006

13:                                               ; preds = %10
  ret void, !dbg !10008
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #16 !dbg !10009 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10011, metadata !DIExpression()), !dbg !10012
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10013
  %2 = and i32 %1, -241, !dbg !10013
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10013
  ret void, !dbg !10014
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #16 !dbg !10015 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10017, metadata !DIExpression()), !dbg !10018
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10019
  %3 = and i32 %2, -4, !dbg !10019
  %4 = or i32 %3, %0, !dbg !10019
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10019
  ret void, !dbg !10020
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #17 !dbg !10021 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10022
  %2 = and i32 %1, 12, !dbg !10022
  ret i32 %2, !dbg !10023
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #16 !dbg !10024 {
  call void @llvm.dbg.value(metadata i32 5120, metadata !10026, metadata !DIExpression()), !dbg !10027
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10028
  %2 = and i32 %1, -7169, !dbg !10028
  %3 = or i32 %2, 5120, !dbg !10028
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10028
  ret void, !dbg !10029
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #16 !dbg !10030 {
  call void @llvm.dbg.value(metadata i32 32768, metadata !10032, metadata !DIExpression()), !dbg !10033
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10034
  %2 = and i32 %1, -57345, !dbg !10034
  %3 = or i32 %2, 32768, !dbg !10034
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10034
  ret void, !dbg !10035
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #16 !dbg !10036 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !10037
  %2 = icmp eq i32 %1, 1, !dbg !10039
  br i1 %2, label %7, label %3, !dbg !10040

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #26, !dbg !10041
  br label %4, !dbg !10043

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !10044
  %6 = icmp eq i32 %5, 1, !dbg !10045
  br i1 %6, label %7, label %4, !dbg !10043, !llvm.loop !10046

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #26, !dbg !10048
  br label %8, !dbg !10049

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !10050
  %10 = icmp eq i32 %9, 0, !dbg !10051
  br i1 %10, label %11, label %8, !dbg !10049, !llvm.loop !10052

11:                                               ; preds = %8
  ret void, !dbg !10054
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #16 !dbg !10055 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10056
  %2 = and i32 %1, -16777217, !dbg !10056
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10056
  ret void, !dbg !10057
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #16 !dbg !10058 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10059
  %2 = or i32 %1, 16777216, !dbg !10059
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10059
  ret void, !dbg !10060
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #17 !dbg !10061 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10062
  %2 = lshr i32 %1, 25, !dbg !10063
  %3 = and i32 %2, 1, !dbg !10063
  ret i32 %3, !dbg !10064
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #17 !dbg !10065 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10066
  %2 = lshr i32 %1, 1, !dbg !10067
  %3 = and i32 %2, 1, !dbg !10067
  ret i32 %3, !dbg !10068
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #16 !dbg !10069 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10070
  %2 = or i32 %1, 1, !dbg !10070
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10070
  ret void, !dbg !10071
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #16 !dbg !10072 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10073
  %2 = and i32 %1, -262145, !dbg !10073
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10073
  ret void, !dbg !10074
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #16 !dbg !10075 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10076
  %2 = or i32 %1, 65536, !dbg !10076
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10076
  ret void, !dbg !10077
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #17 !dbg !10078 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10079
  %2 = lshr i32 %1, 17, !dbg !10080
  %3 = and i32 %2, 1, !dbg !10080
  ret i32 %3, !dbg !10081
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #16 !dbg !10082 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10083
  %2 = or i32 %1, 1, !dbg !10083
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10083
  ret void, !dbg !10084
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #17 !dbg !10085 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10086
  %2 = lshr i32 %1, 1, !dbg !10087
  %3 = and i32 %2, 1, !dbg !10087
  ret i32 %3, !dbg !10088
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #5 !dbg !10089 {
  ret i32 12000000, !dbg !10091
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #16 !dbg !10095 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #26, !dbg !10096
  ret void, !dbg !10097
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #16 !dbg !10098 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !10102, metadata !DIExpression()), !dbg !10106
  call void @llvm.dbg.value(metadata i32 12, metadata !10103, metadata !DIExpression()), !dbg !10106
  call void @llvm.dbg.value(metadata i32 336, metadata !10104, metadata !DIExpression()), !dbg !10106
  call void @llvm.dbg.value(metadata i32 0, metadata !10105, metadata !DIExpression()), !dbg !10106
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10107
  %2 = and i32 %1, -4227072, !dbg !10107
  %3 = or i32 %2, 4215820, !dbg !10107
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10107
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10108
  %5 = and i32 %4, -196609, !dbg !10108
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10108
  ret void, !dbg !10109
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #20 !dbg !10110 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #26, !dbg !10111
  ret void, !dbg !10112
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #20 !dbg !10113 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !10116, metadata !DIExpression()), !dbg !10118
  %2 = bitcast i32* %1 to i8*, !dbg !10119
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !10119
  call void @llvm.dbg.declare(metadata i32* %1, metadata !10117, metadata !DIExpression()), !dbg !10120
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10121
  %4 = or i32 %3, 268435456, !dbg !10121
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10121
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10122
  %6 = and i32 %5, 268435456, !dbg !10122
  store volatile i32 %6, i32* %1, align 4, !dbg !10123
  %7 = load volatile i32, i32* %1, align 4, !dbg !10124
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !10125
  ret void, !dbg !10125
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !10126 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10128, metadata !DIExpression()), !dbg !10129
  %2 = tail call fastcc zeroext i1 @device_is_ready() #26, !dbg !10130
  br i1 %2, label %3, label %4, !dbg !10132

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #26, !dbg !10133
  br label %4, !dbg !10134

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !10129
  ret i32 %5, !dbg !10135
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !10136 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !10141, metadata !DIExpression()), !dbg !10142
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10143, !srcloc !10145
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #26, !dbg !10146
  ret i1 %1, !dbg !10147
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !10148 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #27, !dbg !10149
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #27, !dbg !10150
  ret void, !dbg !10151
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !10152 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10154, metadata !DIExpression()), !dbg !10155
  %2 = icmp eq i32 %0, 10, !dbg !10156
  br i1 %2, label %3, label %4, !dbg !10158

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #26, !dbg !10159
  br label %4, !dbg !10161

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !10162
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #26, !dbg !10163
  ret i32 %0, !dbg !10164
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10165 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !10168, metadata !DIExpression()), !dbg !10170
  call void @llvm.dbg.value(metadata i8 %0, metadata !10169, metadata !DIExpression()), !dbg !10170
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10171, !srcloc !10173
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #26, !dbg !10174
  ret void, !dbg !10175
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10176 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !10178, metadata !DIExpression()), !dbg !10181
  call void @llvm.dbg.value(metadata i8 %0, metadata !10179, metadata !DIExpression()), !dbg !10181
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !10182
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !10180, metadata !DIExpression()), !dbg !10181
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !10183
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !10183
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_45, i8 noundef zeroext %0) #27, !dbg !10184
  ret void, !dbg !10185
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !10186 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !10188, metadata !DIExpression()), !dbg !10189
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_45) #27, !dbg !10190
  ret i1 %1, !dbg !10191
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #5 !dbg !10192 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !10239, metadata !DIExpression()), !dbg !10242
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !10240, metadata !DIExpression()), !dbg !10242
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !10241, metadata !DIExpression()), !dbg !10242
  ret void, !dbg !10243
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !10244 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10246, metadata !DIExpression()), !dbg !10251
  call void @llvm.dbg.value(metadata i8 %1, metadata !10247, metadata !DIExpression()), !dbg !10251
  call void @llvm.dbg.value(metadata i32 %2, metadata !10248, metadata !DIExpression()), !dbg !10251
  %5 = bitcast i32* %4 to i8*, !dbg !10252
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !10252
  call void @llvm.dbg.value(metadata i32* %4, metadata !10250, metadata !DIExpression(DW_OP_deref)), !dbg !10251
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !10253
  call void @llvm.dbg.value(metadata i32 %6, metadata !10249, metadata !DIExpression()), !dbg !10251
  %7 = icmp eq i32 %6, 0, !dbg !10254
  br i1 %7, label %8, label %31, !dbg !10256

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !10249, metadata !DIExpression()), !dbg !10251
  %9 = and i32 %2, 131072, !dbg !10257
  %10 = icmp eq i32 %9, 0, !dbg !10259
  br i1 %10, label %28, label %11, !dbg !10260

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !10261
  %13 = icmp eq i32 %12, 0, !dbg !10264
  br i1 %13, label %18, label %14, !dbg !10265

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !10266
  %16 = shl nuw i32 1, %15, !dbg !10266
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #26, !dbg !10268
  br label %25, !dbg !10269

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !10270
  %20 = icmp eq i32 %19, 0, !dbg !10272
  %21 = zext i8 %1 to i32, !dbg !10251
  br i1 %20, label %25, label %22, !dbg !10273

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !10274
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #26, !dbg !10276
  br label %25, !dbg !10277

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !10278
  %27 = load i32, i32* %4, align 4, !dbg !10279
  call void @llvm.dbg.value(metadata i32 %30, metadata !10250, metadata !DIExpression()), !dbg !10251
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #26, !dbg !10280
  br label %31, !dbg !10281

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !10278
  %30 = load i32, i32* %4, align 4, !dbg !10279
  call void @llvm.dbg.value(metadata i32 %30, metadata !10250, metadata !DIExpression()), !dbg !10251
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #26, !dbg !10280
  call void @llvm.dbg.value(metadata i32 0, metadata !10249, metadata !DIExpression()), !dbg !10251
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !10282
  ret i32 %6, !dbg !10282
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #17 !dbg !10283 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10287, metadata !DIExpression()), !dbg !10292
  call void @llvm.dbg.value(metadata i32* %1, metadata !10288, metadata !DIExpression()), !dbg !10292
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10293
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10293
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10293
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10289, metadata !DIExpression()), !dbg !10292
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10294
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10294
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10294
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10291, metadata !DIExpression()), !dbg !10292
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #26, !dbg !10295
  store i32 %9, i32* %1, align 4, !dbg !10296
  ret i32 0, !dbg !10297
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #16 !dbg !10298 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10300, metadata !DIExpression()), !dbg !10306
  call void @llvm.dbg.value(metadata i32 %1, metadata !10301, metadata !DIExpression()), !dbg !10306
  call void @llvm.dbg.value(metadata i32 %2, metadata !10302, metadata !DIExpression()), !dbg !10306
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10307
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !10307
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !10307
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !10303, metadata !DIExpression()), !dbg !10306
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !10308
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !10308
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !10308
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !10304, metadata !DIExpression()), !dbg !10306
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #26, !dbg !10309
  call void @llvm.dbg.value(metadata i32 %10, metadata !10305, metadata !DIExpression()), !dbg !10306
  %11 = xor i32 %1, -1, !dbg !10310
  %12 = and i32 %10, %11, !dbg !10311
  %13 = and i32 %2, %1, !dbg !10312
  %14 = or i32 %12, %13, !dbg !10313
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #26, !dbg !10314
  ret i32 0, !dbg !10315
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #16 !dbg !10316 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10318, metadata !DIExpression()), !dbg !10322
  call void @llvm.dbg.value(metadata i32 %1, metadata !10319, metadata !DIExpression()), !dbg !10322
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10323
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10323
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10323
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10320, metadata !DIExpression()), !dbg !10322
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10324
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10324
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10324
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10321, metadata !DIExpression()), !dbg !10322
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !10325
  store volatile i32 %1, i32* %9, align 4, !dbg !10325
  ret i32 0, !dbg !10326
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #16 !dbg !10327 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10329, metadata !DIExpression()), !dbg !10333
  call void @llvm.dbg.value(metadata i32 %1, metadata !10330, metadata !DIExpression()), !dbg !10333
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10334
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10334
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10334
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10331, metadata !DIExpression()), !dbg !10333
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10335
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10335
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10335
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10332, metadata !DIExpression()), !dbg !10333
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #26, !dbg !10336
  ret i32 0, !dbg !10337
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #16 !dbg !10338 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10340, metadata !DIExpression()), !dbg !10344
  call void @llvm.dbg.value(metadata i32 %1, metadata !10341, metadata !DIExpression()), !dbg !10344
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10345
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10345
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10345
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10342, metadata !DIExpression()), !dbg !10344
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10346
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10346
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10346
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10343, metadata !DIExpression()), !dbg !10344
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !10347
  %10 = load volatile i32, i32* %9, align 4, !dbg !10347
  %11 = xor i32 %10, %1, !dbg !10347
  store volatile i32 %11, i32* %9, align 4, !dbg !10347
  ret i32 0, !dbg !10348
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !10349 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10351, metadata !DIExpression()), !dbg !10361
  call void @llvm.dbg.value(metadata i8 %1, metadata !10352, metadata !DIExpression()), !dbg !10361
  call void @llvm.dbg.value(metadata i32 %2, metadata !10353, metadata !DIExpression()), !dbg !10361
  call void @llvm.dbg.value(metadata i32 %3, metadata !10354, metadata !DIExpression()), !dbg !10361
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10362
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10362
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10362
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10355, metadata !DIExpression()), !dbg !10361
  call void @llvm.dbg.value(metadata i8* undef, metadata !10356, metadata !DIExpression()), !dbg !10361
  call void @llvm.dbg.value(metadata i32 0, metadata !10358, metadata !DIExpression()), !dbg !10361
  call void @llvm.dbg.value(metadata i32 0, metadata !10359, metadata !DIExpression()), !dbg !10361
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !10363

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !10364
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #26, !dbg !10368
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !10369
  %12 = load i32, i32* %11, align 4, !dbg !10369
  %13 = icmp eq i32 %10, %12, !dbg !10370
  br i1 %13, label %14, label %29, !dbg !10371

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #27, !dbg !10372
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #27, !dbg !10374
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #27, !dbg !10375
  br label %29, !dbg !10376

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10377
  %17 = load i8*, i8** %16, align 4, !dbg !10377
  call void @llvm.dbg.value(metadata i8* %17, metadata !10356, metadata !DIExpression()), !dbg !10361
  %18 = zext i8 %1 to i32, !dbg !10378
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #27, !dbg !10380
  %20 = icmp eq i32 %19, 0, !dbg !10381
  br i1 %20, label %21, label %29, !dbg !10382

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !10383
  %23 = load i32, i32* %22, align 4, !dbg !10383
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #26, !dbg !10384
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !10385

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !10358, metadata !DIExpression()), !dbg !10361
  br label %27, !dbg !10386

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !10358, metadata !DIExpression()), !dbg !10361
  br label %27, !dbg !10388

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !10358, metadata !DIExpression()), !dbg !10361
  br label %27, !dbg !10389

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !10361
  call void @llvm.dbg.value(metadata i32 %28, metadata !10358, metadata !DIExpression()), !dbg !10361
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #27, !dbg !10390
  tail call void @stm32_exti_enable(i32 noundef %18) #27, !dbg !10391
  br label %29, !dbg !10391

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !10361
  call void @llvm.dbg.value(metadata i32 %30, metadata !10359, metadata !DIExpression()), !dbg !10361
  call void @llvm.dbg.label(metadata !10360), !dbg !10392
  ret i32 %30, !dbg !10393
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #15 !dbg !10394 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10396, metadata !DIExpression()), !dbg !10400
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10397, metadata !DIExpression()), !dbg !10400
  call void @llvm.dbg.value(metadata i1 %2, metadata !10398, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10400
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10401
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !10401
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !10401
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !10399, metadata !DIExpression()), !dbg !10400
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !10402
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #26, !dbg !10403
  ret i32 %8, !dbg !10404
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #15 !dbg !10405 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10411, metadata !DIExpression()), !dbg !10414
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10412, metadata !DIExpression()), !dbg !10414
  call void @llvm.dbg.value(metadata i1 %2, metadata !10413, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10414
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #26, !dbg !10415
  br i1 %4, label %10, label %5, !dbg !10417

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10418
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #26, !dbg !10421
  %8 = or i1 %7, %2, !dbg !10422
  %9 = select i1 %8, i32 0, i32 -22, !dbg !10422
  br i1 %2, label %11, label %13, !dbg !10422

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !10423

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10424
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #26, !dbg !10427
  br label %13, !dbg !10428

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !10414
  ret i32 %14, !dbg !10429
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #4 !dbg !10430 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10434, metadata !DIExpression()), !dbg !10435
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10436
  %3 = icmp eq %struct._snode* %2, null, !dbg !10436
  ret i1 %3, !dbg !10436
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #15 !dbg !10437 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10441, metadata !DIExpression()), !dbg !10445
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10442, metadata !DIExpression()), !dbg !10445
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10443, metadata !DIExpression()), !dbg !10445
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10446
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10444, metadata !DIExpression()), !dbg !10445
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10443, metadata !DIExpression()), !dbg !10445
  %4 = icmp eq %struct._snode* %3, null, !dbg !10448
  br i1 %4, label %15, label %5, !dbg !10446

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10444, metadata !DIExpression()), !dbg !10445
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10443, metadata !DIExpression()), !dbg !10445
  %6 = icmp eq %struct._snode* %3, %1, !dbg !10450
  br i1 %6, label %9, label %11, !dbg !10453

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10444, metadata !DIExpression()), !dbg !10445
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10443, metadata !DIExpression()), !dbg !10445
  %8 = icmp eq %struct._snode* %13, %1, !dbg !10450
  br i1 %8, label %9, label %11, !dbg !10453, !llvm.loop !10454

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #26, !dbg !10455
  br label %15, !dbg !10455

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10444, metadata !DIExpression()), !dbg !10445
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10443, metadata !DIExpression()), !dbg !10445
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #26, !dbg !10448
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10444, metadata !DIExpression()), !dbg !10445
  %14 = icmp eq %struct._snode* %13, null, !dbg !10448
  br i1 %14, label %15, label %7, !dbg !10446, !llvm.loop !10454

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !10457
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !10458 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10462, metadata !DIExpression()), !dbg !10464
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10463, metadata !DIExpression()), !dbg !10464
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10465
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #26, !dbg !10465
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #26, !dbg !10465
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !10466
  %5 = icmp eq %struct._snode* %4, null, !dbg !10466
  br i1 %5, label %6, label %8, !dbg !10465

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10468
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #26, !dbg !10468
  br label %8, !dbg !10468

8:                                                ; preds = %6, %2
  ret void, !dbg !10465
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #4 !dbg !10470 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10474, metadata !DIExpression()), !dbg !10475
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10476
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10476
  ret %struct._snode* %3, !dbg !10477
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #8 !dbg !10478 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10482, metadata !DIExpression()), !dbg !10484
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10483, metadata !DIExpression()), !dbg !10484
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10485
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10486
  ret void, !dbg !10487
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #8 !dbg !10488 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10490, metadata !DIExpression()), !dbg !10492
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10491, metadata !DIExpression()), !dbg !10492
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10493
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10494
  ret void, !dbg !10495
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #4 !dbg !10496 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10498, metadata !DIExpression()), !dbg !10499
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10500
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10500
  ret %struct._snode* %3, !dbg !10501
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #8 !dbg !10502 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10504, metadata !DIExpression()), !dbg !10506
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10505, metadata !DIExpression()), !dbg !10506
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10507
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10508
  ret void, !dbg !10509
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #9 !dbg !10510 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10514, metadata !DIExpression()), !dbg !10517
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10515, metadata !DIExpression()), !dbg !10517
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !10516, metadata !DIExpression()), !dbg !10517
  %4 = icmp eq %struct._snode* %1, null, !dbg !10518
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #26, !dbg !10520
  br i1 %4, label %6, label %11, !dbg !10521

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #26, !dbg !10522
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !10524
  %8 = icmp eq %struct._snode* %7, %2, !dbg !10524
  br i1 %8, label %9, label %15, !dbg !10522

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10526
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #26, !dbg !10526
  br label %15, !dbg !10526

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #26, !dbg !10528
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !10530
  %13 = icmp eq %struct._snode* %12, %2, !dbg !10530
  br i1 %13, label %14, label %15, !dbg !10528

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #26, !dbg !10532
  br label %15, !dbg !10532

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #26, !dbg !10521
  ret void, !dbg !10521
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #4 !dbg !10534 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10538, metadata !DIExpression()), !dbg !10539
  %2 = icmp eq %struct._snode* %0, null, !dbg !10540
  br i1 %2, label %5, label %3, !dbg !10540

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #26, !dbg !10540
  br label %5, !dbg !10540

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !10540
  ret %struct._snode* %6, !dbg !10540
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #4 !dbg !10541 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10543, metadata !DIExpression()), !dbg !10544
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #26, !dbg !10545
  ret %struct._snode* %2, !dbg !10545
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #4 !dbg !10546 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10548, metadata !DIExpression()), !dbg !10549
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10550
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10550
  ret %struct._snode* %3, !dbg !10551
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !10552 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10554, metadata !DIExpression()), !dbg !10557
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #26, !dbg !10558, !range !10559
  call void @llvm.dbg.value(metadata i32 %2, metadata !10555, metadata !DIExpression()), !dbg !10557
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #26, !dbg !10560
  call void @llvm.dbg.value(metadata i32 %3, metadata !10556, metadata !DIExpression()), !dbg !10557
  ret i32 %3, !dbg !10561
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !10562 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10564, metadata !DIExpression()), !dbg !10567
  call void @llvm.dbg.value(metadata i8* %1, metadata !10565, metadata !DIExpression()), !dbg !10567
  call void @llvm.dbg.value(metadata i8* %1, metadata !10566, metadata !DIExpression()), !dbg !10567
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !10568
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !10568
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10569
  %6 = bitcast i8* %5 to %struct.device**, !dbg !10569
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !10569
  %8 = shl nuw i32 1, %0, !dbg !10570
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #26, !dbg !10571
  ret void, !dbg !10572
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10573 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !10577, metadata !DIExpression()), !dbg !10583
  call void @llvm.dbg.value(metadata i32 %1, metadata !10578, metadata !DIExpression()), !dbg !10583
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10579, metadata !DIExpression()), !dbg !10583
  %4 = bitcast i64* %3 to i8*, !dbg !10584
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #25, !dbg !10584
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !10581, metadata !DIExpression()), !dbg !10583
  store i64 70368744177732, i64* %3, align 8, !dbg !10585
  call void @llvm.dbg.value(metadata i64* %3, metadata !10581, metadata !DIExpression(DW_OP_deref)), !dbg !10583
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #26, !dbg !10586
  call void @llvm.dbg.value(metadata i32 %5, metadata !10582, metadata !DIExpression()), !dbg !10583
  %6 = icmp eq i32 %5, 0, !dbg !10587
  br i1 %6, label %7, label %8, !dbg !10589

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #26, !dbg !10590
  br label %8, !dbg !10591

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #25, !dbg !10592
  ret void, !dbg !10592
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !10593 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10595, metadata !DIExpression()), !dbg !10598
  call void @llvm.dbg.value(metadata i8* %0, metadata !10596, metadata !DIExpression()), !dbg !10598
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_9, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !10599
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !10597, metadata !DIExpression()), !dbg !10598
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !10600
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !10600
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_9, i8* noundef %0) #27, !dbg !10601
  ret i32 %5, !dbg !10602
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10603 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10605, metadata !DIExpression()), !dbg !10608
  call void @llvm.dbg.value(metadata i32 %1, metadata !10606, metadata !DIExpression()), !dbg !10608
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #26, !dbg !10609
  call void @llvm.dbg.value(metadata i32 %3, metadata !10607, metadata !DIExpression()), !dbg !10608
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #26, !dbg !10610
  ret void, !dbg !10611
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #5 !dbg !10612 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10616, metadata !DIExpression()), !dbg !10617
  %2 = sdiv i32 %0, 4, !dbg !10618
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !10619
  %6 = add nsw i32 %5, 16, !dbg !10620
  %7 = shl i32 15, %6, !dbg !10621
  %8 = or i32 %7, %2, !dbg !10622
  ret i32 %8, !dbg !10623
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10624 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10628, metadata !DIExpression()), !dbg !10630
  call void @llvm.dbg.value(metadata i32 %1, metadata !10629, metadata !DIExpression()), !dbg !10630
  %3 = and i32 %1, 255, !dbg !10631
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !10631
  %5 = load volatile i32, i32* %4, align 4, !dbg !10631
  %6 = lshr i32 %1, 16, !dbg !10631
  %7 = xor i32 %6, -1, !dbg !10631
  %8 = and i32 %5, %7, !dbg !10631
  call void @llvm.dbg.value(metadata i32 %6, metadata !10632, metadata !DIExpression()) #25, !dbg !10636
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !10638, !srcloc !10639
  call void @llvm.dbg.value(metadata i32 %9, metadata !10635, metadata !DIExpression()) #25, !dbg !10636
  call void @llvm.dbg.value(metadata i32 %9, metadata !10640, metadata !DIExpression()) #25, !dbg !10645
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #25, !dbg !10647, !range !4998
  %11 = shl i32 %0, %10, !dbg !10631
  %12 = or i32 %11, %8, !dbg !10631
  store volatile i32 %12, i32* %4, align 4, !dbg !10631
  ret void, !dbg !10648
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10649 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10653, metadata !DIExpression()), !dbg !10658
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !10654, metadata !DIExpression()), !dbg !10658
  call void @llvm.dbg.value(metadata i32 %2, metadata !10655, metadata !DIExpression()), !dbg !10658
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10659
  %5 = icmp eq %struct._snode* %4, null, !dbg !10659
  br i1 %5, label %21, label %6, !dbg !10659

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #26, !dbg !10661
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10657, metadata !DIExpression()), !dbg !10658
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !10656, metadata !DIExpression()), !dbg !10658
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !10662
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !10662
  %11 = load i32, i32* %10, align 4, !dbg !10662
  %12 = and i32 %11, %2, !dbg !10666
  %13 = icmp eq i32 %12, 0, !dbg !10666
  br i1 %13, label %19, label %14, !dbg !10667

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !10656, metadata !DIExpression()), !dbg !10658
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !10668
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !10668
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !10668
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #27, !dbg !10670
  br label %19, !dbg !10671

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10656, metadata !DIExpression()), !dbg !10658
  %20 = icmp eq %struct._snode* %8, null, !dbg !10672
  br i1 %20, label %21, label %6, !dbg !10672

21:                                               ; preds = %19, %3
  ret void, !dbg !10673
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !10674 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10676, metadata !DIExpression()), !dbg !10677
  %2 = and i32 %0, 255, !dbg !10678
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !10678
  %4 = load volatile i32, i32* %3, align 4, !dbg !10678
  %5 = lshr i32 %0, 16, !dbg !10678
  %6 = and i32 %4, %5, !dbg !10678
  call void @llvm.dbg.value(metadata i32 %5, metadata !10632, metadata !DIExpression()) #25, !dbg !10679
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #30, !dbg !10681, !srcloc !10639
  call void @llvm.dbg.value(metadata i32 %7, metadata !10635, metadata !DIExpression()) #25, !dbg !10679
  call void @llvm.dbg.value(metadata i32 %7, metadata !10640, metadata !DIExpression()) #25, !dbg !10682
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !10684, !range !4998
  %9 = lshr i32 %6, %8, !dbg !10685
  ret i32 %9, !dbg !10686
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !10687 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10692, metadata !DIExpression()), !dbg !10694
  call void @llvm.dbg.value(metadata i32 %1, metadata !10693, metadata !DIExpression()), !dbg !10694
  %3 = shl i32 %1, 16, !dbg !10695
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !10695
  store volatile i32 %3, i32* %4, align 4, !dbg !10695
  ret void, !dbg !10696
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #17 !dbg !10697 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10701, metadata !DIExpression()), !dbg !10702
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10703
  %3 = load volatile i32, i32* %2, align 4, !dbg !10703
  ret i32 %3, !dbg !10704
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !10705 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10707, metadata !DIExpression()), !dbg !10709
  call void @llvm.dbg.value(metadata i32 %1, metadata !10708, metadata !DIExpression()), !dbg !10709
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10710
  store volatile i32 %1, i32* %3, align 4, !dbg !10710
  ret void, !dbg !10711
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #17 !dbg !10712 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10714, metadata !DIExpression()), !dbg !10715
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !10716
  %3 = load volatile i32, i32* %2, align 4, !dbg !10716
  ret i32 %3, !dbg !10717
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #9 !dbg !10718 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10722, metadata !DIExpression()), !dbg !10724
  call void @llvm.dbg.value(metadata i32* %1, metadata !10723, metadata !DIExpression()), !dbg !10724
  %3 = and i32 %0, 131072, !dbg !10725
  %4 = icmp eq i32 %3, 0, !dbg !10727
  br i1 %4, label %22, label %5, !dbg !10728

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !10729
  %6 = and i32 %0, 2, !dbg !10731
  %7 = icmp eq i32 %6, 0, !dbg !10733
  br i1 %7, label %11, label %8, !dbg !10734

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !10735
  %10 = icmp eq i32 %9, 0, !dbg !10735
  br i1 %10, label %33, label %11, !dbg !10738

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !10739
  store i32 %12, i32* %1, align 4, !dbg !10739
  %13 = and i32 %0, 16, !dbg !10740
  %14 = icmp eq i32 %13, 0, !dbg !10742
  br i1 %14, label %17, label %15, !dbg !10743

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !10744
  br label %31, !dbg !10746

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !10747
  %19 = icmp eq i32 %18, 0, !dbg !10749
  br i1 %19, label %33, label %20, !dbg !10750

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !10751
  br label %31, !dbg !10753

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !10754
  %24 = icmp eq i32 %23, 0, !dbg !10756
  br i1 %24, label %31, label %25, !dbg !10757

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !10758
  %27 = icmp eq i32 %26, 0, !dbg !10761
  br i1 %27, label %28, label %31, !dbg !10762

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !10763
  br label %33, !dbg !10764

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !10724
  ret i32 %34, !dbg !10764
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !10765 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10769, metadata !DIExpression()), !dbg !10780
  call void @llvm.dbg.value(metadata i32 %1, metadata !10770, metadata !DIExpression()), !dbg !10780
  call void @llvm.dbg.value(metadata i32 %2, metadata !10771, metadata !DIExpression()), !dbg !10780
  call void @llvm.dbg.value(metadata i32 %3, metadata !10772, metadata !DIExpression()), !dbg !10780
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10781
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10781
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10781
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10773, metadata !DIExpression()), !dbg !10780
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !10782
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !10782
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !10782
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !10774, metadata !DIExpression()), !dbg !10780
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #26, !dbg !10783
  call void @llvm.dbg.value(metadata i32 %11, metadata !10775, metadata !DIExpression()), !dbg !10780
  %12 = and i32 %2, 48, !dbg !10784
  call void @llvm.dbg.value(metadata i32 %12, metadata !10776, metadata !DIExpression()), !dbg !10780
  call void @llvm.dbg.value(metadata i32 %2, metadata !10777, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !10780
  call void @llvm.dbg.value(metadata i32 %2, metadata !10778, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !10780
  call void @llvm.dbg.value(metadata i32 %2, metadata !10779, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !10780
  %13 = lshr i32 %2, 6, !dbg !10785
  %14 = and i32 %13, 1, !dbg !10785
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #26, !dbg !10786
  %15 = lshr i32 %2, 7, !dbg !10787
  %16 = and i32 %15, 3, !dbg !10787
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #26, !dbg !10788
  %17 = lshr i32 %2, 9, !dbg !10789
  %18 = and i32 %17, 3, !dbg !10789
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #26, !dbg !10790
  %19 = icmp eq i32 %12, 32, !dbg !10791
  br i1 %19, label %20, label %24, !dbg !10793

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !10794
  br i1 %21, label %22, label %23, !dbg !10797

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !10798
  br label %24, !dbg !10800

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !10801
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !10803
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #26, !dbg !10804
  ret void, !dbg !10805
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #5 !dbg !10806 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10808, metadata !DIExpression()), !dbg !10810
  %2 = shl nuw i32 1, %0, !dbg !10811
  call void @llvm.dbg.value(metadata i32 %2, metadata !10809, metadata !DIExpression()), !dbg !10810
  ret i32 %2, !dbg !10812
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #16 !dbg !10813 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10817, metadata !DIExpression()), !dbg !10820
  call void @llvm.dbg.value(metadata i32 %1, metadata !10818, metadata !DIExpression()), !dbg !10820
  call void @llvm.dbg.value(metadata i32 %2, metadata !10819, metadata !DIExpression()), !dbg !10820
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !10821
  %5 = load volatile i32, i32* %4, align 4, !dbg !10821
  %6 = xor i32 %1, -1, !dbg !10821
  %7 = and i32 %5, %6, !dbg !10821
  %8 = mul i32 %2, %1, !dbg !10821
  %9 = or i32 %7, %8, !dbg !10821
  store volatile i32 %9, i32* %4, align 4, !dbg !10821
  ret void, !dbg !10822
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10823 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10825, metadata !DIExpression()), !dbg !10828
  call void @llvm.dbg.value(metadata i32 %1, metadata !10826, metadata !DIExpression()), !dbg !10828
  call void @llvm.dbg.value(metadata i32 %2, metadata !10827, metadata !DIExpression()), !dbg !10828
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !10829
  %5 = load volatile i32, i32* %4, align 4, !dbg !10829
  call void @llvm.dbg.value(metadata i32 %1, metadata !10632, metadata !DIExpression()) #25, !dbg !10830
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !10832, !srcloc !10639
  call void @llvm.dbg.value(metadata i32 %6, metadata !10635, metadata !DIExpression()) #25, !dbg !10830
  call void @llvm.dbg.value(metadata i32 %6, metadata !10640, metadata !DIExpression()) #25, !dbg !10833
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !10835, !range !4998
  %8 = shl nuw nsw i32 %7, 1, !dbg !10829
  %9 = shl i32 3, %8, !dbg !10829
  %10 = xor i32 %9, -1, !dbg !10829
  %11 = and i32 %5, %10, !dbg !10829
  call void @llvm.dbg.value(metadata i32 %1, metadata !10632, metadata !DIExpression()) #25, !dbg !10836
  call void @llvm.dbg.value(metadata i32 %6, metadata !10635, metadata !DIExpression()) #25, !dbg !10836
  call void @llvm.dbg.value(metadata i32 %6, metadata !10640, metadata !DIExpression()) #25, !dbg !10838
  %12 = shl i32 %2, %8, !dbg !10829
  %13 = or i32 %11, %12, !dbg !10829
  store volatile i32 %13, i32* %4, align 4, !dbg !10829
  ret void, !dbg !10840
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10841 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10843, metadata !DIExpression()), !dbg !10846
  call void @llvm.dbg.value(metadata i32 %1, metadata !10844, metadata !DIExpression()), !dbg !10846
  call void @llvm.dbg.value(metadata i32 %2, metadata !10845, metadata !DIExpression()), !dbg !10846
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !10847
  %5 = load volatile i32, i32* %4, align 4, !dbg !10847
  call void @llvm.dbg.value(metadata i32 %1, metadata !10632, metadata !DIExpression()) #25, !dbg !10848
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !10850, !srcloc !10639
  call void @llvm.dbg.value(metadata i32 %6, metadata !10635, metadata !DIExpression()) #25, !dbg !10848
  call void @llvm.dbg.value(metadata i32 %6, metadata !10640, metadata !DIExpression()) #25, !dbg !10851
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !10853, !range !4998
  %8 = shl nuw nsw i32 %7, 1, !dbg !10847
  %9 = shl i32 3, %8, !dbg !10847
  %10 = xor i32 %9, -1, !dbg !10847
  %11 = and i32 %5, %10, !dbg !10847
  call void @llvm.dbg.value(metadata i32 %1, metadata !10632, metadata !DIExpression()) #25, !dbg !10854
  call void @llvm.dbg.value(metadata i32 %6, metadata !10635, metadata !DIExpression()) #25, !dbg !10854
  call void @llvm.dbg.value(metadata i32 %6, metadata !10640, metadata !DIExpression()) #25, !dbg !10856
  %12 = shl i32 %2, %8, !dbg !10847
  %13 = or i32 %11, %12, !dbg !10847
  store volatile i32 %13, i32* %4, align 4, !dbg !10847
  ret void, !dbg !10858
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10859 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10861, metadata !DIExpression()), !dbg !10864
  call void @llvm.dbg.value(metadata i32 %1, metadata !10862, metadata !DIExpression()), !dbg !10864
  call void @llvm.dbg.value(metadata i32 %2, metadata !10863, metadata !DIExpression()), !dbg !10864
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !10865
  %5 = load volatile i32, i32* %4, align 4, !dbg !10865
  call void @llvm.dbg.value(metadata i32 %1, metadata !10632, metadata !DIExpression()) #25, !dbg !10866
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !10868, !srcloc !10639
  call void @llvm.dbg.value(metadata i32 %6, metadata !10635, metadata !DIExpression()) #25, !dbg !10866
  call void @llvm.dbg.value(metadata i32 %6, metadata !10640, metadata !DIExpression()) #25, !dbg !10869
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !10871, !range !4998
  %8 = shl nuw nsw i32 %7, 2, !dbg !10865
  %9 = shl i32 15, %8, !dbg !10865
  %10 = xor i32 %9, -1, !dbg !10865
  %11 = and i32 %5, %10, !dbg !10865
  call void @llvm.dbg.value(metadata i32 %1, metadata !10632, metadata !DIExpression()) #25, !dbg !10872
  call void @llvm.dbg.value(metadata i32 %6, metadata !10635, metadata !DIExpression()) #25, !dbg !10872
  call void @llvm.dbg.value(metadata i32 %6, metadata !10640, metadata !DIExpression()) #25, !dbg !10874
  %12 = shl i32 %2, %8, !dbg !10865
  %13 = or i32 %11, %12, !dbg !10865
  store volatile i32 %13, i32* %4, align 4, !dbg !10865
  ret void, !dbg !10876
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10877 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10879, metadata !DIExpression()), !dbg !10882
  call void @llvm.dbg.value(metadata i32 %1, metadata !10880, metadata !DIExpression()), !dbg !10882
  call void @llvm.dbg.value(metadata i32 %2, metadata !10881, metadata !DIExpression()), !dbg !10882
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !10883
  %5 = load volatile i32, i32* %4, align 4, !dbg !10883
  %6 = lshr i32 %1, 8, !dbg !10883
  call void @llvm.dbg.value(metadata i32 %6, metadata !10632, metadata !DIExpression()) #25, !dbg !10884
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !10886, !srcloc !10639
  call void @llvm.dbg.value(metadata i32 %7, metadata !10635, metadata !DIExpression()) #25, !dbg !10884
  call void @llvm.dbg.value(metadata i32 %7, metadata !10640, metadata !DIExpression()) #25, !dbg !10887
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !10889, !range !4998
  %9 = shl nuw nsw i32 %8, 2, !dbg !10883
  %10 = shl i32 15, %9, !dbg !10883
  %11 = xor i32 %10, -1, !dbg !10883
  %12 = and i32 %5, %11, !dbg !10883
  call void @llvm.dbg.value(metadata i32 %6, metadata !10632, metadata !DIExpression()) #25, !dbg !10890
  call void @llvm.dbg.value(metadata i32 %7, metadata !10635, metadata !DIExpression()) #25, !dbg !10890
  call void @llvm.dbg.value(metadata i32 %7, metadata !10640, metadata !DIExpression()) #25, !dbg !10892
  %13 = shl i32 %2, %9, !dbg !10883
  %14 = or i32 %12, %13, !dbg !10883
  store volatile i32 %14, i32* %4, align 4, !dbg !10883
  ret void, !dbg !10894
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10895 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10897, metadata !DIExpression()), !dbg !10900
  call void @llvm.dbg.value(metadata i32 %1, metadata !10898, metadata !DIExpression()), !dbg !10900
  call void @llvm.dbg.value(metadata i32 %2, metadata !10899, metadata !DIExpression()), !dbg !10900
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !10901
  %5 = load volatile i32, i32* %4, align 4, !dbg !10901
  call void @llvm.dbg.value(metadata i32 %1, metadata !10632, metadata !DIExpression()) #25, !dbg !10902
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !10904, !srcloc !10639
  call void @llvm.dbg.value(metadata i32 %6, metadata !10635, metadata !DIExpression()) #25, !dbg !10902
  call void @llvm.dbg.value(metadata i32 %6, metadata !10640, metadata !DIExpression()) #25, !dbg !10905
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !10907, !range !4998
  %8 = shl nuw nsw i32 %7, 1, !dbg !10901
  %9 = shl i32 3, %8, !dbg !10901
  %10 = xor i32 %9, -1, !dbg !10901
  %11 = and i32 %5, %10, !dbg !10901
  call void @llvm.dbg.value(metadata i32 %1, metadata !10632, metadata !DIExpression()) #25, !dbg !10908
  call void @llvm.dbg.value(metadata i32 %6, metadata !10635, metadata !DIExpression()) #25, !dbg !10908
  call void @llvm.dbg.value(metadata i32 %6, metadata !10640, metadata !DIExpression()) #25, !dbg !10910
  %12 = shl i32 %2, %8, !dbg !10901
  %13 = or i32 %11, %12, !dbg !10901
  store volatile i32 %13, i32* %4, align 4, !dbg !10901
  ret void, !dbg !10912
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !10913 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10915, metadata !DIExpression()), !dbg !10918
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10919
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !10919
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !10919
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !10916, metadata !DIExpression()), !dbg !10918
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !10920
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !10921
  %6 = tail call fastcc zeroext i1 @device_is_ready.102() #26, !dbg !10922
  br i1 %6, label %7, label %11, !dbg !10924

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #26, !dbg !10925
  call void @llvm.dbg.value(metadata i32 %8, metadata !10917, metadata !DIExpression()), !dbg !10918
  %9 = icmp slt i32 %8, 0, !dbg !10926
  %10 = select i1 %9, i32 %8, i32 0, !dbg !10928
  br label %11, !dbg !10928

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !10918
  ret i32 %12, !dbg !10929
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.102() unnamed_addr #1 !dbg !10930 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10934, metadata !DIExpression()), !dbg !10935
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10936, !srcloc !10938
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.103() #26, !dbg !10939
  ret i1 %1, !dbg !10940
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10941 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10945, metadata !DIExpression()), !dbg !10950
  call void @llvm.dbg.value(metadata i8 1, metadata !10946, metadata !DIExpression()), !dbg !10950
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !10947, metadata !DIExpression()), !dbg !10950
  call void @llvm.dbg.value(metadata i32 0, metadata !10948, metadata !DIExpression()), !dbg !10950
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10949, metadata !DIExpression()), !dbg !10950
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10951
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !10951
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !10951
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !10947, metadata !DIExpression()), !dbg !10950
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !10952
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !10955
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #26, !dbg !10956
  call void @llvm.dbg.value(metadata i32 %7, metadata !10948, metadata !DIExpression()), !dbg !10950
  call void @llvm.dbg.value(metadata i32 %7, metadata !10948, metadata !DIExpression()), !dbg !10950
  ret i32 %7, !dbg !10957
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.103() unnamed_addr #1 !dbg !10958 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10960, metadata !DIExpression()), !dbg !10961
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_9) #27, !dbg !10962
  ret i1 %1, !dbg !10963
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !10964 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10968, metadata !DIExpression()), !dbg !10976
  call void @llvm.dbg.value(metadata i32 %1, metadata !10969, metadata !DIExpression()), !dbg !10976
  call void @llvm.dbg.value(metadata i32 %2, metadata !10970, metadata !DIExpression()), !dbg !10976
  call void @llvm.dbg.value(metadata i32 %3, metadata !10971, metadata !DIExpression()), !dbg !10976
  call void @llvm.dbg.value(metadata i32 0, metadata !10972, metadata !DIExpression()), !dbg !10976
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #26, !dbg !10977
  %5 = icmp eq i32 %3, 17, !dbg !10978
  br i1 %5, label %6, label %14, !dbg !10979

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !10980
  call void @llvm.dbg.value(metadata i32 %7, metadata !10973, metadata !DIExpression()), !dbg !10981
  %8 = icmp eq i32 %7, 0, !dbg !10982
  %9 = shl nuw i32 1, %1, !dbg !10984
  br i1 %8, label %12, label %10, !dbg !10985

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !10986
  br label %14, !dbg !10988

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !10989
  br label %14, !dbg !10992

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !10993
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #20 !dbg !10994 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10996, metadata !DIExpression()), !dbg !11000
  call void @llvm.dbg.value(metadata i8* %1, metadata !10997, metadata !DIExpression()), !dbg !11000
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11001
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11001
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11001
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10998, metadata !DIExpression()), !dbg !11000
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11002
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11002
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #26, !dbg !11004
  %9 = icmp eq i32 %8, 0, !dbg !11004
  br i1 %9, label %12, label %10, !dbg !11005

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11006
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #26, !dbg !11008
  br label %12, !dbg !11009

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11010
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #26, !dbg !11012
  %15 = icmp eq i32 %14, 0, !dbg !11012
  br i1 %15, label %19, label %16, !dbg !11013

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11014
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #26, !dbg !11015
  store i8 %18, i8* %1, align 1, !dbg !11016
  br label %19, !dbg !11017

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !11000
  ret i32 %20, !dbg !11018
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !11019 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11021, metadata !DIExpression()), !dbg !11025
  call void @llvm.dbg.value(metadata i8 %1, metadata !11022, metadata !DIExpression()), !dbg !11025
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11026
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11026
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11026
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11023, metadata !DIExpression()), !dbg !11025
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !11027

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11028
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #26, !dbg !11031
  %10 = icmp eq i32 %9, 0, !dbg !11031
  br i1 %10, label %18, label %11, !dbg !11032

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !11033, !srcloc !11040
  call void @llvm.dbg.value(metadata i32 undef, metadata !11036, metadata !DIExpression()) #25, !dbg !11041
  call void @llvm.dbg.value(metadata i32 undef, metadata !11037, metadata !DIExpression()) #25, !dbg !11041
  call void @llvm.dbg.value(metadata i32 undef, metadata !11024, metadata !DIExpression()), !dbg !11025
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11042
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #26, !dbg !11044
  %15 = icmp eq i32 %14, 0, !dbg !11044
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !11033
  br i1 %15, label %17, label %19, !dbg !11045

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !11036, metadata !DIExpression()) #25, !dbg !11041
  call void @llvm.dbg.value(metadata i32 %16, metadata !11024, metadata !DIExpression()), !dbg !11025
  call void @llvm.dbg.value(metadata i32 undef, metadata !11046, metadata !DIExpression()) #25, !dbg !11049
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #25, !dbg !11051, !srcloc !11052
  br label %18, !dbg !11053

18:                                               ; preds = %17, %7
  br label %7, !dbg !11028, !llvm.loop !11054

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !11033
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11056
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #26, !dbg !11057
  call void @llvm.dbg.value(metadata i32 %20, metadata !11046, metadata !DIExpression()) #25, !dbg !11058
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #25, !dbg !11060, !srcloc !11052
  ret void, !dbg !11061
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #20 !dbg !11062 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11064, metadata !DIExpression()), !dbg !11067
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11068
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11068
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11068
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11065, metadata !DIExpression()), !dbg !11067
  call void @llvm.dbg.value(metadata i32 0, metadata !11066, metadata !DIExpression()), !dbg !11067
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11069
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11069
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #26, !dbg !11071
  %8 = icmp ne i32 %7, 0, !dbg !11071
  %9 = zext i1 %8 to i32, !dbg !11072
  call void @llvm.dbg.value(metadata i32 %9, metadata !11066, metadata !DIExpression()), !dbg !11067
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11073
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #26, !dbg !11075
  %12 = icmp eq i32 %11, 0, !dbg !11075
  %13 = or i32 %9, 2, !dbg !11076
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !11076
  call void @llvm.dbg.value(metadata i32 %14, metadata !11066, metadata !DIExpression()), !dbg !11067
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11077
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #26, !dbg !11079
  %17 = icmp eq i32 %16, 0, !dbg !11079
  %18 = or i32 %14, 4, !dbg !11080
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !11080
  call void @llvm.dbg.value(metadata i32 %19, metadata !11066, metadata !DIExpression()), !dbg !11067
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11081
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #26, !dbg !11083
  %22 = icmp eq i32 %21, 0, !dbg !11083
  %23 = or i32 %19, 8, !dbg !11084
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !11084
  call void @llvm.dbg.value(metadata i32 %24, metadata !11066, metadata !DIExpression()), !dbg !11067
  %25 = and i32 %24, 8, !dbg !11085
  %26 = icmp eq i32 %25, 0, !dbg !11085
  br i1 %26, label %29, label %27, !dbg !11087

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11088
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #26, !dbg !11090
  br label %29, !dbg !11091

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !11092
  %31 = icmp eq i32 %30, 0, !dbg !11092
  br i1 %31, label %34, label %32, !dbg !11094

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11095
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #26, !dbg !11097
  br label %34, !dbg !11098

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !11099
  %36 = icmp eq i32 %35, 0, !dbg !11099
  br i1 %36, label %39, label %37, !dbg !11101

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11102
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #26, !dbg !11104
  br label %39, !dbg !11105

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !11106
  %41 = icmp eq i32 %40, 0, !dbg !11106
  br i1 %41, label %44, label %42, !dbg !11108

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11109
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #26, !dbg !11111
  br label %44, !dbg !11112

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11113
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #26, !dbg !11114
  ret i32 %24, !dbg !11115
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !11116 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11118, metadata !DIExpression()), !dbg !11127
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !11119, metadata !DIExpression()), !dbg !11127
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11128
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11128
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11128
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11120, metadata !DIExpression()), !dbg !11127
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11129
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !11129
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !11129
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !11121, metadata !DIExpression()), !dbg !11127
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !11130
  %10 = load i8, i8* %9, align 4, !dbg !11130
  %11 = zext i8 %10 to i32, !dbg !11131
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #26, !dbg !11132
  call void @llvm.dbg.value(metadata i32 %12, metadata !11123, metadata !DIExpression()), !dbg !11127
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !11133
  %14 = load i8, i8* %13, align 1, !dbg !11133
  %15 = zext i8 %14 to i32, !dbg !11134
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #26, !dbg !11135
  call void @llvm.dbg.value(metadata i32 %16, metadata !11124, metadata !DIExpression()), !dbg !11127
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !11136
  %18 = load i8, i8* %17, align 2, !dbg !11136
  %19 = zext i8 %18 to i32, !dbg !11137
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #26, !dbg !11138
  call void @llvm.dbg.value(metadata i32 %20, metadata !11125, metadata !DIExpression()), !dbg !11127
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !11139
  %22 = load i8, i8* %21, align 1, !dbg !11139
  %23 = zext i8 %22 to i32, !dbg !11140
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #26, !dbg !11141
  call void @llvm.dbg.value(metadata i32 %24, metadata !11126, metadata !DIExpression()), !dbg !11127
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !11142

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !11144
  br i1 %26, label %69, label %27, !dbg !11146

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !11147

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !11148
  br i1 %29, label %65, label %30, !dbg !11148

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !11150
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !11127
  br i1 %31, label %38, label %34, !dbg !11152

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !11153
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
    i32 1073812480, label %36
  ], !dbg !11153

36:                                               ; preds = %34, %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !11156
  br i1 %37, label %38, label %69, !dbg !11157

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11158
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #26, !dbg !11159
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #26, !dbg !11160
  %41 = icmp eq i32 %12, %40, !dbg !11162
  br i1 %41, label %43, label %42, !dbg !11163

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #26, !dbg !11164
  br label %43, !dbg !11166

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #26, !dbg !11167
  %45 = icmp eq i32 %16, %44, !dbg !11169
  br i1 %45, label %47, label %46, !dbg !11170

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #26, !dbg !11171
  br label %47, !dbg !11173

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #26, !dbg !11174
  %49 = icmp eq i32 %20, %48, !dbg !11176
  br i1 %49, label %51, label %50, !dbg !11177

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #26, !dbg !11178
  br label %51, !dbg !11180

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #26, !dbg !11181
  %53 = icmp eq i32 %24, %52, !dbg !11183
  br i1 %53, label %55, label %54, !dbg !11184

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #26, !dbg !11185
  br label %55, !dbg !11187

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !11188
  %57 = load i32, i32* %56, align 4, !dbg !11188
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !11190
  %59 = load i32, i32* %58, align 4, !dbg !11190
  %60 = icmp eq i32 %57, %59, !dbg !11191
  br i1 %60, label %63, label %61, !dbg !11192

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #26, !dbg !11193
  %62 = load i32, i32* %56, align 4, !dbg !11195
  store i32 %62, i32* %58, align 4, !dbg !11196
  br label %63, !dbg !11197

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !11198
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #26, !dbg !11199
  br label %69, !dbg !11200

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !11148
  %67 = and i8 %66, 1, !dbg !11148
  %68 = icmp eq i8 %67, 0, !dbg !11148
  br i1 %68, label %30, label %69, !dbg !11148

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !11127
  ret i32 %70, !dbg !11201
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #21 !dbg !11202 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11204, metadata !DIExpression()), !dbg !11207
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !11205, metadata !DIExpression()), !dbg !11207
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11208
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !11208
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !11208
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !11206, metadata !DIExpression()), !dbg !11207
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !11209
  %7 = load i32, i32* %6, align 4, !dbg !11209
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !11210
  store i32 %7, i32* %8, align 4, !dbg !11211
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !11212, !range !11213
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #26, !dbg !11214
  %11 = trunc i32 %10 to i8, !dbg !11214
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !11215
  store i8 %11, i8* %12, align 4, !dbg !11216
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #26, !dbg !11217, !range !11218
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #26, !dbg !11219
  %15 = trunc i32 %14 to i8, !dbg !11219
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !11220
  store i8 %15, i8* %16, align 1, !dbg !11221
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #26, !dbg !11222
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !11223, !range !11213
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #26, !dbg !11224
  %20 = trunc i32 %19 to i8, !dbg !11224
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !11225
  store i8 %20, i8* %21, align 2, !dbg !11226
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #26, !dbg !11227, !range !11228
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #26, !dbg !11229
  %24 = trunc i32 %23 to i8, !dbg !11229
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !11230
  store i8 %24, i8* %25, align 1, !dbg !11231
  ret i32 0, !dbg !11232
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !11233 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11237, metadata !DIExpression()), !dbg !11239
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11240
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11240
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11240
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11238, metadata !DIExpression()), !dbg !11239
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11241
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11241
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #26, !dbg !11242
  ret i32 %7, !dbg !11243
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #5 !dbg !11244 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11248, metadata !DIExpression()), !dbg !11249
  %2 = icmp eq i32 %0, 1024, !dbg !11250
  %3 = select i1 %2, i32 2, i32 0, !dbg !11250
  %4 = icmp eq i32 %0, 1536, !dbg !11250
  %5 = select i1 %4, i32 1, i32 %3, !dbg !11250
  ret i32 %5, !dbg !11251
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !11252 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11254, metadata !DIExpression()), !dbg !11256
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11257
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11257
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11257
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11255, metadata !DIExpression()), !dbg !11256
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11258
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11258
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #26, !dbg !11259
  ret i32 %7, !dbg !11260
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !11261 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11265, metadata !DIExpression()), !dbg !11266
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !11267
  %3 = icmp ult i32 %2, 4, !dbg !11267
  br i1 %3, label %4, label %7, !dbg !11267

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !11267
  %6 = load i32, i32* %5, align 4, !dbg !11267
  br label %7, !dbg !11267

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !11268
  ret i32 %8, !dbg !11270
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !11271 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11273, metadata !DIExpression()), !dbg !11275
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11276
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11276
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11276
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11274, metadata !DIExpression()), !dbg !11275
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11277
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11277
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #26, !dbg !11278
  ret i32 %7, !dbg !11279
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !11280 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11284, metadata !DIExpression()), !dbg !11286
  call void @llvm.dbg.value(metadata i32 %1, metadata !11285, metadata !DIExpression()), !dbg !11286
  %3 = icmp eq i32 %0, 4096, !dbg !11287
  %4 = icmp eq i32 %1, 0, !dbg !11287
  %5 = select i1 %4, i32 4, i32 3, !dbg !11287
  %6 = select i1 %4, i32 3, i32 2, !dbg !11287
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !11287
  ret i32 %7, !dbg !11288
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !11289 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11291, metadata !DIExpression()), !dbg !11293
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11294
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11294
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11294
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11292, metadata !DIExpression()), !dbg !11293
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11295
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11295
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #26, !dbg !11296
  ret i32 %7, !dbg !11297
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #5 !dbg !11298 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11302, metadata !DIExpression()), !dbg !11303
  %2 = icmp eq i32 %0, 768, !dbg !11304
  %3 = zext i1 %2 to i32, !dbg !11303
  ret i32 %3, !dbg !11306
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11307 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11312, metadata !DIExpression()), !dbg !11313
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11314
  %3 = load volatile i32, i32* %2, align 4, !dbg !11314
  %4 = and i32 %3, 768, !dbg !11314
  ret i32 %4, !dbg !11315
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11316 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11318, metadata !DIExpression()), !dbg !11319
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11320
  %3 = load volatile i32, i32* %2, align 4, !dbg !11320
  %4 = and i32 %3, 4096, !dbg !11320
  ret i32 %4, !dbg !11321
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11322 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11324, metadata !DIExpression()), !dbg !11325
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11326
  %3 = load volatile i32, i32* %2, align 4, !dbg !11326
  %4 = and i32 %3, 12288, !dbg !11326
  ret i32 %4, !dbg !11327
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11328 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11330, metadata !DIExpression()), !dbg !11331
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11332
  %3 = load volatile i32, i32* %2, align 4, !dbg !11332
  %4 = and i32 %3, 1536, !dbg !11332
  ret i32 %4, !dbg !11333
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #5 !dbg !11334 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11338, metadata !DIExpression()), !dbg !11339
  %2 = icmp eq i32 %0, 2, !dbg !11340
  %3 = select i1 %2, i32 1024, i32 0, !dbg !11340
  %4 = icmp eq i32 %0, 1, !dbg !11340
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !11340
  ret i32 %5, !dbg !11341
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #5 !dbg !11342 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11346, metadata !DIExpression()), !dbg !11347
  %2 = icmp ult i32 %0, 3, !dbg !11348
  br i1 %2, label %3, label %6, !dbg !11348

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !11348
  %5 = load i32, i32* %4, align 4, !dbg !11348
  br label %6, !dbg !11348

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !11349
  ret i32 %7, !dbg !11351
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !11352 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11356, metadata !DIExpression()), !dbg !11358
  call void @llvm.dbg.value(metadata i32 %1, metadata !11357, metadata !DIExpression()), !dbg !11358
  %3 = icmp eq i32 %0, 4, !dbg !11359
  %4 = icmp eq i32 %1, 0, !dbg !11359
  %5 = select i1 %4, i32 0, i32 4096, !dbg !11359
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !11359
  ret i32 %6, !dbg !11360
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #5 !dbg !11361 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11365, metadata !DIExpression()), !dbg !11366
  %2 = icmp eq i32 %0, 1, !dbg !11367
  %3 = select i1 %2, i32 768, i32 0, !dbg !11366
  ret i32 %3, !dbg !11369
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11370 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11374, metadata !DIExpression()), !dbg !11375
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11376
  %3 = load volatile i32, i32* %2, align 4, !dbg !11376
  %4 = and i32 %3, -8193, !dbg !11376
  store volatile i32 %4, i32* %2, align 4, !dbg !11376
  ret void, !dbg !11377
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #16 !dbg !11378 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11382, metadata !DIExpression()), !dbg !11385
  call void @llvm.dbg.value(metadata i32 %1, metadata !11383, metadata !DIExpression()), !dbg !11385
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11386
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11386
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11386
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11384, metadata !DIExpression()), !dbg !11385
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11387
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11387
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11388
  ret void, !dbg !11389
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #16 !dbg !11390 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11392, metadata !DIExpression()), !dbg !11395
  call void @llvm.dbg.value(metadata i32 %1, metadata !11393, metadata !DIExpression()), !dbg !11395
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11396
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11396
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11396
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11394, metadata !DIExpression()), !dbg !11395
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11397
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11397
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11398
  ret void, !dbg !11399
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #16 !dbg !11400 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11402, metadata !DIExpression()), !dbg !11405
  call void @llvm.dbg.value(metadata i32 %1, metadata !11403, metadata !DIExpression()), !dbg !11405
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11406
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11406
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11406
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11404, metadata !DIExpression()), !dbg !11405
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11407
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11407
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11408
  ret void, !dbg !11409
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #16 !dbg !11410 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11412, metadata !DIExpression()), !dbg !11415
  call void @llvm.dbg.value(metadata i32 %1, metadata !11413, metadata !DIExpression()), !dbg !11415
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11416
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11416
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11416
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11414, metadata !DIExpression()), !dbg !11415
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11417
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11417
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11418
  ret void, !dbg !11419
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !11420 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11422, metadata !DIExpression()), !dbg !11427
  call void @llvm.dbg.value(metadata i32 %1, metadata !11423, metadata !DIExpression()), !dbg !11427
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11428
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !11428
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !11428
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !11424, metadata !DIExpression()), !dbg !11427
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11429
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !11429
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !11429
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !11425, metadata !DIExpression()), !dbg !11427
  %10 = bitcast i32* %3 to i8*, !dbg !11430
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #25, !dbg !11430
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !11431
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !11431
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !11435
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !11435
  %15 = load i8*, i8** %14, align 4, !dbg !11435
  call void @llvm.dbg.value(metadata i32* %3, metadata !11426, metadata !DIExpression(DW_OP_deref)), !dbg !11427
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #26, !dbg !11436
  %17 = icmp slt i32 %16, 0, !dbg !11437
  br i1 %17, label %18, label %21, !dbg !11438

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.108(i32 noundef 1) #26, !dbg !11439
  %20 = zext i8 %19 to i32, !dbg !11439
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.109, i32 0, i32 0), i32 noundef %20) #27, !dbg !11439
  br label %26, !dbg !11445

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !11446
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11446
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #26, !dbg !11447
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11448
  %25 = load i32, i32* %3, align 4, !dbg !11449
  call void @llvm.dbg.value(metadata i32 %25, metadata !11426, metadata !DIExpression()), !dbg !11427
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #26, !dbg !11450
  br label %26, !dbg !11451

26:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #25, !dbg !11451
  ret void, !dbg !11451
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11452 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11454, metadata !DIExpression()), !dbg !11455
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11456
  %3 = load volatile i32, i32* %2, align 4, !dbg !11456
  %4 = or i32 %3, 8192, !dbg !11456
  store volatile i32 %4, i32* %2, align 4, !dbg !11456
  ret void, !dbg !11457
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !11458 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11460, metadata !DIExpression()), !dbg !11464
  call void @llvm.dbg.value(metadata i8* %1, metadata !11461, metadata !DIExpression()), !dbg !11464
  call void @llvm.dbg.value(metadata i32* %2, metadata !11462, metadata !DIExpression()), !dbg !11464
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11465
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !11465
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !11465
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !11463, metadata !DIExpression()), !dbg !11464
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !11466
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !11466
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !11468
  br i1 %9, label %12, label %10, !dbg !11469

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #27, !dbg !11470
  br label %12, !dbg !11471

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !11464
  ret i32 %13, !dbg !11472
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.108(i32 noundef %0) unnamed_addr #5 !dbg !11473 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11475, metadata !DIExpression()), !dbg !11476
  %2 = icmp eq i32 %0, 2, !dbg !11477
  %3 = select i1 %2, i8 87, i8 63, !dbg !11477
  %4 = icmp eq i32 %0, 1, !dbg !11477
  %5 = select i1 %4, i8 69, i8 %3, !dbg !11477
  ret i8 %5, !dbg !11478
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11479 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11483, metadata !DIExpression()), !dbg !11485
  call void @llvm.dbg.value(metadata i32 0, metadata !11484, metadata !DIExpression()), !dbg !11485
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11486
  %3 = load volatile i32, i32* %2, align 4, !dbg !11486
  %4 = and i32 %3, -32769, !dbg !11486
  store volatile i32 %4, i32* %2, align 4, !dbg !11486
  ret void, !dbg !11487
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #16 !dbg !11488 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11492, metadata !DIExpression()), !dbg !11496
  call void @llvm.dbg.value(metadata i32 %1, metadata !11493, metadata !DIExpression()), !dbg !11496
  call void @llvm.dbg.value(metadata i32 0, metadata !11494, metadata !DIExpression()), !dbg !11496
  call void @llvm.dbg.value(metadata i32 %2, metadata !11495, metadata !DIExpression()), !dbg !11496
  %4 = zext i32 %1 to i64, !dbg !11497
  %5 = mul nuw nsw i64 %4, 25, !dbg !11497
  %6 = zext i32 %2 to i64, !dbg !11497
  %7 = shl nuw nsw i64 %6, 2, !dbg !11497
  %8 = udiv i64 %5, %7, !dbg !11497
  %9 = trunc i64 %8 to i32, !dbg !11497
  %10 = udiv i32 %9, 100, !dbg !11497
  %11 = shl nuw nsw i32 %10, 4, !dbg !11497
  %12 = mul i32 %10, -100, !dbg !11497
  %13 = add i32 %12, %9, !dbg !11497
  %14 = shl i32 %13, 4, !dbg !11497
  %15 = add i32 %14, 50, !dbg !11497
  %16 = udiv i32 %15, 100, !dbg !11497
  %17 = and i32 %16, 240, !dbg !11497
  %18 = add nuw nsw i32 %17, %11, !dbg !11497
  %19 = and i32 %16, 15, !dbg !11497
  %20 = and i32 %18, 65520, !dbg !11500
  %21 = or i32 %20, %19, !dbg !11500
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !11501
  store volatile i32 %21, i32* %22, align 4, !dbg !11502
  ret void, !dbg !11503
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !11504 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11506, metadata !DIExpression()), !dbg !11508
  call void @llvm.dbg.value(metadata i32 %1, metadata !11507, metadata !DIExpression()), !dbg !11508
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11509
  %4 = load volatile i32, i32* %3, align 4, !dbg !11509
  %5 = and i32 %4, -769, !dbg !11509
  %6 = or i32 %5, %1, !dbg !11509
  store volatile i32 %6, i32* %3, align 4, !dbg !11509
  ret void, !dbg !11510
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !11511 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11513, metadata !DIExpression()), !dbg !11515
  call void @llvm.dbg.value(metadata i32 %1, metadata !11514, metadata !DIExpression()), !dbg !11515
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11516
  %4 = load volatile i32, i32* %3, align 4, !dbg !11516
  %5 = and i32 %4, -4097, !dbg !11516
  %6 = or i32 %5, %1, !dbg !11516
  store volatile i32 %6, i32* %3, align 4, !dbg !11516
  ret void, !dbg !11517
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !11518 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11520, metadata !DIExpression()), !dbg !11522
  call void @llvm.dbg.value(metadata i32 %1, metadata !11521, metadata !DIExpression()), !dbg !11522
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11523
  %4 = load volatile i32, i32* %3, align 4, !dbg !11523
  %5 = and i32 %4, -12289, !dbg !11523
  %6 = or i32 %5, %1, !dbg !11523
  store volatile i32 %6, i32* %3, align 4, !dbg !11523
  ret void, !dbg !11524
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !11525 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11527, metadata !DIExpression()), !dbg !11529
  call void @llvm.dbg.value(metadata i32 %1, metadata !11528, metadata !DIExpression()), !dbg !11529
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11530
  %4 = load volatile i32, i32* %3, align 4, !dbg !11530
  %5 = and i32 %4, -1537, !dbg !11530
  %6 = or i32 %5, %1, !dbg !11530
  store volatile i32 %6, i32* %3, align 4, !dbg !11530
  ret void, !dbg !11531
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11532 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11534, metadata !DIExpression()), !dbg !11535
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11536
  %3 = load volatile i32, i32* %2, align 4, !dbg !11536
  %4 = lshr i32 %3, 3, !dbg !11537
  %5 = and i32 %4, 1, !dbg !11537
  ret i32 %5, !dbg !11538
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11539 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11541, metadata !DIExpression()), !dbg !11542
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11543
  %3 = load volatile i32, i32* %2, align 4, !dbg !11543
  %4 = and i32 %3, 1, !dbg !11543
  ret i32 %4, !dbg !11544
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11545 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11547, metadata !DIExpression()), !dbg !11548
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11549
  %3 = load volatile i32, i32* %2, align 4, !dbg !11549
  %4 = lshr i32 %3, 1, !dbg !11550
  %5 = and i32 %4, 1, !dbg !11550
  ret i32 %5, !dbg !11551
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11552 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11554, metadata !DIExpression()), !dbg !11555
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11556
  %3 = load volatile i32, i32* %2, align 4, !dbg !11556
  %4 = lshr i32 %3, 8, !dbg !11557
  %5 = and i32 %4, 1, !dbg !11557
  ret i32 %5, !dbg !11558
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11559 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11561, metadata !DIExpression()), !dbg !11562
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11563
  store volatile i32 -257, i32* %2, align 4, !dbg !11563
  ret void, !dbg !11564
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #20 !dbg !11565 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11567, metadata !DIExpression()), !dbg !11569
  %3 = bitcast i32* %2 to i8*, !dbg !11570
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11570
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11568, metadata !DIExpression()), !dbg !11571
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11572
  %5 = load volatile i32, i32* %4, align 4, !dbg !11572
  store volatile i32 %5, i32* %2, align 4, !dbg !11573
  %6 = load volatile i32, i32* %2, align 4, !dbg !11574
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11575
  %8 = load volatile i32, i32* %7, align 4, !dbg !11575
  store volatile i32 %8, i32* %2, align 4, !dbg !11576
  %9 = load volatile i32, i32* %2, align 4, !dbg !11577
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11578
  ret void, !dbg !11578
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #20 !dbg !11579 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11581, metadata !DIExpression()), !dbg !11583
  %3 = bitcast i32* %2 to i8*, !dbg !11584
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11584
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11582, metadata !DIExpression()), !dbg !11585
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11586
  %5 = load volatile i32, i32* %4, align 4, !dbg !11586
  store volatile i32 %5, i32* %2, align 4, !dbg !11587
  %6 = load volatile i32, i32* %2, align 4, !dbg !11588
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11589
  %8 = load volatile i32, i32* %7, align 4, !dbg !11589
  store volatile i32 %8, i32* %2, align 4, !dbg !11590
  %9 = load volatile i32, i32* %2, align 4, !dbg !11591
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11592
  ret void, !dbg !11592
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #20 !dbg !11593 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11595, metadata !DIExpression()), !dbg !11597
  %3 = bitcast i32* %2 to i8*, !dbg !11598
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11598
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11596, metadata !DIExpression()), !dbg !11599
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11600
  %5 = load volatile i32, i32* %4, align 4, !dbg !11600
  store volatile i32 %5, i32* %2, align 4, !dbg !11601
  %6 = load volatile i32, i32* %2, align 4, !dbg !11602
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11603
  %8 = load volatile i32, i32* %7, align 4, !dbg !11603
  store volatile i32 %8, i32* %2, align 4, !dbg !11604
  %9 = load volatile i32, i32* %2, align 4, !dbg !11605
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11606
  ret void, !dbg !11606
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #20 !dbg !11607 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11609, metadata !DIExpression()), !dbg !11611
  %3 = bitcast i32* %2 to i8*, !dbg !11612
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11612
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11610, metadata !DIExpression()), !dbg !11613
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11614
  %5 = load volatile i32, i32* %4, align 4, !dbg !11614
  store volatile i32 %5, i32* %2, align 4, !dbg !11615
  %6 = load volatile i32, i32* %2, align 4, !dbg !11616
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11617
  %8 = load volatile i32, i32* %7, align 4, !dbg !11617
  store volatile i32 %8, i32* %2, align 4, !dbg !11618
  %9 = load volatile i32, i32* %2, align 4, !dbg !11619
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11620
  ret void, !dbg !11620
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11621 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11623, metadata !DIExpression()), !dbg !11624
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11625
  %3 = load volatile i32, i32* %2, align 4, !dbg !11625
  %4 = lshr i32 %3, 7, !dbg !11626
  %5 = and i32 %4, 1, !dbg !11626
  ret i32 %5, !dbg !11627
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #16 !dbg !11628 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11632, metadata !DIExpression()), !dbg !11634
  call void @llvm.dbg.value(metadata i8 %1, metadata !11633, metadata !DIExpression()), !dbg !11634
  %3 = zext i8 %1 to i32, !dbg !11635
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11636
  store volatile i32 %3, i32* %4, align 4, !dbg !11637
  ret void, !dbg !11638
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11639 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11641, metadata !DIExpression()), !dbg !11642
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11643
  %3 = load volatile i32, i32* %2, align 4, !dbg !11643
  %4 = lshr i32 %3, 5, !dbg !11644
  %5 = and i32 %4, 1, !dbg !11644
  ret i32 %5, !dbg !11645
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11646 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11650, metadata !DIExpression()), !dbg !11651
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11652
  %3 = load volatile i32, i32* %2, align 4, !dbg !11652
  %4 = trunc i32 %3 to i8, !dbg !11653
  ret i8 %4, !dbg !11654
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !11655 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11657, metadata !DIExpression()), !dbg !11663
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11664
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11664
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11664
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11658, metadata !DIExpression()), !dbg !11663
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11665
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !11665
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !11665
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !11659, metadata !DIExpression()), !dbg !11663
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #26, !dbg !11666
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !11667
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !11667
  %10 = tail call fastcc zeroext i1 @device_is_ready.111(%struct.device* noundef %9) #26, !dbg !11669
  br i1 %10, label %14, label %11, !dbg !11670

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.108(i32 noundef 1) #26, !dbg !11671
  %13 = zext i8 %12 to i32, !dbg !11671
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.3.112, i32 0, i32 0), i32 noundef %13) #27, !dbg !11671
  br label %62, !dbg !11677

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !11678
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !11679
  %17 = bitcast %struct._thread_arch** %16 to i8**, !dbg !11679
  %18 = load i8*, i8** %17, align 4, !dbg !11679
  %19 = tail call fastcc i32 @clock_control_on.113(%struct.device* noundef %15, i8* noundef %18) #26, !dbg !11680
  call void @llvm.dbg.value(metadata i32 %19, metadata !11662, metadata !DIExpression()), !dbg !11663
  %20 = icmp eq i32 %19, 0, !dbg !11681
  br i1 %20, label %24, label %21, !dbg !11683

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.108(i32 noundef 1) #26, !dbg !11684
  %23 = zext i8 %22 to i32, !dbg !11684
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.4.114, i32 0, i32 0), i32 noundef %23) #27, !dbg !11684
  br label %62, !dbg !11690

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !11691
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !11691
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #26, !dbg !11692
  call void @llvm.dbg.value(metadata i32 %27, metadata !11662, metadata !DIExpression()), !dbg !11663
  %28 = icmp slt i32 %27, 0, !dbg !11693
  br i1 %28, label %62, label %29, !dbg !11695

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11696
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11696
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #26, !dbg !11697
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11698
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #26, !dbg !11699
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !11700
  %34 = load i32, i32* %33, align 4, !dbg !11700
  %35 = icmp ult i32 %34, 3, !dbg !11702
  br i1 %35, label %39, label %36, !dbg !11702

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.108(i32 noundef 2) #26, !dbg !11703
  %38 = zext i8 %37 to i32, !dbg !11703
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5.115, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #27, !dbg !11703
  call void @llvm.dbg.value(metadata i32 0, metadata !11660, metadata !DIExpression()), !dbg !11663
  call void @llvm.dbg.value(metadata i32 0, metadata !11661, metadata !DIExpression()), !dbg !11663
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !11702
  %41 = load i32, i32* %40, align 4, !dbg !11702
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.6, i32 0, i32 %34, !dbg !11702
  %43 = load i32, i32* %42, align 4, !dbg !11702
  br label %44, !dbg !11702

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !11712
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !11712
  call void @llvm.dbg.value(metadata i32 %46, metadata !11661, metadata !DIExpression()), !dbg !11663
  call void @llvm.dbg.value(metadata i32 %45, metadata !11660, metadata !DIExpression()), !dbg !11663
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11713
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #26, !dbg !11714
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !11715
  %49 = load i8, i8* %48, align 4, !dbg !11715, !range !7657
  %50 = icmp eq i8 %49, 0, !dbg !11715
  br i1 %50, label %52, label %51, !dbg !11717

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #26, !dbg !11718
  br label %52, !dbg !11720

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !11721
  %54 = load i32, i32* %53, align 4, !dbg !11721
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #26, !dbg !11722
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !11723
  %56 = load i8, i8* %55, align 4, !dbg !11723, !range !7657
  %57 = icmp eq i8 %56, 0, !dbg !11723
  br i1 %57, label %60, label %58, !dbg !11725

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11726
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #26, !dbg !11728
  br label %60, !dbg !11729

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11730
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #26, !dbg !11731
  br label %62, !dbg !11732

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !11663
  ret i32 %63, !dbg !11733
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #9 !dbg !11734 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11738, metadata !DIExpression()), !dbg !11742
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11743
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !11743
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !11743
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !11739, metadata !DIExpression()), !dbg !11742
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !11740, metadata !DIExpression()), !dbg !11742
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !11744
  store %struct.device* @__device_dts_ord_9, %struct.device** %5, align 4, !dbg !11745
  ret void, !dbg !11746
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.111(%struct.device* noundef %0) unnamed_addr #1 !dbg !11747 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11751, metadata !DIExpression()), !dbg !11752
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !11753, !srcloc !11755
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.116(%struct.device* noundef %0) #26, !dbg !11756
  ret i1 %2, !dbg !11757
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.113(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !11758 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11760, metadata !DIExpression()), !dbg !11763
  call void @llvm.dbg.value(metadata i8* %1, metadata !11761, metadata !DIExpression()), !dbg !11763
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11764
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !11764
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !11764
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !11762, metadata !DIExpression()), !dbg !11763
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !11765
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !11765
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #27, !dbg !11766
  ret i32 %8, !dbg !11767
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !11768 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11772, metadata !DIExpression()), !dbg !11776
  call void @llvm.dbg.value(metadata i8 0, metadata !11773, metadata !DIExpression()), !dbg !11776
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !11777
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !11777
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11775, metadata !DIExpression(DW_OP_deref)), !dbg !11776
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #27, !dbg !11778
  call void @llvm.dbg.value(metadata i32 %4, metadata !11774, metadata !DIExpression()), !dbg !11776
  %5 = icmp slt i32 %4, 0, !dbg !11779
  br i1 %5, label %9, label %6, !dbg !11781

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !11782
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !11775, metadata !DIExpression()), !dbg !11776
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #26, !dbg !11783
  br label %9, !dbg !11784

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !11776
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !11785
  ret i32 %10, !dbg !11785
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11786 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11788, metadata !DIExpression()), !dbg !11792
  call void @llvm.dbg.value(metadata i32 12, metadata !11789, metadata !DIExpression()), !dbg !11792
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11793

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !11794, metadata !DIExpression()) #25, !dbg !11800
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !11803, !srcloc !11804
  call void @llvm.dbg.value(metadata i32 %4, metadata !11799, metadata !DIExpression()) #25, !dbg !11800
  %5 = or i32 %4, 12, !dbg !11805
  call void @llvm.dbg.value(metadata i32 %5, metadata !11790, metadata !DIExpression()), !dbg !11806
  call void @llvm.dbg.value(metadata i32 %5, metadata !11807, metadata !DIExpression()) #25, !dbg !11814
  call void @llvm.dbg.value(metadata i32* %2, metadata !11812, metadata !DIExpression()) #25, !dbg !11814
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !11816, !srcloc !11817
  call void @llvm.dbg.value(metadata i32 %6, metadata !11813, metadata !DIExpression()) #25, !dbg !11814
  %7 = icmp eq i32 %6, 0, !dbg !11793
  br i1 %7, label %8, label %3, !dbg !11805, !llvm.loop !11818

8:                                                ; preds = %3
  ret void, !dbg !11819
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #16 !dbg !11820 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11822, metadata !DIExpression()), !dbg !11826
  call void @llvm.dbg.value(metadata i32 %1, metadata !11823, metadata !DIExpression()), !dbg !11826
  call void @llvm.dbg.value(metadata i32 %2, metadata !11824, metadata !DIExpression()), !dbg !11826
  call void @llvm.dbg.value(metadata i32 0, metadata !11825, metadata !DIExpression()), !dbg !11826
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11827
  %5 = load volatile i32, i32* %4, align 4, !dbg !11827
  %6 = and i32 %5, -5633, !dbg !11827
  %7 = or i32 %2, %1, !dbg !11827
  %8 = or i32 %7, %6, !dbg !11827
  store volatile i32 %8, i32* %4, align 4, !dbg !11827
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11828
  %10 = load volatile i32, i32* %9, align 4, !dbg !11828
  %11 = and i32 %10, -12289, !dbg !11828
  store volatile i32 %11, i32* %9, align 4, !dbg !11828
  ret void, !dbg !11829
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11830 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11832, metadata !DIExpression()), !dbg !11833
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11834
  %3 = load volatile i32, i32* %2, align 4, !dbg !11834
  %4 = or i32 %3, 8, !dbg !11834
  store volatile i32 %4, i32* %2, align 4, !dbg !11834
  ret void, !dbg !11835
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !11836 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !11840, metadata !DIExpression()), !dbg !11843
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !11841, metadata !DIExpression()), !dbg !11843
  call void @llvm.dbg.value(metadata i32 0, metadata !11842, metadata !DIExpression()), !dbg !11843
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !11844
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !11844
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !11845
  %5 = load i8, i8* %4, align 4, !dbg !11845
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #27, !dbg !11846
  ret i32 %6, !dbg !11847
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.116(%struct.device* noundef %0) unnamed_addr #1 !dbg !11848 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11850, metadata !DIExpression()), !dbg !11851
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !11852
  ret i1 %2, !dbg !11853
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #16 !dbg !11854 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11856, metadata !DIExpression()), !dbg !11857
  tail call fastcc void @__NVIC_SetPriority.118() #26, !dbg !11858
  store i32 16799, i32* @last_load, align 4, !dbg !11859
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11860
  store volatile i32 16799, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11861
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11862
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11863
  %3 = or i32 %2, 7, !dbg !11863
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11863
  ret i32 0, !dbg !11864
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.118() unnamed_addr #16 !dbg !11865 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !11867, metadata !DIExpression()), !dbg !11869
  call void @llvm.dbg.value(metadata i32 1, metadata !11868, metadata !DIExpression()), !dbg !11869
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !11870
  ret void, !dbg !11873
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !11874 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11876, metadata !DIExpression()), !dbg !11878
  %2 = tail call fastcc i32 @elapsed() #26, !dbg !11879
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11880
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11881
  %5 = add i32 %4, %3, !dbg !11881
  store i32 %5, i32* @cycle_count, align 4, !dbg !11881
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11882
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !11883
  %7 = sub i32 %5, %6, !dbg !11886
  %8 = udiv i32 %7, 16800, !dbg !11887
  call void @llvm.dbg.value(metadata i32 %8, metadata !11877, metadata !DIExpression()), !dbg !11878
  %9 = mul nuw i32 %8, 16800, !dbg !11888
  %10 = add i32 %9, %6, !dbg !11889
  store i32 %10, i32* @announced_cycles, align 4, !dbg !11889
  tail call void @sys_clock_announce(i32 noundef %8) #27, !dbg !11890
  tail call void @z_arm_int_exit() #27, !dbg !11891
  ret void, !dbg !11892
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #16 !dbg !11893 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11898
  call void @llvm.dbg.value(metadata i32 %1, metadata !11895, metadata !DIExpression()), !dbg !11899
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11900
  call void @llvm.dbg.value(metadata i32 %2, metadata !11896, metadata !DIExpression()), !dbg !11899
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11901
  call void @llvm.dbg.value(metadata i32 %3, metadata !11897, metadata !DIExpression()), !dbg !11899
  %4 = and i32 %2, 65536, !dbg !11902
  %5 = icmp ne i32 %4, 0, !dbg !11902
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !11904
  %8 = load i32, i32* @last_load, align 4, !dbg !11899
  br i1 %7, label %9, label %13, !dbg !11904

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11905
  %11 = add i32 %10, %8, !dbg !11905
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !11905
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11907
  br label %13, !dbg !11908

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !11909
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11910
  %16 = add i32 %14, %15, !dbg !11911
  ret i32 %16, !dbg !11912
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !11913 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11917, metadata !DIExpression()), !dbg !11930
  call void @llvm.dbg.value(metadata i1 %1, metadata !11918, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11930
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !11931
  br i1 %4, label %5, label %8, !dbg !11931

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11933
  %7 = and i32 %6, -2, !dbg !11933
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11933
  store i32 -16777216, i32* @last_load, align 4, !dbg !11935
  br label %54, !dbg !11936

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !11937
  call void @llvm.dbg.value(metadata i32 %9, metadata !11922, metadata !DIExpression()), !dbg !11930
  br i1 %3, label %18, label %10, !dbg !11938

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !11938
  call void @llvm.dbg.value(metadata i32 undef, metadata !11917, metadata !DIExpression()), !dbg !11930
  %12 = icmp slt i32 %11, 1, !dbg !11939
  br i1 %12, label %18, label %13, !dbg !11939

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 997, !dbg !11939
  %15 = select i1 %14, i32 %11, i32 997, !dbg !11939
  %16 = mul nuw nsw i32 %15, 16800, !dbg !11939
  %17 = add nuw nsw i32 %16, 16799, !dbg !11939
  br label %18, !dbg !11939

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 16799, %10 ], [ 16749599, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !11917, metadata !DIExpression()), !dbg !11930
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11940, metadata !DIExpression()) #25, !dbg !11947
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !11949, !srcloc !11955
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !11949
  call void @llvm.dbg.value(metadata i32 %21, metadata !11952, metadata !DIExpression()) #25, !dbg !11956
  call void @llvm.dbg.value(metadata i32 undef, metadata !11953, metadata !DIExpression()) #25, !dbg !11956
  call void @llvm.dbg.value(metadata i32 %21, metadata !11946, metadata !DIExpression()) #25, !dbg !11947
  call void @llvm.dbg.value(metadata i32 %21, metadata !11923, metadata !DIExpression()), !dbg !11930
  %22 = tail call fastcc i32 @elapsed() #26, !dbg !11957
  call void @llvm.dbg.value(metadata i32 %22, metadata !11928, metadata !DIExpression()), !dbg !11930
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11958
  call void @llvm.dbg.value(metadata i32 %23, metadata !11920, metadata !DIExpression()), !dbg !11930
  %24 = load i32, i32* @cycle_count, align 4, !dbg !11959
  %25 = add i32 %24, %22, !dbg !11959
  store i32 %25, i32* @cycle_count, align 4, !dbg !11959
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11960
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !11961
  %27 = sub i32 %25, %26, !dbg !11962
  call void @llvm.dbg.value(metadata i32 %27, metadata !11929, metadata !DIExpression()), !dbg !11930
  %28 = icmp slt i32 %27, 0, !dbg !11963
  br i1 %28, label %38, label %29, !dbg !11965

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !11919, metadata !DIExpression()), !dbg !11930
  call void @llvm.dbg.value(metadata i32 undef, metadata !11919, metadata !DIExpression()), !dbg !11930
  %30 = add nuw i32 %19, %27, !dbg !11966
  %31 = urem i32 %30, 16800, !dbg !11968
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !11919, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11930
  %32 = sub nuw nsw i32 %19, %31, !dbg !11969
  call void @llvm.dbg.value(metadata i32 %32, metadata !11919, metadata !DIExpression()), !dbg !11930
  %33 = icmp ugt i32 %32, 1050, !dbg !11970
  br i1 %33, label %34, label %36, !dbg !11970

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !11919, metadata !DIExpression()), !dbg !11930
  %35 = icmp ugt i32 %32, 16749600, !dbg !11971
  br i1 %35, label %38, label %36, !dbg !11973

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1050, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1050, %18 ], [ 16749600, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !11974
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11975
  call void @llvm.dbg.value(metadata i32 %40, metadata !11921, metadata !DIExpression()), !dbg !11930
  %41 = add nsw i32 %39, -1, !dbg !11976
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11977
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11978
  %42 = icmp ult i32 %23, %40, !dbg !11979
  br i1 %42, label %43, label %48, !dbg !11981

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !11982
  %45 = add i32 %23, %9, !dbg !11984
  %46 = sub i32 %45, %40, !dbg !11985
  %47 = add i32 %46, %44, !dbg !11982
  br label %52, !dbg !11986

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !11987
  %50 = load i32, i32* @cycle_count, align 4, !dbg !11989
  %51 = add i32 %49, %50, !dbg !11989
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !11990
  store i32 %53, i32* @cycle_count, align 4, !dbg !11990
  call void @llvm.dbg.value(metadata i32 %21, metadata !11991, metadata !DIExpression()) #25, !dbg !11997
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11996, metadata !DIExpression()) #25, !dbg !11997
  call void @llvm.dbg.value(metadata i32 %21, metadata !11999, metadata !DIExpression()) #25, !dbg !12002
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #25, !dbg !12004, !srcloc !12005
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !12006
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !12007 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11940, metadata !DIExpression()) #25, !dbg !12011
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12013, !srcloc !11955
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12013
  call void @llvm.dbg.value(metadata i32 %2, metadata !11952, metadata !DIExpression()) #25, !dbg !12015
  call void @llvm.dbg.value(metadata i32 undef, metadata !11953, metadata !DIExpression()) #25, !dbg !12015
  call void @llvm.dbg.value(metadata i32 %2, metadata !11946, metadata !DIExpression()) #25, !dbg !12011
  call void @llvm.dbg.value(metadata i32 %2, metadata !12009, metadata !DIExpression()), !dbg !12016
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !12017
  %4 = load i32, i32* @cycle_count, align 4, !dbg !12018
  %5 = add i32 %4, %3, !dbg !12019
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !12020
  %7 = sub i32 %5, %6, !dbg !12021
  call void @llvm.dbg.value(metadata i32 %7, metadata !12010, metadata !DIExpression()), !dbg !12016
  call void @llvm.dbg.value(metadata i32 %2, metadata !11991, metadata !DIExpression()) #25, !dbg !12022
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11996, metadata !DIExpression()) #25, !dbg !12022
  call void @llvm.dbg.value(metadata i32 %2, metadata !11999, metadata !DIExpression()) #25, !dbg !12024
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !12026, !srcloc !12005
  %8 = udiv i32 %7, 16800, !dbg !12027
  ret i32 %8, !dbg !12028
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !12029 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11940, metadata !DIExpression()) #25, !dbg !12033
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12035, !srcloc !11955
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12035
  call void @llvm.dbg.value(metadata i32 %2, metadata !11952, metadata !DIExpression()) #25, !dbg !12037
  call void @llvm.dbg.value(metadata i32 undef, metadata !11953, metadata !DIExpression()) #25, !dbg !12037
  call void @llvm.dbg.value(metadata i32 %2, metadata !11946, metadata !DIExpression()) #25, !dbg !12033
  call void @llvm.dbg.value(metadata i32 %2, metadata !12031, metadata !DIExpression()), !dbg !12038
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !12039
  %4 = load i32, i32* @cycle_count, align 4, !dbg !12040
  %5 = add i32 %4, %3, !dbg !12041
  call void @llvm.dbg.value(metadata i32 %5, metadata !12032, metadata !DIExpression()), !dbg !12038
  call void @llvm.dbg.value(metadata i32 %2, metadata !11991, metadata !DIExpression()) #25, !dbg !12042
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11996, metadata !DIExpression()) #25, !dbg !12042
  call void @llvm.dbg.value(metadata i32 %2, metadata !11999, metadata !DIExpression()) #25, !dbg !12044
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !12046, !srcloc !12005
  ret i32 %5, !dbg !12047
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #16 !dbg !12048 {
  %1 = load i32, i32* @last_load, align 4, !dbg !12049
  %2 = icmp eq i32 %1, -16777216, !dbg !12051
  br i1 %2, label %3, label %6, !dbg !12052

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12053
  %5 = or i32 %4, 1, !dbg !12053
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12053
  br label %6, !dbg !12055

6:                                                ; preds = %3, %0
  ret void, !dbg !12056
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #16 !dbg !12057 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12058
  %2 = and i32 %1, -2, !dbg !12058
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12058
  ret void, !dbg !12059
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #15 !dbg !12060 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !12086, metadata !DIExpression()), !dbg !12089
  call void @llvm.dbg.value(metadata i8 %1, metadata !12087, metadata !DIExpression()), !dbg !12089
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !12088, metadata !DIExpression()), !dbg !12089
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !12090
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12090
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !12089
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12091
  %8 = load i8, i8* %6, align 4, !dbg !12092
  %9 = zext i8 %8 to i32, !dbg !12093
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !12093
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !12094
  br i1 %11, label %18, label %24, !dbg !12095

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !12089
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12091
  %14 = load i8, i8* %6, align 4, !dbg !12092
  %15 = zext i8 %14 to i32, !dbg !12093
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !12093
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !12094
  br i1 %17, label %18, label %24, !dbg !12095, !llvm.loop !12096

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !12098
  %21 = load i8, i8* %20, align 1, !dbg !12098
  %22 = icmp eq i8 %21, %1, !dbg !12101
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !12102
  br i1 %22, label %24, label %12, !dbg !12103

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !12089
  ret i32 %25, !dbg !12104
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12105 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !12116, metadata !DIExpression()), !dbg !12132
  call void @llvm.dbg.value(metadata i8 %1, metadata !12117, metadata !DIExpression()), !dbg !12132
  call void @llvm.dbg.value(metadata i32 %2, metadata !12118, metadata !DIExpression()), !dbg !12132
  call void @llvm.dbg.value(metadata i32 0, metadata !12121, metadata !DIExpression()), !dbg !12132
  call void @llvm.dbg.value(metadata i32 0, metadata !12122, metadata !DIExpression()), !dbg !12132
  call void @llvm.dbg.value(metadata i8 0, metadata !12123, metadata !DIExpression()), !dbg !12133
  %4 = icmp eq i8 %1, 0, !dbg !12134
  br i1 %4, label %35, label %5, !dbg !12135

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !12134
  br label %9, !dbg !12135

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !12123, metadata !DIExpression()), !dbg !12133
  call void @llvm.dbg.value(metadata i32 %29, metadata !12121, metadata !DIExpression()), !dbg !12132
  %8 = icmp eq i32 %34, %6, !dbg !12134
  br i1 %8, label %35, label %9, !dbg !12135, !llvm.loop !12136

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12123, metadata !DIExpression()), !dbg !12133
  call void @llvm.dbg.value(metadata i32 %11, metadata !12121, metadata !DIExpression()), !dbg !12132
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !12138
  %13 = load i32, i32* %12, align 4, !dbg !12138
  call void @llvm.dbg.value(metadata i32 %13, metadata !12120, metadata !DIExpression()), !dbg !12132
  %14 = and i32 %13, 31, !dbg !12139
  %15 = icmp ult i32 %14, 16, !dbg !12140
  br i1 %15, label %16, label %20, !dbg !12141

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !12142
  %18 = load i32, i32* %17, align 4, !dbg !12142
  %19 = or i32 %18, 32, !dbg !12144
  call void @llvm.dbg.value(metadata i32 %19, metadata !12121, metadata !DIExpression()), !dbg !12132
  br label %28, !dbg !12145

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !12146

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !12147
  %23 = load i32, i32* %22, align 4, !dbg !12147
  call void @llvm.dbg.value(metadata i32 %23, metadata !12125, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !12148
  %24 = lshr i32 %23, 7, !dbg !12149
  %25 = and i32 %24, 16, !dbg !12149
  %26 = or i32 %25, %23, !dbg !12149
  call void @llvm.dbg.value(metadata i32 %26, metadata !12121, metadata !DIExpression()), !dbg !12132
  br label %28, !dbg !12150

27:                                               ; preds = %20
  br label %28, !dbg !12151

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !12132
  call void @llvm.dbg.value(metadata i32 %29, metadata !12121, metadata !DIExpression()), !dbg !12132
  %30 = lshr i32 %13, 5, !dbg !12151
  %31 = and i32 %30, 255, !dbg !12151
  call void @llvm.dbg.value(metadata i32 %31, metadata !12119, metadata !DIExpression()), !dbg !12132
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #26, !dbg !12152
  call void @llvm.dbg.value(metadata i32 %32, metadata !12122, metadata !DIExpression()), !dbg !12132
  %33 = icmp slt i32 %32, 0, !dbg !12153
  %34 = add nuw nsw i32 %10, 1, !dbg !12155
  call void @llvm.dbg.value(metadata i32 %34, metadata !12123, metadata !DIExpression()), !dbg !12133
  br i1 %33, label %35, label %7, !dbg !12156

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !12157
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !12158 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12162, metadata !DIExpression()), !dbg !12166
  call void @llvm.dbg.value(metadata i32 %1, metadata !12163, metadata !DIExpression()), !dbg !12166
  call void @llvm.dbg.value(metadata i32 %2, metadata !12164, metadata !DIExpression()), !dbg !12166
  %4 = icmp ugt i32 %0, 175, !dbg !12167
  br i1 %4, label %16, label %5, !dbg !12169

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !12170
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !12171
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !12171
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12165, metadata !DIExpression()), !dbg !12166
  %9 = add nsw i32 %6, -9, !dbg !12172
  %10 = icmp ult i32 %9, 2, !dbg !12172
  br i1 %10, label %16, label %11, !dbg !12174

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.123(%struct.device* noundef %8) #26, !dbg !12175
  br i1 %12, label %13, label %16, !dbg !12176

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !12177
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #27, !dbg !12178
  br label %16, !dbg !12179

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !12166
  ret i32 %17, !dbg !12180
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.123(%struct.device* noundef %0) unnamed_addr #1 !dbg !12181 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12185, metadata !DIExpression()), !dbg !12186
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12187, !srcloc !12189
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.124(%struct.device* noundef %0) #26, !dbg !12190
  ret i1 %2, !dbg !12191
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.124(%struct.device* noundef %0) unnamed_addr #1 !dbg !12192 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12194, metadata !DIExpression()), !dbg !12195
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !12196
  ret i1 %2, !dbg !12197
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #5 !dbg !12198 {
  ret void, !dbg !12199
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #17 !dbg !12200 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12202, metadata !DIExpression()), !dbg !12207
  call void @llvm.dbg.value(metadata i32 0, metadata !12203, metadata !DIExpression()), !dbg !12207
  call void @llvm.dbg.value(metadata i32 2, metadata !12204, metadata !DIExpression()), !dbg !12207
  call void @llvm.dbg.value(metadata i32 0, metadata !12205, metadata !DIExpression()), !dbg !12207
  call void @llvm.dbg.value(metadata i32 2, metadata !12206, metadata !DIExpression()), !dbg !12207
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12208
  %2 = and i32 %1, 12, !dbg !12209
  call void @llvm.dbg.value(metadata i32 %2, metadata !12202, metadata !DIExpression()), !dbg !12207
  switch i32 %2, label %21 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !12210

3:                                                ; preds = %0
  br label %21, !dbg !12211

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12213
  call void @llvm.dbg.value(metadata i32 %5, metadata !12205, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !12207
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12214
  %7 = and i32 %6, 63, !dbg !12215
  call void @llvm.dbg.value(metadata i32 %7, metadata !12206, metadata !DIExpression()), !dbg !12207
  %8 = and i32 %5, 4194304, !dbg !12216
  %9 = icmp eq i32 %8, 0, !dbg !12216
  %10 = select i1 %9, i32 16000000, i32 12000000
  %11 = udiv i32 %10, %7, !dbg !12218
  %12 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12218
  %13 = lshr i32 %12, 6, !dbg !12218
  %14 = and i32 %13, 511, !dbg !12218
  %15 = mul i32 %14, %11, !dbg !12218
  call void @llvm.dbg.value(metadata i32 %15, metadata !12203, metadata !DIExpression()), !dbg !12207
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12219
  %17 = lshr i32 %16, 15, !dbg !12220
  %18 = and i32 %17, 6, !dbg !12220
  %19 = add nuw nsw i32 %18, 2, !dbg !12220
  call void @llvm.dbg.value(metadata i32 %19, metadata !12204, metadata !DIExpression()), !dbg !12207
  %20 = udiv i32 %15, %19, !dbg !12221
  br label %21, !dbg !12222

21:                                               ; preds = %0, %4, %3
  %22 = phi i32 [ %20, %4 ], [ 12000000, %3 ], [ 16000000, %0 ]
  store i32 %22, i32* @SystemCoreClock, align 4, !dbg !12223
  %23 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12224
  %24 = lshr i32 %23, 4, !dbg !12225
  %25 = and i32 %24, 15, !dbg !12225
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %25, !dbg !12226
  %27 = load i8, i8* %26, align 1, !dbg !12226
  %28 = zext i8 %27 to i32, !dbg !12226
  call void @llvm.dbg.value(metadata i32 %28, metadata !12202, metadata !DIExpression()), !dbg !12207
  %29 = lshr i32 %22, %28, !dbg !12227
  store i32 %29, i32* @SystemCoreClock, align 4, !dbg !12227
  ret void, !dbg !12228
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !12229 {
  ret i32 0, !dbg !12234
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !12235 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12261, metadata !DIExpression()), !dbg !12272
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !12273
  br i1 %3, label %311, label %4, !dbg !12275

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12276
  %6 = load i32, i32* %5, align 4, !dbg !12276
  %7 = and i32 %6, 1, !dbg !12278
  %8 = icmp eq i32 %7, 0, !dbg !12279
  br i1 %8, label %66, label %9, !dbg !12280

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12281
  %11 = and i32 %10, 12, !dbg !12281
  %12 = icmp eq i32 %11, 4, !dbg !12284
  br i1 %12, label %21, label %13, !dbg !12285

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12286
  %15 = and i32 %14, 12, !dbg !12286
  %16 = icmp eq i32 %15, 8, !dbg !12287
  br i1 %16, label %17, label %29, !dbg !12288

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12289
  %19 = and i32 %18, 4194304, !dbg !12290
  %20 = icmp eq i32 %19, 0, !dbg !12291
  br i1 %20, label %29, label %21, !dbg !12292

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12293
  %23 = and i32 %22, 131072, !dbg !12293
  %24 = icmp eq i32 %23, 0, !dbg !12293
  br i1 %24, label %66, label %25, !dbg !12296

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12297
  %27 = load i32, i32* %26, align 4, !dbg !12297
  %28 = icmp eq i32 %27, 0, !dbg !12298
  br i1 %28, label %311, label %66, !dbg !12299

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12300
  %31 = load i32, i32* %30, align 4, !dbg !12300
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !12304

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12305
  %34 = or i32 %33, 65536, !dbg !12305
  br label %45, !dbg !12305

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12307
  %37 = or i32 %36, 262144, !dbg !12307
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12307
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12307
  %39 = or i32 %38, 65536, !dbg !12307
  br label %45, !dbg !12307

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12310
  %42 = and i32 %41, -65537, !dbg !12310
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12310
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12310
  %44 = and i32 %43, -262145, !dbg !12310
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12312
  %47 = load i32, i32* %30, align 4, !dbg !12313
  %48 = icmp eq i32 %47, 0, !dbg !12315
  %49 = tail call i32 @HAL_GetTick() #27, !dbg !12316
  call void @llvm.dbg.value(metadata i32 %49, metadata !12262, metadata !DIExpression()), !dbg !12272
  call void @llvm.dbg.value(metadata i32 %49, metadata !12262, metadata !DIExpression()), !dbg !12272
  br i1 %48, label %58, label %50, !dbg !12317

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12318
  %52 = and i32 %51, 131072, !dbg !12320
  %53 = icmp eq i32 %52, 0, !dbg !12320
  br i1 %53, label %54, label %66, !dbg !12321

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #27, !dbg !12322
  %56 = sub i32 %55, %49, !dbg !12325
  %57 = icmp ugt i32 %56, 100, !dbg !12326
  br i1 %57, label %311, label %50, !dbg !12327, !llvm.loop !12328

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12330
  %60 = and i32 %59, 131072, !dbg !12330
  %61 = icmp eq i32 %60, 0, !dbg !12330
  br i1 %61, label %66, label %62, !dbg !12332

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #27, !dbg !12333
  %64 = sub i32 %63, %49, !dbg !12336
  %65 = icmp ugt i32 %64, 100, !dbg !12337
  br i1 %65, label %311, label %58, !dbg !12338, !llvm.loop !12339

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !12341
  %68 = and i32 %67, 2, !dbg !12343
  %69 = icmp eq i32 %68, 0, !dbg !12344
  br i1 %69, label %121, label %70, !dbg !12345

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12346
  %72 = and i32 %71, 12, !dbg !12346
  %73 = icmp eq i32 %72, 0, !dbg !12349
  br i1 %73, label %82, label %74, !dbg !12350

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12351
  %76 = and i32 %75, 12, !dbg !12351
  %77 = icmp eq i32 %76, 8, !dbg !12352
  br i1 %77, label %78, label %90, !dbg !12353

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12354
  %80 = and i32 %79, 4194304, !dbg !12355
  %81 = icmp eq i32 %80, 0, !dbg !12356
  br i1 %81, label %82, label %90, !dbg !12357

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12358
  %84 = and i32 %83, 2, !dbg !12358
  %85 = icmp eq i32 %84, 0, !dbg !12358
  br i1 %85, label %114, label %86, !dbg !12361

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12362
  %88 = load i32, i32* %87, align 4, !dbg !12362
  %89 = icmp eq i32 %88, 1, !dbg !12363
  br i1 %89, label %114, label %311, !dbg !12364

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12365
  %92 = load i32, i32* %91, align 4, !dbg !12365
  %93 = icmp eq i32 %92, 0, !dbg !12368
  br i1 %93, label %104, label %94, !dbg !12369

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12370
  %95 = tail call i32 @HAL_GetTick() #27, !dbg !12372
  call void @llvm.dbg.value(metadata i32 %95, metadata !12262, metadata !DIExpression()), !dbg !12272
  br label %96, !dbg !12373

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12374
  %98 = and i32 %97, 2, !dbg !12375
  %99 = icmp eq i32 %98, 0, !dbg !12375
  br i1 %99, label %100, label %114, !dbg !12373

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #27, !dbg !12376
  %102 = sub i32 %101, %95, !dbg !12379
  %103 = icmp ugt i32 %102, 2, !dbg !12380
  br i1 %103, label %311, label %96, !dbg !12381, !llvm.loop !12382

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12384
  %105 = tail call i32 @HAL_GetTick() #27, !dbg !12386
  call void @llvm.dbg.value(metadata i32 %105, metadata !12262, metadata !DIExpression()), !dbg !12272
  br label %106, !dbg !12387

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12388
  %108 = and i32 %107, 2, !dbg !12388
  %109 = icmp eq i32 %108, 0, !dbg !12388
  br i1 %109, label %121, label %110, !dbg !12387

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #27, !dbg !12389
  %112 = sub i32 %111, %105, !dbg !12392
  %113 = icmp ugt i32 %112, 2, !dbg !12393
  br i1 %113, label %311, label %106, !dbg !12394, !llvm.loop !12395

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12397
  %116 = and i32 %115, -249, !dbg !12397
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12397
  %118 = load i32, i32* %117, align 4, !dbg !12397
  %119 = shl i32 %118, 3, !dbg !12397
  %120 = or i32 %119, %116, !dbg !12397
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12397
  br label %121, !dbg !12398

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !12398
  %123 = and i32 %122, 8, !dbg !12400
  %124 = icmp eq i32 %123, 0, !dbg !12401
  br i1 %124, label %149, label %125, !dbg !12402

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12403
  %127 = load i32, i32* %126, align 4, !dbg !12403
  %128 = icmp eq i32 %127, 0, !dbg !12406
  br i1 %128, label %139, label %129, !dbg !12407

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12408
  %130 = tail call i32 @HAL_GetTick() #27, !dbg !12410
  call void @llvm.dbg.value(metadata i32 %130, metadata !12262, metadata !DIExpression()), !dbg !12272
  br label %131, !dbg !12411

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12412
  %133 = and i32 %132, 2, !dbg !12413
  %134 = icmp eq i32 %133, 0, !dbg !12413
  br i1 %134, label %135, label %149, !dbg !12411

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #27, !dbg !12414
  %137 = sub i32 %136, %130, !dbg !12417
  %138 = icmp ugt i32 %137, 2, !dbg !12418
  br i1 %138, label %311, label %131, !dbg !12419, !llvm.loop !12420

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12422
  %140 = tail call i32 @HAL_GetTick() #27, !dbg !12424
  call void @llvm.dbg.value(metadata i32 %140, metadata !12262, metadata !DIExpression()), !dbg !12272
  br label %141, !dbg !12425

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12426
  %143 = and i32 %142, 2, !dbg !12426
  %144 = icmp eq i32 %143, 0, !dbg !12426
  br i1 %144, label %149, label %145, !dbg !12425

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #27, !dbg !12427
  %147 = sub i32 %146, %140, !dbg !12430
  %148 = icmp ugt i32 %147, 2, !dbg !12431
  br i1 %148, label %311, label %141, !dbg !12432, !llvm.loop !12433

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !12435
  %151 = and i32 %150, 4, !dbg !12436
  %152 = icmp eq i32 %151, 0, !dbg !12437
  br i1 %152, label %221, label %153, !dbg !12438

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !12264, metadata !DIExpression()), !dbg !12439
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12440
  %155 = and i32 %154, 268435456, !dbg !12440
  %156 = icmp eq i32 %155, 0, !dbg !12440
  br i1 %156, label %157, label %164, !dbg !12441

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !12442
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !12442
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12268, metadata !DIExpression()), !dbg !12442
  store volatile i32 0, i32* %2, align 4, !dbg !12442
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12442
  %160 = or i32 %159, 268435456, !dbg !12442
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12442
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12442
  %162 = and i32 %161, 268435456, !dbg !12442
  store volatile i32 %162, i32* %2, align 4, !dbg !12442
  %163 = load volatile i32, i32* %2, align 4, !dbg !12442
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !12443
  call void @llvm.dbg.value(metadata i32 1, metadata !12264, metadata !DIExpression()), !dbg !12439
  br label %164, !dbg !12444

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !12264, metadata !DIExpression()), !dbg !12439
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12445
  %166 = and i32 %165, 256, !dbg !12445
  %167 = icmp eq i32 %166, 0, !dbg !12445
  br i1 %167, label %168, label %180, !dbg !12447

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12448
  %170 = or i32 %169, 256, !dbg !12448
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12448
  %171 = tail call i32 @HAL_GetTick() #27, !dbg !12450
  call void @llvm.dbg.value(metadata i32 %171, metadata !12262, metadata !DIExpression()), !dbg !12272
  br label %172, !dbg !12451

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12452
  %174 = and i32 %173, 256, !dbg !12452
  %175 = icmp eq i32 %174, 0, !dbg !12452
  br i1 %175, label %176, label %180, !dbg !12451

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #27, !dbg !12453
  %178 = sub i32 %177, %171, !dbg !12456
  %179 = icmp ugt i32 %178, 2, !dbg !12457
  br i1 %179, label %311, label %172, !dbg !12458, !llvm.loop !12459

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12461
  %182 = load i32, i32* %181, align 4, !dbg !12461
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !12464

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12465
  %185 = or i32 %184, 1, !dbg !12465
  br label %196, !dbg !12465

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12467
  %188 = or i32 %187, 4, !dbg !12467
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12467
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12467
  %190 = or i32 %189, 1, !dbg !12467
  br label %196, !dbg !12467

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12470
  %193 = and i32 %192, -2, !dbg !12470
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12470
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12470
  %195 = and i32 %194, -5, !dbg !12470
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12472
  %198 = load i32, i32* %181, align 4, !dbg !12473
  %199 = icmp eq i32 %198, 0, !dbg !12475
  %200 = tail call i32 @HAL_GetTick() #27, !dbg !12476
  call void @llvm.dbg.value(metadata i32 %200, metadata !12262, metadata !DIExpression()), !dbg !12272
  call void @llvm.dbg.value(metadata i32 %200, metadata !12262, metadata !DIExpression()), !dbg !12272
  br i1 %199, label %209, label %201, !dbg !12477

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12478
  %203 = and i32 %202, 2, !dbg !12480
  %204 = icmp eq i32 %203, 0, !dbg !12480
  br i1 %204, label %205, label %217, !dbg !12481

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #27, !dbg !12482
  %207 = sub i32 %206, %200, !dbg !12485
  %208 = icmp ugt i32 %207, 5000, !dbg !12486
  br i1 %208, label %311, label %201, !dbg !12487, !llvm.loop !12488

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12490
  %211 = and i32 %210, 2, !dbg !12490
  %212 = icmp eq i32 %211, 0, !dbg !12490
  br i1 %212, label %217, label %213, !dbg !12492

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #27, !dbg !12493
  %215 = sub i32 %214, %200, !dbg !12496
  %216 = icmp ugt i32 %215, 5000, !dbg !12497
  br i1 %216, label %311, label %209, !dbg !12498, !llvm.loop !12499

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !12501

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12502
  %220 = and i32 %219, -268435457, !dbg !12502
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12502
  br label %221, !dbg !12505

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12506
  %223 = load i32, i32* %222, align 4, !dbg !12506
  %224 = icmp eq i32 %223, 0, !dbg !12508
  br i1 %224, label %310, label %225, !dbg !12509

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12510
  %227 = and i32 %226, 12, !dbg !12510
  %228 = icmp eq i32 %227, 8, !dbg !12513
  br i1 %228, label %277, label %229, !dbg !12514

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !12515
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12518
  %231 = tail call i32 @HAL_GetTick() #27, !dbg !12518
  call void @llvm.dbg.value(metadata i32 %231, metadata !12262, metadata !DIExpression()), !dbg !12272
  call void @llvm.dbg.value(metadata i32 %231, metadata !12262, metadata !DIExpression()), !dbg !12272
  br i1 %230, label %232, label %269, !dbg !12519

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12520
  %234 = and i32 %233, 33554432, !dbg !12520
  %235 = icmp eq i32 %234, 0, !dbg !12520
  br i1 %235, label %240, label %236, !dbg !12522

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #27, !dbg !12523
  %238 = sub i32 %237, %231, !dbg !12526
  %239 = icmp ugt i32 %238, 2, !dbg !12527
  br i1 %239, label %311, label %232, !dbg !12528, !llvm.loop !12529

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12531
  %242 = load i32, i32* %241, align 4, !dbg !12531
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12531
  %244 = load i32, i32* %243, align 4, !dbg !12531
  %245 = or i32 %244, %242, !dbg !12531
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12531
  %247 = load i32, i32* %246, align 4, !dbg !12531
  %248 = shl i32 %247, 6, !dbg !12531
  %249 = or i32 %245, %248, !dbg !12531
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12531
  %251 = load i32, i32* %250, align 4, !dbg !12531
  %252 = shl i32 %251, 15, !dbg !12531
  %253 = add i32 %252, -65536, !dbg !12531
  %254 = and i32 %253, -65536, !dbg !12531
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12531
  %256 = load i32, i32* %255, align 4, !dbg !12531
  %257 = shl i32 %256, 24, !dbg !12531
  %258 = or i32 %249, %257, !dbg !12531
  %259 = or i32 %258, %254, !dbg !12531
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12531
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12532
  %260 = tail call i32 @HAL_GetTick() #27, !dbg !12533
  call void @llvm.dbg.value(metadata i32 %260, metadata !12262, metadata !DIExpression()), !dbg !12272
  br label %261, !dbg !12534

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12535
  %263 = and i32 %262, 33554432, !dbg !12536
  %264 = icmp eq i32 %263, 0, !dbg !12536
  br i1 %264, label %265, label %310, !dbg !12534

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #27, !dbg !12537
  %267 = sub i32 %266, %260, !dbg !12540
  %268 = icmp ugt i32 %267, 2, !dbg !12541
  br i1 %268, label %311, label %261, !dbg !12542, !llvm.loop !12543

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12545
  %271 = and i32 %270, 33554432, !dbg !12545
  %272 = icmp eq i32 %271, 0, !dbg !12545
  br i1 %272, label %310, label %273, !dbg !12547

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #27, !dbg !12548
  %275 = sub i32 %274, %231, !dbg !12551
  %276 = icmp ugt i32 %275, 2, !dbg !12552
  br i1 %276, label %311, label %269, !dbg !12553, !llvm.loop !12554

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !12556
  br i1 %278, label %311, label %279, !dbg !12559

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12560
  call void @llvm.dbg.value(metadata i32 %280, metadata !12263, metadata !DIExpression()), !dbg !12272
  %281 = and i32 %280, 4194304, !dbg !12562
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12564
  %283 = load i32, i32* %282, align 4, !dbg !12564
  %284 = icmp eq i32 %281, %283, !dbg !12565
  br i1 %284, label %285, label %311, !dbg !12566

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !12567
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12568
  %288 = load i32, i32* %287, align 4, !dbg !12568
  %289 = icmp eq i32 %286, %288, !dbg !12569
  br i1 %289, label %290, label %311, !dbg !12570

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !12571
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12572
  %293 = load i32, i32* %292, align 4, !dbg !12572
  %294 = shl i32 %293, 6, !dbg !12573
  %295 = icmp eq i32 %291, %294, !dbg !12574
  br i1 %295, label %296, label %311, !dbg !12575

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !12576
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12577
  %299 = load i32, i32* %298, align 4, !dbg !12577
  %300 = shl i32 %299, 15, !dbg !12578
  %301 = add i32 %300, -65536, !dbg !12578
  %302 = and i32 %301, -65536, !dbg !12578
  %303 = icmp eq i32 %297, %302, !dbg !12579
  br i1 %303, label %304, label %311, !dbg !12580

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !12581
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12582
  %307 = load i32, i32* %306, align 4, !dbg !12582
  %308 = shl i32 %307, 24, !dbg !12583
  %309 = icmp eq i32 %305, %308, !dbg !12584
  br i1 %309, label %310, label %311, !dbg !12585

310:                                              ; preds = %269, %261, %304, %221
  br label %311, !dbg !12586

311:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %277, %86, %25, %1, %310
  %312 = phi i32 [ 0, %310 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !12272
  ret i32 %312, !dbg !12587
}

; Function Attrs: optsize
declare !dbg !12588 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12590 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !12603, metadata !DIExpression()), !dbg !12606
  call void @llvm.dbg.value(metadata i32 %1, metadata !12604, metadata !DIExpression()), !dbg !12606
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !12607
  br i1 %3, label %115, label %4, !dbg !12609

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12610
  %6 = and i32 %5, 7, !dbg !12610
  %7 = icmp ult i32 %6, %1, !dbg !12612
  br i1 %7, label %8, label %13, !dbg !12613

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !12614
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !12614
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12616
  %11 = and i32 %10, 7, !dbg !12616
  %12 = icmp eq i32 %11, %1, !dbg !12618
  br i1 %12, label %13, label %115, !dbg !12619

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !12620
  %15 = load i32, i32* %14, align 4, !dbg !12620
  %16 = and i32 %15, 2, !dbg !12622
  %17 = icmp eq i32 %16, 0, !dbg !12623
  br i1 %17, label %39, label %18, !dbg !12624

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !12625
  %20 = icmp eq i32 %19, 0, !dbg !12628
  br i1 %20, label %25, label %21, !dbg !12629

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12630
  %23 = or i32 %22, 7168, !dbg !12630
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12630
  %24 = load i32, i32* %14, align 4, !dbg !12632
  br label %25, !dbg !12634

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !12632
  %27 = and i32 %26, 8, !dbg !12635
  %28 = icmp eq i32 %27, 0, !dbg !12636
  br i1 %28, label %32, label %29, !dbg !12637

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12638
  %31 = or i32 %30, 57344, !dbg !12638
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12638
  br label %32, !dbg !12640

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12641
  %34 = and i32 %33, -241, !dbg !12641
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !12641
  %36 = load i32, i32* %35, align 4, !dbg !12641
  %37 = or i32 %34, %36, !dbg !12641
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12641
  %38 = load i32, i32* %14, align 4, !dbg !12642
  br label %39, !dbg !12644

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !12642
  %41 = and i32 %40, 1, !dbg !12645
  %42 = icmp eq i32 %41, 0, !dbg !12646
  br i1 %42, label %73, label %43, !dbg !12647

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !12648
  %45 = load i32, i32* %44, align 4, !dbg !12648
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !12651

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12652
  %48 = and i32 %47, 131072, !dbg !12655
  %49 = icmp eq i32 %48, 0, !dbg !12655
  br i1 %49, label %115, label %58, !dbg !12656

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12657
  %52 = and i32 %51, 33554432, !dbg !12661
  %53 = icmp eq i32 %52, 0, !dbg !12661
  br i1 %53, label %115, label %58, !dbg !12662

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12663
  %56 = and i32 %55, 2, !dbg !12666
  %57 = icmp eq i32 %56, 0, !dbg !12666
  br i1 %57, label %115, label %58, !dbg !12667

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12668
  %60 = and i32 %59, -4, !dbg !12668
  %61 = or i32 %60, %45, !dbg !12668
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12668
  %62 = tail call i32 @HAL_GetTick() #27, !dbg !12669
  call void @llvm.dbg.value(metadata i32 %62, metadata !12605, metadata !DIExpression()), !dbg !12606
  br label %63, !dbg !12670

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12671
  %65 = and i32 %64, 12, !dbg !12671
  %66 = load i32, i32* %44, align 4, !dbg !12672
  %67 = shl i32 %66, 2, !dbg !12673
  %68 = icmp eq i32 %65, %67, !dbg !12674
  br i1 %68, label %73, label %69, !dbg !12670

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #27, !dbg !12675
  %71 = sub i32 %70, %62, !dbg !12678
  %72 = icmp ugt i32 %71, 5000, !dbg !12679
  br i1 %72, label %115, label %63, !dbg !12680, !llvm.loop !12681

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12683
  %75 = and i32 %74, 7, !dbg !12683
  %76 = icmp ugt i32 %75, %1, !dbg !12685
  br i1 %76, label %77, label %82, !dbg !12686

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !12687
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !12687
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12689
  %80 = and i32 %79, 7, !dbg !12689
  %81 = icmp eq i32 %80, %1, !dbg !12691
  br i1 %81, label %82, label %115, !dbg !12692

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !12693
  %84 = and i32 %83, 4, !dbg !12695
  %85 = icmp eq i32 %84, 0, !dbg !12696
  br i1 %85, label %93, label %86, !dbg !12697

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12698
  %88 = and i32 %87, -7169, !dbg !12698
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !12698
  %90 = load i32, i32* %89, align 4, !dbg !12698
  %91 = or i32 %88, %90, !dbg !12698
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12698
  %92 = load i32, i32* %14, align 4, !dbg !12700
  br label %93, !dbg !12702

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !12700
  %95 = and i32 %94, 8, !dbg !12703
  %96 = icmp eq i32 %95, 0, !dbg !12704
  br i1 %96, label %104, label %97, !dbg !12705

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12706
  %99 = and i32 %98, -57345, !dbg !12706
  %100 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !12706
  %101 = load i32, i32* %100, align 4, !dbg !12706
  %102 = shl i32 %101, 3, !dbg !12706
  %103 = or i32 %102, %99, !dbg !12706
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12706
  br label %104, !dbg !12708

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #26, !dbg !12709
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12710
  %107 = lshr i32 %106, 4, !dbg !12711
  %108 = and i32 %107, 15, !dbg !12711
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !12712
  %110 = load i8, i8* %109, align 1, !dbg !12712
  %111 = zext i8 %110 to i32, !dbg !12712
  %112 = lshr i32 %105, %111, !dbg !12713
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !12714
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !12715
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #27, !dbg !12716
  br label %115, !dbg !12717

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !12606
  ret i32 %116, !dbg !12718
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !12719 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12721, metadata !DIExpression()), !dbg !12725
  call void @llvm.dbg.value(metadata i32 0, metadata !12722, metadata !DIExpression()), !dbg !12725
  call void @llvm.dbg.value(metadata i32 0, metadata !12723, metadata !DIExpression()), !dbg !12725
  call void @llvm.dbg.value(metadata i32 0, metadata !12724, metadata !DIExpression()), !dbg !12725
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12726
  %2 = and i32 %1, 12, !dbg !12727
  switch i32 %2, label %24 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !12728

3:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 12000000, metadata !12724, metadata !DIExpression()), !dbg !12725
  br label %24, !dbg !12729

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12732
  %6 = and i32 %5, 63, !dbg !12734
  call void @llvm.dbg.value(metadata i32 %6, metadata !12721, metadata !DIExpression()), !dbg !12725
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12735
  %8 = and i32 %7, 4194304, !dbg !12735
  %9 = icmp eq i32 %8, 0, !dbg !12737
  %10 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12738
  %11 = lshr i32 %10, 6, !dbg !12738
  %12 = and i32 %11, 511, !dbg !12738
  %13 = zext i32 %12 to i64, !dbg !12738
  %14 = select i1 %9, i64 16000000, i64 12000000
  %15 = mul nuw nsw i64 %14, %13, !dbg !12738
  %16 = zext i32 %6 to i64, !dbg !12738
  %17 = udiv i64 %15, %16, !dbg !12738
  %18 = trunc i64 %17 to i32, !dbg !12738
  call void @llvm.dbg.value(metadata i32 %18, metadata !12722, metadata !DIExpression()), !dbg !12725
  %19 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12739
  %20 = lshr i32 %19, 15, !dbg !12740
  %21 = and i32 %20, 6, !dbg !12740
  %22 = add nuw nsw i32 %21, 2, !dbg !12740
  call void @llvm.dbg.value(metadata i32 %22, metadata !12723, metadata !DIExpression()), !dbg !12725
  %23 = udiv i32 %18, %22, !dbg !12741
  call void @llvm.dbg.value(metadata i32 %23, metadata !12724, metadata !DIExpression()), !dbg !12725
  br label %24, !dbg !12742

24:                                               ; preds = %0, %4, %3
  %25 = phi i32 [ %23, %4 ], [ 12000000, %3 ], [ 16000000, %0 ], !dbg !12743
  call void @llvm.dbg.value(metadata i32 %25, metadata !12724, metadata !DIExpression()), !dbg !12725
  ret i32 %25, !dbg !12744
}

; Function Attrs: optsize
declare !dbg !12745 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12748 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12752, metadata !DIExpression()), !dbg !12772
  call void @llvm.dbg.value(metadata i32 %1, metadata !12753, metadata !DIExpression()), !dbg !12772
  call void @llvm.dbg.value(metadata i32 %2, metadata !12754, metadata !DIExpression()), !dbg !12772
  %7 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !12773
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #25, !dbg !12773
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !12755, metadata !DIExpression()), !dbg !12774
  %8 = icmp eq i32 %0, 0, !dbg !12775
  br i1 %8, label %9, label %23, !dbg !12776

9:                                                ; preds = %3
  %10 = bitcast i32* %5 to i8*, !dbg !12777
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10), !dbg !12777
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12765, metadata !DIExpression()), !dbg !12777
  store volatile i32 0, i32* %5, align 4, !dbg !12777
  %11 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12777
  %12 = or i32 %11, 1, !dbg !12777
  store volatile i32 %12, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12777
  %13 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12777
  %14 = and i32 %13, 1, !dbg !12777
  store volatile i32 %14, i32* %5, align 4, !dbg !12777
  %15 = load volatile i32, i32* %5, align 4, !dbg !12777
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !12778
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !12779
  store i32 256, i32* %16, align 4, !dbg !12780
  %17 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !12781
  store i32 2, i32* %17, align 4, !dbg !12782
  %18 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !12783
  store i32 3, i32* %18, align 4, !dbg !12784
  %19 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !12785
  store i32 0, i32* %19, align 4, !dbg !12786
  %20 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !12787
  store i32 0, i32* %20, align 4, !dbg !12788
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #27, !dbg !12789
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12790
  %22 = and i32 %21, -123731969, !dbg !12790
  br label %38, !dbg !12791

23:                                               ; preds = %3
  %24 = bitcast i32* %6 to i8*, !dbg !12792
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24), !dbg !12792
  call void @llvm.dbg.declare(metadata i32* %6, metadata !12769, metadata !DIExpression()), !dbg !12792
  store volatile i32 0, i32* %6, align 4, !dbg !12792
  %25 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12792
  %26 = or i32 %25, 4, !dbg !12792
  store volatile i32 %26, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12792
  %27 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12792
  %28 = and i32 %27, 4, !dbg !12792
  store volatile i32 %28, i32* %6, align 4, !dbg !12792
  %29 = load volatile i32, i32* %6, align 4, !dbg !12792
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24), !dbg !12793
  %30 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !12794
  store i32 512, i32* %30, align 4, !dbg !12795
  %31 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !12796
  store i32 2, i32* %31, align 4, !dbg !12797
  %32 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !12798
  store i32 3, i32* %32, align 4, !dbg !12799
  %33 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !12800
  store i32 0, i32* %33, align 4, !dbg !12801
  %34 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !12802
  store i32 0, i32* %34, align 4, !dbg !12803
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073874944 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #27, !dbg !12804
  %35 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12805
  %36 = and i32 %35, 134217727, !dbg !12805
  %37 = shl i32 %2, 3, !dbg !12805
  br label %38

38:                                               ; preds = %23, %9
  %39 = phi i32 [ %37, %23 ], [ %2, %9 ]
  %40 = phi i32 [ %36, %23 ], [ %22, %9 ]
  %41 = or i32 %39, %1, !dbg !12806
  %42 = or i32 %41, %40, !dbg !12806
  store volatile i32 %42, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12806
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #25, !dbg !12807
  ret void, !dbg !12807
}

; Function Attrs: optsize
declare !dbg !12808 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #16 !dbg !12812 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !12813
  ret void, !dbg !12814
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #16 !dbg !12815 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !12816
  ret void, !dbg !12817
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #4 !dbg !12818 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !12819
  ret i32 %1, !dbg !12820
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #17 !dbg !12821 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !12822
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12823
  %3 = lshr i32 %2, 10, !dbg !12824
  %4 = and i32 %3, 7, !dbg !12824
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !12825
  %6 = load i8, i8* %5, align 1, !dbg !12825
  %7 = zext i8 %6 to i32, !dbg !12825
  %8 = lshr i32 %1, %7, !dbg !12826
  ret i32 %8, !dbg !12827
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #17 !dbg !12828 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !12829
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12830
  %3 = lshr i32 %2, 13, !dbg !12831
  %4 = and i32 %3, 7, !dbg !12831
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !12832
  %6 = load i8, i8* %5, align 1, !dbg !12832
  %7 = zext i8 %6 to i32, !dbg !12832
  %8 = lshr i32 %1, %7, !dbg !12833
  ret i32 %8, !dbg !12834
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !12835 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12839, metadata !DIExpression()), !dbg !12840
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12841
  store i32 15, i32* %2, align 4, !dbg !12842
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12843
  %4 = and i32 %3, 262144, !dbg !12845
  %5 = icmp eq i32 %4, 0, !dbg !12846
  br i1 %5, label %8, label %6, !dbg !12847

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12848
  store i32 327680, i32* %7, align 4, !dbg !12850
  br label %15, !dbg !12851

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12852
  %10 = and i32 %9, 65536, !dbg !12854
  %11 = icmp eq i32 %10, 0, !dbg !12855
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12856
  br i1 %11, label %14, label %13, !dbg !12857

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !12858
  br label %15, !dbg !12860

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !12861
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12863
  %17 = and i32 %16, 1, !dbg !12865
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12866
  store i32 %17, i32* %18, align 4, !dbg !12868
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12869
  %20 = lshr i32 %19, 3, !dbg !12870
  %21 = and i32 %20, 31, !dbg !12870
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12871
  store i32 %21, i32* %22, align 4, !dbg !12872
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12873
  %24 = and i32 %23, 4, !dbg !12875
  %25 = icmp eq i32 %24, 0, !dbg !12876
  br i1 %25, label %28, label %26, !dbg !12877

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12878
  store i32 5, i32* %27, align 4, !dbg !12880
  br label %35, !dbg !12881

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12882
  %30 = and i32 %29, 1, !dbg !12884
  %31 = icmp eq i32 %30, 0, !dbg !12885
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12886
  br i1 %31, label %34, label %33, !dbg !12887

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !12888
  br label %35, !dbg !12890

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !12891
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12893
  %37 = and i32 %36, 1, !dbg !12895
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12896
  store i32 %37, i32* %38, align 4, !dbg !12898
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12899
  %40 = and i32 %39, 16777216, !dbg !12901
  %41 = icmp eq i32 %40, 0, !dbg !12902
  %42 = select i1 %41, i32 1, i32 2, !dbg !12903
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12904
  store i32 %42, i32* %43, align 4, !dbg !12906
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12907
  %45 = and i32 %44, 4194304, !dbg !12908
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12909
  store i32 %45, i32* %46, align 4, !dbg !12910
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12911
  %48 = and i32 %47, 63, !dbg !12912
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12913
  store i32 %48, i32* %49, align 4, !dbg !12914
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12915
  %51 = lshr i32 %50, 6, !dbg !12916
  %52 = and i32 %51, 511, !dbg !12916
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12917
  store i32 %52, i32* %53, align 4, !dbg !12918
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12919
  %55 = shl i32 %54, 1, !dbg !12920
  %56 = and i32 %55, 393216, !dbg !12920
  %57 = add nuw nsw i32 %56, 131072, !dbg !12920
  %58 = lshr exact i32 %57, 16, !dbg !12921
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12922
  store i32 %58, i32* %59, align 4, !dbg !12923
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12924
  %61 = lshr i32 %60, 24, !dbg !12925
  %62 = and i32 %61, 15, !dbg !12925
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12926
  store i32 %62, i32* %63, align 4, !dbg !12927
  ret void, !dbg !12928
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #17 !dbg !12929 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !12933, metadata !DIExpression()), !dbg !12935
  call void @llvm.dbg.value(metadata i32* %1, metadata !12934, metadata !DIExpression()), !dbg !12935
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !12936
  store i32 15, i32* %3, align 4, !dbg !12937
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12938
  %5 = and i32 %4, 3, !dbg !12939
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !12940
  store i32 %5, i32* %6, align 4, !dbg !12941
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12942
  %8 = and i32 %7, 240, !dbg !12943
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !12944
  store i32 %8, i32* %9, align 4, !dbg !12945
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12946
  %11 = and i32 %10, 7168, !dbg !12947
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !12948
  store i32 %11, i32* %12, align 4, !dbg !12949
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12950
  %14 = lshr i32 %13, 3, !dbg !12951
  %15 = and i32 %14, 7168, !dbg !12951
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !12952
  store i32 %15, i32* %16, align 4, !dbg !12953
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12954
  %18 = and i32 %17, 7, !dbg !12955
  store i32 %18, i32* %1, align 4, !dbg !12956
  ret void, !dbg !12957
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !12958 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12959
  %2 = and i32 %1, 128, !dbg !12959
  %3 = icmp eq i32 %2, 0, !dbg !12959
  br i1 %3, label %5, label %4, !dbg !12961

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #26, !dbg !12962
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !12964
  br label %5, !dbg !12965

5:                                                ; preds = %4, %0
  ret void, !dbg !12966
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !12967 {
  ret void, !dbg !12968
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #16 !dbg !12969 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12972, metadata !DIExpression()), !dbg !12973
  tail call fastcc void @LL_InitTick(i32 noundef %0) #26, !dbg !12974
  ret void, !dbg !12975
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #16 !dbg !12976 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12979, metadata !DIExpression()), !dbg !12981
  call void @llvm.dbg.value(metadata i32 1000, metadata !12980, metadata !DIExpression()), !dbg !12981
  %2 = udiv i32 %0, 1000, !dbg !12982
  %3 = add nsw i32 %2, -1, !dbg !12983
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12984
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12985
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12986
  ret void, !dbg !12987
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #20 !dbg !12988 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12990, metadata !DIExpression()), !dbg !12992
  %3 = bitcast i32* %2 to i8*, !dbg !12993
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12993
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12991, metadata !DIExpression()), !dbg !12994
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12995
  store volatile i32 %4, i32* %2, align 4, !dbg !12994
  %5 = load volatile i32, i32* %2, align 4, !dbg !12996
  %6 = icmp eq i32 %0, -1, !dbg !12997
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12990, metadata !DIExpression()), !dbg !12992
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !12992
  call void @llvm.dbg.value(metadata i32 %8, metadata !12990, metadata !DIExpression()), !dbg !12992
  br label %9, !dbg !12999

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12990, metadata !DIExpression()), !dbg !12992
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13000
  call void @llvm.dbg.value(metadata i32 undef, metadata !12990, metadata !DIExpression()), !dbg !12992
  %12 = shl i32 %11, 15, !dbg !12992
  %13 = ashr i32 %12, 31, !dbg !12992
  %14 = add i32 %13, %10, !dbg !12992
  call void @llvm.dbg.value(metadata i32 %14, metadata !12990, metadata !DIExpression()), !dbg !12992
  %15 = icmp eq i32 %14, 0, !dbg !12999
  br i1 %15, label %16, label %9, !dbg !12999

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !13003
  ret void, !dbg !13003
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #8 !dbg !13004 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13006, metadata !DIExpression()), !dbg !13007
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !13008
  ret void, !dbg !13009
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #16 !dbg !13010 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13015, metadata !DIExpression()), !dbg !13020
  call void @llvm.dbg.value(metadata i32 0, metadata !13018, metadata !DIExpression()), !dbg !13020
  call void @llvm.dbg.value(metadata i32 0, metadata !13019, metadata !DIExpression()), !dbg !13020
  %2 = icmp eq i32 %0, 0, !dbg !13021
  br i1 %2, label %52, label %3, !dbg !13023

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !13024
  %5 = icmp eq i32 %4, 16384, !dbg !13027
  br i1 %5, label %6, label %21, !dbg !13028

6:                                                ; preds = %3
  %7 = icmp ult i32 %0, 150000001, !dbg !13029
  %8 = select i1 %7, i32 0, i32 5, !dbg !13032
  call void @llvm.dbg.value(metadata i32 %8, metadata !13018, metadata !DIExpression()), !dbg !13020
  %9 = add i32 %0, -120000001, !dbg !13033
  %10 = icmp ult i32 %9, 30000000, !dbg !13033
  %11 = select i1 %10, i32 4, i32 %8, !dbg !13033
  call void @llvm.dbg.value(metadata i32 %11, metadata !13018, metadata !DIExpression()), !dbg !13020
  %12 = icmp ult i32 %9, -30000000, !dbg !13035
  %13 = select i1 %12, i32 %11, i32 3, !dbg !13035
  call void @llvm.dbg.value(metadata i32 %13, metadata !13018, metadata !DIExpression()), !dbg !13020
  %14 = icmp ugt i32 %0, 60000000, !dbg !13037
  %15 = icmp eq i32 %13, 0
  %16 = and i1 %14, %15, !dbg !13039
  br i1 %16, label %21, label %17, !dbg !13039

17:                                               ; preds = %6
  %18 = icmp ugt i32 %0, 30000000, !dbg !13040
  %19 = and i1 %18, %15, !dbg !13043
  %20 = select i1 %19, i32 1, i32 %13, !dbg !13043
  br label %21, !dbg !13043

21:                                               ; preds = %17, %6, %3
  %22 = phi i32 [ 0, %3 ], [ 2, %6 ], [ %20, %17 ], !dbg !13020
  call void @llvm.dbg.value(metadata i32 %22, metadata !13018, metadata !DIExpression()), !dbg !13020
  %23 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !13044
  %24 = icmp eq i32 %23, 0, !dbg !13046
  br i1 %24, label %25, label %41, !dbg !13047

25:                                               ; preds = %21
  %26 = icmp ugt i32 %0, 12000000, !dbg !13048
  %27 = icmp eq i32 %22, 0
  %28 = and i1 %26, %27, !dbg !13051
  %29 = select i1 %28, i32 4, i32 %22, !dbg !13051
  call void @llvm.dbg.value(metadata i32 %29, metadata !13018, metadata !DIExpression()), !dbg !13020
  %30 = icmp ugt i32 %0, 90000000, !dbg !13052
  %31 = icmp eq i32 %29, 0
  %32 = and i1 %30, %31, !dbg !13054
  %33 = select i1 %32, i32 3, i32 %29, !dbg !13054
  call void @llvm.dbg.value(metadata i32 %33, metadata !13018, metadata !DIExpression()), !dbg !13020
  %34 = icmp ugt i32 %0, 60000000, !dbg !13055
  %35 = icmp eq i32 %33, 0
  %36 = and i1 %34, %35, !dbg !13057
  br i1 %36, label %41, label %37, !dbg !13057

37:                                               ; preds = %25
  %38 = icmp ugt i32 %0, 30000000, !dbg !13058
  %39 = and i1 %38, %35, !dbg !13061
  %40 = select i1 %39, i32 1, i32 %33, !dbg !13061
  br label %41, !dbg !13061

41:                                               ; preds = %37, %25, %21
  %42 = phi i32 [ %22, %21 ], [ 2, %25 ], [ %40, %37 ], !dbg !13062
  call void @llvm.dbg.value(metadata i32 %42, metadata !13018, metadata !DIExpression()), !dbg !13020
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %42) #26, !dbg !13063
  call void @llvm.dbg.value(metadata i32 2, metadata !13016, metadata !DIExpression()), !dbg !13020
  br label %43, !dbg !13064

43:                                               ; preds = %43, %41
  %44 = phi i32 [ 2, %41 ], [ %46, %43 ], !dbg !13062
  call void @llvm.dbg.value(metadata i32 %44, metadata !13016, metadata !DIExpression()), !dbg !13020
  %45 = tail call fastcc i32 @LL_FLASH_GetLatency() #26, !dbg !13065
  call void @llvm.dbg.value(metadata i32 %45, metadata !13017, metadata !DIExpression()), !dbg !13020
  %46 = add nsw i32 %44, -1, !dbg !13067
  call void @llvm.dbg.value(metadata i32 %46, metadata !13016, metadata !DIExpression()), !dbg !13020
  %47 = icmp ne i32 %45, %42, !dbg !13068
  %48 = icmp ne i32 %46, 0, !dbg !13069
  %49 = select i1 %47, i1 %48, i1 false, !dbg !13069
  br i1 %49, label %43, label %50, !dbg !13070, !llvm.loop !13071

50:                                               ; preds = %43
  %51 = zext i1 %47 to i32
  br label %52

52:                                               ; preds = %50, %1
  %53 = phi i32 [ 1, %1 ], [ %51, %50 ], !dbg !13073
  call void @llvm.dbg.value(metadata i32 %53, metadata !13019, metadata !DIExpression()), !dbg !13020
  ret i32 %53, !dbg !13074
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #17 !dbg !13075 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13077
  %2 = and i32 %1, 16384, !dbg !13077
  ret i32 %2, !dbg !13078
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #16 !dbg !13079 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13081, metadata !DIExpression()), !dbg !13082
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13083
  %3 = and i32 %2, -8, !dbg !13083
  %4 = or i32 %3, %0, !dbg !13083
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13083
  ret void, !dbg !13084
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #17 !dbg !13085 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13086
  %2 = and i32 %1, 7, !dbg !13086
  ret i32 %2, !dbg !13087
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #16 !dbg !13088 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !13106, metadata !DIExpression()), !dbg !13110
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13107, metadata !DIExpression()), !dbg !13110
  call void @llvm.dbg.value(metadata i32 0, metadata !13108, metadata !DIExpression()), !dbg !13110
  call void @llvm.dbg.value(metadata i32 0, metadata !13109, metadata !DIExpression()), !dbg !13110
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !13111
  %4 = icmp eq i32 %3, 0, !dbg !13113
  br i1 %4, label %5, label %21, !dbg !13114

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #26, !dbg !13115
  call void @llvm.dbg.value(metadata i32 %6, metadata !13109, metadata !DIExpression()), !dbg !13110
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.133() #26, !dbg !13117
  %8 = icmp eq i32 %7, 1, !dbg !13119
  br i1 %8, label %13, label %9, !dbg !13120

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.134() #26, !dbg !13121
  br label %10, !dbg !13123

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.133() #26, !dbg !13124
  %12 = icmp eq i32 %11, 1, !dbg !13125
  br i1 %12, label %13, label %10, !dbg !13123, !llvm.loop !13126

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !13128
  %15 = load i32, i32* %14, align 4, !dbg !13128
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !13129
  %17 = load i32, i32* %16, align 4, !dbg !13129
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !13130
  %19 = load i32, i32* %18, align 4, !dbg !13130
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.135(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #26, !dbg !13131
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #26, !dbg !13132
  call void @llvm.dbg.value(metadata i32 %20, metadata !13108, metadata !DIExpression()), !dbg !13110
  br label %21, !dbg !13133

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !13134
  call void @llvm.dbg.value(metadata i32 %22, metadata !13108, metadata !DIExpression()), !dbg !13110
  ret i32 %22, !dbg !13135
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #17 !dbg !13136 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13140, metadata !DIExpression()), !dbg !13141
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.137() #26, !dbg !13142
  %2 = icmp ne i32 %1, 0, !dbg !13144
  call void @llvm.dbg.value(metadata i1 %2, metadata !13140, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13141
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #26, !dbg !13145
  %4 = icmp ne i32 %3, 0, !dbg !13147
  %5 = select i1 %4, i1 true, i1 %2, !dbg !13148
  %6 = zext i1 %5 to i32, !dbg !13148
  call void @llvm.dbg.value(metadata i32 %6, metadata !13140, metadata !DIExpression()), !dbg !13141
  ret i32 %6, !dbg !13149
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #4 !dbg !13150 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13154, metadata !DIExpression()), !dbg !13157
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13155, metadata !DIExpression()), !dbg !13157
  call void @llvm.dbg.value(metadata i32 0, metadata !13156, metadata !DIExpression()), !dbg !13157
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !13158
  %4 = load i32, i32* %3, align 4, !dbg !13158
  %5 = and i32 %4, 63, !dbg !13159
  %6 = udiv i32 %0, %5, !dbg !13160
  call void @llvm.dbg.value(metadata i32 %6, metadata !13156, metadata !DIExpression()), !dbg !13157
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !13161
  %8 = load i32, i32* %7, align 4, !dbg !13161
  %9 = and i32 %8, 511, !dbg !13162
  %10 = mul i32 %9, %6, !dbg !13163
  call void @llvm.dbg.value(metadata i32 %10, metadata !13156, metadata !DIExpression()), !dbg !13157
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !13164
  %12 = load i32, i32* %11, align 4, !dbg !13164
  %13 = lshr i32 %12, 15, !dbg !13165
  %14 = and i32 %13, 131070, !dbg !13165
  %15 = add nuw nsw i32 %14, 2, !dbg !13165
  %16 = udiv i32 %10, %15, !dbg !13166
  call void @llvm.dbg.value(metadata i32 %16, metadata !13156, metadata !DIExpression()), !dbg !13157
  ret i32 %16, !dbg !13167
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.133() unnamed_addr #17 !dbg !13168 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13169
  %2 = lshr i32 %1, 1, !dbg !13170
  %3 = and i32 %2, 1, !dbg !13170
  ret i32 %3, !dbg !13171
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.134() unnamed_addr #16 !dbg !13172 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13173
  %2 = or i32 %1, 1, !dbg !13173
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13173
  ret void, !dbg !13174
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.135(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #16 !dbg !13175 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13177, metadata !DIExpression()), !dbg !13181
  call void @llvm.dbg.value(metadata i32 %1, metadata !13178, metadata !DIExpression()), !dbg !13181
  call void @llvm.dbg.value(metadata i32 %2, metadata !13179, metadata !DIExpression()), !dbg !13181
  call void @llvm.dbg.value(metadata i32 %3, metadata !13180, metadata !DIExpression()), !dbg !13181
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13182
  %6 = and i32 %5, -4227072, !dbg !13182
  %7 = or i32 %1, %0, !dbg !13182
  %8 = shl i32 %2, 6, !dbg !13182
  %9 = or i32 %7, %8, !dbg !13182
  %10 = or i32 %9, %6, !dbg !13182
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13182
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13183
  %12 = and i32 %11, -196609, !dbg !13183
  %13 = or i32 %12, %3, !dbg !13183
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13183
  ret void, !dbg !13184
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #16 !dbg !13185 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13189, metadata !DIExpression()), !dbg !13193
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13190, metadata !DIExpression()), !dbg !13193
  call void @llvm.dbg.value(metadata i32 0, metadata !13191, metadata !DIExpression()), !dbg !13193
  call void @llvm.dbg.value(metadata i32 0, metadata !13192, metadata !DIExpression()), !dbg !13193
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !13194
  %4 = load i32, i32* %3, align 4, !dbg !13194
  %5 = lshr i32 %4, 4, !dbg !13194
  %6 = and i32 %5, 15, !dbg !13194
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !13194
  %8 = load i8, i8* %7, align 1, !dbg !13194
  %9 = zext i8 %8 to i32, !dbg !13194
  %10 = lshr i32 %0, %9, !dbg !13194
  call void @llvm.dbg.value(metadata i32 %10, metadata !13192, metadata !DIExpression()), !dbg !13193
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !13195
  %12 = icmp ult i32 %11, %10, !dbg !13197
  br i1 %12, label %13, label %16, !dbg !13198

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !13199
  call void @llvm.dbg.value(metadata i32 %14, metadata !13191, metadata !DIExpression()), !dbg !13193
  %15 = icmp eq i32 %14, 0, !dbg !13201
  br i1 %15, label %16, label %30, !dbg !13203

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.136() #26, !dbg !13204
  br label %17, !dbg !13206

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.137() #26, !dbg !13207
  %19 = icmp eq i32 %18, 1, !dbg !13208
  br i1 %19, label %20, label %17, !dbg !13206, !llvm.loop !13209

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !13211
  tail call fastcc void @LL_RCC_SetAHBPrescaler.138(i32 noundef %21) #26, !dbg !13212
  tail call fastcc void @LL_RCC_SetSysClkSource.139() #26, !dbg !13213
  br label %22, !dbg !13214

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.140() #26, !dbg !13215
  %24 = icmp eq i32 %23, 8, !dbg !13216
  br i1 %24, label %25, label %22, !dbg !13214, !llvm.loop !13217

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !13219
  %27 = load i32, i32* %26, align 4, !dbg !13219
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.141(i32 noundef %27) #26, !dbg !13220
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !13221
  %29 = load i32, i32* %28, align 4, !dbg !13221
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.142(i32 noundef %29) #26, !dbg !13222
  br label %30, !dbg !13223

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !13224
  %33 = icmp ugt i32 %32, %10, !dbg !13226
  br i1 %33, label %34, label %36, !dbg !13227

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !13228
  call void @llvm.dbg.value(metadata i32 %35, metadata !13191, metadata !DIExpression()), !dbg !13193
  br label %36, !dbg !13230

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !13193
  call void @llvm.dbg.value(metadata i32 %37, metadata !13191, metadata !DIExpression()), !dbg !13193
  %38 = icmp eq i32 %37, 0, !dbg !13231
  br i1 %38, label %39, label %40, !dbg !13233

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #26, !dbg !13234
  br label %40, !dbg !13236

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !13237
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.136() unnamed_addr #16 !dbg !13238 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13239
  %2 = or i32 %1, 16777216, !dbg !13239
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13239
  ret void, !dbg !13240
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.137() unnamed_addr #17 !dbg !13241 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13242
  %2 = lshr i32 %1, 25, !dbg !13243
  %3 = and i32 %2, 1, !dbg !13243
  ret i32 %3, !dbg !13244
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.138(i32 noundef %0) unnamed_addr #16 !dbg !13245 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13247, metadata !DIExpression()), !dbg !13248
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13249
  %3 = and i32 %2, -241, !dbg !13249
  %4 = or i32 %3, %0, !dbg !13249
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13249
  ret void, !dbg !13250
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.139() unnamed_addr #16 !dbg !13251 {
  call void @llvm.dbg.value(metadata i32 2, metadata !13253, metadata !DIExpression()), !dbg !13254
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13255
  %2 = and i32 %1, -4, !dbg !13255
  %3 = or i32 %2, 2, !dbg !13255
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13255
  ret void, !dbg !13256
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.140() unnamed_addr #17 !dbg !13257 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13258
  %2 = and i32 %1, 12, !dbg !13258
  ret i32 %2, !dbg !13259
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.141(i32 noundef %0) unnamed_addr #16 !dbg !13260 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13262, metadata !DIExpression()), !dbg !13263
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13264
  %3 = and i32 %2, -7169, !dbg !13264
  %4 = or i32 %3, %0, !dbg !13264
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13264
  ret void, !dbg !13265
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.142(i32 noundef %0) unnamed_addr #16 !dbg !13266 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13268, metadata !DIExpression()), !dbg !13269
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13270
  %3 = and i32 %2, -57345, !dbg !13270
  %4 = or i32 %3, %0, !dbg !13270
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13270
  ret void, !dbg !13271
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #17 !dbg !13272 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13273
  %2 = lshr i32 %1, 27, !dbg !13274
  %3 = and i32 %2, 1, !dbg !13274
  ret i32 %3, !dbg !13275
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #16 !dbg !13276 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13280, metadata !DIExpression()), !dbg !13286
  call void @llvm.dbg.value(metadata i32 %1, metadata !13281, metadata !DIExpression()), !dbg !13286
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !13282, metadata !DIExpression()), !dbg !13286
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !13283, metadata !DIExpression()), !dbg !13286
  call void @llvm.dbg.value(metadata i32 0, metadata !13284, metadata !DIExpression()), !dbg !13286
  call void @llvm.dbg.value(metadata i32 0, metadata !13285, metadata !DIExpression()), !dbg !13286
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !13287
  %6 = icmp eq i32 %5, 0, !dbg !13289
  br i1 %6, label %7, label %27, !dbg !13290

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #26, !dbg !13291
  call void @llvm.dbg.value(metadata i32 %8, metadata !13285, metadata !DIExpression()), !dbg !13286
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.143() #26, !dbg !13293
  %10 = icmp eq i32 %9, 1, !dbg !13295
  br i1 %10, label %19, label %11, !dbg !13296

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !13297
  br i1 %12, label %13, label %14, !dbg !13300

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #26, !dbg !13301
  br label %15, !dbg !13303

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.144() #26, !dbg !13304
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.145() #26, !dbg !13306
  br label %16, !dbg !13307

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.143() #26, !dbg !13308
  %18 = icmp eq i32 %17, 1, !dbg !13309
  br i1 %18, label %19, label %16, !dbg !13307, !llvm.loop !13310

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !13312
  %21 = load i32, i32* %20, align 4, !dbg !13312
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !13313
  %23 = load i32, i32* %22, align 4, !dbg !13313
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !13314
  %25 = load i32, i32* %24, align 4, !dbg !13314
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.135(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #26, !dbg !13315
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #26, !dbg !13316
  call void @llvm.dbg.value(metadata i32 %26, metadata !13284, metadata !DIExpression()), !dbg !13286
  br label %27, !dbg !13317

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !13318
  call void @llvm.dbg.value(metadata i32 %28, metadata !13284, metadata !DIExpression()), !dbg !13286
  ret i32 %28, !dbg !13319
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.143() unnamed_addr #17 !dbg !13320 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13321
  %2 = lshr i32 %1, 17, !dbg !13322
  %3 = and i32 %2, 1, !dbg !13322
  ret i32 %3, !dbg !13323
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #16 !dbg !13324 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13325
  %2 = or i32 %1, 262144, !dbg !13325
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13325
  ret void, !dbg !13326
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.144() unnamed_addr #16 !dbg !13327 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13328
  %2 = and i32 %1, -262145, !dbg !13328
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13328
  ret void, !dbg !13329
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.145() unnamed_addr #16 !dbg !13330 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13331
  %2 = or i32 %1, 65536, !dbg !13331
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13331
  ret void, !dbg !13332
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #22 !dbg !13333 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13336, metadata !DIExpression()), !dbg !13352
  call void @llvm.dbg.value(metadata i32 undef, metadata !13336, metadata !DIExpression()), !dbg !13352
  call void @llvm.dbg.value(metadata i32 undef, metadata !13336, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !13352
  ret void, !dbg !13353
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !13354 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13358, metadata !DIExpression()), !dbg !13360
  %2 = icmp eq i8* %0, null, !dbg !13361
  br i1 %2, label %29, label %3, !dbg !13363

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !13364
  %5 = icmp eq i8 %4, 0, !dbg !13365
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !13366
  br i1 %6, label %29, label %8, !dbg !13366

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13359, metadata !DIExpression()), !dbg !13360
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !13367

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !13359, metadata !DIExpression()), !dbg !13360
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #26, !dbg !13369
  br i1 %10, label %11, label %15, !dbg !13374

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !13375
  %13 = load i8*, i8** %12, align 4, !dbg !13375
  %14 = icmp eq i8* %13, %0, !dbg !13376
  br i1 %14, label %29, label %15, !dbg !13377

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !13378
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !13359, metadata !DIExpression()), !dbg !13360
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13379
  br i1 %17, label %7, label %8, !dbg !13380, !llvm.loop !13381

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !13359, metadata !DIExpression()), !dbg !13360
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #26, !dbg !13383
  br i1 %20, label %21, label %26, !dbg !13387

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !13388
  %23 = load i8*, i8** %22, align 4, !dbg !13388
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #27, !dbg !13389
  %25 = icmp eq i32 %24, 0, !dbg !13390
  br i1 %25, label %29, label %26, !dbg !13391

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !13392
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !13359, metadata !DIExpression()), !dbg !13360
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13393
  br i1 %28, label %29, label %18, !dbg !13367, !llvm.loop !13394

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !13360
  ret %struct.device* %30, !dbg !13396
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #4 !dbg !13397 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13401, metadata !DIExpression()), !dbg !13402
  %2 = icmp eq %struct.device* %0, null, !dbg !13403
  br i1 %2, label %14, label %3, !dbg !13405

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !13406
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !13406
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !13407
  %7 = load i8, i8* %6, align 1, !dbg !13407
  %8 = and i8 %7, 1, !dbg !13407
  %9 = icmp eq i8 %8, 0, !dbg !13407
  br i1 %9, label %14, label %10, !dbg !13408

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !13409
  %12 = load i8, i8* %11, align 1, !dbg !13409
  %13 = icmp eq i8 %12, 0, !dbg !13410
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !13402
  ret i1 %15, !dbg !13411
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #8 !dbg !13412 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !13417, metadata !DIExpression()), !dbg !13418
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !13419
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !13420
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13421 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13429, metadata !DIExpression()), !dbg !13434
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13430, metadata !DIExpression()), !dbg !13434
  call void @llvm.dbg.value(metadata i8* %2, metadata !13431, metadata !DIExpression()), !dbg !13434
  %5 = bitcast i32* %4 to i8*, !dbg !13435
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !13435
  call void @llvm.dbg.value(metadata i32 0, metadata !13432, metadata !DIExpression()), !dbg !13434
  store i32 0, i32* %4, align 4, !dbg !13436
  call void @llvm.dbg.value(metadata i32* %4, metadata !13432, metadata !DIExpression(DW_OP_deref)), !dbg !13434
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !13437
  call void @llvm.dbg.value(metadata i16* %6, metadata !13433, metadata !DIExpression()), !dbg !13434
  %7 = load i32, i32* %4, align 4, !dbg !13438
  call void @llvm.dbg.value(metadata i32 %7, metadata !13432, metadata !DIExpression()), !dbg !13434
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !13439
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !13440
  ret i32 %8, !dbg !13441
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !13442 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13446, metadata !DIExpression()), !dbg !13452
  call void @llvm.dbg.value(metadata i32* %1, metadata !13447, metadata !DIExpression()), !dbg !13452
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13453
  %4 = load i16*, i16** %3, align 4, !dbg !13453
  call void @llvm.dbg.value(metadata i16* %4, metadata !13448, metadata !DIExpression()), !dbg !13452
  %5 = icmp eq i16* %4, null, !dbg !13454
  br i1 %5, label %14, label %6, !dbg !13455

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !13456
  call void @llvm.dbg.value(metadata i32 %7, metadata !13449, metadata !DIExpression()), !dbg !13456
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !13457
  %9 = load i16, i16* %8, align 2, !dbg !13457
  %10 = add i16 %9, -32767, !dbg !13458
  %11 = icmp ult i16 %10, 2, !dbg !13458
  %12 = add i32 %7, 1, !dbg !13459
  call void @llvm.dbg.value(metadata i32 %12, metadata !13449, metadata !DIExpression()), !dbg !13456
  br i1 %11, label %13, label %6, !dbg !13458, !llvm.loop !13461

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !13464
  br label %14, !dbg !13465

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !13466
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !13467 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !13471, metadata !DIExpression()), !dbg !13482
  call void @llvm.dbg.value(metadata i32 %1, metadata !13472, metadata !DIExpression()), !dbg !13482
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !13473, metadata !DIExpression()), !dbg !13482
  call void @llvm.dbg.value(metadata i8* %3, metadata !13474, metadata !DIExpression()), !dbg !13482
  call void @llvm.dbg.value(metadata i32 0, metadata !13475, metadata !DIExpression()), !dbg !13483
  %5 = icmp eq i32 %1, 0, !dbg !13484
  br i1 %5, label %16, label %8, !dbg !13485

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !13475, metadata !DIExpression()), !dbg !13483
  %7 = icmp eq i32 %15, %1, !dbg !13484
  br i1 %7, label %16, label %8, !dbg !13485, !llvm.loop !13486

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !13475, metadata !DIExpression()), !dbg !13483
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !13488
  %11 = load i16, i16* %10, align 2, !dbg !13488
  call void @llvm.dbg.value(metadata i16 %11, metadata !13477, metadata !DIExpression()), !dbg !13489
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #26, !dbg !13490
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !13480, metadata !DIExpression()), !dbg !13489
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #27, !dbg !13491
  call void @llvm.dbg.value(metadata i32 %13, metadata !13481, metadata !DIExpression()), !dbg !13489
  %14 = icmp slt i32 %13, 0, !dbg !13492
  %15 = add nuw i32 %9, 1, !dbg !13494
  call void @llvm.dbg.value(metadata i32 %15, metadata !13475, metadata !DIExpression()), !dbg !13483
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !13495
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #5 !dbg !13496 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !13500, metadata !DIExpression()), !dbg !13503
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !13501, metadata !DIExpression()), !dbg !13503
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !13502, metadata !DIExpression()), !dbg !13503
  %2 = sext i16 %0 to i32, !dbg !13504
  %3 = icmp slt i16 %0, 1, !dbg !13506
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !13507
  %6 = add nsw i32 %2, -1, !dbg !13507
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !13507
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !13507
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !13501, metadata !DIExpression()), !dbg !13503
  ret %struct.device* %8, !dbg !13508
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13509 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13511, metadata !DIExpression()), !dbg !13516
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13512, metadata !DIExpression()), !dbg !13516
  call void @llvm.dbg.value(metadata i8* %2, metadata !13513, metadata !DIExpression()), !dbg !13516
  %5 = bitcast i32* %4 to i8*, !dbg !13517
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !13517
  call void @llvm.dbg.value(metadata i32 0, metadata !13514, metadata !DIExpression()), !dbg !13516
  store i32 0, i32* %4, align 4, !dbg !13518
  call void @llvm.dbg.value(metadata i32* %4, metadata !13514, metadata !DIExpression(DW_OP_deref)), !dbg !13516
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !13519
  call void @llvm.dbg.value(metadata i16* %6, metadata !13515, metadata !DIExpression()), !dbg !13516
  %7 = load i32, i32* %4, align 4, !dbg !13520
  call void @llvm.dbg.value(metadata i32 %7, metadata !13514, metadata !DIExpression()), !dbg !13516
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !13521
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !13522
  ret i32 %8, !dbg !13523
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !13524 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13526, metadata !DIExpression()), !dbg !13531
  call void @llvm.dbg.value(metadata i32* %1, metadata !13527, metadata !DIExpression()), !dbg !13531
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13532
  %4 = load i16*, i16** %3, align 4, !dbg !13532
  call void @llvm.dbg.value(metadata i16* %4, metadata !13528, metadata !DIExpression()), !dbg !13531
  call void @llvm.dbg.value(metadata i32 0, metadata !13529, metadata !DIExpression()), !dbg !13531
  call void @llvm.dbg.value(metadata i32 0, metadata !13530, metadata !DIExpression()), !dbg !13531
  %5 = icmp eq i16* %4, null, !dbg !13533
  br i1 %5, label %22, label %6, !dbg !13535

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !13529, metadata !DIExpression()), !dbg !13531
  call void @llvm.dbg.value(metadata i16* %8, metadata !13528, metadata !DIExpression()), !dbg !13531
  %9 = load i16, i16* %8, align 2, !dbg !13536
  %10 = icmp eq i16 %9, -32768, !dbg !13540
  call void @llvm.dbg.value(metadata i32 undef, metadata !13529, metadata !DIExpression()), !dbg !13531
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !13541
  call void @llvm.dbg.value(metadata i16* %11, metadata !13528, metadata !DIExpression()), !dbg !13531
  %12 = zext i1 %10 to i32, !dbg !13542
  %13 = add i32 %7, %12, !dbg !13542
  call void @llvm.dbg.value(metadata i32 %13, metadata !13529, metadata !DIExpression()), !dbg !13531
  %14 = icmp eq i32 %13, 2, !dbg !13543
  br i1 %14, label %15, label %6, !dbg !13544

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !13531
  call void @llvm.dbg.value(metadata i32 %16, metadata !13530, metadata !DIExpression()), !dbg !13531
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !13545
  %18 = load i16, i16* %17, align 2, !dbg !13545
  %19 = icmp eq i16 %18, 32767, !dbg !13546
  %20 = add i32 %16, 1, !dbg !13547
  call void @llvm.dbg.value(metadata i32 %20, metadata !13530, metadata !DIExpression()), !dbg !13531
  br i1 %19, label %21, label %15, !dbg !13549, !llvm.loop !13550

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !13552
  br label %22, !dbg !13553

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !13554
  call void @llvm.dbg.value(metadata i16* %23, metadata !13528, metadata !DIExpression()), !dbg !13531
  ret i16* %23, !dbg !13555
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #4 !dbg !13556 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13559
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !13560
  ret i32* %2, !dbg !13561
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #5 !dbg !13562 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13710, metadata !DIExpression()), !dbg !13713
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !13711, metadata !DIExpression()), !dbg !13713
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13712, metadata !DIExpression()), !dbg !13713
  ret void, !dbg !13714
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !13715 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13719, metadata !DIExpression()), !dbg !13721
  call void @llvm.dbg.value(metadata i32 %1, metadata !13720, metadata !DIExpression()), !dbg !13721
  ret void, !dbg !13722
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !13723 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13727, metadata !DIExpression()), !dbg !13729
  call void @llvm.dbg.value(metadata i32 %1, metadata !13728, metadata !DIExpression()), !dbg !13729
  ret void, !dbg !13730
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #5 !dbg !13731 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13735, metadata !DIExpression()), !dbg !13737
  call void @llvm.dbg.value(metadata i8* %1, metadata !13736, metadata !DIExpression()), !dbg !13737
  ret i32 -134, !dbg !13738
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #5 !dbg !13739 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13743, metadata !DIExpression()), !dbg !13745
  call void @llvm.dbg.value(metadata i8* %1, metadata !13744, metadata !DIExpression()), !dbg !13745
  ret i32 -134, !dbg !13746
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !13747 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13750, metadata !DIExpression()), !dbg !13751
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13752, !srcloc !13758
  call void @llvm.dbg.value(metadata i32 undef, metadata !13755, metadata !DIExpression()) #25, !dbg !13759
  call void @llvm.dbg.value(metadata i32 undef, metadata !13756, metadata !DIExpression()) #25, !dbg !13759
  br label %3, !dbg !13760

3:                                                ; preds = %3, %1
  br label %3, !dbg !13761, !llvm.loop !13764
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13767 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13771, metadata !DIExpression()), !dbg !13773
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13772, metadata !DIExpression()), !dbg !13773
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.150, i32 0, i32 0), i32 noundef 69) #27, !dbg !13774
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !13779
  unreachable, !dbg !13779
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !13780 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13782, metadata !DIExpression()), !dbg !13783
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !13784
  unreachable, !dbg !13784
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13785 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13787, metadata !DIExpression()), !dbg !13791
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13788, metadata !DIExpression()), !dbg !13791
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13792, !srcloc !13758
  call void @llvm.dbg.value(metadata i32 undef, metadata !13755, metadata !DIExpression()) #25, !dbg !13794
  call void @llvm.dbg.value(metadata i32 undef, metadata !13756, metadata !DIExpression()) #25, !dbg !13794
  call void @llvm.dbg.value(metadata i32 undef, metadata !13789, metadata !DIExpression()), !dbg !13791
  %4 = tail call fastcc %struct.k_thread* @k_current_get.153() #28, !dbg !13795
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13790, metadata !DIExpression()), !dbg !13791
  %5 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #26, !dbg !13796
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.154, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %5, i32 noundef 0) #27, !dbg !13796
  %6 = icmp eq %struct.__esf* %1, null, !dbg !13801
  br i1 %6, label %15, label %7, !dbg !13803

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13804, metadata !DIExpression()), !dbg !13809
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !13811
  %9 = load i32, i32* %8, align 4, !dbg !13811
  %10 = and i32 %9, 511, !dbg !13812
  %11 = icmp eq i32 %10, 0, !dbg !13813
  br i1 %11, label %13, label %12, !dbg !13814

12:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.155, i32 0, i32 0), i32 noundef 69) #27, !dbg !13815
  br label %13, !dbg !13821

13:                                               ; preds = %7, %12
  %14 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #26, !dbg !13822
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.156, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %14) #27, !dbg !13822
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #26, !dbg !13827
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13804, metadata !DIExpression()), !dbg !13828
  br label %17, !dbg !13833

15:                                               ; preds = %2
  %16 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #26, !dbg !13822
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.156, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %16) #27, !dbg !13822
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #26, !dbg !13827
  br label %17, !dbg !13834

17:                                               ; preds = %15, %13
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !13792
  call void @llvm.dbg.value(metadata i32 %18, metadata !13755, metadata !DIExpression()) #25, !dbg !13794
  call void @llvm.dbg.value(metadata i32 %18, metadata !13789, metadata !DIExpression()), !dbg !13791
  call void @llvm.dbg.value(metadata i32 undef, metadata !13835, metadata !DIExpression()) #25, !dbg !13838
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #25, !dbg !13840, !srcloc !13841
  tail call fastcc void @k_thread_abort.157(%struct.k_thread* noundef %4) #26, !dbg !13842
  ret void, !dbg !13845
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.153() unnamed_addr #11 !dbg !13846 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.165() #28, !dbg !13850
  ret %struct.k_thread* %1, !dbg !13851
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #5 !dbg !13852 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13856, metadata !DIExpression()), !dbg !13857
  %2 = icmp ult i32 %0, 5, !dbg !13858
  br i1 %2, label %3, label %6, !dbg !13858

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !13858
  %5 = load i8*, i8** %4, align 4, !dbg !13858
  br label %6, !dbg !13858

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.159, i32 0, i32 0), %1 ], !dbg !13859
  ret i8* %7, !dbg !13861
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13862 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13866, metadata !DIExpression()), !dbg !13868
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !13869
  br i1 %2, label %9, label %3, !dbg !13870

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #27, !dbg !13871
  call void @llvm.dbg.value(metadata i8* %4, metadata !13867, metadata !DIExpression()), !dbg !13868
  %5 = icmp eq i8* %4, null, !dbg !13872
  br i1 %5, label %9, label %6, !dbg !13874

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !13875
  %8 = icmp eq i8 %7, 0, !dbg !13876
  br i1 %8, label %9, label %10, !dbg !13877

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.158, i32 0, i32 0), metadata !13867, metadata !DIExpression()), !dbg !13868
  br label %10, !dbg !13878

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.158, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !13868
  call void @llvm.dbg.value(metadata i8* %11, metadata !13867, metadata !DIExpression()), !dbg !13868
  ret i8* %11, !dbg !13880
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.157(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13881 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13885, metadata !DIExpression()), !dbg !13886
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !13887, !srcloc !13889
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !13890
  ret void, !dbg !13891
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.165() unnamed_addr #11 !dbg !13892 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !13893, !srcloc !13895
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !13896
  ret %struct.k_thread* %1, !dbg !13897
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13898 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13902, metadata !DIExpression()), !dbg !13905
  call void @llvm.dbg.value(metadata i32 %1, metadata !13903, metadata !DIExpression()), !dbg !13905
  call void @llvm.dbg.value(metadata i32 %2, metadata !13904, metadata !DIExpression()), !dbg !13905
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #27, !dbg !13906
  ret void, !dbg !13907
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13908 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13912, metadata !DIExpression()), !dbg !13915
  call void @llvm.dbg.value(metadata i8* %1, metadata !13913, metadata !DIExpression()), !dbg !13915
  call void @llvm.dbg.value(metadata i32 %2, metadata !13914, metadata !DIExpression()), !dbg !13915
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #27, !dbg !13916
  ret void, !dbg !13917
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !13918 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #26, !dbg !13919
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__ccm_bss_end to i32), i32 ptrtoint ([0 x i8]* @__ccm_bss_start to i32))) #26, !dbg !13920
  ret void, !dbg !13921
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !13922 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13924, metadata !DIExpression()), !dbg !13925
  tail call fastcc void @init_idle_thread(i32 noundef %0) #26, !dbg !13926
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13927
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !13928
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !13929
  %4 = trunc i32 %0 to i8, !dbg !13930
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !13931
  store i8 %4, i8* %5, align 4, !dbg !13932
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !13933
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #26, !dbg !13934
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !13935
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !13936
  store i8* %8, i8** %9, align 4, !dbg !13937
  ret void, !dbg !13938
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !13939 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13941, metadata !DIExpression()), !dbg !13947
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13948
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13942, metadata !DIExpression()), !dbg !13947
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !13949
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !13943, metadata !DIExpression()), !dbg !13947
  call void @llvm.dbg.value(metadata i8* null, metadata !13946, metadata !DIExpression()), !dbg !13947
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !13950
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !13951
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #27, !dbg !13952
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #26, !dbg !13953
  ret void, !dbg !13954
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #5 !dbg !13955 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13959, metadata !DIExpression()), !dbg !13960
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !13961
  ret i8* %2, !dbg !13962
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !13963 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13968, metadata !DIExpression()), !dbg !13969
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13970
  %3 = load i8, i8* %2, align 1, !dbg !13971
  %4 = and i8 %3, -5, !dbg !13971
  store i8 %4, i8* %2, align 1, !dbg !13971
  ret void, !dbg !13972
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #10 !dbg !13973 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #26, !dbg !13976
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #27, !dbg !13977
  %3 = ptrtoint i8* %2 to i32, !dbg !13986
  %4 = add i32 %3, 2048, !dbg !13987
  call void @llvm.dbg.value(metadata i32 %4, metadata !13981, metadata !DIExpression()) #25, !dbg !13988
  call void @llvm.dbg.value(metadata i32 %4, metadata !13989, metadata !DIExpression()) #25, !dbg !13992
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #25, !dbg !13994, !srcloc !13995
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13996
  %6 = or i32 %5, 512, !dbg !13996
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13996
  tail call fastcc void @__NVIC_SetPriority.174(i32 noundef -2, i32 noundef 255) #27, !dbg !13997
  tail call fastcc void @__NVIC_SetPriority.174(i32 noundef -5, i32 noundef 0) #27, !dbg !14000
  tail call fastcc void @__NVIC_SetPriority.174(i32 noundef -12, i32 noundef 0) #27, !dbg !14001
  tail call fastcc void @__NVIC_SetPriority.174(i32 noundef -11, i32 noundef 0) #27, !dbg !14002
  tail call fastcc void @__NVIC_SetPriority.174(i32 noundef -10, i32 noundef 0) #27, !dbg !14003
  tail call fastcc void @__NVIC_SetPriority.174(i32 noundef -4, i32 noundef 0) #27, !dbg !14004
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !14005
  %8 = or i32 %7, 458752, !dbg !14005
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !14005
  tail call void @z_arm_fault_init() #27, !dbg !14006
  tail call void @z_arm_cpu_idle_init() #27, !dbg !14007
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !14008
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !14011
  %9 = tail call i32 @z_arm_mpu_init() #27, !dbg !14012
  tail call void @z_arm_configure_static_mpu_regions() #27, !dbg !14013
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !14014
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #25, !dbg !14014
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !13975, metadata !DIExpression()), !dbg !14015
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #26, !dbg !14016
  call void @z_device_state_init() #27, !dbg !14017
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #26, !dbg !14018
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #26, !dbg !14019
  %11 = call fastcc i8* @prepare_multithreading() #26, !dbg !14020
  call fastcc void @switch_to_main_thread(i8* noundef %11) #31, !dbg !14021
  unreachable, !dbg !14021
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2161 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2165, metadata !DIExpression()), !dbg !14022
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !14023
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !14023
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2166, metadata !DIExpression()), !dbg !14022
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2166, metadata !DIExpression()), !dbg !14022
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !14024
  br i1 %7, label %8, label %35, !dbg !14025

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2166, metadata !DIExpression()), !dbg !14022
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !14026
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !14026
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2176, metadata !DIExpression()), !dbg !14027
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !14028
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !14028
  %14 = tail call i32 %13(%struct.device* noundef %11) #27, !dbg !14029
  call void @llvm.dbg.value(metadata i32 %14, metadata !2180, metadata !DIExpression()), !dbg !14027
  %15 = icmp eq %struct.device* %11, null, !dbg !14030
  br i1 %15, label %32, label %16, !dbg !14032

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !14033
  br i1 %17, label %26, label %18, !dbg !14036

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !14037
  call void @llvm.dbg.value(metadata i32 %19, metadata !2180, metadata !DIExpression()), !dbg !14027
  %20 = icmp ult i32 %19, 255, !dbg !14039
  %21 = select i1 %20, i32 %19, i32 255, !dbg !14039
  call void @llvm.dbg.value(metadata i32 %21, metadata !2180, metadata !DIExpression()), !dbg !14027
  %22 = trunc i32 %21 to i8, !dbg !14040
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !14041
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !14041
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !14042
  store i8 %22, i8* %25, align 1, !dbg !14043
  br label %26, !dbg !14044

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !14045
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !14045
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !14046
  %30 = load i8, i8* %29, align 1, !dbg !14047
  %31 = or i8 %30, 1, !dbg !14047
  store i8 %31, i8* %29, align 1, !dbg !14047
  br label %32, !dbg !14048

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !14049
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2166, metadata !DIExpression()), !dbg !14022
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !14024
  br i1 %34, label %8, label %35, !dbg !14025, !llvm.loop !14050

35:                                               ; preds = %32, %1
  ret void, !dbg !14052
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.174(i32 noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !14053 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14055, metadata !DIExpression()), !dbg !14057
  call void @llvm.dbg.value(metadata i32 %1, metadata !14056, metadata !DIExpression()), !dbg !14057
  %3 = trunc i32 %1 to i8, !dbg !14058
  %4 = shl i8 %3, 4, !dbg !14058
  %5 = and i32 %0, 15, !dbg !14061
  %6 = add nsw i32 %5, -4, !dbg !14062
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !14063
  store volatile i8 %4, i8* %7, align 1, !dbg !14064
  ret void, !dbg !14065
}

; Function Attrs: optsize
declare !dbg !14066 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14067 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14070, metadata !DIExpression()), !dbg !14071
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14072
  store i8 1, i8* %2, align 1, !dbg !14073
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !14074
  store i8 1, i8* %3, align 4, !dbg !14075
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !14076
  store i32 0, i32* %4, align 4, !dbg !14077
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !14078
  store i32 0, i32* %5, align 4, !dbg !14079
  tail call void @k_thread_system_pool_assign(%struct.k_thread* noundef %0) #27, !dbg !14080
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14081
  ret void, !dbg !14082
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !14083 {
  tail call void @z_sched_init() #27, !dbg !14088
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14089
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.175, i32 0, i32 0)) #27, !dbg !14090
  call void @llvm.dbg.value(metadata i8* %1, metadata !14087, metadata !DIExpression()), !dbg !14091
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !14092
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #27, !dbg !14093
  tail call void @z_init_cpu(i32 noundef 0) #26, !dbg !14094
  ret i8* %1, !dbg !14095
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #10 !dbg !14096 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14100, metadata !DIExpression()), !dbg !14101
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #27, !dbg !14102
  unreachable, !dbg !14103
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !14104 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14106, metadata !DIExpression()), !dbg !14109
  call void @llvm.dbg.value(metadata i8* %1, metadata !14107, metadata !DIExpression()), !dbg !14109
  call void @llvm.dbg.value(metadata i8* %2, metadata !14108, metadata !DIExpression()), !dbg !14109
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !14110
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #26, !dbg !14111
  tail call void @boot_banner() #27, !dbg !14112
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #26, !dbg !14113
  tail call void @z_init_static_threads() #27, !dbg !14114
  tail call void @main() #27, !dbg !14115
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !14116
  %5 = and i8 %4, -2, !dbg !14116
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !14116
  ret void, !dbg !14117
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #5 !dbg !14118 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !14128, metadata !DIExpression()), !dbg !14130
  call void @llvm.dbg.value(metadata i8* %1, metadata !14129, metadata !DIExpression()), !dbg !14130
  ret void, !dbg !14131
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #5 !dbg !14132 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !14134, metadata !DIExpression()), !dbg !14136
  call void @llvm.dbg.value(metadata i8* %1, metadata !14135, metadata !DIExpression()), !dbg !14136
  ret void, !dbg !14137
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !14138 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !14139, !srcloc !14146
  call void @llvm.dbg.value(metadata i32 %1, metadata !14142, metadata !DIExpression()) #25, !dbg !14147
  %2 = icmp ne i32 %1, 0, !dbg !14148
  ret i1 %2, !dbg !14149
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #9 !dbg !14150 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14151
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14152
  %3 = load i8, i8* %2, align 4, !dbg !14153
  %4 = or i8 %3, 1, !dbg !14153
  store i8 %4, i8* %2, align 4, !dbg !14153
  ret void, !dbg !14154
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #9 !dbg !14155 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14156
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14157
  %3 = load i8, i8* %2, align 4, !dbg !14158
  %4 = and i8 %3, -2, !dbg !14158
  store i8 %4, i8* %2, align 4, !dbg !14158
  ret void, !dbg !14159
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #4 !dbg !14160 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14161
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14162
  %3 = load i8, i8* %2, align 4, !dbg !14162
  %4 = and i8 %3, 1, !dbg !14163
  %5 = icmp ne i8 %4, 0, !dbg !14164
  ret i1 %5, !dbg !14165
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #5 !dbg !14166 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14170, metadata !DIExpression()), !dbg !14172
  call void @llvm.dbg.value(metadata i8* %1, metadata !14171, metadata !DIExpression()), !dbg !14172
  ret i32 -88, !dbg !14173
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #5 !dbg !14174 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14178, metadata !DIExpression()), !dbg !14179
  ret i8* null, !dbg !14180
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #5 !dbg !14181 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14185, metadata !DIExpression()), !dbg !14188
  call void @llvm.dbg.value(metadata i8* %1, metadata !14186, metadata !DIExpression()), !dbg !14188
  call void @llvm.dbg.value(metadata i32 %2, metadata !14187, metadata !DIExpression()), !dbg !14188
  ret i32 -88, !dbg !14189
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2189 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2303, metadata !DIExpression()), !dbg !14190
  call void @llvm.dbg.value(metadata i8* %1, metadata !2304, metadata !DIExpression()), !dbg !14190
  call void @llvm.dbg.value(metadata i32 %2, metadata !2305, metadata !DIExpression()), !dbg !14190
  call void @llvm.dbg.value(metadata i32 0, metadata !2306, metadata !DIExpression()), !dbg !14190
  call void @llvm.dbg.value(metadata i8 undef, metadata !2308, metadata !DIExpression()), !dbg !14190
  %4 = icmp eq i8* %1, null, !dbg !14191
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !14193
  br i1 %6, label %46, label %7, !dbg !14193

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14194
  %9 = load i8, i8* %8, align 1, !dbg !14194
  call void @llvm.dbg.value(metadata i8 %9, metadata !2308, metadata !DIExpression()), !dbg !14190
  %10 = add i32 %2, -1, !dbg !14195
  call void @llvm.dbg.value(metadata i32 %10, metadata !2305, metadata !DIExpression()), !dbg !14190
  call void @llvm.dbg.value(metadata i8 0, metadata !2309, metadata !DIExpression()), !dbg !14196
  call void @llvm.dbg.value(metadata i8 %9, metadata !2308, metadata !DIExpression()), !dbg !14190
  call void @llvm.dbg.value(metadata i32 0, metadata !2306, metadata !DIExpression()), !dbg !14190
  %11 = icmp eq i8 %9, 0, !dbg !14197
  br i1 %11, label %12, label %15, !dbg !14199

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !14200
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !14201
  store i8 0, i8* %14, align 1, !dbg !14202
  br label %46, !dbg !14203

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2309, metadata !DIExpression()), !dbg !14196
  call void @llvm.dbg.value(metadata i8 %17, metadata !2308, metadata !DIExpression()), !dbg !14190
  call void @llvm.dbg.value(metadata i32 %18, metadata !2306, metadata !DIExpression()), !dbg !14190
  %19 = zext i8 %17 to i32, !dbg !14204
  %20 = zext i8 %16 to i32, !dbg !14205
  %21 = shl nuw i32 1, %20, !dbg !14205
  call void @llvm.dbg.value(metadata i32 %21, metadata !2307, metadata !DIExpression()), !dbg !14190
  %22 = and i32 %21, %19, !dbg !14207
  %23 = icmp eq i32 %22, 0, !dbg !14209
  br i1 %23, label %42, label %24, !dbg !14210

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !14211
  %26 = sub i32 %10, %18, !dbg !14212
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !14213
  %28 = load i8*, i8** %27, align 4, !dbg !14213
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !14214
  %30 = load i32, i32* %29, align 4, !dbg !14214
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #26, !dbg !14215
  %32 = add i32 %31, %18, !dbg !14216
  call void @llvm.dbg.value(metadata i32 %32, metadata !2306, metadata !DIExpression()), !dbg !14190
  %33 = trunc i32 %21 to i8, !dbg !14217
  %34 = xor i8 %33, -1, !dbg !14217
  %35 = and i8 %17, %34, !dbg !14217
  call void @llvm.dbg.value(metadata i8 %35, metadata !2308, metadata !DIExpression()), !dbg !14190
  %36 = icmp eq i8 %35, 0, !dbg !14218
  br i1 %36, label %12, label %37, !dbg !14220

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !14221
  %39 = sub i32 %10, %32, !dbg !14223
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.178, i32 0, i32 0), i32 noundef 1) #26, !dbg !14224
  %41 = add i32 %40, %32, !dbg !14225
  call void @llvm.dbg.value(metadata i32 %41, metadata !2306, metadata !DIExpression()), !dbg !14190
  br label %42, !dbg !14226

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !14190
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !14190
  call void @llvm.dbg.value(metadata i8 %44, metadata !2308, metadata !DIExpression()), !dbg !14190
  call void @llvm.dbg.value(metadata i32 %43, metadata !2306, metadata !DIExpression()), !dbg !14190
  %45 = add i8 %16, 1, !dbg !14227
  call void @llvm.dbg.value(metadata i8 %45, metadata !2309, metadata !DIExpression()), !dbg !14196
  br label %15, !dbg !14199

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.179, i32 0, i32 0), %3 ], !dbg !14190
  ret i8* %47, !dbg !14228
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !14229 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14233, metadata !DIExpression()), !dbg !14238
  call void @llvm.dbg.value(metadata i32 %1, metadata !14234, metadata !DIExpression()), !dbg !14238
  call void @llvm.dbg.value(metadata i8* %2, metadata !14235, metadata !DIExpression()), !dbg !14238
  call void @llvm.dbg.value(metadata i32 %3, metadata !14236, metadata !DIExpression()), !dbg !14238
  %5 = icmp ult i32 %1, %3, !dbg !14239
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !14239
  call void @llvm.dbg.value(metadata i32 %6, metadata !14237, metadata !DIExpression()), !dbg !14238
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #27, !dbg !14240
  ret i32 %6, !dbg !14241
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14242 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14246, metadata !DIExpression()), !dbg !14247
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #27, !dbg !14248
  ret void, !dbg !14249
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !14250 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14259, metadata !DIExpression()), !dbg !14270
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14260, metadata !DIExpression()), !dbg !14270
  call void @llvm.dbg.value(metadata i32 %2, metadata !14261, metadata !DIExpression()), !dbg !14270
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14262, metadata !DIExpression()), !dbg !14270
  call void @llvm.dbg.value(metadata i8* %4, metadata !14263, metadata !DIExpression()), !dbg !14270
  call void @llvm.dbg.value(metadata i8* %5, metadata !14264, metadata !DIExpression()), !dbg !14270
  call void @llvm.dbg.value(metadata i8* %6, metadata !14265, metadata !DIExpression()), !dbg !14270
  call void @llvm.dbg.value(metadata i32 %7, metadata !14266, metadata !DIExpression()), !dbg !14270
  call void @llvm.dbg.value(metadata i32 %8, metadata !14267, metadata !DIExpression()), !dbg !14270
  call void @llvm.dbg.value(metadata i8* undef, metadata !14268, metadata !DIExpression()), !dbg !14270
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14271
  tail call fastcc void @z_waitq_init(%struct._wait_q_t* noundef nonnull %11) #26, !dbg !14272
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !14273
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #26, !dbg !14274
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #26, !dbg !14275
  call void @llvm.dbg.value(metadata i8* %13, metadata !14269, metadata !DIExpression()), !dbg !14270
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #27, !dbg !14276
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !14277
  store i8* null, i8** %14, align 4, !dbg !14278
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14279
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !14279
  br i1 %16, label %20, label %17, !dbg !14281

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !14282
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !14282
  br label %20, !dbg !14283

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !14270
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !14284
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !14286
  ret i8* %13, !dbg !14287
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%struct._wait_q_t* noundef %0) unnamed_addr #8 !dbg !14288 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14293, metadata !DIExpression()), !dbg !14294
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !14295
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #26, !dbg !14296
  ret void, !dbg !14297
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #8 !dbg !14298 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14303, metadata !DIExpression()), !dbg !14307
  call void @llvm.dbg.value(metadata i32 %1, metadata !14304, metadata !DIExpression()), !dbg !14307
  call void @llvm.dbg.value(metadata i32 %2, metadata !14305, metadata !DIExpression()), !dbg !14307
  call void @llvm.dbg.value(metadata i32 %3, metadata !14306, metadata !DIExpression()), !dbg !14307
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !14308
  store %struct._wait_q_t* null, %struct._wait_q_t** %5, align 8, !dbg !14309
  %6 = trunc i32 %3 to i8, !dbg !14310
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !14311
  store i8 %6, i8* %7, align 4, !dbg !14312
  %8 = trunc i32 %2 to i8, !dbg !14313
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !14314
  store i8 %8, i8* %9, align 1, !dbg !14315
  %10 = trunc i32 %1 to i8, !dbg !14316
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !14317
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !14317
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !14317
  store i8 %10, i8* %13, align 2, !dbg !14318
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !14319
  store i8 0, i8* %14, align 1, !dbg !14320
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #26, !dbg !14321
  ret void, !dbg !14322
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !14323 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14327, metadata !DIExpression()), !dbg !14335
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14328, metadata !DIExpression()), !dbg !14335
  call void @llvm.dbg.value(metadata i32 %2, metadata !14329, metadata !DIExpression()), !dbg !14335
  call void @llvm.dbg.value(metadata i32 0, metadata !14334, metadata !DIExpression()), !dbg !14335
  %4 = add i32 %2, 7, !dbg !14336
  %5 = and i32 %4, -8, !dbg !14336
  %6 = add i32 %5, 64, !dbg !14336
  call void @llvm.dbg.value(metadata i32 %6, metadata !14330, metadata !DIExpression()), !dbg !14335
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.189(%struct.z_thread_stack_element* noundef %1) #26, !dbg !14338
  call void @llvm.dbg.value(metadata i8* %7, metadata !14333, metadata !DIExpression()), !dbg !14335
  call void @llvm.dbg.value(metadata i32 %5, metadata !14331, metadata !DIExpression()), !dbg !14335
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !14339
  call void @llvm.dbg.value(metadata i8* %8, metadata !14332, metadata !DIExpression()), !dbg !14335
  call void @llvm.dbg.value(metadata i32 0, metadata !14334, metadata !DIExpression()), !dbg !14335
  %9 = ptrtoint i8* %7 to i32, !dbg !14340
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !14341
  store i32 %9, i32* %10, align 4, !dbg !14342
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !14343
  store i32 %5, i32* %11, align 4, !dbg !14344
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !14345
  store i32 0, i32* %12, align 4, !dbg !14346
  call void @llvm.dbg.value(metadata i8* %8, metadata !14332, metadata !DIExpression()), !dbg !14335
  ret i8* %8, !dbg !14347
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.189(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #5 !dbg !14348 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14352, metadata !DIExpression()), !dbg !14353
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14354
  ret i8* %2, !dbg !14355
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #8 !dbg !14356 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14361, metadata !DIExpression()), !dbg !14362
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !14363
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !14364
  ret void, !dbg !14365
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #8 !dbg !14366 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14368, metadata !DIExpression()), !dbg !14369
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14370
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #26, !dbg !14371
  ret void, !dbg !14372
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #8 !dbg !14373 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14377, metadata !DIExpression()), !dbg !14378
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14379
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14380
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14381
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14382
  ret void, !dbg !14383
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !14384 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14389, metadata !DIExpression()), !dbg !14390
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14391
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14392
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14393
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14394
  ret void, !dbg !14395
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !14396 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !14413, metadata !DIExpression()), !dbg !14414
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14404, metadata !DIExpression()), !dbg !14414
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14405, metadata !DIExpression()), !dbg !14414
  call void @llvm.dbg.value(metadata i32 %2, metadata !14406, metadata !DIExpression()), !dbg !14414
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14407, metadata !DIExpression()), !dbg !14414
  call void @llvm.dbg.value(metadata i8* %4, metadata !14408, metadata !DIExpression()), !dbg !14414
  call void @llvm.dbg.value(metadata i8* %5, metadata !14409, metadata !DIExpression()), !dbg !14414
  call void @llvm.dbg.value(metadata i8* %6, metadata !14410, metadata !DIExpression()), !dbg !14414
  call void @llvm.dbg.value(metadata i32 %7, metadata !14411, metadata !DIExpression()), !dbg !14414
  call void @llvm.dbg.value(metadata i32 %8, metadata !14412, metadata !DIExpression()), !dbg !14414
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #26, !dbg !14415
  %13 = icmp eq i64 %11, -1, !dbg !14416
  br i1 %13, label %15, label %14, !dbg !14418

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #26, !dbg !14419
  br label %15, !dbg !14421

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !14422
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14423 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14428, metadata !DIExpression()), !dbg !14429
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14427, metadata !DIExpression()), !dbg !14429
  %4 = icmp eq i64 %3, 0, !dbg !14430
  br i1 %4, label %5, label %6, !dbg !14432

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !14433
  br label %7, !dbg !14435

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !14436
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !14438
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14439 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14443, metadata !DIExpression()), !dbg !14444
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !14445, !srcloc !14447
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !14448
  ret void, !dbg !14449
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14450 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14453, metadata !DIExpression()), !dbg !14454
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14452, metadata !DIExpression()), !dbg !14454
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14455
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #27, !dbg !14456
  ret void, !dbg !14457
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !14458 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14460, metadata !DIExpression()), !dbg !14479
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !14480

1:                                                ; preds = %2
  tail call void @k_sched_lock() #27, !dbg !14481
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14477, metadata !DIExpression()), !dbg !14482
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !14483

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !14460, metadata !DIExpression()), !dbg !14479
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !14484
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !14484
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !14487
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !14487
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !14488
  %9 = load i32, i32* %8, align 4, !dbg !14488
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !14489
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !14489
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !14490
  %13 = load i8*, i8** %12, align 4, !dbg !14490
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !14491
  %15 = load i8*, i8** %14, align 4, !dbg !14491
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !14492
  %17 = load i8*, i8** %16, align 4, !dbg !14492
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !14493
  %19 = load i32, i32* %18, align 4, !dbg !14493
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !14494
  %21 = load i32, i32* %20, align 4, !dbg !14494
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #26, !dbg !14495
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !14496
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !14497
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !14498
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !14498
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !14499
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !14460, metadata !DIExpression()), !dbg !14479
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14500
  br i1 %27, label %2, label %1, !dbg !14480, !llvm.loop !14502

28:                                               ; preds = %0
  tail call void @k_sched_lock() #27, !dbg !14481
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14477, metadata !DIExpression()), !dbg !14482
  br label %29, !dbg !14483

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #27, !dbg !14504
  ret void, !dbg !14505

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !14477, metadata !DIExpression()), !dbg !14482
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !14506
  %33 = load i32, i32* %32, align 4, !dbg !14506
  %34 = icmp eq i32 %33, -1, !dbg !14510
  br i1 %34, label %43, label %35, !dbg !14511

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !14512
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !14512
  %38 = icmp sgt i32 %33, 0, !dbg !14514
  %39 = select i1 %38, i32 %33, i32 0, !dbg !14514
  %40 = zext i32 %39 to i64, !dbg !14514
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64.192(i64 noundef %40) #26, !dbg !14514
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !14515
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #26, !dbg !14515
  br label %43, !dbg !14516

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !14517
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !14477, metadata !DIExpression()), !dbg !14482
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14518
  br i1 %45, label %30, label %29, !dbg !14483, !llvm.loop !14520
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.192(i64 noundef %0) unnamed_addr #5 !dbg !14522 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14524, metadata !DIExpression()), !dbg !14525
  call void @llvm.dbg.value(metadata i64 %0, metadata !14526, metadata !DIExpression()), !dbg !14541
  call void @llvm.dbg.value(metadata i32 1000, metadata !14529, metadata !DIExpression()), !dbg !14541
  call void @llvm.dbg.value(metadata i32 10000, metadata !14530, metadata !DIExpression()), !dbg !14541
  call void @llvm.dbg.value(metadata i8 1, metadata !14531, metadata !DIExpression()), !dbg !14541
  call void @llvm.dbg.value(metadata i8 0, metadata !14532, metadata !DIExpression()), !dbg !14541
  call void @llvm.dbg.value(metadata i8 1, metadata !14533, metadata !DIExpression()), !dbg !14541
  call void @llvm.dbg.value(metadata i8 0, metadata !14534, metadata !DIExpression()), !dbg !14541
  call void @llvm.dbg.value(metadata i8 1, metadata !14535, metadata !DIExpression()), !dbg !14541
  call void @llvm.dbg.value(metadata i8 0, metadata !14536, metadata !DIExpression()), !dbg !14541
  call void @llvm.dbg.value(metadata i64 0, metadata !14537, metadata !DIExpression()), !dbg !14541
  call void @llvm.dbg.value(metadata i64 0, metadata !14537, metadata !DIExpression()), !dbg !14541
  %2 = mul i64 %0, 10, !dbg !14543
  ret i64 %2, !dbg !14549
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #10 !dbg !14550 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !14552, metadata !DIExpression()), !dbg !14556
  call void @llvm.dbg.value(metadata i8* %1, metadata !14553, metadata !DIExpression()), !dbg !14556
  call void @llvm.dbg.value(metadata i8* %2, metadata !14554, metadata !DIExpression()), !dbg !14556
  call void @llvm.dbg.value(metadata i8* %3, metadata !14555, metadata !DIExpression()), !dbg !14556
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14557
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !14558
  %7 = load i8, i8* %6, align 4, !dbg !14559
  %8 = or i8 %7, 4, !dbg !14559
  store i8 %8, i8* %6, align 4, !dbg !14559
  tail call void @z_thread_essential_clear() #26, !dbg !14560
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #29, !dbg !14561
  unreachable, !dbg !14561
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #5 !dbg !14562 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14566, metadata !DIExpression()), !dbg !14567
  ret i32 -134, !dbg !14568
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #5 !dbg !14569 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14573, metadata !DIExpression()), !dbg !14575
  call void @llvm.dbg.value(metadata i32 %1, metadata !14574, metadata !DIExpression()), !dbg !14575
  ret i32 -134, !dbg !14576
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #5 !dbg !14577 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14584, metadata !DIExpression()), !dbg !14586
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !14585, metadata !DIExpression()), !dbg !14586
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !14587
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !14589
  %6 = select i1 %5, i32 -22, i32 0, !dbg !14586
  ret i32 %6, !dbg !14590
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #5 !dbg !14591 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14595, metadata !DIExpression()), !dbg !14596
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !14597
  %3 = select i1 %2, i32 -22, i32 0, !dbg !14596
  ret i32 %3, !dbg !14599
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !14600 {
  tail call void @sys_clock_idle_exit() #27, !dbg !14602
  ret void, !dbg !14603
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #10 !dbg !14604 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14606, metadata !DIExpression()), !dbg !14609
  call void @llvm.dbg.value(metadata i8* %1, metadata !14607, metadata !DIExpression()), !dbg !14609
  call void @llvm.dbg.value(metadata i8* %2, metadata !14608, metadata !DIExpression()), !dbg !14609
  br label %4, !dbg !14610

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14611, !srcloc !14618
  call void @llvm.dbg.value(metadata i32 undef, metadata !14614, metadata !DIExpression()) #25, !dbg !14619
  call void @llvm.dbg.value(metadata i32 undef, metadata !14615, metadata !DIExpression()) #25, !dbg !14619
  tail call fastcc void @k_cpu_idle() #26, !dbg !14620
  br label %4, !dbg !14610, !llvm.loop !14621
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !14623 {
  tail call void @arch_cpu_idle() #27, !dbg !14624
  ret void, !dbg !14625
}

; Function Attrs: optsize
declare !dbg !14626 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #8 !dbg !14627 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !14645, metadata !DIExpression()), !dbg !14649
  call void @llvm.dbg.value(metadata i8* %1, metadata !14646, metadata !DIExpression()), !dbg !14649
  call void @llvm.dbg.value(metadata i32 %2, metadata !14647, metadata !DIExpression()), !dbg !14649
  call void @llvm.dbg.value(metadata i32 %3, metadata !14648, metadata !DIExpression()), !dbg !14649
  %5 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !14650
  store i32 %2, i32* %5, align 4, !dbg !14651
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !14652
  store i32 %3, i32* %6, align 4, !dbg !14653
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !14654
  store i8* %1, i8** %7, align 4, !dbg !14655
  %8 = mul i32 %3, %2, !dbg !14656
  %9 = getelementptr inbounds i8, i8* %1, i32 %8, !dbg !14657
  %10 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !14658
  store i8* %9, i8** %10, align 4, !dbg !14659
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !14660
  store i8* %1, i8** %11, align 4, !dbg !14661
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !14662
  store i8* %1, i8** %12, align 4, !dbg !14663
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !14664
  store i32 0, i32* %13, align 4, !dbg !14665
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !14666
  store i8 0, i8* %14, align 4, !dbg !14667
  %15 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !14668
  tail call fastcc void @z_waitq_init.195(%struct._wait_q_t* noundef %15) #26, !dbg !14669
  ret void, !dbg !14670
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.195(%struct._wait_q_t* noundef %0) unnamed_addr #8 !dbg !14671 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14675, metadata !DIExpression()), !dbg !14676
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !14677
  tail call fastcc void @sys_dlist_init.196(%struct._dnode* noundef %2) #26, !dbg !14678
  ret void, !dbg !14679
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.196(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !14680 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14685, metadata !DIExpression()), !dbg !14686
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14687
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14688
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14689
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14690
  ret void, !dbg !14691
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_alloc_init(%struct.k_msgq* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14692 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !14696, metadata !DIExpression()), !dbg !14702
  call void @llvm.dbg.value(metadata i32 %1, metadata !14697, metadata !DIExpression()), !dbg !14702
  call void @llvm.dbg.value(metadata i32 %2, metadata !14698, metadata !DIExpression()), !dbg !14702
  %5 = bitcast i32* %4 to i8*, !dbg !14703
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !14703
  call void @llvm.dbg.value(metadata i32* %4, metadata !14701, metadata !DIExpression(DW_OP_deref)), !dbg !14702
  %6 = call fastcc zeroext i1 @size_mul_overflow(i32 noundef %1, i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !14704
  br i1 %6, label %13, label %7, !dbg !14706

7:                                                ; preds = %3
  %8 = load i32, i32* %4, align 4, !dbg !14707
  call void @llvm.dbg.value(metadata i32 %8, metadata !14701, metadata !DIExpression()), !dbg !14702
  %9 = tail call fastcc i8* @z_thread_malloc(i32 noundef %8) #26, !dbg !14709
  call void @llvm.dbg.value(metadata i8* %9, metadata !14699, metadata !DIExpression()), !dbg !14702
  %10 = icmp eq i8* %9, null, !dbg !14710
  br i1 %10, label %13, label %11, !dbg !14712

11:                                               ; preds = %7
  tail call void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef nonnull %9, i32 noundef %1, i32 noundef %2) #26, !dbg !14713
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !14715
  store i8 1, i8* %12, align 4, !dbg !14716
  call void @llvm.dbg.value(metadata i32 0, metadata !14700, metadata !DIExpression()), !dbg !14702
  br label %13, !dbg !14717

13:                                               ; preds = %7, %3, %11
  %14 = phi i32 [ 0, %11 ], [ -22, %3 ], [ -12, %7 ], !dbg !14718
  call void @llvm.dbg.value(metadata i32 %14, metadata !14700, metadata !DIExpression()), !dbg !14702
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !14719
  ret i32 %14, !dbg !14720
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_mul_overflow(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) unnamed_addr #23 !dbg !14721 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14726, metadata !DIExpression()), !dbg !14729
  call void @llvm.dbg.value(metadata i32 %1, metadata !14727, metadata !DIExpression()), !dbg !14729
  call void @llvm.dbg.value(metadata i32* %2, metadata !14728, metadata !DIExpression()), !dbg !14729
  %4 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %0, i32 %1), !dbg !14730
  %5 = extractvalue { i32, i1 } %4, 1, !dbg !14730
  %6 = extractvalue { i32, i1 } %4, 0, !dbg !14730
  store i32 %6, i32* %2, align 4, !dbg !14730
  ret i1 %5, !dbg !14731
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_thread_malloc(i32 noundef %0) unnamed_addr #1 !dbg !14732 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14736, metadata !DIExpression()), !dbg !14737
  %2 = tail call i8* @z_thread_aligned_alloc(i32 noundef 0, i32 noundef %0) #27, !dbg !14738
  ret i8* %2, !dbg !14739
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_msgq_cleanup(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !14740 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !14744, metadata !DIExpression()), !dbg !14745
  %2 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !14746
  %3 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %2) #26, !dbg !14746
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !14746
  br i1 %4, label %5, label %15, !dbg !14748

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !14749
  %7 = load i8, i8* %6, align 4, !dbg !14749
  %8 = and i8 %7, 1, !dbg !14751
  %9 = icmp eq i8 %8, 0, !dbg !14752
  br i1 %9, label %15, label %10, !dbg !14753

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !14754
  %12 = load i8*, i8** %11, align 4, !dbg !14754
  tail call void @k_free(i8* noundef %12) #27, !dbg !14756
  %13 = load i8, i8* %6, align 4, !dbg !14757
  %14 = and i8 %13, -2, !dbg !14757
  store i8 %14, i8* %6, align 4, !dbg !14757
  br label %15, !dbg !14758

15:                                               ; preds = %5, %10, %1
  %16 = phi i32 [ -16, %1 ], [ 0, %10 ], [ 0, %5 ], !dbg !14745
  ret i32 %16, !dbg !14759
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef readonly %0) unnamed_addr #4 !dbg !14760 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14764, metadata !DIExpression()), !dbg !14765
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !14766
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #26, !dbg !14767
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !14768
  ret %struct.k_thread* %4, !dbg !14769
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !14770 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14774, metadata !DIExpression()), !dbg !14775
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #26, !dbg !14776
  br i1 %2, label %6, label %3, !dbg !14776

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14777
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14777
  br label %6, !dbg !14776

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14776
  ret %struct._dnode* %7, !dbg !14778
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #4 !dbg !14779 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14783, metadata !DIExpression()), !dbg !14784
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14785
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14785
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !14786
  ret i1 %4, !dbg !14787
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14788 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14798, metadata !DIExpression()), !dbg !14806
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !14796, metadata !DIExpression()), !dbg !14806
  call void @llvm.dbg.value(metadata i8* %1, metadata !14797, metadata !DIExpression()), !dbg !14806
  %4 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !14807
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14808, metadata !DIExpression()) #25, !dbg !14815
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14817, !srcloc !14823
  %6 = extractvalue { i32, i32 } %5, 0, !dbg !14817
  call void @llvm.dbg.value(metadata i32 %6, metadata !14820, metadata !DIExpression()) #25, !dbg !14824
  call void @llvm.dbg.value(metadata i32 undef, metadata !14821, metadata !DIExpression()) #25, !dbg !14824
  call void @llvm.dbg.value(metadata i32 %6, metadata !14814, metadata !DIExpression()) #25, !dbg !14815
  call void @llvm.dbg.value(metadata i32 %6, metadata !14800, metadata !DIExpression()), !dbg !14806
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !14825
  %8 = load i32, i32* %7, align 4, !dbg !14825
  %9 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !14827
  %10 = load i32, i32* %9, align 4, !dbg !14827
  %11 = icmp ult i32 %8, %10, !dbg !14828
  br i1 %11, label %12, label %42, !dbg !14829

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !14830
  %14 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %13) #27, !dbg !14832
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14799, metadata !DIExpression()), !dbg !14806
  %15 = icmp eq %struct.k_thread* %14, null, !dbg !14833
  br i1 %15, label %24, label %16, !dbg !14835

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %14, i32 0, i32 0, i32 6, !dbg !14836
  %18 = load i8*, i8** %17, align 4, !dbg !14836
  %19 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !14838
  %20 = load i32, i32* %19, align 4, !dbg !14838
  %21 = tail call i8* @memcpy(i8* noundef %18, i8* noundef %1, i32 noundef %20) #27, !dbg !14839
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14840, metadata !DIExpression()), !dbg !14846
  call void @llvm.dbg.value(metadata i32 0, metadata !14845, metadata !DIExpression()), !dbg !14846
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %14, i32 0, i32 7, i32 1, !dbg !14848
  store i32 0, i32* %22, align 4, !dbg !14849
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %14) #27, !dbg !14850
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14851
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %23) #27, !dbg !14851
  br label %53, !dbg !14852

24:                                               ; preds = %12
  %25 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !14853
  %26 = load i8*, i8** %25, align 4, !dbg !14853
  %27 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !14855
  %28 = load i32, i32* %27, align 4, !dbg !14855
  %29 = tail call i8* @memcpy(i8* noundef %26, i8* noundef %1, i32 noundef %28) #27, !dbg !14856
  %30 = load i32, i32* %27, align 4, !dbg !14857
  %31 = load i8*, i8** %25, align 4, !dbg !14858
  %32 = getelementptr inbounds i8, i8* %31, i32 %30, !dbg !14858
  store i8* %32, i8** %25, align 4, !dbg !14858
  %33 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !14859
  %34 = load i8*, i8** %33, align 4, !dbg !14859
  %35 = icmp eq i8* %32, %34, !dbg !14861
  br i1 %35, label %36, label %39, !dbg !14862

36:                                               ; preds = %24
  %37 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !14863
  %38 = load i8*, i8** %37, align 4, !dbg !14863
  store i8* %38, i8** %25, align 4, !dbg !14865
  br label %39, !dbg !14866

39:                                               ; preds = %36, %24
  %40 = load i32, i32* %7, align 4, !dbg !14867
  %41 = add i32 %40, 1, !dbg !14867
  store i32 %41, i32* %7, align 4, !dbg !14867
  call void @llvm.dbg.value(metadata i32 0, metadata !14805, metadata !DIExpression()), !dbg !14806
  br label %51, !dbg !14868

42:                                               ; preds = %3
  %43 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %43, metadata !14798, metadata !DIExpression()), !dbg !14806
  %44 = icmp eq i64 %43, 0, !dbg !14869
  br i1 %44, label %51, label %45, !dbg !14871

45:                                               ; preds = %42
  %46 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14872
  %47 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %46, i32 0, i32 0, i32 6, !dbg !14874
  store i8* %1, i8** %47, align 4, !dbg !14875
  %48 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !14876
  %49 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14877
  %50 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %49, %struct._wait_q_t* noundef %48, [1 x i64] %2) #27, !dbg !14877
  call void @llvm.dbg.value(metadata i32 %50, metadata !14805, metadata !DIExpression()), !dbg !14806
  br label %53, !dbg !14878

51:                                               ; preds = %42, %39
  %52 = phi i32 [ 0, %39 ], [ -35, %42 ], !dbg !14879
  call void @llvm.dbg.value(metadata i32 %52, metadata !14805, metadata !DIExpression()), !dbg !14806
  call void @llvm.dbg.value(metadata i32 %6, metadata !14880, metadata !DIExpression()) #25, !dbg !14886
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14885, metadata !DIExpression()) #25, !dbg !14886
  call void @llvm.dbg.value(metadata i32 %6, metadata !14888, metadata !DIExpression()) #25, !dbg !14891
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !14893, !srcloc !14894
  br label %53, !dbg !14895

53:                                               ; preds = %51, %45, %16
  %54 = phi i32 [ 0, %16 ], [ %52, %51 ], [ %50, %45 ], !dbg !14806
  ret i32 %54, !dbg !14896
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_impl_k_msgq_get_attrs(%struct.k_msgq* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef writeonly %1) local_unnamed_addr #9 !dbg !14897 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !14907, metadata !DIExpression()), !dbg !14909
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !14908, metadata !DIExpression()), !dbg !14909
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !14910
  %4 = load i32, i32* %3, align 4, !dbg !14910
  %5 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !14911
  store i32 %4, i32* %5, align 4, !dbg !14912
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !14913
  %7 = load i32, i32* %6, align 4, !dbg !14913
  %8 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !14914
  store i32 %7, i32* %8, align 4, !dbg !14915
  %9 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !14916
  %10 = load i32, i32* %9, align 4, !dbg !14916
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !14917
  store i32 %10, i32* %11, align 4, !dbg !14918
  ret void, !dbg !14919
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14920 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14926, metadata !DIExpression()), !dbg !14930
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !14924, metadata !DIExpression()), !dbg !14930
  call void @llvm.dbg.value(metadata i8* %1, metadata !14925, metadata !DIExpression()), !dbg !14930
  %4 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !14931
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14808, metadata !DIExpression()) #25, !dbg !14932
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14934, !srcloc !14823
  %6 = extractvalue { i32, i32 } %5, 0, !dbg !14934
  call void @llvm.dbg.value(metadata i32 %6, metadata !14820, metadata !DIExpression()) #25, !dbg !14936
  call void @llvm.dbg.value(metadata i32 undef, metadata !14821, metadata !DIExpression()) #25, !dbg !14936
  call void @llvm.dbg.value(metadata i32 %6, metadata !14814, metadata !DIExpression()) #25, !dbg !14932
  call void @llvm.dbg.value(metadata i32 %6, metadata !14927, metadata !DIExpression()), !dbg !14930
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !14937
  %8 = load i32, i32* %7, align 4, !dbg !14937
  %9 = icmp eq i32 %8, 0, !dbg !14939
  br i1 %9, label %51, label %10, !dbg !14940

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !14941
  %12 = load i8*, i8** %11, align 4, !dbg !14941
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !14943
  %14 = load i32, i32* %13, align 4, !dbg !14943
  %15 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %12, i32 noundef %14) #27, !dbg !14944
  %16 = load i32, i32* %13, align 4, !dbg !14945
  %17 = load i8*, i8** %11, align 4, !dbg !14946
  %18 = getelementptr inbounds i8, i8* %17, i32 %16, !dbg !14946
  store i8* %18, i8** %11, align 4, !dbg !14946
  %19 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !14947
  %20 = load i8*, i8** %19, align 4, !dbg !14947
  %21 = icmp eq i8* %18, %20, !dbg !14949
  br i1 %21, label %22, label %25, !dbg !14950

22:                                               ; preds = %10
  %23 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !14951
  %24 = load i8*, i8** %23, align 4, !dbg !14951
  store i8* %24, i8** %11, align 4, !dbg !14953
  br label %25, !dbg !14954

25:                                               ; preds = %22, %10
  %26 = load i32, i32* %7, align 4, !dbg !14955
  %27 = add i32 %26, -1, !dbg !14955
  store i32 %27, i32* %7, align 4, !dbg !14955
  %28 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !14956
  %29 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %28) #27, !dbg !14957
  call void @llvm.dbg.value(metadata %struct.k_thread* %29, metadata !14928, metadata !DIExpression()), !dbg !14930
  %30 = icmp eq %struct.k_thread* %29, null, !dbg !14958
  br i1 %30, label %60, label %31, !dbg !14960

31:                                               ; preds = %25
  %32 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !14961
  %33 = load i8*, i8** %32, align 4, !dbg !14961
  %34 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %29, i32 0, i32 0, i32 6, !dbg !14963
  %35 = load i8*, i8** %34, align 4, !dbg !14963
  %36 = load i32, i32* %13, align 4, !dbg !14964
  %37 = tail call i8* @memcpy(i8* noundef %33, i8* noundef %35, i32 noundef %36) #27, !dbg !14965
  %38 = load i32, i32* %13, align 4, !dbg !14966
  %39 = load i8*, i8** %32, align 4, !dbg !14967
  %40 = getelementptr inbounds i8, i8* %39, i32 %38, !dbg !14967
  store i8* %40, i8** %32, align 4, !dbg !14967
  %41 = load i8*, i8** %19, align 4, !dbg !14968
  %42 = icmp eq i8* %40, %41, !dbg !14970
  br i1 %42, label %43, label %46, !dbg !14971

43:                                               ; preds = %31
  %44 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !14972
  %45 = load i8*, i8** %44, align 4, !dbg !14972
  store i8* %45, i8** %32, align 4, !dbg !14974
  br label %46, !dbg !14975

46:                                               ; preds = %43, %31
  %47 = load i32, i32* %7, align 4, !dbg !14976
  %48 = add i32 %47, 1, !dbg !14976
  store i32 %48, i32* %7, align 4, !dbg !14976
  call void @llvm.dbg.value(metadata %struct.k_thread* %29, metadata !14840, metadata !DIExpression()), !dbg !14977
  call void @llvm.dbg.value(metadata i32 0, metadata !14845, metadata !DIExpression()), !dbg !14977
  %49 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %29, i32 0, i32 7, i32 1, !dbg !14979
  store i32 0, i32* %49, align 4, !dbg !14980
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %29) #27, !dbg !14981
  %50 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14982
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %50) #27, !dbg !14982
  br label %62, !dbg !14983

51:                                               ; preds = %3
  %52 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %52, metadata !14926, metadata !DIExpression()), !dbg !14930
  %53 = icmp eq i64 %52, 0, !dbg !14984
  br i1 %53, label %60, label %54, !dbg !14986

54:                                               ; preds = %51
  %55 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14987
  %56 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %55, i32 0, i32 0, i32 6, !dbg !14989
  store i8* %1, i8** %56, align 4, !dbg !14990
  %57 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !14991
  %58 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14992
  %59 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %58, %struct._wait_q_t* noundef %57, [1 x i64] %2) #27, !dbg !14992
  call void @llvm.dbg.value(metadata i32 %59, metadata !14929, metadata !DIExpression()), !dbg !14930
  br label %62, !dbg !14993

60:                                               ; preds = %51, %25
  %61 = phi i32 [ 0, %25 ], [ -35, %51 ], !dbg !14994
  call void @llvm.dbg.value(metadata i32 %61, metadata !14929, metadata !DIExpression()), !dbg !14930
  call void @llvm.dbg.value(metadata i32 %6, metadata !14880, metadata !DIExpression()) #25, !dbg !14995
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14885, metadata !DIExpression()) #25, !dbg !14995
  call void @llvm.dbg.value(metadata i32 %6, metadata !14888, metadata !DIExpression()) #25, !dbg !14997
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !14999, !srcloc !14894
  br label %62, !dbg !15000

62:                                               ; preds = %60, %54, %46
  %63 = phi i32 [ 0, %46 ], [ %61, %60 ], [ %59, %54 ], !dbg !14930
  ret i32 %63, !dbg !15001
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_peek(%struct.k_msgq* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #1 !dbg !15002 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15006, metadata !DIExpression()), !dbg !15010
  call void @llvm.dbg.value(metadata i8* %1, metadata !15007, metadata !DIExpression()), !dbg !15010
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14808, metadata !DIExpression()) #25, !dbg !15011
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15013, !srcloc !14823
  call void @llvm.dbg.value(metadata i32 undef, metadata !14820, metadata !DIExpression()) #25, !dbg !15015
  call void @llvm.dbg.value(metadata i32 undef, metadata !14821, metadata !DIExpression()) #25, !dbg !15015
  call void @llvm.dbg.value(metadata i32 undef, metadata !14814, metadata !DIExpression()) #25, !dbg !15011
  call void @llvm.dbg.value(metadata i32 undef, metadata !15008, metadata !DIExpression()), !dbg !15010
  %4 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15016
  %5 = load i32, i32* %4, align 4, !dbg !15016
  %6 = icmp eq i32 %5, 0, !dbg !15018
  br i1 %6, label %13, label %7, !dbg !15019

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !15020
  %9 = load i8*, i8** %8, align 4, !dbg !15020
  %10 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15022
  %11 = load i32, i32* %10, align 4, !dbg !15022
  %12 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %9, i32 noundef %11) #27, !dbg !15023
  call void @llvm.dbg.value(metadata i32 0, metadata !15009, metadata !DIExpression()), !dbg !15010
  br label %13, !dbg !15024

13:                                               ; preds = %2, %7
  %14 = phi i32 [ 0, %7 ], [ -35, %2 ], !dbg !15025
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !15013
  call void @llvm.dbg.value(metadata i32 %15, metadata !14820, metadata !DIExpression()) #25, !dbg !15015
  call void @llvm.dbg.value(metadata i32 %15, metadata !14814, metadata !DIExpression()) #25, !dbg !15011
  call void @llvm.dbg.value(metadata i32 %15, metadata !15008, metadata !DIExpression()), !dbg !15010
  call void @llvm.dbg.value(metadata i32 %14, metadata !15009, metadata !DIExpression()), !dbg !15010
  call void @llvm.dbg.value(metadata i32 undef, metadata !14880, metadata !DIExpression()) #25, !dbg !15026
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14885, metadata !DIExpression()) #25, !dbg !15026
  call void @llvm.dbg.value(metadata i32 undef, metadata !14888, metadata !DIExpression()) #25, !dbg !15028
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #25, !dbg !15030, !srcloc !14894
  ret i32 %14, !dbg !15031
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_msgq_purge(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !15032 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15036, metadata !DIExpression()), !dbg !15039
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14808, metadata !DIExpression()) #25, !dbg !15040
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15042, !srcloc !14823
  call void @llvm.dbg.value(metadata i32 undef, metadata !14820, metadata !DIExpression()) #25, !dbg !15044
  call void @llvm.dbg.value(metadata i32 undef, metadata !14821, metadata !DIExpression()) #25, !dbg !15044
  call void @llvm.dbg.value(metadata i32 undef, metadata !14814, metadata !DIExpression()) #25, !dbg !15040
  call void @llvm.dbg.value(metadata i32 undef, metadata !15037, metadata !DIExpression()), !dbg !15039
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %3) #27, !dbg !15045
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15038, metadata !DIExpression()), !dbg !15039
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !15046
  br i1 %5, label %11, label %6, !dbg !15047

6:                                                ; preds = %1, %6
  %7 = phi %struct.k_thread* [ %9, %6 ], [ %4, %1 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !14840, metadata !DIExpression()), !dbg !15048
  call void @llvm.dbg.value(metadata i32 -35, metadata !14845, metadata !DIExpression()), !dbg !15048
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %7, i32 0, i32 7, i32 1, !dbg !15051
  store i32 -35, i32* %8, align 4, !dbg !15052
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %7) #27, !dbg !15053
  %9 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %3) #27, !dbg !15045
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15038, metadata !DIExpression()), !dbg !15039
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !15046
  br i1 %10, label %11, label %6, !dbg !15047, !llvm.loop !15054

11:                                               ; preds = %6, %1
  %12 = extractvalue { i32, i32 } %2, 0, !dbg !15042
  call void @llvm.dbg.value(metadata i32 %12, metadata !14820, metadata !DIExpression()) #25, !dbg !15044
  call void @llvm.dbg.value(metadata i32 %12, metadata !14814, metadata !DIExpression()) #25, !dbg !15040
  call void @llvm.dbg.value(metadata i32 %12, metadata !15037, metadata !DIExpression()), !dbg !15039
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !15056
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15057
  store i32 0, i32* %14, align 4, !dbg !15058
  %15 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !15059
  %16 = load i8*, i8** %15, align 4, !dbg !15059
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !15060
  store i8* %16, i8** %17, align 4, !dbg !15061
  %18 = insertvalue [1 x i32] poison, i32 %12, 0, !dbg !15062
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %13, [1 x i32] %18) #27, !dbg !15062
  ret void, !dbg !15063
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_mutex_init(%struct.k_mutex* noundef %0) local_unnamed_addr #8 !dbg !15064 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !15075, metadata !DIExpression()), !dbg !15076
  %2 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !15077
  store %struct.k_thread* null, %struct.k_thread** %2, align 4, !dbg !15078
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !15079
  store i32 0, i32* %3, align 4, !dbg !15080
  %4 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !15081
  tail call fastcc void @z_waitq_init.201(%struct._wait_q_t* noundef %4) #26, !dbg !15082
  ret i32 0, !dbg !15083
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.201(%struct._wait_q_t* noundef %0) unnamed_addr #8 !dbg !15084 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15088, metadata !DIExpression()), !dbg !15089
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !15090
  tail call fastcc void @sys_dlist_init.202(%struct._dnode* noundef %2) #26, !dbg !15091
  ret void, !dbg !15092
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.202(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !15093 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15098, metadata !DIExpression()), !dbg !15099
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15100
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15101
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15102
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15103
  ret void, !dbg !15104
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !15105 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15114, metadata !DIExpression()), !dbg !15126
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !15113, metadata !DIExpression()), !dbg !15126
  call void @llvm.dbg.value(metadata i8 0, metadata !15121, metadata !DIExpression()), !dbg !15126
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15127, metadata !DIExpression()) #25, !dbg !15134
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15136, !srcloc !15142
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !15136
  call void @llvm.dbg.value(metadata i32 %5, metadata !15139, metadata !DIExpression()) #25, !dbg !15143
  call void @llvm.dbg.value(metadata i32 undef, metadata !15140, metadata !DIExpression()) #25, !dbg !15143
  call void @llvm.dbg.value(metadata i32 %5, metadata !15133, metadata !DIExpression()) #25, !dbg !15134
  call void @llvm.dbg.value(metadata i32 %5, metadata !15116, metadata !DIExpression()), !dbg !15126
  %6 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !15144
  %7 = load i32, i32* %6, align 4, !dbg !15144
  %8 = icmp eq i32 %7, 0, !dbg !15144
  br i1 %8, label %14, label %9, !dbg !15144

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !15144
  %11 = load %struct.k_thread*, %struct.k_thread** %10, align 4, !dbg !15144
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15144
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !15144
  br i1 %13, label %20, label %29, !dbg !15146, !prof !15147

14:                                               ; preds = %2
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15148
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 0, i32 4, !dbg !15150
  %17 = bitcast %union.anon.2* %16 to i8*, !dbg !15150
  %18 = load i8, i8* %17, align 2, !dbg !15150
  %19 = sext i8 %18 to i32, !dbg !15148
  br label %23, !dbg !15151

20:                                               ; preds = %9
  %21 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !15152
  %22 = load i32, i32* %21, align 4, !dbg !15152
  br label %23, !dbg !15151

23:                                               ; preds = %20, %14
  %24 = phi %struct.k_thread* [ %15, %14 ], [ %11, %20 ], !dbg !15153
  %25 = phi i32 [ %19, %14 ], [ %22, %20 ], !dbg !15151
  %26 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !15154
  store i32 %25, i32* %26, align 4, !dbg !15155
  %27 = add i32 %7, 1, !dbg !15156
  store i32 %27, i32* %6, align 4, !dbg !15156
  %28 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !15157
  store %struct.k_thread* %24, %struct.k_thread** %28, align 4, !dbg !15158
  call void @llvm.dbg.value(metadata i32 %5, metadata !15159, metadata !DIExpression()) #25, !dbg !15165
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15164, metadata !DIExpression()) #25, !dbg !15165
  call void @llvm.dbg.value(metadata i32 %5, metadata !15167, metadata !DIExpression()) #25, !dbg !15170
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #25, !dbg !15172, !srcloc !15173
  br label %78, !dbg !15174

29:                                               ; preds = %9
  %30 = icmp eq i64 %3, 0, !dbg !15175
  br i1 %30, label %31, label %32, !dbg !15177, !prof !15178

31:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %5, metadata !15159, metadata !DIExpression()) #25, !dbg !15179
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15164, metadata !DIExpression()) #25, !dbg !15179
  call void @llvm.dbg.value(metadata i32 %5, metadata !15167, metadata !DIExpression()) #25, !dbg !15182
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #25, !dbg !15184, !srcloc !15173
  br label %78, !dbg !15185

32:                                               ; preds = %29
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %12, i32 0, i32 0, i32 4, !dbg !15186
  %34 = bitcast %union.anon.2* %33 to i8*, !dbg !15186
  %35 = load i8, i8* %34, align 2, !dbg !15186
  %36 = sext i8 %35 to i32, !dbg !15187
  %37 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %11, i32 0, i32 0, i32 4, !dbg !15188
  %38 = bitcast %union.anon.2* %37 to i8*, !dbg !15188
  %39 = load i8, i8* %38, align 2, !dbg !15188
  %40 = sext i8 %39 to i32, !dbg !15189
  %41 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %36, i32 noundef %40) #26, !dbg !15190
  call void @llvm.dbg.value(metadata i32 %41, metadata !15115, metadata !DIExpression()), !dbg !15126
  %42 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %41, i32 noundef %40) #26, !dbg !15191
  br i1 %42, label %43, label %45, !dbg !15193

43:                                               ; preds = %32
  %44 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %41) #26, !dbg !15194
  call void @llvm.dbg.value(metadata i1 %44, metadata !15121, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15126
  br label %45, !dbg !15196

45:                                               ; preds = %43, %32
  %46 = phi i1 [ %44, %43 ], [ false, %32 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !15121, metadata !DIExpression()), !dbg !15126
  %47 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !15197
  %48 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !15198
  %49 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %48, %struct._wait_q_t* noundef %47, [1 x i64] %1) #27, !dbg !15198
  call void @llvm.dbg.value(metadata i32 %49, metadata !15122, metadata !DIExpression()), !dbg !15126
  %50 = icmp eq i32 %49, 0, !dbg !15199
  br i1 %50, label %78, label %51, !dbg !15201

51:                                               ; preds = %45
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15127, metadata !DIExpression()) #25, !dbg !15202
  %52 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15204, !srcloc !15142
  %53 = extractvalue { i32, i32 } %52, 0, !dbg !15204
  call void @llvm.dbg.value(metadata i32 %53, metadata !15139, metadata !DIExpression()) #25, !dbg !15206
  call void @llvm.dbg.value(metadata i32 undef, metadata !15140, metadata !DIExpression()) #25, !dbg !15206
  call void @llvm.dbg.value(metadata i32 %53, metadata !15133, metadata !DIExpression()) #25, !dbg !15202
  call void @llvm.dbg.value(metadata i32 %53, metadata !15116, metadata !DIExpression()), !dbg !15126
  %54 = load %struct.k_thread*, %struct.k_thread** %10, align 4, !dbg !15207
  %55 = icmp eq %struct.k_thread* %54, null, !dbg !15207
  br i1 %55, label %74, label %56, !dbg !15208, !prof !15178

56:                                               ; preds = %51
  %57 = tail call fastcc %struct.k_thread* @z_waitq_head.205(%struct._wait_q_t* noundef nonnull %47) #26, !dbg !15209
  call void @llvm.dbg.value(metadata %struct.k_thread* %57, metadata !15123, metadata !DIExpression()), !dbg !15210
  %58 = icmp eq %struct.k_thread* %57, null, !dbg !15211
  br i1 %58, label %67, label %59, !dbg !15212

59:                                               ; preds = %56
  %60 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %57, i32 0, i32 0, i32 4, !dbg !15213
  %61 = bitcast %union.anon.2* %60 to i8*, !dbg !15213
  %62 = load i8, i8* %61, align 2, !dbg !15213
  %63 = sext i8 %62 to i32, !dbg !15214
  %64 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !15215
  %65 = load i32, i32* %64, align 4, !dbg !15215
  %66 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %63, i32 noundef %65) #26, !dbg !15216
  br label %70, !dbg !15212

67:                                               ; preds = %56
  %68 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !15217
  %69 = load i32, i32* %68, align 4, !dbg !15217
  br label %70, !dbg !15212

70:                                               ; preds = %67, %59
  %71 = phi i32 [ %66, %59 ], [ %69, %67 ], !dbg !15212
  call void @llvm.dbg.value(metadata i32 %71, metadata !15115, metadata !DIExpression()), !dbg !15126
  %72 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %71) #26, !dbg !15218
  %73 = select i1 %72, i1 true, i1 %46, !dbg !15219
  call void @llvm.dbg.value(metadata i1 %73, metadata !15121, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15126
  call void @llvm.dbg.value(metadata i8 poison, metadata !15121, metadata !DIExpression()), !dbg !15126
  br i1 %73, label %75, label %77, !dbg !15220

74:                                               ; preds = %51
  call void @llvm.dbg.value(metadata i8 poison, metadata !15121, metadata !DIExpression()), !dbg !15126
  br i1 %46, label %75, label %77, !dbg !15220

75:                                               ; preds = %70, %74
  %76 = insertvalue [1 x i32] poison, i32 %53, 0, !dbg !15221
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %76) #27, !dbg !15221
  br label %78, !dbg !15224

77:                                               ; preds = %70, %74
  call void @llvm.dbg.value(metadata i32 %53, metadata !15159, metadata !DIExpression()) #25, !dbg !15225
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15164, metadata !DIExpression()) #25, !dbg !15225
  call void @llvm.dbg.value(metadata i32 %53, metadata !15167, metadata !DIExpression()) #25, !dbg !15228
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %53) #25, !dbg !15230, !srcloc !15173
  br label %78

78:                                               ; preds = %45, %75, %77, %31, %23
  %79 = phi i32 [ 0, %23 ], [ -16, %31 ], [ 0, %45 ], [ -11, %75 ], [ -11, %77 ], !dbg !15126
  ret i32 %79, !dbg !15231
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @new_prio_for_inheritance(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !15232 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15236, metadata !DIExpression()), !dbg !15239
  call void @llvm.dbg.value(metadata i32 %1, metadata !15237, metadata !DIExpression()), !dbg !15239
  %3 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) #26, !dbg !15240
  %4 = select i1 %3, i32 %0, i32 %1, !dbg !15240
  call void @llvm.dbg.value(metadata i32 %4, metadata !15238, metadata !DIExpression()), !dbg !15239
  %5 = tail call fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %4) #26, !dbg !15241
  call void @llvm.dbg.value(metadata i32 %5, metadata !15238, metadata !DIExpression()), !dbg !15239
  ret i32 %5, !dbg !15242
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !15243 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15247, metadata !DIExpression()), !dbg !15249
  call void @llvm.dbg.value(metadata i32 %1, metadata !15248, metadata !DIExpression()), !dbg !15249
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #26, !dbg !15250
  ret i1 %3, !dbg !15251
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !15252 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !15256, metadata !DIExpression()), !dbg !15258
  call void @llvm.dbg.value(metadata i32 %1, metadata !15257, metadata !DIExpression()), !dbg !15258
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !15259
  %4 = load %struct.k_thread*, %struct.k_thread** %3, align 4, !dbg !15259
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !15261
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !15261
  %7 = load i8, i8* %6, align 2, !dbg !15261
  %8 = sext i8 %7 to i32, !dbg !15262
  %9 = icmp eq i32 %8, %1, !dbg !15263
  br i1 %9, label %12, label %10, !dbg !15264

10:                                               ; preds = %2
  %11 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef nonnull %4, i32 noundef %1) #27, !dbg !15265
  br label %12, !dbg !15267

12:                                               ; preds = %2, %10
  %13 = phi i1 [ %11, %10 ], [ false, %2 ], !dbg !15258
  ret i1 %13, !dbg !15268
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.205(%struct._wait_q_t* noundef readonly %0) unnamed_addr #4 !dbg !15269 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15273, metadata !DIExpression()), !dbg !15274
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !15275
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.206(%struct._dnode* noundef %2) #26, !dbg !15276
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !15277
  ret %struct.k_thread* %4, !dbg !15278
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.206(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !15279 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15283, metadata !DIExpression()), !dbg !15284
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.207(%struct._dnode* noundef %0) #26, !dbg !15285
  br i1 %2, label %6, label %3, !dbg !15285

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15286
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15286
  br label %6, !dbg !15285

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !15285
  ret %struct._dnode* %7, !dbg !15287
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.207(%struct._dnode* noundef readonly %0) unnamed_addr #4 !dbg !15288 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15292, metadata !DIExpression()), !dbg !15293
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15294
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15294
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !15295
  ret i1 %4, !dbg !15296
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !15297 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15299, metadata !DIExpression()), !dbg !15301
  call void @llvm.dbg.value(metadata i32 %1, metadata !15300, metadata !DIExpression()), !dbg !15301
  %3 = icmp slt i32 %0, %1, !dbg !15302
  ret i1 %3, !dbg !15303
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %0) unnamed_addr #5 !dbg !15304 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15306, metadata !DIExpression()), !dbg !15307
  %2 = tail call fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) #26, !dbg !15308
  %3 = select i1 %2, i32 %0, i32 -127, !dbg !15308
  ret i32 %3, !dbg !15309
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) unnamed_addr #5 !dbg !15310 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15314, metadata !DIExpression()), !dbg !15315
  %2 = icmp sgt i32 %0, -128, !dbg !15316
  ret i1 %2, !dbg !15317
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) local_unnamed_addr #1 !dbg !15318 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !15320, metadata !DIExpression()), !dbg !15324
  %2 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !15325
  %3 = load %struct.k_thread*, %struct.k_thread** %2, align 4, !dbg !15325
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !15325
  br i1 %4, label %31, label %5, !dbg !15327

5:                                                ; preds = %1
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15328
  %7 = icmp eq %struct.k_thread* %3, %6, !dbg !15328
  br i1 %7, label %8, label %31, !dbg !15330

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !15331
  %10 = load i32, i32* %9, align 4, !dbg !15331
  %11 = icmp ugt i32 %10, 1, !dbg !15333
  br i1 %11, label %12, label %14, !dbg !15334

12:                                               ; preds = %8
  %13 = add i32 %10, -1, !dbg !15335
  store i32 %13, i32* %9, align 4, !dbg !15335
  br label %31, !dbg !15337

14:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15127, metadata !DIExpression()) #25, !dbg !15338
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15340, !srcloc !15142
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !15340
  call void @llvm.dbg.value(metadata i32 %16, metadata !15139, metadata !DIExpression()) #25, !dbg !15342
  call void @llvm.dbg.value(metadata i32 undef, metadata !15140, metadata !DIExpression()) #25, !dbg !15342
  call void @llvm.dbg.value(metadata i32 %16, metadata !15133, metadata !DIExpression()) #25, !dbg !15338
  call void @llvm.dbg.value(metadata i32 %16, metadata !15322, metadata !DIExpression()), !dbg !15324
  %17 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !15343
  %18 = load i32, i32* %17, align 4, !dbg !15343
  %19 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %18) #26, !dbg !15344
  %20 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !15345
  %21 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %20) #27, !dbg !15346
  call void @llvm.dbg.value(metadata %struct.k_thread* %21, metadata !15321, metadata !DIExpression()), !dbg !15324
  store %struct.k_thread* %21, %struct.k_thread** %2, align 4, !dbg !15347
  %22 = icmp eq %struct.k_thread* %21, null, !dbg !15348
  br i1 %22, label %30, label %23, !dbg !15350

23:                                               ; preds = %14
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %21, i32 0, i32 0, i32 4, !dbg !15351
  %25 = bitcast %union.anon.2* %24 to i8*, !dbg !15351
  %26 = load i8, i8* %25, align 2, !dbg !15351
  %27 = sext i8 %26 to i32, !dbg !15353
  store i32 %27, i32* %17, align 4, !dbg !15354
  call void @llvm.dbg.value(metadata %struct.k_thread* %21, metadata !15355, metadata !DIExpression()), !dbg !15361
  call void @llvm.dbg.value(metadata i32 0, metadata !15360, metadata !DIExpression()), !dbg !15361
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %21, i32 0, i32 7, i32 1, !dbg !15363
  store i32 0, i32* %28, align 4, !dbg !15364
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %21) #27, !dbg !15365
  %29 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !15366
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %29) #27, !dbg !15366
  br label %31, !dbg !15367

30:                                               ; preds = %14
  store i32 0, i32* %9, align 4, !dbg !15368
  call void @llvm.dbg.value(metadata i32 %16, metadata !15159, metadata !DIExpression()) #25, !dbg !15370
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15164, metadata !DIExpression()) #25, !dbg !15370
  call void @llvm.dbg.value(metadata i32 %16, metadata !15167, metadata !DIExpression()) #25, !dbg !15372
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #25, !dbg !15374, !srcloc !15173
  br label %31

31:                                               ; preds = %23, %30, %12, %5, %1
  %32 = phi i32 [ -22, %1 ], [ -1, %5 ], [ 0, %12 ], [ 0, %30 ], [ 0, %23 ], !dbg !15324
  ret i32 %32, !dbg !15375
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #4 !dbg !15376 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15380, metadata !DIExpression()), !dbg !15384
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15381, metadata !DIExpression()), !dbg !15384
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15385
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !15385
  %5 = load i8, i8* %4, align 2, !dbg !15385
  call void @llvm.dbg.value(metadata i8 %5, metadata !15382, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !15384
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !15386
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !15386
  %8 = load i8, i8* %7, align 2, !dbg !15386
  call void @llvm.dbg.value(metadata i8 %8, metadata !15383, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !15384
  %9 = icmp eq i8 %8, %5, !dbg !15387
  %10 = sext i8 %5 to i32, !dbg !15389
  %11 = sext i8 %8 to i32, !dbg !15389
  %12 = sub nsw i32 %11, %10, !dbg !15389
  %13 = select i1 %9, i32 0, i32 %12, !dbg !15389
  ret i32 %13, !dbg !15390
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !15391 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !15395, metadata !DIExpression()), !dbg !15396
  %2 = tail call fastcc i32 @slice_time() #26, !dbg !15397
  %3 = icmp eq i32 %2, 0, !dbg !15399
  br i1 %3, label %8, label %4, !dbg !15400

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #27, !dbg !15401
  %6 = add i32 %5, %2, !dbg !15403
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15404
  %7 = tail call fastcc i32 @slice_time() #26, !dbg !15405
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #27, !dbg !15406
  br label %8, !dbg !15407

8:                                                ; preds = %4, %1
  ret void, !dbg !15408
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #4 !dbg !15409 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !15413, metadata !DIExpression()), !dbg !15415
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !15416
  call void @llvm.dbg.value(metadata i32 %1, metadata !15414, metadata !DIExpression()), !dbg !15415
  ret i32 %1, !dbg !15417
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15418 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15422, metadata !DIExpression()), !dbg !15431
  call void @llvm.dbg.value(metadata i32 %1, metadata !15423, metadata !DIExpression()), !dbg !15431
  call void @llvm.dbg.value(metadata i32 0, metadata !15424, metadata !DIExpression()), !dbg !15432
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15433, metadata !DIExpression()) #25, !dbg !15440
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15442, !srcloc !15448
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !15442
  call void @llvm.dbg.value(metadata i32 %4, metadata !15445, metadata !DIExpression()) #25, !dbg !15449
  call void @llvm.dbg.value(metadata i32 undef, metadata !15446, metadata !DIExpression()) #25, !dbg !15449
  call void @llvm.dbg.value(metadata i32 %4, metadata !15439, metadata !DIExpression()) #25, !dbg !15440
  call void @llvm.dbg.value(metadata i32 %4, metadata !15430, metadata !DIExpression()), !dbg !15432
  call void @llvm.dbg.value(metadata i32 undef, metadata !15424, metadata !DIExpression()), !dbg !15432
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15450
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #26, !dbg !15453
  %6 = icmp sgt i32 %0, 0, !dbg !15454
  %7 = icmp sgt i32 %5, 2, !dbg !15456
  %8 = select i1 %7, i32 %5, i32 2, !dbg !15456
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !15456
  store i32 %9, i32* @slice_ticks, align 4, !dbg !15457
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !15458
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !15459
  call void @llvm.dbg.value(metadata i32 %4, metadata !15460, metadata !DIExpression()) #25, !dbg !15466
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15465, metadata !DIExpression()) #25, !dbg !15466
  call void @llvm.dbg.value(metadata i32 %4, metadata !15468, metadata !DIExpression()) #25, !dbg !15471
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !15473, !srcloc !15474
  call void @llvm.dbg.value(metadata i32 1, metadata !15424, metadata !DIExpression()), !dbg !15432
  call void @llvm.dbg.value(metadata i32 undef, metadata !15424, metadata !DIExpression()), !dbg !15432
  ret void, !dbg !15475
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #5 !dbg !15476 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15478, metadata !DIExpression()), !dbg !15479
  call void @llvm.dbg.value(metadata i32 %0, metadata !15480, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15495
  call void @llvm.dbg.value(metadata i32 1000, metadata !15483, metadata !DIExpression()), !dbg !15495
  call void @llvm.dbg.value(metadata i32 10000, metadata !15484, metadata !DIExpression()), !dbg !15495
  call void @llvm.dbg.value(metadata i8 1, metadata !15485, metadata !DIExpression()), !dbg !15495
  call void @llvm.dbg.value(metadata i1 true, metadata !15486, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15495
  call void @llvm.dbg.value(metadata i1 true, metadata !15487, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15495
  call void @llvm.dbg.value(metadata i8 0, metadata !15488, metadata !DIExpression()), !dbg !15495
  call void @llvm.dbg.value(metadata i1 true, metadata !15489, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15495
  call void @llvm.dbg.value(metadata i1 false, metadata !15490, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15495
  call void @llvm.dbg.value(metadata i64 0, metadata !15491, metadata !DIExpression()), !dbg !15495
  call void @llvm.dbg.value(metadata i64 0, metadata !15491, metadata !DIExpression()), !dbg !15495
  %2 = mul i32 %0, 10, !dbg !15497
  ret i32 %2, !dbg !15503
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !15504 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15506, metadata !DIExpression()), !dbg !15508
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15433, metadata !DIExpression()) #25, !dbg !15509
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15511, !srcloc !15448
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15511
  call void @llvm.dbg.value(metadata i32 %3, metadata !15445, metadata !DIExpression()) #25, !dbg !15513
  call void @llvm.dbg.value(metadata i32 undef, metadata !15446, metadata !DIExpression()) #25, !dbg !15513
  call void @llvm.dbg.value(metadata i32 %3, metadata !15439, metadata !DIExpression()) #25, !dbg !15509
  call void @llvm.dbg.value(metadata i32 %3, metadata !15507, metadata !DIExpression()), !dbg !15508
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15514
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15516
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !15517
  br i1 %6, label %7, label %8, !dbg !15518

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !15519
  call void @llvm.dbg.value(metadata i32 %3, metadata !15460, metadata !DIExpression()) #25, !dbg !15521
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15465, metadata !DIExpression()) #25, !dbg !15521
  call void @llvm.dbg.value(metadata i32 %3, metadata !15468, metadata !DIExpression()) #25, !dbg !15523
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15525, !srcloc !15474
  br label %24, !dbg !15526

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15527
  %9 = tail call fastcc i32 @slice_time() #26, !dbg !15528
  %10 = icmp eq i32 %9, 0, !dbg !15528
  br i1 %10, label %21, label %11, !dbg !15530

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #26, !dbg !15531
  br i1 %12, label %13, label %21, !dbg !15532

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15533
  %15 = icmp sgt i32 %14, %0, !dbg !15536
  br i1 %15, label %19, label %16, !dbg !15537

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15538
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #26, !dbg !15538
  call void @llvm.dbg.value(metadata i32 %18, metadata !15507, metadata !DIExpression()), !dbg !15508
  br label %22, !dbg !15540

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !15541
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15541
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15543
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !15508
  call void @llvm.dbg.value(metadata i32 %23, metadata !15507, metadata !DIExpression()), !dbg !15508
  call void @llvm.dbg.value(metadata i32 %23, metadata !15460, metadata !DIExpression()) #25, !dbg !15545
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15465, metadata !DIExpression()) #25, !dbg !15545
  call void @llvm.dbg.value(metadata i32 %23, metadata !15468, metadata !DIExpression()) #25, !dbg !15547
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #25, !dbg !15549, !srcloc !15474
  br label %24, !dbg !15550

24:                                               ; preds = %22, %7
  ret void, !dbg !15550
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #4 !dbg !15551 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15555, metadata !DIExpression()), !dbg !15557
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #26, !dbg !15558
  %3 = icmp eq i32 %2, 0, !dbg !15558
  br i1 %3, label %16, label %4, !dbg !15559

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !15560
  br i1 %5, label %16, label %6, !dbg !15561

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15562
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !15562
  %9 = load i8, i8* %8, align 2, !dbg !15562
  %10 = sext i8 %9 to i32, !dbg !15563
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !15564
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher.213(i32 noundef %10, i32 noundef %11) #26, !dbg !15565
  br i1 %12, label %16, label %13, !dbg !15566

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #26, !dbg !15567
  %15 = xor i1 %14, true, !dbg !15568
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !15557
  call void @llvm.dbg.value(metadata i1 %17, metadata !15556, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15557
  ret i1 %17, !dbg !15569
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !15570 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15574, metadata !DIExpression()), !dbg !15576
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15577
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15575, metadata !DIExpression()), !dbg !15576
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #26, !dbg !15578
  br i1 %3, label %5, label %4, !dbg !15580

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #26, !dbg !15581
  br label %5, !dbg !15583

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !15574, metadata !DIExpression()), !dbg !15576
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !15584
  ret i32 %6, !dbg !15585
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !15586 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15588, metadata !DIExpression()), !dbg !15590
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15591
  %3 = load i8, i8* %2, align 1, !dbg !15591
  call void @llvm.dbg.value(metadata i8 %3, metadata !15589, metadata !DIExpression()), !dbg !15590
  %4 = and i8 %3, 31, !dbg !15592
  %5 = icmp ne i8 %4, 0, !dbg !15593
  ret i1 %5, !dbg !15594
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15595 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15597, metadata !DIExpression()), !dbg !15598
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !15599
  br i1 %2, label %3, label %7, !dbg !15601

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15602, metadata !DIExpression()) #25, !dbg !15605
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15608
  %5 = load i8, i8* %4, align 1, !dbg !15609
  %6 = and i8 %5, 127, !dbg !15609
  store i8 %6, i8* %4, align 1, !dbg !15609
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15610, metadata !DIExpression()) #25, !dbg !15613
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !15617
  br label %7, !dbg !15618

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15619, metadata !DIExpression()) #25, !dbg !15622
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15624
  %9 = load i8, i8* %8, align 1, !dbg !15625
  %10 = or i8 %9, -128, !dbg !15625
  store i8 %10, i8* %8, align 1, !dbg !15625
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15626, metadata !DIExpression()) #25, !dbg !15629
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15633, metadata !DIExpression()) #25, !dbg !15641
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15639, metadata !DIExpression()) #25, !dbg !15641
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.210(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !15643
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !15640, metadata !DIExpression()) #25, !dbg !15641
  %12 = icmp eq %struct._dnode* %11, null, !dbg !15645
  br i1 %12, label %23, label %13, !dbg !15643

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !15640, metadata !DIExpression()) #25, !dbg !15641
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !15647
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !15640, metadata !DIExpression()) #25, !dbg !15641
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #27, !dbg !15648
  %17 = icmp sgt i32 %16, 0, !dbg !15651
  br i1 %17, label %18, label %20, !dbg !15652

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15653
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #27, !dbg !15655
  br label %25, !dbg !15656

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #27, !dbg !15645
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !15640, metadata !DIExpression()) #25, !dbg !15641
  %22 = icmp eq %struct._dnode* %21, null, !dbg !15645
  br i1 %22, label %23, label %13, !dbg !15643, !llvm.loop !15657

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15659
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #27, !dbg !15660
  br label %25, !dbg !15661

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15662
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !15663
  %28 = zext i1 %27 to i32, !dbg !15663
  tail call fastcc void @update_cache(i32 noundef %28) #26, !dbg !15664
  ret void, !dbg !15665
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !15666 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15668, metadata !DIExpression()), !dbg !15669
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #26, !dbg !15670
  ret i1 %2, !dbg !15671
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #9 !dbg !15672 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !15674, metadata !DIExpression()), !dbg !15676
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15675, metadata !DIExpression()), !dbg !15676
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !15677
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #26, !dbg !15678
  ret void, !dbg !15679
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.210(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !15680 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15684, metadata !DIExpression()), !dbg !15685
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.211(%struct._dnode* noundef %0) #26, !dbg !15686
  br i1 %2, label %6, label %3, !dbg !15686

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15687
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15687
  br label %6, !dbg !15686

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !15686
  ret %struct._dnode* %7, !dbg !15688
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !15689 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15693, metadata !DIExpression()), !dbg !15697
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15694, metadata !DIExpression()), !dbg !15697
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15698
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15698
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15695, metadata !DIExpression()), !dbg !15697
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15699
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !15700
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15701
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !15702
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15703
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15704
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15705
  ret void, !dbg !15706
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #4 !dbg !15707 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15711, metadata !DIExpression()), !dbg !15713
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15712, metadata !DIExpression()), !dbg !15713
  %3 = icmp eq %struct._dnode* %1, null, !dbg !15714
  br i1 %3, label %6, label %4, !dbg !15715

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #26, !dbg !15716
  br label %6, !dbg !15715

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !15715
  ret %struct._dnode* %7, !dbg !15717
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !15718 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15722, metadata !DIExpression()), !dbg !15725
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15723, metadata !DIExpression()), !dbg !15725
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15726
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15726
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15724, metadata !DIExpression()), !dbg !15725
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15727
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !15728
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15729
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !15730
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15731
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15732
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15733
  ret void, !dbg !15734
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !15735 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15737, metadata !DIExpression()), !dbg !15739
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !15740
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15747, metadata !DIExpression()) #25, !dbg !15749
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15750
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !15751
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !15751
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15738, metadata !DIExpression()), !dbg !15739
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15752, metadata !DIExpression()) #25, !dbg !15758
  call void @llvm.dbg.value(metadata i32 %0, metadata !15757, metadata !DIExpression()) #25, !dbg !15758
  %6 = icmp eq i32 %0, 0, !dbg !15761
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15763
  br i1 %6, label %8, label %15, !dbg !15764

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #27, !dbg !15765
  br i1 %9, label %15, label %10, !dbg !15767

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #27, !dbg !15768
  br i1 %11, label %15, label %12, !dbg !15770

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #27, !dbg !15771
  %14 = icmp eq i32 %13, 0, !dbg !15771
  br i1 %14, label %18, label %15, !dbg !15773

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !15774
  br i1 %16, label %18, label %17, !dbg !15777

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !15778
  br label %18, !dbg !15780

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !15763
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15763
  ret void, !dbg !15781
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #4 !dbg !15782 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15786, metadata !DIExpression()), !dbg !15789
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15787, metadata !DIExpression()), !dbg !15789
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.210(%struct._dnode* noundef %0) #26, !dbg !15790
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !15788, metadata !DIExpression()), !dbg !15789
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15787, metadata !DIExpression()), !dbg !15789
  ret %struct.k_thread* %3, !dbg !15791
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !15792 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15794, metadata !DIExpression()), !dbg !15795
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15796
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !15797
  %4 = xor i1 %3, true, !dbg !15798
  ret i1 %4, !dbg !15799
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !15800 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15802, metadata !DIExpression()), !dbg !15803
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !15804
  %3 = load i16, i16* %2, align 2, !dbg !15804
  %4 = icmp ult i16 %3, 128, !dbg !15805
  %5 = zext i1 %4 to i32, !dbg !15805
  ret i32 %5, !dbg !15806
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #4 !dbg !15807 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15813, metadata !DIExpression()), !dbg !15814
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15815
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #26, !dbg !15816
  %4 = xor i1 %3, true, !dbg !15817
  ret i1 %4, !dbg !15818
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #4 !dbg !15819 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15825, metadata !DIExpression()), !dbg !15826
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15827
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15827
  %4 = icmp ne %struct._dnode* %3, null, !dbg !15828
  ret i1 %4, !dbg !15829
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #4 !dbg !15830 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15832, metadata !DIExpression()), !dbg !15834
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15833, metadata !DIExpression()), !dbg !15834
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15835
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15835
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !15836
  br i1 %5, label %9, label %6, !dbg !15837

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15838
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !15838
  br label %9, !dbg !15837

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !15837
  ret %struct._dnode* %10, !dbg !15839
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.211(%struct._dnode* noundef readonly %0) unnamed_addr #4 !dbg !15840 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15844, metadata !DIExpression()), !dbg !15845
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15846
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15846
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !15847
  ret i1 %4, !dbg !15848
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !15849 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15853, metadata !DIExpression()), !dbg !15856
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15857
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15857
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15854, metadata !DIExpression()), !dbg !15856
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15858
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15858
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !15855, metadata !DIExpression()), !dbg !15856
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !15859
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !15860
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !15861
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !15862
  tail call fastcc void @sys_dnode_init.212(%struct._dnode* noundef %0) #26, !dbg !15863
  ret void, !dbg !15864
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.212(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #8 !dbg !15865 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15867, metadata !DIExpression()), !dbg !15868
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15869
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15870
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15871
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15872
  ret void, !dbg !15873
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !15874 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15878, metadata !DIExpression()), !dbg !15880
  call void @llvm.dbg.value(metadata i32 128, metadata !15879, metadata !DIExpression()), !dbg !15880
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15881
  %3 = load i8, i8* %2, align 1, !dbg !15881
  %4 = icmp slt i8 %3, 0, !dbg !15882
  ret i1 %4, !dbg !15883
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher.213(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !15884 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15886, metadata !DIExpression()), !dbg !15888
  call void @llvm.dbg.value(metadata i32 %1, metadata !15887, metadata !DIExpression()), !dbg !15888
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2.214(i32 noundef %0, i32 noundef %1) #26, !dbg !15889
  ret i1 %3, !dbg !15890
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #5 !dbg !15891 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15893, metadata !DIExpression()), !dbg !15894
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !15895
  ret i1 %2, !dbg !15896
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2.214(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !15897 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15899, metadata !DIExpression()), !dbg !15901
  call void @llvm.dbg.value(metadata i32 %1, metadata !15900, metadata !DIExpression()), !dbg !15901
  %3 = icmp slt i32 %0, %1, !dbg !15902
  ret i1 %3, !dbg !15903
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15904 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15906, metadata !DIExpression()), !dbg !15910
  call void @llvm.dbg.value(metadata i32 0, metadata !15907, metadata !DIExpression()), !dbg !15911
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15433, metadata !DIExpression()) #25, !dbg !15912
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15914, !srcloc !15448
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15914
  call void @llvm.dbg.value(metadata i32 %3, metadata !15445, metadata !DIExpression()) #25, !dbg !15916
  call void @llvm.dbg.value(metadata i32 undef, metadata !15446, metadata !DIExpression()) #25, !dbg !15916
  call void @llvm.dbg.value(metadata i32 %3, metadata !15439, metadata !DIExpression()) #25, !dbg !15912
  call void @llvm.dbg.value(metadata i32 %3, metadata !15909, metadata !DIExpression()), !dbg !15911
  call void @llvm.dbg.value(metadata i32 undef, metadata !15907, metadata !DIExpression()), !dbg !15911
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !15917
  call void @llvm.dbg.value(metadata i32 %3, metadata !15460, metadata !DIExpression()) #25, !dbg !15922
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15465, metadata !DIExpression()) #25, !dbg !15922
  call void @llvm.dbg.value(metadata i32 %3, metadata !15468, metadata !DIExpression()) #25, !dbg !15924
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15926, !srcloc !15474
  call void @llvm.dbg.value(metadata i32 1, metadata !15907, metadata !DIExpression()), !dbg !15911
  call void @llvm.dbg.value(metadata i32 undef, metadata !15907, metadata !DIExpression()), !dbg !15911
  ret void, !dbg !15927
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15928 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15930, metadata !DIExpression()), !dbg !15931
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !15932
  br i1 %2, label %24, label %3, !dbg !15934

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !15935
  br i1 %4, label %5, label %24, !dbg !15936

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15619, metadata !DIExpression()) #25, !dbg !15937
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15940
  %7 = load i8, i8* %6, align 1, !dbg !15941
  %8 = or i8 %7, -128, !dbg !15941
  store i8 %8, i8* %6, align 1, !dbg !15941
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15626, metadata !DIExpression()) #25, !dbg !15942
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15633, metadata !DIExpression()) #25, !dbg !15944
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15639, metadata !DIExpression()) #25, !dbg !15944
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.210(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !15946
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !15640, metadata !DIExpression()) #25, !dbg !15944
  %10 = icmp eq %struct._dnode* %9, null, !dbg !15947
  br i1 %10, label %21, label %11, !dbg !15946

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !15640, metadata !DIExpression()) #25, !dbg !15944
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !15948
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !15640, metadata !DIExpression()) #25, !dbg !15944
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #27, !dbg !15949
  %15 = icmp sgt i32 %14, 0, !dbg !15950
  br i1 %15, label %16, label %18, !dbg !15951

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15952
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #27, !dbg !15953
  br label %23, !dbg !15954

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #27, !dbg !15947
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !15640, metadata !DIExpression()) #25, !dbg !15944
  %20 = icmp eq %struct._dnode* %19, null, !dbg !15947
  br i1 %20, label %21, label %11, !dbg !15946, !llvm.loop !15955

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15957
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #27, !dbg !15958
  br label %23, !dbg !15959

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !15960
  br label %24, !dbg !15961

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !15962
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !15963 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15965, metadata !DIExpression()), !dbg !15966
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !15967
  br i1 %2, label %6, label %3, !dbg !15968

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #26, !dbg !15969
  %5 = xor i1 %4, true, !dbg !15968
  br label %6, !dbg !15968

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !15970
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15971 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15973, metadata !DIExpression()), !dbg !15977
  call void @llvm.dbg.value(metadata i32 0, metadata !15974, metadata !DIExpression()), !dbg !15978
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15433, metadata !DIExpression()) #25, !dbg !15979
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15981, !srcloc !15448
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15981
  call void @llvm.dbg.value(metadata i32 %3, metadata !15445, metadata !DIExpression()) #25, !dbg !15983
  call void @llvm.dbg.value(metadata i32 undef, metadata !15446, metadata !DIExpression()) #25, !dbg !15983
  call void @llvm.dbg.value(metadata i32 %3, metadata !15439, metadata !DIExpression()) #25, !dbg !15979
  call void @llvm.dbg.value(metadata i32 %3, metadata !15976, metadata !DIExpression()), !dbg !15978
  call void @llvm.dbg.value(metadata i32 undef, metadata !15974, metadata !DIExpression()), !dbg !15978
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #26, !dbg !15984
  call void @llvm.dbg.value(metadata i32 %3, metadata !15460, metadata !DIExpression()) #25, !dbg !15987
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15465, metadata !DIExpression()) #25, !dbg !15987
  call void @llvm.dbg.value(metadata i32 %3, metadata !15468, metadata !DIExpression()) #25, !dbg !15989
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15991, !srcloc !15474
  call void @llvm.dbg.value(metadata i32 1, metadata !15974, metadata !DIExpression()), !dbg !15978
  call void @llvm.dbg.value(metadata i32 undef, metadata !15974, metadata !DIExpression()), !dbg !15978
  ret void, !dbg !15992
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15993 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15995, metadata !DIExpression()), !dbg !15997
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15433, metadata !DIExpression()) #25, !dbg !15998
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16000, !srcloc !15448
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16000
  call void @llvm.dbg.value(metadata i32 %3, metadata !15445, metadata !DIExpression()) #25, !dbg !16002
  call void @llvm.dbg.value(metadata i32 undef, metadata !15446, metadata !DIExpression()) #25, !dbg !16002
  call void @llvm.dbg.value(metadata i32 %3, metadata !15439, metadata !DIExpression()) #25, !dbg !15998
  call void @llvm.dbg.value(metadata i32 %3, metadata !15996, metadata !DIExpression()), !dbg !15997
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #26, !dbg !16003
  br i1 %4, label %5, label %6, !dbg !16005

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !15460, metadata !DIExpression()) #25, !dbg !16006
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15465, metadata !DIExpression()) #25, !dbg !16006
  call void @llvm.dbg.value(metadata i32 %3, metadata !15468, metadata !DIExpression()) #25, !dbg !16009
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16011, !srcloc !15474
  br label %8, !dbg !16012

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.219(%struct.k_thread* noundef %0) #26, !dbg !16013
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !16014
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !16015
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !16015
  br label %8, !dbg !16016

8:                                                ; preds = %6, %5
  ret void, !dbg !16016
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !16017 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16019, metadata !DIExpression()), !dbg !16020
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16021
  %3 = load i8, i8* %2, align 1, !dbg !16021
  %4 = and i8 %3, 4, !dbg !16022
  %5 = icmp eq i8 %4, 0, !dbg !16023
  ret i1 %5, !dbg !16024
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.219(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !16025 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16027, metadata !DIExpression()), !dbg !16028
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16029
  %3 = load i8, i8* %2, align 1, !dbg !16030
  %4 = and i8 %3, -5, !dbg !16030
  store i8 %4, i8* %2, align 1, !dbg !16030
  ret void, !dbg !16031
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !16032 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !16035, metadata !DIExpression()), !dbg !16036
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16034, metadata !DIExpression()), !dbg !16036
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #26, !dbg !16037
  br i1 %4, label %5, label %9, !dbg !16039

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #26, !dbg !16040
  br i1 %6, label %7, label %9, !dbg !16041

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !16042, metadata !DIExpression()) #25, !dbg !16048
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16047, metadata !DIExpression()) #25, !dbg !16048
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #27, !dbg !16051
  br label %10, !dbg !16052

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !15460, metadata !DIExpression()) #25, !dbg !16053
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15465, metadata !DIExpression()) #25, !dbg !16053
  call void @llvm.dbg.value(metadata i32 %3, metadata !15468, metadata !DIExpression()) #25, !dbg !16056
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16058, !srcloc !15474
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !16059
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !16060 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16064, metadata !DIExpression()), !dbg !16065
  call void @llvm.dbg.value(metadata i32 %0, metadata !16066, metadata !DIExpression()), !dbg !16071
  %2 = icmp eq i32 %0, 0, !dbg !16073
  br i1 %2, label %3, label %6, !dbg !16074

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16075, !srcloc !16082
  call void @llvm.dbg.value(metadata i32 %4, metadata !16078, metadata !DIExpression()) #25, !dbg !16083
  %5 = icmp eq i32 %4, 0, !dbg !16084
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !16065
  ret i1 %7, !dbg !16085
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #4 !dbg !16086 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16089
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16088, metadata !DIExpression()), !dbg !16090
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16091
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !16092
  ret i1 %3, !dbg !16093
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !16094 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16096, metadata !DIExpression()), !dbg !16098
  %2 = tail call i32 @arch_swap(i32 noundef %0) #27, !dbg !16099
  call void @llvm.dbg.value(metadata i32 %2, metadata !16097, metadata !DIExpression()), !dbg !16098
  ret i32 %2, !dbg !16100
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16101 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16103, metadata !DIExpression()), !dbg !16107
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !16108
  call void @llvm.dbg.value(metadata i32 0, metadata !16104, metadata !DIExpression()), !dbg !16109
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15433, metadata !DIExpression()) #25, !dbg !16110
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16112, !srcloc !15448
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !16112
  call void @llvm.dbg.value(metadata i32 %4, metadata !15445, metadata !DIExpression()) #25, !dbg !16114
  call void @llvm.dbg.value(metadata i32 undef, metadata !15446, metadata !DIExpression()) #25, !dbg !16114
  call void @llvm.dbg.value(metadata i32 %4, metadata !15439, metadata !DIExpression()) #25, !dbg !16110
  call void @llvm.dbg.value(metadata i32 %4, metadata !16106, metadata !DIExpression()), !dbg !16109
  call void @llvm.dbg.value(metadata i32 undef, metadata !16104, metadata !DIExpression()), !dbg !16109
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !16115
  br i1 %5, label %6, label %10, !dbg !16119

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15602, metadata !DIExpression()) #25, !dbg !16120
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16123
  %8 = load i8, i8* %7, align 1, !dbg !16124
  %9 = and i8 %8, 127, !dbg !16124
  store i8 %9, i8* %7, align 1, !dbg !16124
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15610, metadata !DIExpression()) #25, !dbg !16125
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !16127
  br label %10, !dbg !16128

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #26, !dbg !16129
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16130
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !16131
  %13 = zext i1 %12 to i32, !dbg !16131
  tail call fastcc void @update_cache(i32 noundef %13) #26, !dbg !16132
  call void @llvm.dbg.value(metadata i32 %4, metadata !15460, metadata !DIExpression()) #25, !dbg !16133
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15465, metadata !DIExpression()) #25, !dbg !16133
  call void @llvm.dbg.value(metadata i32 %4, metadata !15468, metadata !DIExpression()) #25, !dbg !16135
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !16137, !srcloc !15474
  call void @llvm.dbg.value(metadata i32 1, metadata !16104, metadata !DIExpression()), !dbg !16109
  call void @llvm.dbg.value(metadata i32 undef, metadata !16104, metadata !DIExpression()), !dbg !16109
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16138
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !16140
  br i1 %15, label %16, label %17, !dbg !16141

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !16142
  br label %17, !dbg !16144

17:                                               ; preds = %16, %10
  ret void, !dbg !16145
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16146 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16148, metadata !DIExpression()), !dbg !16149
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16150
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #27, !dbg !16151
  ret i32 %3, !dbg !16152
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !16153 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16155, metadata !DIExpression()), !dbg !16156
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16157
  %3 = load i8, i8* %2, align 1, !dbg !16158
  %4 = or i8 %3, 16, !dbg !16158
  store i8 %4, i8* %2, align 1, !dbg !16158
  ret void, !dbg !16159
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !16160 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16161, !srcloc !15448
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16161
  call void @llvm.dbg.value(metadata i32 %2, metadata !15445, metadata !DIExpression()) #25, !dbg !16163
  call void @llvm.dbg.value(metadata i32 undef, metadata !15446, metadata !DIExpression()) #25, !dbg !16163
  tail call void @z_reschedule_irqlock(i32 noundef %2) #26, !dbg !16164
  ret void, !dbg !16165
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !16166 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16168, metadata !DIExpression()), !dbg !16169
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #26, !dbg !16170
  br i1 %2, label %3, label %5, !dbg !16172

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !16173
  br label %6, !dbg !16175

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !15468, metadata !DIExpression()) #25, !dbg !16176
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #25, !dbg !16179, !srcloc !15474
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !16180
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16181 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16183, metadata !DIExpression()), !dbg !16185
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15433, metadata !DIExpression()) #25, !dbg !16186
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16188, !srcloc !15448
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16188
  call void @llvm.dbg.value(metadata i32 %3, metadata !15445, metadata !DIExpression()) #25, !dbg !16190
  call void @llvm.dbg.value(metadata i32 undef, metadata !15446, metadata !DIExpression()) #25, !dbg !16190
  call void @llvm.dbg.value(metadata i32 %3, metadata !15439, metadata !DIExpression()) #25, !dbg !16186
  call void @llvm.dbg.value(metadata i32 %3, metadata !16184, metadata !DIExpression()), !dbg !16185
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #26, !dbg !16191
  br i1 %4, label %6, label %5, !dbg !16193

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !15460, metadata !DIExpression()) #25, !dbg !16194
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15465, metadata !DIExpression()) #25, !dbg !16194
  call void @llvm.dbg.value(metadata i32 %3, metadata !15468, metadata !DIExpression()) #25, !dbg !16197
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16199, !srcloc !15474
  br label %8, !dbg !16200

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !16201
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !16202
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !16203
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !16203
  br label %8, !dbg !16204

8:                                                ; preds = %6, %5
  ret void, !dbg !16204
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !16205 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16207, metadata !DIExpression()), !dbg !16208
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16209
  %3 = load i8, i8* %2, align 1, !dbg !16209
  %4 = and i8 %3, 16, !dbg !16210
  %5 = icmp ne i8 %4, 0, !dbg !16211
  ret i1 %5, !dbg !16212
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !16213 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16215, metadata !DIExpression()), !dbg !16216
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16217
  %3 = load i8, i8* %2, align 1, !dbg !16218
  %4 = and i8 %3, -17, !dbg !16218
  store i8 %4, i8* %2, align 1, !dbg !16218
  ret void, !dbg !16219
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16220 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16230, metadata !DIExpression()), !dbg !16234
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16228, metadata !DIExpression()), !dbg !16234
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !16229, metadata !DIExpression()), !dbg !16234
  call void @llvm.dbg.value(metadata i32 0, metadata !16231, metadata !DIExpression()), !dbg !16235
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15433, metadata !DIExpression()) #25, !dbg !16236
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16238, !srcloc !15448
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !16238
  call void @llvm.dbg.value(metadata i32 %5, metadata !15445, metadata !DIExpression()) #25, !dbg !16240
  call void @llvm.dbg.value(metadata i32 undef, metadata !15446, metadata !DIExpression()) #25, !dbg !16240
  call void @llvm.dbg.value(metadata i32 %5, metadata !15439, metadata !DIExpression()) #25, !dbg !16236
  call void @llvm.dbg.value(metadata i32 %5, metadata !16233, metadata !DIExpression()), !dbg !16235
  call void @llvm.dbg.value(metadata i32 undef, metadata !16231, metadata !DIExpression()), !dbg !16235
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) #26, !dbg !16241
  call void @llvm.dbg.value(metadata i32 %5, metadata !15460, metadata !DIExpression()) #25, !dbg !16244
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15465, metadata !DIExpression()) #25, !dbg !16244
  call void @llvm.dbg.value(metadata i32 %5, metadata !15468, metadata !DIExpression()) #25, !dbg !16246
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #25, !dbg !16248, !srcloc !15474
  call void @llvm.dbg.value(metadata i32 1, metadata !16231, metadata !DIExpression()), !dbg !16235
  call void @llvm.dbg.value(metadata i32 undef, metadata !16231, metadata !DIExpression()), !dbg !16235
  ret void, !dbg !16249
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !16250 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16254, metadata !DIExpression()), !dbg !16255
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16252, metadata !DIExpression()), !dbg !16255
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !16253, metadata !DIExpression()), !dbg !16255
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) #26, !dbg !16256
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #26, !dbg !16257
  ret void, !dbg !16258
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) unnamed_addr #1 !dbg !16259 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16263, metadata !DIExpression()), !dbg !16265
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !16264, metadata !DIExpression()), !dbg !16265
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #26, !dbg !16266
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #26, !dbg !16267
  %3 = icmp eq %struct._wait_q_t* %1, null, !dbg !16268
  br i1 %3, label %21, label %4, !dbg !16270

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16271
  store %struct._wait_q_t* %1, %struct._wait_q_t** %5, align 8, !dbg !16273
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %1, i32 0, i32 0, !dbg !16274
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !15633, metadata !DIExpression()) #25, !dbg !16275
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15639, metadata !DIExpression()) #25, !dbg !16275
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.210(%struct._dnode* noundef nonnull %6) #27, !dbg !16277
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !15640, metadata !DIExpression()) #25, !dbg !16275
  %8 = icmp eq %struct._dnode* %7, null, !dbg !16278
  br i1 %8, label %19, label %9, !dbg !16277

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !15640, metadata !DIExpression()) #25, !dbg !16275
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !16279
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !15640, metadata !DIExpression()) #25, !dbg !16275
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #27, !dbg !16280
  %13 = icmp sgt i32 %12, 0, !dbg !16281
  br i1 %13, label %14, label %16, !dbg !16282

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16283
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #27, !dbg !16284
  br label %21, !dbg !16285

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #27, !dbg !16278
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !15640, metadata !DIExpression()) #25, !dbg !16275
  %18 = icmp eq %struct._dnode* %17, null, !dbg !16278
  br i1 %18, label %19, label %9, !dbg !16277, !llvm.loop !16286

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16288
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #27, !dbg !16289
  br label %21, !dbg !16290

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !16291
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !16292 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !16297, metadata !DIExpression()), !dbg !16298
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16296, metadata !DIExpression()), !dbg !16298
  %4 = icmp eq i64 %3, -1, !dbg !16299
  br i1 %4, label %6, label %5, !dbg !16301

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.222(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !16302
  br label %6, !dbg !16304

6:                                                ; preds = %5, %2
  ret void, !dbg !16305
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.222(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !16306 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16309, metadata !DIExpression()), !dbg !16310
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16308, metadata !DIExpression()), !dbg !16310
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16311
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #27, !dbg !16312
  ret void, !dbg !16313
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !16314 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16316, metadata !DIExpression()), !dbg !16324
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !16325
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !16325
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16317, metadata !DIExpression()), !dbg !16324
  call void @llvm.dbg.value(metadata i32 0, metadata !16318, metadata !DIExpression()), !dbg !16326
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15433, metadata !DIExpression()) #25, !dbg !16327
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16329, !srcloc !15448
  call void @llvm.dbg.value(metadata i32 undef, metadata !15445, metadata !DIExpression()) #25, !dbg !16331
  call void @llvm.dbg.value(metadata i32 undef, metadata !15446, metadata !DIExpression()) #25, !dbg !16331
  call void @llvm.dbg.value(metadata i32 undef, metadata !15439, metadata !DIExpression()) #25, !dbg !16327
  call void @llvm.dbg.value(metadata i32 undef, metadata !16320, metadata !DIExpression()), !dbg !16326
  call void @llvm.dbg.value(metadata i32 undef, metadata !16318, metadata !DIExpression()), !dbg !16326
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !16332
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !16333
  %7 = load i8, i8* %6, align 1, !dbg !16333
  %8 = and i8 %7, 40, !dbg !16334
  %9 = icmp eq i8 %8, 0, !dbg !16334
  call void @llvm.dbg.value(metadata i1 %9, metadata !16321, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16335
  br i1 %9, label %10, label %17, !dbg !16336

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !16337
  %12 = bitcast void (%struct._timeout*)** %11 to %struct._wait_q_t**, !dbg !16337
  %13 = load %struct._wait_q_t*, %struct._wait_q_t** %12, align 8, !dbg !16337
  %14 = icmp eq %struct._wait_q_t* %13, null, !dbg !16341
  br i1 %14, label %16, label %15, !dbg !16342

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #26, !dbg !16343
  br label %16, !dbg !16345

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.219(%struct.k_thread* noundef nonnull %3) #26, !dbg !16346
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #26, !dbg !16347
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #26, !dbg !16348
  br label %17, !dbg !16349

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !16329
  call void @llvm.dbg.value(metadata i32 %18, metadata !15445, metadata !DIExpression()) #25, !dbg !16331
  call void @llvm.dbg.value(metadata i32 %18, metadata !15439, metadata !DIExpression()) #25, !dbg !16327
  call void @llvm.dbg.value(metadata i32 %18, metadata !16320, metadata !DIExpression()), !dbg !16326
  call void @llvm.dbg.value(metadata i32 undef, metadata !15460, metadata !DIExpression()) #25, !dbg !16350
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15465, metadata !DIExpression()) #25, !dbg !16350
  call void @llvm.dbg.value(metadata i32 undef, metadata !15468, metadata !DIExpression()) #25, !dbg !16352
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #25, !dbg !16354, !srcloc !15474
  call void @llvm.dbg.value(metadata i32 1, metadata !16318, metadata !DIExpression()), !dbg !16326
  call void @llvm.dbg.value(metadata i32 undef, metadata !16318, metadata !DIExpression()), !dbg !16326
  ret void, !dbg !16355
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !16356 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16358, metadata !DIExpression()), !dbg !16359
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !16360
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #26, !dbg !16361
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16362
  store %struct._wait_q_t* null, %struct._wait_q_t** %2, align 8, !dbg !16363
  ret void, !dbg !16364
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !16365 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16367, metadata !DIExpression()), !dbg !16368
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16369
  %3 = load i8, i8* %2, align 1, !dbg !16370
  %4 = and i8 %3, -3, !dbg !16370
  store i8 %4, i8* %2, align 1, !dbg !16370
  ret void, !dbg !16371
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16372 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16374, metadata !DIExpression()), !dbg !16375
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !16376
  br i1 %2, label %3, label %7, !dbg !16378

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15602, metadata !DIExpression()) #25, !dbg !16379
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16382
  %5 = load i8, i8* %4, align 1, !dbg !16383
  %6 = and i8 %5, 127, !dbg !16383
  store i8 %6, i8* %4, align 1, !dbg !16383
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15610, metadata !DIExpression()) #25, !dbg !16384
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !16386
  br label %7, !dbg !16387

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16388
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !16389
  %10 = zext i1 %9 to i32, !dbg !16389
  tail call fastcc void @update_cache(i32 noundef %10) #26, !dbg !16390
  ret void, !dbg !16391
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !16392 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16394, metadata !DIExpression()), !dbg !16395
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16396
  %3 = load i8, i8* %2, align 1, !dbg !16397
  %4 = or i8 %3, 2, !dbg !16397
  store i8 %4, i8* %2, align 1, !dbg !16397
  ret void, !dbg !16398
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #24 !dbg !16399 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16401, metadata !DIExpression()), !dbg !16405
  call void @llvm.dbg.value(metadata i32 0, metadata !16402, metadata !DIExpression()), !dbg !16406
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15433, metadata !DIExpression()) #25, !dbg !16407
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16409, !srcloc !15448
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16409
  call void @llvm.dbg.value(metadata i32 %3, metadata !15445, metadata !DIExpression()) #25, !dbg !16411
  call void @llvm.dbg.value(metadata i32 undef, metadata !15446, metadata !DIExpression()) #25, !dbg !16411
  call void @llvm.dbg.value(metadata i32 %3, metadata !15439, metadata !DIExpression()) #25, !dbg !16407
  call void @llvm.dbg.value(metadata i32 %3, metadata !16404, metadata !DIExpression()), !dbg !16406
  call void @llvm.dbg.value(metadata i32 undef, metadata !16402, metadata !DIExpression()), !dbg !16406
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !16412
  call void @llvm.dbg.value(metadata i32 %3, metadata !15460, metadata !DIExpression()) #25, !dbg !16415
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15465, metadata !DIExpression()) #25, !dbg !16415
  call void @llvm.dbg.value(metadata i32 %3, metadata !15468, metadata !DIExpression()) #25, !dbg !16417
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16419, !srcloc !15474
  call void @llvm.dbg.value(metadata i32 1, metadata !16402, metadata !DIExpression()), !dbg !16406
  call void @llvm.dbg.value(metadata i32 undef, metadata !16402, metadata !DIExpression()), !dbg !16406
  ret void, !dbg !16420
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16421 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16427, metadata !DIExpression()), !dbg !16432
  call void @llvm.dbg.value(metadata i32 %0, metadata !16425, metadata !DIExpression()), !dbg !16432
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !16426, metadata !DIExpression()), !dbg !16432
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16433
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %struct._wait_q_t* noundef %1, [1 x i64] %2) #26, !dbg !16434
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16435
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !16436
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !16437
  call void @llvm.dbg.value(metadata i32 %6, metadata !16428, metadata !DIExpression()), !dbg !16432
  call void @llvm.dbg.value(metadata i32 0, metadata !16429, metadata !DIExpression()), !dbg !16438
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15433, metadata !DIExpression()) #25, !dbg !16439
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16441, !srcloc !15448
  call void @llvm.dbg.value(metadata i32 undef, metadata !15445, metadata !DIExpression()) #25, !dbg !16443
  call void @llvm.dbg.value(metadata i32 undef, metadata !15446, metadata !DIExpression()) #25, !dbg !16443
  call void @llvm.dbg.value(metadata i32 undef, metadata !15439, metadata !DIExpression()) #25, !dbg !16439
  call void @llvm.dbg.value(metadata i32 undef, metadata !16431, metadata !DIExpression()), !dbg !16438
  call void @llvm.dbg.value(metadata i32 undef, metadata !16429, metadata !DIExpression()), !dbg !16438
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !16444
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16448
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !16449
  br i1 %10, label %11, label %12, !dbg !16450

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !16451
  br label %12, !dbg !16453

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !16441
  call void @llvm.dbg.value(metadata i32 %13, metadata !15445, metadata !DIExpression()) #25, !dbg !16443
  call void @llvm.dbg.value(metadata i32 %13, metadata !15439, metadata !DIExpression()) #25, !dbg !16439
  call void @llvm.dbg.value(metadata i32 %13, metadata !16431, metadata !DIExpression()), !dbg !16438
  call void @llvm.dbg.value(metadata i32 undef, metadata !15460, metadata !DIExpression()) #25, !dbg !16454
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15465, metadata !DIExpression()) #25, !dbg !16454
  call void @llvm.dbg.value(metadata i32 undef, metadata !15468, metadata !DIExpression()) #25, !dbg !16456
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #25, !dbg !16458, !srcloc !15474
  call void @llvm.dbg.value(metadata i32 1, metadata !16429, metadata !DIExpression()), !dbg !16438
  call void @llvm.dbg.value(metadata i32 undef, metadata !16429, metadata !DIExpression()), !dbg !16438
  ret i32 %6, !dbg !16459
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !16460 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16465, metadata !DIExpression()), !dbg !16468
  call void @llvm.dbg.value(metadata i64 undef, metadata !16467, metadata !DIExpression()), !dbg !16468
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16464, metadata !DIExpression()), !dbg !16468
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !16466, metadata !DIExpression()), !dbg !16468
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16469
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !16470
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15433, metadata !DIExpression()) #25, !dbg !16471
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16473, !srcloc !15448
  call void @llvm.dbg.value(metadata i32 undef, metadata !15445, metadata !DIExpression()) #25, !dbg !16475
  call void @llvm.dbg.value(metadata i32 undef, metadata !15446, metadata !DIExpression()) #25, !dbg !16475
  call void @llvm.dbg.value(metadata i32 undef, metadata !15439, metadata !DIExpression()) #25, !dbg !16471
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16476
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %struct._wait_q_t* noundef %2, [1 x i64] %3) #26, !dbg !16477
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !16042, metadata !DIExpression()) #25, !dbg !16478
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16047, metadata !DIExpression()) #25, !dbg !16478
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #27, !dbg !16480
  ret i32 %9, !dbg !16481
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !16482 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16486, metadata !DIExpression()), !dbg !16491
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16487, metadata !DIExpression()), !dbg !16491
  call void @llvm.dbg.value(metadata i32 0, metadata !16488, metadata !DIExpression()), !dbg !16492
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15433, metadata !DIExpression()) #25, !dbg !16493
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16495, !srcloc !15448
  call void @llvm.dbg.value(metadata i32 undef, metadata !15445, metadata !DIExpression()) #25, !dbg !16497
  call void @llvm.dbg.value(metadata i32 undef, metadata !15446, metadata !DIExpression()) #25, !dbg !16497
  call void @llvm.dbg.value(metadata i32 undef, metadata !15439, metadata !DIExpression()) #25, !dbg !16493
  call void @llvm.dbg.value(metadata i32 undef, metadata !16490, metadata !DIExpression()), !dbg !16492
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16487, metadata !DIExpression()), !dbg !16491
  call void @llvm.dbg.value(metadata i32 undef, metadata !16488, metadata !DIExpression()), !dbg !16492
  %3 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !16498
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16487, metadata !DIExpression()), !dbg !16491
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !16501
  br i1 %5, label %7, label %6, !dbg !16503

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !16504
  br label %7, !dbg !16506

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !16495
  call void @llvm.dbg.value(metadata i32 %8, metadata !15445, metadata !DIExpression()) #25, !dbg !16497
  call void @llvm.dbg.value(metadata i32 %8, metadata !15439, metadata !DIExpression()) #25, !dbg !16493
  call void @llvm.dbg.value(metadata i32 %8, metadata !16490, metadata !DIExpression()), !dbg !16492
  call void @llvm.dbg.value(metadata i32 undef, metadata !15460, metadata !DIExpression()) #25, !dbg !16507
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15465, metadata !DIExpression()) #25, !dbg !16507
  call void @llvm.dbg.value(metadata i32 undef, metadata !15468, metadata !DIExpression()) #25, !dbg !16509
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !16511, !srcloc !15474
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16487, metadata !DIExpression()), !dbg !16491
  call void @llvm.dbg.value(metadata i32 undef, metadata !16488, metadata !DIExpression()), !dbg !16492
  ret %struct.k_thread* %4, !dbg !16512
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !16513 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16515, metadata !DIExpression()), !dbg !16520
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16516, metadata !DIExpression()), !dbg !16520
  call void @llvm.dbg.value(metadata i32 0, metadata !16517, metadata !DIExpression()), !dbg !16521
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15433, metadata !DIExpression()) #25, !dbg !16522
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16524, !srcloc !15448
  call void @llvm.dbg.value(metadata i32 undef, metadata !15445, metadata !DIExpression()) #25, !dbg !16526
  call void @llvm.dbg.value(metadata i32 undef, metadata !15446, metadata !DIExpression()) #25, !dbg !16526
  call void @llvm.dbg.value(metadata i32 undef, metadata !15439, metadata !DIExpression()) #25, !dbg !16522
  call void @llvm.dbg.value(metadata i32 undef, metadata !16519, metadata !DIExpression()), !dbg !16521
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16516, metadata !DIExpression()), !dbg !16520
  call void @llvm.dbg.value(metadata i32 undef, metadata !16517, metadata !DIExpression()), !dbg !16521
  %3 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !16527
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16516, metadata !DIExpression()), !dbg !16520
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !16530
  br i1 %5, label %8, label %6, !dbg !16532

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !16533
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !16535
  br label %8, !dbg !16536

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !16524
  call void @llvm.dbg.value(metadata i32 %9, metadata !15445, metadata !DIExpression()) #25, !dbg !16526
  call void @llvm.dbg.value(metadata i32 %9, metadata !15439, metadata !DIExpression()) #25, !dbg !16522
  call void @llvm.dbg.value(metadata i32 %9, metadata !16519, metadata !DIExpression()), !dbg !16521
  call void @llvm.dbg.value(metadata i32 undef, metadata !15460, metadata !DIExpression()) #25, !dbg !16537
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15465, metadata !DIExpression()) #25, !dbg !16537
  call void @llvm.dbg.value(metadata i32 undef, metadata !15468, metadata !DIExpression()) #25, !dbg !16539
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !16541, !srcloc !15474
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16516, metadata !DIExpression()), !dbg !16520
  call void @llvm.dbg.value(metadata i32 undef, metadata !16517, metadata !DIExpression()), !dbg !16521
  ret %struct.k_thread* %4, !dbg !16542
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16543 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16545, metadata !DIExpression()), !dbg !16546
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16401, metadata !DIExpression()) #25, !dbg !16547
  call void @llvm.dbg.value(metadata i32 0, metadata !16402, metadata !DIExpression()) #25, !dbg !16549
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15433, metadata !DIExpression()) #25, !dbg !16550
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16552, !srcloc !15448
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16552
  call void @llvm.dbg.value(metadata i32 %3, metadata !15445, metadata !DIExpression()) #25, !dbg !16554
  call void @llvm.dbg.value(metadata i32 undef, metadata !15446, metadata !DIExpression()) #25, !dbg !16554
  call void @llvm.dbg.value(metadata i32 %3, metadata !15439, metadata !DIExpression()) #25, !dbg !16550
  call void @llvm.dbg.value(metadata i32 %3, metadata !16404, metadata !DIExpression()) #25, !dbg !16549
  call void @llvm.dbg.value(metadata i32 undef, metadata !16402, metadata !DIExpression()) #25, !dbg !16549
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #27, !dbg !16555
  call void @llvm.dbg.value(metadata i32 %3, metadata !15460, metadata !DIExpression()) #25, !dbg !16556
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15465, metadata !DIExpression()) #25, !dbg !16556
  call void @llvm.dbg.value(metadata i32 %3, metadata !15468, metadata !DIExpression()) #25, !dbg !16558
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16560, !srcloc !15474
  call void @llvm.dbg.value(metadata i32 1, metadata !16402, metadata !DIExpression()) #25, !dbg !16549
  call void @llvm.dbg.value(metadata i32 undef, metadata !16402, metadata !DIExpression()) #25, !dbg !16549
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !16561
  ret void, !dbg !16562
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16563 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16565, metadata !DIExpression()), !dbg !16571
  call void @llvm.dbg.value(metadata i32 %1, metadata !16566, metadata !DIExpression()), !dbg !16571
  call void @llvm.dbg.value(metadata i8 0, metadata !16567, metadata !DIExpression()), !dbg !16571
  call void @llvm.dbg.value(metadata i32 0, metadata !16568, metadata !DIExpression()), !dbg !16572
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15433, metadata !DIExpression()) #25, !dbg !16573
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16575, !srcloc !15448
  call void @llvm.dbg.value(metadata i32 undef, metadata !15445, metadata !DIExpression()) #25, !dbg !16577
  call void @llvm.dbg.value(metadata i32 undef, metadata !15446, metadata !DIExpression()) #25, !dbg !16577
  call void @llvm.dbg.value(metadata i32 undef, metadata !15439, metadata !DIExpression()) #25, !dbg !16573
  call void @llvm.dbg.value(metadata i32 undef, metadata !16570, metadata !DIExpression()), !dbg !16572
  call void @llvm.dbg.value(metadata i8 poison, metadata !16567, metadata !DIExpression()), !dbg !16571
  call void @llvm.dbg.value(metadata i32 undef, metadata !16568, metadata !DIExpression()), !dbg !16572
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !16578
  call void @llvm.dbg.value(metadata i1 %6, metadata !16567, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16571
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !16581

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15602, metadata !DIExpression()) #25, !dbg !16582
  %11 = load i8, i8* %4, align 1, !dbg !16588
  %12 = and i8 %11, 127, !dbg !16588
  store i8 %12, i8* %4, align 1, !dbg !16588
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15610, metadata !DIExpression()) #25, !dbg !16589
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !16591
  store i8 %9, i8* %8, align 2, !dbg !16592
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15619, metadata !DIExpression()) #25, !dbg !16593
  %13 = load i8, i8* %4, align 1, !dbg !16595
  %14 = or i8 %13, -128, !dbg !16595
  store i8 %14, i8* %4, align 1, !dbg !16595
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15626, metadata !DIExpression()) #25, !dbg !16596
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15633, metadata !DIExpression()) #25, !dbg !16598
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15639, metadata !DIExpression()) #25, !dbg !16598
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.210(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !16600
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !15640, metadata !DIExpression()) #25, !dbg !16598
  %16 = icmp eq %struct._dnode* %15, null, !dbg !16601
  br i1 %16, label %26, label %17, !dbg !16600

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !15640, metadata !DIExpression()) #25, !dbg !16598
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !16602
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !15640, metadata !DIExpression()) #25, !dbg !16598
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #27, !dbg !16603
  %21 = icmp sgt i32 %20, 0, !dbg !16604
  br i1 %21, label %22, label %23, !dbg !16605

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #27, !dbg !16606
  br label %27, !dbg !16607

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #27, !dbg !16601
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !15640, metadata !DIExpression()) #25, !dbg !16598
  %25 = icmp eq %struct._dnode* %24, null, !dbg !16601
  br i1 %25, label %26, label %17, !dbg !16600, !llvm.loop !16608

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #27, !dbg !16610
  br label %27, !dbg !16611

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !16612
  br label %29, !dbg !16613

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !16614
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !16575
  call void @llvm.dbg.value(metadata i32 %30, metadata !15445, metadata !DIExpression()) #25, !dbg !16577
  call void @llvm.dbg.value(metadata i32 %30, metadata !15439, metadata !DIExpression()) #25, !dbg !16573
  call void @llvm.dbg.value(metadata i32 %30, metadata !16570, metadata !DIExpression()), !dbg !16572
  call void @llvm.dbg.value(metadata i32 undef, metadata !15460, metadata !DIExpression()) #25, !dbg !16616
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15465, metadata !DIExpression()) #25, !dbg !16616
  call void @llvm.dbg.value(metadata i32 undef, metadata !15468, metadata !DIExpression()) #25, !dbg !16618
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #25, !dbg !16620, !srcloc !15474
  call void @llvm.dbg.value(metadata i8 poison, metadata !16567, metadata !DIExpression()), !dbg !16571
  call void @llvm.dbg.value(metadata i32 undef, metadata !16568, metadata !DIExpression()), !dbg !16572
  ret i1 %6, !dbg !16621
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16622 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16626, metadata !DIExpression()), !dbg !16629
  call void @llvm.dbg.value(metadata i32 %1, metadata !16627, metadata !DIExpression()), !dbg !16629
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !16630
  call void @llvm.dbg.value(metadata i1 %3, metadata !16628, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16629
  br i1 %3, label %4, label %12, !dbg !16631

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16633
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !16634
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !16634
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !16634
  %9 = load i8, i8* %8, align 1, !dbg !16634
  %10 = icmp eq i8 %9, 0, !dbg !16635
  br i1 %10, label %11, label %12, !dbg !16636

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !16637
  br label %12, !dbg !16639

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !16640
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !16641 {
  call void @llvm.dbg.value(metadata i32 0, metadata !16643, metadata !DIExpression()), !dbg !16646
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15433, metadata !DIExpression()) #25, !dbg !16647
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16649, !srcloc !15448
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16649
  call void @llvm.dbg.value(metadata i32 %2, metadata !15445, metadata !DIExpression()) #25, !dbg !16651
  call void @llvm.dbg.value(metadata i32 undef, metadata !15446, metadata !DIExpression()) #25, !dbg !16651
  call void @llvm.dbg.value(metadata i32 %2, metadata !15439, metadata !DIExpression()) #25, !dbg !16647
  call void @llvm.dbg.value(metadata i32 %2, metadata !16645, metadata !DIExpression()), !dbg !16646
  call void @llvm.dbg.value(metadata i32 undef, metadata !16643, metadata !DIExpression()), !dbg !16646
  tail call fastcc void @z_sched_lock() #26, !dbg !16652
  call void @llvm.dbg.value(metadata i32 %2, metadata !15460, metadata !DIExpression()) #25, !dbg !16655
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15465, metadata !DIExpression()) #25, !dbg !16655
  call void @llvm.dbg.value(metadata i32 %2, metadata !15468, metadata !DIExpression()) #25, !dbg !16657
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !16659, !srcloc !15474
  call void @llvm.dbg.value(metadata i32 1, metadata !16643, metadata !DIExpression()), !dbg !16646
  call void @llvm.dbg.value(metadata i32 undef, metadata !16643, metadata !DIExpression()), !dbg !16646
  ret void, !dbg !16660
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !16661 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16662
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !16663
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !16663
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !16663
  %5 = load i8, i8* %4, align 1, !dbg !16664
  %6 = add i8 %5, -1, !dbg !16664
  store i8 %6, i8* %4, align 1, !dbg !16664
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !16665, !srcloc !16667
  ret void, !dbg !16668
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !16669 {
  call void @llvm.dbg.value(metadata i32 0, metadata !16671, metadata !DIExpression()), !dbg !16674
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15433, metadata !DIExpression()) #25, !dbg !16675
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16677, !srcloc !15448
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16677
  call void @llvm.dbg.value(metadata i32 %2, metadata !15445, metadata !DIExpression()) #25, !dbg !16679
  call void @llvm.dbg.value(metadata i32 undef, metadata !15446, metadata !DIExpression()) #25, !dbg !16679
  call void @llvm.dbg.value(metadata i32 %2, metadata !15439, metadata !DIExpression()) #25, !dbg !16675
  call void @llvm.dbg.value(metadata i32 %2, metadata !16673, metadata !DIExpression()), !dbg !16674
  call void @llvm.dbg.value(metadata i32 undef, metadata !16671, metadata !DIExpression()), !dbg !16674
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16680
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !16683
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !16683
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !16683
  %7 = load i8, i8* %6, align 1, !dbg !16684
  %8 = add i8 %7, 1, !dbg !16684
  store i8 %8, i8* %6, align 1, !dbg !16684
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !16685
  call void @llvm.dbg.value(metadata i32 %2, metadata !15460, metadata !DIExpression()) #25, !dbg !16686
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15465, metadata !DIExpression()) #25, !dbg !16686
  call void @llvm.dbg.value(metadata i32 %2, metadata !15468, metadata !DIExpression()) #25, !dbg !16688
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !16690, !srcloc !15474
  call void @llvm.dbg.value(metadata i32 1, metadata !16671, metadata !DIExpression()), !dbg !16674
  call void @llvm.dbg.value(metadata i32 undef, metadata !16671, metadata !DIExpression()), !dbg !16674
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !16691
  ret void, !dbg !16692
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #4 !dbg !16693 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16694
  ret %struct.k_thread* %1, !dbg !16695
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #4 !dbg !16696 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !16700, metadata !DIExpression()), !dbg !16705
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !16701, metadata !DIExpression()), !dbg !16705
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !16706
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16702, metadata !DIExpression()), !dbg !16705
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !16707
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16703, metadata !DIExpression()), !dbg !16705
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #26, !dbg !16708
  call void @llvm.dbg.value(metadata i32 %5, metadata !16704, metadata !DIExpression()), !dbg !16705
  %6 = icmp sgt i32 %5, 0, !dbg !16709
  br i1 %6, label %17, label %7, !dbg !16711

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !16712
  br i1 %8, label %17, label %9, !dbg !16714

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !16715
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !16715
  %12 = load i32, i32* %11, align 8, !dbg !16715
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !16717
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !16717
  %15 = load i32, i32* %14, align 8, !dbg !16717
  %16 = icmp ult i32 %12, %15, !dbg !16718
  br label %17, !dbg !16719

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !16720
  ret i1 %18, !dbg !16721
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16722 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16739, metadata !DIExpression()), !dbg !16754
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16740, metadata !DIExpression()), !dbg !16754
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16755
  %5 = load i32, i32* %4, align 4, !dbg !16756
  %6 = add nsw i32 %5, 1, !dbg !16756
  store i32 %6, i32* %4, align 4, !dbg !16756
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !16757
  store i32 %5, i32* %7, align 8, !dbg !16758
  %8 = load i32, i32* %4, align 4, !dbg !16759
  %9 = icmp eq i32 %8, 0, !dbg !16760
  br i1 %9, label %10, label %32, !dbg !16761

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !16762
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #25, !dbg !16762
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !16742, metadata !DIExpression()), !dbg !16762
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16762
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !16762
  %14 = load i32, i32* %13, align 4, !dbg !16762
  %15 = shl i32 %14, 2, !dbg !16762
  %16 = alloca i8, i32 %15, align 8, !dbg !16762
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !16762
  store i8* %16, i8** %17, align 4, !dbg !16762
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !16762
  %19 = alloca i8, i32 %14, align 8, !dbg !16762
  store i8* %19, i8** %18, align 4, !dbg !16762
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !16762
  store i32 -1, i32* %20, align 4, !dbg !16762
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #27, !dbg !16763
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !16751, metadata !DIExpression()), !dbg !16764
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !16741, metadata !DIExpression()), !dbg !16754
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !16765
  br i1 %22, label %23, label %24, !dbg !16762

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #25, !dbg !16765
  br label %32, !dbg !16766

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !16741, metadata !DIExpression()), !dbg !16754
  %26 = load i32, i32* %4, align 4, !dbg !16767
  %27 = add nsw i32 %26, 1, !dbg !16767
  store i32 %27, i32* %4, align 4, !dbg !16767
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !16769
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !16769
  store i32 %26, i32* %29, align 8, !dbg !16770
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #27, !dbg !16763
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !16751, metadata !DIExpression()), !dbg !16764
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !16741, metadata !DIExpression()), !dbg !16754
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !16765
  br i1 %31, label %23, label %24, !dbg !16762, !llvm.loop !16771

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16773
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16774
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #27, !dbg !16775
  ret void, !dbg !16776
}

; Function Attrs: optsize
declare !dbg !16777 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !16782 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16785 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16787, metadata !DIExpression()), !dbg !16789
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16788, metadata !DIExpression()), !dbg !16789
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16790
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16791
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #27, !dbg !16792
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !16793
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !16793
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !16795
  br i1 %7, label %8, label %10, !dbg !16796

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16797
  store i32 0, i32* %9, align 4, !dbg !16799
  br label %10, !dbg !16800

10:                                               ; preds = %8, %2
  ret void, !dbg !16801
}

; Function Attrs: optsize
declare !dbg !16802 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !16803 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16807, metadata !DIExpression()), !dbg !16810
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16808, metadata !DIExpression()), !dbg !16810
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16811
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #26, !dbg !16812
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !16809, metadata !DIExpression()), !dbg !16810
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16808, metadata !DIExpression()), !dbg !16810
  ret %struct.k_thread* %4, !dbg !16813
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !16814 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !16818, metadata !DIExpression()), !dbg !16819
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #27, !dbg !16820
  ret %struct.rbnode* %2, !dbg !16821
}

; Function Attrs: optsize
declare !dbg !16822 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #18 !dbg !16825 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !16837, metadata !DIExpression()), !dbg !16841
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !16842
  %3 = load i32, i32* %2, align 4, !dbg !16842
  %4 = icmp eq i32 %3, 0, !dbg !16844
  br i1 %4, label %10, label %5, !dbg !16845

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16838, metadata !DIExpression()), !dbg !16841
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !16846, !range !4998
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !16847
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !16839, metadata !DIExpression()), !dbg !16841
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.210(%struct._dnode* noundef %7) #26, !dbg !16848
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !16840, metadata !DIExpression()), !dbg !16841
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16838, metadata !DIExpression()), !dbg !16841
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !16841
  ret %struct.k_thread* %11, !dbg !16849
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !16850 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16854, metadata !DIExpression()), !dbg !16857
  call void @llvm.dbg.value(metadata i32 0, metadata !16855, metadata !DIExpression()), !dbg !16857
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.235(%struct._wait_q_t* noundef %0) #26, !dbg !16858
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16856, metadata !DIExpression()), !dbg !16857
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16859
  br i1 %3, label %8, label %4, !dbg !16860

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !16861
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !16863
  call void @llvm.dbg.value(metadata i32 1, metadata !16855, metadata !DIExpression()), !dbg !16857
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head.235(%struct._wait_q_t* noundef %0) #26, !dbg !16858
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16856, metadata !DIExpression()), !dbg !16857
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16859
  br i1 %7, label %8, label %4, !dbg !16860, !llvm.loop !16864

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !16857
  ret i32 %9, !dbg !16866
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.235(%struct._wait_q_t* noundef readonly %0) unnamed_addr #4 !dbg !16867 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16869, metadata !DIExpression()), !dbg !16870
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !16871
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.210(%struct._dnode* noundef %2) #26, !dbg !16872
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !16873
  ret %struct.k_thread* %4, !dbg !16874
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #8 !dbg !16875 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !16884, metadata !DIExpression()), !dbg !16885
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !16886
  tail call fastcc void @sys_dlist_init.236(%struct._dnode* noundef nonnull %2) #26, !dbg !16887
  ret void, !dbg !16888
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.236(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !16889 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16893, metadata !DIExpression()), !dbg !16894
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16895
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16896
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16897
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16898
  ret void, !dbg !16899
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !16900 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #26, !dbg !16901
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #26, !dbg !16902
  ret void, !dbg !16903
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #4 !dbg !16904 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16909, metadata !DIExpression()), !dbg !16910
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16911
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !16911
  %4 = load i8, i8* %3, align 2, !dbg !16911
  %5 = sext i8 %4 to i32, !dbg !16912
  ret i32 %5, !dbg !16913
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16914 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16918, metadata !DIExpression()), !dbg !16921
  call void @llvm.dbg.value(metadata i32 %1, metadata !16919, metadata !DIExpression()), !dbg !16921
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16920, metadata !DIExpression()), !dbg !16921
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !16922
  ret void, !dbg !16923
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !16924 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #26, !dbg !16925
  br i1 %1, label %8, label %2, !dbg !16926

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #27, !dbg !16927
  br i1 %3, label %8, label %4, !dbg !16928

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16929
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #26, !dbg !16930
  %7 = xor i1 %6, true, !dbg !16928
  br label %8, !dbg !16928

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !16931
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #4 !dbg !16932 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !16933, !range !7657
  %2 = icmp eq i8 %1, 0, !dbg !16933
  ret i1 %2, !dbg !16934
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !16935 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15433, metadata !DIExpression()) #25, !dbg !16938
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16940, !srcloc !15448
  call void @llvm.dbg.value(metadata i32 undef, metadata !15445, metadata !DIExpression()) #25, !dbg !16942
  call void @llvm.dbg.value(metadata i32 undef, metadata !15446, metadata !DIExpression()) #25, !dbg !16942
  call void @llvm.dbg.value(metadata i32 undef, metadata !15439, metadata !DIExpression()) #25, !dbg !16938
  call void @llvm.dbg.value(metadata i32 undef, metadata !16937, metadata !DIExpression()), !dbg !16943
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16944
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15602, metadata !DIExpression()) #25, !dbg !16947
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !16949
  %4 = load i8, i8* %3, align 1, !dbg !16950
  %5 = and i8 %4, 127, !dbg !16950
  store i8 %5, i8* %3, align 1, !dbg !16950
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15610, metadata !DIExpression()) #25, !dbg !16951
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #27, !dbg !16953
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16954
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15619, metadata !DIExpression()) #25, !dbg !16955
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !16957
  %8 = load i8, i8* %7, align 1, !dbg !16958
  %9 = or i8 %8, -128, !dbg !16958
  store i8 %9, i8* %7, align 1, !dbg !16958
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15626, metadata !DIExpression()) #25, !dbg !16959
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15633, metadata !DIExpression()) #25, !dbg !16961
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15639, metadata !DIExpression()) #25, !dbg !16961
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.210(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !16963
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !15640, metadata !DIExpression()) #25, !dbg !16961
  %11 = icmp eq %struct._dnode* %10, null, !dbg !16964
  br i1 %11, label %22, label %12, !dbg !16963

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !15640, metadata !DIExpression()) #25, !dbg !16961
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !16965
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !15640, metadata !DIExpression()) #25, !dbg !16961
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #27, !dbg !16966
  %16 = icmp sgt i32 %15, 0, !dbg !16967
  br i1 %16, label %17, label %19, !dbg !16968

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !16969
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #27, !dbg !16970
  br label %24, !dbg !16971

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #27, !dbg !16964
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !15640, metadata !DIExpression()) #25, !dbg !16961
  %21 = icmp eq %struct._dnode* %20, null, !dbg !16964
  br i1 %21, label %22, label %12, !dbg !16963, !llvm.loop !16972

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !16974
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #27, !dbg !16975
  br label %24, !dbg !16976

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !16940
  call void @llvm.dbg.value(metadata i32 %25, metadata !15445, metadata !DIExpression()) #25, !dbg !16942
  call void @llvm.dbg.value(metadata i32 %25, metadata !15439, metadata !DIExpression()) #25, !dbg !16938
  call void @llvm.dbg.value(metadata i32 %25, metadata !16937, metadata !DIExpression()), !dbg !16943
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !16977
  call void @llvm.dbg.value(metadata i32 undef, metadata !16042, metadata !DIExpression()) #25, !dbg !16978
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16047, metadata !DIExpression()) #25, !dbg !16978
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #27, !dbg !16980
  ret void, !dbg !16981
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !16982 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16986, metadata !DIExpression()), !dbg !16989
  %3 = icmp eq i64 %2, -1, !dbg !16990
  br i1 %3, label %4, label %6, !dbg !16992

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16993
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #26, !dbg !16995
  br label %11, !dbg !16996

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !16987, metadata !DIExpression()), !dbg !16989
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #26, !dbg !16997
  %8 = sext i32 %7 to i64, !dbg !16997
  call void @llvm.dbg.value(metadata i64 %8, metadata !16987, metadata !DIExpression()), !dbg !16989
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64.239(i64 noundef %8) #26, !dbg !16998
  %10 = trunc i64 %9 to i32, !dbg !16998
  call void @llvm.dbg.value(metadata i32 %10, metadata !16988, metadata !DIExpression()), !dbg !16989
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !16989
  ret i32 %12, !dbg !16999
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17000 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17004, metadata !DIExpression()), !dbg !17005
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !17006, !srcloc !17008
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #26, !dbg !17009
  ret void, !dbg !17010
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !17011 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17015, metadata !DIExpression()), !dbg !17019
  %2 = icmp eq i64 %0, 0, !dbg !17020
  br i1 %2, label %3, label %4, !dbg !17022

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #26, !dbg !17023
  br label %29, !dbg !17025

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !17017, metadata !DIExpression()), !dbg !17019
  %5 = icmp sgt i64 %0, -3, !dbg !17026
  br i1 %5, label %6, label %10, !dbg !17028

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #27, !dbg !17029
  %8 = trunc i64 %0 to i32, !dbg !17031
  %9 = add i32 %7, %8, !dbg !17031
  call void @llvm.dbg.value(metadata i32 %9, metadata !17016, metadata !DIExpression()), !dbg !17019
  br label %13, !dbg !17032

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !17033
  %12 = sub i32 -2, %11, !dbg !17033
  call void @llvm.dbg.value(metadata i32 %12, metadata !17016, metadata !DIExpression()), !dbg !17019
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !17035
  call void @llvm.dbg.value(metadata i32 %14, metadata !17016, metadata !DIExpression()), !dbg !17019
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15433, metadata !DIExpression()) #25, !dbg !17036
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17038, !srcloc !15448
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !17038
  call void @llvm.dbg.value(metadata i32 %16, metadata !15445, metadata !DIExpression()) #25, !dbg !17040
  call void @llvm.dbg.value(metadata i32 undef, metadata !15446, metadata !DIExpression()) #25, !dbg !17040
  call void @llvm.dbg.value(metadata i32 %16, metadata !15439, metadata !DIExpression()) #25, !dbg !17036
  call void @llvm.dbg.value(metadata i32 %16, metadata !17018, metadata !DIExpression()), !dbg !17019
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17041
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !17042
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #26, !dbg !17043
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17044
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !17045
  tail call fastcc void @z_add_thread_timeout.222(%struct.k_thread* noundef %18, [1 x i64] %19) #26, !dbg !17045
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17046
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #26, !dbg !17047
  call void @llvm.dbg.value(metadata i32 %16, metadata !16042, metadata !DIExpression()) #25, !dbg !17048
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16047, metadata !DIExpression()) #25, !dbg !17048
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #27, !dbg !17050
  %22 = zext i32 %14 to i64, !dbg !17051
  %23 = tail call i32 @sys_clock_tick_get_32() #27, !dbg !17052
  %24 = zext i32 %23 to i64, !dbg !17052
  %25 = sub nsw i64 %22, %24, !dbg !17053
  call void @llvm.dbg.value(metadata i64 %25, metadata !17015, metadata !DIExpression()), !dbg !17019
  %26 = icmp sgt i64 %25, 0, !dbg !17054
  %27 = select i1 %26, i64 %25, i64 0, !dbg !17054
  %28 = trunc i64 %27 to i32, !dbg !17054
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !17019
  ret i32 %30, !dbg !17055
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64.239(i64 noundef %0) unnamed_addr #5 !dbg !17056 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17058, metadata !DIExpression()), !dbg !17059
  call void @llvm.dbg.value(metadata i64 %0, metadata !15480, metadata !DIExpression()), !dbg !17060
  call void @llvm.dbg.value(metadata i32 10000, metadata !15483, metadata !DIExpression()), !dbg !17060
  call void @llvm.dbg.value(metadata i32 1000, metadata !15484, metadata !DIExpression()), !dbg !17060
  call void @llvm.dbg.value(metadata i8 1, metadata !15485, metadata !DIExpression()), !dbg !17060
  call void @llvm.dbg.value(metadata i1 false, metadata !15486, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17060
  call void @llvm.dbg.value(metadata i1 false, metadata !15487, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17060
  call void @llvm.dbg.value(metadata i8 0, metadata !15488, metadata !DIExpression()), !dbg !17060
  call void @llvm.dbg.value(metadata i1 false, metadata !15489, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17060
  call void @llvm.dbg.value(metadata i1 true, metadata !15490, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17060
  call void @llvm.dbg.value(metadata i64 0, metadata !15491, metadata !DIExpression()), !dbg !17060
  call void @llvm.dbg.value(metadata i64 0, metadata !15491, metadata !DIExpression()), !dbg !17060
  call void @llvm.dbg.value(metadata i64 %0, metadata !15480, metadata !DIExpression()), !dbg !17060
  %2 = udiv i64 %0, 10, !dbg !17062
  ret i64 %2, !dbg !17066
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !17067 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !17068, !srcloc !17070
  tail call void @z_impl_k_yield() #26, !dbg !17071
  ret void, !dbg !17072
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !17073 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17077, metadata !DIExpression()), !dbg !17079
  %2 = sext i32 %0 to i64, !dbg !17080
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #26, !dbg !17081
  call void @llvm.dbg.value(metadata i64 %3, metadata !17078, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17079
  %4 = shl i64 %3, 32, !dbg !17082
  %5 = ashr exact i64 %4, 32, !dbg !17082
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #26, !dbg !17083
  call void @llvm.dbg.value(metadata i32 %6, metadata !17078, metadata !DIExpression()), !dbg !17079
  %7 = sext i32 %6 to i64, !dbg !17084
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #26, !dbg !17085
  %9 = trunc i64 %8 to i32, !dbg !17085
  ret i32 %9, !dbg !17086
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #5 !dbg !17087 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17089, metadata !DIExpression()), !dbg !17090
  call void @llvm.dbg.value(metadata i64 %0, metadata !15480, metadata !DIExpression()), !dbg !17091
  call void @llvm.dbg.value(metadata i32 1000000, metadata !15483, metadata !DIExpression()), !dbg !17091
  call void @llvm.dbg.value(metadata i32 10000, metadata !15484, metadata !DIExpression()), !dbg !17091
  call void @llvm.dbg.value(metadata i8 1, metadata !15485, metadata !DIExpression()), !dbg !17091
  call void @llvm.dbg.value(metadata i1 false, metadata !15486, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17091
  call void @llvm.dbg.value(metadata i1 true, metadata !15487, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17091
  call void @llvm.dbg.value(metadata i8 0, metadata !15488, metadata !DIExpression()), !dbg !17091
  call void @llvm.dbg.value(metadata i1 false, metadata !15489, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17091
  call void @llvm.dbg.value(metadata i1 true, metadata !15490, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17091
  call void @llvm.dbg.value(metadata i64 0, metadata !15491, metadata !DIExpression()), !dbg !17091
  call void @llvm.dbg.value(metadata i64 0, metadata !15491, metadata !DIExpression()), !dbg !17091
  %2 = add i64 %0, 99, !dbg !17093
  call void @llvm.dbg.value(metadata i64 %2, metadata !15480, metadata !DIExpression()), !dbg !17091
  %3 = udiv i64 %2, 100, !dbg !17094
  ret i64 %3, !dbg !17095
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #5 !dbg !17096 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17098, metadata !DIExpression()), !dbg !17099
  call void @llvm.dbg.value(metadata i64 %0, metadata !15480, metadata !DIExpression()), !dbg !17100
  call void @llvm.dbg.value(metadata i32 10000, metadata !15483, metadata !DIExpression()), !dbg !17100
  call void @llvm.dbg.value(metadata i32 1000000, metadata !15484, metadata !DIExpression()), !dbg !17100
  call void @llvm.dbg.value(metadata i8 1, metadata !15485, metadata !DIExpression()), !dbg !17100
  call void @llvm.dbg.value(metadata i1 false, metadata !15486, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17100
  call void @llvm.dbg.value(metadata i1 false, metadata !15487, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17100
  call void @llvm.dbg.value(metadata i8 0, metadata !15488, metadata !DIExpression()), !dbg !17100
  call void @llvm.dbg.value(metadata i1 true, metadata !15489, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17100
  call void @llvm.dbg.value(metadata i1 false, metadata !15490, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17100
  call void @llvm.dbg.value(metadata i64 0, metadata !15491, metadata !DIExpression()), !dbg !17100
  call void @llvm.dbg.value(metadata i64 0, metadata !15491, metadata !DIExpression()), !dbg !17100
  %2 = mul i64 %0, 100, !dbg !17102
  ret i64 %2, !dbg !17104
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17105 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17107, metadata !DIExpression()), !dbg !17108
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #26, !dbg !17109
  br i1 %2, label %14, label %3, !dbg !17111

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !17112
  %5 = icmp slt i32 %4, 0, !dbg !17114
  br i1 %5, label %6, label %10, !dbg !17115

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17116
  %8 = load i8, i8* %7, align 1, !dbg !17116
  %9 = icmp eq i8 %8, 16, !dbg !17119
  br i1 %9, label %10, label %14, !dbg !17120

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !17121
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #26, !dbg !17122
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !17123, !srcloc !16082
  call void @llvm.dbg.value(metadata i32 %11, metadata !16078, metadata !DIExpression()) #25, !dbg !17127
  %12 = icmp eq i32 %11, 0, !dbg !17128
  br i1 %12, label %13, label %14, !dbg !17129

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !17130
  br label %14, !dbg !17132

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !17133
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !17134 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17136, metadata !DIExpression()), !dbg !17137
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17138
  %3 = load i8, i8* %2, align 1, !dbg !17138
  %4 = and i8 %3, 2, !dbg !17139
  %5 = icmp ne i8 %4, 0, !dbg !17140
  ret i1 %5, !dbg !17141
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #4 !dbg !17142 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17147
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17146, metadata !DIExpression()), !dbg !17148
  ret %struct.k_thread* %1, !dbg !17149
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !17150 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !17151, !srcloc !16082
  call void @llvm.dbg.value(metadata i32 %1, metadata !16078, metadata !DIExpression()) #25, !dbg !17154
  %2 = icmp eq i32 %1, 0, !dbg !17155
  br i1 %2, label %3, label %8, !dbg !17156

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17157
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #26, !dbg !17158
  %6 = icmp ne i32 %5, 0, !dbg !17156
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !17159
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17160 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17162, metadata !DIExpression()), !dbg !17164
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15433, metadata !DIExpression()) #25, !dbg !17165
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17167, !srcloc !15448
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17167
  call void @llvm.dbg.value(metadata i32 %3, metadata !15445, metadata !DIExpression()) #25, !dbg !17169
  call void @llvm.dbg.value(metadata i32 undef, metadata !15446, metadata !DIExpression()) #25, !dbg !17169
  call void @llvm.dbg.value(metadata i32 %3, metadata !15439, metadata !DIExpression()) #25, !dbg !17165
  call void @llvm.dbg.value(metadata i32 %3, metadata !17163, metadata !DIExpression()), !dbg !17164
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !17170
  %5 = load i8, i8* %4, align 4, !dbg !17170
  %6 = and i8 %5, 1, !dbg !17172
  %7 = icmp eq i8 %6, 0, !dbg !17173
  br i1 %7, label %9, label %8, !dbg !17174

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !15460, metadata !DIExpression()) #25, !dbg !17175
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15465, metadata !DIExpression()) #25, !dbg !17175
  call void @llvm.dbg.value(metadata i32 %3, metadata !15468, metadata !DIExpression()) #25, !dbg !17178
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !17180, !srcloc !15474
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #25, !dbg !17181, !srcloc !17183
  br label %24, !dbg !17184

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17185
  %11 = load i8, i8* %10, align 1, !dbg !17185
  %12 = and i8 %11, 8, !dbg !17187
  %13 = icmp eq i8 %12, 0, !dbg !17188
  br i1 %13, label %15, label %14, !dbg !17189

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !15460, metadata !DIExpression()) #25, !dbg !17190
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15465, metadata !DIExpression()) #25, !dbg !17190
  call void @llvm.dbg.value(metadata i32 %3, metadata !15468, metadata !DIExpression()) #25, !dbg !17193
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !17195, !srcloc !15474
  br label %24, !dbg !17196

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #26, !dbg !17197
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17198
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !17200
  br i1 %17, label %18, label %23, !dbg !17201

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !17202, !srcloc !16082
  call void @llvm.dbg.value(metadata i32 %19, metadata !16078, metadata !DIExpression()) #25, !dbg !17205
  %20 = icmp eq i32 %19, 0, !dbg !17206
  br i1 %20, label %21, label %23, !dbg !17207

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !16042, metadata !DIExpression()) #25, !dbg !17208
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16047, metadata !DIExpression()) #25, !dbg !17208
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #27, !dbg !17211
  br label %23, !dbg !17212

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !15460, metadata !DIExpression()) #25, !dbg !17213
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15465, metadata !DIExpression()) #25, !dbg !17213
  call void @llvm.dbg.value(metadata i32 %3, metadata !15468, metadata !DIExpression()) #25, !dbg !17215
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !17217, !srcloc !15474
  br label %24, !dbg !17218

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !17218
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17219 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17221, metadata !DIExpression()), !dbg !17222
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17223
  %3 = load i8, i8* %2, align 1, !dbg !17223
  %4 = and i8 %3, 8, !dbg !17225
  %5 = icmp eq i8 %4, 0, !dbg !17226
  br i1 %5, label %6, label %20, !dbg !17227

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !17228
  %8 = or i8 %7, 8, !dbg !17228
  store i8 %8, i8* %2, align 1, !dbg !17228
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #26, !dbg !17230
  br i1 %9, label %10, label %12, !dbg !17232

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15602, metadata !DIExpression()) #25, !dbg !17233
  %11 = and i8 %8, 95, !dbg !17236
  store i8 %11, i8* %2, align 1, !dbg !17236
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15610, metadata !DIExpression()) #25, !dbg !17237
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #27, !dbg !17239
  br label %12, !dbg !17240

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !17241
  %14 = load %struct._wait_q_t*, %struct._wait_q_t** %13, align 8, !dbg !17241
  %15 = icmp eq %struct._wait_q_t* %14, null, !dbg !17243
  br i1 %15, label %17, label %16, !dbg !17244

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !17245
  br label %17, !dbg !17247

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !17248
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !17249
  tail call fastcc void @unpend_all(%struct._wait_q_t* noundef nonnull %19) #26, !dbg !17250
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !17251
  br label %20, !dbg !17252

20:                                               ; preds = %17, %1
  ret void, !dbg !17253
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%struct._wait_q_t* noundef %0) unnamed_addr #1 !dbg !17254 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17258, metadata !DIExpression()), !dbg !17260
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.235(%struct._wait_q_t* noundef %0) #26, !dbg !17261
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !17259, metadata !DIExpression()), !dbg !17260
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !17262
  br i1 %3, label %10, label %4, !dbg !17263

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !17264
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !17266
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !17267, metadata !DIExpression()), !dbg !17273
  call void @llvm.dbg.value(metadata i32 0, metadata !17272, metadata !DIExpression()), !dbg !17273
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !17275
  store i32 0, i32* %7, align 4, !dbg !17276
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !17277
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head.235(%struct._wait_q_t* noundef %0) #26, !dbg !17261
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !17259, metadata !DIExpression()), !dbg !17260
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !17262
  br i1 %9, label %10, label %4, !dbg !17263, !llvm.loop !17278

10:                                               ; preds = %4, %1
  ret void, !dbg !17280
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !17281 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17286, metadata !DIExpression()), !dbg !17289
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17285, metadata !DIExpression()), !dbg !17289
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15433, metadata !DIExpression()) #25, !dbg !17290
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17292, !srcloc !15448
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !17292
  call void @llvm.dbg.value(metadata i32 %4, metadata !15445, metadata !DIExpression()) #25, !dbg !17294
  call void @llvm.dbg.value(metadata i32 undef, metadata !15446, metadata !DIExpression()) #25, !dbg !17294
  call void @llvm.dbg.value(metadata i32 %4, metadata !15439, metadata !DIExpression()) #25, !dbg !17290
  call void @llvm.dbg.value(metadata i32 %4, metadata !17287, metadata !DIExpression()), !dbg !17289
  call void @llvm.dbg.value(metadata i32 0, metadata !17288, metadata !DIExpression()), !dbg !17289
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17295
  %6 = load i8, i8* %5, align 1, !dbg !17295
  %7 = and i8 %6, 8, !dbg !17297
  %8 = icmp eq i8 %7, 0, !dbg !17298
  br i1 %8, label %9, label %24, !dbg !17299

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !17286, metadata !DIExpression()), !dbg !17289
  %11 = icmp eq i64 %10, 0, !dbg !17300
  br i1 %11, label %24, label %12, !dbg !17302

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17303
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !17305
  br i1 %14, label %24, label %15, !dbg !17306

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !17307
  %17 = load %struct._wait_q_t*, %struct._wait_q_t** %16, align 8, !dbg !17307
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !17308
  %19 = icmp eq %struct._wait_q_t* %17, %18, !dbg !17309
  br i1 %19, label %24, label %20, !dbg !17310

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !17311
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %struct._wait_q_t* noundef nonnull %21) #26, !dbg !17313
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17314
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #26, !dbg !17315
  call void @llvm.dbg.value(metadata i32 %4, metadata !16042, metadata !DIExpression()) #25, !dbg !17316
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16047, metadata !DIExpression()) #25, !dbg !17316
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #27, !dbg !17318
  call void @llvm.dbg.value(metadata i32 %23, metadata !17288, metadata !DIExpression()), !dbg !17289
  br label %26, !dbg !17319

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !17320
  call void @llvm.dbg.value(metadata i32 %25, metadata !17288, metadata !DIExpression()), !dbg !17289
  call void @llvm.dbg.value(metadata i32 %4, metadata !15460, metadata !DIExpression()) #25, !dbg !17321
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15465, metadata !DIExpression()) #25, !dbg !17321
  call void @llvm.dbg.value(metadata i32 %4, metadata !15468, metadata !DIExpression()) #25, !dbg !17323
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !17325, !srcloc !15474
  br label %26, !dbg !17326

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !17289
  ret i32 %27, !dbg !17327
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%struct._wait_q_t* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !17328 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17332, metadata !DIExpression()), !dbg !17340
  call void @llvm.dbg.value(metadata i32 %1, metadata !17333, metadata !DIExpression()), !dbg !17340
  call void @llvm.dbg.value(metadata i8* %2, metadata !17334, metadata !DIExpression()), !dbg !17340
  call void @llvm.dbg.value(metadata i8 0, metadata !17336, metadata !DIExpression()), !dbg !17340
  call void @llvm.dbg.value(metadata i32 0, metadata !17337, metadata !DIExpression()), !dbg !17341
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15433, metadata !DIExpression()) #25, !dbg !17342
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17344, !srcloc !15448
  call void @llvm.dbg.value(metadata i32 undef, metadata !15445, metadata !DIExpression()) #25, !dbg !17346
  call void @llvm.dbg.value(metadata i32 undef, metadata !15446, metadata !DIExpression()) #25, !dbg !17346
  call void @llvm.dbg.value(metadata i32 undef, metadata !15439, metadata !DIExpression()) #25, !dbg !17342
  call void @llvm.dbg.value(metadata i32 undef, metadata !17339, metadata !DIExpression()), !dbg !17341
  call void @llvm.dbg.value(metadata i8 poison, metadata !17336, metadata !DIExpression()), !dbg !17340
  call void @llvm.dbg.value(metadata i32 undef, metadata !17337, metadata !DIExpression()), !dbg !17341
  %5 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #26, !dbg !17347
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17335, metadata !DIExpression()), !dbg !17340
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !17350
  br i1 %7, label %12, label %8, !dbg !17352

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17353, metadata !DIExpression()), !dbg !17360
  call void @llvm.dbg.value(metadata i32 %1, metadata !17358, metadata !DIExpression()), !dbg !17360
  call void @llvm.dbg.value(metadata i8* %2, metadata !17359, metadata !DIExpression()), !dbg !17360
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17267, metadata !DIExpression()), !dbg !17363
  call void @llvm.dbg.value(metadata i32 %1, metadata !17272, metadata !DIExpression()), !dbg !17363
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !17365
  store i32 %1, i32* %9, align 4, !dbg !17366
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !17367
  store i8* %2, i8** %10, align 4, !dbg !17368
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !17369
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !17370
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #26, !dbg !17371
  call void @llvm.dbg.value(metadata i8 1, metadata !17336, metadata !DIExpression()), !dbg !17340
  br label %12, !dbg !17372

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !17344
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !17344
  call void @llvm.dbg.value(metadata i32 %14, metadata !15445, metadata !DIExpression()) #25, !dbg !17346
  call void @llvm.dbg.value(metadata i32 %14, metadata !15439, metadata !DIExpression()) #25, !dbg !17342
  call void @llvm.dbg.value(metadata i32 %14, metadata !17339, metadata !DIExpression()), !dbg !17341
  call void @llvm.dbg.value(metadata i8 poison, metadata !17336, metadata !DIExpression()), !dbg !17340
  call void @llvm.dbg.value(metadata i32 undef, metadata !15460, metadata !DIExpression()) #25, !dbg !17373
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15465, metadata !DIExpression()) #25, !dbg !17373
  call void @llvm.dbg.value(metadata i32 undef, metadata !15468, metadata !DIExpression()) #25, !dbg !17375
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !17377, !srcloc !15474
  call void @llvm.dbg.value(metadata i32 undef, metadata !17337, metadata !DIExpression()), !dbg !17341
  ret i1 %13, !dbg !17378
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !17379 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !17385, metadata !DIExpression()), !dbg !17390
  call void @llvm.dbg.value(metadata i64 undef, metadata !17387, metadata !DIExpression()), !dbg !17390
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !17384, metadata !DIExpression()), !dbg !17390
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !17386, metadata !DIExpression()), !dbg !17390
  call void @llvm.dbg.value(metadata i8** %4, metadata !17388, metadata !DIExpression()), !dbg !17390
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) #26, !dbg !17391
  call void @llvm.dbg.value(metadata i32 %6, metadata !17389, metadata !DIExpression()), !dbg !17390
  %7 = icmp eq i8** %4, null, !dbg !17392
  br i1 %7, label %12, label %8, !dbg !17394

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17395
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !17397
  %11 = load i8*, i8** %10, align 4, !dbg !17397
  store i8* %11, i8** %4, align 4, !dbg !17398
  br label %12, !dbg !17399

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !17400
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !17401 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #27, !dbg !17403
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #27, !dbg !17404
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_data_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_data_rom_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__ccm_data_end to i32), i32 ptrtoint ([0 x i8]* @__ccm_data_start to i32))) #27, !dbg !17405
  ret void, !dbg !17406
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17407 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !17417, metadata !DIExpression()), !dbg !17434
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17415, metadata !DIExpression()), !dbg !17434
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !17416, metadata !DIExpression()), !dbg !17434
  %5 = icmp eq i64 %4, -1, !dbg !17435
  br i1 %5, label %55, label %6, !dbg !17437

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !17438
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !17439
  call void @llvm.dbg.value(metadata i32 0, metadata !17418, metadata !DIExpression()), !dbg !17440
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17441, metadata !DIExpression()) #25, !dbg !17448
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17450, !srcloc !17456
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !17450
  call void @llvm.dbg.value(metadata i32 %9, metadata !17453, metadata !DIExpression()) #25, !dbg !17457
  call void @llvm.dbg.value(metadata i32 undef, metadata !17454, metadata !DIExpression()) #25, !dbg !17457
  call void @llvm.dbg.value(metadata i32 %9, metadata !17447, metadata !DIExpression()) #25, !dbg !17448
  call void @llvm.dbg.value(metadata i32 %9, metadata !17424, metadata !DIExpression()), !dbg !17440
  call void @llvm.dbg.value(metadata i32 undef, metadata !17418, metadata !DIExpression()), !dbg !17440
  %10 = icmp slt i64 %4, -1, !dbg !17458
  br i1 %10, label %11, label %17, !dbg !17459

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !17460
  %13 = add i64 %4, %12, !dbg !17461
  %14 = sub i64 -2, %13, !dbg !17461
  call void @llvm.dbg.value(metadata i64 %14, metadata !17428, metadata !DIExpression()), !dbg !17462
  %15 = icmp sgt i64 %14, 1, !dbg !17463
  %16 = select i1 %15, i64 %14, i64 1, !dbg !17463
  br label %22, !dbg !17464

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !17465
  %19 = tail call fastcc i32 @elapsed.248() #26, !dbg !17467
  %20 = sext i32 %19 to i64, !dbg !17467
  %21 = add nsw i64 %18, %20, !dbg !17468
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !17469
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17470
  store i64 %23, i64* %24, align 8, !dbg !17471
  %25 = tail call fastcc %struct._timeout* @first() #26, !dbg !17472
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !17425, metadata !DIExpression()), !dbg !17474
  %26 = icmp eq %struct._timeout* %25, null, !dbg !17475
  br i1 %26, label %42, label %27, !dbg !17475

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !17476
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !17425, metadata !DIExpression()), !dbg !17474
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !17480
  %31 = load i64, i64* %30, align 8, !dbg !17480
  %32 = icmp slt i64 %28, %31, !dbg !17481
  br i1 %32, label %33, label %38, !dbg !17482

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !17480
  %35 = sub nsw i64 %31, %28, !dbg !17483
  store i64 %35, i64* %34, align 8, !dbg !17483
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !17485
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17486
  tail call fastcc void @sys_dlist_insert.249(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #26, !dbg !17487
  br label %44, !dbg !17488

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !17489
  store i64 %39, i64* %24, align 8, !dbg !17489
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #26, !dbg !17490
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !17425, metadata !DIExpression()), !dbg !17474
  %41 = icmp eq %struct._timeout* %40, null, !dbg !17475
  br i1 %41, label %42, label %27, !dbg !17475, !llvm.loop !17491

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17493
  tail call fastcc void @sys_dlist_append.250(%struct._dnode* noundef %43) #26, !dbg !17496
  br label %44, !dbg !17497

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #26, !dbg !17498
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !17499
  br i1 %46, label %47, label %54, !dbg !17500

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #26, !dbg !17501
  call void @llvm.dbg.value(metadata i32 %48, metadata !17431, metadata !DIExpression()), !dbg !17502
  %49 = icmp ne i32 %48, 0, !dbg !17503
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !17505
  br i1 %52, label %54, label %53, !dbg !17505

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #27, !dbg !17506
  br label %54, !dbg !17508

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !17509, metadata !DIExpression()) #25, !dbg !17515
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17514, metadata !DIExpression()) #25, !dbg !17515
  call void @llvm.dbg.value(metadata i32 %9, metadata !17517, metadata !DIExpression()) #25, !dbg !17520
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !17522, !srcloc !17523
  call void @llvm.dbg.value(metadata i32 undef, metadata !17418, metadata !DIExpression()), !dbg !17440
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !17524
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.248() unnamed_addr #1 !dbg !17525 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !17528
  %2 = icmp eq i32 %1, 0, !dbg !17529
  br i1 %2, label %3, label %5, !dbg !17528

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #27, !dbg !17530
  br label %5, !dbg !17528

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !17528
  ret i32 %6, !dbg !17531
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #4 !dbg !17532 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.253() #26, !dbg !17538
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17536, metadata !DIExpression()), !dbg !17539
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !17540
  ret %struct._timeout* %2, !dbg !17541
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.249(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !17542 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17546, metadata !DIExpression()), !dbg !17550
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17547, metadata !DIExpression()), !dbg !17550
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17551
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !17551
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !17548, metadata !DIExpression()), !dbg !17550
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !17552
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !17553
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !17554
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !17555
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !17556
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !17557
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !17558
  ret void, !dbg !17559
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #4 !dbg !17560 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17564, metadata !DIExpression()), !dbg !17566
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17567
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.251(%struct._dnode* noundef %2) #26, !dbg !17568
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17565, metadata !DIExpression()), !dbg !17566
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !17569
  ret %struct._timeout* %4, !dbg !17570
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.250(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !17571 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17576, metadata !DIExpression()), !dbg !17579
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17577, metadata !DIExpression()), !dbg !17579
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17580
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !17578, metadata !DIExpression()), !dbg !17579
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17581
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !17582
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17583
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !17584
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !17585
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !17586
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17587
  ret void, !dbg !17588
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !17589 {
  %1 = tail call fastcc %struct._timeout* @first() #26, !dbg !17594
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !17591, metadata !DIExpression()), !dbg !17595
  %2 = tail call fastcc i32 @elapsed.248() #26, !dbg !17596
  call void @llvm.dbg.value(metadata i32 %2, metadata !17592, metadata !DIExpression()), !dbg !17595
  %3 = icmp eq %struct._timeout* %1, null, !dbg !17597
  br i1 %3, label %14, label %4, !dbg !17599

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !17600
  %6 = load i64, i64* %5, align 8, !dbg !17600
  %7 = sext i32 %2 to i64, !dbg !17601
  %8 = sub nsw i64 %6, %7, !dbg !17602
  %9 = icmp sgt i64 %8, 2147483647, !dbg !17603
  br i1 %9, label %14, label %10, !dbg !17604

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !17605
  %12 = select i1 %11, i64 %8, i64 0, !dbg !17605
  %13 = trunc i64 %12 to i32, !dbg !17605
  call void @llvm.dbg.value(metadata i32 %13, metadata !17593, metadata !DIExpression()), !dbg !17595
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !17607
  call void @llvm.dbg.value(metadata i32 %15, metadata !17593, metadata !DIExpression()), !dbg !17595
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !17608
  %17 = icmp ne i32 %16, 0, !dbg !17610
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !17611
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !17611
  call void @llvm.dbg.value(metadata i32 %20, metadata !17593, metadata !DIExpression()), !dbg !17595
  ret i32 %20, !dbg !17612
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.251(%struct._dnode* noundef readonly %0) unnamed_addr #4 !dbg !17613 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17617, metadata !DIExpression()), !dbg !17619
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17618, metadata !DIExpression()), !dbg !17619
  %2 = icmp eq %struct._dnode* %0, null, !dbg !17620
  br i1 %2, label %5, label %3, !dbg !17621

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.252(%struct._dnode* noundef nonnull %0) #26, !dbg !17622
  br label %5, !dbg !17621

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !17621
  ret %struct._dnode* %6, !dbg !17623
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.252(%struct._dnode* noundef readonly %0) unnamed_addr #4 !dbg !17624 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17626, metadata !DIExpression()), !dbg !17628
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17627, metadata !DIExpression()), !dbg !17628
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17629
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !17630
  br i1 %3, label %7, label %4, !dbg !17631

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17632
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !17632
  br label %7, !dbg !17631

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !17631
  ret %struct._dnode* %8, !dbg !17633
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.253() unnamed_addr #4 !dbg !17634 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17638, metadata !DIExpression()), !dbg !17639
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.254() #26, !dbg !17640
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !17640
  ret %struct._dnode* %3, !dbg !17641
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.254() unnamed_addr #4 !dbg !17642 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17646, metadata !DIExpression()), !dbg !17647
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !17648
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !17649
  ret i1 %2, !dbg !17650
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17651 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17655, metadata !DIExpression()), !dbg !17660
  call void @llvm.dbg.value(metadata i32 -22, metadata !17656, metadata !DIExpression()), !dbg !17660
  call void @llvm.dbg.value(metadata i32 0, metadata !17657, metadata !DIExpression()), !dbg !17661
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17441, metadata !DIExpression()) #25, !dbg !17662
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17664, !srcloc !17456
  call void @llvm.dbg.value(metadata i32 undef, metadata !17453, metadata !DIExpression()) #25, !dbg !17666
  call void @llvm.dbg.value(metadata i32 undef, metadata !17454, metadata !DIExpression()) #25, !dbg !17666
  call void @llvm.dbg.value(metadata i32 undef, metadata !17447, metadata !DIExpression()) #25, !dbg !17662
  call void @llvm.dbg.value(metadata i32 undef, metadata !17659, metadata !DIExpression()), !dbg !17661
  call void @llvm.dbg.value(metadata i32 -22, metadata !17656, metadata !DIExpression()), !dbg !17660
  call void @llvm.dbg.value(metadata i32 undef, metadata !17657, metadata !DIExpression()), !dbg !17661
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !17656, metadata !DIExpression()), !dbg !17660
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.257(%struct._dnode* noundef %3) #26, !dbg !17667
  br i1 %4, label %5, label %6, !dbg !17671

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #26, !dbg !17672
  call void @llvm.dbg.value(metadata i32 0, metadata !17656, metadata !DIExpression()), !dbg !17660
  br label %6, !dbg !17674

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !17660
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !17664
  call void @llvm.dbg.value(metadata i32 %8, metadata !17453, metadata !DIExpression()) #25, !dbg !17666
  call void @llvm.dbg.value(metadata i32 %8, metadata !17447, metadata !DIExpression()) #25, !dbg !17662
  call void @llvm.dbg.value(metadata i32 %8, metadata !17659, metadata !DIExpression()), !dbg !17661
  call void @llvm.dbg.value(metadata i32 %7, metadata !17656, metadata !DIExpression()), !dbg !17660
  call void @llvm.dbg.value(metadata i32 undef, metadata !17509, metadata !DIExpression()) #25, !dbg !17675
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17514, metadata !DIExpression()) #25, !dbg !17675
  call void @llvm.dbg.value(metadata i32 undef, metadata !17517, metadata !DIExpression()) #25, !dbg !17677
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !17679, !srcloc !17523
  call void @llvm.dbg.value(metadata i32 undef, metadata !17657, metadata !DIExpression()), !dbg !17661
  ret i32 %7, !dbg !17680
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.257(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #4 !dbg !17681 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17687, metadata !DIExpression()), !dbg !17688
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17689
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17689
  %4 = icmp ne %struct._dnode* %3, null, !dbg !17690
  ret i1 %4, !dbg !17691
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #9 !dbg !17692 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17694, metadata !DIExpression()), !dbg !17695
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #26, !dbg !17696
  %3 = icmp eq %struct._timeout* %2, null, !dbg !17698
  br i1 %3, label %10, label %4, !dbg !17699

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17700
  %6 = load i64, i64* %5, align 8, !dbg !17700
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !17702
  %8 = load i64, i64* %7, align 8, !dbg !17703
  %9 = add nsw i64 %8, %6, !dbg !17703
  store i64 %9, i64* %7, align 8, !dbg !17703
  br label %10, !dbg !17704

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17705
  tail call fastcc void @sys_dlist_remove.258(%struct._dnode* noundef %11) #26, !dbg !17706
  ret void, !dbg !17707
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.258(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !17708 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17712, metadata !DIExpression()), !dbg !17715
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17716
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17716
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17713, metadata !DIExpression()), !dbg !17715
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17717
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17717
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !17714, metadata !DIExpression()), !dbg !17715
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !17718
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !17719
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !17720
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !17721
  tail call fastcc void @sys_dnode_init.259(%struct._dnode* noundef %0) #26, !dbg !17722
  ret void, !dbg !17723
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.259(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #8 !dbg !17724 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17726, metadata !DIExpression()), !dbg !17727
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17728
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !17729
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17730
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !17731
  ret void, !dbg !17732
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17733 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17739, metadata !DIExpression()), !dbg !17744
  call void @llvm.dbg.value(metadata i64 0, metadata !17740, metadata !DIExpression()), !dbg !17744
  call void @llvm.dbg.value(metadata i32 0, metadata !17741, metadata !DIExpression()), !dbg !17745
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17441, metadata !DIExpression()) #25, !dbg !17746
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17748, !srcloc !17456
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17748
  call void @llvm.dbg.value(metadata i32 %3, metadata !17453, metadata !DIExpression()) #25, !dbg !17750
  call void @llvm.dbg.value(metadata i32 undef, metadata !17454, metadata !DIExpression()) #25, !dbg !17750
  call void @llvm.dbg.value(metadata i32 %3, metadata !17447, metadata !DIExpression()) #25, !dbg !17746
  call void @llvm.dbg.value(metadata i32 %3, metadata !17743, metadata !DIExpression()), !dbg !17745
  call void @llvm.dbg.value(metadata i64 0, metadata !17740, metadata !DIExpression()), !dbg !17744
  call void @llvm.dbg.value(metadata i32 undef, metadata !17741, metadata !DIExpression()), !dbg !17745
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !17751
  call void @llvm.dbg.value(metadata i64 %4, metadata !17740, metadata !DIExpression()), !dbg !17744
  call void @llvm.dbg.value(metadata i32 %3, metadata !17509, metadata !DIExpression()) #25, !dbg !17754
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17514, metadata !DIExpression()) #25, !dbg !17754
  call void @llvm.dbg.value(metadata i32 %3, metadata !17517, metadata !DIExpression()) #25, !dbg !17756
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !17758, !srcloc !17523
  call void @llvm.dbg.value(metadata i32 undef, metadata !17741, metadata !DIExpression()), !dbg !17745
  ret i64 %4, !dbg !17759
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !17760 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17762, metadata !DIExpression()), !dbg !17766
  call void @llvm.dbg.value(metadata i64 0, metadata !17763, metadata !DIExpression()), !dbg !17766
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.260(%struct._timeout* noundef %0) #26, !dbg !17767
  br i1 %2, label %21, label %3, !dbg !17769

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #26, !dbg !17770
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !17764, metadata !DIExpression()), !dbg !17771
  call void @llvm.dbg.value(metadata i64 0, metadata !17763, metadata !DIExpression()), !dbg !17766
  %5 = icmp eq %struct._timeout* %4, null, !dbg !17772
  br i1 %5, label %16, label %6, !dbg !17774

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !17764, metadata !DIExpression()), !dbg !17771
  call void @llvm.dbg.value(metadata i64 %8, metadata !17763, metadata !DIExpression()), !dbg !17766
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !17775
  %10 = load i64, i64* %9, align 8, !dbg !17775
  %11 = add nsw i64 %10, %8, !dbg !17777
  call void @llvm.dbg.value(metadata i64 %11, metadata !17763, metadata !DIExpression()), !dbg !17766
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !17778
  br i1 %12, label %16, label %13, !dbg !17780

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #26, !dbg !17781
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !17764, metadata !DIExpression()), !dbg !17771
  call void @llvm.dbg.value(metadata i64 %11, metadata !17763, metadata !DIExpression()), !dbg !17766
  %15 = icmp eq %struct._timeout* %14, null, !dbg !17772
  br i1 %15, label %16, label %6, !dbg !17774, !llvm.loop !17782

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !17766
  call void @llvm.dbg.value(metadata i64 %17, metadata !17763, metadata !DIExpression()), !dbg !17766
  %18 = tail call fastcc i32 @elapsed.248() #26, !dbg !17784
  %19 = sext i32 %18 to i64, !dbg !17784
  %20 = sub nsw i64 %17, %19, !dbg !17785
  br label %21, !dbg !17786

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !17766
  ret i64 %22, !dbg !17787
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.260(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #4 !dbg !17788 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17792, metadata !DIExpression()), !dbg !17793
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17794
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.257(%struct._dnode* noundef %2) #26, !dbg !17795
  %4 = xor i1 %3, true, !dbg !17796
  ret i1 %4, !dbg !17797
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17798 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17800, metadata !DIExpression()), !dbg !17805
  call void @llvm.dbg.value(metadata i64 0, metadata !17801, metadata !DIExpression()), !dbg !17805
  call void @llvm.dbg.value(metadata i32 0, metadata !17802, metadata !DIExpression()), !dbg !17806
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17441, metadata !DIExpression()) #25, !dbg !17807
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17809, !srcloc !17456
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17809
  call void @llvm.dbg.value(metadata i32 %3, metadata !17453, metadata !DIExpression()) #25, !dbg !17811
  call void @llvm.dbg.value(metadata i32 undef, metadata !17454, metadata !DIExpression()) #25, !dbg !17811
  call void @llvm.dbg.value(metadata i32 %3, metadata !17447, metadata !DIExpression()) #25, !dbg !17807
  call void @llvm.dbg.value(metadata i32 %3, metadata !17804, metadata !DIExpression()), !dbg !17806
  call void @llvm.dbg.value(metadata i64 0, metadata !17801, metadata !DIExpression()), !dbg !17805
  call void @llvm.dbg.value(metadata i32 undef, metadata !17802, metadata !DIExpression()), !dbg !17806
  %4 = load i64, i64* @curr_tick, align 8, !dbg !17812
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !17815
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !17801, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17805
  call void @llvm.dbg.value(metadata i32 %3, metadata !17509, metadata !DIExpression()) #25, !dbg !17816
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17514, metadata !DIExpression()) #25, !dbg !17816
  call void @llvm.dbg.value(metadata i32 %3, metadata !17517, metadata !DIExpression()) #25, !dbg !17818
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !17820, !srcloc !17523
  call void @llvm.dbg.value(metadata i32 undef, metadata !17802, metadata !DIExpression()), !dbg !17806
  %6 = add i64 %5, %4, !dbg !17821
  ret i64 %6, !dbg !17822
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !17823 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !17825, metadata !DIExpression()), !dbg !17829
  call void @llvm.dbg.value(metadata i32 0, metadata !17826, metadata !DIExpression()), !dbg !17830
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17441, metadata !DIExpression()) #25, !dbg !17831
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17833, !srcloc !17456
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17833
  call void @llvm.dbg.value(metadata i32 %2, metadata !17453, metadata !DIExpression()) #25, !dbg !17835
  call void @llvm.dbg.value(metadata i32 undef, metadata !17454, metadata !DIExpression()) #25, !dbg !17835
  call void @llvm.dbg.value(metadata i32 %2, metadata !17447, metadata !DIExpression()) #25, !dbg !17831
  call void @llvm.dbg.value(metadata i32 %2, metadata !17828, metadata !DIExpression()), !dbg !17830
  call void @llvm.dbg.value(metadata i32 -1, metadata !17825, metadata !DIExpression()), !dbg !17829
  call void @llvm.dbg.value(metadata i32 undef, metadata !17826, metadata !DIExpression()), !dbg !17830
  %3 = tail call fastcc i32 @next_timeout() #26, !dbg !17836
  call void @llvm.dbg.value(metadata i32 %3, metadata !17825, metadata !DIExpression()), !dbg !17829
  call void @llvm.dbg.value(metadata i32 %2, metadata !17509, metadata !DIExpression()) #25, !dbg !17839
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17514, metadata !DIExpression()) #25, !dbg !17839
  call void @llvm.dbg.value(metadata i32 %2, metadata !17517, metadata !DIExpression()) #25, !dbg !17841
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !17843, !srcloc !17523
  call void @llvm.dbg.value(metadata i32 undef, metadata !17826, metadata !DIExpression()), !dbg !17830
  ret i32 %3, !dbg !17844
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !17845 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17847, metadata !DIExpression()), !dbg !17857
  call void @llvm.dbg.value(metadata i1 %1, metadata !17848, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17857
  call void @llvm.dbg.value(metadata i32 0, metadata !17849, metadata !DIExpression()), !dbg !17858
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17441, metadata !DIExpression()) #25, !dbg !17859
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17861, !srcloc !17456
  call void @llvm.dbg.value(metadata i32 undef, metadata !17453, metadata !DIExpression()) #25, !dbg !17863
  call void @llvm.dbg.value(metadata i32 undef, metadata !17454, metadata !DIExpression()) #25, !dbg !17863
  call void @llvm.dbg.value(metadata i32 undef, metadata !17447, metadata !DIExpression()) #25, !dbg !17859
  call void @llvm.dbg.value(metadata i32 undef, metadata !17851, metadata !DIExpression()), !dbg !17858
  call void @llvm.dbg.value(metadata i32 undef, metadata !17849, metadata !DIExpression()), !dbg !17858
  %4 = tail call fastcc i32 @next_timeout() #26, !dbg !17864
  call void @llvm.dbg.value(metadata i32 %4, metadata !17852, metadata !DIExpression()), !dbg !17865
  call void @llvm.dbg.value(metadata i1 undef, metadata !17855, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17865
  %5 = icmp slt i32 %4, 2, !dbg !17866
  call void @llvm.dbg.value(metadata i1 %5, metadata !17856, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17865
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !17867
  call void @llvm.dbg.value(metadata i1 %6, metadata !17855, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17865
  br i1 %7, label %11, label %8, !dbg !17867

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !17869
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !17869
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #27, !dbg !17871
  br label %11, !dbg !17872

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !17861
  call void @llvm.dbg.value(metadata i32 %12, metadata !17453, metadata !DIExpression()) #25, !dbg !17863
  call void @llvm.dbg.value(metadata i32 %12, metadata !17447, metadata !DIExpression()) #25, !dbg !17859
  call void @llvm.dbg.value(metadata i32 %12, metadata !17851, metadata !DIExpression()), !dbg !17858
  call void @llvm.dbg.value(metadata i32 undef, metadata !17509, metadata !DIExpression()) #25, !dbg !17873
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17514, metadata !DIExpression()) #25, !dbg !17873
  call void @llvm.dbg.value(metadata i32 undef, metadata !17517, metadata !DIExpression()) #25, !dbg !17875
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #25, !dbg !17877, !srcloc !17523
  call void @llvm.dbg.value(metadata i32 1, metadata !17849, metadata !DIExpression()), !dbg !17858
  call void @llvm.dbg.value(metadata i32 undef, metadata !17849, metadata !DIExpression()), !dbg !17858
  ret void, !dbg !17878
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !17879 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17883, metadata !DIExpression()), !dbg !17888
  tail call void @z_time_slice(i32 noundef %0) #27, !dbg !17889
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17441, metadata !DIExpression()) #25, !dbg !17890
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17892, !srcloc !17456
  call void @llvm.dbg.value(metadata i32 undef, metadata !17453, metadata !DIExpression()) #25, !dbg !17894
  call void @llvm.dbg.value(metadata i32 undef, metadata !17454, metadata !DIExpression()) #25, !dbg !17894
  call void @llvm.dbg.value(metadata i32 undef, metadata !17447, metadata !DIExpression()) #25, !dbg !17890
  call void @llvm.dbg.value(metadata i32 undef, metadata !17884, metadata !DIExpression()), !dbg !17888
  store i32 %0, i32* @announce_remaining, align 4, !dbg !17888
  call void @llvm.dbg.value(metadata i32 undef, metadata !17884, metadata !DIExpression()), !dbg !17888
  %3 = tail call fastcc %struct._timeout* @first() #26, !dbg !17895
  %4 = icmp eq %struct._timeout* %3, null, !dbg !17896
  br i1 %4, label %28, label %5, !dbg !17897

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !17898
  %10 = load i64, i64* %9, align 8, !dbg !17898
  %11 = sext i32 %8 to i64, !dbg !17899
  %12 = icmp sgt i64 %10, %11, !dbg !17900
  br i1 %12, label %26, label %13, !dbg !17901

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !17888
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !17885, metadata !DIExpression()), !dbg !17902
  %15 = trunc i64 %10 to i32, !dbg !17903
  call void @llvm.dbg.value(metadata i32 %15, metadata !17887, metadata !DIExpression()), !dbg !17902
  %16 = sext i32 %15 to i64, !dbg !17904
  %17 = load i64, i64* @curr_tick, align 8, !dbg !17905
  %18 = add i64 %17, %16, !dbg !17905
  store i64 %18, i64* @curr_tick, align 8, !dbg !17905
  store i64 0, i64* %9, align 8, !dbg !17906
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #26, !dbg !17907
  call void @llvm.dbg.value(metadata i32 %14, metadata !17509, metadata !DIExpression()) #25, !dbg !17908
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17514, metadata !DIExpression()) #25, !dbg !17908
  call void @llvm.dbg.value(metadata i32 %14, metadata !17517, metadata !DIExpression()) #25, !dbg !17910
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !17912, !srcloc !17523
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !17913
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !17913
  tail call void %20(%struct._timeout* noundef nonnull %6) #27, !dbg !17914
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17441, metadata !DIExpression()) #25, !dbg !17915
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17917, !srcloc !17456
  call void @llvm.dbg.value(metadata i32 undef, metadata !17453, metadata !DIExpression()) #25, !dbg !17919
  call void @llvm.dbg.value(metadata i32 undef, metadata !17454, metadata !DIExpression()) #25, !dbg !17919
  call void @llvm.dbg.value(metadata i32 undef, metadata !17447, metadata !DIExpression()) #25, !dbg !17915
  call void @llvm.dbg.value(metadata i32 undef, metadata !17884, metadata !DIExpression()), !dbg !17888
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !17920
  %23 = sub nsw i32 %22, %15, !dbg !17920
  store i32 %23, i32* @announce_remaining, align 4, !dbg !17888
  call void @llvm.dbg.value(metadata i32 undef, metadata !17884, metadata !DIExpression()), !dbg !17888
  %24 = tail call fastcc %struct._timeout* @first() #26, !dbg !17895
  %25 = icmp eq %struct._timeout* %24, null, !dbg !17896
  br i1 %25, label %28, label %5, !dbg !17897, !llvm.loop !17921

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !17923
  store i64 %27, i64* %9, align 8, !dbg !17923
  br label %32, !dbg !17926

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !17888
  %31 = sext i32 %30 to i64, !dbg !17927
  br label %32, !dbg !17927

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !17927
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !17888
  %36 = load i64, i64* @curr_tick, align 8, !dbg !17928
  %37 = add i64 %36, %33, !dbg !17928
  store i64 %37, i64* @curr_tick, align 8, !dbg !17928
  store i32 0, i32* @announce_remaining, align 4, !dbg !17929
  %38 = tail call fastcc i32 @next_timeout() #26, !dbg !17930
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #27, !dbg !17931
  call void @llvm.dbg.value(metadata i32 %35, metadata !17509, metadata !DIExpression()) #25, !dbg !17932
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17514, metadata !DIExpression()) #25, !dbg !17932
  call void @llvm.dbg.value(metadata i32 %35, metadata !17517, metadata !DIExpression()) #25, !dbg !17934
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #25, !dbg !17936, !srcloc !17523
  ret void, !dbg !17937
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !17938 {
  call void @llvm.dbg.value(metadata i64 0, metadata !17940, metadata !DIExpression()), !dbg !17944
  call void @llvm.dbg.value(metadata i32 0, metadata !17941, metadata !DIExpression()), !dbg !17945
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17441, metadata !DIExpression()) #25, !dbg !17946
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17948, !srcloc !17456
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17948
  call void @llvm.dbg.value(metadata i32 %2, metadata !17453, metadata !DIExpression()) #25, !dbg !17950
  call void @llvm.dbg.value(metadata i32 undef, metadata !17454, metadata !DIExpression()) #25, !dbg !17950
  call void @llvm.dbg.value(metadata i32 %2, metadata !17447, metadata !DIExpression()) #25, !dbg !17946
  call void @llvm.dbg.value(metadata i32 %2, metadata !17943, metadata !DIExpression()), !dbg !17945
  call void @llvm.dbg.value(metadata i64 0, metadata !17940, metadata !DIExpression()), !dbg !17944
  call void @llvm.dbg.value(metadata i32 undef, metadata !17941, metadata !DIExpression()), !dbg !17945
  %3 = load i64, i64* @curr_tick, align 8, !dbg !17951
  %4 = tail call fastcc i32 @elapsed.248() #26, !dbg !17954
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !17940, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17944
  call void @llvm.dbg.value(metadata i32 %2, metadata !17509, metadata !DIExpression()) #25, !dbg !17955
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17514, metadata !DIExpression()) #25, !dbg !17955
  call void @llvm.dbg.value(metadata i32 %2, metadata !17517, metadata !DIExpression()) #25, !dbg !17957
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !17959, !srcloc !17523
  call void @llvm.dbg.value(metadata i32 undef, metadata !17941, metadata !DIExpression()), !dbg !17945
  %5 = sext i32 %4 to i64, !dbg !17954
  %6 = add i64 %3, %5, !dbg !17960
  ret i64 %6, !dbg !17961
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !17962 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !17963
  %2 = trunc i64 %1 to i32, !dbg !17964
  ret i32 %2, !dbg !17965
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !17966 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !17967
  ret i64 %1, !dbg !17968
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !17969 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17971, metadata !DIExpression()), !dbg !17978
  %2 = icmp eq i32 %0, 0, !dbg !17979
  br i1 %2, label %10, label %3, !dbg !17981

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !17982
  call void @llvm.dbg.value(metadata i32 %4, metadata !17972, metadata !DIExpression()), !dbg !17978
  %5 = mul i32 %0, 168, !dbg !17983
  call void @llvm.dbg.value(metadata i32 %5, metadata !17973, metadata !DIExpression()), !dbg !17978
  br label %6, !dbg !17984

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !17985
  call void @llvm.dbg.value(metadata i32 %7, metadata !17974, metadata !DIExpression()), !dbg !17986
  %8 = sub i32 %7, %4, !dbg !17987
  %9 = icmp ult i32 %8, %5, !dbg !17989
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !17990
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !17991 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #26, !dbg !17992
  ret i32 %1, !dbg !17993
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !17994 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #27, !dbg !17996
  ret i32 %1, !dbg !17997
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !17998 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !18002, metadata !DIExpression()), !dbg !18004
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !18005

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #26, !dbg !18006
  br label %14, !dbg !18010

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !18003, metadata !DIExpression()), !dbg !18004
  %6 = icmp slt i64 %2, -1, !dbg !18011
  br i1 %6, label %7, label %9, !dbg !18014

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !18015
  br label %14, !dbg !18016

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #26, !dbg !18018
  %11 = icmp ugt i64 %2, 1, !dbg !18019
  %12 = select i1 %11, i64 %2, i64 1, !dbg !18019
  %13 = add nsw i64 %10, %12, !dbg !18020
  br label %14, !dbg !18021

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !18022
  ret i64 %15, !dbg !18023
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_free(i8* noundef %0) local_unnamed_addr #1 !dbg !18024 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !18026, metadata !DIExpression()), !dbg !18030
  %2 = icmp eq i8* %0, null, !dbg !18031
  br i1 %2, label %7, label %3, !dbg !18033

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !18027, metadata !DIExpression()), !dbg !18030
  %4 = getelementptr inbounds i8, i8* %0, i32 -4, !dbg !18034
  %5 = bitcast i8* %4 to %struct.k_heap**, !dbg !18034
  call void @llvm.dbg.value(metadata %struct.k_heap** %5, metadata !18027, metadata !DIExpression()), !dbg !18030
  call void @llvm.dbg.value(metadata i8* %4, metadata !18026, metadata !DIExpression()), !dbg !18030
  %6 = load %struct.k_heap*, %struct.k_heap** %5, align 4, !dbg !18036
  tail call void @k_heap_free(%struct.k_heap* noundef %6, i8* noundef nonnull %4) #27, !dbg !18037
  br label %7, !dbg !18038

7:                                                ; preds = %3, %1
  ret void, !dbg !18039
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_aligned_alloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !18040 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18044, metadata !DIExpression()), !dbg !18047
  call void @llvm.dbg.value(metadata i32 %1, metadata !18045, metadata !DIExpression()), !dbg !18047
  %3 = tail call fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef nonnull @_system_heap, i32 noundef %0, i32 noundef %1) #26, !dbg !18048
  call void @llvm.dbg.value(metadata i8* %3, metadata !18046, metadata !DIExpression()), !dbg !18047
  ret i8* %3, !dbg !18049
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !18050 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !18054, metadata !DIExpression()), !dbg !18060
  call void @llvm.dbg.value(metadata i32 %1, metadata !18055, metadata !DIExpression()), !dbg !18060
  call void @llvm.dbg.value(metadata i32 %2, metadata !18056, metadata !DIExpression()), !dbg !18060
  store i32 %2, i32* %4, align 4
  call void @llvm.dbg.value(metadata i32* %4, metadata !18056, metadata !DIExpression(DW_OP_deref)), !dbg !18060
  %5 = call fastcc zeroext i1 @size_add_overflow(i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !18061
  br i1 %5, label %14, label %6, !dbg !18063

6:                                                ; preds = %3
  %7 = or i32 %1, 4, !dbg !18064
  call void @llvm.dbg.value(metadata i32 %7, metadata !18059, metadata !DIExpression()), !dbg !18060
  %8 = load i32, i32* %4, align 4, !dbg !18065
  call void @llvm.dbg.value(metadata i32 %8, metadata !18056, metadata !DIExpression()), !dbg !18060
  %9 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %7, i32 noundef %8, [1 x i64] zeroinitializer) #27, !dbg !18066
  call void @llvm.dbg.value(metadata i8* %9, metadata !18057, metadata !DIExpression()), !dbg !18060
  %10 = icmp eq i8* %9, null, !dbg !18067
  br i1 %10, label %14, label %11, !dbg !18069

11:                                               ; preds = %6
  %12 = bitcast i8* %9 to %struct.k_heap**, !dbg !18070
  call void @llvm.dbg.value(metadata %struct.k_heap** %12, metadata !18058, metadata !DIExpression()), !dbg !18060
  store %struct.k_heap* %0, %struct.k_heap** %12, align 4, !dbg !18071
  %13 = getelementptr inbounds i8, i8* %9, i32 4, !dbg !18072
  call void @llvm.dbg.value(metadata i8* %13, metadata !18058, metadata !DIExpression()), !dbg !18060
  call void @llvm.dbg.value(metadata i8* %13, metadata !18057, metadata !DIExpression()), !dbg !18060
  br label %14, !dbg !18073

14:                                               ; preds = %6, %3, %11
  %15 = phi i8* [ %13, %11 ], [ null, %3 ], [ null, %6 ], !dbg !18060
  ret i8* %15, !dbg !18074
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_add_overflow(i32 noundef %0, i32* nocapture noundef writeonly %1) unnamed_addr #23 !dbg !18075 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18077, metadata !DIExpression()), !dbg !18080
  call void @llvm.dbg.value(metadata i32 4, metadata !18078, metadata !DIExpression()), !dbg !18080
  call void @llvm.dbg.value(metadata i32* %1, metadata !18079, metadata !DIExpression()), !dbg !18080
  %3 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %0, i32 4), !dbg !18081
  %4 = extractvalue { i32, i1 } %3, 1, !dbg !18081
  %5 = extractvalue { i32, i1 } %3, 0, !dbg !18081
  store i32 %5, i32* %1, align 4, !dbg !18081
  ret i1 %4, !dbg !18082
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.uadd.with.overflow.i32(i32, i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_malloc(i32 noundef %0) local_unnamed_addr #1 !dbg !18083 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18085, metadata !DIExpression()), !dbg !18087
  %2 = tail call i8* @k_aligned_alloc(i32 noundef 4, i32 noundef %0) #26, !dbg !18088
  call void @llvm.dbg.value(metadata i8* %2, metadata !18086, metadata !DIExpression()), !dbg !18087
  ret i8* %2, !dbg !18089
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_calloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !18090 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !18092, metadata !DIExpression()), !dbg !18096
  call void @llvm.dbg.value(metadata i32 %1, metadata !18093, metadata !DIExpression()), !dbg !18096
  %4 = bitcast i32* %3 to i8*, !dbg !18097
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #25, !dbg !18097
  call void @llvm.dbg.value(metadata i32* %3, metadata !18095, metadata !DIExpression(DW_OP_deref)), !dbg !18096
  %5 = call fastcc zeroext i1 @size_mul_overflow.278(i32 noundef %0, i32 noundef %1, i32* noundef nonnull %3) #26, !dbg !18098
  br i1 %5, label %12, label %6, !dbg !18100

6:                                                ; preds = %2
  %7 = load i32, i32* %3, align 4, !dbg !18101
  call void @llvm.dbg.value(metadata i32 %7, metadata !18095, metadata !DIExpression()), !dbg !18096
  %8 = tail call i8* @k_malloc(i32 noundef %7) #26, !dbg !18102
  call void @llvm.dbg.value(metadata i8* %8, metadata !18094, metadata !DIExpression()), !dbg !18096
  %9 = icmp eq i8* %8, null, !dbg !18103
  br i1 %9, label %12, label %10, !dbg !18105

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i32 %7, metadata !18095, metadata !DIExpression()), !dbg !18096
  %11 = tail call i8* @memset(i8* noundef nonnull %8, i32 noundef 0, i32 noundef %7) #27, !dbg !18106
  br label %12, !dbg !18108

12:                                               ; preds = %10, %6, %2
  %13 = phi i8* [ null, %2 ], [ null, %6 ], [ %8, %10 ], !dbg !18096
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #25, !dbg !18109
  ret i8* %13, !dbg !18109
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_mul_overflow.278(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) unnamed_addr #23 !dbg !18110 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18112, metadata !DIExpression()), !dbg !18115
  call void @llvm.dbg.value(metadata i32 %1, metadata !18113, metadata !DIExpression()), !dbg !18115
  call void @llvm.dbg.value(metadata i32* %2, metadata !18114, metadata !DIExpression()), !dbg !18115
  %4 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %0, i32 %1), !dbg !18116
  %5 = extractvalue { i32, i1 } %4, 1, !dbg !18116
  %6 = extractvalue { i32, i1 } %4, 0, !dbg !18116
  store i32 %6, i32* %2, align 4, !dbg !18116
  ret i1 %5, !dbg !18117
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @k_thread_system_pool_assign(%struct.k_thread* nocapture noundef writeonly %0) local_unnamed_addr #8 !dbg !18118 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18192, metadata !DIExpression()), !dbg !18193
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !18194
  store %struct.k_heap* @_system_heap, %struct.k_heap** %2, align 8, !dbg !18195
  ret void, !dbg !18196
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_thread_aligned_alloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !18197 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18199, metadata !DIExpression()), !dbg !18203
  call void @llvm.dbg.value(metadata i32 %1, metadata !18200, metadata !DIExpression()), !dbg !18203
  %3 = tail call zeroext i1 @k_is_in_isr() #27, !dbg !18204
  br i1 %3, label %9, label %4, !dbg !18206

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18207
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 6, !dbg !18209
  %7 = load %struct.k_heap*, %struct.k_heap** %6, align 8, !dbg !18209
  call void @llvm.dbg.value(metadata %struct.k_heap* %7, metadata !18202, metadata !DIExpression()), !dbg !18203
  %8 = icmp eq %struct.k_heap* %7, null, !dbg !18210
  br i1 %8, label %12, label %9, !dbg !18212

9:                                                ; preds = %2, %4
  %10 = phi %struct.k_heap* [ %7, %4 ], [ @_system_heap, %2 ]
  %11 = tail call fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef nonnull %10, i32 noundef %0, i32 noundef %1) #26, !dbg !18213
  call void @llvm.dbg.value(metadata i8* %11, metadata !18201, metadata !DIExpression()), !dbg !18203
  br label %12, !dbg !18215

12:                                               ; preds = %4, %9
  %13 = phi i8* [ %11, %9 ], [ null, %4 ], !dbg !18216
  call void @llvm.dbg.value(metadata i8* %13, metadata !18201, metadata !DIExpression()), !dbg !18203
  ret i8* %13, !dbg !18217
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @main() local_unnamed_addr #1 !dbg !18218 {
  tail call void asm sideeffect "nop", ""() #25, !dbg !18220, !srcloc !18223
  ret void, !dbg !18224
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !18225 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.287, i32 0, i32 0)) #27, !dbg !18227
  ret void, !dbg !18228
}

; Function Attrs: noinline nounwind optsize
define internal i32 @statics_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !18229 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !18231, metadata !DIExpression()), !dbg !18251
  call void @llvm.dbg.value(metadata %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), metadata !18232, metadata !DIExpression()), !dbg !18252
  br i1 icmp ult (%struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0)), label %3, label %2, !dbg !18253

2:                                                ; preds = %3, %1
  ret i32 0, !dbg !18254

3:                                                ; preds = %1, %3
  %4 = phi %struct.k_heap* [ %9, %3 ], [ getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_heap* %4, metadata !18232, metadata !DIExpression()), !dbg !18252
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 1, !dbg !18255
  %6 = load i8*, i8** %5, align 4, !dbg !18255
  %7 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 2, !dbg !18259
  %8 = load i32, i32* %7, align 4, !dbg !18259
  tail call void @k_heap_init(%struct.k_heap* noundef nonnull %4, i8* noundef %6, i32 noundef %8) #26, !dbg !18260
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 1, !dbg !18261
  call void @llvm.dbg.value(metadata %struct.k_heap* %9, metadata !18232, metadata !DIExpression()), !dbg !18252
  %10 = icmp ult %struct.k_heap* %9, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !18262
  br i1 %10, label %3, label %2, !dbg !18253, !llvm.loop !18264
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_init(%struct.k_heap* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !18266 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !18270, metadata !DIExpression()), !dbg !18273
  call void @llvm.dbg.value(metadata i8* %1, metadata !18271, metadata !DIExpression()), !dbg !18273
  call void @llvm.dbg.value(metadata i32 %2, metadata !18272, metadata !DIExpression()), !dbg !18273
  %4 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !18274
  tail call fastcc void @z_waitq_init.289(%struct._wait_q_t* noundef nonnull %4) #26, !dbg !18275
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !18276
  tail call void @sys_heap_init(%struct.sys_heap* noundef %5, i8* noundef %1, i32 noundef %2) #27, !dbg !18277
  ret void, !dbg !18278
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.289(%struct._wait_q_t* noundef %0) unnamed_addr #8 !dbg !18279 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !18284, metadata !DIExpression()), !dbg !18285
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !18286
  tail call fastcc void @sys_dlist_init.290(%struct._dnode* noundef %2) #26, !dbg !18287
  ret void, !dbg !18288
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.290(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !18289 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18294, metadata !DIExpression()), !dbg !18295
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18296
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !18297
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18298
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !18299
  ret void, !dbg !18300
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !18301 {
  %5 = extractvalue [1 x i64] %3, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !18312, metadata !DIExpression()), !dbg !18322
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !18309, metadata !DIExpression()), !dbg !18322
  call void @llvm.dbg.value(metadata i32 %1, metadata !18310, metadata !DIExpression()), !dbg !18322
  call void @llvm.dbg.value(metadata i32 %2, metadata !18311, metadata !DIExpression()), !dbg !18322
  %6 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %3) #27, !dbg !18323
  call void @llvm.dbg.value(metadata i64 %6, metadata !18314, metadata !DIExpression()), !dbg !18322
  call void @llvm.dbg.value(metadata i8* null, metadata !18315, metadata !DIExpression()), !dbg !18322
  %7 = icmp eq i64 %5, -1, !dbg !18324
  %8 = select i1 %7, i64 9223372036854775807, i64 %6, !dbg !18324
  call void @llvm.dbg.value(metadata i64 %8, metadata !18314, metadata !DIExpression()), !dbg !18322
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !18325
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18326, metadata !DIExpression()) #25, !dbg !18333
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18335, !srcloc !18341
  call void @llvm.dbg.value(metadata i32 undef, metadata !18338, metadata !DIExpression()) #25, !dbg !18342
  call void @llvm.dbg.value(metadata i32 undef, metadata !18339, metadata !DIExpression()) #25, !dbg !18342
  call void @llvm.dbg.value(metadata i32 undef, metadata !18332, metadata !DIExpression()) #25, !dbg !18333
  call void @llvm.dbg.value(metadata i32 undef, metadata !18316, metadata !DIExpression()), !dbg !18322
  call void @llvm.dbg.value(metadata i8 0, metadata !18321, metadata !DIExpression()), !dbg !18322
  %11 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i8* null, metadata !18315, metadata !DIExpression()), !dbg !18322
  call void @llvm.dbg.value(metadata i8 0, metadata !18321, metadata !DIExpression()), !dbg !18322
  call void @llvm.dbg.value(metadata i32 undef, metadata !18316, metadata !DIExpression()), !dbg !18322
  %12 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #27, !dbg !18343
  call void @llvm.dbg.value(metadata i8* %12, metadata !18315, metadata !DIExpression()), !dbg !18322
  %13 = tail call i64 @sys_clock_tick_get() #27, !dbg !18345
  call void @llvm.dbg.value(metadata i64 %13, metadata !18313, metadata !DIExpression()), !dbg !18322
  %14 = icmp eq i8* %12, null, !dbg !18346
  br i1 %14, label %15, label %31, !dbg !18348

15:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !18316, metadata !DIExpression()), !dbg !18322
  %16 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1
  br label %17, !dbg !18348

17:                                               ; preds = %15, %22
  %18 = phi i64 [ %13, %15 ], [ %29, %22 ]
  %19 = phi { i32, i32 } [ %10, %15 ], [ %27, %22 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !18321, metadata !DIExpression()), !dbg !18322
  %20 = sub nsw i64 %8, %18, !dbg !18349
  %21 = icmp slt i64 %20, 1, !dbg !18350
  br i1 %21, label %31, label %22, !dbg !18351

22:                                               ; preds = %17
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !18322
  call void @llvm.dbg.value(metadata i8 undef, metadata !18321, metadata !DIExpression()), !dbg !18322
  %24 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !18352
  %25 = insertvalue [1 x i64] poison, i64 %20, 0, !dbg !18352
  %26 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %24, %struct._wait_q_t* noundef nonnull %16, [1 x i64] %25) #27, !dbg !18352
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18326, metadata !DIExpression()) #25, !dbg !18353
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18355, !srcloc !18341
  call void @llvm.dbg.value(metadata i32 undef, metadata !18338, metadata !DIExpression()) #25, !dbg !18357
  call void @llvm.dbg.value(metadata i32 undef, metadata !18339, metadata !DIExpression()) #25, !dbg !18357
  call void @llvm.dbg.value(metadata i32 undef, metadata !18332, metadata !DIExpression()) #25, !dbg !18353
  call void @llvm.dbg.value(metadata i32 undef, metadata !18316, metadata !DIExpression()), !dbg !18322
  call void @llvm.dbg.value(metadata i8* null, metadata !18315, metadata !DIExpression()), !dbg !18322
  call void @llvm.dbg.value(metadata i32 undef, metadata !18316, metadata !DIExpression()), !dbg !18322
  %28 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #27, !dbg !18343
  call void @llvm.dbg.value(metadata i8* %28, metadata !18315, metadata !DIExpression()), !dbg !18322
  %29 = tail call i64 @sys_clock_tick_get() #27, !dbg !18345
  call void @llvm.dbg.value(metadata i64 %29, metadata !18313, metadata !DIExpression()), !dbg !18322
  %30 = icmp eq i8* %28, null, !dbg !18346
  br i1 %30, label %17, label %31, !dbg !18348, !llvm.loop !18358

31:                                               ; preds = %22, %17, %4
  %32 = phi { i32, i32 } [ %10, %4 ], [ %19, %17 ], [ %27, %22 ]
  %33 = phi i8* [ %12, %4 ], [ null, %17 ], [ %28, %22 ], !dbg !18343
  %34 = extractvalue { i32, i32 } %32, 0, !dbg !18322
  call void @llvm.dbg.value(metadata i8* %33, metadata !18315, metadata !DIExpression()), !dbg !18322
  call void @llvm.dbg.value(metadata i32 %34, metadata !18361, metadata !DIExpression()) #25, !dbg !18367
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18366, metadata !DIExpression()) #25, !dbg !18367
  call void @llvm.dbg.value(metadata i32 %34, metadata !18369, metadata !DIExpression()) #25, !dbg !18372
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %34) #25, !dbg !18374, !srcloc !18375
  ret i8* %33, !dbg !18376
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_alloc(%struct.k_heap* noundef %0, i32 noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !18377 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !18383, metadata !DIExpression()), !dbg !18385
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !18381, metadata !DIExpression()), !dbg !18385
  call void @llvm.dbg.value(metadata i32 %1, metadata !18382, metadata !DIExpression()), !dbg !18385
  %4 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef 4, i32 noundef %1, [1 x i64] %2) #26, !dbg !18386
  call void @llvm.dbg.value(metadata i8* %4, metadata !18384, metadata !DIExpression()), !dbg !18385
  ret i8* %4, !dbg !18387
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_free(%struct.k_heap* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !18388 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !18392, metadata !DIExpression()), !dbg !18395
  call void @llvm.dbg.value(metadata i8* %1, metadata !18393, metadata !DIExpression()), !dbg !18395
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18326, metadata !DIExpression()) #25, !dbg !18396
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18398, !srcloc !18341
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !18398
  call void @llvm.dbg.value(metadata i32 %4, metadata !18338, metadata !DIExpression()) #25, !dbg !18400
  call void @llvm.dbg.value(metadata i32 undef, metadata !18339, metadata !DIExpression()) #25, !dbg !18400
  call void @llvm.dbg.value(metadata i32 %4, metadata !18332, metadata !DIExpression()) #25, !dbg !18396
  call void @llvm.dbg.value(metadata i32 %4, metadata !18394, metadata !DIExpression()), !dbg !18395
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !18401
  tail call void @sys_heap_free(%struct.sys_heap* noundef %5, i8* noundef %1) #27, !dbg !18402
  %6 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !18403
  %7 = tail call i32 @z_unpend_all(%struct._wait_q_t* noundef nonnull %6) #27, !dbg !18405
  %8 = icmp eq i32 %7, 0, !dbg !18406
  br i1 %8, label %12, label %9, !dbg !18407

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !18408
  %11 = insertvalue [1 x i32] poison, i32 %4, 0, !dbg !18409
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %10, [1 x i32] %11) #27, !dbg !18409
  br label %13, !dbg !18411

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 %4, metadata !18361, metadata !DIExpression()) #25, !dbg !18412
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18366, metadata !DIExpression()) #25, !dbg !18412
  call void @llvm.dbg.value(metadata i32 %4, metadata !18369, metadata !DIExpression()) #25, !dbg !18415
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !18417, !srcloc !18375
  br label %13

13:                                               ; preds = %12, %9
  ret void, !dbg !18418
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { nofree nosync nounwind willreturn }
attributes #7 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { argmemonly nofree nounwind willreturn writeonly }
attributes #15 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { mustprogress nofree noinline nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #25 = { nounwind }
attributes #26 = { nobuiltin optsize "no-builtins" }
attributes #27 = { nobuiltin nounwind optsize "no-builtins" }
attributes #28 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #29 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #30 = { nounwind readnone }
attributes #31 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!895, !2, !2647, !27, !366, !390, !2649, !2651, !2684, !2718, !400, !450, !2720, !2723, !2734, !2780, !2782, !2810, !2838, !2881, !2952, !2997, !479, !619, !3025, !655, !665, !690, !702, !929, !3030, !1064, !1130, !1445, !1669, !3067, !1782, !1872, !3069, !3153, !3216, !1922, !3219, !1929, !2294, !3237, !3239, !2314, !2422, !3343, !2537, !2576, !3346, !3348, !2616}
!llvm.ident = !{!3350, !3350, !3350, !3350, !3350, !3350, !3350, !3350, !3350, !3350, !3350, !3350, !3350, !3350, !3350, !3350, !3350, !3350, !3350, !3350, !3350, !3350, !3350, !3350, !3350, !3350, !3350, !3350, !3350, !3350, !3350, !3350, !3350, !3350, !3350, !3350, !3350, !3350, !3350, !3350, !3350, !3350, !3350, !3350, !3350, !3350, !3350, !3350, !3350, !3350, !3350, !3350, !3350, !3350, !3350}
!llvm.module.flags = !{!3351, !3352, !3353, !3354, !3355, !3356, !3357, !3358, !3359}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 94, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 5248, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 82)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 2624, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "_zbus_mutex_bm_channel", scope: !27, file: !114, line: 16, type: !136, isLocal: true, isDefinition: true, align: 32)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !111, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/zbus/benchmark/src/benchmark.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103, !104, !108, !109}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !105, line: 46, baseType: !106)
!105 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!106 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !107)
!107 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!108 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!109 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !110)
!110 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!111 = !{!25, !112, !290, !292, !294, !296, !298, !300, !302, !304, !306, !339, !343, !348, !350, !357, !362}
!112 = !DIGlobalVariableExpression(var: !113, expr: !DIExpression())
!113 = distinct !DIGlobalVariable(name: "bm_channel", scope: !27, file: !114, line: 16, type: !115, isLocal: false, isDefinition: true, align: 32)
!114 = !DIFile(filename: "zephyr/samples/subsys/zbus/benchmark/src/benchmark.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!115 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !116)
!116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_channel", file: !117, line: 29, size: 192, elements: !118)
!117 = !DIFile(filename: "zephyr/include/zephyr/zbus/zbus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!118 = !{!119, !123, !125, !126, !134, !259}
!119 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !116, file: !117, line: 35, baseType: !120, size: 16)
!120 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !121)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !122)
!122 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !116, file: !117, line: 40, baseType: !124, size: 32, offset: 32)
!124 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !102)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !116, file: !117, line: 45, baseType: !124, size: 32, offset: 64)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !116, file: !117, line: 51, baseType: !127, size: 32, offset: 96)
!127 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !128)
!128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !129, size: 32)
!129 = !DISubroutineType(types: !130)
!130 = !{!131, !13, !132}
!131 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!132 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !133, line: 214, baseType: !32)
!133 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!134 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !116, file: !117, line: 56, baseType: !135, size: 32, offset: 128)
!135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 32)
!136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !137, line: 2720, size: 160, elements: !138)
!137 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!138 = !{!139, !160, !257, !258}
!139 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !136, file: !137, line: 2722, baseType: !140, size: 64)
!140 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !142)
!141 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!142 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !143)
!143 = !{!144}
!144 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !142, file: !141, line: 232, baseType: !145, size: 64)
!145 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !147)
!146 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !148)
!148 = !{!149, !155}
!149 = !DIDerivedType(tag: DW_TAG_member, scope: !147, file: !146, line: 38, baseType: !150, size: 32)
!150 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !147, file: !146, line: 38, size: 32, elements: !151)
!151 = !{!152, !154}
!152 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !150, file: !146, line: 39, baseType: !153, size: 32)
!153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !147, size: 32)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !150, file: !146, line: 40, baseType: !153, size: 32)
!155 = !DIDerivedType(tag: DW_TAG_member, scope: !147, file: !146, line: 42, baseType: !156, size: 32, offset: 32)
!156 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !147, file: !146, line: 42, size: 32, elements: !157)
!157 = !{!158, !159}
!158 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !156, file: !146, line: 43, baseType: !153, size: 32)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !156, file: !146, line: 44, baseType: !153, size: 32)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !136, file: !137, line: 2724, baseType: !161, size: 32, offset: 64)
!161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !162, size: 32)
!162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !164)
!163 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!164 = !{!165, !212, !225, !226, !227, !228, !234, !252}
!165 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !162, file: !163, line: 247, baseType: !166, size: 384)
!166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !167)
!167 = !{!168, !182, !184, !187, !188, !199, !200, !201}
!168 = !DIDerivedType(tag: DW_TAG_member, scope: !166, file: !163, line: 60, baseType: !169, size: 64)
!169 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !166, file: !163, line: 60, size: 64, elements: !170)
!170 = !{!171, !173}
!171 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !169, file: !163, line: 61, baseType: !172, size: 64)
!172 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !147)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !169, file: !163, line: 62, baseType: !174, size: 64)
!174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !176)
!175 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!176 = !{!177}
!177 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !174, file: !175, line: 50, baseType: !178, size: 64)
!178 = !DICompositeType(tag: DW_TAG_array_type, baseType: !179, size: 64, elements: !180)
!179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !174, size: 32)
!180 = !{!181}
!181 = !DISubrange(count: 2)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !166, file: !163, line: 68, baseType: !183, size: 32, offset: 64)
!183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !140, size: 32)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !166, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!185 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !186)
!186 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !166, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!188 = !DIDerivedType(tag: DW_TAG_member, scope: !166, file: !163, line: 90, baseType: !189, size: 16, offset: 112)
!189 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !166, file: !163, line: 90, size: 16, elements: !190)
!190 = !{!191, !198}
!191 = !DIDerivedType(tag: DW_TAG_member, scope: !189, file: !163, line: 91, baseType: !192, size: 16)
!192 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !189, file: !163, line: 91, size: 16, elements: !193)
!193 = !{!194, !197}
!194 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !192, file: !163, line: 96, baseType: !195, size: 8)
!195 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !196)
!196 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !192, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !189, file: !163, line: 100, baseType: !121, size: 16)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !166, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !166, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !166, file: !163, line: 131, baseType: !202, size: 192, offset: 192)
!202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !203)
!203 = !{!204, !205, !211}
!204 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !202, file: !141, line: 245, baseType: !172, size: 64)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !202, file: !141, line: 246, baseType: !206, size: 32, offset: 64)
!206 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !207)
!207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !208, size: 32)
!208 = !DISubroutineType(types: !209)
!209 = !{null, !210}
!210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !202, size: 32)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !202, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !162, file: !163, line: 250, baseType: !213, size: 288, offset: 384)
!213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !215)
!214 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!215 = !{!216, !217, !218, !219, !220, !221, !222, !223, !224}
!216 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !213, file: !214, line: 26, baseType: !108, size: 32)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !213, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !213, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !213, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !213, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !213, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !213, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !213, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !213, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !162, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !162, file: !163, line: 256, baseType: !140, size: 64, offset: 704)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !162, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !162, file: !163, line: 300, baseType: !229, size: 96, offset: 800)
!229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !230)
!230 = !{!231, !232, !233}
!231 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !229, file: !163, line: 153, baseType: !22, size: 32)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !229, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !229, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !162, file: !163, line: 325, baseType: !235, size: 32, offset: 896)
!235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !236, size: 32)
!236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !237)
!237 = !{!238, !247, !248}
!238 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !236, file: !137, line: 5074, baseType: !239, size: 96)
!239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !241)
!240 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!241 = !{!242, !245, !246}
!242 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !239, file: !240, line: 57, baseType: !243, size: 32)
!243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 32)
!244 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !240, line: 57, flags: DIFlagFwdDecl)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !239, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !239, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !236, file: !137, line: 5075, baseType: !140, size: 64, offset: 96)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !236, file: !137, line: 5076, baseType: !249, offset: 160)
!249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!250 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!251 = !{}
!252 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !162, file: !163, line: 343, baseType: !253, size: 64, offset: 928)
!253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !254)
!254 = !{!255, !256}
!255 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !253, file: !214, line: 63, baseType: !108, size: 32)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !253, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !136, file: !137, line: 2727, baseType: !108, size: 32, offset: 96)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !136, file: !137, line: 2730, baseType: !103, size: 32, offset: 128)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "observers", scope: !116, file: !117, line: 67, baseType: !260, size: 32, offset: 160)
!260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !261, size: 32)
!261 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !262)
!262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !263, size: 32)
!263 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !264)
!264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer", file: !117, line: 85, size: 96, elements: !265)
!265 = !{!266, !267, !284}
!266 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !264, file: !117, line: 91, baseType: !131, size: 8)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !264, file: !117, line: 93, baseType: !268, size: 32, offset: 32)
!268 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !269)
!269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 32)
!270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !137, line: 4204, size: 320, elements: !271)
!271 = !{!272, !273, !274, !275, !276, !279, !280, !281, !282, !283}
!272 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !270, file: !137, line: 4206, baseType: !140, size: 64)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !270, file: !137, line: 4208, baseType: !249, offset: 64)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !270, file: !137, line: 4210, baseType: !132, size: 32, offset: 64)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !270, file: !137, line: 4212, baseType: !108, size: 32, offset: 96)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !270, file: !137, line: 4214, baseType: !277, size: 32, offset: 128)
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 32)
!278 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !270, file: !137, line: 4216, baseType: !277, size: 32, offset: 160)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !270, file: !137, line: 4218, baseType: !277, size: 32, offset: 192)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !270, file: !137, line: 4220, baseType: !277, size: 32, offset: 224)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !270, file: !137, line: 4222, baseType: !108, size: 32, offset: 256)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !270, file: !137, line: 4227, baseType: !185, size: 8, offset: 288)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !264, file: !117, line: 96, baseType: !285, size: 32, offset: 64)
!285 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !286)
!286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !287, size: 32)
!287 = !DISubroutineType(types: !288)
!288 = !{null, !289}
!289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 32)
!290 = !DIGlobalVariableExpression(var: !291, expr: !DIExpression())
!291 = distinct !DIGlobalVariable(name: "s1", scope: !27, file: !114, line: 126, type: !264, isLocal: false, isDefinition: true, align: 32)
!292 = !DIGlobalVariableExpression(var: !293, expr: !DIExpression())
!293 = distinct !DIGlobalVariable(name: "s2", scope: !27, file: !114, line: 129, type: !264, isLocal: false, isDefinition: true, align: 32)
!294 = !DIGlobalVariableExpression(var: !295, expr: !DIExpression())
!295 = distinct !DIGlobalVariable(name: "s3", scope: !27, file: !114, line: 131, type: !264, isLocal: false, isDefinition: true, align: 32)
!296 = !DIGlobalVariableExpression(var: !297, expr: !DIExpression())
!297 = distinct !DIGlobalVariable(name: "s4", scope: !27, file: !114, line: 132, type: !264, isLocal: false, isDefinition: true, align: 32)
!298 = !DIGlobalVariableExpression(var: !299, expr: !DIExpression())
!299 = distinct !DIGlobalVariable(name: "s5", scope: !27, file: !114, line: 134, type: !264, isLocal: false, isDefinition: true, align: 32)
!300 = !DIGlobalVariableExpression(var: !301, expr: !DIExpression())
!301 = distinct !DIGlobalVariable(name: "s6", scope: !27, file: !114, line: 135, type: !264, isLocal: false, isDefinition: true, align: 32)
!302 = !DIGlobalVariableExpression(var: !303, expr: !DIExpression())
!303 = distinct !DIGlobalVariable(name: "s7", scope: !27, file: !114, line: 136, type: !264, isLocal: false, isDefinition: true, align: 32)
!304 = !DIGlobalVariableExpression(var: !305, expr: !DIExpression())
!305 = distinct !DIGlobalVariable(name: "s8", scope: !27, file: !114, line: 137, type: !264, isLocal: false, isDefinition: true, align: 32)
!306 = !DIGlobalVariableExpression(var: !307, expr: !DIExpression())
!307 = distinct !DIGlobalVariable(name: "_k_thread_data_producer_thread_id", scope: !27, file: !114, line: 216, type: !308, isLocal: false, isDefinition: true, align: 32)
!308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !137, line: 620, size: 384, elements: !309)
!309 = !{!310, !311, !319, !320, !325, !326, !327, !328, !329, !330, !332, !336}
!310 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !308, file: !137, line: 621, baseType: !161, size: 32)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !308, file: !137, line: 622, baseType: !312, size: 32, offset: 32)
!312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !313, size: 32)
!313 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !314, line: 44, baseType: !315)
!314 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !316, line: 47, size: 8, elements: !317)
!316 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!317 = !{!318}
!318 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !315, file: !316, line: 48, baseType: !278, size: 8)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !308, file: !137, line: 623, baseType: !32, size: 32, offset: 64)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !308, file: !137, line: 624, baseType: !321, size: 32, offset: 96)
!321 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !314, line: 46, baseType: !322)
!322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !323, size: 32)
!323 = !DISubroutineType(types: !324)
!324 = !{null, !102, !102, !102}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !308, file: !137, line: 625, baseType: !102, size: 32, offset: 128)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !308, file: !137, line: 626, baseType: !102, size: 32, offset: 160)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !308, file: !137, line: 627, baseType: !102, size: 32, offset: 192)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !308, file: !137, line: 628, baseType: !103, size: 32, offset: 224)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !308, file: !137, line: 629, baseType: !108, size: 32, offset: 256)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !308, file: !137, line: 630, baseType: !331, size: 32, offset: 288)
!331 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !308, file: !137, line: 631, baseType: !333, size: 32, offset: 320)
!333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !334, size: 32)
!334 = !DISubroutineType(types: !335)
!335 = !{null}
!336 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !308, file: !137, line: 632, baseType: !337, size: 32, offset: 352)
!337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !338, size: 32)
!338 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !278)
!339 = !DIGlobalVariableExpression(var: !340, expr: !DIExpression())
!340 = distinct !DIGlobalVariable(name: "producer_thread_id", scope: !27, file: !114, line: 216, type: !341, isLocal: false, isDefinition: true)
!341 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !342)
!342 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !163, line: 347, baseType: !161)
!343 = !DIGlobalVariableExpression(var: !344, expr: !DIExpression())
!344 = distinct !DIGlobalVariable(name: "_k_thread_stack_producer_thread_id", scope: !27, file: !114, line: 216, type: !345, isLocal: false, isDefinition: true, align: 512)
!345 = !DICompositeType(tag: DW_TAG_array_type, baseType: !315, size: 8704, elements: !346)
!346 = !{!347}
!347 = !DISubrange(count: 1088)
!348 = !DIGlobalVariableExpression(var: !349, expr: !DIExpression())
!349 = distinct !DIGlobalVariable(name: "_k_thread_obj_producer_thread_id", scope: !27, file: !114, line: 216, type: !162, isLocal: false, isDefinition: true)
!350 = !DIGlobalVariableExpression(var: !351, expr: !DIExpression())
!351 = distinct !DIGlobalVariable(name: "_zbus_message_bm_channel", scope: !27, file: !114, line: 16, type: !352, isLocal: true, isDefinition: true)
!352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "external_data_msg", file: !353, line: 10, size: 64, elements: !354)
!353 = !DIFile(filename: "zephyr/samples/subsys/zbus/benchmark/src/messages.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!354 = !{!355, !356}
!355 = !DIDerivedType(tag: DW_TAG_member, name: "reference", scope: !352, file: !353, line: 11, baseType: !102, size: 32)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !352, file: !353, line: 12, baseType: !132, size: 32, offset: 32)
!357 = !DIGlobalVariableExpression(var: !358, expr: !DIExpression())
!358 = distinct !DIGlobalVariable(name: "_zbus_observers_bm_channel", scope: !27, file: !114, line: 16, type: !359, isLocal: true, isDefinition: true)
!359 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 288, elements: !360)
!360 = !{!361}
!361 = !DISubrange(count: 9)
!362 = !DIGlobalVariableExpression(var: !363, expr: !DIExpression())
!363 = distinct !DIGlobalVariable(name: "count", scope: !27, file: !114, line: 44, type: !109, isLocal: true, isDefinition: true)
!364 = !DIGlobalVariableExpression(var: !365, expr: !DIExpression())
!365 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !366, file: !381, line: 18, type: !382, isLocal: false, isDefinition: true)
!366 = distinct !DICompileUnit(language: DW_LANG_C99, file: !367, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !368, globals: !380, splitDebugInlining: false, nameTableKind: None)
!367 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!368 = !{!22, !102, !24, !369, !371, !373, !132, !103, !374, !375, !377, !378, !277, !379, !121, !337}
!369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !370, size: 32)
!370 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !372, size: 32)
!372 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !337, size: 32)
!374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !376, size: 32)
!376 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 32)
!379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 32)
!380 = !{!364}
!381 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!382 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !383)
!383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !384, line: 16, size: 64, elements: !385)
!384 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!385 = !{!386, !387}
!386 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !383, file: !384, line: 17, baseType: !337, size: 32)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !383, file: !384, line: 18, baseType: !185, size: 8, offset: 32)
!388 = !DIGlobalVariableExpression(var: !389, expr: !DIExpression())
!389 = distinct !DIGlobalVariable(name: "_char_out", scope: !390, file: !394, line: 54, type: !395, isLocal: false, isDefinition: true)
!390 = distinct !DICompileUnit(language: DW_LANG_C99, file: !391, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !392, globals: !393, splitDebugInlining: false, nameTableKind: None)
!391 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!392 = !{!102, !103}
!393 = !{!388}
!394 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !396, size: 32)
!396 = !DISubroutineType(types: !397)
!397 = !{!103, !103}
!398 = !DIGlobalVariableExpression(var: !399, expr: !DIExpression())
!399 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !400, file: !417, line: 56, type: !418, isLocal: true, isDefinition: true, align: 32)
!400 = distinct !DICompileUnit(language: DW_LANG_C99, file: !401, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !402, globals: !416, splitDebugInlining: false, nameTableKind: None)
!401 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!402 = !{!403}
!403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !404, size: 32)
!404 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !405, line: 369, baseType: !406)
!405 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f405xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!406 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 360, size: 224, elements: !407)
!407 = !{!408, !410, !411, !412, !413, !414, !415}
!408 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !406, file: !405, line: 362, baseType: !409, size: 32)
!409 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !108)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !406, file: !405, line: 363, baseType: !409, size: 32, offset: 32)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !406, file: !405, line: 364, baseType: !409, size: 32, offset: 64)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !406, file: !405, line: 365, baseType: !409, size: 32, offset: 96)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !406, file: !405, line: 366, baseType: !409, size: 32, offset: 128)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !406, file: !405, line: 367, baseType: !409, size: 32, offset: 160)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !406, file: !405, line: 368, baseType: !409, size: 32, offset: 192)
!416 = !{!398}
!417 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!418 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !419)
!419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !420, line: 51, size: 64, elements: !421)
!420 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!421 = !{!422, !447}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !419, file: !420, line: 60, baseType: !423, size: 32)
!423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !424, size: 32)
!424 = !DISubroutineType(types: !425)
!425 = !{!103, !426}
!426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !427, size: 32)
!427 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !428)
!428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !429, line: 378, size: 192, elements: !430)
!429 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!430 = !{!431, !432, !433, !434, !440, !441}
!431 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !428, file: !429, line: 380, baseType: !337, size: 32)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !428, file: !429, line: 382, baseType: !13, size: 32, offset: 32)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !428, file: !429, line: 384, baseType: !13, size: 32, offset: 64)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !428, file: !429, line: 386, baseType: !435, size: 32, offset: 96)
!435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !436, size: 32)
!436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !429, line: 351, size: 16, elements: !437)
!437 = !{!438, !439}
!438 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !436, file: !429, line: 359, baseType: !185, size: 8)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !436, file: !429, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !428, file: !429, line: 388, baseType: !102, size: 32, offset: 128)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !428, file: !429, line: 396, baseType: !442, size: 32, offset: 160)
!442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !443, size: 32)
!443 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !444)
!444 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !429, line: 43, baseType: !445)
!445 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !446)
!446 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !419, file: !420, line: 65, baseType: !426, size: 32, offset: 32)
!448 = !DIGlobalVariableExpression(var: !449, expr: !DIExpression())
!449 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !450, file: !453, line: 71, type: !454, isLocal: true, isDefinition: true, align: 32)
!450 = distinct !DICompileUnit(language: DW_LANG_C99, file: !451, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !452, splitDebugInlining: false, nameTableKind: None)
!451 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!452 = !{!448}
!453 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!454 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !455)
!455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !420, line: 51, size: 64, elements: !456)
!456 = !{!457, !476}
!457 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !455, file: !420, line: 60, baseType: !458, size: 32)
!458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !459, size: 32)
!459 = !DISubroutineType(types: !460)
!460 = !{!103, !461}
!461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !462, size: 32)
!462 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !463)
!463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !429, line: 378, size: 192, elements: !464)
!464 = !{!465, !466, !467, !468, !474, !475}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !463, file: !429, line: 380, baseType: !337, size: 32)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !463, file: !429, line: 382, baseType: !13, size: 32, offset: 32)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !463, file: !429, line: 384, baseType: !13, size: 32, offset: 64)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !463, file: !429, line: 386, baseType: !469, size: 32, offset: 96)
!469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !470, size: 32)
!470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !429, line: 351, size: 16, elements: !471)
!471 = !{!472, !473}
!472 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !470, file: !429, line: 359, baseType: !185, size: 8)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !470, file: !429, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !463, file: !429, line: 388, baseType: !102, size: 32, offset: 128)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !463, file: !429, line: 396, baseType: !442, size: 32, offset: 160)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !455, file: !420, line: 65, baseType: !461, size: 32, offset: 32)
!477 = !DIGlobalVariableExpression(var: !478, expr: !DIExpression())
!478 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !479, file: !486, line: 17, type: !612, isLocal: false, isDefinition: true)
!479 = distinct !DICompileUnit(language: DW_LANG_C99, file: !480, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !481, globals: !482, splitDebugInlining: false, nameTableKind: None)
!480 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!481 = !{!132, !103, !108, !102}
!482 = !{!477, !483, !608}
!483 = !DIGlobalVariableExpression(var: !484, expr: !DIExpression())
!484 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !485, file: !486, line: 198, type: !594, isLocal: true, isDefinition: true)
!485 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !486, file: !486, line: 175, type: !487, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !479, retainedNodes: !589)
!486 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!487 = !DISubroutineType(types: !488)
!488 = !{null, !489}
!489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !490, size: 32)
!490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !491)
!491 = !{!492, !550, !562, !563, !564, !565, !571, !584}
!492 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !490, file: !163, line: 247, baseType: !493, size: 384)
!493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !494)
!494 = !{!495, !519, !526, !527, !528, !537, !538, !539}
!495 = !DIDerivedType(tag: DW_TAG_member, scope: !493, file: !163, line: 60, baseType: !496, size: 64)
!496 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !493, file: !163, line: 60, size: 64, elements: !497)
!497 = !{!498, !513}
!498 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !496, file: !163, line: 61, baseType: !499, size: 64)
!499 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !500)
!500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !501)
!501 = !{!502, !508}
!502 = !DIDerivedType(tag: DW_TAG_member, scope: !500, file: !146, line: 38, baseType: !503, size: 32)
!503 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !500, file: !146, line: 38, size: 32, elements: !504)
!504 = !{!505, !507}
!505 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !503, file: !146, line: 39, baseType: !506, size: 32)
!506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !500, size: 32)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !503, file: !146, line: 40, baseType: !506, size: 32)
!508 = !DIDerivedType(tag: DW_TAG_member, scope: !500, file: !146, line: 42, baseType: !509, size: 32, offset: 32)
!509 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !500, file: !146, line: 42, size: 32, elements: !510)
!510 = !{!511, !512}
!511 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !509, file: !146, line: 43, baseType: !506, size: 32)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !509, file: !146, line: 44, baseType: !506, size: 32)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !496, file: !163, line: 62, baseType: !514, size: 64)
!514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !515)
!515 = !{!516}
!516 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !514, file: !175, line: 50, baseType: !517, size: 64)
!517 = !DICompositeType(tag: DW_TAG_array_type, baseType: !518, size: 64, elements: !180)
!518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !514, size: 32)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !493, file: !163, line: 68, baseType: !520, size: 32, offset: 64)
!520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !521, size: 32)
!521 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !522)
!522 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !523)
!523 = !{!524}
!524 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !522, file: !141, line: 232, baseType: !525, size: 64)
!525 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !500)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !493, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !493, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!528 = !DIDerivedType(tag: DW_TAG_member, scope: !493, file: !163, line: 90, baseType: !529, size: 16, offset: 112)
!529 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !493, file: !163, line: 90, size: 16, elements: !530)
!530 = !{!531, !536}
!531 = !DIDerivedType(tag: DW_TAG_member, scope: !529, file: !163, line: 91, baseType: !532, size: 16)
!532 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !529, file: !163, line: 91, size: 16, elements: !533)
!533 = !{!534, !535}
!534 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !532, file: !163, line: 96, baseType: !195, size: 8)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !532, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !529, file: !163, line: 100, baseType: !121, size: 16)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !493, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !493, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !493, file: !163, line: 131, baseType: !540, size: 192, offset: 192)
!540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !541)
!541 = !{!542, !543, !549}
!542 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !540, file: !141, line: 245, baseType: !499, size: 64)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !540, file: !141, line: 246, baseType: !544, size: 32, offset: 64)
!544 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !545)
!545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !546, size: 32)
!546 = !DISubroutineType(types: !547)
!547 = !{null, !548}
!548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !540, size: 32)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !540, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !490, file: !163, line: 250, baseType: !551, size: 288, offset: 384)
!551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !552)
!552 = !{!553, !554, !555, !556, !557, !558, !559, !560, !561}
!553 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !551, file: !214, line: 26, baseType: !108, size: 32)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !551, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !551, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !551, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !551, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !551, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !551, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !551, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !551, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !490, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !490, file: !163, line: 256, baseType: !521, size: 64, offset: 704)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !490, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !490, file: !163, line: 300, baseType: !566, size: 96, offset: 800)
!566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !567)
!567 = !{!568, !569, !570}
!568 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !566, file: !163, line: 153, baseType: !22, size: 32)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !566, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !566, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !490, file: !163, line: 325, baseType: !572, size: 32, offset: 896)
!572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !573, size: 32)
!573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !574)
!574 = !{!575, !581, !582}
!575 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !573, file: !137, line: 5074, baseType: !576, size: 96)
!576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !577)
!577 = !{!578, !579, !580}
!578 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !576, file: !240, line: 57, baseType: !243, size: 32)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !576, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !576, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !573, file: !137, line: 5075, baseType: !521, size: 64, offset: 96)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !573, file: !137, line: 5076, baseType: !583, offset: 160)
!583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !490, file: !163, line: 343, baseType: !585, size: 64, offset: 928)
!585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !586)
!586 = !{!587, !588}
!587 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !585, file: !214, line: 63, baseType: !108, size: 32)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !585, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!589 = !{!590, !591, !592, !593}
!590 = !DILocalVariable(name: "thread", arg: 1, scope: !485, file: !486, line: 175, type: !489)
!591 = !DILocalVariable(name: "region_num", scope: !485, file: !486, line: 200, type: !185)
!592 = !DILocalVariable(name: "guard_start", scope: !485, file: !486, line: 265, type: !22)
!593 = !DILocalVariable(name: "guard_size", scope: !485, file: !486, line: 266, type: !132)
!594 = !DICompositeType(tag: DW_TAG_array_type, baseType: !595, size: 96, elements: !606)
!595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !596, line: 52, size: 96, elements: !597)
!596 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!597 = !{!598, !599, !600}
!598 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !595, file: !596, line: 53, baseType: !22, size: 32)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !595, file: !596, line: 54, baseType: !132, size: 32, offset: 32)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !595, file: !596, line: 55, baseType: !601, size: 32, offset: 64)
!601 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !602, line: 151, baseType: !603)
!602 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!603 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !602, line: 149, size: 32, elements: !604)
!604 = !{!605}
!605 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !603, file: !602, line: 150, baseType: !108, size: 32)
!606 = !{!607}
!607 = !DISubrange(count: 1)
!608 = !DIGlobalVariableExpression(var: !609, expr: !DIExpression())
!609 = distinct !DIGlobalVariable(name: "static_regions", scope: !479, file: !486, line: 62, type: !610, isLocal: true, isDefinition: true)
!610 = !DICompositeType(tag: DW_TAG_array_type, baseType: !611, size: 96, elements: !606)
!611 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !595)
!612 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !613)
!613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !384, line: 16, size: 64, elements: !614)
!614 = !{!615, !616}
!615 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !613, file: !384, line: 17, baseType: !337, size: 32)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !613, file: !384, line: 18, baseType: !185, size: 8, offset: 32)
!617 = !DIGlobalVariableExpression(var: !618, expr: !DIExpression())
!618 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !619, file: !652, line: 39, type: !185, isLocal: true, isDefinition: true)
!619 = distinct !DICompileUnit(language: DW_LANG_C99, file: !620, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !621, globals: !651, splitDebugInlining: false, nameTableKind: None)
!620 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!621 = !{!622, !102, !103, !639, !185}
!622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !623, size: 32)
!623 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !624, line: 1226, baseType: !625)
!624 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!625 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 1213, size: 352, elements: !626)
!626 = !{!627, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638}
!627 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !625, file: !624, line: 1215, baseType: !628, size: 32)
!628 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !409)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !625, file: !624, line: 1216, baseType: !409, size: 32, offset: 32)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !625, file: !624, line: 1217, baseType: !409, size: 32, offset: 64)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !625, file: !624, line: 1218, baseType: !409, size: 32, offset: 96)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !625, file: !624, line: 1219, baseType: !409, size: 32, offset: 128)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !625, file: !624, line: 1220, baseType: !409, size: 32, offset: 160)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !625, file: !624, line: 1221, baseType: !409, size: 32, offset: 192)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !625, file: !624, line: 1222, baseType: !409, size: 32, offset: 224)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !625, file: !624, line: 1223, baseType: !409, size: 32, offset: 256)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !625, file: !624, line: 1224, baseType: !409, size: 32, offset: 288)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !625, file: !624, line: 1225, baseType: !409, size: 32, offset: 320)
!639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !640, size: 32)
!640 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !641)
!641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !642, line: 27, size: 96, elements: !643)
!642 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!643 = !{!644, !645, !646}
!644 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !641, file: !642, line: 29, baseType: !108, size: 32)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !641, file: !642, line: 31, baseType: !337, size: 32, offset: 32)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !641, file: !642, line: 37, baseType: !647, size: 32, offset: 64)
!647 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !602, line: 146, baseType: !648)
!648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !602, line: 141, size: 32, elements: !649)
!649 = !{!650}
!650 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !648, file: !602, line: 143, baseType: !108, size: 32)
!651 = !{!617}
!652 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!653 = !DIGlobalVariableExpression(var: !654, expr: !DIExpression())
!654 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !655, file: !662, line: 21, type: !395, isLocal: true, isDefinition: true)
!655 = distinct !DICompileUnit(language: DW_LANG_C99, file: !656, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !657, globals: !661, splitDebugInlining: false, nameTableKind: None)
!656 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!657 = !{!658, !103, !102}
!658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !659, size: 32)
!659 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !660, line: 22, baseType: !103)
!660 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!661 = !{!653}
!662 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!663 = !DIGlobalVariableExpression(var: !664, expr: !DIExpression())
!664 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !665, file: !670, line: 13, type: !687, isLocal: true, isDefinition: true)
!665 = distinct !DICompileUnit(language: DW_LANG_C99, file: !666, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !667, splitDebugInlining: false, nameTableKind: None)
!666 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!667 = !{!668, !663}
!668 = !DIGlobalVariableExpression(var: !669, expr: !DIExpression())
!669 = distinct !DIGlobalVariable(name: "mpu_config", scope: !665, file: !670, line: 37, type: !671, isLocal: false, isDefinition: true)
!670 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!671 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !672)
!672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !642, line: 41, size: 64, elements: !673)
!673 = !{!674, !675}
!674 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !672, file: !642, line: 43, baseType: !108, size: 32)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !672, file: !642, line: 45, baseType: !676, size: 32, offset: 32)
!676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !677, size: 32)
!677 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !678)
!678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !642, line: 27, size: 96, elements: !679)
!679 = !{!680, !681, !682}
!680 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !678, file: !642, line: 29, baseType: !108, size: 32)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !678, file: !642, line: 31, baseType: !337, size: 32, offset: 32)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !678, file: !642, line: 37, baseType: !683, size: 32, offset: 64)
!683 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !602, line: 146, baseType: !684)
!684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !602, line: 141, size: 32, elements: !685)
!685 = !{!686}
!686 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !684, file: !602, line: 143, baseType: !108, size: 32)
!687 = !DICompositeType(tag: DW_TAG_array_type, baseType: !677, size: 192, elements: !180)
!688 = !DIGlobalVariableExpression(var: !689, expr: !DIExpression())
!689 = distinct !DIGlobalVariable(name: "log_const_zbus", scope: !690, file: !694, line: 10, type: !695, isLocal: false, isDefinition: true)
!690 = distinct !DICompileUnit(language: DW_LANG_C99, file: !691, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !692, globals: !693, splitDebugInlining: false, nameTableKind: None)
!691 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/zbus/zbus.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!692 = !{!104, !102, !103}
!693 = !{!688}
!694 = !DIFile(filename: "zephyr/subsys/zbus/zbus.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!695 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !696)
!696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !384, line: 16, size: 64, elements: !697)
!697 = !{!698, !699}
!698 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !696, file: !384, line: 17, baseType: !337, size: 32)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !696, file: !384, line: 18, baseType: !185, size: 8, offset: 32)
!700 = !DIGlobalVariableExpression(var: !701, expr: !DIExpression())
!701 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !702, file: !807, line: 72, type: !890, isLocal: true, isDefinition: true)
!702 = distinct !DICompileUnit(language: DW_LANG_C99, file: !703, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !704, retainedTypes: !793, globals: !804, splitDebugInlining: false, nameTableKind: None)
!703 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!704 = !{!30, !705}
!705 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !405, line: 65, baseType: !103, size: 32, elements: !706)
!706 = !{!707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792}
!707 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!708 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!709 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!710 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!711 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!712 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!713 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!714 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!715 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!716 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!717 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!718 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!719 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!720 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!721 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!722 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!723 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!724 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!725 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!726 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!727 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!728 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!729 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!730 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!731 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!732 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!733 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!734 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!735 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!736 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!737 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!738 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!739 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!740 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!741 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!742 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!743 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!744 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!745 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!746 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!747 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!748 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!749 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!750 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!751 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!752 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!753 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!754 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!755 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!756 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!757 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!758 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!759 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!760 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!761 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!762 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!763 = !DIEnumerator(name: "FSMC_IRQn", value: 48)
!764 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!765 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!766 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!767 = !DIEnumerator(name: "UART4_IRQn", value: 52)
!768 = !DIEnumerator(name: "UART5_IRQn", value: 53)
!769 = !DIEnumerator(name: "TIM6_DAC_IRQn", value: 54)
!770 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!771 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!772 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!773 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!774 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!775 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!776 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!777 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!778 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!779 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!780 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!781 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!782 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!783 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!784 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!785 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!786 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!787 = !DIEnumerator(name: "OTG_HS_EP1_OUT_IRQn", value: 74)
!788 = !DIEnumerator(name: "OTG_HS_EP1_IN_IRQn", value: 75)
!789 = !DIEnumerator(name: "OTG_HS_WKUP_IRQn", value: 76)
!790 = !DIEnumerator(name: "OTG_HS_IRQn", value: 77)
!791 = !DIEnumerator(name: "RNG_IRQn", value: 80)
!792 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!793 = !{!132, !103, !102, !794}
!794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !795, size: 32)
!795 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !405, line: 354, baseType: !796)
!796 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 346, size: 192, elements: !797)
!797 = !{!798, !799, !800, !801, !802, !803}
!798 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !796, file: !405, line: 348, baseType: !409, size: 32)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !796, file: !405, line: 349, baseType: !409, size: 32, offset: 32)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !796, file: !405, line: 350, baseType: !409, size: 32, offset: 64)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !796, file: !405, line: 351, baseType: !409, size: 32, offset: 96)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !796, file: !405, line: 352, baseType: !409, size: 32, offset: 128)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !796, file: !405, line: 353, baseType: !409, size: 32, offset: 160)
!804 = !{!805, !811, !827, !838, !855, !700, !857, !870, !872, !874, !876, !878, !880, !882, !884, !886, !888}
!805 = !DIGlobalVariableExpression(var: !806, expr: !DIExpression())
!806 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_37", scope: !702, file: !807, line: 424, type: !808, isLocal: false, isDefinition: true, align: 16)
!807 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!808 = !DICompositeType(tag: DW_TAG_array_type, baseType: !443, size: 64, elements: !809)
!809 = !{!810}
!810 = !DISubrange(count: 4)
!811 = !DIGlobalVariableExpression(var: !812, expr: !DIExpression())
!812 = distinct !DIGlobalVariable(name: "__device_dts_ord_37", scope: !702, file: !807, line: 424, type: !813, isLocal: false, isDefinition: true, align: 32)
!813 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !814)
!814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !429, line: 378, size: 192, elements: !815)
!815 = !{!816, !817, !818, !819, !825, !826}
!816 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !814, file: !429, line: 380, baseType: !337, size: 32)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !814, file: !429, line: 382, baseType: !13, size: 32, offset: 32)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !814, file: !429, line: 384, baseType: !13, size: 32, offset: 64)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !814, file: !429, line: 386, baseType: !820, size: 32, offset: 96)
!820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !821, size: 32)
!821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !429, line: 351, size: 16, elements: !822)
!822 = !{!823, !824}
!823 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !821, file: !429, line: 359, baseType: !185, size: 8)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !821, file: !429, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !814, file: !429, line: 388, baseType: !102, size: 32, offset: 128)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !814, file: !429, line: 396, baseType: !442, size: 32, offset: 160)
!827 = !DIGlobalVariableExpression(var: !828, expr: !DIExpression())
!828 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_37", scope: !702, file: !807, line: 424, type: !829, isLocal: true, isDefinition: true, align: 32)
!829 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !830)
!830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !420, line: 51, size: 64, elements: !831)
!831 = !{!832, !837}
!832 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !830, file: !420, line: 60, baseType: !833, size: 32)
!833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !834, size: 32)
!834 = !DISubroutineType(types: !835)
!835 = !{!103, !836}
!836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !813, size: 32)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !830, file: !420, line: 65, baseType: !836, size: 32, offset: 32)
!838 = !DIGlobalVariableExpression(var: !839, expr: !DIExpression())
!839 = distinct !DIGlobalVariable(name: "exti_data", scope: !702, file: !807, line: 423, type: !840, isLocal: true, isDefinition: true)
!840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !807, line: 107, size: 1472, elements: !841)
!841 = !{!842}
!842 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !840, file: !807, line: 109, baseType: !843, size: 1472)
!843 = !DICompositeType(tag: DW_TAG_array_type, baseType: !844, size: 1472, elements: !853)
!844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !807, line: 101, size: 64, elements: !845)
!845 = !{!846, !852}
!846 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !844, file: !807, line: 102, baseType: !847, size: 32)
!847 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !848, line: 63, baseType: !849)
!848 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !850, size: 32)
!850 = !DISubroutineType(types: !851)
!851 = !{null, !103, !102}
!852 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !844, file: !807, line: 103, baseType: !102, size: 32, offset: 32)
!853 = !{!854}
!854 = !DISubrange(count: 23)
!855 = !DIGlobalVariableExpression(var: !856, expr: !DIExpression())
!856 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_37", scope: !702, file: !807, line: 424, type: !821, isLocal: true, isDefinition: true, align: 8)
!857 = !DIGlobalVariableExpression(var: !858, expr: !DIExpression())
!858 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !859, file: !807, line: 493, type: !864, isLocal: true, isDefinition: true, align: 32)
!859 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !807, file: !807, line: 460, type: !860, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !862)
!860 = !DISubroutineType(types: !861)
!861 = !{null, !836}
!862 = !{!863}
!863 = !DILocalVariable(name: "dev", arg: 1, scope: !859, file: !807, line: 460, type: !836)
!864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !865)
!865 = !{!866, !867, !868, !869}
!866 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !864, file: !10, line: 55, baseType: !331, size: 32)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !864, file: !10, line: 57, baseType: !331, size: 32, offset: 32)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !864, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !864, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!870 = !DIGlobalVariableExpression(var: !871, expr: !DIExpression())
!871 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !859, file: !807, line: 497, type: !864, isLocal: true, isDefinition: true, align: 32)
!872 = !DIGlobalVariableExpression(var: !873, expr: !DIExpression())
!873 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !859, file: !807, line: 507, type: !864, isLocal: true, isDefinition: true, align: 32)
!874 = !DIGlobalVariableExpression(var: !875, expr: !DIExpression())
!875 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !859, file: !807, line: 512, type: !864, isLocal: true, isDefinition: true, align: 32)
!876 = !DIGlobalVariableExpression(var: !877, expr: !DIExpression())
!877 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !859, file: !807, line: 516, type: !864, isLocal: true, isDefinition: true, align: 32)
!878 = !DIGlobalVariableExpression(var: !879, expr: !DIExpression())
!879 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !859, file: !807, line: 523, type: !864, isLocal: true, isDefinition: true, align: 32)
!880 = !DIGlobalVariableExpression(var: !881, expr: !DIExpression())
!881 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !859, file: !807, line: 527, type: !864, isLocal: true, isDefinition: true, align: 32)
!882 = !DIGlobalVariableExpression(var: !883, expr: !DIExpression())
!883 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !859, file: !807, line: 581, type: !864, isLocal: true, isDefinition: true, align: 32)
!884 = !DIGlobalVariableExpression(var: !885, expr: !DIExpression())
!885 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !859, file: !807, line: 586, type: !864, isLocal: true, isDefinition: true, align: 32)
!886 = !DIGlobalVariableExpression(var: !887, expr: !DIExpression())
!887 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !859, file: !807, line: 591, type: !864, isLocal: true, isDefinition: true, align: 32)
!888 = !DIGlobalVariableExpression(var: !889, expr: !DIExpression())
!889 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !859, file: !807, line: 595, type: !864, isLocal: true, isDefinition: true, align: 32)
!890 = !DICompositeType(tag: DW_TAG_array_type, baseType: !891, size: 736, elements: !853)
!891 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !892)
!892 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !405, line: 155, baseType: !705)
!893 = !DIGlobalVariableExpression(var: !894, expr: !DIExpression())
!894 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_37", scope: !895, file: !900, line: 23, type: !924, isLocal: false, isDefinition: true, align: 16)
!895 = distinct !DICompileUnit(language: DW_LANG_C99, file: !896, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !897, splitDebugInlining: false, nameTableKind: None)
!896 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!897 = !{!898, !893, !904, !906, !908, !910, !912, !914, !916, !918, !920, !922}
!898 = !DIGlobalVariableExpression(var: !899, expr: !DIExpression())
!899 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !895, file: !900, line: 18, type: !901, isLocal: false, isDefinition: true, align: 16)
!900 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!901 = !DICompositeType(tag: DW_TAG_array_type, baseType: !443, size: 208, elements: !902)
!902 = !{!903}
!903 = !DISubrange(count: 13)
!904 = !DIGlobalVariableExpression(var: !905, expr: !DIExpression())
!905 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !895, file: !900, line: 30, type: !808, isLocal: false, isDefinition: true, align: 16)
!906 = !DIGlobalVariableExpression(var: !907, expr: !DIExpression())
!907 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !895, file: !900, line: 37, type: !808, isLocal: false, isDefinition: true, align: 16)
!908 = !DIGlobalVariableExpression(var: !909, expr: !DIExpression())
!909 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !895, file: !900, line: 44, type: !808, isLocal: false, isDefinition: true, align: 16)
!910 = !DIGlobalVariableExpression(var: !911, expr: !DIExpression())
!911 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !895, file: !900, line: 51, type: !808, isLocal: false, isDefinition: true, align: 16)
!912 = !DIGlobalVariableExpression(var: !913, expr: !DIExpression())
!913 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !895, file: !900, line: 58, type: !808, isLocal: false, isDefinition: true, align: 16)
!914 = !DIGlobalVariableExpression(var: !915, expr: !DIExpression())
!915 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !895, file: !900, line: 65, type: !808, isLocal: false, isDefinition: true, align: 16)
!916 = !DIGlobalVariableExpression(var: !917, expr: !DIExpression())
!917 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_21", scope: !895, file: !900, line: 72, type: !808, isLocal: false, isDefinition: true, align: 16)
!918 = !DIGlobalVariableExpression(var: !919, expr: !DIExpression())
!919 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !895, file: !900, line: 79, type: !808, isLocal: false, isDefinition: true, align: 16)
!920 = !DIGlobalVariableExpression(var: !921, expr: !DIExpression())
!921 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_74", scope: !895, file: !900, line: 86, type: !808, isLocal: false, isDefinition: true, align: 16)
!922 = !DIGlobalVariableExpression(var: !923, expr: !DIExpression())
!923 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !895, file: !900, line: 93, type: !808, isLocal: false, isDefinition: true, align: 16)
!924 = !DICompositeType(tag: DW_TAG_array_type, baseType: !443, size: 48, elements: !925)
!925 = !{!926}
!926 = !DISubrange(count: 3)
!927 = !DIGlobalVariableExpression(var: !928, expr: !DIExpression())
!928 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !929, file: !990, line: 398, type: !1023, isLocal: true, isDefinition: true)
!929 = distinct !DICompileUnit(language: DW_LANG_C99, file: !930, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !931, retainedTypes: !944, globals: !987, splitDebugInlining: false, nameTableKind: None)
!930 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!931 = !{!932, !30, !937}
!932 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !933, line: 197, baseType: !32, size: 32, elements: !934)
!933 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!934 = !{!935, !936}
!935 = !DIEnumerator(name: "SUCCESS", value: 0)
!936 = !DIEnumerator(name: "ERROR", value: 1)
!937 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !938, line: 44, baseType: !32, size: 32, elements: !939)
!938 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!939 = !{!940, !941, !942, !943}
!940 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!941 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!942 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!943 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!944 = !{!102, !103, !108, !945, !980, !986}
!945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !946, size: 32)
!946 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !405, line: 532, baseType: !947)
!947 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 500, size: 1088, elements: !948)
!948 = !{!949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979}
!949 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !947, file: !405, line: 502, baseType: !409, size: 32)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !947, file: !405, line: 503, baseType: !409, size: 32, offset: 32)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !947, file: !405, line: 504, baseType: !409, size: 32, offset: 64)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !947, file: !405, line: 505, baseType: !409, size: 32, offset: 96)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !947, file: !405, line: 506, baseType: !409, size: 32, offset: 128)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !947, file: !405, line: 507, baseType: !409, size: 32, offset: 160)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !947, file: !405, line: 508, baseType: !409, size: 32, offset: 192)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !947, file: !405, line: 509, baseType: !108, size: 32, offset: 224)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !947, file: !405, line: 510, baseType: !409, size: 32, offset: 256)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !947, file: !405, line: 511, baseType: !409, size: 32, offset: 288)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !947, file: !405, line: 512, baseType: !960, size: 64, offset: 320)
!960 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 64, elements: !180)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !947, file: !405, line: 513, baseType: !409, size: 32, offset: 384)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !947, file: !405, line: 514, baseType: !409, size: 32, offset: 416)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !947, file: !405, line: 515, baseType: !409, size: 32, offset: 448)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !947, file: !405, line: 516, baseType: !108, size: 32, offset: 480)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !947, file: !405, line: 517, baseType: !409, size: 32, offset: 512)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !947, file: !405, line: 518, baseType: !409, size: 32, offset: 544)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !947, file: !405, line: 519, baseType: !960, size: 64, offset: 576)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !947, file: !405, line: 520, baseType: !409, size: 32, offset: 640)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !947, file: !405, line: 521, baseType: !409, size: 32, offset: 672)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !947, file: !405, line: 522, baseType: !409, size: 32, offset: 704)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !947, file: !405, line: 523, baseType: !108, size: 32, offset: 736)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !947, file: !405, line: 524, baseType: !409, size: 32, offset: 768)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !947, file: !405, line: 525, baseType: !409, size: 32, offset: 800)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !947, file: !405, line: 526, baseType: !960, size: 64, offset: 832)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !947, file: !405, line: 527, baseType: !409, size: 32, offset: 896)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !947, file: !405, line: 528, baseType: !409, size: 32, offset: 928)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !947, file: !405, line: 529, baseType: !960, size: 64, offset: 960)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !947, file: !405, line: 530, baseType: !409, size: 32, offset: 1024)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !947, file: !405, line: 531, baseType: !409, size: 32, offset: 1056)
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 32)
!981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !982, line: 343, size: 64, elements: !983)
!982 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!983 = !{!984, !985}
!984 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !981, file: !982, line: 344, baseType: !108, size: 32)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !981, file: !982, line: 345, baseType: !108, size: 32, offset: 32)
!986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 32)
!987 = !{!988, !994, !1010, !1021, !927}
!988 = !DIGlobalVariableExpression(var: !989, expr: !DIExpression())
!989 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !929, file: !990, line: 752, type: !991, isLocal: false, isDefinition: true, align: 16)
!990 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!991 = !DICompositeType(tag: DW_TAG_array_type, baseType: !443, size: 928, elements: !992)
!992 = !{!993}
!993 = !DISubrange(count: 58)
!994 = !DIGlobalVariableExpression(var: !995, expr: !DIExpression())
!995 = distinct !DIGlobalVariable(name: "__device_dts_ord_9", scope: !929, file: !990, line: 752, type: !996, isLocal: false, isDefinition: true, align: 32)
!996 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !997)
!997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !429, line: 378, size: 192, elements: !998)
!998 = !{!999, !1000, !1001, !1002, !1008, !1009}
!999 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !997, file: !429, line: 380, baseType: !337, size: 32)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !997, file: !429, line: 382, baseType: !13, size: 32, offset: 32)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !997, file: !429, line: 384, baseType: !13, size: 32, offset: 64)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !997, file: !429, line: 386, baseType: !1003, size: 32, offset: 96)
!1003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1004, size: 32)
!1004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !429, line: 351, size: 16, elements: !1005)
!1005 = !{!1006, !1007}
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1004, file: !429, line: 359, baseType: !185, size: 8)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1004, file: !429, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !997, file: !429, line: 388, baseType: !102, size: 32, offset: 128)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !997, file: !429, line: 396, baseType: !442, size: 32, offset: 160)
!1010 = !DIGlobalVariableExpression(var: !1011, expr: !DIExpression())
!1011 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_9", scope: !929, file: !990, line: 752, type: !1012, isLocal: true, isDefinition: true, align: 32)
!1012 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1013)
!1013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !420, line: 51, size: 64, elements: !1014)
!1014 = !{!1015, !1020}
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1013, file: !420, line: 60, baseType: !1016, size: 32)
!1016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 32)
!1017 = !DISubroutineType(types: !1018)
!1018 = !{!103, !1019}
!1019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 32)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1013, file: !420, line: 65, baseType: !1019, size: 32, offset: 32)
!1021 = !DIGlobalVariableExpression(var: !1022, expr: !DIExpression())
!1022 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_9", scope: !929, file: !990, line: 752, type: !1004, isLocal: true, isDefinition: true, align: 8)
!1023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !938, line: 100, size: 224, elements: !1024)
!1024 = !{!1025, !1031, !1032, !1041, !1046, !1051, !1057}
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1023, file: !938, line: 101, baseType: !1026, size: 32)
!1026 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !938, line: 76, baseType: !1027)
!1027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1028, size: 32)
!1028 = !DISubroutineType(types: !1029)
!1029 = !{!103, !1019, !1030}
!1030 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !938, line: 56, baseType: !102)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1023, file: !938, line: 102, baseType: !1026, size: 32, offset: 32)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1023, file: !938, line: 103, baseType: !1033, size: 32, offset: 64)
!1033 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !938, line: 83, baseType: !1034)
!1034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1035, size: 32)
!1035 = !DISubroutineType(types: !1036)
!1036 = !{!103, !1019, !1030, !1037, !102}
!1037 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !938, line: 72, baseType: !1038)
!1038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1039, size: 32)
!1039 = !DISubroutineType(types: !1040)
!1040 = !{null, !1019, !1030, !102}
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1023, file: !938, line: 104, baseType: !1042, size: 32, offset: 96)
!1042 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !938, line: 79, baseType: !1043)
!1043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1044, size: 32)
!1044 = !DISubroutineType(types: !1045)
!1045 = !{!103, !1019, !1030, !986}
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1023, file: !938, line: 105, baseType: !1047, size: 32, offset: 128)
!1047 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !938, line: 88, baseType: !1048)
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 32)
!1049 = !DISubroutineType(types: !1050)
!1050 = !{!937, !1019, !1030}
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1023, file: !938, line: 106, baseType: !1052, size: 32, offset: 160)
!1052 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !938, line: 92, baseType: !1053)
!1053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1054, size: 32)
!1054 = !DISubroutineType(types: !1055)
!1055 = !{!103, !1019, !1030, !1056}
!1056 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !938, line: 64, baseType: !102)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1023, file: !938, line: 107, baseType: !1058, size: 32, offset: 192)
!1058 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !938, line: 96, baseType: !1059)
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 32)
!1060 = !DISubroutineType(types: !1061)
!1061 = !{!103, !1019, !1030, !102}
!1062 = !DIGlobalVariableExpression(var: !1063, expr: !DIExpression())
!1063 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1064, file: !1121, line: 603, type: !1123, isLocal: true, isDefinition: true, align: 32)
!1064 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1065, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1066, globals: !1118, splitDebugInlining: false, nameTableKind: None)
!1065 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!1066 = !{!102, !103, !1067}
!1067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1068, size: 32)
!1068 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1069)
!1069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1070, line: 336, size: 160, elements: !1071)
!1070 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1071 = !{!1072, !1092, !1096, !1100, !1113}
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1069, file: !1070, line: 365, baseType: !1073, size: 32)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 32)
!1074 = !DISubroutineType(types: !1075)
!1075 = !{!103, !1076, !1091}
!1076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1077, size: 32)
!1077 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1078)
!1078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !429, line: 378, size: 192, elements: !1079)
!1079 = !{!1080, !1081, !1082, !1083, !1089, !1090}
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1078, file: !429, line: 380, baseType: !337, size: 32)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1078, file: !429, line: 382, baseType: !13, size: 32, offset: 32)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1078, file: !429, line: 384, baseType: !13, size: 32, offset: 64)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1078, file: !429, line: 386, baseType: !1084, size: 32, offset: 96)
!1084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1085, size: 32)
!1085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !429, line: 351, size: 16, elements: !1086)
!1086 = !{!1087, !1088}
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1085, file: !429, line: 359, baseType: !185, size: 8)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1085, file: !429, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1078, file: !429, line: 388, baseType: !102, size: 32, offset: 128)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1078, file: !429, line: 396, baseType: !442, size: 32, offset: 160)
!1091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !186, size: 32)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1069, file: !1070, line: 366, baseType: !1093, size: 32, offset: 32)
!1093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1094, size: 32)
!1094 = !DISubroutineType(types: !1095)
!1095 = !{null, !1076, !186}
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1069, file: !1070, line: 374, baseType: !1097, size: 32, offset: 64)
!1097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 32)
!1098 = !DISubroutineType(types: !1099)
!1099 = !{!103, !1076}
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1069, file: !1070, line: 377, baseType: !1101, size: 32, offset: 96)
!1101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1102, size: 32)
!1102 = !DISubroutineType(types: !1103)
!1103 = !{!103, !1076, !1104}
!1104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1105, size: 32)
!1105 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1106)
!1106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1070, line: 122, size: 64, elements: !1107)
!1107 = !{!1108, !1109, !1110, !1111, !1112}
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1106, file: !1070, line: 123, baseType: !108, size: 32)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1106, file: !1070, line: 124, baseType: !185, size: 8, offset: 32)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1106, file: !1070, line: 125, baseType: !185, size: 8, offset: 40)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1106, file: !1070, line: 126, baseType: !185, size: 8, offset: 48)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1106, file: !1070, line: 127, baseType: !185, size: 8, offset: 56)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1069, file: !1070, line: 379, baseType: !1114, size: 32, offset: 128)
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 32)
!1115 = !DISubroutineType(types: !1116)
!1116 = !{!103, !1076, !1117}
!1117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1106, size: 32)
!1118 = !{!1062, !1119}
!1119 = !DIGlobalVariableExpression(var: !1120, expr: !DIExpression())
!1120 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1064, file: !1121, line: 38, type: !1122, isLocal: true, isDefinition: true)
!1121 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1122 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1076)
!1123 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1124)
!1124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !420, line: 51, size: 64, elements: !1125)
!1125 = !{!1126, !1127}
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1124, file: !420, line: 60, baseType: !1097, size: 32)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1124, file: !420, line: 65, baseType: !1076, size: 32, offset: 32)
!1128 = !DIGlobalVariableExpression(var: !1129, expr: !DIExpression())
!1129 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1130, file: !1299, line: 762, type: !1418, isLocal: true, isDefinition: true)
!1130 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1131, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1132, retainedTypes: !1150, globals: !1296, splitDebugInlining: false, nameTableKind: None)
!1131 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!1132 = !{!30, !1133, !1139, !1144, !937}
!1133 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1134, line: 506, baseType: !32, size: 32, elements: !1135)
!1134 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1135 = !{!1136, !1137, !1138}
!1136 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1137 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1138 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1139 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1134, line: 512, baseType: !32, size: 32, elements: !1140)
!1140 = !{!1141, !1142, !1143}
!1141 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1142 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1143 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1144 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !848, line: 43, baseType: !32, size: 32, elements: !1145)
!1145 = !{!1146, !1147, !1148, !1149}
!1146 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1147 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1148 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1149 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1150 = !{!102, !103, !1151, !1221, !1226, !1186, !1139, !1133, !1231, !1232, !108, !1246, !1201, !277, !1256, !1257}
!1151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1152, size: 32)
!1152 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1153)
!1153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1134, line: 523, size: 288, elements: !1154)
!1154 = !{!1155, !1176, !1182, !1187, !1191, !1192, !1193, !1197, !1217}
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1153, file: !1134, line: 524, baseType: !1156, size: 32)
!1156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1157, size: 32)
!1157 = !DISubroutineType(types: !1158)
!1158 = !{!103, !1159, !1174, !1175}
!1159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1160, size: 32)
!1160 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1161)
!1161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !429, line: 378, size: 192, elements: !1162)
!1162 = !{!1163, !1164, !1165, !1166, !1172, !1173}
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1161, file: !429, line: 380, baseType: !337, size: 32)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1161, file: !429, line: 382, baseType: !13, size: 32, offset: 32)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1161, file: !429, line: 384, baseType: !13, size: 32, offset: 64)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1161, file: !429, line: 386, baseType: !1167, size: 32, offset: 96)
!1167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 32)
!1168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !429, line: 351, size: 16, elements: !1169)
!1169 = !{!1170, !1171}
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1168, file: !429, line: 359, baseType: !185, size: 8)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1168, file: !429, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1161, file: !429, line: 388, baseType: !102, size: 32, offset: 128)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1161, file: !429, line: 396, baseType: !442, size: 32, offset: 160)
!1174 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1134, line: 237, baseType: !185)
!1175 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1134, line: 257, baseType: !108)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1153, file: !1134, line: 530, baseType: !1177, size: 32, offset: 32)
!1177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1178, size: 32)
!1178 = !DISubroutineType(types: !1179)
!1179 = !{!103, !1159, !1180}
!1180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 32)
!1181 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1134, line: 229, baseType: !108)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1153, file: !1134, line: 532, baseType: !1183, size: 32, offset: 64)
!1183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1184, size: 32)
!1184 = !DISubroutineType(types: !1185)
!1185 = !{!103, !1159, !1186, !1181}
!1186 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1134, line: 216, baseType: !108)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1153, file: !1134, line: 535, baseType: !1188, size: 32, offset: 96)
!1188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1189, size: 32)
!1189 = !DISubroutineType(types: !1190)
!1190 = !{!103, !1159, !1186}
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1153, file: !1134, line: 537, baseType: !1188, size: 32, offset: 128)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1153, file: !1134, line: 539, baseType: !1188, size: 32, offset: 160)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1153, file: !1134, line: 541, baseType: !1194, size: 32, offset: 192)
!1194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1195, size: 32)
!1195 = !DISubroutineType(types: !1196)
!1196 = !{!103, !1159, !1174, !1133, !1139}
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1153, file: !1134, line: 544, baseType: !1198, size: 32, offset: 224)
!1198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1199, size: 32)
!1199 = !DISubroutineType(types: !1200)
!1200 = !{!103, !1159, !1201, !131}
!1201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1202, size: 32)
!1202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1134, line: 478, size: 96, elements: !1203)
!1203 = !{!1204, !1211, !1216}
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1202, file: !1134, line: 482, baseType: !1205, size: 32)
!1205 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1206, line: 33, baseType: !1207)
!1206 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1206, line: 29, size: 32, elements: !1208)
!1208 = !{!1209}
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1207, file: !1206, line: 30, baseType: !1210, size: 32)
!1210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1207, size: 32)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1202, file: !1134, line: 485, baseType: !1212, size: 32, offset: 32)
!1212 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1134, line: 464, baseType: !1213)
!1213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1214, size: 32)
!1214 = !DISubroutineType(types: !1215)
!1215 = !{null, !1159, !1201, !1186}
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1202, file: !1134, line: 493, baseType: !1186, size: 32, offset: 64)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1153, file: !1134, line: 547, baseType: !1218, size: 32, offset: 256)
!1218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1219, size: 32)
!1219 = !DISubroutineType(types: !1220)
!1220 = !{!108, !1159}
!1221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1222, size: 32)
!1222 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1223)
!1223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1134, line: 428, size: 32, elements: !1224)
!1224 = !{!1225}
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1223, file: !1134, line: 434, baseType: !1186, size: 32)
!1226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1227, size: 32)
!1227 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1228)
!1228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1134, line: 441, size: 32, elements: !1229)
!1229 = !{!1230}
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1228, file: !1134, line: 447, baseType: !1186, size: 32)
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1228, size: 32)
!1232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1233, size: 32)
!1233 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !405, line: 441, baseType: !1234)
!1234 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 430, size: 320, elements: !1235)
!1235 = !{!1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244}
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1234, file: !405, line: 432, baseType: !409, size: 32)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1234, file: !405, line: 433, baseType: !409, size: 32, offset: 32)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1234, file: !405, line: 434, baseType: !409, size: 32, offset: 64)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1234, file: !405, line: 435, baseType: !409, size: 32, offset: 96)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1234, file: !405, line: 436, baseType: !409, size: 32, offset: 128)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1234, file: !405, line: 437, baseType: !409, size: 32, offset: 160)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1234, file: !405, line: 438, baseType: !409, size: 32, offset: 192)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1234, file: !405, line: 439, baseType: !409, size: 32, offset: 224)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1234, file: !405, line: 440, baseType: !1245, size: 64, offset: 256)
!1245 = !DICompositeType(tag: DW_TAG_array_type, baseType: !409, size: 64, elements: !180)
!1246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1247, size: 32)
!1247 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !405, line: 454, baseType: !1248)
!1248 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 447, size: 288, elements: !1249)
!1249 = !{!1250, !1251, !1252, !1254, !1255}
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1248, file: !405, line: 449, baseType: !409, size: 32)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1248, file: !405, line: 450, baseType: !409, size: 32, offset: 32)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1248, file: !405, line: 451, baseType: !1253, size: 128, offset: 64)
!1253 = !DICompositeType(tag: DW_TAG_array_type, baseType: !409, size: 128, elements: !809)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1248, file: !405, line: 452, baseType: !960, size: 64, offset: 192)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1248, file: !405, line: 453, baseType: !409, size: 32, offset: 256)
!1256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1030, size: 32)
!1257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1258, size: 32)
!1258 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1259)
!1259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !938, line: 100, size: 224, elements: !1260)
!1260 = !{!1261, !1266, !1267, !1276, !1281, !1286, !1291}
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1259, file: !938, line: 101, baseType: !1262, size: 32)
!1262 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !938, line: 76, baseType: !1263)
!1263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1264, size: 32)
!1264 = !DISubroutineType(types: !1265)
!1265 = !{!103, !1159, !1030}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1259, file: !938, line: 102, baseType: !1262, size: 32, offset: 32)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1259, file: !938, line: 103, baseType: !1268, size: 32, offset: 64)
!1268 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !938, line: 83, baseType: !1269)
!1269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1270, size: 32)
!1270 = !DISubroutineType(types: !1271)
!1271 = !{!103, !1159, !1030, !1272, !102}
!1272 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !938, line: 72, baseType: !1273)
!1273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1274, size: 32)
!1274 = !DISubroutineType(types: !1275)
!1275 = !{null, !1159, !1030, !102}
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1259, file: !938, line: 104, baseType: !1277, size: 32, offset: 96)
!1277 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !938, line: 79, baseType: !1278)
!1278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1279, size: 32)
!1279 = !DISubroutineType(types: !1280)
!1280 = !{!103, !1159, !1030, !986}
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1259, file: !938, line: 105, baseType: !1282, size: 32, offset: 128)
!1282 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !938, line: 88, baseType: !1283)
!1283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1284, size: 32)
!1284 = !DISubroutineType(types: !1285)
!1285 = !{!937, !1159, !1030}
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1259, file: !938, line: 106, baseType: !1287, size: 32, offset: 160)
!1287 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !938, line: 92, baseType: !1288)
!1288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1289, size: 32)
!1289 = !DISubroutineType(types: !1290)
!1290 = !{!103, !1159, !1030, !1056}
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1259, file: !938, line: 107, baseType: !1292, size: 32, offset: 192)
!1292 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !938, line: 96, baseType: !1293)
!1293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1294, size: 32)
!1294 = !DISubroutineType(types: !1295)
!1295 = !{!103, !1159, !1030, !102}
!1296 = !{!1297, !1303, !1305, !1315, !1320, !1322, !1324, !1326, !1328, !1330, !1332, !1334, !1336, !1338, !1340, !1342, !1344, !1346, !1348, !1350, !1352, !1354, !1356, !1358, !1360, !1362, !1364, !1366, !1380, !1382, !1384, !1386, !1388, !1390, !1392, !1394, !1396, !1398, !1400, !1402, !1404, !1406, !1408, !1410, !1412, !1128, !1414, !1416, !1429, !1431, !1433, !1435, !1437, !1439, !1441}
!1297 = !DIGlobalVariableExpression(var: !1298, expr: !DIExpression())
!1298 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_74", scope: !1130, file: !1299, line: 762, type: !1300, isLocal: false, isDefinition: true, align: 16)
!1299 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1300 = !DICompositeType(tag: DW_TAG_array_type, baseType: !443, size: 96, elements: !1301)
!1301 = !{!1302}
!1302 = !DISubrange(count: 6)
!1303 = !DIGlobalVariableExpression(var: !1304, expr: !DIExpression())
!1304 = distinct !DIGlobalVariable(name: "__device_dts_ord_74", scope: !1130, file: !1299, line: 762, type: !1160, isLocal: false, isDefinition: true, align: 32)
!1305 = !DIGlobalVariableExpression(var: !1306, expr: !DIExpression())
!1306 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_74", scope: !1130, file: !1299, line: 762, type: !1307, isLocal: true, isDefinition: true, align: 32)
!1307 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1308)
!1308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !420, line: 51, size: 64, elements: !1309)
!1309 = !{!1310, !1314}
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1308, file: !420, line: 60, baseType: !1311, size: 32)
!1311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1312, size: 32)
!1312 = !DISubroutineType(types: !1313)
!1313 = !{!103, !1159}
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1308, file: !420, line: 65, baseType: !1159, size: 32, offset: 32)
!1315 = !DIGlobalVariableExpression(var: !1316, expr: !DIExpression())
!1316 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !1130, file: !1299, line: 766, type: !1317, isLocal: false, isDefinition: true, align: 16)
!1317 = !DICompositeType(tag: DW_TAG_array_type, baseType: !443, size: 80, elements: !1318)
!1318 = !{!1319}
!1319 = !DISubrange(count: 5)
!1320 = !DIGlobalVariableExpression(var: !1321, expr: !DIExpression())
!1321 = distinct !DIGlobalVariable(name: "__device_dts_ord_67", scope: !1130, file: !1299, line: 766, type: !1160, isLocal: false, isDefinition: true, align: 32)
!1322 = !DIGlobalVariableExpression(var: !1323, expr: !DIExpression())
!1323 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_67", scope: !1130, file: !1299, line: 766, type: !1307, isLocal: true, isDefinition: true, align: 32)
!1324 = !DIGlobalVariableExpression(var: !1325, expr: !DIExpression())
!1325 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_21", scope: !1130, file: !1299, line: 770, type: !1300, isLocal: false, isDefinition: true, align: 16)
!1326 = !DIGlobalVariableExpression(var: !1327, expr: !DIExpression())
!1327 = distinct !DIGlobalVariable(name: "__device_dts_ord_21", scope: !1130, file: !1299, line: 770, type: !1160, isLocal: false, isDefinition: true, align: 32)
!1328 = !DIGlobalVariableExpression(var: !1329, expr: !DIExpression())
!1329 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_21", scope: !1130, file: !1299, line: 770, type: !1307, isLocal: true, isDefinition: true, align: 32)
!1330 = !DIGlobalVariableExpression(var: !1331, expr: !DIExpression())
!1331 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !1130, file: !1299, line: 774, type: !1317, isLocal: false, isDefinition: true, align: 16)
!1332 = !DIGlobalVariableExpression(var: !1333, expr: !DIExpression())
!1333 = distinct !DIGlobalVariable(name: "__device_dts_ord_68", scope: !1130, file: !1299, line: 774, type: !1160, isLocal: false, isDefinition: true, align: 32)
!1334 = !DIGlobalVariableExpression(var: !1335, expr: !DIExpression())
!1335 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_68", scope: !1130, file: !1299, line: 774, type: !1307, isLocal: true, isDefinition: true, align: 32)
!1336 = !DIGlobalVariableExpression(var: !1337, expr: !DIExpression())
!1337 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !1130, file: !1299, line: 778, type: !1317, isLocal: false, isDefinition: true, align: 16)
!1338 = !DIGlobalVariableExpression(var: !1339, expr: !DIExpression())
!1339 = distinct !DIGlobalVariable(name: "__device_dts_ord_69", scope: !1130, file: !1299, line: 778, type: !1160, isLocal: false, isDefinition: true, align: 32)
!1340 = !DIGlobalVariableExpression(var: !1341, expr: !DIExpression())
!1341 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_69", scope: !1130, file: !1299, line: 778, type: !1307, isLocal: true, isDefinition: true, align: 32)
!1342 = !DIGlobalVariableExpression(var: !1343, expr: !DIExpression())
!1343 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !1130, file: !1299, line: 782, type: !1317, isLocal: false, isDefinition: true, align: 16)
!1344 = !DIGlobalVariableExpression(var: !1345, expr: !DIExpression())
!1345 = distinct !DIGlobalVariable(name: "__device_dts_ord_70", scope: !1130, file: !1299, line: 782, type: !1160, isLocal: false, isDefinition: true, align: 32)
!1346 = !DIGlobalVariableExpression(var: !1347, expr: !DIExpression())
!1347 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_70", scope: !1130, file: !1299, line: 782, type: !1307, isLocal: true, isDefinition: true, align: 32)
!1348 = !DIGlobalVariableExpression(var: !1349, expr: !DIExpression())
!1349 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !1130, file: !1299, line: 786, type: !1317, isLocal: false, isDefinition: true, align: 16)
!1350 = !DIGlobalVariableExpression(var: !1351, expr: !DIExpression())
!1351 = distinct !DIGlobalVariable(name: "__device_dts_ord_71", scope: !1130, file: !1299, line: 786, type: !1160, isLocal: false, isDefinition: true, align: 32)
!1352 = !DIGlobalVariableExpression(var: !1353, expr: !DIExpression())
!1353 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_71", scope: !1130, file: !1299, line: 786, type: !1307, isLocal: true, isDefinition: true, align: 32)
!1354 = !DIGlobalVariableExpression(var: !1355, expr: !DIExpression())
!1355 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !1130, file: !1299, line: 790, type: !1317, isLocal: false, isDefinition: true, align: 16)
!1356 = !DIGlobalVariableExpression(var: !1357, expr: !DIExpression())
!1357 = distinct !DIGlobalVariable(name: "__device_dts_ord_72", scope: !1130, file: !1299, line: 790, type: !1160, isLocal: false, isDefinition: true, align: 32)
!1358 = !DIGlobalVariableExpression(var: !1359, expr: !DIExpression())
!1359 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_72", scope: !1130, file: !1299, line: 790, type: !1307, isLocal: true, isDefinition: true, align: 32)
!1360 = !DIGlobalVariableExpression(var: !1361, expr: !DIExpression())
!1361 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !1130, file: !1299, line: 794, type: !1317, isLocal: false, isDefinition: true, align: 16)
!1362 = !DIGlobalVariableExpression(var: !1363, expr: !DIExpression())
!1363 = distinct !DIGlobalVariable(name: "__device_dts_ord_73", scope: !1130, file: !1299, line: 794, type: !1160, isLocal: false, isDefinition: true, align: 32)
!1364 = !DIGlobalVariableExpression(var: !1365, expr: !DIExpression())
!1365 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_73", scope: !1130, file: !1299, line: 794, type: !1307, isLocal: true, isDefinition: true, align: 32)
!1366 = !DIGlobalVariableExpression(var: !1367, expr: !DIExpression())
!1367 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1130, file: !1299, line: 762, type: !1368, isLocal: true, isDefinition: true)
!1368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1369, line: 237, size: 128, elements: !1370)
!1369 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1370 = !{!1371, !1372, !1373}
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1368, file: !1369, line: 239, baseType: !1228, size: 32)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1368, file: !1369, line: 241, baseType: !1159, size: 32, offset: 32)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1368, file: !1369, line: 243, baseType: !1374, size: 64, offset: 64)
!1374 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1206, line: 40, baseType: !1375)
!1375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1206, line: 35, size: 64, elements: !1376)
!1376 = !{!1377, !1379}
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1375, file: !1206, line: 36, baseType: !1378, size: 32)
!1378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1205, size: 32)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1375, file: !1206, line: 37, baseType: !1378, size: 32, offset: 32)
!1380 = !DIGlobalVariableExpression(var: !1381, expr: !DIExpression())
!1381 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_74", scope: !1130, file: !1299, line: 762, type: !1168, isLocal: true, isDefinition: true, align: 8)
!1382 = !DIGlobalVariableExpression(var: !1383, expr: !DIExpression())
!1383 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1130, file: !1299, line: 766, type: !1368, isLocal: true, isDefinition: true)
!1384 = !DIGlobalVariableExpression(var: !1385, expr: !DIExpression())
!1385 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_67", scope: !1130, file: !1299, line: 766, type: !1168, isLocal: true, isDefinition: true, align: 8)
!1386 = !DIGlobalVariableExpression(var: !1387, expr: !DIExpression())
!1387 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1130, file: !1299, line: 770, type: !1368, isLocal: true, isDefinition: true)
!1388 = !DIGlobalVariableExpression(var: !1389, expr: !DIExpression())
!1389 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_21", scope: !1130, file: !1299, line: 770, type: !1168, isLocal: true, isDefinition: true, align: 8)
!1390 = !DIGlobalVariableExpression(var: !1391, expr: !DIExpression())
!1391 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1130, file: !1299, line: 774, type: !1368, isLocal: true, isDefinition: true)
!1392 = !DIGlobalVariableExpression(var: !1393, expr: !DIExpression())
!1393 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_68", scope: !1130, file: !1299, line: 774, type: !1168, isLocal: true, isDefinition: true, align: 8)
!1394 = !DIGlobalVariableExpression(var: !1395, expr: !DIExpression())
!1395 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1130, file: !1299, line: 778, type: !1368, isLocal: true, isDefinition: true)
!1396 = !DIGlobalVariableExpression(var: !1397, expr: !DIExpression())
!1397 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_69", scope: !1130, file: !1299, line: 778, type: !1168, isLocal: true, isDefinition: true, align: 8)
!1398 = !DIGlobalVariableExpression(var: !1399, expr: !DIExpression())
!1399 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1130, file: !1299, line: 782, type: !1368, isLocal: true, isDefinition: true)
!1400 = !DIGlobalVariableExpression(var: !1401, expr: !DIExpression())
!1401 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_70", scope: !1130, file: !1299, line: 782, type: !1168, isLocal: true, isDefinition: true, align: 8)
!1402 = !DIGlobalVariableExpression(var: !1403, expr: !DIExpression())
!1403 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1130, file: !1299, line: 786, type: !1368, isLocal: true, isDefinition: true)
!1404 = !DIGlobalVariableExpression(var: !1405, expr: !DIExpression())
!1405 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_71", scope: !1130, file: !1299, line: 786, type: !1168, isLocal: true, isDefinition: true, align: 8)
!1406 = !DIGlobalVariableExpression(var: !1407, expr: !DIExpression())
!1407 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1130, file: !1299, line: 790, type: !1368, isLocal: true, isDefinition: true)
!1408 = !DIGlobalVariableExpression(var: !1409, expr: !DIExpression())
!1409 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_72", scope: !1130, file: !1299, line: 790, type: !1168, isLocal: true, isDefinition: true, align: 8)
!1410 = !DIGlobalVariableExpression(var: !1411, expr: !DIExpression())
!1411 = distinct !DIGlobalVariable(name: "gpio_stm32_data_i", scope: !1130, file: !1299, line: 794, type: !1368, isLocal: true, isDefinition: true)
!1412 = !DIGlobalVariableExpression(var: !1413, expr: !DIExpression())
!1413 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_73", scope: !1130, file: !1299, line: 794, type: !1168, isLocal: true, isDefinition: true, align: 8)
!1414 = !DIGlobalVariableExpression(var: !1415, expr: !DIExpression())
!1415 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1130, file: !1299, line: 656, type: !1152, isLocal: true, isDefinition: true)
!1416 = !DIGlobalVariableExpression(var: !1417, expr: !DIExpression())
!1417 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1130, file: !1299, line: 766, type: !1418, isLocal: true, isDefinition: true)
!1418 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1419)
!1419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1369, line: 224, size: 160, elements: !1420)
!1420 = !{!1421, !1422, !1423, !1424}
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1419, file: !1369, line: 226, baseType: !1223, size: 32)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1419, file: !1369, line: 228, baseType: !986, size: 32, offset: 32)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1419, file: !1369, line: 230, baseType: !103, size: 32, offset: 64)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1419, file: !1369, line: 231, baseType: !1425, size: 64, offset: 96)
!1425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !982, line: 343, size: 64, elements: !1426)
!1426 = !{!1427, !1428}
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1425, file: !982, line: 344, baseType: !108, size: 32)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1425, file: !982, line: 345, baseType: !108, size: 32, offset: 32)
!1429 = !DIGlobalVariableExpression(var: !1430, expr: !DIExpression())
!1430 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1130, file: !1299, line: 770, type: !1418, isLocal: true, isDefinition: true)
!1431 = !DIGlobalVariableExpression(var: !1432, expr: !DIExpression())
!1432 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1130, file: !1299, line: 774, type: !1418, isLocal: true, isDefinition: true)
!1433 = !DIGlobalVariableExpression(var: !1434, expr: !DIExpression())
!1434 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1130, file: !1299, line: 778, type: !1418, isLocal: true, isDefinition: true)
!1435 = !DIGlobalVariableExpression(var: !1436, expr: !DIExpression())
!1436 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1130, file: !1299, line: 782, type: !1418, isLocal: true, isDefinition: true)
!1437 = !DIGlobalVariableExpression(var: !1438, expr: !DIExpression())
!1438 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1130, file: !1299, line: 786, type: !1418, isLocal: true, isDefinition: true)
!1439 = !DIGlobalVariableExpression(var: !1440, expr: !DIExpression())
!1440 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1130, file: !1299, line: 790, type: !1418, isLocal: true, isDefinition: true)
!1441 = !DIGlobalVariableExpression(var: !1442, expr: !DIExpression())
!1442 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_i", scope: !1130, file: !1299, line: 794, type: !1418, isLocal: true, isDefinition: true)
!1443 = !DIGlobalVariableExpression(var: !1444, expr: !DIExpression())
!1444 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1445, file: !1584, line: 44, type: !1662, isLocal: false, isDefinition: true)
!1445 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1446, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1447, retainedTypes: !1480, globals: !1581, splitDebugInlining: false, nameTableKind: None)
!1446 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!1447 = !{!30, !1448, !1455, !1462, !1469, !1475, !937}
!1448 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !1070, line: 47, baseType: !32, size: 32, elements: !1449)
!1449 = !{!1450, !1451, !1452, !1453, !1454}
!1450 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1451 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1452 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1453 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1454 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1455 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !1070, line: 75, baseType: !32, size: 32, elements: !1456)
!1456 = !{!1457, !1458, !1459, !1460, !1461}
!1457 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1458 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1459 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1460 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1461 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1462 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !1070, line: 92, baseType: !32, size: 32, elements: !1463)
!1463 = !{!1464, !1465, !1466, !1467, !1468}
!1464 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1465 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1466 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1467 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1468 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1469 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !1070, line: 84, baseType: !32, size: 32, elements: !1470)
!1470 = !{!1471, !1472, !1473, !1474}
!1471 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1472 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1473 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1474 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1475 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !1070, line: 107, baseType: !32, size: 32, elements: !1476)
!1476 = !{!1477, !1478, !1479}
!1477 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1478 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1479 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1480 = !{!102, !103, !1481, !186, !185, !1530, !108, !1030, !1541, !121, !109, !1580}
!1481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1482, size: 32)
!1482 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1483)
!1483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1070, line: 336, size: 160, elements: !1484)
!1484 = !{!1485, !1504, !1508, !1512, !1525}
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1483, file: !1070, line: 365, baseType: !1486, size: 32)
!1486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1487, size: 32)
!1487 = !DISubroutineType(types: !1488)
!1488 = !{!103, !1489, !1091}
!1489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1490, size: 32)
!1490 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1491)
!1491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !429, line: 378, size: 192, elements: !1492)
!1492 = !{!1493, !1494, !1495, !1496, !1502, !1503}
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1491, file: !429, line: 380, baseType: !337, size: 32)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1491, file: !429, line: 382, baseType: !13, size: 32, offset: 32)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1491, file: !429, line: 384, baseType: !13, size: 32, offset: 64)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1491, file: !429, line: 386, baseType: !1497, size: 32, offset: 96)
!1497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1498, size: 32)
!1498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !429, line: 351, size: 16, elements: !1499)
!1499 = !{!1500, !1501}
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1498, file: !429, line: 359, baseType: !185, size: 8)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1498, file: !429, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1491, file: !429, line: 388, baseType: !102, size: 32, offset: 128)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1491, file: !429, line: 396, baseType: !442, size: 32, offset: 160)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1483, file: !1070, line: 366, baseType: !1505, size: 32, offset: 32)
!1505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1506, size: 32)
!1506 = !DISubroutineType(types: !1507)
!1507 = !{null, !1489, !186}
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1483, file: !1070, line: 374, baseType: !1509, size: 32, offset: 64)
!1509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1510, size: 32)
!1510 = !DISubroutineType(types: !1511)
!1511 = !{!103, !1489}
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1483, file: !1070, line: 377, baseType: !1513, size: 32, offset: 96)
!1513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1514, size: 32)
!1514 = !DISubroutineType(types: !1515)
!1515 = !{!103, !1489, !1516}
!1516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1517, size: 32)
!1517 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1518)
!1518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1070, line: 122, size: 64, elements: !1519)
!1519 = !{!1520, !1521, !1522, !1523, !1524}
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1518, file: !1070, line: 123, baseType: !108, size: 32)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1518, file: !1070, line: 124, baseType: !185, size: 8, offset: 32)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1518, file: !1070, line: 125, baseType: !185, size: 8, offset: 40)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1518, file: !1070, line: 126, baseType: !185, size: 8, offset: 48)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1518, file: !1070, line: 127, baseType: !185, size: 8, offset: 56)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1483, file: !1070, line: 379, baseType: !1526, size: 32, offset: 128)
!1526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1527, size: 32)
!1527 = !DISubroutineType(types: !1528)
!1528 = !{!103, !1489, !1529}
!1529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1518, size: 32)
!1530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1531, size: 32)
!1531 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !405, line: 670, baseType: !1532)
!1532 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 661, size: 224, elements: !1533)
!1533 = !{!1534, !1535, !1536, !1537, !1538, !1539, !1540}
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1532, file: !405, line: 663, baseType: !409, size: 32)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1532, file: !405, line: 664, baseType: !409, size: 32, offset: 32)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1532, file: !405, line: 665, baseType: !409, size: 32, offset: 64)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1532, file: !405, line: 666, baseType: !409, size: 32, offset: 96)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1532, file: !405, line: 667, baseType: !409, size: 32, offset: 128)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1532, file: !405, line: 668, baseType: !409, size: 32, offset: 160)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1532, file: !405, line: 669, baseType: !409, size: 32, offset: 192)
!1541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1542, size: 32)
!1542 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1543)
!1543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !938, line: 100, size: 224, elements: !1544)
!1544 = !{!1545, !1550, !1551, !1560, !1565, !1570, !1575}
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1543, file: !938, line: 101, baseType: !1546, size: 32)
!1546 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !938, line: 76, baseType: !1547)
!1547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1548, size: 32)
!1548 = !DISubroutineType(types: !1549)
!1549 = !{!103, !1489, !1030}
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1543, file: !938, line: 102, baseType: !1546, size: 32, offset: 32)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1543, file: !938, line: 103, baseType: !1552, size: 32, offset: 64)
!1552 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !938, line: 83, baseType: !1553)
!1553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1554, size: 32)
!1554 = !DISubroutineType(types: !1555)
!1555 = !{!103, !1489, !1030, !1556, !102}
!1556 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !938, line: 72, baseType: !1557)
!1557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1558, size: 32)
!1558 = !DISubroutineType(types: !1559)
!1559 = !{null, !1489, !1030, !102}
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1543, file: !938, line: 104, baseType: !1561, size: 32, offset: 96)
!1561 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !938, line: 79, baseType: !1562)
!1562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1563, size: 32)
!1563 = !DISubroutineType(types: !1564)
!1564 = !{!103, !1489, !1030, !986}
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1543, file: !938, line: 105, baseType: !1566, size: 32, offset: 128)
!1566 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !938, line: 88, baseType: !1567)
!1567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1568, size: 32)
!1568 = !DISubroutineType(types: !1569)
!1569 = !{!937, !1489, !1030}
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1543, file: !938, line: 106, baseType: !1571, size: 32, offset: 160)
!1571 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !938, line: 92, baseType: !1572)
!1572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1573, size: 32)
!1573 = !DISubroutineType(types: !1574)
!1574 = !{!103, !1489, !1030, !1056}
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1543, file: !938, line: 107, baseType: !1576, size: 32, offset: 192)
!1576 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !938, line: 96, baseType: !1577)
!1577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1578, size: 32)
!1578 = !DISubroutineType(types: !1579)
!1579 = !{!103, !1489, !1030, !102}
!1580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !409, size: 32)
!1581 = !{!1443, !1582, !1588, !1590, !1597, !1599, !1643, !1646, !1648, !1651, !1654, !1656}
!1582 = !DIGlobalVariableExpression(var: !1583, expr: !DIExpression())
!1583 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1445, file: !1584, line: 1914, type: !1585, isLocal: false, isDefinition: true, align: 16)
!1584 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1585 = !DICompositeType(tag: DW_TAG_array_type, baseType: !443, size: 128, elements: !1586)
!1586 = !{!1587}
!1587 = !DISubrange(count: 8)
!1588 = !DIGlobalVariableExpression(var: !1589, expr: !DIExpression())
!1589 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1445, file: !1584, line: 1914, type: !1490, isLocal: false, isDefinition: true, align: 32)
!1590 = !DIGlobalVariableExpression(var: !1591, expr: !DIExpression())
!1591 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1445, file: !1584, line: 1914, type: !1592, isLocal: true, isDefinition: true, align: 32)
!1592 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1593)
!1593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !420, line: 51, size: 64, elements: !1594)
!1594 = !{!1595, !1596}
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1593, file: !420, line: 60, baseType: !1509, size: 32)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1593, file: !420, line: 65, baseType: !1489, size: 32, offset: 32)
!1597 = !DIGlobalVariableExpression(var: !1598, expr: !DIExpression())
!1598 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1445, file: !1584, line: 1914, type: !1498, isLocal: true, isDefinition: true, align: 8)
!1599 = !DIGlobalVariableExpression(var: !1600, expr: !DIExpression())
!1600 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1445, file: !1584, line: 1914, type: !1601, isLocal: true, isDefinition: true)
!1601 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1602)
!1602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1603, line: 22, size: 224, elements: !1604)
!1603 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1604 = !{!1605, !1606, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620}
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1602, file: !1603, line: 24, baseType: !1530, size: 32)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1602, file: !1603, line: 26, baseType: !1607, size: 32, offset: 32)
!1607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1608, size: 32)
!1608 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1609)
!1609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !982, line: 343, size: 64, elements: !1610)
!1610 = !{!1611, !1612}
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1609, file: !982, line: 344, baseType: !108, size: 32)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1609, file: !982, line: 345, baseType: !108, size: 32, offset: 32)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1602, file: !1603, line: 28, baseType: !132, size: 32, offset: 64)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1602, file: !1603, line: 30, baseType: !131, size: 8, offset: 96)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1602, file: !1603, line: 32, baseType: !103, size: 32, offset: 128)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1602, file: !1603, line: 34, baseType: !131, size: 8, offset: 160)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1602, file: !1603, line: 36, baseType: !131, size: 8, offset: 168)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1602, file: !1603, line: 38, baseType: !131, size: 8, offset: 176)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1602, file: !1603, line: 40, baseType: !131, size: 8, offset: 184)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1602, file: !1603, line: 41, baseType: !1621, size: 32, offset: 192)
!1621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1622, size: 32)
!1622 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1623)
!1623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1624, line: 60, size: 64, elements: !1625)
!1624 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1625 = !{!1626, !1642}
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1623, file: !1624, line: 69, baseType: !1627, size: 32)
!1627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1628, size: 32)
!1628 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1629)
!1629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1624, line: 50, size: 64, elements: !1630)
!1630 = !{!1631, !1640, !1641}
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1629, file: !1624, line: 52, baseType: !1632, size: 32)
!1632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1633, size: 32)
!1633 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1634)
!1634 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1635, line: 37, baseType: !1636)
!1635 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1635, line: 32, size: 64, elements: !1637)
!1637 = !{!1638, !1639}
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1636, file: !1635, line: 34, baseType: !108, size: 32)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1636, file: !1635, line: 36, baseType: !108, size: 32, offset: 32)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1629, file: !1624, line: 54, baseType: !185, size: 8, offset: 32)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1629, file: !1624, line: 56, baseType: !185, size: 8, offset: 40)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1623, file: !1624, line: 71, baseType: !185, size: 8, offset: 32)
!1643 = !DIGlobalVariableExpression(var: !1644, expr: !DIExpression())
!1644 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1445, file: !1584, line: 1914, type: !1645, isLocal: true, isDefinition: true)
!1645 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1608, size: 64, elements: !606)
!1646 = !DIGlobalVariableExpression(var: !1647, expr: !DIExpression())
!1647 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1445, file: !1584, line: 1914, type: !1622, isLocal: true, isDefinition: true)
!1648 = !DIGlobalVariableExpression(var: !1649, expr: !DIExpression())
!1649 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1445, file: !1584, line: 1914, type: !1650, isLocal: true, isDefinition: true)
!1650 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1628, size: 64, elements: !606)
!1651 = !DIGlobalVariableExpression(var: !1652, expr: !DIExpression())
!1652 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1445, file: !1584, line: 1914, type: !1653, isLocal: true, isDefinition: true)
!1653 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1633, size: 128, elements: !180)
!1654 = !DIGlobalVariableExpression(var: !1655, expr: !DIExpression())
!1655 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1445, file: !1584, line: 1539, type: !1482, isLocal: true, isDefinition: true)
!1656 = !DIGlobalVariableExpression(var: !1657, expr: !DIExpression())
!1657 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1445, file: !1584, line: 1914, type: !1658, isLocal: true, isDefinition: true)
!1658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1603, line: 74, size: 64, elements: !1659)
!1659 = !{!1660, !1661}
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1658, file: !1603, line: 76, baseType: !108, size: 32)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1658, file: !1603, line: 78, baseType: !1489, size: 32, offset: 32)
!1662 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1663)
!1663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !384, line: 16, size: 64, elements: !1664)
!1664 = !{!1665, !1666}
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1663, file: !384, line: 17, baseType: !337, size: 32)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1663, file: !384, line: 18, baseType: !185, size: 8, offset: 32)
!1667 = !DIGlobalVariableExpression(var: !1668, expr: !DIExpression())
!1668 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1669, file: !1747, line: 65, type: !409, isLocal: true, isDefinition: true)
!1669 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1670, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1671, retainedTypes: !1672, globals: !1744, splitDebugInlining: false, nameTableKind: None)
!1670 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!1671 = !{!705}
!1672 = !{!104, !1673, !331, !185, !108, !1681, !1712}
!1673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1674, size: 32)
!1674 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !624, line: 770, baseType: !1675)
!1675 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 764, size: 128, elements: !1676)
!1676 = !{!1677, !1678, !1679, !1680}
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1675, file: !624, line: 766, baseType: !409, size: 32)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1675, file: !624, line: 767, baseType: !409, size: 32, offset: 32)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1675, file: !624, line: 768, baseType: !409, size: 32, offset: 64)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1675, file: !624, line: 769, baseType: !628, size: 32, offset: 96)
!1681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1682, size: 32)
!1682 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !624, line: 426, baseType: !1683)
!1683 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 411, size: 28704, elements: !1684)
!1684 = !{!1685, !1687, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1702, !1707, !1711}
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1683, file: !624, line: 413, baseType: !1686, size: 256)
!1686 = !DICompositeType(tag: DW_TAG_array_type, baseType: !409, size: 256, elements: !1586)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1683, file: !624, line: 414, baseType: !1688, size: 768, offset: 256)
!1688 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 768, elements: !1689)
!1689 = !{!1690}
!1690 = !DISubrange(count: 24)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1683, file: !624, line: 415, baseType: !1686, size: 256, offset: 1024)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1683, file: !624, line: 416, baseType: !1688, size: 768, offset: 1280)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1683, file: !624, line: 417, baseType: !1686, size: 256, offset: 2048)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1683, file: !624, line: 418, baseType: !1688, size: 768, offset: 2304)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1683, file: !624, line: 419, baseType: !1686, size: 256, offset: 3072)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1683, file: !624, line: 420, baseType: !1688, size: 768, offset: 3328)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1683, file: !624, line: 421, baseType: !1686, size: 256, offset: 4096)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1683, file: !624, line: 422, baseType: !1699, size: 1792, offset: 4352)
!1699 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 1792, elements: !1700)
!1700 = !{!1701}
!1701 = !DISubrange(count: 56)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1683, file: !624, line: 423, baseType: !1703, size: 1920, offset: 6144)
!1703 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1704, size: 1920, elements: !1705)
!1704 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !185)
!1705 = !{!1706}
!1706 = !DISubrange(count: 240)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1683, file: !624, line: 424, baseType: !1708, size: 20608, offset: 8064)
!1708 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 20608, elements: !1709)
!1709 = !{!1710}
!1710 = !DISubrange(count: 644)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1683, file: !624, line: 425, baseType: !409, size: 32, offset: 28672)
!1712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1713, size: 32)
!1713 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !624, line: 468, baseType: !1714)
!1714 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 445, size: 1120, elements: !1715)
!1715 = !{!1716, !1717, !1718, !1719, !1720, !1721, !1722, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1735, !1736, !1737, !1739, !1741, !1743}
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1714, file: !624, line: 447, baseType: !628, size: 32)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1714, file: !624, line: 448, baseType: !409, size: 32, offset: 32)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1714, file: !624, line: 449, baseType: !409, size: 32, offset: 64)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1714, file: !624, line: 450, baseType: !409, size: 32, offset: 96)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1714, file: !624, line: 451, baseType: !409, size: 32, offset: 128)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1714, file: !624, line: 452, baseType: !409, size: 32, offset: 160)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1714, file: !624, line: 453, baseType: !1723, size: 96, offset: 192)
!1723 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1704, size: 96, elements: !1724)
!1724 = !{!1725}
!1725 = !DISubrange(count: 12)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1714, file: !624, line: 454, baseType: !409, size: 32, offset: 288)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1714, file: !624, line: 455, baseType: !409, size: 32, offset: 320)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1714, file: !624, line: 456, baseType: !409, size: 32, offset: 352)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1714, file: !624, line: 457, baseType: !409, size: 32, offset: 384)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1714, file: !624, line: 458, baseType: !409, size: 32, offset: 416)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1714, file: !624, line: 459, baseType: !409, size: 32, offset: 448)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1714, file: !624, line: 460, baseType: !409, size: 32, offset: 480)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1714, file: !624, line: 461, baseType: !1734, size: 64, offset: 512)
!1734 = !DICompositeType(tag: DW_TAG_array_type, baseType: !628, size: 64, elements: !180)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1714, file: !624, line: 462, baseType: !628, size: 32, offset: 576)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1714, file: !624, line: 463, baseType: !628, size: 32, offset: 608)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1714, file: !624, line: 464, baseType: !1738, size: 128, offset: 640)
!1738 = !DICompositeType(tag: DW_TAG_array_type, baseType: !628, size: 128, elements: !809)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1714, file: !624, line: 465, baseType: !1740, size: 160, offset: 768)
!1740 = !DICompositeType(tag: DW_TAG_array_type, baseType: !628, size: 160, elements: !1318)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1714, file: !624, line: 466, baseType: !1742, size: 160, offset: 928)
!1742 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 160, elements: !1318)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1714, file: !624, line: 467, baseType: !409, size: 32, offset: 1088)
!1744 = !{!1745, !1771, !1774, !1776, !1778, !1667}
!1745 = !DIGlobalVariableExpression(var: !1746, expr: !DIExpression())
!1746 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1669, file: !1747, line: 285, type: !1748, isLocal: true, isDefinition: true, align: 32)
!1747 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1748 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1749)
!1749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !420, line: 51, size: 64, elements: !1750)
!1750 = !{!1751, !1770}
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1749, file: !420, line: 60, baseType: !1752, size: 32)
!1752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1753, size: 32)
!1753 = !DISubroutineType(types: !1754)
!1754 = !{!103, !1755}
!1755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1756, size: 32)
!1756 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1757)
!1757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !429, line: 378, size: 192, elements: !1758)
!1758 = !{!1759, !1760, !1761, !1762, !1768, !1769}
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1757, file: !429, line: 380, baseType: !337, size: 32)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1757, file: !429, line: 382, baseType: !13, size: 32, offset: 32)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1757, file: !429, line: 384, baseType: !13, size: 32, offset: 64)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1757, file: !429, line: 386, baseType: !1763, size: 32, offset: 96)
!1763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1764, size: 32)
!1764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !429, line: 351, size: 16, elements: !1765)
!1765 = !{!1766, !1767}
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1764, file: !429, line: 359, baseType: !185, size: 8)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1764, file: !429, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1757, file: !429, line: 388, baseType: !102, size: 32, offset: 128)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1757, file: !429, line: 396, baseType: !442, size: 32, offset: 160)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1749, file: !420, line: 65, baseType: !1755, size: 32, offset: 32)
!1771 = !DIGlobalVariableExpression(var: !1772, expr: !DIExpression())
!1772 = distinct !DIGlobalVariable(name: "lock", scope: !1669, file: !1747, line: 34, type: !1773, isLocal: true, isDefinition: true)
!1773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!1774 = !DIGlobalVariableExpression(var: !1775, expr: !DIExpression())
!1775 = distinct !DIGlobalVariable(name: "last_load", scope: !1669, file: !1747, line: 36, type: !108, isLocal: true, isDefinition: true)
!1776 = !DIGlobalVariableExpression(var: !1777, expr: !DIExpression())
!1777 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1669, file: !1747, line: 48, type: !108, isLocal: true, isDefinition: true)
!1778 = !DIGlobalVariableExpression(var: !1779, expr: !DIExpression())
!1779 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1669, file: !1747, line: 54, type: !108, isLocal: true, isDefinition: true)
!1780 = !DIGlobalVariableExpression(var: !1781, expr: !DIExpression())
!1781 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1782, file: !1864, line: 22, type: !1866, isLocal: true, isDefinition: true)
!1782 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1783, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1784, retainedTypes: !1785, globals: !1861, splitDebugInlining: false, nameTableKind: None)
!1783 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!1784 = !{!1133, !1139}
!1785 = !{!1786, !1850, !1855, !1186, !1139, !1133, !1860, !102}
!1786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1787, size: 32)
!1787 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1788)
!1788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1134, line: 523, size: 288, elements: !1789)
!1789 = !{!1790, !1809, !1813, !1817, !1821, !1822, !1823, !1827, !1846}
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1788, file: !1134, line: 524, baseType: !1791, size: 32)
!1791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1792, size: 32)
!1792 = !DISubroutineType(types: !1793)
!1793 = !{!103, !1794, !1174, !1175}
!1794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1795, size: 32)
!1795 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1796)
!1796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !429, line: 378, size: 192, elements: !1797)
!1797 = !{!1798, !1799, !1800, !1801, !1807, !1808}
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1796, file: !429, line: 380, baseType: !337, size: 32)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1796, file: !429, line: 382, baseType: !13, size: 32, offset: 32)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1796, file: !429, line: 384, baseType: !13, size: 32, offset: 64)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1796, file: !429, line: 386, baseType: !1802, size: 32, offset: 96)
!1802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1803, size: 32)
!1803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !429, line: 351, size: 16, elements: !1804)
!1804 = !{!1805, !1806}
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1803, file: !429, line: 359, baseType: !185, size: 8)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1803, file: !429, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1796, file: !429, line: 388, baseType: !102, size: 32, offset: 128)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1796, file: !429, line: 396, baseType: !442, size: 32, offset: 160)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1788, file: !1134, line: 530, baseType: !1810, size: 32, offset: 32)
!1810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1811, size: 32)
!1811 = !DISubroutineType(types: !1812)
!1812 = !{!103, !1794, !1180}
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1788, file: !1134, line: 532, baseType: !1814, size: 32, offset: 64)
!1814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1815, size: 32)
!1815 = !DISubroutineType(types: !1816)
!1816 = !{!103, !1794, !1186, !1181}
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1788, file: !1134, line: 535, baseType: !1818, size: 32, offset: 96)
!1818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1819, size: 32)
!1819 = !DISubroutineType(types: !1820)
!1820 = !{!103, !1794, !1186}
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1788, file: !1134, line: 537, baseType: !1818, size: 32, offset: 128)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1788, file: !1134, line: 539, baseType: !1818, size: 32, offset: 160)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1788, file: !1134, line: 541, baseType: !1824, size: 32, offset: 192)
!1824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1825, size: 32)
!1825 = !DISubroutineType(types: !1826)
!1826 = !{!103, !1794, !1174, !1133, !1139}
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1788, file: !1134, line: 544, baseType: !1828, size: 32, offset: 224)
!1828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1829, size: 32)
!1829 = !DISubroutineType(types: !1830)
!1830 = !{!103, !1794, !1831, !131}
!1831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1832, size: 32)
!1832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1134, line: 478, size: 96, elements: !1833)
!1833 = !{!1834, !1840, !1845}
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1832, file: !1134, line: 482, baseType: !1835, size: 32)
!1835 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1206, line: 33, baseType: !1836)
!1836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1206, line: 29, size: 32, elements: !1837)
!1837 = !{!1838}
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1836, file: !1206, line: 30, baseType: !1839, size: 32)
!1839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1836, size: 32)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1832, file: !1134, line: 485, baseType: !1841, size: 32, offset: 32)
!1841 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1134, line: 464, baseType: !1842)
!1842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1843, size: 32)
!1843 = !DISubroutineType(types: !1844)
!1844 = !{null, !1794, !1831, !1186}
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1832, file: !1134, line: 493, baseType: !1186, size: 32, offset: 64)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1788, file: !1134, line: 547, baseType: !1847, size: 32, offset: 256)
!1847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1848, size: 32)
!1848 = !DISubroutineType(types: !1849)
!1849 = !{!108, !1794}
!1850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1851, size: 32)
!1851 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1852)
!1852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1134, line: 428, size: 32, elements: !1853)
!1853 = !{!1854}
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1852, file: !1134, line: 434, baseType: !1186, size: 32)
!1855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1856, size: 32)
!1856 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1857)
!1857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1134, line: 441, size: 32, elements: !1858)
!1858 = !{!1859}
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1857, file: !1134, line: 447, baseType: !1186, size: 32)
!1860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1857, size: 32)
!1861 = !{!1862, !1780}
!1862 = !DIGlobalVariableExpression(var: !1863, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1863 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1782, file: !1864, line: 37, type: !1865, isLocal: true, isDefinition: true)
!1864 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1865 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !132)
!1866 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1867, size: 352, elements: !1868)
!1867 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1794)
!1868 = !{!1869}
!1869 = !DISubrange(count: 11)
!1870 = !DIGlobalVariableExpression(var: !1871, expr: !DIExpression())
!1871 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1872, file: !1912, line: 139, type: !1919, isLocal: false, isDefinition: true)
!1872 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1873, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1874, globals: !1909, splitDebugInlining: false, nameTableKind: None)
!1873 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!1874 = !{!1875}
!1875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1876, size: 32)
!1876 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !405, line: 532, baseType: !1877)
!1877 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 500, size: 1088, elements: !1878)
!1878 = !{!1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908}
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1877, file: !405, line: 502, baseType: !409, size: 32)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1877, file: !405, line: 503, baseType: !409, size: 32, offset: 32)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1877, file: !405, line: 504, baseType: !409, size: 32, offset: 64)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1877, file: !405, line: 505, baseType: !409, size: 32, offset: 96)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1877, file: !405, line: 506, baseType: !409, size: 32, offset: 128)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1877, file: !405, line: 507, baseType: !409, size: 32, offset: 160)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1877, file: !405, line: 508, baseType: !409, size: 32, offset: 192)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1877, file: !405, line: 509, baseType: !108, size: 32, offset: 224)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1877, file: !405, line: 510, baseType: !409, size: 32, offset: 256)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1877, file: !405, line: 511, baseType: !409, size: 32, offset: 288)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1877, file: !405, line: 512, baseType: !960, size: 64, offset: 320)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1877, file: !405, line: 513, baseType: !409, size: 32, offset: 384)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1877, file: !405, line: 514, baseType: !409, size: 32, offset: 416)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1877, file: !405, line: 515, baseType: !409, size: 32, offset: 448)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1877, file: !405, line: 516, baseType: !108, size: 32, offset: 480)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1877, file: !405, line: 517, baseType: !409, size: 32, offset: 512)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1877, file: !405, line: 518, baseType: !409, size: 32, offset: 544)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1877, file: !405, line: 519, baseType: !960, size: 64, offset: 576)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1877, file: !405, line: 520, baseType: !409, size: 32, offset: 640)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1877, file: !405, line: 521, baseType: !409, size: 32, offset: 672)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1877, file: !405, line: 522, baseType: !409, size: 32, offset: 704)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1877, file: !405, line: 523, baseType: !108, size: 32, offset: 736)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1877, file: !405, line: 524, baseType: !409, size: 32, offset: 768)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1877, file: !405, line: 525, baseType: !409, size: 32, offset: 800)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1877, file: !405, line: 526, baseType: !960, size: 64, offset: 832)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1877, file: !405, line: 527, baseType: !409, size: 32, offset: 896)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1877, file: !405, line: 528, baseType: !409, size: 32, offset: 928)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1877, file: !405, line: 529, baseType: !960, size: 64, offset: 960)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1877, file: !405, line: 530, baseType: !409, size: 32, offset: 1024)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1877, file: !405, line: 531, baseType: !409, size: 32, offset: 1056)
!1909 = !{!1910, !1913, !1870}
!1910 = !DIGlobalVariableExpression(var: !1911, expr: !DIExpression())
!1911 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1872, file: !1912, line: 137, type: !108, isLocal: false, isDefinition: true)
!1912 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1913 = !DIGlobalVariableExpression(var: !1914, expr: !DIExpression())
!1914 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1872, file: !1912, line: 138, type: !1915, isLocal: false, isDefinition: true)
!1915 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1916, size: 128, elements: !1917)
!1916 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !185)
!1917 = !{!1918}
!1918 = !DISubrange(count: 16)
!1919 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1916, size: 64, elements: !1586)
!1920 = !DIGlobalVariableExpression(var: !1921, expr: !DIExpression())
!1921 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1922, file: !1925, line: 23, type: !1926, isLocal: false, isDefinition: true)
!1922 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1923, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !392, globals: !1924, splitDebugInlining: false, nameTableKind: None)
!1923 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!1924 = !{!1920}
!1925 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1926 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!1927 = !DIGlobalVariableExpression(var: !1928, expr: !DIExpression())
!1928 = distinct !DIGlobalVariable(name: "log_const_os", scope: !1929, file: !1933, line: 37, type: !2182, isLocal: false, isDefinition: true)
!1929 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1930, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1931, retainedTypes: !1940, globals: !2013, splitDebugInlining: false, nameTableKind: None)
!1930 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!1931 = !{!1932, !30, !705}
!1932 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1933, line: 63, baseType: !32, size: 32, elements: !1934)
!1933 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1934 = !{!1935, !1936, !1937, !1938, !1939}
!1935 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1936 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1937 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1938 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1939 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1940 = !{!22, !132, !102, !103, !1941, !277, !108, !1971, !331, !185, !1996}
!1941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1942, size: 32)
!1942 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1943)
!1943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1944, line: 51, size: 64, elements: !1945)
!1944 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1945 = !{!1946, !1966}
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1943, file: !1944, line: 52, baseType: !1947, size: 32)
!1947 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1944, line: 38, baseType: !1948)
!1948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1949, size: 32)
!1949 = !DISubroutineType(types: !1950)
!1950 = !{!103, !1951, !379, !121}
!1951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1952, size: 32)
!1952 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1953)
!1953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !429, line: 378, size: 192, elements: !1954)
!1954 = !{!1955, !1956, !1957, !1958, !1964, !1965}
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1953, file: !429, line: 380, baseType: !337, size: 32)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1953, file: !429, line: 382, baseType: !13, size: 32, offset: 32)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1953, file: !429, line: 384, baseType: !13, size: 32, offset: 64)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1953, file: !429, line: 386, baseType: !1959, size: 32, offset: 96)
!1959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1960, size: 32)
!1960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !429, line: 351, size: 16, elements: !1961)
!1961 = !{!1962, !1963}
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1960, file: !429, line: 359, baseType: !185, size: 8)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1960, file: !429, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1953, file: !429, line: 388, baseType: !102, size: 32, offset: 128)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1953, file: !429, line: 396, baseType: !442, size: 32, offset: 160)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1943, file: !1944, line: 53, baseType: !1967, size: 32, offset: 32)
!1967 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1944, line: 47, baseType: !1968)
!1968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1969, size: 32)
!1969 = !DISubroutineType(types: !1970)
!1970 = !{!103, !1951, !379, !121, !108}
!1971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1972, size: 32)
!1972 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !624, line: 468, baseType: !1973)
!1973 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 445, size: 1120, elements: !1974)
!1974 = !{!1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995}
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1973, file: !624, line: 447, baseType: !628, size: 32)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1973, file: !624, line: 448, baseType: !409, size: 32, offset: 32)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1973, file: !624, line: 449, baseType: !409, size: 32, offset: 64)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1973, file: !624, line: 450, baseType: !409, size: 32, offset: 96)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1973, file: !624, line: 451, baseType: !409, size: 32, offset: 128)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1973, file: !624, line: 452, baseType: !409, size: 32, offset: 160)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1973, file: !624, line: 453, baseType: !1723, size: 96, offset: 192)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1973, file: !624, line: 454, baseType: !409, size: 32, offset: 288)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1973, file: !624, line: 455, baseType: !409, size: 32, offset: 320)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1973, file: !624, line: 456, baseType: !409, size: 32, offset: 352)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1973, file: !624, line: 457, baseType: !409, size: 32, offset: 384)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1973, file: !624, line: 458, baseType: !409, size: 32, offset: 416)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1973, file: !624, line: 459, baseType: !409, size: 32, offset: 448)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1973, file: !624, line: 460, baseType: !409, size: 32, offset: 480)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1973, file: !624, line: 461, baseType: !1734, size: 64, offset: 512)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1973, file: !624, line: 462, baseType: !628, size: 32, offset: 576)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1973, file: !624, line: 463, baseType: !628, size: 32, offset: 608)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1973, file: !624, line: 464, baseType: !1738, size: 128, offset: 640)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1973, file: !624, line: 465, baseType: !1740, size: 160, offset: 768)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1973, file: !624, line: 466, baseType: !1742, size: 160, offset: 928)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1973, file: !624, line: 467, baseType: !409, size: 32, offset: 1088)
!1996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1997, size: 32)
!1997 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !624, line: 426, baseType: !1998)
!1998 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 411, size: 28704, elements: !1999)
!1999 = !{!2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012}
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1998, file: !624, line: 413, baseType: !1686, size: 256)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1998, file: !624, line: 414, baseType: !1688, size: 768, offset: 256)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1998, file: !624, line: 415, baseType: !1686, size: 256, offset: 1024)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1998, file: !624, line: 416, baseType: !1688, size: 768, offset: 1280)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1998, file: !624, line: 417, baseType: !1686, size: 256, offset: 2048)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1998, file: !624, line: 418, baseType: !1688, size: 768, offset: 2304)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1998, file: !624, line: 419, baseType: !1686, size: 256, offset: 3072)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1998, file: !624, line: 420, baseType: !1688, size: 768, offset: 3328)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1998, file: !624, line: 421, baseType: !1686, size: 256, offset: 4096)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1998, file: !624, line: 422, baseType: !1699, size: 1792, offset: 4352)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1998, file: !624, line: 423, baseType: !1703, size: 1920, offset: 6144)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1998, file: !624, line: 424, baseType: !1708, size: 20608, offset: 8064)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1998, file: !624, line: 425, baseType: !409, size: 32, offset: 28672)
!2013 = !{!1927, !2014, !2136, !2142, !2144, !2147, !2152, !2154, !2159}
!2014 = !DIGlobalVariableExpression(var: !2015, expr: !DIExpression())
!2015 = distinct !DIGlobalVariable(name: "_kernel", scope: !1929, file: !1933, line: 40, type: !2016, isLocal: false, isDefinition: true)
!2016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !141, line: 158, size: 288, elements: !2017)
!2017 = !{!2018, !2131}
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2016, file: !141, line: 159, baseType: !2019, size: 192)
!2019 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2020, size: 192, elements: !606)
!2020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !141, line: 100, size: 192, elements: !2021)
!2021 = !{!2022, !2023, !2024, !2125, !2126, !2127, !2128}
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2020, file: !141, line: 102, baseType: !108, size: 32)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2020, file: !141, line: 105, baseType: !277, size: 32, offset: 32)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2020, file: !141, line: 108, baseType: !2025, size: 32, offset: 64)
!2025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2026, size: 32)
!2026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !2027)
!2027 = !{!2028, !2086, !2098, !2099, !2100, !2101, !2107, !2120}
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2026, file: !163, line: 247, baseType: !2029, size: 384)
!2029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !2030)
!2030 = !{!2031, !2055, !2062, !2063, !2064, !2073, !2074, !2075}
!2031 = !DIDerivedType(tag: DW_TAG_member, scope: !2029, file: !163, line: 60, baseType: !2032, size: 64)
!2032 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2029, file: !163, line: 60, size: 64, elements: !2033)
!2033 = !{!2034, !2049}
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2032, file: !163, line: 61, baseType: !2035, size: 64)
!2035 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !2036)
!2036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !2037)
!2037 = !{!2038, !2044}
!2038 = !DIDerivedType(tag: DW_TAG_member, scope: !2036, file: !146, line: 38, baseType: !2039, size: 32)
!2039 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2036, file: !146, line: 38, size: 32, elements: !2040)
!2040 = !{!2041, !2043}
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2039, file: !146, line: 39, baseType: !2042, size: 32)
!2042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2036, size: 32)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2039, file: !146, line: 40, baseType: !2042, size: 32)
!2044 = !DIDerivedType(tag: DW_TAG_member, scope: !2036, file: !146, line: 42, baseType: !2045, size: 32, offset: 32)
!2045 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2036, file: !146, line: 42, size: 32, elements: !2046)
!2046 = !{!2047, !2048}
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2045, file: !146, line: 43, baseType: !2042, size: 32)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2045, file: !146, line: 44, baseType: !2042, size: 32)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2032, file: !163, line: 62, baseType: !2050, size: 64)
!2050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !2051)
!2051 = !{!2052}
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2050, file: !175, line: 50, baseType: !2053, size: 64)
!2053 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2054, size: 64, elements: !180)
!2054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2050, size: 32)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2029, file: !163, line: 68, baseType: !2056, size: 32, offset: 64)
!2056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2057, size: 32)
!2057 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !2058)
!2058 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !2059)
!2059 = !{!2060}
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2058, file: !141, line: 232, baseType: !2061, size: 64)
!2061 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !2036)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2029, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2029, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!2064 = !DIDerivedType(tag: DW_TAG_member, scope: !2029, file: !163, line: 90, baseType: !2065, size: 16, offset: 112)
!2065 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2029, file: !163, line: 90, size: 16, elements: !2066)
!2066 = !{!2067, !2072}
!2067 = !DIDerivedType(tag: DW_TAG_member, scope: !2065, file: !163, line: 91, baseType: !2068, size: 16)
!2068 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2065, file: !163, line: 91, size: 16, elements: !2069)
!2069 = !{!2070, !2071}
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2068, file: !163, line: 96, baseType: !195, size: 8)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2068, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2065, file: !163, line: 100, baseType: !121, size: 16)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2029, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2029, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2029, file: !163, line: 131, baseType: !2076, size: 192, offset: 192)
!2076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !2077)
!2077 = !{!2078, !2079, !2085}
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2076, file: !141, line: 245, baseType: !2035, size: 64)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2076, file: !141, line: 246, baseType: !2080, size: 32, offset: 64)
!2080 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !2081)
!2081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2082, size: 32)
!2082 = !DISubroutineType(types: !2083)
!2083 = !{null, !2084}
!2084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2076, size: 32)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2076, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2026, file: !163, line: 250, baseType: !2087, size: 288, offset: 384)
!2087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !2088)
!2088 = !{!2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097}
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2087, file: !214, line: 26, baseType: !108, size: 32)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2087, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2087, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2087, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2087, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2087, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2087, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2087, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2087, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2026, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2026, file: !163, line: 256, baseType: !2057, size: 64, offset: 704)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2026, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2026, file: !163, line: 300, baseType: !2102, size: 96, offset: 800)
!2102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !2103)
!2103 = !{!2104, !2105, !2106}
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2102, file: !163, line: 153, baseType: !22, size: 32)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2102, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2102, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2026, file: !163, line: 325, baseType: !2108, size: 32, offset: 896)
!2108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2109, size: 32)
!2109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !2110)
!2110 = !{!2111, !2117, !2118}
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2109, file: !137, line: 5074, baseType: !2112, size: 96)
!2112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !2113)
!2113 = !{!2114, !2115, !2116}
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2112, file: !240, line: 57, baseType: !243, size: 32)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2112, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2112, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2109, file: !137, line: 5075, baseType: !2057, size: 64, offset: 96)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2109, file: !137, line: 5076, baseType: !2119, offset: 160)
!2119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2026, file: !163, line: 343, baseType: !2121, size: 64, offset: 928)
!2121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !2122)
!2122 = !{!2123, !2124}
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2121, file: !214, line: 63, baseType: !108, size: 32)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2121, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2020, file: !141, line: 111, baseType: !2025, size: 32, offset: 96)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2020, file: !141, line: 124, baseType: !103, size: 32, offset: 128)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2020, file: !141, line: 127, baseType: !185, size: 8, offset: 160)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2020, file: !141, line: 153, baseType: !2129, offset: 168)
!2129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2130, line: 33, elements: !251)
!2130 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2016, file: !141, line: 170, baseType: !2132, size: 96, offset: 192)
!2132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !141, line: 83, size: 96, elements: !2133)
!2133 = !{!2134, !2135}
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2132, file: !141, line: 86, baseType: !2025, size: 32)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2132, file: !141, line: 90, baseType: !2061, size: 64, offset: 32)
!2136 = !DIGlobalVariableExpression(var: !2137, expr: !DIExpression())
!2137 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1929, file: !1933, line: 43, type: !2138, isLocal: false, isDefinition: true, align: 512)
!2138 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2139, size: 8704, elements: !346)
!2139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !316, line: 47, size: 8, elements: !2140)
!2140 = !{!2141}
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2139, file: !316, line: 48, baseType: !278, size: 8)
!2142 = !DIGlobalVariableExpression(var: !2143, expr: !DIExpression())
!2143 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1929, file: !1933, line: 44, type: !2026, isLocal: false, isDefinition: true)
!2144 = !DIGlobalVariableExpression(var: !2145, expr: !DIExpression())
!2145 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1929, file: !1933, line: 48, type: !2146, isLocal: false, isDefinition: true)
!2146 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2026, size: 1024, elements: !606)
!2147 = !DIGlobalVariableExpression(var: !2148, expr: !DIExpression())
!2148 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1929, file: !1933, line: 86, type: !2149, isLocal: false, isDefinition: true, align: 512)
!2149 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2139, size: 16896, elements: !2150)
!2150 = !{!607, !2151}
!2151 = !DISubrange(count: 2112)
!2152 = !DIGlobalVariableExpression(var: !2153, expr: !DIExpression())
!2153 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1929, file: !1933, line: 217, type: !131, isLocal: false, isDefinition: true)
!2154 = !DIGlobalVariableExpression(var: !2155, expr: !DIExpression())
!2155 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1929, file: !1933, line: 50, type: !2156, isLocal: true, isDefinition: true, align: 512)
!2156 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2139, size: 3072, elements: !2157)
!2157 = !{!607, !2158}
!2158 = !DISubrange(count: 384)
!2159 = !DIGlobalVariableExpression(var: !2160, expr: !DIExpression())
!2160 = distinct !DIGlobalVariable(name: "levels", scope: !2161, file: !1933, line: 232, type: !2181, isLocal: true, isDefinition: true)
!2161 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1933, file: !1933, line: 230, type: !2162, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !2164)
!2162 = !DISubroutineType(types: !2163)
!2163 = !{null, !1932}
!2164 = !{!2165, !2166, !2176, !2180}
!2165 = !DILocalVariable(name: "level", arg: 1, scope: !2161, file: !1933, line: 230, type: !1932)
!2166 = !DILocalVariable(name: "entry", scope: !2161, file: !1933, line: 244, type: !2167)
!2167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2168, size: 32)
!2168 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2169)
!2169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !420, line: 51, size: 64, elements: !2170)
!2170 = !{!2171, !2175}
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2169, file: !420, line: 60, baseType: !2172, size: 32)
!2172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2173, size: 32)
!2173 = !DISubroutineType(types: !2174)
!2174 = !{!103, !1951}
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2169, file: !420, line: 65, baseType: !1951, size: 32, offset: 32)
!2176 = !DILocalVariable(name: "dev", scope: !2177, file: !1933, line: 247, type: !1951)
!2177 = distinct !DILexicalBlock(scope: !2178, file: !1933, line: 246, column: 64)
!2178 = distinct !DILexicalBlock(scope: !2179, file: !1933, line: 246, column: 2)
!2179 = distinct !DILexicalBlock(scope: !2161, file: !1933, line: 246, column: 2)
!2180 = !DILocalVariable(name: "rc", scope: !2177, file: !1933, line: 248, type: !103)
!2181 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2167, size: 192, elements: !1301)
!2182 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2183)
!2183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !384, line: 16, size: 64, elements: !2184)
!2184 = !{!2185, !2186}
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2183, file: !384, line: 17, baseType: !337, size: 32)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2183, file: !384, line: 18, baseType: !185, size: 8, offset: 32)
!2187 = !DIGlobalVariableExpression(var: !2188, expr: !DIExpression())
!2188 = distinct !DIGlobalVariable(name: "states_str", scope: !2189, file: !2190, line: 276, type: !2311, isLocal: true, isDefinition: true)
!2189 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2190, file: !2190, line: 271, type: !2191, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !2302)
!2190 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2191 = !DISubroutineType(types: !2192)
!2192 = !{!337, !2193, !277, !132}
!2193 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !163, line: 347, baseType: !2194)
!2194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2195, size: 32)
!2195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !2196)
!2196 = !{!2197, !2255, !2267, !2268, !2269, !2270, !2276, !2289}
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2195, file: !163, line: 247, baseType: !2198, size: 384)
!2198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !2199)
!2199 = !{!2200, !2224, !2231, !2232, !2233, !2242, !2243, !2244}
!2200 = !DIDerivedType(tag: DW_TAG_member, scope: !2198, file: !163, line: 60, baseType: !2201, size: 64)
!2201 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2198, file: !163, line: 60, size: 64, elements: !2202)
!2202 = !{!2203, !2218}
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2201, file: !163, line: 61, baseType: !2204, size: 64)
!2204 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !2205)
!2205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !2206)
!2206 = !{!2207, !2213}
!2207 = !DIDerivedType(tag: DW_TAG_member, scope: !2205, file: !146, line: 38, baseType: !2208, size: 32)
!2208 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2205, file: !146, line: 38, size: 32, elements: !2209)
!2209 = !{!2210, !2212}
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2208, file: !146, line: 39, baseType: !2211, size: 32)
!2211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2205, size: 32)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2208, file: !146, line: 40, baseType: !2211, size: 32)
!2213 = !DIDerivedType(tag: DW_TAG_member, scope: !2205, file: !146, line: 42, baseType: !2214, size: 32, offset: 32)
!2214 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2205, file: !146, line: 42, size: 32, elements: !2215)
!2215 = !{!2216, !2217}
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2214, file: !146, line: 43, baseType: !2211, size: 32)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2214, file: !146, line: 44, baseType: !2211, size: 32)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2201, file: !163, line: 62, baseType: !2219, size: 64)
!2219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !2220)
!2220 = !{!2221}
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2219, file: !175, line: 50, baseType: !2222, size: 64)
!2222 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2223, size: 64, elements: !180)
!2223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2219, size: 32)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2198, file: !163, line: 68, baseType: !2225, size: 32, offset: 64)
!2225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2226, size: 32)
!2226 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !2227)
!2227 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !2228)
!2228 = !{!2229}
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2227, file: !141, line: 232, baseType: !2230, size: 64)
!2230 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !2205)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2198, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2198, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!2233 = !DIDerivedType(tag: DW_TAG_member, scope: !2198, file: !163, line: 90, baseType: !2234, size: 16, offset: 112)
!2234 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2198, file: !163, line: 90, size: 16, elements: !2235)
!2235 = !{!2236, !2241}
!2236 = !DIDerivedType(tag: DW_TAG_member, scope: !2234, file: !163, line: 91, baseType: !2237, size: 16)
!2237 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2234, file: !163, line: 91, size: 16, elements: !2238)
!2238 = !{!2239, !2240}
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2237, file: !163, line: 96, baseType: !195, size: 8)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2237, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2234, file: !163, line: 100, baseType: !121, size: 16)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2198, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2198, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2198, file: !163, line: 131, baseType: !2245, size: 192, offset: 192)
!2245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !2246)
!2246 = !{!2247, !2248, !2254}
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2245, file: !141, line: 245, baseType: !2204, size: 64)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2245, file: !141, line: 246, baseType: !2249, size: 32, offset: 64)
!2249 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !2250)
!2250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2251, size: 32)
!2251 = !DISubroutineType(types: !2252)
!2252 = !{null, !2253}
!2253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2245, size: 32)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2245, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2195, file: !163, line: 250, baseType: !2256, size: 288, offset: 384)
!2256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !2257)
!2257 = !{!2258, !2259, !2260, !2261, !2262, !2263, !2264, !2265, !2266}
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2256, file: !214, line: 26, baseType: !108, size: 32)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2256, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2256, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2256, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2256, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2256, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2256, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2256, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2256, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2195, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2195, file: !163, line: 256, baseType: !2226, size: 64, offset: 704)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2195, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2195, file: !163, line: 300, baseType: !2271, size: 96, offset: 800)
!2271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !2272)
!2272 = !{!2273, !2274, !2275}
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2271, file: !163, line: 153, baseType: !22, size: 32)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2271, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2271, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2195, file: !163, line: 325, baseType: !2277, size: 32, offset: 896)
!2277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2278, size: 32)
!2278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !2279)
!2279 = !{!2280, !2286, !2287}
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2278, file: !137, line: 5074, baseType: !2281, size: 96)
!2281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !2282)
!2282 = !{!2283, !2284, !2285}
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2281, file: !240, line: 57, baseType: !243, size: 32)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2281, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2281, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2278, file: !137, line: 5075, baseType: !2226, size: 64, offset: 96)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2278, file: !137, line: 5076, baseType: !2288, offset: 160)
!2288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2195, file: !163, line: 343, baseType: !2290, size: 64, offset: 928)
!2290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !2291)
!2291 = !{!2292, !2293}
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2290, file: !214, line: 63, baseType: !108, size: 32)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2290, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!2294 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2295, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2296, globals: !2298, splitDebugInlining: false, nameTableKind: None)
!2295 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!2296 = !{!102, !337, !104, !185, !103, !2297, !24, !132, !277, !22, !108, !109}
!2297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2204, size: 32)
!2298 = !{!2187, !2299}
!2299 = !DIGlobalVariableExpression(var: !2300, expr: !DIExpression())
!2300 = distinct !DIGlobalVariable(name: "states_sz", scope: !2189, file: !2190, line: 279, type: !2301, isLocal: true, isDefinition: true)
!2301 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1865, size: 256, elements: !1586)
!2302 = !{!2303, !2304, !2305, !2306, !2307, !2308, !2309}
!2303 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2189, file: !2190, line: 271, type: !2193)
!2304 = !DILocalVariable(name: "buf", arg: 2, scope: !2189, file: !2190, line: 271, type: !277)
!2305 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2189, file: !2190, line: 271, type: !132)
!2306 = !DILocalVariable(name: "off", scope: !2189, file: !2190, line: 273, type: !132)
!2307 = !DILocalVariable(name: "bit", scope: !2189, file: !2190, line: 274, type: !185)
!2308 = !DILocalVariable(name: "thread_state", scope: !2189, file: !2190, line: 275, type: !185)
!2309 = !DILocalVariable(name: "index", scope: !2310, file: !2190, line: 293, type: !185)
!2310 = distinct !DILexicalBlock(scope: !2189, file: !2190, line: 293, column: 2)
!2311 = !DICompositeType(tag: DW_TAG_array_type, baseType: !337, size: 256, elements: !1586)
!2312 = !DIGlobalVariableExpression(var: !2313, expr: !DIExpression())
!2313 = distinct !DIGlobalVariable(name: "lock", scope: !2314, file: !2419, line: 47, type: !2412, isLocal: true, isDefinition: true)
!2314 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2315, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2316, globals: !2418, splitDebugInlining: false, nameTableKind: None)
!2315 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!2316 = !{!131, !102, !103, !2317, !2332}
!2317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2318, size: 32)
!2318 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !2319)
!2319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !2320)
!2320 = !{!2321, !2327}
!2321 = !DIDerivedType(tag: DW_TAG_member, scope: !2319, file: !146, line: 38, baseType: !2322, size: 32)
!2322 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2319, file: !146, line: 38, size: 32, elements: !2323)
!2323 = !{!2324, !2326}
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2322, file: !146, line: 39, baseType: !2325, size: 32)
!2325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2319, size: 32)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2322, file: !146, line: 40, baseType: !2325, size: 32)
!2327 = !DIDerivedType(tag: DW_TAG_member, scope: !2319, file: !146, line: 42, baseType: !2328, size: 32, offset: 32)
!2328 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2319, file: !146, line: 42, size: 32, elements: !2329)
!2329 = !{!2330, !2331}
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2328, file: !146, line: 43, baseType: !2325, size: 32)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2328, file: !146, line: 44, baseType: !2325, size: 32)
!2332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2333, size: 32)
!2333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !2334)
!2334 = !{!2335, !2379, !2391, !2392, !2393, !2394, !2400, !2413}
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2333, file: !163, line: 247, baseType: !2336, size: 384)
!2336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !2337)
!2337 = !{!2338, !2348, !2355, !2356, !2357, !2366, !2367, !2368}
!2338 = !DIDerivedType(tag: DW_TAG_member, scope: !2336, file: !163, line: 60, baseType: !2339, size: 64)
!2339 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2336, file: !163, line: 60, size: 64, elements: !2340)
!2340 = !{!2341, !2342}
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2339, file: !163, line: 61, baseType: !2318, size: 64)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2339, file: !163, line: 62, baseType: !2343, size: 64)
!2343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !2344)
!2344 = !{!2345}
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2343, file: !175, line: 50, baseType: !2346, size: 64)
!2346 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2347, size: 64, elements: !180)
!2347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2343, size: 32)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2336, file: !163, line: 68, baseType: !2349, size: 32, offset: 64)
!2349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2350, size: 32)
!2350 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !2351)
!2351 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !2352)
!2352 = !{!2353}
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2351, file: !141, line: 232, baseType: !2354, size: 64)
!2354 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !2319)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2336, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2336, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!2357 = !DIDerivedType(tag: DW_TAG_member, scope: !2336, file: !163, line: 90, baseType: !2358, size: 16, offset: 112)
!2358 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2336, file: !163, line: 90, size: 16, elements: !2359)
!2359 = !{!2360, !2365}
!2360 = !DIDerivedType(tag: DW_TAG_member, scope: !2358, file: !163, line: 91, baseType: !2361, size: 16)
!2361 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2358, file: !163, line: 91, size: 16, elements: !2362)
!2362 = !{!2363, !2364}
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2361, file: !163, line: 96, baseType: !195, size: 8)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2361, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2358, file: !163, line: 100, baseType: !121, size: 16)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2336, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2336, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2336, file: !163, line: 131, baseType: !2369, size: 192, offset: 192)
!2369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !2370)
!2370 = !{!2371, !2372, !2378}
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2369, file: !141, line: 245, baseType: !2318, size: 64)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2369, file: !141, line: 246, baseType: !2373, size: 32, offset: 64)
!2373 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !2374)
!2374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2375, size: 32)
!2375 = !DISubroutineType(types: !2376)
!2376 = !{null, !2377}
!2377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2369, size: 32)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2369, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2333, file: !163, line: 250, baseType: !2380, size: 288, offset: 384)
!2380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !2381)
!2381 = !{!2382, !2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390}
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2380, file: !214, line: 26, baseType: !108, size: 32)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2380, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2380, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2380, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2380, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2380, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2380, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2380, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2380, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2333, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2333, file: !163, line: 256, baseType: !2350, size: 64, offset: 704)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2333, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2333, file: !163, line: 300, baseType: !2395, size: 96, offset: 800)
!2395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !2396)
!2396 = !{!2397, !2398, !2399}
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2395, file: !163, line: 153, baseType: !22, size: 32)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2395, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2395, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2333, file: !163, line: 325, baseType: !2401, size: 32, offset: 896)
!2401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2402, size: 32)
!2402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !2403)
!2403 = !{!2404, !2410, !2411}
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2402, file: !137, line: 5074, baseType: !2405, size: 96)
!2405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !2406)
!2406 = !{!2407, !2408, !2409}
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2405, file: !240, line: 57, baseType: !243, size: 32)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2405, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2405, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2402, file: !137, line: 5075, baseType: !2350, size: 64, offset: 96)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2402, file: !137, line: 5076, baseType: !2412, offset: 160)
!2412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2333, file: !163, line: 343, baseType: !2414, size: 64, offset: 928)
!2414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !2415)
!2415 = !{!2416, !2417}
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2414, file: !214, line: 63, baseType: !108, size: 32)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2414, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!2418 = !{!2312}
!2419 = !DIFile(filename: "zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2420 = !DIGlobalVariableExpression(var: !2421, expr: !DIExpression())
!2421 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2422, file: !2530, line: 56, type: !2519, isLocal: false, isDefinition: true)
!2422 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2423, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2424, globals: !2527, splitDebugInlining: false, nameTableKind: None)
!2423 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!2424 = !{!2425, !277, !102, !2525, !379, !104, !331, !103, !108, !109, !2526}
!2425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2426, size: 32)
!2426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !2427)
!2427 = !{!2428, !2486, !2498, !2499, !2500, !2501, !2507, !2520}
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2426, file: !163, line: 247, baseType: !2429, size: 384)
!2429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !2430)
!2430 = !{!2431, !2455, !2462, !2463, !2464, !2473, !2474, !2475}
!2431 = !DIDerivedType(tag: DW_TAG_member, scope: !2429, file: !163, line: 60, baseType: !2432, size: 64)
!2432 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2429, file: !163, line: 60, size: 64, elements: !2433)
!2433 = !{!2434, !2449}
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2432, file: !163, line: 61, baseType: !2435, size: 64)
!2435 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !2436)
!2436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !2437)
!2437 = !{!2438, !2444}
!2438 = !DIDerivedType(tag: DW_TAG_member, scope: !2436, file: !146, line: 38, baseType: !2439, size: 32)
!2439 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2436, file: !146, line: 38, size: 32, elements: !2440)
!2440 = !{!2441, !2443}
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2439, file: !146, line: 39, baseType: !2442, size: 32)
!2442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2436, size: 32)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2439, file: !146, line: 40, baseType: !2442, size: 32)
!2444 = !DIDerivedType(tag: DW_TAG_member, scope: !2436, file: !146, line: 42, baseType: !2445, size: 32, offset: 32)
!2445 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2436, file: !146, line: 42, size: 32, elements: !2446)
!2446 = !{!2447, !2448}
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2445, file: !146, line: 43, baseType: !2442, size: 32)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2445, file: !146, line: 44, baseType: !2442, size: 32)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2432, file: !163, line: 62, baseType: !2450, size: 64)
!2450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !2451)
!2451 = !{!2452}
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2450, file: !175, line: 50, baseType: !2453, size: 64)
!2453 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2454, size: 64, elements: !180)
!2454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2450, size: 32)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2429, file: !163, line: 68, baseType: !2456, size: 32, offset: 64)
!2456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2457, size: 32)
!2457 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !2458)
!2458 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !2459)
!2459 = !{!2460}
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2458, file: !141, line: 232, baseType: !2461, size: 64)
!2461 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !2436)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2429, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2429, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!2464 = !DIDerivedType(tag: DW_TAG_member, scope: !2429, file: !163, line: 90, baseType: !2465, size: 16, offset: 112)
!2465 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2429, file: !163, line: 90, size: 16, elements: !2466)
!2466 = !{!2467, !2472}
!2467 = !DIDerivedType(tag: DW_TAG_member, scope: !2465, file: !163, line: 91, baseType: !2468, size: 16)
!2468 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2465, file: !163, line: 91, size: 16, elements: !2469)
!2469 = !{!2470, !2471}
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2468, file: !163, line: 96, baseType: !195, size: 8)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2468, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2465, file: !163, line: 100, baseType: !121, size: 16)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2429, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2429, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2429, file: !163, line: 131, baseType: !2476, size: 192, offset: 192)
!2476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !2477)
!2477 = !{!2478, !2479, !2485}
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2476, file: !141, line: 245, baseType: !2435, size: 64)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2476, file: !141, line: 246, baseType: !2480, size: 32, offset: 64)
!2480 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !2481)
!2481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2482, size: 32)
!2482 = !DISubroutineType(types: !2483)
!2483 = !{null, !2484}
!2484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2476, size: 32)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2476, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2426, file: !163, line: 250, baseType: !2487, size: 288, offset: 384)
!2487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !2488)
!2488 = !{!2489, !2490, !2491, !2492, !2493, !2494, !2495, !2496, !2497}
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2487, file: !214, line: 26, baseType: !108, size: 32)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2487, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2487, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2487, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2487, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2487, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2487, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2487, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2487, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2426, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2426, file: !163, line: 256, baseType: !2457, size: 64, offset: 704)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2426, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2426, file: !163, line: 300, baseType: !2502, size: 96, offset: 800)
!2502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !2503)
!2503 = !{!2504, !2505, !2506}
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2502, file: !163, line: 153, baseType: !22, size: 32)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2502, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2502, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2426, file: !163, line: 325, baseType: !2508, size: 32, offset: 896)
!2508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2509, size: 32)
!2509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !2510)
!2510 = !{!2511, !2517, !2518}
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2509, file: !137, line: 5074, baseType: !2512, size: 96)
!2512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !2513)
!2513 = !{!2514, !2515, !2516}
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2512, file: !240, line: 57, baseType: !243, size: 32)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2512, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2512, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2509, file: !137, line: 5075, baseType: !2457, size: 64, offset: 96)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2509, file: !137, line: 5076, baseType: !2519, offset: 160)
!2519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2426, file: !163, line: 343, baseType: !2521, size: 64, offset: 928)
!2521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !2522)
!2522 = !{!2523, !2524}
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2521, file: !214, line: 63, baseType: !108, size: 32)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2521, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!2525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2454, size: 32)
!2526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2435, size: 32)
!2527 = !{!2420, !2528, !2531, !2533}
!2528 = !DIGlobalVariableExpression(var: !2529, expr: !DIExpression())
!2529 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2422, file: !2530, line: 404, type: !103, isLocal: true, isDefinition: true)
!2530 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2531 = !DIGlobalVariableExpression(var: !2532, expr: !DIExpression())
!2532 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2422, file: !2530, line: 405, type: !103, isLocal: true, isDefinition: true)
!2533 = !DIGlobalVariableExpression(var: !2534, expr: !DIExpression())
!2534 = distinct !DIGlobalVariable(name: "pending_current", scope: !2422, file: !2530, line: 425, type: !2425, isLocal: true, isDefinition: true)
!2535 = !DIGlobalVariableExpression(var: !2536, expr: !DIExpression())
!2536 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2537, file: !2567, line: 15, type: !109, isLocal: true, isDefinition: true)
!2537 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2538, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2539, globals: !2564, splitDebugInlining: false, nameTableKind: None)
!2538 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!2539 = !{!104, !102, !331, !108, !109, !103, !2540, !277, !106}
!2540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2541, size: 32)
!2541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !2542)
!2542 = !{!2543, !2558, !2563}
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2541, file: !141, line: 245, baseType: !2544, size: 64)
!2544 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !2545)
!2545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !2546)
!2546 = !{!2547, !2553}
!2547 = !DIDerivedType(tag: DW_TAG_member, scope: !2545, file: !146, line: 38, baseType: !2548, size: 32)
!2548 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2545, file: !146, line: 38, size: 32, elements: !2549)
!2549 = !{!2550, !2552}
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2548, file: !146, line: 39, baseType: !2551, size: 32)
!2551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2545, size: 32)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2548, file: !146, line: 40, baseType: !2551, size: 32)
!2553 = !DIDerivedType(tag: DW_TAG_member, scope: !2545, file: !146, line: 42, baseType: !2554, size: 32, offset: 32)
!2554 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2545, file: !146, line: 42, size: 32, elements: !2555)
!2555 = !{!2556, !2557}
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2554, file: !146, line: 43, baseType: !2551, size: 32)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2554, file: !146, line: 44, baseType: !2551, size: 32)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2541, file: !141, line: 246, baseType: !2559, size: 32, offset: 64)
!2559 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !2560)
!2560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2561, size: 32)
!2561 = !DISubroutineType(types: !2562)
!2562 = !{null, !2540}
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2541, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!2564 = !{!2535, !2565, !2569, !2571}
!2565 = !DIGlobalVariableExpression(var: !2566, expr: !DIExpression())
!2566 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2537, file: !2567, line: 19, type: !2568, isLocal: true, isDefinition: true)
!2567 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!2569 = !DIGlobalVariableExpression(var: !2570, expr: !DIExpression())
!2570 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2537, file: !2567, line: 25, type: !103, isLocal: true, isDefinition: true)
!2571 = !DIGlobalVariableExpression(var: !2572, expr: !DIExpression())
!2572 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2537, file: !2567, line: 17, type: !2573, isLocal: true, isDefinition: true)
!2573 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !2545)
!2574 = !DIGlobalVariableExpression(var: !2575, expr: !DIExpression())
!2575 = distinct !DIGlobalVariable(name: "kheap__system_heap", scope: !2576, file: !2581, line: 61, type: !2611, isLocal: false, isDefinition: true, align: 64)
!2576 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2577, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !392, globals: !2578, splitDebugInlining: false, nameTableKind: None)
!2577 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mempool.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!2578 = !{!2579, !2574}
!2579 = !DIGlobalVariableExpression(var: !2580, expr: !DIExpression())
!2580 = distinct !DIGlobalVariable(name: "_system_heap", scope: !2576, file: !2581, line: 61, type: !2582, isLocal: false, isDefinition: true, align: 32)
!2581 = !DIFile(filename: "zephyr/kernel/mempool.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !2583)
!2583 = !{!2584, !2590, !2609}
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2582, file: !137, line: 5074, baseType: !2585, size: 96)
!2585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !2586)
!2586 = !{!2587, !2588, !2589}
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2585, file: !240, line: 57, baseType: !243, size: 32)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2585, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2585, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2582, file: !137, line: 5075, baseType: !2591, size: 64, offset: 96)
!2591 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !2592)
!2592 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !2593)
!2593 = !{!2594}
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2592, file: !141, line: 232, baseType: !2595, size: 64)
!2595 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !2596)
!2596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !2597)
!2597 = !{!2598, !2604}
!2598 = !DIDerivedType(tag: DW_TAG_member, scope: !2596, file: !146, line: 38, baseType: !2599, size: 32)
!2599 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2596, file: !146, line: 38, size: 32, elements: !2600)
!2600 = !{!2601, !2603}
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2599, file: !146, line: 39, baseType: !2602, size: 32)
!2602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2596, size: 32)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2599, file: !146, line: 40, baseType: !2602, size: 32)
!2604 = !DIDerivedType(tag: DW_TAG_member, scope: !2596, file: !146, line: 42, baseType: !2605, size: 32, offset: 32)
!2605 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2596, file: !146, line: 42, size: 32, elements: !2606)
!2606 = !{!2607, !2608}
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2605, file: !146, line: 43, baseType: !2602, size: 32)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2605, file: !146, line: 44, baseType: !2602, size: 32)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2582, file: !137, line: 5076, baseType: !2610, offset: 160)
!2610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!2611 = !DICompositeType(tag: DW_TAG_array_type, baseType: !278, size: 8192, elements: !2612)
!2612 = !{!2613}
!2613 = !DISubrange(count: 1024)
!2614 = !DIGlobalVariableExpression(var: !2615, expr: !DIExpression())
!2615 = distinct !DIGlobalVariable(name: "__init_statics_init_pre", scope: !2616, file: !2635, line: 55, type: !2636, isLocal: true, isDefinition: true, align: 32)
!2616 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2617, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2618, globals: !2634, splitDebugInlining: false, nameTableKind: None)
!2617 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!2618 = !{!102, !104, !103, !2619}
!2619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2620, size: 32)
!2620 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !2621)
!2621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !2622)
!2622 = !{!2623, !2629}
!2623 = !DIDerivedType(tag: DW_TAG_member, scope: !2621, file: !146, line: 38, baseType: !2624, size: 32)
!2624 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2621, file: !146, line: 38, size: 32, elements: !2625)
!2625 = !{!2626, !2628}
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2624, file: !146, line: 39, baseType: !2627, size: 32)
!2627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2621, size: 32)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2624, file: !146, line: 40, baseType: !2627, size: 32)
!2629 = !DIDerivedType(tag: DW_TAG_member, scope: !2621, file: !146, line: 42, baseType: !2630, size: 32, offset: 32)
!2630 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2621, file: !146, line: 42, size: 32, elements: !2631)
!2631 = !{!2632, !2633}
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2630, file: !146, line: 43, baseType: !2627, size: 32)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2630, file: !146, line: 44, baseType: !2627, size: 32)
!2634 = !{!2614}
!2635 = !DIFile(filename: "zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2636 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2637)
!2637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !420, line: 51, size: 64, elements: !2638)
!2638 = !{!2639, !2646}
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2637, file: !420, line: 60, baseType: !2640, size: 32)
!2640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2641, size: 32)
!2641 = !DISubroutineType(types: !2642)
!2642 = !{!103, !2643}
!2643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2644, size: 32)
!2644 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2645)
!2645 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !420, line: 48, flags: DIFlagFwdDecl)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2637, file: !420, line: 65, baseType: !2643, size: 32, offset: 32)
!2647 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2648, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !392, splitDebugInlining: false, nameTableKind: None)
!2648 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!2649 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2650, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !392, splitDebugInlining: false, nameTableKind: None)
!2650 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!2651 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2652, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2653, retainedTypes: !2661, splitDebugInlining: false, nameTableKind: None)
!2652 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!2653 = !{!30, !2654}
!2654 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !2655, line: 54, baseType: !32, size: 32, elements: !2656)
!2655 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2656 = !{!2657, !2658, !2659, !2660}
!2657 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!2658 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!2659 = !DIEnumerator(name: "FREE_PREV", value: 2)
!2660 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!2661 = !{!102, !132, !379, !24, !2662, !22, !2668, !103, !986, !2683}
!2662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2663, size: 32)
!2663 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !2655, line: 58, baseType: !2664)
!2664 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2655, line: 58, size: 64, elements: !2665)
!2665 = !{!2666}
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2664, file: !2655, line: 58, baseType: !2667, size: 64)
!2667 = !DICompositeType(tag: DW_TAG_array_type, baseType: !278, size: 64, elements: !1586)
!2668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2669, size: 32)
!2669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !2655, line: 68, size: 128, elements: !2670)
!2670 = !{!2671, !2674, !2675, !2676}
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !2669, file: !2655, line: 69, baseType: !2672, size: 64)
!2672 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2673, size: 64, elements: !180)
!2673 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !2655, line: 61, baseType: !108)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !2669, file: !2655, line: 70, baseType: !2673, size: 32, offset: 64)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !2669, file: !2655, line: 71, baseType: !108, size: 32, offset: 96)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2669, file: !2655, line: 77, baseType: !2677, offset: 128)
!2677 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2678, elements: !2681)
!2678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !2655, line: 64, size: 32, elements: !2679)
!2679 = !{!2680}
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2678, file: !2655, line: 65, baseType: !2673, size: 32)
!2681 = !{!2682}
!2682 = !DISubrange(count: 0)
!2683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 32)
!2684 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2685, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2686, retainedTypes: !2706, splitDebugInlining: false, nameTableKind: None)
!2685 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!2686 = !{!2687, !2695}
!2687 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2688, line: 69, baseType: !32, size: 32, elements: !2689)
!2688 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2689 = !{!2690, !2691, !2692, !2693, !2694}
!2690 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2691 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2692 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2693 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2694 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2695 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2688, line: 56, baseType: !32, size: 32, elements: !2696)
!2696 = !{!2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705}
!2697 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2698 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2699 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2700 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2701 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2702 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2703 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2704 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2705 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2706 = !{!103, !2687, !2695, !2707, !196, !446, !2709, !2710, !186, !122, !337, !132, !102, !22, !32, !374, !2712, !2713, !376, !375, !107, !377, !2708, !2714, !2715, !2716, !2717}
!2707 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2688, line: 31, baseType: !2708)
!2708 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !107)
!2709 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !133, line: 329, baseType: !32)
!2710 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2688, line: 32, baseType: !2711)
!2711 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !110)
!2712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 32)
!2713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !446, size: 32)
!2714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2708, size: 32)
!2715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !132, size: 32)
!2716 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !133, line: 145, baseType: !103)
!2717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2716, size: 32)
!2718 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2719, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2719 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!2720 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2721, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2722, splitDebugInlining: false, nameTableKind: None)
!2721 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!2722 = !{!337, !186, !103, !32}
!2723 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2724, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2725, retainedTypes: !392, splitDebugInlining: false, nameTableKind: None)
!2724 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!2725 = !{!2726, !30}
!2726 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2727, line: 27, baseType: !32, size: 32, elements: !2728)
!2727 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2728 = !{!2729, !2730, !2731, !2732, !2733}
!2729 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2730 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2731 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2732 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2733 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2734 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2735, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2736, retainedTypes: !2737, splitDebugInlining: false, nameTableKind: None)
!2735 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!2736 = !{!705, !2726, !30}
!2737 = !{!892, !2738, !102, !103, !331, !108, !185, !2755}
!2738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2739, size: 32)
!2739 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !624, line: 426, baseType: !2740)
!2740 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 411, size: 28704, elements: !2741)
!2741 = !{!2742, !2743, !2744, !2745, !2746, !2747, !2748, !2749, !2750, !2751, !2752, !2753, !2754}
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2740, file: !624, line: 413, baseType: !1686, size: 256)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2740, file: !624, line: 414, baseType: !1688, size: 768, offset: 256)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2740, file: !624, line: 415, baseType: !1686, size: 256, offset: 1024)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2740, file: !624, line: 416, baseType: !1688, size: 768, offset: 1280)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2740, file: !624, line: 417, baseType: !1686, size: 256, offset: 2048)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2740, file: !624, line: 418, baseType: !1688, size: 768, offset: 2304)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2740, file: !624, line: 419, baseType: !1686, size: 256, offset: 3072)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2740, file: !624, line: 420, baseType: !1688, size: 768, offset: 3328)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2740, file: !624, line: 421, baseType: !1686, size: 256, offset: 4096)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2740, file: !624, line: 422, baseType: !1699, size: 1792, offset: 4352)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2740, file: !624, line: 423, baseType: !1703, size: 1920, offset: 6144)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2740, file: !624, line: 424, baseType: !1708, size: 20608, offset: 8064)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2740, file: !624, line: 425, baseType: !409, size: 32, offset: 28672)
!2755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2756, size: 32)
!2756 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !624, line: 468, baseType: !2757)
!2757 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 445, size: 1120, elements: !2758)
!2758 = !{!2759, !2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779}
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2757, file: !624, line: 447, baseType: !628, size: 32)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2757, file: !624, line: 448, baseType: !409, size: 32, offset: 32)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2757, file: !624, line: 449, baseType: !409, size: 32, offset: 64)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2757, file: !624, line: 450, baseType: !409, size: 32, offset: 96)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2757, file: !624, line: 451, baseType: !409, size: 32, offset: 128)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2757, file: !624, line: 452, baseType: !409, size: 32, offset: 160)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2757, file: !624, line: 453, baseType: !1723, size: 96, offset: 192)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2757, file: !624, line: 454, baseType: !409, size: 32, offset: 288)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2757, file: !624, line: 455, baseType: !409, size: 32, offset: 320)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2757, file: !624, line: 456, baseType: !409, size: 32, offset: 352)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2757, file: !624, line: 457, baseType: !409, size: 32, offset: 384)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2757, file: !624, line: 458, baseType: !409, size: 32, offset: 416)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2757, file: !624, line: 459, baseType: !409, size: 32, offset: 448)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2757, file: !624, line: 460, baseType: !409, size: 32, offset: 480)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2757, file: !624, line: 461, baseType: !1734, size: 64, offset: 512)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2757, file: !624, line: 462, baseType: !628, size: 32, offset: 576)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2757, file: !624, line: 463, baseType: !628, size: 32, offset: 608)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2757, file: !624, line: 464, baseType: !1738, size: 128, offset: 640)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2757, file: !624, line: 465, baseType: !1740, size: 160, offset: 768)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2757, file: !624, line: 466, baseType: !1742, size: 160, offset: 928)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2757, file: !624, line: 467, baseType: !409, size: 32, offset: 1088)
!2780 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2781, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !392, splitDebugInlining: false, nameTableKind: None)
!2781 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!2782 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2783, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2784, splitDebugInlining: false, nameTableKind: None)
!2783 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!2784 = !{!102, !103, !22, !2785}
!2785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2786, size: 32)
!2786 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !624, line: 468, baseType: !2787)
!2787 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 445, size: 1120, elements: !2788)
!2788 = !{!2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806, !2807, !2808, !2809}
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2787, file: !624, line: 447, baseType: !628, size: 32)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2787, file: !624, line: 448, baseType: !409, size: 32, offset: 32)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2787, file: !624, line: 449, baseType: !409, size: 32, offset: 64)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2787, file: !624, line: 450, baseType: !409, size: 32, offset: 96)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2787, file: !624, line: 451, baseType: !409, size: 32, offset: 128)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2787, file: !624, line: 452, baseType: !409, size: 32, offset: 160)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2787, file: !624, line: 453, baseType: !1723, size: 96, offset: 192)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2787, file: !624, line: 454, baseType: !409, size: 32, offset: 288)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2787, file: !624, line: 455, baseType: !409, size: 32, offset: 320)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2787, file: !624, line: 456, baseType: !409, size: 32, offset: 352)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2787, file: !624, line: 457, baseType: !409, size: 32, offset: 384)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2787, file: !624, line: 458, baseType: !409, size: 32, offset: 416)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2787, file: !624, line: 459, baseType: !409, size: 32, offset: 448)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2787, file: !624, line: 460, baseType: !409, size: 32, offset: 480)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2787, file: !624, line: 461, baseType: !1734, size: 64, offset: 512)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2787, file: !624, line: 462, baseType: !628, size: 32, offset: 576)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2787, file: !624, line: 463, baseType: !628, size: 32, offset: 608)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2787, file: !624, line: 464, baseType: !1738, size: 128, offset: 640)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2787, file: !624, line: 465, baseType: !1740, size: 160, offset: 768)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2787, file: !624, line: 466, baseType: !1742, size: 160, offset: 928)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2787, file: !624, line: 467, baseType: !409, size: 32, offset: 1088)
!2810 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2811, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2812, splitDebugInlining: false, nameTableKind: None)
!2811 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!2812 = !{!2813, !102, !103}
!2813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2814, size: 32)
!2814 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !624, line: 468, baseType: !2815)
!2815 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 445, size: 1120, elements: !2816)
!2816 = !{!2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837}
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2815, file: !624, line: 447, baseType: !628, size: 32)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2815, file: !624, line: 448, baseType: !409, size: 32, offset: 32)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2815, file: !624, line: 449, baseType: !409, size: 32, offset: 64)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2815, file: !624, line: 450, baseType: !409, size: 32, offset: 96)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2815, file: !624, line: 451, baseType: !409, size: 32, offset: 128)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2815, file: !624, line: 452, baseType: !409, size: 32, offset: 160)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2815, file: !624, line: 453, baseType: !1723, size: 96, offset: 192)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2815, file: !624, line: 454, baseType: !409, size: 32, offset: 288)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2815, file: !624, line: 455, baseType: !409, size: 32, offset: 320)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2815, file: !624, line: 456, baseType: !409, size: 32, offset: 352)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2815, file: !624, line: 457, baseType: !409, size: 32, offset: 384)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2815, file: !624, line: 458, baseType: !409, size: 32, offset: 416)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2815, file: !624, line: 459, baseType: !409, size: 32, offset: 448)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2815, file: !624, line: 460, baseType: !409, size: 32, offset: 480)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2815, file: !624, line: 461, baseType: !1734, size: 64, offset: 512)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2815, file: !624, line: 462, baseType: !628, size: 32, offset: 576)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2815, file: !624, line: 463, baseType: !628, size: 32, offset: 608)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2815, file: !624, line: 464, baseType: !1738, size: 128, offset: 640)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2815, file: !624, line: 465, baseType: !1740, size: 160, offset: 768)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2815, file: !624, line: 466, baseType: !1742, size: 160, offset: 928)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2815, file: !624, line: 467, baseType: !409, size: 32, offset: 1088)
!2838 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2839, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2840, splitDebugInlining: false, nameTableKind: None)
!2839 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!2840 = !{!2841, !108, !102, !103}
!2841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2842, size: 32)
!2842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2843, line: 98, size: 256, elements: !2844)
!2843 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2844 = !{!2845, !2850, !2855, !2860, !2865, !2870, !2875, !2880}
!2845 = !DIDerivedType(tag: DW_TAG_member, scope: !2842, file: !2843, line: 99, baseType: !2846, size: 32)
!2846 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2842, file: !2843, line: 99, size: 32, elements: !2847)
!2847 = !{!2848, !2849}
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2846, file: !2843, line: 99, baseType: !108, size: 32)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2846, file: !2843, line: 99, baseType: !108, size: 32)
!2850 = !DIDerivedType(tag: DW_TAG_member, scope: !2842, file: !2843, line: 100, baseType: !2851, size: 32, offset: 32)
!2851 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2842, file: !2843, line: 100, size: 32, elements: !2852)
!2852 = !{!2853, !2854}
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2851, file: !2843, line: 100, baseType: !108, size: 32)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2851, file: !2843, line: 100, baseType: !108, size: 32)
!2855 = !DIDerivedType(tag: DW_TAG_member, scope: !2842, file: !2843, line: 101, baseType: !2856, size: 32, offset: 64)
!2856 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2842, file: !2843, line: 101, size: 32, elements: !2857)
!2857 = !{!2858, !2859}
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2856, file: !2843, line: 101, baseType: !108, size: 32)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2856, file: !2843, line: 101, baseType: !108, size: 32)
!2860 = !DIDerivedType(tag: DW_TAG_member, scope: !2842, file: !2843, line: 102, baseType: !2861, size: 32, offset: 96)
!2861 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2842, file: !2843, line: 102, size: 32, elements: !2862)
!2862 = !{!2863, !2864}
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2861, file: !2843, line: 102, baseType: !108, size: 32)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2861, file: !2843, line: 102, baseType: !108, size: 32)
!2865 = !DIDerivedType(tag: DW_TAG_member, scope: !2842, file: !2843, line: 103, baseType: !2866, size: 32, offset: 128)
!2866 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2842, file: !2843, line: 103, size: 32, elements: !2867)
!2867 = !{!2868, !2869}
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2866, file: !2843, line: 103, baseType: !108, size: 32)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2866, file: !2843, line: 103, baseType: !108, size: 32)
!2870 = !DIDerivedType(tag: DW_TAG_member, scope: !2842, file: !2843, line: 104, baseType: !2871, size: 32, offset: 160)
!2871 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2842, file: !2843, line: 104, size: 32, elements: !2872)
!2872 = !{!2873, !2874}
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2871, file: !2843, line: 104, baseType: !108, size: 32)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2871, file: !2843, line: 104, baseType: !108, size: 32)
!2875 = !DIDerivedType(tag: DW_TAG_member, scope: !2842, file: !2843, line: 105, baseType: !2876, size: 32, offset: 192)
!2876 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2842, file: !2843, line: 105, size: 32, elements: !2877)
!2877 = !{!2878, !2879}
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2876, file: !2843, line: 105, baseType: !108, size: 32)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2876, file: !2843, line: 105, baseType: !108, size: 32)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2842, file: !2843, line: 106, baseType: !108, size: 32, offset: 224)
!2881 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2882, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2725, retainedTypes: !2883, splitDebugInlining: false, nameTableKind: None)
!2882 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!2883 = !{!2884, !102, !103, !2909, !2683, !108}
!2884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2885, size: 32)
!2885 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !624, line: 468, baseType: !2886)
!2886 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 445, size: 1120, elements: !2887)
!2887 = !{!2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905, !2906, !2907, !2908}
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2886, file: !624, line: 447, baseType: !628, size: 32)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2886, file: !624, line: 448, baseType: !409, size: 32, offset: 32)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2886, file: !624, line: 449, baseType: !409, size: 32, offset: 64)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2886, file: !624, line: 450, baseType: !409, size: 32, offset: 96)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2886, file: !624, line: 451, baseType: !409, size: 32, offset: 128)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2886, file: !624, line: 452, baseType: !409, size: 32, offset: 160)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2886, file: !624, line: 453, baseType: !1723, size: 96, offset: 192)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2886, file: !624, line: 454, baseType: !409, size: 32, offset: 288)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2886, file: !624, line: 455, baseType: !409, size: 32, offset: 320)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2886, file: !624, line: 456, baseType: !409, size: 32, offset: 352)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2886, file: !624, line: 457, baseType: !409, size: 32, offset: 384)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2886, file: !624, line: 458, baseType: !409, size: 32, offset: 416)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2886, file: !624, line: 459, baseType: !409, size: 32, offset: 448)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2886, file: !624, line: 460, baseType: !409, size: 32, offset: 480)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2886, file: !624, line: 461, baseType: !1734, size: 64, offset: 512)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2886, file: !624, line: 462, baseType: !628, size: 32, offset: 576)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2886, file: !624, line: 463, baseType: !628, size: 32, offset: 608)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2886, file: !624, line: 464, baseType: !1738, size: 128, offset: 640)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2886, file: !624, line: 465, baseType: !1740, size: 160, offset: 768)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2886, file: !624, line: 466, baseType: !1742, size: 160, offset: 928)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2886, file: !624, line: 467, baseType: !409, size: 32, offset: 1088)
!2909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2910, size: 32)
!2910 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2843, line: 141, baseType: !2911)
!2911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2843, line: 97, size: 256, elements: !2912)
!2912 = !{!2913}
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2911, file: !2843, line: 107, baseType: !2914, size: 256)
!2914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2843, line: 98, size: 256, elements: !2915)
!2915 = !{!2916, !2921, !2926, !2931, !2936, !2941, !2946, !2951}
!2916 = !DIDerivedType(tag: DW_TAG_member, scope: !2914, file: !2843, line: 99, baseType: !2917, size: 32)
!2917 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2914, file: !2843, line: 99, size: 32, elements: !2918)
!2918 = !{!2919, !2920}
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2917, file: !2843, line: 99, baseType: !108, size: 32)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2917, file: !2843, line: 99, baseType: !108, size: 32)
!2921 = !DIDerivedType(tag: DW_TAG_member, scope: !2914, file: !2843, line: 100, baseType: !2922, size: 32, offset: 32)
!2922 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2914, file: !2843, line: 100, size: 32, elements: !2923)
!2923 = !{!2924, !2925}
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2922, file: !2843, line: 100, baseType: !108, size: 32)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2922, file: !2843, line: 100, baseType: !108, size: 32)
!2926 = !DIDerivedType(tag: DW_TAG_member, scope: !2914, file: !2843, line: 101, baseType: !2927, size: 32, offset: 64)
!2927 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2914, file: !2843, line: 101, size: 32, elements: !2928)
!2928 = !{!2929, !2930}
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2927, file: !2843, line: 101, baseType: !108, size: 32)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2927, file: !2843, line: 101, baseType: !108, size: 32)
!2931 = !DIDerivedType(tag: DW_TAG_member, scope: !2914, file: !2843, line: 102, baseType: !2932, size: 32, offset: 96)
!2932 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2914, file: !2843, line: 102, size: 32, elements: !2933)
!2933 = !{!2934, !2935}
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2932, file: !2843, line: 102, baseType: !108, size: 32)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2932, file: !2843, line: 102, baseType: !108, size: 32)
!2936 = !DIDerivedType(tag: DW_TAG_member, scope: !2914, file: !2843, line: 103, baseType: !2937, size: 32, offset: 128)
!2937 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2914, file: !2843, line: 103, size: 32, elements: !2938)
!2938 = !{!2939, !2940}
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2937, file: !2843, line: 103, baseType: !108, size: 32)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2937, file: !2843, line: 103, baseType: !108, size: 32)
!2941 = !DIDerivedType(tag: DW_TAG_member, scope: !2914, file: !2843, line: 104, baseType: !2942, size: 32, offset: 160)
!2942 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2914, file: !2843, line: 104, size: 32, elements: !2943)
!2943 = !{!2944, !2945}
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2942, file: !2843, line: 104, baseType: !108, size: 32)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2942, file: !2843, line: 104, baseType: !108, size: 32)
!2946 = !DIDerivedType(tag: DW_TAG_member, scope: !2914, file: !2843, line: 105, baseType: !2947, size: 32, offset: 192)
!2947 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2914, file: !2843, line: 105, size: 32, elements: !2948)
!2948 = !{!2949, !2950}
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2947, file: !2843, line: 105, baseType: !108, size: 32)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2947, file: !2843, line: 105, baseType: !108, size: 32)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2914, file: !2843, line: 106, baseType: !108, size: 32, offset: 224)
!2952 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2953, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1671, retainedTypes: !2954, splitDebugInlining: false, nameTableKind: None)
!2953 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!2954 = !{!892, !331, !185, !108, !2955, !2972}
!2955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2956, size: 32)
!2956 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !624, line: 426, baseType: !2957)
!2957 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 411, size: 28704, elements: !2958)
!2958 = !{!2959, !2960, !2961, !2962, !2963, !2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971}
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2957, file: !624, line: 413, baseType: !1686, size: 256)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2957, file: !624, line: 414, baseType: !1688, size: 768, offset: 256)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2957, file: !624, line: 415, baseType: !1686, size: 256, offset: 1024)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2957, file: !624, line: 416, baseType: !1688, size: 768, offset: 1280)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2957, file: !624, line: 417, baseType: !1686, size: 256, offset: 2048)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2957, file: !624, line: 418, baseType: !1688, size: 768, offset: 2304)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2957, file: !624, line: 419, baseType: !1686, size: 256, offset: 3072)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2957, file: !624, line: 420, baseType: !1688, size: 768, offset: 3328)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2957, file: !624, line: 421, baseType: !1686, size: 256, offset: 4096)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2957, file: !624, line: 422, baseType: !1699, size: 1792, offset: 4352)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2957, file: !624, line: 423, baseType: !1703, size: 1920, offset: 6144)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2957, file: !624, line: 424, baseType: !1708, size: 20608, offset: 8064)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2957, file: !624, line: 425, baseType: !409, size: 32, offset: 28672)
!2972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2973, size: 32)
!2973 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !624, line: 468, baseType: !2974)
!2974 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 445, size: 1120, elements: !2975)
!2975 = !{!2976, !2977, !2978, !2979, !2980, !2981, !2982, !2983, !2984, !2985, !2986, !2987, !2988, !2989, !2990, !2991, !2992, !2993, !2994, !2995, !2996}
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2974, file: !624, line: 447, baseType: !628, size: 32)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2974, file: !624, line: 448, baseType: !409, size: 32, offset: 32)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2974, file: !624, line: 449, baseType: !409, size: 32, offset: 64)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2974, file: !624, line: 450, baseType: !409, size: 32, offset: 96)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2974, file: !624, line: 451, baseType: !409, size: 32, offset: 128)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2974, file: !624, line: 452, baseType: !409, size: 32, offset: 160)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2974, file: !624, line: 453, baseType: !1723, size: 96, offset: 192)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2974, file: !624, line: 454, baseType: !409, size: 32, offset: 288)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2974, file: !624, line: 455, baseType: !409, size: 32, offset: 320)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2974, file: !624, line: 456, baseType: !409, size: 32, offset: 352)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2974, file: !624, line: 457, baseType: !409, size: 32, offset: 384)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2974, file: !624, line: 458, baseType: !409, size: 32, offset: 416)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2974, file: !624, line: 459, baseType: !409, size: 32, offset: 448)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2974, file: !624, line: 460, baseType: !409, size: 32, offset: 480)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2974, file: !624, line: 461, baseType: !1734, size: 64, offset: 512)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2974, file: !624, line: 462, baseType: !628, size: 32, offset: 576)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2974, file: !624, line: 463, baseType: !628, size: 32, offset: 608)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2974, file: !624, line: 464, baseType: !1738, size: 128, offset: 640)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2974, file: !624, line: 465, baseType: !1740, size: 160, offset: 768)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2974, file: !624, line: 466, baseType: !1742, size: 160, offset: 928)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2974, file: !624, line: 467, baseType: !409, size: 32, offset: 1088)
!2997 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2998, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2999, splitDebugInlining: false, nameTableKind: None)
!2998 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!2999 = !{!3000, !102, !103}
!3000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3001, size: 32)
!3001 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !624, line: 468, baseType: !3002)
!3002 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 445, size: 1120, elements: !3003)
!3003 = !{!3004, !3005, !3006, !3007, !3008, !3009, !3010, !3011, !3012, !3013, !3014, !3015, !3016, !3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024}
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3002, file: !624, line: 447, baseType: !628, size: 32)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3002, file: !624, line: 448, baseType: !409, size: 32, offset: 32)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3002, file: !624, line: 449, baseType: !409, size: 32, offset: 64)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3002, file: !624, line: 450, baseType: !409, size: 32, offset: 96)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3002, file: !624, line: 451, baseType: !409, size: 32, offset: 128)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3002, file: !624, line: 452, baseType: !409, size: 32, offset: 160)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3002, file: !624, line: 453, baseType: !1723, size: 96, offset: 192)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3002, file: !624, line: 454, baseType: !409, size: 32, offset: 288)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3002, file: !624, line: 455, baseType: !409, size: 32, offset: 320)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3002, file: !624, line: 456, baseType: !409, size: 32, offset: 352)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3002, file: !624, line: 457, baseType: !409, size: 32, offset: 384)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3002, file: !624, line: 458, baseType: !409, size: 32, offset: 416)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3002, file: !624, line: 459, baseType: !409, size: 32, offset: 448)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3002, file: !624, line: 460, baseType: !409, size: 32, offset: 480)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3002, file: !624, line: 461, baseType: !1734, size: 64, offset: 512)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3002, file: !624, line: 462, baseType: !628, size: 32, offset: 576)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3002, file: !624, line: 463, baseType: !628, size: 32, offset: 608)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3002, file: !624, line: 464, baseType: !1738, size: 128, offset: 640)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3002, file: !624, line: 465, baseType: !1740, size: 160, offset: 768)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3002, file: !624, line: 466, baseType: !1742, size: 160, offset: 928)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3002, file: !624, line: 467, baseType: !409, size: 32, offset: 1088)
!3025 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3026, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3027, splitDebugInlining: false, nameTableKind: None)
!3026 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!3027 = !{!278, !277, !132, !1091, !3028, !186, !102}
!3028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3029, size: 32)
!3029 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !186)
!3030 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3031, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3032, splitDebugInlining: false, nameTableKind: None)
!3031 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!3032 = !{!3033}
!3033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3034, size: 32)
!3034 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !405, line: 532, baseType: !3035)
!3035 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 500, size: 1088, elements: !3036)
!3036 = !{!3037, !3038, !3039, !3040, !3041, !3042, !3043, !3044, !3045, !3046, !3047, !3048, !3049, !3050, !3051, !3052, !3053, !3054, !3055, !3056, !3057, !3058, !3059, !3060, !3061, !3062, !3063, !3064, !3065, !3066}
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3035, file: !405, line: 502, baseType: !409, size: 32)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3035, file: !405, line: 503, baseType: !409, size: 32, offset: 32)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3035, file: !405, line: 504, baseType: !409, size: 32, offset: 64)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3035, file: !405, line: 505, baseType: !409, size: 32, offset: 96)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3035, file: !405, line: 506, baseType: !409, size: 32, offset: 128)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3035, file: !405, line: 507, baseType: !409, size: 32, offset: 160)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3035, file: !405, line: 508, baseType: !409, size: 32, offset: 192)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3035, file: !405, line: 509, baseType: !108, size: 32, offset: 224)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3035, file: !405, line: 510, baseType: !409, size: 32, offset: 256)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3035, file: !405, line: 511, baseType: !409, size: 32, offset: 288)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3035, file: !405, line: 512, baseType: !960, size: 64, offset: 320)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3035, file: !405, line: 513, baseType: !409, size: 32, offset: 384)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3035, file: !405, line: 514, baseType: !409, size: 32, offset: 416)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3035, file: !405, line: 515, baseType: !409, size: 32, offset: 448)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3035, file: !405, line: 516, baseType: !108, size: 32, offset: 480)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3035, file: !405, line: 517, baseType: !409, size: 32, offset: 512)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3035, file: !405, line: 518, baseType: !409, size: 32, offset: 544)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3035, file: !405, line: 519, baseType: !960, size: 64, offset: 576)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3035, file: !405, line: 520, baseType: !409, size: 32, offset: 640)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3035, file: !405, line: 521, baseType: !409, size: 32, offset: 672)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3035, file: !405, line: 522, baseType: !409, size: 32, offset: 704)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3035, file: !405, line: 523, baseType: !108, size: 32, offset: 736)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3035, file: !405, line: 524, baseType: !409, size: 32, offset: 768)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3035, file: !405, line: 525, baseType: !409, size: 32, offset: 800)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3035, file: !405, line: 526, baseType: !960, size: 64, offset: 832)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3035, file: !405, line: 527, baseType: !409, size: 32, offset: 896)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3035, file: !405, line: 528, baseType: !409, size: 32, offset: 928)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3035, file: !405, line: 529, baseType: !960, size: 64, offset: 960)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3035, file: !405, line: 530, baseType: !409, size: 32, offset: 1024)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3035, file: !405, line: 531, baseType: !409, size: 32, offset: 1056)
!3067 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3068, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3068 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!3069 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3070, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3071, retainedTypes: !3087, splitDebugInlining: false, nameTableKind: None)
!3070 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!3071 = !{!3072, !3079, !3083}
!3072 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3073, line: 38, baseType: !32, size: 32, elements: !3074)
!3073 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3074 = !{!3075, !3076, !3077, !3078}
!3075 = !DIEnumerator(name: "HAL_OK", value: 0)
!3076 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!3077 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!3078 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!3079 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !933, line: 184, baseType: !32, size: 32, elements: !3080)
!3080 = !{!3081, !3082}
!3081 = !DIEnumerator(name: "RESET", value: 0)
!3082 = !DIEnumerator(name: "SET", value: 1)
!3083 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !933, line: 190, baseType: !32, size: 32, elements: !3084)
!3084 = !{!3085, !3086}
!3085 = !DIEnumerator(name: "DISABLE", value: 0)
!3086 = !DIEnumerator(name: "ENABLE", value: 1)
!3087 = !{!102, !3088, !185, !108, !1580, !3122, !3128, !3139, !121, !3140, !109}
!3088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3089, size: 32)
!3089 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !405, line: 532, baseType: !3090)
!3090 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 500, size: 1088, elements: !3091)
!3091 = !{!3092, !3093, !3094, !3095, !3096, !3097, !3098, !3099, !3100, !3101, !3102, !3103, !3104, !3105, !3106, !3107, !3108, !3109, !3110, !3111, !3112, !3113, !3114, !3115, !3116, !3117, !3118, !3119, !3120, !3121}
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3090, file: !405, line: 502, baseType: !409, size: 32)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3090, file: !405, line: 503, baseType: !409, size: 32, offset: 32)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3090, file: !405, line: 504, baseType: !409, size: 32, offset: 64)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3090, file: !405, line: 505, baseType: !409, size: 32, offset: 96)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3090, file: !405, line: 506, baseType: !409, size: 32, offset: 128)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3090, file: !405, line: 507, baseType: !409, size: 32, offset: 160)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3090, file: !405, line: 508, baseType: !409, size: 32, offset: 192)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3090, file: !405, line: 509, baseType: !108, size: 32, offset: 224)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3090, file: !405, line: 510, baseType: !409, size: 32, offset: 256)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3090, file: !405, line: 511, baseType: !409, size: 32, offset: 288)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3090, file: !405, line: 512, baseType: !960, size: 64, offset: 320)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3090, file: !405, line: 513, baseType: !409, size: 32, offset: 384)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3090, file: !405, line: 514, baseType: !409, size: 32, offset: 416)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3090, file: !405, line: 515, baseType: !409, size: 32, offset: 448)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3090, file: !405, line: 516, baseType: !108, size: 32, offset: 480)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3090, file: !405, line: 517, baseType: !409, size: 32, offset: 512)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3090, file: !405, line: 518, baseType: !409, size: 32, offset: 544)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3090, file: !405, line: 519, baseType: !960, size: 64, offset: 576)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3090, file: !405, line: 520, baseType: !409, size: 32, offset: 640)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3090, file: !405, line: 521, baseType: !409, size: 32, offset: 672)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3090, file: !405, line: 522, baseType: !409, size: 32, offset: 704)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3090, file: !405, line: 523, baseType: !108, size: 32, offset: 736)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3090, file: !405, line: 524, baseType: !409, size: 32, offset: 768)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3090, file: !405, line: 525, baseType: !409, size: 32, offset: 800)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3090, file: !405, line: 526, baseType: !960, size: 64, offset: 832)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3090, file: !405, line: 527, baseType: !409, size: 32, offset: 896)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3090, file: !405, line: 528, baseType: !409, size: 32, offset: 928)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3090, file: !405, line: 529, baseType: !960, size: 64, offset: 960)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3090, file: !405, line: 530, baseType: !409, size: 32, offset: 1024)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3090, file: !405, line: 531, baseType: !409, size: 32, offset: 1056)
!3122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3123, size: 32)
!3123 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !405, line: 494, baseType: !3124)
!3124 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 490, size: 64, elements: !3125)
!3125 = !{!3126, !3127}
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3124, file: !405, line: 492, baseType: !409, size: 32)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3124, file: !405, line: 493, baseType: !409, size: 32, offset: 32)
!3128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3129, size: 32)
!3129 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !405, line: 369, baseType: !3130)
!3130 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 360, size: 224, elements: !3131)
!3131 = !{!3132, !3133, !3134, !3135, !3136, !3137, !3138}
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3130, file: !405, line: 362, baseType: !409, size: 32)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3130, file: !405, line: 363, baseType: !409, size: 32, offset: 32)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3130, file: !405, line: 364, baseType: !409, size: 32, offset: 64)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3130, file: !405, line: 365, baseType: !409, size: 32, offset: 96)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3130, file: !405, line: 366, baseType: !409, size: 32, offset: 128)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3130, file: !405, line: 367, baseType: !409, size: 32, offset: 160)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3130, file: !405, line: 368, baseType: !409, size: 32, offset: 192)
!3139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1704, size: 32)
!3140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3141, size: 32)
!3141 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !405, line: 441, baseType: !3142)
!3142 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 430, size: 320, elements: !3143)
!3143 = !{!3144, !3145, !3146, !3147, !3148, !3149, !3150, !3151, !3152}
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !3142, file: !405, line: 432, baseType: !409, size: 32)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !3142, file: !405, line: 433, baseType: !409, size: 32, offset: 32)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !3142, file: !405, line: 434, baseType: !409, size: 32, offset: 64)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !3142, file: !405, line: 435, baseType: !409, size: 32, offset: 96)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !3142, file: !405, line: 436, baseType: !409, size: 32, offset: 128)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !3142, file: !405, line: 437, baseType: !409, size: 32, offset: 160)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !3142, file: !405, line: 438, baseType: !409, size: 32, offset: 192)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !3142, file: !405, line: 439, baseType: !409, size: 32, offset: 224)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !3142, file: !405, line: 440, baseType: !1245, size: 64, offset: 256)
!3153 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3154, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3155, retainedTypes: !3156, splitDebugInlining: false, nameTableKind: None)
!3154 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!3155 = !{!932}
!3156 = !{!3157, !108, !3165, !3171, !3182}
!3157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3158, size: 32)
!3158 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !624, line: 770, baseType: !3159)
!3159 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 764, size: 128, elements: !3160)
!3160 = !{!3161, !3162, !3163, !3164}
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3159, file: !624, line: 766, baseType: !409, size: 32)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3159, file: !624, line: 767, baseType: !409, size: 32, offset: 32)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3159, file: !624, line: 768, baseType: !409, size: 32, offset: 64)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3159, file: !624, line: 769, baseType: !628, size: 32, offset: 96)
!3165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3166, size: 32)
!3166 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !405, line: 494, baseType: !3167)
!3167 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 490, size: 64, elements: !3168)
!3168 = !{!3169, !3170}
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3167, file: !405, line: 492, baseType: !409, size: 32)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3167, file: !405, line: 493, baseType: !409, size: 32, offset: 32)
!3171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3172, size: 32)
!3172 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !405, line: 369, baseType: !3173)
!3173 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 360, size: 224, elements: !3174)
!3174 = !{!3175, !3176, !3177, !3178, !3179, !3180, !3181}
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3173, file: !405, line: 362, baseType: !409, size: 32)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3173, file: !405, line: 363, baseType: !409, size: 32, offset: 32)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3173, file: !405, line: 364, baseType: !409, size: 32, offset: 64)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3173, file: !405, line: 365, baseType: !409, size: 32, offset: 96)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3173, file: !405, line: 366, baseType: !409, size: 32, offset: 128)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3173, file: !405, line: 367, baseType: !409, size: 32, offset: 160)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3173, file: !405, line: 368, baseType: !409, size: 32, offset: 192)
!3182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3183, size: 32)
!3183 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !405, line: 532, baseType: !3184)
!3184 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 500, size: 1088, elements: !3185)
!3185 = !{!3186, !3187, !3188, !3189, !3190, !3191, !3192, !3193, !3194, !3195, !3196, !3197, !3198, !3199, !3200, !3201, !3202, !3203, !3204, !3205, !3206, !3207, !3208, !3209, !3210, !3211, !3212, !3213, !3214, !3215}
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3184, file: !405, line: 502, baseType: !409, size: 32)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3184, file: !405, line: 503, baseType: !409, size: 32, offset: 32)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3184, file: !405, line: 504, baseType: !409, size: 32, offset: 64)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3184, file: !405, line: 505, baseType: !409, size: 32, offset: 96)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3184, file: !405, line: 506, baseType: !409, size: 32, offset: 128)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3184, file: !405, line: 507, baseType: !409, size: 32, offset: 160)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3184, file: !405, line: 508, baseType: !409, size: 32, offset: 192)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3184, file: !405, line: 509, baseType: !108, size: 32, offset: 224)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3184, file: !405, line: 510, baseType: !409, size: 32, offset: 256)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3184, file: !405, line: 511, baseType: !409, size: 32, offset: 288)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3184, file: !405, line: 512, baseType: !960, size: 64, offset: 320)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3184, file: !405, line: 513, baseType: !409, size: 32, offset: 384)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3184, file: !405, line: 514, baseType: !409, size: 32, offset: 416)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3184, file: !405, line: 515, baseType: !409, size: 32, offset: 448)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3184, file: !405, line: 516, baseType: !108, size: 32, offset: 480)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3184, file: !405, line: 517, baseType: !409, size: 32, offset: 512)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3184, file: !405, line: 518, baseType: !409, size: 32, offset: 544)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3184, file: !405, line: 519, baseType: !960, size: 64, offset: 576)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3184, file: !405, line: 520, baseType: !409, size: 32, offset: 640)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3184, file: !405, line: 521, baseType: !409, size: 32, offset: 672)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3184, file: !405, line: 522, baseType: !409, size: 32, offset: 704)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3184, file: !405, line: 523, baseType: !108, size: 32, offset: 736)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3184, file: !405, line: 524, baseType: !409, size: 32, offset: 768)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3184, file: !405, line: 525, baseType: !409, size: 32, offset: 800)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3184, file: !405, line: 526, baseType: !960, size: 64, offset: 832)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3184, file: !405, line: 527, baseType: !409, size: 32, offset: 896)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3184, file: !405, line: 528, baseType: !409, size: 32, offset: 928)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3184, file: !405, line: 529, baseType: !960, size: 64, offset: 960)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3184, file: !405, line: 530, baseType: !409, size: 32, offset: 1024)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3184, file: !405, line: 531, baseType: !409, size: 32, offset: 1056)
!3216 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3217, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3218, splitDebugInlining: false, nameTableKind: None)
!3217 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!3218 = !{!102, !132}
!3219 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3220, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3221, retainedTypes: !392, splitDebugInlining: false, nameTableKind: None)
!3220 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!3221 = !{!3222, !3229, !30}
!3222 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3223, line: 14, baseType: !32, size: 32, elements: !3224)
!3223 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3224 = !{!3225, !3226, !3227, !3228}
!3225 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3226 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3227 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3228 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3229 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3223, line: 42, baseType: !32, size: 32, elements: !3230)
!3230 = !{!3231, !3232, !3233, !3234, !3235, !3236}
!3231 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3232 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3233 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3234 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3235 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3236 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3237 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3238, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !392, splitDebugInlining: false, nameTableKind: None)
!3238 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!3239 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3240, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3241, splitDebugInlining: false, nameTableKind: None)
!3240 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!3241 = !{!102, !103, !3242, !3257}
!3242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3243, size: 32)
!3243 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !3244)
!3244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !3245)
!3245 = !{!3246, !3252}
!3246 = !DIDerivedType(tag: DW_TAG_member, scope: !3244, file: !146, line: 38, baseType: !3247, size: 32)
!3247 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3244, file: !146, line: 38, size: 32, elements: !3248)
!3248 = !{!3249, !3251}
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3247, file: !146, line: 39, baseType: !3250, size: 32)
!3250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3244, size: 32)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3247, file: !146, line: 40, baseType: !3250, size: 32)
!3252 = !DIDerivedType(tag: DW_TAG_member, scope: !3244, file: !146, line: 42, baseType: !3253, size: 32, offset: 32)
!3253 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3244, file: !146, line: 42, size: 32, elements: !3254)
!3254 = !{!3255, !3256}
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3253, file: !146, line: 43, baseType: !3250, size: 32)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3253, file: !146, line: 44, baseType: !3250, size: 32)
!3257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3258, size: 32)
!3258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !3259)
!3259 = !{!3260, !3304, !3316, !3317, !3318, !3319, !3325, !3338}
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3258, file: !163, line: 247, baseType: !3261, size: 384)
!3261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !3262)
!3262 = !{!3263, !3273, !3280, !3281, !3282, !3291, !3292, !3293}
!3263 = !DIDerivedType(tag: DW_TAG_member, scope: !3261, file: !163, line: 60, baseType: !3264, size: 64)
!3264 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3261, file: !163, line: 60, size: 64, elements: !3265)
!3265 = !{!3266, !3267}
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3264, file: !163, line: 61, baseType: !3243, size: 64)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3264, file: !163, line: 62, baseType: !3268, size: 64)
!3268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !3269)
!3269 = !{!3270}
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3268, file: !175, line: 50, baseType: !3271, size: 64)
!3271 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3272, size: 64, elements: !180)
!3272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3268, size: 32)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3261, file: !163, line: 68, baseType: !3274, size: 32, offset: 64)
!3274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3275, size: 32)
!3275 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !3276)
!3276 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !3277)
!3277 = !{!3278}
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3276, file: !141, line: 232, baseType: !3279, size: 64)
!3279 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !3244)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3261, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3261, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!3282 = !DIDerivedType(tag: DW_TAG_member, scope: !3261, file: !163, line: 90, baseType: !3283, size: 16, offset: 112)
!3283 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3261, file: !163, line: 90, size: 16, elements: !3284)
!3284 = !{!3285, !3290}
!3285 = !DIDerivedType(tag: DW_TAG_member, scope: !3283, file: !163, line: 91, baseType: !3286, size: 16)
!3286 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3283, file: !163, line: 91, size: 16, elements: !3287)
!3287 = !{!3288, !3289}
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3286, file: !163, line: 96, baseType: !195, size: 8)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3286, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3283, file: !163, line: 100, baseType: !121, size: 16)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3261, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3261, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3261, file: !163, line: 131, baseType: !3294, size: 192, offset: 192)
!3294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !3295)
!3295 = !{!3296, !3297, !3303}
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3294, file: !141, line: 245, baseType: !3243, size: 64)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3294, file: !141, line: 246, baseType: !3298, size: 32, offset: 64)
!3298 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !3299)
!3299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3300, size: 32)
!3300 = !DISubroutineType(types: !3301)
!3301 = !{null, !3302}
!3302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3294, size: 32)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3294, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3258, file: !163, line: 250, baseType: !3305, size: 288, offset: 384)
!3305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !3306)
!3306 = !{!3307, !3308, !3309, !3310, !3311, !3312, !3313, !3314, !3315}
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3305, file: !214, line: 26, baseType: !108, size: 32)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3305, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3305, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3305, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3305, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3305, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3305, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3305, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3305, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3258, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3258, file: !163, line: 256, baseType: !3275, size: 64, offset: 704)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3258, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3258, file: !163, line: 300, baseType: !3320, size: 96, offset: 800)
!3320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !3321)
!3321 = !{!3322, !3323, !3324}
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3320, file: !163, line: 153, baseType: !22, size: 32)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3320, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3320, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3258, file: !163, line: 325, baseType: !3326, size: 32, offset: 896)
!3326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3327, size: 32)
!3327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !3328)
!3328 = !{!3329, !3335, !3336}
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3327, file: !137, line: 5074, baseType: !3330, size: 96)
!3330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !3331)
!3331 = !{!3332, !3333, !3334}
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3330, file: !240, line: 57, baseType: !243, size: 32)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3330, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3330, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3327, file: !137, line: 5075, baseType: !3275, size: 64, offset: 96)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3327, file: !137, line: 5076, baseType: !3337, offset: 160)
!3337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3258, file: !163, line: 343, baseType: !3339, size: 64, offset: 928)
!3339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !3340)
!3340 = !{!3341, !3342}
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3339, file: !214, line: 63, baseType: !108, size: 32)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3339, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!3343 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3344, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3345, splitDebugInlining: false, nameTableKind: None)
!3344 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!3345 = !{!22, !102, !103}
!3346 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3347, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !392, splitDebugInlining: false, nameTableKind: None)
!3347 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/main_weak.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!3348 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3349, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !392, splitDebugInlining: false, nameTableKind: None)
!3349 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!3350 = !{!"Ubuntu clang version 14.0.6"}
!3351 = !{i32 7, !"Dwarf Version", i32 4}
!3352 = !{i32 2, !"Debug Info Version", i32 3}
!3353 = !{i32 1, !"wchar_size", i32 4}
!3354 = !{i32 1, !"min_enum_size", i32 4}
!3355 = !{i32 1, !"branch-target-enforcement", i32 0}
!3356 = !{i32 1, !"sign-return-address", i32 0}
!3357 = !{i32 1, !"sign-return-address-all", i32 0}
!3358 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3359 = !{i32 7, !"frame-pointer", i32 2}
!3360 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3361, file: !3361, line: 26, type: !334, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2647, retainedNodes: !251)
!3361 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3362 = !DILocation(line: 28, column: 1, scope: !3360)
!3363 = !{i64 2155118989, i64 2155119009, i64 2155119072}
!3364 = !DILocation(line: 29, column: 1, scope: !3360)
!3365 = !{i64 2155119404, i64 2155119424, i64 2155119487}
!3366 = !DILocation(line: 30, column: 1, scope: !3360)
!3367 = !{i64 2155119823, i64 2155119843, i64 2155119906}
!3368 = !DILocation(line: 31, column: 1, scope: !3360)
!3369 = !{i64 2155120242, i64 2155120262, i64 2155120325}
!3370 = !DILocation(line: 33, column: 1, scope: !3360)
!3371 = !{i64 2155120534, i64 2155120554, i64 2155120617}
!3372 = !DILocation(line: 35, column: 1, scope: !3360)
!3373 = !{i64 2155120859, i64 2155120879, i64 2155120942}
!3374 = !DILocation(line: 50, column: 1, scope: !3360)
!3375 = !{i64 2155121286, i64 2155121306, i64 2155121369}
!3376 = !DILocation(line: 54, column: 1, scope: !3360)
!3377 = !{i64 2155121725, i64 2155121745, i64 2155121808}
!3378 = !DILocation(line: 61, column: 1, scope: !3360)
!3379 = !{i64 2155122042, i64 2155122062, i64 2155122125}
!3380 = !DILocation(line: 63, column: 1, scope: !3360)
!3381 = !{i64 2155122422, i64 2155122442, i64 2155122505}
!3382 = !DILocation(line: 64, column: 1, scope: !3360)
!3383 = !{i64 2155122944, i64 2155122964, i64 2155123027}
!3384 = !DILocation(line: 65, column: 1, scope: !3360)
!3385 = !{i64 2155123442, i64 2155123462, i64 2155123525}
!3386 = !DILocation(line: 66, column: 1, scope: !3360)
!3387 = !{i64 2155123924, i64 2155123944, i64 2155124007}
!3388 = !DILocation(line: 67, column: 1, scope: !3360)
!3389 = !{i64 2155124431, i64 2155124451, i64 2155124514}
!3390 = !DILocation(line: 68, column: 1, scope: !3360)
!3391 = !{i64 2155124919, i64 2155124939, i64 2155125002}
!3392 = !DILocation(line: 70, column: 1, scope: !3360)
!3393 = !{i64 2155125387, i64 2155125407, i64 2155125470}
!3394 = !DILocation(line: 71, column: 1, scope: !3360)
!3395 = !{i64 2155125829, i64 2155125849, i64 2155125912}
!3396 = !DILocation(line: 72, column: 1, scope: !3360)
!3397 = !{i64 2155126287, i64 2155126307, i64 2155126370}
!3398 = !DILocation(line: 79, column: 1, scope: !3360)
!3399 = !{i64 2155126741, i64 2155126761, i64 2155126824}
!3400 = !DILocation(line: 80, column: 1, scope: !3360)
!3401 = !{i64 2155127252, i64 2155127272, i64 2155127335}
!3402 = !DILocation(line: 82, column: 1, scope: !3360)
!3403 = !{i64 2155131804, i64 2155131824, i64 2155131887}
!3404 = !DILocation(line: 97, column: 1, scope: !3360)
!3405 = !{i64 2155132141, i64 2155132161, i64 2155132224}
!3406 = !DILocation(line: 99, column: 1, scope: !3360)
!3407 = !{i64 2155132359, i64 2155132379, i64 2155132442}
!3408 = !DILocation(line: 102, column: 1, scope: !3360)
!3409 = !{i64 2155132616, i64 2155132636, i64 2155132699}
!3410 = !DILocation(line: 105, column: 1, scope: !3360)
!3411 = !{i64 2155132856, i64 2155132876, i64 2155132939}
!3412 = !DILocation(line: 115, column: 1, scope: !3360)
!3413 = !{i64 2155133195, i64 2155133215, i64 2155133278}
!3414 = !DILocation(line: 118, column: 1, scope: !3360)
!3415 = !{i64 2155133539, i64 2155133559, i64 2155133622}
!3416 = !DILocation(line: 32, column: 1, scope: !3417)
!3417 = !DILexicalBlockFile(scope: !3360, file: !3418, discriminator: 0)
!3418 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3419 = !{i64 2155133895, i64 2155133915, i64 2155133978}
!3420 = !DILocation(line: 33, column: 1, scope: !3417)
!3421 = !{i64 2155134407, i64 2155134427, i64 2155134490}
!3422 = !DILocation(line: 53, column: 1, scope: !3417)
!3423 = !{i64 2155134915, i64 2155134935, i64 2155134998}
!3424 = !DILocation(line: 54, column: 1, scope: !3417)
!3425 = !{i64 2155135333, i64 2155135353, i64 2155135416}
!3426 = !DILocation(line: 55, column: 1, scope: !3417)
!3427 = !{i64 2155135751, i64 2155135771, i64 2155135834}
!3428 = !DILocation(line: 56, column: 1, scope: !3417)
!3429 = !{i64 2155136169, i64 2155136189, i64 2155136252}
!3430 = !DILocation(line: 57, column: 1, scope: !3417)
!3431 = !{i64 2155136587, i64 2155136607, i64 2155136670}
!3432 = !DILocation(line: 58, column: 1, scope: !3417)
!3433 = !{i64 2155137005, i64 2155137025, i64 2155137088}
!3434 = !DILocation(line: 59, column: 1, scope: !3417)
!3435 = !{i64 2155137423, i64 2155137443, i64 2155137506}
!3436 = !DILocation(line: 60, column: 1, scope: !3417)
!3437 = !{i64 2155137847, i64 2155137867, i64 2155137930}
!3438 = !DILocation(line: 61, column: 1, scope: !3417)
!3439 = !{i64 2155138164, i64 2155138184, i64 2155138247}
!3440 = !DILocation(line: 70, column: 1, scope: !3417)
!3441 = !{i64 2155138393, i64 2155138413, i64 2155138476}
!3442 = !DILocation(line: 72, column: 1, scope: !3417)
!3443 = !{i64 2155138725, i64 2155138745, i64 2155138808}
!3444 = !DILocation(line: 73, column: 1, scope: !3417)
!3445 = !{i64 2155139175, i64 2155139195, i64 2155139258}
!3446 = !DILocation(line: 74, column: 1, scope: !3417)
!3447 = !{i64 2155139625, i64 2155139645, i64 2155139708}
!3448 = !DILocation(line: 75, column: 1, scope: !3417)
!3449 = !{i64 2155140075, i64 2155140095, i64 2155140158}
!3450 = !DILocation(line: 76, column: 1, scope: !3417)
!3451 = !{i64 2155140525, i64 2155140545, i64 2155140608}
!3452 = !DILocation(line: 77, column: 1, scope: !3417)
!3453 = !{i64 2155140975, i64 2155140995, i64 2155141058}
!3454 = !DILocation(line: 78, column: 1, scope: !3417)
!3455 = !{i64 2155145486, i64 2155145506, i64 2155145569}
!3456 = !DILocation(line: 79, column: 1, scope: !3417)
!3457 = !{i64 2155145936, i64 2155145956, i64 2155146019}
!3458 = !DILocation(line: 80, column: 1, scope: !3417)
!3459 = !{i64 2155146389, i64 2155146409, i64 2155146472}
!3460 = !DILocation(line: 84, column: 1, scope: !3417)
!3461 = !{i64 2155146721, i64 2155146741, i64 2155146804}
!3462 = !DILocation(line: 91, column: 1, scope: !3417)
!3463 = !{i64 2155147118, i64 2155147138, i64 2155147201}
!3464 = !DILocation(line: 93, column: 1, scope: !3417)
!3465 = !{i64 2155147485, i64 2155147505, i64 2155147568}
!3466 = !DILocation(line: 106, column: 1, scope: !3417)
!3467 = !{i64 2155147755, i64 2155147775, i64 2155147838}
!3468 = !DILocation(line: 11, column: 1, scope: !3469)
!3469 = !DILexicalBlockFile(scope: !3360, file: !3470, discriminator: 0)
!3470 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3471 = distinct !DISubprogram(name: "s_cb", scope: !114, file: !114, line: 152, type: !287, scopeLine: 153, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3472)
!3472 = !{!3473, !3474, !3481}
!3473 = !DILocalVariable(name: "chan", arg: 1, scope: !3471, file: !114, line: 152, type: !289)
!3474 = !DILocalVariable(name: "msg_received", scope: !3471, file: !114, line: 154, type: !3475)
!3475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bm_msg", file: !353, line: 15, size: 2048, elements: !3476)
!3476 = !{!3477}
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !3475, file: !353, line: 16, baseType: !3478, size: 2048)
!3478 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 2048, elements: !3479)
!3479 = !{!3480}
!3480 = !DISubrange(count: 256)
!3481 = !DILocalVariable(name: "actual_message_data", scope: !3471, file: !114, line: 155, type: !3482)
!3482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3483, size: 32)
!3483 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !352)
!3484 = !DILocation(line: 0, scope: !3471)
!3485 = !DILocation(line: 154, column: 2, scope: !3471)
!3486 = !DILocation(line: 154, column: 16, scope: !3471)
!3487 = !DILocation(line: 155, column: 56, scope: !3471)
!3488 = !DILocation(line: 157, column: 45, scope: !3471)
!3489 = !DILocation(line: 157, column: 2, scope: !3471)
!3490 = !DILocation(line: 159, column: 8, scope: !3471)
!3491 = !DILocation(line: 160, column: 1, scope: !3471)
!3492 = distinct !DISubprogram(name: "zbus_chan_const_msg", scope: !117, file: !117, line: 416, type: !3493, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3495)
!3493 = !DISubroutineType(types: !3494)
!3494 = !{!13, !289}
!3495 = !{!3496}
!3496 = !DILocalVariable(name: "chan", arg: 1, scope: !3492, file: !117, line: 416, type: !289)
!3497 = !DILocation(line: 0, scope: !3492)
!3498 = !DILocation(line: 420, column: 15, scope: !3492)
!3499 = !DILocation(line: 420, column: 2, scope: !3492)
!3500 = distinct !DISubprogram(name: "producer_thread", scope: !114, file: !114, line: 164, type: !334, scopeLine: 165, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3501)
!3501 = !{!3502, !3503, !3505, !3507, !3508, !3510, !3511, !3512}
!3502 = !DILocalVariable(name: "msg", scope: !3500, file: !114, line: 169, type: !3475)
!3503 = !DILocalVariable(name: "actual_message_data", scope: !3500, file: !114, line: 170, type: !3504)
!3504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !352, size: 32)
!3505 = !DILocalVariable(name: "i", scope: !3506, file: !114, line: 172, type: !109)
!3506 = distinct !DILexicalBlock(scope: !3500, file: !114, line: 172, column: 2)
!3507 = !DILocalVariable(name: "start", scope: !3500, file: !114, line: 186, type: !108)
!3508 = !DILocalVariable(name: "internal_count", scope: !3509, file: !114, line: 188, type: !109)
!3509 = distinct !DILexicalBlock(scope: !3500, file: !114, line: 188, column: 2)
!3510 = !DILocalVariable(name: "duration", scope: !3500, file: !114, line: 200, type: !108)
!3511 = !DILocalVariable(name: "i", scope: !3500, file: !114, line: 206, type: !109)
!3512 = !DILocalVariable(name: "f", scope: !3500, file: !114, line: 207, type: !109)
!3513 = !DILocation(line: 166, column: 2, scope: !3514)
!3514 = distinct !DILexicalBlock(scope: !3515, file: !114, line: 166, column: 2)
!3515 = distinct !DILexicalBlock(scope: !3516, file: !114, line: 166, column: 2)
!3516 = distinct !DILexicalBlock(scope: !3517, file: !114, line: 166, column: 2)
!3517 = distinct !DILexicalBlock(scope: !3500, file: !114, line: 166, column: 2)
!3518 = !DILocation(line: 169, column: 2, scope: !3500)
!3519 = !DILocation(line: 169, column: 16, scope: !3500)
!3520 = !DILocation(line: 0, scope: !3506)
!3521 = !DILocation(line: 172, column: 2, scope: !3506)
!3522 = !DILocation(line: 176, column: 2, scope: !3500)
!3523 = !DILocation(line: 0, scope: !3500)
!3524 = !DILocation(line: 179, column: 35, scope: !3500)
!3525 = !DILocation(line: 179, column: 33, scope: !3500)
!3526 = !DILocation(line: 181, column: 28, scope: !3500)
!3527 = !DILocation(line: 184, column: 2, scope: !3500)
!3528 = !DILocation(line: 186, column: 19, scope: !3500)
!3529 = !DILocation(line: 0, scope: !3509)
!3530 = !DILocation(line: 188, column: 2, scope: !3509)
!3531 = !DILocation(line: 173, column: 18, scope: !3532)
!3532 = distinct !DILexicalBlock(scope: !3533, file: !114, line: 172, column: 62)
!3533 = distinct !DILexicalBlock(scope: !3506, file: !114, line: 172, column: 2)
!3534 = !DILocation(line: 173, column: 3, scope: !3532)
!3535 = !DILocation(line: 173, column: 16, scope: !3532)
!3536 = !DILocation(line: 172, column: 57, scope: !3533)
!3537 = !DILocation(line: 172, column: 52, scope: !3533)
!3538 = distinct !{!3538, !3521, !3539}
!3539 = !DILocation(line: 174, column: 2, scope: !3506)
!3540 = !DILocation(line: 200, column: 23, scope: !3500)
!3541 = !DILocation(line: 200, column: 41, scope: !3500)
!3542 = !DILocation(line: 202, column: 15, scope: !3543)
!3543 = distinct !DILexicalBlock(scope: !3500, file: !114, line: 202, column: 6)
!3544 = !DILocation(line: 202, column: 6, scope: !3500)
!3545 = !DILocation(line: 190, column: 3, scope: !3546)
!3546 = distinct !DILexicalBlock(scope: !3547, file: !114, line: 189, column: 49)
!3547 = distinct !DILexicalBlock(scope: !3509, file: !114, line: 188, column: 2)
!3548 = !DILocation(line: 194, column: 31, scope: !3546)
!3549 = !DILocation(line: 194, column: 3, scope: !3546)
!3550 = !DILocation(line: 196, column: 3, scope: !3546)
!3551 = !DILocation(line: 198, column: 33, scope: !3546)
!3552 = !DILocation(line: 198, column: 3, scope: !3546)
!3553 = !DILocation(line: 189, column: 22, scope: !3547)
!3554 = !DILocation(line: 188, column: 85, scope: !3547)
!3555 = distinct !{!3555, !3530, !3556}
!3556 = !DILocation(line: 199, column: 2, scope: !3509)
!3557 = !DILocation(line: 203, column: 3, scope: !3558)
!3558 = distinct !DILexicalBlock(scope: !3559, file: !114, line: 203, column: 3)
!3559 = distinct !DILexicalBlock(scope: !3560, file: !114, line: 203, column: 3)
!3560 = distinct !DILexicalBlock(scope: !3561, file: !114, line: 203, column: 3)
!3561 = distinct !DILexicalBlock(scope: !3562, file: !114, line: 203, column: 3)
!3562 = distinct !DILexicalBlock(scope: !3543, file: !114, line: 202, column: 21)
!3563 = !DILocation(line: 204, column: 3, scope: !3564)
!3564 = distinct !DILexicalBlock(scope: !3562, file: !114, line: 204, column: 3)
!3565 = !{i64 2155593209, i64 2155593225, i64 2155593251, i64 2155593279, i64 2155593299}
!3566 = !DILocation(line: 205, column: 2, scope: !3562)
!3567 = !DILocation(line: 206, column: 43, scope: !3500)
!3568 = !DILocation(line: 206, column: 41, scope: !3500)
!3569 = !DILocation(line: 207, column: 44, scope: !3500)
!3570 = !DILocation(line: 207, column: 56, scope: !3500)
!3571 = !DILocation(line: 209, column: 2, scope: !3572)
!3572 = distinct !DILexicalBlock(scope: !3573, file: !114, line: 209, column: 2)
!3573 = distinct !DILexicalBlock(scope: !3574, file: !114, line: 209, column: 2)
!3574 = distinct !DILexicalBlock(scope: !3575, file: !114, line: 209, column: 2)
!3575 = distinct !DILexicalBlock(scope: !3500, file: !114, line: 209, column: 2)
!3576 = !DILocation(line: 210, column: 2, scope: !3577)
!3577 = distinct !DILexicalBlock(scope: !3578, file: !114, line: 210, column: 2)
!3578 = distinct !DILexicalBlock(scope: !3579, file: !114, line: 210, column: 2)
!3579 = distinct !DILexicalBlock(scope: !3580, file: !114, line: 210, column: 2)
!3580 = distinct !DILexicalBlock(scope: !3500, file: !114, line: 210, column: 2)
!3581 = !DILocation(line: 211, column: 2, scope: !3582)
!3582 = distinct !DILexicalBlock(scope: !3583, file: !114, line: 211, column: 2)
!3583 = distinct !DILexicalBlock(scope: !3584, file: !114, line: 211, column: 2)
!3584 = distinct !DILexicalBlock(scope: !3585, file: !114, line: 211, column: 2)
!3585 = distinct !DILexicalBlock(scope: !3500, file: !114, line: 211, column: 2)
!3586 = !DILocation(line: 213, column: 2, scope: !3500)
!3587 = !DILocation(line: 214, column: 1, scope: !3500)
!3588 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3589, file: !3589, line: 175, type: !3590, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3592)
!3589 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3590 = !DISubroutineType(types: !3591)
!3591 = !{!278, !103}
!3592 = !{!3593}
!3593 = !DILocalVariable(name: "level", arg: 1, scope: !3588, file: !3589, line: 175, type: !103)
!3594 = !DILocation(line: 0, scope: !3588)
!3595 = !DILocation(line: 177, column: 2, scope: !3588)
!3596 = !DILocation(line: 189, column: 1, scope: !3588)
!3597 = distinct !DISubprogram(name: "k_uptime_get_32", scope: !137, file: !137, line: 1640, type: !3598, scopeLine: 1641, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !251)
!3598 = !DISubroutineType(types: !3599)
!3599 = !{!108}
!3600 = !DILocation(line: 1642, column: 19, scope: !3597)
!3601 = !DILocation(line: 1642, column: 9, scope: !3597)
!3602 = !DILocation(line: 1642, column: 2, scope: !3597)
!3603 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3604, file: !3604, line: 403, type: !3605, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3607)
!3604 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3605 = !DISubroutineType(types: !3606)
!3606 = !{!109, !109}
!3607 = !{!3608}
!3608 = !DILocalVariable(name: "t", arg: 1, scope: !3603, file: !3604, line: 403, type: !109)
!3609 = !DILocation(line: 0, scope: !3603)
!3610 = !DILocation(line: 406, column: 2, scope: !3603)
!3611 = distinct !DISubprogram(name: "k_uptime_get", scope: !137, file: !137, line: 1616, type: !3612, scopeLine: 1617, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !251)
!3612 = !DISubroutineType(types: !3613)
!3613 = !{!106}
!3614 = !DILocation(line: 1618, column: 31, scope: !3611)
!3615 = !DILocation(line: 1618, column: 9, scope: !3611)
!3616 = !DILocation(line: 1618, column: 2, scope: !3611)
!3617 = distinct !DISubprogram(name: "k_uptime_ticks", scope: !3618, file: !3618, line: 564, type: !3612, scopeLine: 565, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !251)
!3618 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!3619 = !DILocation(line: 573, column: 2, scope: !3620)
!3620 = distinct !DILexicalBlock(scope: !3617, file: !3618, line: 573, column: 2)
!3621 = !{i64 2154860151}
!3622 = !DILocation(line: 574, column: 9, scope: !3617)
!3623 = !DILocation(line: 574, column: 2, scope: !3617)
!3624 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !3604, file: !3604, line: 1103, type: !3605, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3625)
!3625 = !{!3626}
!3626 = !DILocalVariable(name: "t", arg: 1, scope: !3624, file: !3604, line: 1103, type: !109)
!3627 = !DILocation(line: 0, scope: !3624)
!3628 = !DILocalVariable(name: "t", arg: 1, scope: !3629, file: !3604, line: 102, type: !109)
!3629 = distinct !DISubprogram(name: "z_tmcvt", scope: !3604, file: !3604, line: 102, type: !3630, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3632)
!3630 = !DISubroutineType(types: !3631)
!3631 = !{!109, !109, !108, !108, !131, !131, !131, !131}
!3632 = !{!3628, !3633, !3634, !3635, !3636, !3637, !3638, !3639, !3640, !3641, !3642}
!3633 = !DILocalVariable(name: "from_hz", arg: 2, scope: !3629, file: !3604, line: 102, type: !108)
!3634 = !DILocalVariable(name: "to_hz", arg: 3, scope: !3629, file: !3604, line: 103, type: !108)
!3635 = !DILocalVariable(name: "const_hz", arg: 4, scope: !3629, file: !3604, line: 103, type: !131)
!3636 = !DILocalVariable(name: "result32", arg: 5, scope: !3629, file: !3604, line: 104, type: !131)
!3637 = !DILocalVariable(name: "round_up", arg: 6, scope: !3629, file: !3604, line: 104, type: !131)
!3638 = !DILocalVariable(name: "round_off", arg: 7, scope: !3629, file: !3604, line: 105, type: !131)
!3639 = !DILocalVariable(name: "mul_ratio", scope: !3629, file: !3604, line: 107, type: !131)
!3640 = !DILocalVariable(name: "div_ratio", scope: !3629, file: !3604, line: 109, type: !131)
!3641 = !DILocalVariable(name: "off", scope: !3629, file: !3604, line: 116, type: !109)
!3642 = !DILocalVariable(name: "rdivisor", scope: !3643, file: !3604, line: 119, type: !108)
!3643 = distinct !DILexicalBlock(scope: !3644, file: !3604, line: 118, column: 18)
!3644 = distinct !DILexicalBlock(scope: !3629, file: !3604, line: 118, column: 6)
!3645 = !DILocation(line: 0, scope: !3629, inlinedAt: !3646)
!3646 = distinct !DILocation(line: 1106, column: 9, scope: !3624)
!3647 = !DILocation(line: 139, column: 13, scope: !3648, inlinedAt: !3646)
!3648 = distinct !DILexicalBlock(scope: !3649, file: !3604, line: 138, column: 10)
!3649 = distinct !DILexicalBlock(scope: !3650, file: !3604, line: 136, column: 7)
!3650 = distinct !DILexicalBlock(scope: !3651, file: !3604, line: 134, column: 17)
!3651 = distinct !DILexicalBlock(scope: !3629, file: !3604, line: 134, column: 6)
!3652 = !DILocation(line: 1106, column: 2, scope: !3624)
!3653 = distinct !DISubprogram(name: "cbvprintf_package", scope: !381, file: !381, line: 233, type: !3654, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !3663)
!3654 = !DISubroutineType(types: !3655)
!3655 = !{!103, !102, !132, !108, !337, !3656}
!3656 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3657, line: 99, baseType: !3658)
!3657 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3658 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3657, line: 40, baseType: !3659)
!3659 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !381, baseType: !3660)
!3660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3661)
!3661 = !{!3662}
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3660, file: !381, line: 18, baseType: !102, size: 32)
!3663 = !{!3664, !3665, !3666, !3667, !3668, !3669, !3670, !3671, !3672, !3673, !3675, !3676, !3677, !3678, !3679, !3680, !3681, !3682, !3683, !3684, !3685, !3686, !3699, !3708, !3711, !3712, !3715, !3718, !3721, !3724, !3730}
!3664 = !DILocalVariable(name: "packaged", arg: 1, scope: !3653, file: !381, line: 233, type: !102)
!3665 = !DILocalVariable(name: "len", arg: 2, scope: !3653, file: !381, line: 233, type: !132)
!3666 = !DILocalVariable(name: "flags", arg: 3, scope: !3653, file: !381, line: 233, type: !108)
!3667 = !DILocalVariable(name: "fmt", arg: 4, scope: !3653, file: !381, line: 234, type: !337)
!3668 = !DILocalVariable(name: "ap", arg: 5, scope: !3653, file: !381, line: 234, type: !3656)
!3669 = !DILocalVariable(name: "buf0", scope: !3653, file: !381, line: 247, type: !379)
!3670 = !DILocalVariable(name: "buf", scope: !3653, file: !381, line: 248, type: !379)
!3671 = !DILocalVariable(name: "size", scope: !3653, file: !381, line: 249, type: !32)
!3672 = !DILocalVariable(name: "align", scope: !3653, file: !381, line: 250, type: !32)
!3673 = !DILocalVariable(name: "str_ptr_pos", scope: !3653, file: !381, line: 251, type: !3674)
!3674 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 128, elements: !1917)
!3675 = !DILocalVariable(name: "str_ptr_arg", scope: !3653, file: !381, line: 252, type: !3674)
!3676 = !DILocalVariable(name: "s_idx", scope: !3653, file: !381, line: 253, type: !32)
!3677 = !DILocalVariable(name: "s_rw_cnt", scope: !3653, file: !381, line: 254, type: !32)
!3678 = !DILocalVariable(name: "s_ro_cnt", scope: !3653, file: !381, line: 255, type: !32)
!3679 = !DILocalVariable(name: "arg_idx", scope: !3653, file: !381, line: 256, type: !103)
!3680 = !DILocalVariable(name: "i", scope: !3653, file: !381, line: 257, type: !32)
!3681 = !DILocalVariable(name: "s", scope: !3653, file: !381, line: 258, type: !337)
!3682 = !DILocalVariable(name: "parsing", scope: !3653, file: !381, line: 259, type: !131)
!3683 = !DILocalVariable(name: "rws_pos_en", scope: !3653, file: !381, line: 263, type: !131)
!3684 = !DILocalVariable(name: "fros_cnt", scope: !3653, file: !381, line: 268, type: !103)
!3685 = !DILocalVariable(name: "is_str_arg", scope: !3653, file: !381, line: 269, type: !131)
!3686 = !DILocalVariable(name: "pkg_hdr", scope: !3653, file: !381, line: 270, type: !3687)
!3687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3688, size: 32)
!3688 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !3689, line: 78, size: 32, elements: !3690)
!3689 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3690 = !{!3691, !3698}
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !3688, file: !3689, line: 80, baseType: !3692, size: 32)
!3692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !3689, line: 45, size: 32, elements: !3693)
!3693 = !{!3694, !3695, !3696, !3697}
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3692, file: !3689, line: 47, baseType: !185, size: 8)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !3692, file: !3689, line: 50, baseType: !185, size: 8, offset: 8)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !3692, file: !3689, line: 53, baseType: !185, size: 8, offset: 16)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !3692, file: !3689, line: 56, baseType: !185, size: 8, offset: 24)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !3688, file: !3689, line: 82, baseType: !102, size: 32)
!3699 = !DILocalVariable(name: "v", scope: !3700, file: !381, line: 567, type: !3704)
!3700 = distinct !DILexicalBlock(scope: !3701, file: !381, line: 562, column: 14)
!3701 = distinct !DILexicalBlock(scope: !3702, file: !381, line: 481, column: 18)
!3702 = distinct !DILexicalBlock(scope: !3703, file: !381, line: 466, column: 3)
!3703 = distinct !DILexicalBlock(scope: !3653, file: !381, line: 343, column: 15)
!3704 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3653, file: !381, line: 567, size: 64, elements: !3705)
!3705 = !{!3706, !3707}
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3704, file: !381, line: 567, baseType: !372, size: 64)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !3704, file: !381, line: 567, baseType: !370, size: 64)
!3708 = !DILocalVariable(name: "is_ro", scope: !3709, file: !381, line: 620, type: !131)
!3709 = distinct !DILexicalBlock(scope: !3710, file: !381, line: 613, column: 19)
!3710 = distinct !DILexicalBlock(scope: !3703, file: !381, line: 613, column: 7)
!3711 = !DILocalVariable(name: "do_ro", scope: !3709, file: !381, line: 621, type: !131)
!3712 = !DILocalVariable(name: "s_ptr_idx", scope: !3713, file: !381, line: 626, type: !108)
!3713 = distinct !DILexicalBlock(scope: !3714, file: !381, line: 625, column: 11)
!3714 = distinct !DILexicalBlock(scope: !3709, file: !381, line: 623, column: 8)
!3715 = !DILocalVariable(name: "v", scope: !3716, file: !381, line: 684, type: !103)
!3716 = distinct !DILexicalBlock(scope: !3717, file: !381, line: 683, column: 35)
!3717 = distinct !DILexicalBlock(scope: !3710, file: !381, line: 683, column: 14)
!3718 = !DILocalVariable(name: "v", scope: !3719, file: !381, line: 691, type: !376)
!3719 = distinct !DILexicalBlock(scope: !3720, file: !381, line: 690, column: 36)
!3720 = distinct !DILexicalBlock(scope: !3717, file: !381, line: 690, column: 14)
!3721 = !DILocalVariable(name: "v", scope: !3722, file: !381, line: 698, type: !107)
!3722 = distinct !DILexicalBlock(scope: !3723, file: !381, line: 697, column: 41)
!3723 = distinct !DILexicalBlock(scope: !3720, file: !381, line: 697, column: 14)
!3724 = !DILocalVariable(name: "pos", scope: !3725, file: !381, line: 762, type: !185)
!3725 = distinct !DILexicalBlock(scope: !3726, file: !381, line: 757, column: 31)
!3726 = distinct !DILexicalBlock(scope: !3727, file: !381, line: 757, column: 3)
!3727 = distinct !DILexicalBlock(scope: !3728, file: !381, line: 757, column: 3)
!3728 = distinct !DILexicalBlock(scope: !3729, file: !381, line: 756, column: 16)
!3729 = distinct !DILexicalBlock(scope: !3653, file: !381, line: 756, column: 6)
!3730 = !DILabel(scope: !3709, name: "process_string", file: !381, line: 615)
!3731 = !DILocation(line: 0, scope: !3653)
!3732 = !DILocation(line: 251, column: 2, scope: !3653)
!3733 = !DILocation(line: 251, column: 10, scope: !3653)
!3734 = !DILocation(line: 252, column: 2, scope: !3653)
!3735 = !DILocation(line: 252, column: 10, scope: !3653)
!3736 = !DILocation(line: 263, column: 29, scope: !3653)
!3737 = !DILocation(line: 263, column: 21, scope: !3653)
!3738 = !DILocation(line: 268, column: 21, scope: !3653)
!3739 = !DILocation(line: 268, column: 19, scope: !3653)
!3740 = !DILocation(line: 273, column: 6, scope: !3741)
!3741 = distinct !DILexicalBlock(scope: !3653, file: !381, line: 273, column: 6)
!3742 = !DILocation(line: 273, column: 26, scope: !3741)
!3743 = !DILocation(line: 273, column: 6, scope: !3653)
!3744 = !DILocation(line: 297, column: 6, scope: !3653)
!3745 = !DILocation(line: 305, column: 11, scope: !3746)
!3746 = distinct !DILexicalBlock(scope: !3653, file: !381, line: 305, column: 6)
!3747 = !DILocation(line: 305, column: 6, scope: !3653)
!3748 = !DILocation(line: 327, column: 19, scope: !3749)
!3749 = distinct !DILexicalBlock(scope: !3653, file: !381, line: 327, column: 6)
!3750 = !DILocation(line: 327, column: 22, scope: !3749)
!3751 = !DILocation(line: 327, column: 33, scope: !3749)
!3752 = !DILocation(line: 327, column: 50, scope: !3749)
!3753 = !DILocation(line: 327, column: 6, scope: !3653)
!3754 = !DILocation(line: 338, column: 9, scope: !3653)
!3755 = !DILocation(line: 341, column: 2, scope: !3653)
!3756 = !DILocation(line: 472, column: 8, scope: !3702)
!3757 = !DILocation(line: 473, column: 14, scope: !3758)
!3758 = distinct !DILexicalBlock(scope: !3759, file: !381, line: 473, column: 9)
!3759 = distinct !DILexicalBlock(scope: !3760, file: !381, line: 472, column: 18)
!3760 = distinct !DILexicalBlock(scope: !3702, file: !381, line: 472, column: 8)
!3761 = !DILocation(line: 473, column: 9, scope: !3759)
!3762 = !DILocation(line: 479, column: 5, scope: !3759)
!3763 = !DILocation(line: 468, column: 9, scope: !3764)
!3764 = distinct !DILexicalBlock(scope: !3702, file: !381, line: 468, column: 8)
!3765 = !DILocation(line: 468, column: 8, scope: !3764)
!3766 = !DILocation(line: 468, column: 15, scope: !3764)
!3767 = !DILocation(line: 468, column: 8, scope: !3702)
!3768 = distinct !{!3768, !3769, !3770}
!3769 = !DILocation(line: 343, column: 2, scope: !3653)
!3770 = !DILocation(line: 712, column: 2, scope: !3653)
!3771 = !DILocation(line: 481, column: 4, scope: !3702)
!3772 = !DILocation(line: 484, column: 12, scope: !3701)
!3773 = !DILocation(line: 485, column: 5, scope: !3701)
!3774 = !DILocation(line: 505, column: 5, scope: !3701)
!3775 = !DILocation(line: 518, column: 5, scope: !3701)
!3776 = !DILocation(line: 523, column: 5, scope: !3701)
!3777 = !DILocation(line: 532, column: 9, scope: !3778)
!3778 = distinct !DILexicalBlock(scope: !3701, file: !381, line: 532, column: 9)
!3779 = !DILocation(line: 532, column: 17, scope: !3778)
!3780 = !DILocation(line: 532, column: 9, scope: !3701)
!3781 = !DILocation(line: 533, column: 10, scope: !3782)
!3782 = distinct !DILexicalBlock(scope: !3783, file: !381, line: 533, column: 10)
!3783 = distinct !DILexicalBlock(scope: !3778, file: !381, line: 532, column: 25)
!3784 = !DILocation(line: 533, column: 18, scope: !3782)
!3785 = !DILocation(line: 0, scope: !3786)
!3786 = distinct !DILexicalBlock(scope: !3700, file: !381, line: 569, column: 9)
!3787 = !DILocation(line: 0, scope: !3700)
!3788 = !DILocation(line: 579, column: 20, scope: !3700)
!3789 = !DILocation(line: 579, column: 11, scope: !3700)
!3790 = !DILocation(line: 580, column: 9, scope: !3700)
!3791 = !DILocation(line: 582, column: 21, scope: !3792)
!3792 = distinct !DILexicalBlock(scope: !3793, file: !381, line: 582, column: 10)
!3793 = distinct !DILexicalBlock(scope: !3794, file: !381, line: 580, column: 23)
!3794 = distinct !DILexicalBlock(scope: !3700, file: !381, line: 580, column: 9)
!3795 = !DILocation(line: 582, column: 28, scope: !3792)
!3796 = !DILocation(line: 582, column: 10, scope: !3793)
!3797 = !DILocation(line: 0, scope: !3798)
!3798 = distinct !DILexicalBlock(scope: !3799, file: !381, line: 587, column: 17)
!3799 = distinct !DILexicalBlock(scope: !3793, file: !381, line: 585, column: 10)
!3800 = !DILocation(line: 593, column: 9, scope: !3700)
!3801 = !DILocation(line: 600, column: 5, scope: !3701)
!3802 = !DILocation(line: 605, column: 18, scope: !3703)
!3803 = !DILocation(line: 605, column: 9, scope: !3703)
!3804 = !DILocation(line: 608, column: 20, scope: !3805)
!3805 = distinct !DILexicalBlock(scope: !3703, file: !381, line: 608, column: 7)
!3806 = !DILocation(line: 608, column: 23, scope: !3805)
!3807 = !DILocation(line: 608, column: 34, scope: !3805)
!3808 = !DILocation(line: 608, column: 41, scope: !3805)
!3809 = !DILocation(line: 608, column: 7, scope: !3703)
!3810 = !DILocation(line: 613, column: 7, scope: !3703)
!3811 = !DILocation(line: 614, column: 8, scope: !3709)
!3812 = !DILocation(line: 614, column: 4, scope: !3709)
!3813 = !DILocation(line: 255, column: 15, scope: !3653)
!3814 = !DILocation(line: 256, column: 6, scope: !3653)
!3815 = !DILocation(line: 254, column: 15, scope: !3653)
!3816 = !DILocation(line: 253, column: 15, scope: !3653)
!3817 = !DILocation(line: 320, column: 7, scope: !3818)
!3818 = distinct !DILexicalBlock(scope: !3746, file: !381, line: 305, column: 20)
!3819 = !DILocation(line: 615, column: 1, scope: !3709)
!3820 = !DILocation(line: 616, column: 8, scope: !3709)
!3821 = !DILocation(line: 617, column: 5, scope: !3822)
!3822 = distinct !DILexicalBlock(scope: !3823, file: !381, line: 616, column: 22)
!3823 = distinct !DILexicalBlock(scope: !3709, file: !381, line: 616, column: 8)
!3824 = !DILocation(line: 617, column: 25, scope: !3822)
!3825 = !DILocation(line: 618, column: 4, scope: !3822)
!3826 = !DILocation(line: 620, column: 26, scope: !3709)
!3827 = !DILocation(line: 620, column: 29, scope: !3709)
!3828 = !DILocation(line: 620, column: 17, scope: !3709)
!3829 = !DILocation(line: 620, column: 43, scope: !3709)
!3830 = !DILocation(line: 0, scope: !3709)
!3831 = !DILocation(line: 623, column: 14, scope: !3714)
!3832 = !DILocation(line: 626, column: 26, scope: !3713)
!3833 = !DILocation(line: 626, column: 37, scope: !3713)
!3834 = !DILocation(line: 0, scope: !3713)
!3835 = !DILocation(line: 634, column: 15, scope: !3836)
!3836 = distinct !DILexicalBlock(scope: !3713, file: !381, line: 634, column: 9)
!3837 = !DILocation(line: 644, column: 9, scope: !3713)
!3838 = !DILocation(line: 649, column: 27, scope: !3839)
!3839 = distinct !DILexicalBlock(scope: !3840, file: !381, line: 644, column: 23)
!3840 = distinct !DILexicalBlock(scope: !3713, file: !381, line: 644, column: 9)
!3841 = !DILocation(line: 649, column: 6, scope: !3839)
!3842 = !DILocation(line: 649, column: 25, scope: !3839)
!3843 = !DILocation(line: 650, column: 27, scope: !3839)
!3844 = !DILocation(line: 650, column: 6, scope: !3839)
!3845 = !DILocation(line: 650, column: 25, scope: !3839)
!3846 = !DILocation(line: 651, column: 10, scope: !3839)
!3847 = !DILocation(line: 653, column: 26, scope: !3848)
!3848 = distinct !DILexicalBlock(scope: !3849, file: !381, line: 651, column: 17)
!3849 = distinct !DILexicalBlock(scope: !3839, file: !381, line: 651, column: 10)
!3850 = !DILocation(line: 654, column: 15, scope: !3848)
!3851 = !DILocation(line: 655, column: 6, scope: !3848)
!3852 = !DILocation(line: 656, column: 15, scope: !3853)
!3853 = distinct !DILexicalBlock(scope: !3849, file: !381, line: 655, column: 13)
!3854 = !DILocation(line: 658, column: 16, scope: !3840)
!3855 = !DILocation(line: 663, column: 10, scope: !3856)
!3856 = distinct !DILexicalBlock(scope: !3857, file: !381, line: 658, column: 23)
!3857 = distinct !DILexicalBlock(scope: !3840, file: !381, line: 658, column: 16)
!3858 = !DILocation(line: 664, column: 5, scope: !3856)
!3859 = !DILocation(line: 664, column: 16, scope: !3857)
!3860 = !DILocation(line: 669, column: 10, scope: !3861)
!3861 = distinct !DILexicalBlock(scope: !3862, file: !381, line: 664, column: 28)
!3862 = distinct !DILexicalBlock(scope: !3857, file: !381, line: 664, column: 16)
!3863 = !DILocation(line: 670, column: 5, scope: !3861)
!3864 = !DILocation(line: 675, column: 13, scope: !3865)
!3865 = distinct !DILexicalBlock(scope: !3862, file: !381, line: 670, column: 12)
!3866 = !DILocation(line: 675, column: 27, scope: !3865)
!3867 = !DILocation(line: 675, column: 10, scope: !3865)
!3868 = !DILocation(line: 678, column: 10, scope: !3713)
!3869 = !DILocation(line: 680, column: 8, scope: !3709)
!3870 = !DILocation(line: 683, column: 14, scope: !3710)
!3871 = !DILocation(line: 684, column: 12, scope: !3716)
!3872 = !DILocation(line: 0, scope: !3716)
!3873 = !DILocation(line: 686, column: 8, scope: !3716)
!3874 = !DILocation(line: 687, column: 5, scope: !3875)
!3875 = distinct !DILexicalBlock(scope: !3876, file: !381, line: 686, column: 22)
!3876 = distinct !DILexicalBlock(scope: !3716, file: !381, line: 686, column: 8)
!3877 = !DILocation(line: 687, column: 17, scope: !3875)
!3878 = !DILocation(line: 688, column: 4, scope: !3875)
!3879 = !DILocation(line: 698, column: 18, scope: !3722)
!3880 = !DILocation(line: 0, scope: !3722)
!3881 = !DILocation(line: 700, column: 8, scope: !3722)
!3882 = !DILocation(line: 704, column: 6, scope: !3883)
!3883 = distinct !DILexicalBlock(scope: !3884, file: !381, line: 703, column: 12)
!3884 = distinct !DILexicalBlock(scope: !3885, file: !381, line: 701, column: 9)
!3885 = distinct !DILexicalBlock(scope: !3886, file: !381, line: 700, column: 22)
!3886 = distinct !DILexicalBlock(scope: !3722, file: !381, line: 700, column: 8)
!3887 = !DILocation(line: 704, column: 24, scope: !3883)
!3888 = !DILocation(line: 706, column: 4, scope: !3885)
!3889 = !DILocation(line: 0, scope: !3717)
!3890 = !DILocation(line: 0, scope: !3703)
!3891 = !DILocation(line: 720, column: 6, scope: !3892)
!3892 = distinct !DILexicalBlock(scope: !3653, file: !381, line: 720, column: 6)
!3893 = !DILocation(line: 720, column: 17, scope: !3892)
!3894 = !DILocation(line: 720, column: 31, scope: !3892)
!3895 = !DILocation(line: 720, column: 6, scope: !3653)
!3896 = !DILocation(line: 729, column: 6, scope: !3653)
!3897 = !DILocation(line: 730, column: 21, scope: !3898)
!3898 = distinct !DILexicalBlock(scope: !3899, file: !381, line: 729, column: 20)
!3899 = distinct !DILexicalBlock(scope: !3653, file: !381, line: 729, column: 6)
!3900 = !DILocation(line: 730, column: 27, scope: !3898)
!3901 = !DILocation(line: 730, column: 3, scope: !3898)
!3902 = !DILocation(line: 737, column: 22, scope: !3653)
!3903 = !DILocation(line: 737, column: 20, scope: !3653)
!3904 = !DILocation(line: 0, scope: !3905)
!3905 = distinct !DILexicalBlock(scope: !3653, file: !381, line: 739, column: 6)
!3906 = !DILocation(line: 745, column: 17, scope: !3907)
!3907 = distinct !DILexicalBlock(scope: !3905, file: !381, line: 743, column: 9)
!3908 = !DILocation(line: 745, column: 25, scope: !3907)
!3909 = !DILocation(line: 746, column: 17, scope: !3907)
!3910 = !DILocation(line: 746, column: 28, scope: !3907)
!3911 = !DILocation(line: 749, column: 29, scope: !3653)
!3912 = !DILocation(line: 749, column: 16, scope: !3653)
!3913 = !DILocation(line: 749, column: 27, scope: !3653)
!3914 = !DILocation(line: 756, column: 6, scope: !3729)
!3915 = !DILocation(line: 756, column: 6, scope: !3653)
!3916 = !DILocation(line: 757, column: 3, scope: !3727)
!3917 = !DILocation(line: 758, column: 10, scope: !3918)
!3918 = distinct !DILexicalBlock(scope: !3725, file: !381, line: 758, column: 8)
!3919 = !DILocation(line: 758, column: 25, scope: !3918)
!3920 = !DILocation(line: 758, column: 8, scope: !3725)
!3921 = !DILocation(line: 0, scope: !3725)
!3922 = !DILocation(line: 765, column: 8, scope: !3923)
!3923 = distinct !DILexicalBlock(scope: !3725, file: !381, line: 765, column: 8)
!3924 = !DILocation(line: 765, column: 19, scope: !3923)
!3925 = !DILocation(line: 765, column: 23, scope: !3923)
!3926 = !DILocation(line: 765, column: 8, scope: !3725)
!3927 = !DILocation(line: 762, column: 33, scope: !3725)
!3928 = !DILocation(line: 769, column: 8, scope: !3725)
!3929 = !DILocation(line: 769, column: 11, scope: !3725)
!3930 = !DILocation(line: 757, column: 27, scope: !3726)
!3931 = !DILocation(line: 757, column: 17, scope: !3726)
!3932 = distinct !{!3932, !3916, !3933}
!3933 = !DILocation(line: 770, column: 3, scope: !3727)
!3934 = !DILocation(line: 774, column: 16, scope: !3935)
!3935 = distinct !DILexicalBlock(scope: !3936, file: !381, line: 774, column: 2)
!3936 = distinct !DILexicalBlock(scope: !3653, file: !381, line: 774, column: 2)
!3937 = !DILocation(line: 774, column: 2, scope: !3936)
!3938 = !DILocation(line: 776, column: 16, scope: !3939)
!3939 = distinct !DILexicalBlock(scope: !3940, file: !381, line: 776, column: 7)
!3940 = distinct !DILexicalBlock(scope: !3935, file: !381, line: 774, column: 30)
!3941 = !DILocation(line: 776, column: 19, scope: !3939)
!3942 = !DILocation(line: 776, column: 34, scope: !3939)
!3943 = !DILocation(line: 776, column: 7, scope: !3940)
!3944 = !DILocation(line: 780, column: 7, scope: !3940)
!3945 = !DILocation(line: 782, column: 13, scope: !3946)
!3946 = distinct !DILexicalBlock(scope: !3947, file: !381, line: 780, column: 19)
!3947 = distinct !DILexicalBlock(scope: !3940, file: !381, line: 780, column: 7)
!3948 = !DILocation(line: 782, column: 8, scope: !3946)
!3949 = !DILocation(line: 782, column: 11, scope: !3946)
!3950 = !DILocation(line: 783, column: 3, scope: !3946)
!3951 = !DILocation(line: 785, column: 26, scope: !3952)
!3952 = distinct !DILexicalBlock(scope: !3947, file: !381, line: 783, column: 10)
!3953 = !DILocation(line: 785, column: 41, scope: !3952)
!3954 = !DILocation(line: 785, column: 24, scope: !3952)
!3955 = !DILocation(line: 785, column: 8, scope: !3952)
!3956 = !DILocation(line: 787, column: 52, scope: !3952)
!3957 = !DILocation(line: 789, column: 11, scope: !3952)
!3958 = !DILocation(line: 789, column: 21, scope: !3952)
!3959 = !DILocation(line: 0, scope: !3947)
!3960 = !DILocation(line: 793, column: 7, scope: !3961)
!3961 = distinct !DILexicalBlock(scope: !3940, file: !381, line: 793, column: 7)
!3962 = !DILocation(line: 793, column: 18, scope: !3961)
!3963 = !DILocation(line: 793, column: 22, scope: !3961)
!3964 = !DILocation(line: 793, column: 29, scope: !3961)
!3965 = !DILocation(line: 793, column: 7, scope: !3940)
!3966 = !DILocation(line: 797, column: 12, scope: !3940)
!3967 = !DILocation(line: 797, column: 7, scope: !3940)
!3968 = !DILocation(line: 797, column: 10, scope: !3940)
!3969 = !DILocation(line: 799, column: 3, scope: !3940)
!3970 = !DILocation(line: 800, column: 7, scope: !3940)
!3971 = !DILocation(line: 801, column: 2, scope: !3940)
!3972 = !DILocation(line: 338, column: 4, scope: !3653)
!3973 = !DILocation(line: 774, column: 26, scope: !3935)
!3974 = distinct !{!3974, !3937, !3975}
!3975 = !DILocation(line: 801, column: 2, scope: !3936)
!3976 = !DILocation(line: 808, column: 9, scope: !3653)
!3977 = !DILocation(line: 808, column: 2, scope: !3653)
!3978 = !DILocation(line: 813, column: 1, scope: !3653)
!3979 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !381, file: !381, line: 33, type: !3980, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !3982)
!3980 = !DISubroutineType(types: !3981)
!3981 = !{!131, !337}
!3982 = !{!3983}
!3983 = !DILocalVariable(name: "addr", arg: 1, scope: !3979, file: !381, line: 33, type: !337)
!3984 = !DILocation(line: 0, scope: !3979)
!3985 = !DILocation(line: 41, column: 9, scope: !3979)
!3986 = !DILocation(line: 41, column: 2, scope: !3979)
!3987 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !3988, file: !3988, line: 24, type: !3989, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !3991)
!3988 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3989 = !DISubroutineType(types: !3990)
!3990 = !{!131, !13}
!3991 = !{!3992}
!3992 = !DILocalVariable(name: "addr", arg: 1, scope: !3987, file: !3988, line: 24, type: !13)
!3993 = !DILocation(line: 0, scope: !3987)
!3994 = !DILocation(line: 49, column: 30, scope: !3987)
!3995 = !DILocation(line: 49, column: 57, scope: !3987)
!3996 = !DILocation(line: 49, column: 2, scope: !3987)
!3997 = distinct !DISubprogram(name: "cbprintf_package", scope: !381, file: !381, line: 815, type: !3998, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !4000)
!3998 = !DISubroutineType(types: !3999)
!3999 = !{!103, !102, !132, !108, !337, null}
!4000 = !{!4001, !4002, !4003, !4004, !4005, !4006}
!4001 = !DILocalVariable(name: "packaged", arg: 1, scope: !3997, file: !381, line: 815, type: !102)
!4002 = !DILocalVariable(name: "len", arg: 2, scope: !3997, file: !381, line: 815, type: !132)
!4003 = !DILocalVariable(name: "flags", arg: 3, scope: !3997, file: !381, line: 815, type: !108)
!4004 = !DILocalVariable(name: "format", arg: 4, scope: !3997, file: !381, line: 816, type: !337)
!4005 = !DILocalVariable(name: "ap", scope: !3997, file: !381, line: 818, type: !3656)
!4006 = !DILocalVariable(name: "ret", scope: !3997, file: !381, line: 819, type: !103)
!4007 = !DILocation(line: 0, scope: !3997)
!4008 = !DILocation(line: 818, column: 2, scope: !3997)
!4009 = !DILocation(line: 818, column: 10, scope: !3997)
!4010 = !DILocation(line: 821, column: 2, scope: !3997)
!4011 = !DILocation(line: 822, column: 8, scope: !3997)
!4012 = !DILocation(line: 823, column: 2, scope: !3997)
!4013 = !DILocation(line: 825, column: 1, scope: !3997)
!4014 = !DILocation(line: 824, column: 2, scope: !3997)
!4015 = distinct !DISubprogram(name: "cbpprintf_external", scope: !381, file: !381, line: 827, type: !4016, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !4026)
!4016 = !DISubroutineType(types: !4017)
!4017 = !{!103, !4018, !4022, !102, !102}
!4018 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3689, line: 297, baseType: !4019)
!4019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4020, size: 32)
!4020 = !DISubroutineType(types: !4021)
!4021 = !{!103, null}
!4022 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !3689, line: 328, baseType: !4023)
!4023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4024, size: 32)
!4024 = !DISubroutineType(types: !4025)
!4025 = !{!103, !4018, !102, !337, !3656}
!4026 = !{!4027, !4028, !4029, !4030, !4031, !4032, !4038, !4039, !4040, !4041, !4042, !4043, !4044, !4045}
!4027 = !DILocalVariable(name: "out", arg: 1, scope: !4015, file: !381, line: 827, type: !4018)
!4028 = !DILocalVariable(name: "formatter", arg: 2, scope: !4015, file: !381, line: 828, type: !4022)
!4029 = !DILocalVariable(name: "ctx", arg: 3, scope: !4015, file: !381, line: 829, type: !102)
!4030 = !DILocalVariable(name: "packaged", arg: 4, scope: !4015, file: !381, line: 829, type: !102)
!4031 = !DILocalVariable(name: "buf", scope: !4015, file: !381, line: 831, type: !379)
!4032 = !DILocalVariable(name: "hdr", scope: !4015, file: !381, line: 832, type: !4033)
!4033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4034, size: 32)
!4034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !3689, line: 96, size: 64, elements: !4035)
!4035 = !{!4036, !4037}
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !4034, file: !3689, line: 98, baseType: !3688, size: 32)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !4034, file: !3689, line: 101, baseType: !277, size: 32, offset: 32)
!4038 = !DILocalVariable(name: "s", scope: !4015, file: !381, line: 833, type: !277)
!4039 = !DILocalVariable(name: "ps", scope: !4015, file: !381, line: 833, type: !378)
!4040 = !DILocalVariable(name: "i", scope: !4015, file: !381, line: 834, type: !32)
!4041 = !DILocalVariable(name: "args_size", scope: !4015, file: !381, line: 834, type: !32)
!4042 = !DILocalVariable(name: "s_nbr", scope: !4015, file: !381, line: 834, type: !32)
!4043 = !DILocalVariable(name: "ros_nbr", scope: !4015, file: !381, line: 834, type: !32)
!4044 = !DILocalVariable(name: "rws_nbr", scope: !4015, file: !381, line: 834, type: !32)
!4045 = !DILocalVariable(name: "s_idx", scope: !4015, file: !381, line: 834, type: !32)
!4046 = !DILocation(line: 0, scope: !4015)
!4047 = !DILocation(line: 836, column: 10, scope: !4048)
!4048 = distinct !DILexicalBlock(scope: !4015, file: !381, line: 836, column: 6)
!4049 = !DILocation(line: 836, column: 6, scope: !4015)
!4050 = !DILocation(line: 842, column: 28, scope: !4015)
!4051 = !DILocation(line: 842, column: 14, scope: !4015)
!4052 = !DILocation(line: 852, column: 16, scope: !4053)
!4053 = distinct !DILexicalBlock(scope: !4054, file: !381, line: 852, column: 2)
!4054 = distinct !DILexicalBlock(scope: !4015, file: !381, line: 852, column: 2)
!4055 = !DILocation(line: 852, column: 2, scope: !4054)
!4056 = !DILocation(line: 841, column: 28, scope: !4015)
!4057 = !DILocation(line: 841, column: 14, scope: !4015)
!4058 = !DILocation(line: 841, column: 32, scope: !4015)
!4059 = !DILocation(line: 847, column: 19, scope: !4015)
!4060 = !DILocation(line: 843, column: 28, scope: !4015)
!4061 = !DILocation(line: 843, column: 14, scope: !4015)
!4062 = !DILocation(line: 847, column: 31, scope: !4015)
!4063 = !DILocation(line: 844, column: 28, scope: !4015)
!4064 = !DILocation(line: 844, column: 14, scope: !4015)
!4065 = !DILocation(line: 847, column: 45, scope: !4015)
!4066 = !DILocation(line: 847, column: 41, scope: !4015)
!4067 = !DILocation(line: 854, column: 24, scope: !4068)
!4068 = distinct !DILexicalBlock(scope: !4053, file: !381, line: 852, column: 30)
!4069 = !DILocation(line: 854, column: 11, scope: !4068)
!4070 = !DILocation(line: 855, column: 30, scope: !4068)
!4071 = !DILocation(line: 855, column: 22, scope: !4068)
!4072 = !DILocation(line: 855, column: 8, scope: !4068)
!4073 = !DILocation(line: 857, column: 7, scope: !4068)
!4074 = !DILocation(line: 859, column: 8, scope: !4068)
!4075 = !DILocation(line: 859, column: 18, scope: !4068)
!4076 = !DILocation(line: 859, column: 5, scope: !4068)
!4077 = !DILocation(line: 852, column: 26, scope: !4053)
!4078 = distinct !{!4078, !4055, !4079}
!4079 = !DILocation(line: 860, column: 2, scope: !4054)
!4080 = !DILocation(line: 863, column: 6, scope: !4015)
!4081 = !DILocation(line: 866, column: 56, scope: !4015)
!4082 = !DILocation(line: 866, column: 9, scope: !4015)
!4083 = !DILocation(line: 866, column: 2, scope: !4015)
!4084 = !DILocation(line: 867, column: 1, scope: !4015)
!4085 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !381, file: !381, line: 179, type: !4086, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !4088)
!4086 = !DISubroutineType(types: !4087)
!4087 = !{!103, !4018, !4022, !102, !337, !102}
!4088 = !{!4089, !4090, !4091, !4092, !4093, !4094}
!4089 = !DILocalVariable(name: "out", arg: 1, scope: !4085, file: !381, line: 179, type: !4018)
!4090 = !DILocalVariable(name: "formatter", arg: 2, scope: !4085, file: !381, line: 180, type: !4022)
!4091 = !DILocalVariable(name: "ctx", arg: 3, scope: !4085, file: !381, line: 181, type: !102)
!4092 = !DILocalVariable(name: "fmt", arg: 4, scope: !4085, file: !381, line: 182, type: !337)
!4093 = !DILocalVariable(name: "buf", arg: 5, scope: !4085, file: !381, line: 182, type: !102)
!4094 = !DILocalVariable(name: "u", scope: !4085, file: !381, line: 187, type: !4095)
!4095 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4085, file: !381, line: 184, size: 32, elements: !4096)
!4096 = !{!4097, !4098}
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !4095, file: !381, line: 185, baseType: !3656, size: 32)
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4095, file: !381, line: 186, baseType: !102, size: 32)
!4099 = !DILocation(line: 0, scope: !4085)
!4100 = !DILocation(line: 191, column: 9, scope: !4085)
!4101 = !DILocation(line: 191, column: 2, scope: !4085)
!4102 = distinct !DISubprogram(name: "is_ptr", scope: !381, file: !381, line: 881, type: !4103, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !4105)
!4103 = !DISubroutineType(types: !4104)
!4104 = !{!131, !337, !103}
!4105 = !{!4106, !4107, !4108, !4109, !4110}
!4106 = !DILocalVariable(name: "fmt", arg: 1, scope: !4102, file: !381, line: 881, type: !337)
!4107 = !DILocalVariable(name: "n", arg: 2, scope: !4102, file: !381, line: 881, type: !103)
!4108 = !DILocalVariable(name: "c", scope: !4102, file: !381, line: 883, type: !278)
!4109 = !DILocalVariable(name: "mod", scope: !4102, file: !381, line: 884, type: !131)
!4110 = !DILocalVariable(name: "cnt", scope: !4102, file: !381, line: 885, type: !103)
!4111 = !DILocation(line: 0, scope: !4102)
!4112 = !DILocation(line: 887, column: 14, scope: !4102)
!4113 = !DILocation(line: 887, column: 22, scope: !4102)
!4114 = !DILocation(line: 887, column: 2, scope: !4102)
!4115 = !DILocation(line: 887, column: 18, scope: !4102)
!4116 = !DILocation(line: 888, column: 7, scope: !4117)
!4117 = distinct !DILexicalBlock(scope: !4102, file: !381, line: 887, column: 31)
!4118 = !DILocation(line: 889, column: 12, scope: !4119)
!4119 = distinct !DILexicalBlock(scope: !4120, file: !381, line: 889, column: 8)
!4120 = distinct !DILexicalBlock(scope: !4121, file: !381, line: 888, column: 12)
!4121 = distinct !DILexicalBlock(scope: !4117, file: !381, line: 888, column: 7)
!4122 = !DILocation(line: 889, column: 8, scope: !4120)
!4123 = !DILocation(line: 890, column: 11, scope: !4124)
!4124 = distinct !DILexicalBlock(scope: !4125, file: !381, line: 890, column: 9)
!4125 = distinct !DILexicalBlock(scope: !4119, file: !381, line: 889, column: 18)
!4126 = !DILocation(line: 890, column: 9, scope: !4125)
!4127 = !DILocation(line: 892, column: 16, scope: !4128)
!4128 = distinct !DILexicalBlock(scope: !4124, file: !381, line: 892, column: 16)
!4129 = !DILocation(line: 892, column: 16, scope: !4124)
!4130 = !DILocation(line: 895, column: 15, scope: !4131)
!4131 = distinct !DILexicalBlock(scope: !4119, file: !381, line: 895, column: 15)
!4132 = !DILocation(line: 895, column: 15, scope: !4119)
!4133 = !DILocation(line: 900, column: 9, scope: !4134)
!4134 = distinct !DILexicalBlock(scope: !4117, file: !381, line: 900, column: 7)
!4135 = !DILocation(line: 900, column: 7, scope: !4117)
!4136 = distinct !{!4136, !4114, !4137}
!4137 = !DILocation(line: 903, column: 2, scope: !4102)
!4138 = !DILocation(line: 906, column: 1, scope: !4102)
!4139 = distinct !DISubprogram(name: "is_fmt_spec", scope: !381, file: !381, line: 873, type: !4140, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !4142)
!4140 = !DISubroutineType(types: !4141)
!4141 = !{!131, !278}
!4142 = !{!4143}
!4143 = !DILocalVariable(name: "c", arg: 1, scope: !4139, file: !381, line: 873, type: !278)
!4144 = !DILocation(line: 0, scope: !4139)
!4145 = !DILocation(line: 875, column: 19, scope: !4139)
!4146 = !DILocation(line: 875, column: 2, scope: !4139)
!4147 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !381, file: !381, line: 908, type: !4148, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !4154)
!4148 = !DISubroutineType(types: !4149)
!4149 = !{!103, !102, !132, !4150, !102, !108, !2683, !132}
!4150 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !3689, line: 308, baseType: !4151)
!4151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4152, size: 32)
!4152 = !DISubroutineType(types: !4153)
!4153 = !{!103, !13, !132, !102}
!4154 = !{!4155, !4156, !4157, !4158, !4159, !4160, !4161, !4162, !4163, !4164, !4165, !4166, !4167, !4168, !4169, !4170, !4172, !4173, !4174, !4175, !4176, !4182, !4185, !4186, !4187, !4189, !4192, !4193, !4194, !4195, !4196, !4197, !4198, !4199, !4200, !4201, !4202, !4203, !4205, !4208, !4209, !4210, !4211, !4212, !4213, !4215, !4218, !4219, !4220}
!4155 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !4147, file: !381, line: 908, type: !102)
!4156 = !DILocalVariable(name: "in_len", arg: 2, scope: !4147, file: !381, line: 909, type: !132)
!4157 = !DILocalVariable(name: "cb", arg: 3, scope: !4147, file: !381, line: 910, type: !4150)
!4158 = !DILocalVariable(name: "ctx", arg: 4, scope: !4147, file: !381, line: 911, type: !102)
!4159 = !DILocalVariable(name: "flags", arg: 5, scope: !4147, file: !381, line: 912, type: !108)
!4160 = !DILocalVariable(name: "strl", arg: 6, scope: !4147, file: !381, line: 913, type: !2683)
!4161 = !DILocalVariable(name: "strl_len", arg: 7, scope: !4147, file: !381, line: 914, type: !132)
!4162 = !DILocalVariable(name: "buf", scope: !4147, file: !381, line: 918, type: !379)
!4163 = !DILocalVariable(name: "buf32", scope: !4147, file: !381, line: 919, type: !986)
!4164 = !DILocalVariable(name: "args_size", scope: !4147, file: !381, line: 920, type: !32)
!4165 = !DILocalVariable(name: "ros_nbr", scope: !4147, file: !381, line: 920, type: !32)
!4166 = !DILocalVariable(name: "rws_nbr", scope: !4147, file: !381, line: 920, type: !32)
!4167 = !DILocalVariable(name: "fmt_present", scope: !4147, file: !381, line: 921, type: !131)
!4168 = !DILocalVariable(name: "rw_cpy", scope: !4147, file: !381, line: 922, type: !131)
!4169 = !DILocalVariable(name: "ro_cpy", scope: !4147, file: !381, line: 923, type: !131)
!4170 = !DILocalVariable(name: "in_desc", scope: !4147, file: !381, line: 924, type: !4171)
!4171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3692, size: 32)
!4172 = !DILocalVariable(name: "out_len", scope: !4147, file: !381, line: 960, type: !103)
!4173 = !DILocalVariable(name: "fmt", scope: !4147, file: !381, line: 965, type: !337)
!4174 = !DILocalVariable(name: "str_pos", scope: !4147, file: !381, line: 966, type: !379)
!4175 = !DILocalVariable(name: "strl_cnt", scope: !4147, file: !381, line: 967, type: !132)
!4176 = !DILocalVariable(name: "i", scope: !4177, file: !381, line: 973, type: !103)
!4177 = distinct !DILexicalBlock(scope: !4178, file: !381, line: 973, column: 4)
!4178 = distinct !DILexicalBlock(scope: !4179, file: !381, line: 972, column: 15)
!4179 = distinct !DILexicalBlock(scope: !4180, file: !381, line: 972, column: 7)
!4180 = distinct !DILexicalBlock(scope: !4181, file: !381, line: 970, column: 18)
!4181 = distinct !DILexicalBlock(scope: !4147, file: !381, line: 970, column: 6)
!4182 = !DILocalVariable(name: "str", scope: !4183, file: !381, line: 974, type: !337)
!4183 = distinct !DILexicalBlock(scope: !4184, file: !381, line: 973, column: 38)
!4184 = distinct !DILexicalBlock(scope: !4177, file: !381, line: 973, column: 4)
!4185 = !DILocalVariable(name: "len", scope: !4183, file: !381, line: 975, type: !103)
!4186 = !DILocalVariable(name: "drop_ro_str_pos", scope: !4180, file: !381, line: 990, type: !131)
!4187 = !DILocalVariable(name: "i", scope: !4188, file: !381, line: 995, type: !103)
!4188 = distinct !DILexicalBlock(scope: !4180, file: !381, line: 995, column: 3)
!4189 = !DILocalVariable(name: "arg_idx", scope: !4190, file: !381, line: 996, type: !185)
!4190 = distinct !DILexicalBlock(scope: !4191, file: !381, line: 995, column: 37)
!4191 = distinct !DILexicalBlock(scope: !4188, file: !381, line: 995, column: 3)
!4192 = !DILocalVariable(name: "arg_pos", scope: !4190, file: !381, line: 997, type: !185)
!4193 = !DILocalVariable(name: "str", scope: !4190, file: !381, line: 998, type: !337)
!4194 = !DILocalVariable(name: "is_ro", scope: !4190, file: !381, line: 999, type: !131)
!4195 = !DILocalVariable(name: "len", scope: !4190, file: !381, line: 1000, type: !103)
!4196 = !DILocalVariable(name: "out_desc", scope: !4147, file: !381, line: 1038, type: !3692)
!4197 = !DILocalVariable(name: "cpy_str_pos", scope: !4147, file: !381, line: 1040, type: !3674)
!4198 = !DILocalVariable(name: "keep_str_pos", scope: !4147, file: !381, line: 1042, type: !3674)
!4199 = !DILocalVariable(name: "scpy_cnt", scope: !4147, file: !381, line: 1043, type: !185)
!4200 = !DILocalVariable(name: "keep_cnt", scope: !4147, file: !381, line: 1044, type: !185)
!4201 = !DILocalVariable(name: "dst", scope: !4147, file: !381, line: 1045, type: !379)
!4202 = !DILocalVariable(name: "rv", scope: !4147, file: !381, line: 1046, type: !103)
!4203 = !DILocalVariable(name: "i", scope: !4204, file: !381, line: 1074, type: !103)
!4204 = distinct !DILexicalBlock(scope: !4147, file: !381, line: 1074, column: 2)
!4205 = !DILocalVariable(name: "arg_idx", scope: !4206, file: !381, line: 1075, type: !185)
!4206 = distinct !DILexicalBlock(scope: !4207, file: !381, line: 1074, column: 36)
!4207 = distinct !DILexicalBlock(scope: !4204, file: !381, line: 1074, column: 2)
!4208 = !DILocalVariable(name: "arg_pos", scope: !4206, file: !381, line: 1076, type: !185)
!4209 = !DILocalVariable(name: "str", scope: !4206, file: !381, line: 1077, type: !337)
!4210 = !DILocalVariable(name: "is_ro", scope: !4206, file: !381, line: 1078, type: !131)
!4211 = !DILocalVariable(name: "in_desc_backup", scope: !4147, file: !381, line: 1114, type: !3692)
!4212 = !DILocalVariable(name: "strs_len", scope: !4147, file: !381, line: 1134, type: !132)
!4213 = !DILocalVariable(name: "i", scope: !4214, file: !381, line: 1143, type: !103)
!4214 = distinct !DILexicalBlock(scope: !4147, file: !381, line: 1143, column: 2)
!4215 = !DILocalVariable(name: "loc", scope: !4216, file: !381, line: 1144, type: !185)
!4216 = distinct !DILexicalBlock(scope: !4217, file: !381, line: 1143, column: 37)
!4217 = distinct !DILexicalBlock(scope: !4214, file: !381, line: 1143, column: 2)
!4218 = !DILocalVariable(name: "str", scope: !4216, file: !381, line: 1145, type: !337)
!4219 = !DILocalVariable(name: "str_len", scope: !4216, file: !381, line: 1146, type: !121)
!4220 = !DILabel(scope: !4221, name: "calculate_string_length", file: !381, line: 1021)
!4221 = distinct !DILexicalBlock(scope: !4222, file: !381, line: 1020, column: 56)
!4222 = distinct !DILexicalBlock(scope: !4223, file: !381, line: 1020, column: 15)
!4223 = distinct !DILexicalBlock(scope: !4190, file: !381, line: 1014, column: 8)
!4224 = !DILocation(line: 0, scope: !4147)
!4225 = !DILocation(line: 919, column: 20, scope: !4147)
!4226 = !DILocation(line: 921, column: 27, scope: !4147)
!4227 = !DILocation(line: 921, column: 21, scope: !4147)
!4228 = !DILocation(line: 926, column: 18, scope: !4147)
!4229 = !DILocation(line: 926, column: 11, scope: !4147)
!4230 = !DILocation(line: 926, column: 34, scope: !4147)
!4231 = !DILocation(line: 931, column: 21, scope: !4147)
!4232 = !DILocation(line: 931, column: 12, scope: !4147)
!4233 = !DILocation(line: 932, column: 11, scope: !4147)
!4234 = !DILocation(line: 932, column: 19, scope: !4147)
!4235 = !DILocation(line: 938, column: 21, scope: !4147)
!4236 = !DILocation(line: 938, column: 12, scope: !4147)
!4237 = !DILocation(line: 939, column: 19, scope: !4147)
!4238 = !DILocation(line: 939, column: 23, scope: !4147)
!4239 = !DILocation(line: 946, column: 14, scope: !4240)
!4240 = distinct !DILexicalBlock(scope: !4147, file: !381, line: 946, column: 6)
!4241 = !DILocation(line: 947, column: 7, scope: !4242)
!4242 = distinct !DILexicalBlock(scope: !4243, file: !381, line: 947, column: 7)
!4243 = distinct !DILexicalBlock(scope: !4240, file: !381, line: 946, column: 26)
!4244 = !DILocation(line: 947, column: 7, scope: !4243)
!4245 = !DILocation(line: 948, column: 4, scope: !4246)
!4246 = distinct !DILexicalBlock(scope: !4242, file: !381, line: 947, column: 11)
!4247 = !DILocation(line: 949, column: 3, scope: !4246)
!4248 = !DILocation(line: 958, column: 23, scope: !4147)
!4249 = !DILocation(line: 958, column: 14, scope: !4147)
!4250 = !DILocation(line: 958, column: 27, scope: !4147)
!4251 = !DILocation(line: 965, column: 41, scope: !4147)
!4252 = !DILocation(line: 965, column: 20, scope: !4147)
!4253 = !DILocation(line: 966, column: 22, scope: !4147)
!4254 = !DILocation(line: 970, column: 9, scope: !4181)
!4255 = !DILocation(line: 970, column: 6, scope: !4147)
!4256 = !DILocation(line: 972, column: 7, scope: !4180)
!4257 = !DILocation(line: 0, scope: !4177)
!4258 = !DILocation(line: 973, column: 4, scope: !4177)
!4259 = !DILocation(line: 974, column: 46, scope: !4183)
!4260 = !DILocation(line: 974, column: 40, scope: !4183)
!4261 = !DILocation(line: 974, column: 23, scope: !4183)
!4262 = !DILocation(line: 0, scope: !4183)
!4263 = !DILocation(line: 975, column: 15, scope: !4183)
!4264 = !DILocation(line: 978, column: 14, scope: !4265)
!4265 = distinct !DILexicalBlock(scope: !4183, file: !381, line: 978, column: 9)
!4266 = !DILocation(line: 979, column: 25, scope: !4267)
!4267 = distinct !DILexicalBlock(scope: !4265, file: !381, line: 978, column: 38)
!4268 = !DILocation(line: 979, column: 19, scope: !4267)
!4269 = !DILocation(line: 979, column: 6, scope: !4267)
!4270 = !DILocation(line: 979, column: 23, scope: !4267)
!4271 = !DILocation(line: 980, column: 5, scope: !4267)
!4272 = !DILocation(line: 981, column: 13, scope: !4183)
!4273 = !DILocation(line: 982, column: 12, scope: !4183)
!4274 = !DILocation(line: 973, column: 34, scope: !4184)
!4275 = !DILocation(line: 973, column: 22, scope: !4184)
!4276 = distinct !{!4276, !4258, !4277}
!4277 = !DILocation(line: 983, column: 4, scope: !4177)
!4278 = !DILocation(line: 985, column: 16, scope: !4279)
!4279 = distinct !DILexicalBlock(scope: !4280, file: !381, line: 985, column: 8)
!4280 = distinct !DILexicalBlock(scope: !4179, file: !381, line: 984, column: 10)
!4281 = !DILocation(line: 967, column: 9, scope: !4147)
!4282 = !DILocation(line: 971, column: 11, scope: !4180)
!4283 = !DILocation(line: 0, scope: !4180)
!4284 = !DILocation(line: 0, scope: !4188)
!4285 = !DILocation(line: 995, column: 21, scope: !4191)
!4286 = !DILocation(line: 995, column: 3, scope: !4188)
!4287 = !DILocation(line: 990, column: 34, scope: !4180)
!4288 = !DILocation(line: 990, column: 26, scope: !4180)
!4289 = !DILocation(line: 996, column: 30, scope: !4190)
!4290 = !DILocation(line: 0, scope: !4190)
!4291 = !DILocation(line: 997, column: 30, scope: !4190)
!4292 = !DILocation(line: 997, column: 22, scope: !4190)
!4293 = !DILocation(line: 998, column: 39, scope: !4190)
!4294 = !DILocation(line: 998, column: 22, scope: !4190)
!4295 = !DILocation(line: 999, column: 17, scope: !4190)
!4296 = !DILocation(line: 1002, column: 20, scope: !4297)
!4297 = distinct !DILexicalBlock(scope: !4190, file: !381, line: 1002, column: 8)
!4298 = !DILocation(line: 996, column: 22, scope: !4190)
!4299 = !DILocation(line: 1002, column: 35, scope: !4297)
!4300 = !DILocation(line: 1002, column: 23, scope: !4297)
!4301 = !DILocation(line: 1002, column: 8, scope: !4190)
!4302 = !DILocation(line: 1003, column: 5, scope: !4303)
!4303 = distinct !DILexicalBlock(scope: !4304, file: !381, line: 1003, column: 5)
!4304 = distinct !DILexicalBlock(scope: !4305, file: !381, line: 1003, column: 5)
!4305 = distinct !DILexicalBlock(scope: !4306, file: !381, line: 1003, column: 5)
!4306 = distinct !DILexicalBlock(scope: !4307, file: !381, line: 1003, column: 5)
!4307 = distinct !DILexicalBlock(scope: !4297, file: !381, line: 1002, column: 45)
!4308 = !DILocation(line: 1010, column: 13, scope: !4307)
!4309 = !DILocation(line: 1011, column: 5, scope: !4307)
!4310 = !DILocation(line: 1014, column: 8, scope: !4190)
!4311 = !DILocation(line: 1015, column: 9, scope: !4312)
!4312 = distinct !DILexicalBlock(scope: !4223, file: !381, line: 1014, column: 15)
!4313 = !DILocation(line: 1018, column: 14, scope: !4314)
!4314 = distinct !DILexicalBlock(scope: !4315, file: !381, line: 1017, column: 12)
!4315 = distinct !DILexicalBlock(scope: !4312, file: !381, line: 1015, column: 9)
!4316 = !DILocation(line: 1020, column: 4, scope: !4312)
!4317 = !DILocation(line: 1020, column: 15, scope: !4223)
!4318 = !DILocation(line: 1021, column: 1, scope: !4221)
!4319 = !DILocation(line: 1022, column: 11, scope: !4221)
!4320 = !DILocation(line: 1025, column: 14, scope: !4321)
!4321 = distinct !DILexicalBlock(scope: !4221, file: !381, line: 1025, column: 9)
!4322 = !DILocation(line: 1026, column: 25, scope: !4323)
!4323 = distinct !DILexicalBlock(scope: !4321, file: !381, line: 1025, column: 38)
!4324 = !DILocation(line: 1026, column: 19, scope: !4323)
!4325 = !DILocation(line: 1026, column: 6, scope: !4323)
!4326 = !DILocation(line: 1026, column: 23, scope: !4323)
!4327 = !DILocation(line: 1027, column: 5, scope: !4323)
!4328 = !DILocation(line: 1031, column: 21, scope: !4221)
!4329 = !DILocation(line: 1031, column: 13, scope: !4221)
!4330 = !DILocation(line: 1032, column: 4, scope: !4221)
!4331 = !DILocation(line: 995, column: 33, scope: !4191)
!4332 = distinct !{!4332, !4286, !4333}
!4333 = !DILocation(line: 1033, column: 3, scope: !4188)
!4334 = !DILocation(line: 1040, column: 10, scope: !4147)
!4335 = !DILocation(line: 1042, column: 10, scope: !4147)
!4336 = !DILocation(line: 1052, column: 6, scope: !4147)
!4337 = !DILocation(line: 1055, column: 9, scope: !4338)
!4338 = distinct !DILexicalBlock(scope: !4339, file: !381, line: 1052, column: 14)
!4339 = distinct !DILexicalBlock(scope: !4147, file: !381, line: 1052, column: 6)
!4340 = !DILocation(line: 1056, column: 2, scope: !4338)
!4341 = !DILocation(line: 1056, column: 21, scope: !4342)
!4342 = distinct !DILexicalBlock(scope: !4339, file: !381, line: 1056, column: 13)
!4343 = !DILocation(line: 1066, column: 3, scope: !4344)
!4344 = distinct !DILexicalBlock(scope: !4345, file: !381, line: 1065, column: 11)
!4345 = distinct !DILexicalBlock(scope: !4147, file: !381, line: 1065, column: 6)
!4346 = !DILocation(line: 1067, column: 2, scope: !4344)
!4347 = !DILocation(line: 1068, column: 10, scope: !4147)
!4348 = !DILocation(line: 0, scope: !4204)
!4349 = !DILocation(line: 1074, column: 20, scope: !4207)
!4350 = !DILocation(line: 1074, column: 2, scope: !4204)
!4351 = !DILocation(line: 1110, column: 24, scope: !4147)
!4352 = !DILocation(line: 1053, column: 12, scope: !4338)
!4353 = !DILocation(line: 1054, column: 12, scope: !4338)
!4354 = !DILocation(line: 1108, column: 30, scope: !4147)
!4355 = !DILocation(line: 1108, column: 40, scope: !4147)
!4356 = !DILocation(line: 1108, column: 38, scope: !4147)
!4357 = !DILocation(line: 1109, column: 31, scope: !4147)
!4358 = !DILocation(line: 1109, column: 24, scope: !4147)
!4359 = !DILocation(line: 1110, column: 31, scope: !4147)
!4360 = !DILocation(line: 1114, column: 31, scope: !4147)
!4361 = !DILocation(line: 1114, column: 48, scope: !4147)
!4362 = !DILocation(line: 1115, column: 13, scope: !4147)
!4363 = !DILocation(line: 1118, column: 7, scope: !4147)
!4364 = !DILocation(line: 1119, column: 9, scope: !4365)
!4365 = distinct !DILexicalBlock(scope: !4147, file: !381, line: 1119, column: 6)
!4366 = !DILocation(line: 1119, column: 6, scope: !4147)
!4367 = !DILocation(line: 1075, column: 29, scope: !4206)
!4368 = !DILocation(line: 1075, column: 21, scope: !4206)
!4369 = !DILocation(line: 0, scope: !4206)
!4370 = !DILocation(line: 1076, column: 29, scope: !4206)
!4371 = !DILocation(line: 1076, column: 21, scope: !4206)
!4372 = !DILocation(line: 1077, column: 38, scope: !4206)
!4373 = !DILocation(line: 1077, column: 21, scope: !4206)
!4374 = !DILocation(line: 1078, column: 16, scope: !4206)
!4375 = !DILocation(line: 1080, column: 19, scope: !4376)
!4376 = distinct !DILexicalBlock(scope: !4206, file: !381, line: 1080, column: 7)
!4377 = !DILocation(line: 1080, column: 34, scope: !4376)
!4378 = !DILocation(line: 1080, column: 22, scope: !4376)
!4379 = !DILocation(line: 1080, column: 7, scope: !4206)
!4380 = !DILocation(line: 1084, column: 7, scope: !4206)
!4381 = !DILocation(line: 1085, column: 8, scope: !4382)
!4382 = distinct !DILexicalBlock(scope: !4383, file: !381, line: 1084, column: 14)
!4383 = distinct !DILexicalBlock(scope: !4206, file: !381, line: 1084, column: 7)
!4384 = !DILocation(line: 1087, column: 25, scope: !4385)
!4385 = distinct !DILexicalBlock(scope: !4386, file: !381, line: 1085, column: 49)
!4386 = distinct !DILexicalBlock(scope: !4382, file: !381, line: 1085, column: 8)
!4387 = !DILocation(line: 1088, column: 4, scope: !4385)
!4388 = !DILocation(line: 1088, column: 15, scope: !4386)
!4389 = !DILocation(line: 1090, column: 26, scope: !4390)
!4390 = distinct !DILexicalBlock(scope: !4391, file: !381, line: 1088, column: 61)
!4391 = distinct !DILexicalBlock(scope: !4386, file: !381, line: 1088, column: 15)
!4392 = !DILocation(line: 1091, column: 4, scope: !4390)
!4393 = !DILocation(line: 1095, column: 8, scope: !4394)
!4394 = distinct !DILexicalBlock(scope: !4383, file: !381, line: 1094, column: 10)
!4395 = !DILocation(line: 1097, column: 25, scope: !4396)
!4396 = distinct !DILexicalBlock(scope: !4397, file: !381, line: 1095, column: 49)
!4397 = distinct !DILexicalBlock(scope: !4394, file: !381, line: 1095, column: 8)
!4398 = !DILocation(line: 1098, column: 4, scope: !4396)
!4399 = !DILocation(line: 1100, column: 26, scope: !4400)
!4400 = distinct !DILexicalBlock(scope: !4397, file: !381, line: 1098, column: 11)
!4401 = !DILocation(line: 1100, column: 5, scope: !4400)
!4402 = !DILocation(line: 1100, column: 30, scope: !4400)
!4403 = !DILocation(line: 1101, column: 26, scope: !4400)
!4404 = !DILocation(line: 0, scope: !4383)
!4405 = !DILocation(line: 1074, column: 32, scope: !4207)
!4406 = distinct !{!4406, !4350, !4407}
!4407 = !DILocation(line: 1104, column: 2, scope: !4204)
!4408 = !DILocation(line: 1124, column: 13, scope: !4147)
!4409 = !DILocation(line: 1127, column: 10, scope: !4147)
!4410 = !DILocation(line: 1127, column: 7, scope: !4147)
!4411 = !DILocation(line: 1128, column: 9, scope: !4412)
!4412 = distinct !DILexicalBlock(scope: !4147, file: !381, line: 1128, column: 6)
!4413 = !DILocation(line: 1128, column: 6, scope: !4147)
!4414 = !DILocation(line: 1134, column: 27, scope: !4147)
!4415 = !DILocation(line: 1136, column: 7, scope: !4147)
!4416 = !DILocation(line: 1137, column: 9, scope: !4417)
!4417 = distinct !DILexicalBlock(scope: !4147, file: !381, line: 1137, column: 6)
!4418 = !DILocation(line: 1137, column: 6, scope: !4147)
!4419 = !DILocation(line: 1131, column: 10, scope: !4147)
!4420 = !DILocation(line: 1140, column: 10, scope: !4147)
!4421 = !DILocation(line: 0, scope: !4214)
!4422 = !DILocation(line: 1143, column: 20, scope: !4217)
!4423 = !DILocation(line: 1143, column: 2, scope: !4214)
!4424 = !DILocation(line: 1144, column: 3, scope: !4216)
!4425 = !DILocation(line: 1144, column: 17, scope: !4216)
!4426 = !DILocation(line: 0, scope: !4216)
!4427 = !DILocation(line: 1144, column: 11, scope: !4216)
!4428 = !DILocation(line: 1145, column: 38, scope: !4216)
!4429 = !DILocation(line: 1145, column: 21, scope: !4216)
!4430 = !DILocation(line: 1146, column: 22, scope: !4216)
!4431 = !DILocation(line: 1146, column: 29, scope: !4216)
!4432 = !DILocation(line: 1148, column: 8, scope: !4216)
!4433 = !DILocation(line: 1149, column: 10, scope: !4434)
!4434 = distinct !DILexicalBlock(scope: !4216, file: !381, line: 1149, column: 7)
!4435 = !DILocation(line: 1149, column: 7, scope: !4216)
!4436 = !DILocation(line: 1154, column: 8, scope: !4216)
!4437 = !DILocation(line: 1155, column: 10, scope: !4438)
!4438 = distinct !DILexicalBlock(scope: !4216, file: !381, line: 1155, column: 7)
!4439 = !DILocation(line: 1155, column: 7, scope: !4216)
!4440 = !DILocation(line: 1159, column: 2, scope: !4217)
!4441 = !DILocation(line: 1152, column: 11, scope: !4216)
!4442 = !DILocation(line: 1158, column: 11, scope: !4216)
!4443 = !DILocation(line: 1143, column: 33, scope: !4217)
!4444 = distinct !{!4444, !4423, !4445}
!4445 = !DILocation(line: 1159, column: 2, scope: !4214)
!4446 = !DILocation(line: 1162, column: 8, scope: !4147)
!4447 = !DILocation(line: 1164, column: 2, scope: !4147)
!4448 = !DILocation(line: 1165, column: 1, scope: !4147)
!4449 = distinct !DISubprogram(name: "get_package_len", scope: !381, file: !381, line: 196, type: !4450, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !4452)
!4450 = !DISubroutineType(types: !4451)
!4451 = !{!132, !102}
!4452 = !{!4453, !4454, !4455, !4456, !4457, !4458, !4459}
!4453 = !DILocalVariable(name: "packaged", arg: 1, scope: !4449, file: !381, line: 196, type: !102)
!4454 = !DILocalVariable(name: "buf", scope: !4449, file: !381, line: 200, type: !379)
!4455 = !DILocalVariable(name: "start", scope: !4449, file: !381, line: 201, type: !379)
!4456 = !DILocalVariable(name: "args_size", scope: !4449, file: !381, line: 202, type: !32)
!4457 = !DILocalVariable(name: "s_nbr", scope: !4449, file: !381, line: 202, type: !32)
!4458 = !DILocalVariable(name: "ros_nbr", scope: !4449, file: !381, line: 202, type: !32)
!4459 = !DILocalVariable(name: "i", scope: !4460, file: !381, line: 215, type: !103)
!4460 = distinct !DILexicalBlock(scope: !4449, file: !381, line: 215, column: 2)
!4461 = !DILocation(line: 0, scope: !4449)
!4462 = !DILocation(line: 204, column: 14, scope: !4449)
!4463 = !DILocation(line: 204, column: 21, scope: !4449)
!4464 = !DILocation(line: 205, column: 14, scope: !4449)
!4465 = !DILocation(line: 206, column: 14, scope: !4449)
!4466 = !DILocation(line: 209, column: 6, scope: !4449)
!4467 = !DILocation(line: 212, column: 6, scope: !4449)
!4468 = !DILocation(line: 0, scope: !4460)
!4469 = !DILocation(line: 215, column: 20, scope: !4470)
!4470 = distinct !DILexicalBlock(scope: !4460, file: !381, line: 215, column: 2)
!4471 = !DILocation(line: 215, column: 2, scope: !4460)
!4472 = !DILocation(line: 220, column: 33, scope: !4449)
!4473 = !DILocation(line: 220, column: 2, scope: !4449)
!4474 = !DILocation(line: 216, column: 6, scope: !4475)
!4475 = distinct !DILexicalBlock(scope: !4470, file: !381, line: 215, column: 34)
!4476 = !DILocation(line: 217, column: 10, scope: !4475)
!4477 = !DILocation(line: 217, column: 36, scope: !4475)
!4478 = !DILocation(line: 217, column: 7, scope: !4475)
!4479 = !DILocation(line: 215, column: 30, scope: !4470)
!4480 = distinct !{!4480, !4471, !4481}
!4481 = !DILocation(line: 218, column: 2, scope: !4460)
!4482 = distinct !DISubprogram(name: "append_string", scope: !381, file: !381, line: 223, type: !4483, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !4485)
!4483 = !DISubroutineType(types: !4484)
!4484 = !{!103, !4150, !102, !337, !121}
!4485 = !{!4486, !4487, !4488, !4489}
!4486 = !DILocalVariable(name: "cb", arg: 1, scope: !4482, file: !381, line: 223, type: !4150)
!4487 = !DILocalVariable(name: "ctx", arg: 2, scope: !4482, file: !381, line: 223, type: !102)
!4488 = !DILocalVariable(name: "str", arg: 3, scope: !4482, file: !381, line: 223, type: !337)
!4489 = !DILocalVariable(name: "strl", arg: 4, scope: !4482, file: !381, line: 223, type: !121)
!4490 = !DILocation(line: 0, scope: !4482)
!4491 = !DILocation(line: 225, column: 9, scope: !4492)
!4492 = distinct !DILexicalBlock(scope: !4482, file: !381, line: 225, column: 6)
!4493 = !DILocation(line: 225, column: 6, scope: !4482)
!4494 = !DILocation(line: 226, column: 14, scope: !4495)
!4495 = distinct !DILexicalBlock(scope: !4492, file: !381, line: 225, column: 18)
!4496 = !DILocation(line: 226, column: 12, scope: !4495)
!4497 = !DILocation(line: 226, column: 3, scope: !4495)
!4498 = !DILocation(line: 229, column: 14, scope: !4482)
!4499 = !DILocation(line: 229, column: 9, scope: !4482)
!4500 = !DILocation(line: 229, column: 27, scope: !4482)
!4501 = !DILocation(line: 229, column: 39, scope: !4482)
!4502 = !DILocation(line: 230, column: 17, scope: !4482)
!4503 = !DILocation(line: 230, column: 9, scope: !4482)
!4504 = !DILocation(line: 230, column: 2, scope: !4482)
!4505 = !DILocation(line: 231, column: 1, scope: !4482)
!4506 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !394, file: !394, line: 45, type: !396, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4507)
!4507 = !{!4508}
!4508 = !DILocalVariable(name: "c", arg: 1, scope: !4506, file: !394, line: 45, type: !103)
!4509 = !DILocation(line: 0, scope: !4506)
!4510 = !DILocation(line: 50, column: 2, scope: !4506)
!4511 = distinct !DISubprogram(name: "__printk_hook_install", scope: !394, file: !394, line: 63, type: !4512, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4514)
!4512 = !DISubroutineType(types: !4513)
!4513 = !{null, !395}
!4514 = !{!4515}
!4515 = !DILocalVariable(name: "fn", arg: 1, scope: !4511, file: !394, line: 63, type: !395)
!4516 = !DILocation(line: 0, scope: !4511)
!4517 = !DILocation(line: 65, column: 12, scope: !4511)
!4518 = !DILocation(line: 66, column: 1, scope: !4511)
!4519 = distinct !DISubprogram(name: "__printk_get_hook", scope: !394, file: !394, line: 76, type: !4520, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !251)
!4520 = !DISubroutineType(types: !4521)
!4521 = !{!102}
!4522 = !DILocation(line: 78, column: 9, scope: !4519)
!4523 = !DILocation(line: 78, column: 2, scope: !4519)
!4524 = distinct !DISubprogram(name: "vprintk", scope: !394, file: !394, line: 113, type: !4525, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4533)
!4525 = !DISubroutineType(types: !4526)
!4526 = !{null, !337, !4527}
!4527 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3657, line: 99, baseType: !4528)
!4528 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3657, line: 40, baseType: !4529)
!4529 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !394, baseType: !4530)
!4530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4531)
!4531 = !{!4532}
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4530, file: !394, line: 79, baseType: !102, size: 32)
!4533 = !{!4534, !4535, !4536}
!4534 = !DILocalVariable(name: "fmt", arg: 1, scope: !4524, file: !394, line: 113, type: !337)
!4535 = !DILocalVariable(name: "ap", arg: 2, scope: !4524, file: !394, line: 113, type: !4527)
!4536 = !DILocalVariable(name: "ctx", scope: !4537, file: !394, line: 121, type: !4539)
!4537 = distinct !DILexicalBlock(scope: !4538, file: !394, line: 120, column: 27)
!4538 = distinct !DILexicalBlock(scope: !4524, file: !394, line: 120, column: 6)
!4539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !394, line: 81, size: 32, elements: !4540)
!4540 = !{!4541, !4542}
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !4539, file: !394, line: 85, baseType: !32, size: 32)
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4539, file: !394, line: 86, baseType: !4543, offset: 32)
!4543 = !DICompositeType(tag: DW_TAG_array_type, baseType: !278, elements: !2681)
!4544 = !DILocation(line: 0, scope: !4524)
!4545 = !DILocation(line: 148, column: 3, scope: !4546)
!4546 = distinct !DILexicalBlock(scope: !4538, file: !394, line: 138, column: 9)
!4547 = !DILocation(line: 155, column: 1, scope: !4524)
!4548 = distinct !DISubprogram(name: "char_out", scope: !394, file: !394, line: 107, type: !4549, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4551)
!4549 = !DISubroutineType(types: !4550)
!4550 = !{!103, !103, !102}
!4551 = !{!4552, !4553}
!4552 = !DILocalVariable(name: "c", arg: 1, scope: !4548, file: !394, line: 107, type: !103)
!4553 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !4548, file: !394, line: 107, type: !102)
!4554 = !DILocation(line: 0, scope: !4548)
!4555 = !DILocation(line: 110, column: 9, scope: !4548)
!4556 = !DILocation(line: 110, column: 2, scope: !4548)
!4557 = distinct !DISubprogram(name: "cbvprintf", scope: !3689, file: !3689, line: 739, type: !4558, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4560)
!4558 = !DISubroutineType(types: !4559)
!4559 = !{!103, !4018, !102, !337, !4527}
!4560 = !{!4561, !4562, !4563, !4564}
!4561 = !DILocalVariable(name: "out", arg: 1, scope: !4557, file: !3689, line: 739, type: !4018)
!4562 = !DILocalVariable(name: "ctx", arg: 2, scope: !4557, file: !3689, line: 739, type: !102)
!4563 = !DILocalVariable(name: "format", arg: 3, scope: !4557, file: !3689, line: 739, type: !337)
!4564 = !DILocalVariable(name: "ap", arg: 4, scope: !4557, file: !3689, line: 739, type: !4527)
!4565 = !DILocation(line: 0, scope: !4557)
!4566 = !DILocation(line: 741, column: 9, scope: !4557)
!4567 = !DILocation(line: 741, column: 2, scope: !4557)
!4568 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !394, file: !394, line: 157, type: !4569, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4571)
!4569 = !DISubroutineType(types: !4570)
!4570 = !{null, !277, !132}
!4571 = !{!4572, !4573, !4574}
!4572 = !DILocalVariable(name: "c", arg: 1, scope: !4568, file: !394, line: 157, type: !277)
!4573 = !DILocalVariable(name: "n", arg: 2, scope: !4568, file: !394, line: 157, type: !132)
!4574 = !DILocalVariable(name: "i", scope: !4568, file: !394, line: 159, type: !132)
!4575 = !DILocation(line: 0, scope: !4568)
!4576 = !DILocation(line: 164, column: 16, scope: !4577)
!4577 = distinct !DILexicalBlock(scope: !4578, file: !394, line: 164, column: 2)
!4578 = distinct !DILexicalBlock(scope: !4568, file: !394, line: 164, column: 2)
!4579 = !DILocation(line: 164, column: 2, scope: !4578)
!4580 = !DILocation(line: 165, column: 3, scope: !4581)
!4581 = distinct !DILexicalBlock(scope: !4577, file: !394, line: 164, column: 26)
!4582 = !DILocation(line: 165, column: 13, scope: !4581)
!4583 = !DILocation(line: 164, column: 22, scope: !4577)
!4584 = distinct !{!4584, !4579, !4585}
!4585 = !DILocation(line: 166, column: 2, scope: !4578)
!4586 = !DILocation(line: 171, column: 1, scope: !4568)
!4587 = distinct !DISubprogram(name: "printk", scope: !394, file: !394, line: 203, type: !4588, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4590)
!4588 = !DISubroutineType(types: !4589)
!4589 = !{null, !337, null}
!4590 = !{!4591, !4592}
!4591 = !DILocalVariable(name: "fmt", arg: 1, scope: !4587, file: !394, line: 203, type: !337)
!4592 = !DILocalVariable(name: "ap", scope: !4587, file: !394, line: 205, type: !4527)
!4593 = !DILocation(line: 0, scope: !4587)
!4594 = !DILocation(line: 205, column: 2, scope: !4587)
!4595 = !DILocation(line: 205, column: 10, scope: !4587)
!4596 = !DILocation(line: 207, column: 2, scope: !4587)
!4597 = !DILocation(line: 209, column: 2, scope: !4587)
!4598 = !DILocation(line: 211, column: 2, scope: !4587)
!4599 = !DILocation(line: 212, column: 1, scope: !4587)
!4600 = distinct !DISubprogram(name: "snprintk", scope: !394, file: !394, line: 239, type: !4601, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4603)
!4601 = !DISubroutineType(types: !4602)
!4602 = !{!103, !277, !132, !337, null}
!4603 = !{!4604, !4605, !4606, !4607, !4608}
!4604 = !DILocalVariable(name: "str", arg: 1, scope: !4600, file: !394, line: 239, type: !277)
!4605 = !DILocalVariable(name: "size", arg: 2, scope: !4600, file: !394, line: 239, type: !132)
!4606 = !DILocalVariable(name: "fmt", arg: 3, scope: !4600, file: !394, line: 239, type: !337)
!4607 = !DILocalVariable(name: "ap", scope: !4600, file: !394, line: 241, type: !4527)
!4608 = !DILocalVariable(name: "ret", scope: !4600, file: !394, line: 242, type: !103)
!4609 = !DILocation(line: 0, scope: !4600)
!4610 = !DILocation(line: 241, column: 2, scope: !4600)
!4611 = !DILocation(line: 241, column: 10, scope: !4600)
!4612 = !DILocation(line: 244, column: 2, scope: !4600)
!4613 = !DILocation(line: 245, column: 8, scope: !4600)
!4614 = !DILocation(line: 246, column: 2, scope: !4600)
!4615 = !DILocation(line: 249, column: 1, scope: !4600)
!4616 = !DILocation(line: 248, column: 2, scope: !4600)
!4617 = distinct !DISubprogram(name: "vsnprintk", scope: !394, file: !394, line: 251, type: !4618, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4620)
!4618 = !DISubroutineType(types: !4619)
!4619 = !{!103, !277, !132, !337, !4527}
!4620 = !{!4621, !4622, !4623, !4624, !4625}
!4621 = !DILocalVariable(name: "str", arg: 1, scope: !4617, file: !394, line: 251, type: !277)
!4622 = !DILocalVariable(name: "size", arg: 2, scope: !4617, file: !394, line: 251, type: !132)
!4623 = !DILocalVariable(name: "fmt", arg: 3, scope: !4617, file: !394, line: 251, type: !337)
!4624 = !DILocalVariable(name: "ap", arg: 4, scope: !4617, file: !394, line: 251, type: !4527)
!4625 = !DILocalVariable(name: "ctx", scope: !4617, file: !394, line: 253, type: !4626)
!4626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !394, line: 217, size: 96, elements: !4627)
!4627 = !{!4628, !4629, !4630}
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4626, file: !394, line: 218, baseType: !277, size: 32)
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4626, file: !394, line: 219, baseType: !103, size: 32, offset: 32)
!4630 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4626, file: !394, line: 220, baseType: !103, size: 32, offset: 64)
!4631 = !DILocation(line: 0, scope: !4617)
!4632 = !DILocation(line: 253, column: 2, scope: !4617)
!4633 = !DILocation(line: 253, column: 21, scope: !4617)
!4634 = !DILocation(line: 253, column: 27, scope: !4617)
!4635 = !DILocation(line: 255, column: 2, scope: !4617)
!4636 = !DILocation(line: 257, column: 10, scope: !4637)
!4637 = distinct !DILexicalBlock(scope: !4617, file: !394, line: 257, column: 6)
!4638 = !DILocation(line: 257, column: 22, scope: !4637)
!4639 = !DILocation(line: 257, column: 16, scope: !4637)
!4640 = !DILocation(line: 257, column: 6, scope: !4617)
!4641 = !DILocation(line: 258, column: 3, scope: !4642)
!4642 = distinct !DILexicalBlock(scope: !4637, file: !394, line: 257, column: 27)
!4643 = !DILocation(line: 258, column: 18, scope: !4642)
!4644 = !DILocation(line: 259, column: 2, scope: !4642)
!4645 = !DILocation(line: 262, column: 1, scope: !4617)
!4646 = !DILocation(line: 261, column: 2, scope: !4617)
!4647 = distinct !DISubprogram(name: "str_out", scope: !394, file: !394, line: 223, type: !4648, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4651)
!4648 = !DISubroutineType(types: !4649)
!4649 = !{!103, !103, !4650}
!4650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4626, size: 32)
!4651 = !{!4652, !4653}
!4652 = !DILocalVariable(name: "c", arg: 1, scope: !4647, file: !394, line: 223, type: !103)
!4653 = !DILocalVariable(name: "ctx", arg: 2, scope: !4647, file: !394, line: 223, type: !4650)
!4654 = !DILocation(line: 0, scope: !4647)
!4655 = !DILocation(line: 225, column: 11, scope: !4656)
!4656 = distinct !DILexicalBlock(scope: !4647, file: !394, line: 225, column: 6)
!4657 = !DILocation(line: 225, column: 15, scope: !4656)
!4658 = !DILocation(line: 0, scope: !4656)
!4659 = !DILocation(line: 225, column: 23, scope: !4656)
!4660 = !DILocation(line: 225, column: 45, scope: !4656)
!4661 = !DILocation(line: 225, column: 37, scope: !4656)
!4662 = !DILocation(line: 225, column: 6, scope: !4647)
!4663 = !DILocation(line: 226, column: 8, scope: !4664)
!4664 = distinct !DILexicalBlock(scope: !4656, file: !394, line: 225, column: 50)
!4665 = !DILocation(line: 226, column: 13, scope: !4664)
!4666 = !DILocation(line: 227, column: 3, scope: !4664)
!4667 = !DILocation(line: 230, column: 29, scope: !4668)
!4668 = distinct !DILexicalBlock(scope: !4647, file: !394, line: 230, column: 6)
!4669 = !DILocation(line: 230, column: 17, scope: !4668)
!4670 = !DILocation(line: 230, column: 6, scope: !4647)
!4671 = !DILocation(line: 231, column: 22, scope: !4672)
!4672 = distinct !DILexicalBlock(scope: !4668, file: !394, line: 230, column: 34)
!4673 = !DILocation(line: 231, column: 3, scope: !4672)
!4674 = !DILocation(line: 231, column: 26, scope: !4672)
!4675 = !DILocation(line: 232, column: 2, scope: !4672)
!4676 = !DILocation(line: 233, column: 28, scope: !4677)
!4677 = distinct !DILexicalBlock(scope: !4668, file: !394, line: 232, column: 9)
!4678 = !DILocation(line: 233, column: 22, scope: !4677)
!4679 = !DILocation(line: 233, column: 3, scope: !4677)
!4680 = !DILocation(line: 233, column: 26, scope: !4677)
!4681 = !DILocation(line: 237, column: 1, scope: !4647)
!4682 = distinct !DISubprogram(name: "z_thread_entry", scope: !4683, file: !4683, line: 30, type: !4684, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2649, retainedNodes: !4686)
!4683 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4684 = !DISubroutineType(types: !4685)
!4685 = !{null, !321, !102, !102, !102}
!4686 = !{!4687, !4688, !4689, !4690}
!4687 = !DILocalVariable(name: "entry", arg: 1, scope: !4682, file: !4683, line: 30, type: !321)
!4688 = !DILocalVariable(name: "p1", arg: 2, scope: !4682, file: !4683, line: 31, type: !102)
!4689 = !DILocalVariable(name: "p2", arg: 3, scope: !4682, file: !4683, line: 31, type: !102)
!4690 = !DILocalVariable(name: "p3", arg: 4, scope: !4682, file: !4683, line: 31, type: !102)
!4691 = !DILocation(line: 0, scope: !4682)
!4692 = !DILocation(line: 36, column: 2, scope: !4682)
!4693 = !DILocation(line: 38, column: 17, scope: !4682)
!4694 = !DILocation(line: 38, column: 2, scope: !4682)
!4695 = !DILocation(line: 45, column: 2, scope: !4682)
!4696 = distinct !DISubprogram(name: "k_current_get", scope: !137, file: !137, line: 530, type: !4697, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2649, retainedNodes: !251)
!4697 = !DISubroutineType(types: !4698)
!4698 = !{!4699}
!4699 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !163, line: 347, baseType: !4700)
!4700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4701, size: 32)
!4701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !4702)
!4702 = !{!4703, !4761, !4773, !4774, !4775, !4776, !4782, !4795}
!4703 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4701, file: !163, line: 247, baseType: !4704, size: 384)
!4704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !4705)
!4705 = !{!4706, !4730, !4737, !4738, !4739, !4748, !4749, !4750}
!4706 = !DIDerivedType(tag: DW_TAG_member, scope: !4704, file: !163, line: 60, baseType: !4707, size: 64)
!4707 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4704, file: !163, line: 60, size: 64, elements: !4708)
!4708 = !{!4709, !4724}
!4709 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !4707, file: !163, line: 61, baseType: !4710, size: 64)
!4710 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !4711)
!4711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !4712)
!4712 = !{!4713, !4719}
!4713 = !DIDerivedType(tag: DW_TAG_member, scope: !4711, file: !146, line: 38, baseType: !4714, size: 32)
!4714 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4711, file: !146, line: 38, size: 32, elements: !4715)
!4715 = !{!4716, !4718}
!4716 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4714, file: !146, line: 39, baseType: !4717, size: 32)
!4717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4711, size: 32)
!4718 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4714, file: !146, line: 40, baseType: !4717, size: 32)
!4719 = !DIDerivedType(tag: DW_TAG_member, scope: !4711, file: !146, line: 42, baseType: !4720, size: 32, offset: 32)
!4720 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4711, file: !146, line: 42, size: 32, elements: !4721)
!4721 = !{!4722, !4723}
!4722 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4720, file: !146, line: 43, baseType: !4717, size: 32)
!4723 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4720, file: !146, line: 44, baseType: !4717, size: 32)
!4724 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !4707, file: !163, line: 62, baseType: !4725, size: 64)
!4725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !4726)
!4726 = !{!4727}
!4727 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4725, file: !175, line: 50, baseType: !4728, size: 64)
!4728 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4729, size: 64, elements: !180)
!4729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4725, size: 32)
!4730 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !4704, file: !163, line: 68, baseType: !4731, size: 32, offset: 64)
!4731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4732, size: 32)
!4732 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !4733)
!4733 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !4734)
!4734 = !{!4735}
!4735 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4733, file: !141, line: 232, baseType: !4736, size: 64)
!4736 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !4711)
!4737 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !4704, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!4738 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !4704, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!4739 = !DIDerivedType(tag: DW_TAG_member, scope: !4704, file: !163, line: 90, baseType: !4740, size: 16, offset: 112)
!4740 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4704, file: !163, line: 90, size: 16, elements: !4741)
!4741 = !{!4742, !4747}
!4742 = !DIDerivedType(tag: DW_TAG_member, scope: !4740, file: !163, line: 91, baseType: !4743, size: 16)
!4743 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4740, file: !163, line: 91, size: 16, elements: !4744)
!4744 = !{!4745, !4746}
!4745 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4743, file: !163, line: 96, baseType: !195, size: 8)
!4746 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4743, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!4747 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4740, file: !163, line: 100, baseType: !121, size: 16)
!4748 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !4704, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!4749 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !4704, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!4750 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4704, file: !163, line: 131, baseType: !4751, size: 192, offset: 192)
!4751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !4752)
!4752 = !{!4753, !4754, !4760}
!4753 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4751, file: !141, line: 245, baseType: !4710, size: 64)
!4754 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4751, file: !141, line: 246, baseType: !4755, size: 32, offset: 64)
!4755 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !4756)
!4756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4757, size: 32)
!4757 = !DISubroutineType(types: !4758)
!4758 = !{null, !4759}
!4759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4751, size: 32)
!4760 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !4751, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!4761 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !4701, file: !163, line: 250, baseType: !4762, size: 288, offset: 384)
!4762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !4763)
!4763 = !{!4764, !4765, !4766, !4767, !4768, !4769, !4770, !4771, !4772}
!4764 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4762, file: !214, line: 26, baseType: !108, size: 32)
!4765 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4762, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!4766 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4762, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!4767 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4762, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!4768 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4762, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!4769 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4762, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!4770 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4762, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!4771 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4762, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!4772 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4762, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!4773 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !4701, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!4774 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !4701, file: !163, line: 256, baseType: !4732, size: 64, offset: 704)
!4775 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !4701, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!4776 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !4701, file: !163, line: 300, baseType: !4777, size: 96, offset: 800)
!4777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !4778)
!4778 = !{!4779, !4780, !4781}
!4779 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4777, file: !163, line: 153, baseType: !22, size: 32)
!4780 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4777, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!4781 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !4777, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!4782 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !4701, file: !163, line: 325, baseType: !4783, size: 32, offset: 896)
!4783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4784, size: 32)
!4784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !4785)
!4785 = !{!4786, !4792, !4793}
!4786 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4784, file: !137, line: 5074, baseType: !4787, size: 96)
!4787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !4788)
!4788 = !{!4789, !4790, !4791}
!4789 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4787, file: !240, line: 57, baseType: !243, size: 32)
!4790 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4787, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!4791 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4787, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!4792 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4784, file: !137, line: 5075, baseType: !4732, size: 64, offset: 96)
!4793 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4784, file: !137, line: 5076, baseType: !4794, offset: 160)
!4794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!4795 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4701, file: !163, line: 343, baseType: !4796, size: 64, offset: 928)
!4796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !4797)
!4797 = !{!4798, !4799}
!4798 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !4796, file: !214, line: 63, baseType: !108, size: 32)
!4799 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !4796, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!4800 = !DILocation(line: 535, column: 9, scope: !4696)
!4801 = !DILocation(line: 535, column: 2, scope: !4696)
!4802 = distinct !DISubprogram(name: "k_thread_abort", scope: !3618, file: !3618, line: 188, type: !4803, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2649, retainedNodes: !4805)
!4803 = !DISubroutineType(types: !4804)
!4804 = !{null, !4699}
!4805 = !{!4806}
!4806 = !DILocalVariable(name: "thread", arg: 1, scope: !4802, file: !3618, line: 188, type: !4699)
!4807 = !DILocation(line: 0, scope: !4802)
!4808 = !DILocation(line: 197, column: 2, scope: !4809)
!4809 = distinct !DILexicalBlock(scope: !4802, file: !3618, line: 197, column: 2)
!4810 = !{i64 2154839417}
!4811 = !DILocation(line: 198, column: 2, scope: !4802)
!4812 = !DILocation(line: 199, column: 1, scope: !4802)
!4813 = distinct !DISubprogram(name: "z_current_get", scope: !3618, file: !3618, line: 173, type: !4697, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2649, retainedNodes: !251)
!4814 = !DILocation(line: 180, column: 2, scope: !4815)
!4815 = distinct !DILexicalBlock(scope: !4813, file: !3618, line: 180, column: 2)
!4816 = !{i64 2154839349}
!4817 = !DILocation(line: 181, column: 9, scope: !4813)
!4818 = !DILocation(line: 181, column: 2, scope: !4813)
!4819 = distinct !DISubprogram(name: "sys_heap_free", scope: !4820, file: !4820, line: 163, type: !4821, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !4829)
!4820 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4821 = !DISubroutineType(types: !4822)
!4822 = !{null, !4823, !102}
!4823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4824, size: 32)
!4824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !4825)
!4825 = !{!4826, !4827, !4828}
!4826 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4824, file: !240, line: 57, baseType: !2668, size: 32)
!4827 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4824, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!4828 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4824, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!4829 = !{!4830, !4831, !4832, !4833}
!4830 = !DILocalVariable(name: "heap", arg: 1, scope: !4819, file: !4820, line: 163, type: !4823)
!4831 = !DILocalVariable(name: "mem", arg: 2, scope: !4819, file: !4820, line: 163, type: !102)
!4832 = !DILocalVariable(name: "h", scope: !4819, file: !4820, line: 168, type: !2668)
!4833 = !DILocalVariable(name: "c", scope: !4819, file: !4820, line: 169, type: !2673)
!4834 = !DILocation(line: 0, scope: !4819)
!4835 = !DILocation(line: 165, column: 10, scope: !4836)
!4836 = distinct !DILexicalBlock(scope: !4819, file: !4820, line: 165, column: 6)
!4837 = !DILocation(line: 165, column: 6, scope: !4819)
!4838 = !DILocation(line: 168, column: 27, scope: !4819)
!4839 = !DILocation(line: 169, column: 16, scope: !4819)
!4840 = !{i32 0, i32 536870912}
!4841 = !DILocation(line: 187, column: 2, scope: !4819)
!4842 = !DILocation(line: 197, column: 2, scope: !4819)
!4843 = !DILocation(line: 198, column: 1, scope: !4819)
!4844 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !4820, file: !4820, line: 157, type: !4845, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !4847)
!4845 = !DISubroutineType(types: !4846)
!4846 = !{!2673, !2668, !102}
!4847 = !{!4848, !4849, !4850, !4851}
!4848 = !DILocalVariable(name: "h", arg: 1, scope: !4844, file: !4820, line: 157, type: !2668)
!4849 = !DILocalVariable(name: "p", arg: 2, scope: !4844, file: !4820, line: 157, type: !102)
!4850 = !DILocalVariable(name: "mem", scope: !4844, file: !4820, line: 159, type: !379)
!4851 = !DILocalVariable(name: "base", scope: !4844, file: !4820, line: 159, type: !379)
!4852 = !DILocation(line: 0, scope: !4844)
!4853 = !DILocation(line: 159, column: 39, scope: !4844)
!4854 = !DILocation(line: 160, column: 14, scope: !4844)
!4855 = !DILocation(line: 160, column: 38, scope: !4844)
!4856 = !DILocation(line: 160, column: 46, scope: !4844)
!4857 = !DILocation(line: 160, column: 2, scope: !4844)
!4858 = distinct !DISubprogram(name: "set_chunk_used", scope: !2655, file: !2655, line: 147, type: !4859, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !4861)
!4859 = !DISubroutineType(types: !4860)
!4860 = !{null, !2668, !2673, !131}
!4861 = !{!4862, !4863, !4864, !4865, !4866}
!4862 = !DILocalVariable(name: "h", arg: 1, scope: !4858, file: !2655, line: 147, type: !2668)
!4863 = !DILocalVariable(name: "c", arg: 2, scope: !4858, file: !2655, line: 147, type: !2673)
!4864 = !DILocalVariable(name: "used", arg: 3, scope: !4858, file: !2655, line: 147, type: !131)
!4865 = !DILocalVariable(name: "buf", scope: !4858, file: !2655, line: 149, type: !2662)
!4866 = !DILocalVariable(name: "cmem", scope: !4858, file: !2655, line: 150, type: !102)
!4867 = !DILocation(line: 0, scope: !4858)
!4868 = !DILocation(line: 149, column: 22, scope: !4858)
!4869 = !DILocation(line: 0, scope: !4870)
!4870 = distinct !DILexicalBlock(scope: !4871, file: !2655, line: 159, column: 7)
!4871 = distinct !DILexicalBlock(scope: !4872, file: !2655, line: 158, column: 9)
!4872 = distinct !DILexicalBlock(scope: !4858, file: !2655, line: 152, column: 6)
!4873 = !DILocation(line: 159, column: 7, scope: !4871)
!4874 = !DILocation(line: 165, column: 1, scope: !4858)
!4875 = distinct !DISubprogram(name: "free_chunk", scope: !4820, file: !4820, line: 133, type: !4876, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !4878)
!4876 = !DISubroutineType(types: !4877)
!4877 = !{null, !2668, !2673}
!4878 = !{!4879, !4880}
!4879 = !DILocalVariable(name: "h", arg: 1, scope: !4875, file: !4820, line: 133, type: !2668)
!4880 = !DILocalVariable(name: "c", arg: 2, scope: !4875, file: !4820, line: 133, type: !2673)
!4881 = !DILocation(line: 0, scope: !4875)
!4882 = !DILocation(line: 136, column: 21, scope: !4883)
!4883 = distinct !DILexicalBlock(scope: !4875, file: !4820, line: 136, column: 6)
!4884 = !DILocation(line: 136, column: 7, scope: !4883)
!4885 = !DILocation(line: 136, column: 6, scope: !4875)
!4886 = !DILocation(line: 137, column: 3, scope: !4887)
!4887 = distinct !DILexicalBlock(scope: !4883, file: !4820, line: 136, column: 41)
!4888 = !DILocation(line: 138, column: 22, scope: !4887)
!4889 = !DILocation(line: 138, column: 3, scope: !4887)
!4890 = !DILocation(line: 139, column: 2, scope: !4887)
!4891 = !DILocation(line: 142, column: 21, scope: !4892)
!4892 = distinct !DILexicalBlock(scope: !4875, file: !4820, line: 142, column: 6)
!4893 = !{i32 -65535, i32 536903678}
!4894 = !DILocation(line: 142, column: 7, scope: !4892)
!4895 = !DILocation(line: 142, column: 6, scope: !4875)
!4896 = !DILocation(line: 143, column: 3, scope: !4897)
!4897 = distinct !DILexicalBlock(scope: !4892, file: !4820, line: 142, column: 40)
!4898 = !DILocation(line: 144, column: 19, scope: !4897)
!4899 = !DILocation(line: 144, column: 3, scope: !4897)
!4900 = !DILocation(line: 145, column: 7, scope: !4897)
!4901 = !DILocation(line: 146, column: 2, scope: !4897)
!4902 = !DILocation(line: 148, column: 2, scope: !4875)
!4903 = !DILocation(line: 149, column: 1, scope: !4875)
!4904 = distinct !DISubprogram(name: "right_chunk", scope: !2655, file: !2655, line: 204, type: !4905, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !4907)
!4905 = !DISubroutineType(types: !4906)
!4906 = !{!2673, !2668, !2673}
!4907 = !{!4908, !4909}
!4908 = !DILocalVariable(name: "h", arg: 1, scope: !4904, file: !2655, line: 204, type: !2668)
!4909 = !DILocalVariable(name: "c", arg: 2, scope: !4904, file: !2655, line: 204, type: !2673)
!4910 = !DILocation(line: 0, scope: !4904)
!4911 = !DILocation(line: 206, column: 13, scope: !4904)
!4912 = !DILocation(line: 206, column: 11, scope: !4904)
!4913 = !DILocation(line: 206, column: 2, scope: !4904)
!4914 = distinct !DISubprogram(name: "chunk_used", scope: !2655, file: !2655, line: 137, type: !4915, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !4917)
!4915 = !DISubroutineType(types: !4916)
!4916 = !{!131, !2668, !2673}
!4917 = !{!4918, !4919}
!4918 = !DILocalVariable(name: "h", arg: 1, scope: !4914, file: !2655, line: 137, type: !2668)
!4919 = !DILocalVariable(name: "c", arg: 2, scope: !4914, file: !2655, line: 137, type: !2673)
!4920 = !DILocation(line: 0, scope: !4914)
!4921 = !DILocation(line: 139, column: 9, scope: !4914)
!4922 = !DILocation(line: 139, column: 42, scope: !4914)
!4923 = !DILocation(line: 139, column: 2, scope: !4914)
!4924 = distinct !DISubprogram(name: "free_list_remove", scope: !4820, file: !4820, line: 60, type: !4876, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !4925)
!4925 = !{!4926, !4927, !4928}
!4926 = !DILocalVariable(name: "h", arg: 1, scope: !4924, file: !4820, line: 60, type: !2668)
!4927 = !DILocalVariable(name: "c", arg: 2, scope: !4924, file: !4820, line: 60, type: !2673)
!4928 = !DILocalVariable(name: "bidx", scope: !4929, file: !4820, line: 63, type: !103)
!4929 = distinct !DILexicalBlock(scope: !4930, file: !4820, line: 62, column: 31)
!4930 = distinct !DILexicalBlock(scope: !4924, file: !4820, line: 62, column: 6)
!4931 = !DILocation(line: 0, scope: !4924)
!4932 = !DILocation(line: 63, column: 28, scope: !4929)
!4933 = !{i32 0, i32 32768}
!4934 = !DILocation(line: 63, column: 14, scope: !4929)
!4935 = !DILocation(line: 0, scope: !4929)
!4936 = !DILocation(line: 64, column: 3, scope: !4929)
!4937 = !DILocation(line: 66, column: 1, scope: !4924)
!4938 = distinct !DISubprogram(name: "merge_chunks", scope: !4820, file: !4820, line: 125, type: !4939, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !4941)
!4939 = !DISubroutineType(types: !4940)
!4940 = !{null, !2668, !2673, !2673}
!4941 = !{!4942, !4943, !4944, !4945}
!4942 = !DILocalVariable(name: "h", arg: 1, scope: !4938, file: !4820, line: 125, type: !2668)
!4943 = !DILocalVariable(name: "lc", arg: 2, scope: !4938, file: !4820, line: 125, type: !2673)
!4944 = !DILocalVariable(name: "rc", arg: 3, scope: !4938, file: !4820, line: 125, type: !2673)
!4945 = !DILocalVariable(name: "newsz", scope: !4938, file: !4820, line: 127, type: !4946)
!4946 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !2655, line: 62, baseType: !108)
!4947 = !DILocation(line: 0, scope: !4938)
!4948 = !DILocation(line: 127, column: 20, scope: !4938)
!4949 = !DILocation(line: 127, column: 40, scope: !4938)
!4950 = !DILocation(line: 127, column: 38, scope: !4938)
!4951 = !DILocation(line: 129, column: 2, scope: !4938)
!4952 = !DILocation(line: 130, column: 25, scope: !4938)
!4953 = !DILocation(line: 130, column: 2, scope: !4938)
!4954 = !DILocation(line: 131, column: 1, scope: !4938)
!4955 = distinct !DISubprogram(name: "left_chunk", scope: !2655, file: !2655, line: 199, type: !4905, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !4956)
!4956 = !{!4957, !4958}
!4957 = !DILocalVariable(name: "h", arg: 1, scope: !4955, file: !2655, line: 199, type: !2668)
!4958 = !DILocalVariable(name: "c", arg: 2, scope: !4955, file: !2655, line: 199, type: !2673)
!4959 = !DILocation(line: 0, scope: !4955)
!4960 = !DILocation(line: 201, column: 13, scope: !4955)
!4961 = !DILocation(line: 201, column: 11, scope: !4955)
!4962 = !DILocation(line: 201, column: 2, scope: !4955)
!4963 = distinct !DISubprogram(name: "free_list_add", scope: !4820, file: !4820, line: 98, type: !4876, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !4964)
!4964 = !{!4965, !4966, !4967}
!4965 = !DILocalVariable(name: "h", arg: 1, scope: !4963, file: !4820, line: 98, type: !2668)
!4966 = !DILocalVariable(name: "c", arg: 2, scope: !4963, file: !4820, line: 98, type: !2673)
!4967 = !DILocalVariable(name: "bidx", scope: !4968, file: !4820, line: 101, type: !103)
!4968 = distinct !DILexicalBlock(scope: !4969, file: !4820, line: 100, column: 31)
!4969 = distinct !DILexicalBlock(scope: !4963, file: !4820, line: 100, column: 6)
!4970 = !DILocation(line: 0, scope: !4963)
!4971 = !DILocation(line: 101, column: 28, scope: !4968)
!4972 = !DILocation(line: 101, column: 14, scope: !4968)
!4973 = !DILocation(line: 0, scope: !4968)
!4974 = !DILocation(line: 102, column: 3, scope: !4968)
!4975 = !DILocation(line: 104, column: 1, scope: !4963)
!4976 = distinct !DISubprogram(name: "chunk_size", scope: !2655, file: !2655, line: 142, type: !4977, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !4979)
!4977 = !DISubroutineType(types: !4978)
!4978 = !{!4946, !2668, !2673}
!4979 = !{!4980, !4981}
!4980 = !DILocalVariable(name: "h", arg: 1, scope: !4976, file: !2655, line: 142, type: !2668)
!4981 = !DILocalVariable(name: "c", arg: 2, scope: !4976, file: !2655, line: 142, type: !2673)
!4982 = !DILocation(line: 0, scope: !4976)
!4983 = !DILocation(line: 144, column: 9, scope: !4976)
!4984 = !DILocation(line: 144, column: 42, scope: !4976)
!4985 = !DILocation(line: 144, column: 2, scope: !4976)
!4986 = distinct !DISubprogram(name: "bucket_idx", scope: !2655, file: !2655, line: 250, type: !4987, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !4989)
!4987 = !DISubroutineType(types: !4988)
!4988 = !{!103, !2668, !4946}
!4989 = !{!4990, !4991, !4992}
!4990 = !DILocalVariable(name: "h", arg: 1, scope: !4986, file: !2655, line: 250, type: !2668)
!4991 = !DILocalVariable(name: "sz", arg: 2, scope: !4986, file: !2655, line: 250, type: !4946)
!4992 = !DILocalVariable(name: "usable_sz", scope: !4986, file: !2655, line: 252, type: !32)
!4993 = !DILocation(line: 0, scope: !4986)
!4994 = !DILocation(line: 252, column: 32, scope: !4986)
!4995 = !DILocation(line: 252, column: 30, scope: !4986)
!4996 = !DILocation(line: 252, column: 50, scope: !4986)
!4997 = !DILocation(line: 253, column: 14, scope: !4986)
!4998 = !{i32 0, i32 33}
!4999 = !DILocation(line: 253, column: 12, scope: !4986)
!5000 = !DILocation(line: 253, column: 2, scope: !4986)
!5001 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !4820, file: !4820, line: 68, type: !5002, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !5004)
!5002 = !DISubroutineType(types: !5003)
!5003 = !{null, !2668, !2673, !103}
!5004 = !{!5005, !5006, !5007, !5008, !5010, !5013}
!5005 = !DILocalVariable(name: "h", arg: 1, scope: !5001, file: !4820, line: 68, type: !2668)
!5006 = !DILocalVariable(name: "c", arg: 2, scope: !5001, file: !4820, line: 68, type: !2673)
!5007 = !DILocalVariable(name: "bidx", arg: 3, scope: !5001, file: !4820, line: 68, type: !103)
!5008 = !DILocalVariable(name: "b", scope: !5001, file: !4820, line: 70, type: !5009)
!5009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2678, size: 32)
!5010 = !DILocalVariable(name: "second", scope: !5011, file: !4820, line: 84, type: !2673)
!5011 = distinct !DILexicalBlock(scope: !5012, file: !4820, line: 80, column: 9)
!5012 = distinct !DILexicalBlock(scope: !5001, file: !4820, line: 72, column: 6)
!5013 = !DILocalVariable(name: "first", scope: !5011, file: !4820, line: 85, type: !2673)
!5014 = !DILocation(line: 0, scope: !5001)
!5015 = !DILocation(line: 72, column: 9, scope: !5012)
!5016 = !DILocation(line: 72, column: 14, scope: !5012)
!5017 = !DILocation(line: 72, column: 6, scope: !5001)
!5018 = !DILocation(line: 76, column: 23, scope: !5019)
!5019 = distinct !DILexicalBlock(scope: !5012, file: !4820, line: 72, column: 21)
!5020 = !DILocation(line: 76, column: 6, scope: !5019)
!5021 = !DILocation(line: 76, column: 20, scope: !5019)
!5022 = !DILocation(line: 77, column: 11, scope: !5019)
!5023 = !DILocation(line: 78, column: 3, scope: !5019)
!5024 = !DILocation(line: 79, column: 3, scope: !5019)
!5025 = !DILocation(line: 80, column: 2, scope: !5019)
!5026 = !DILocation(line: 0, scope: !5011)
!5027 = !DILocation(line: 85, column: 21, scope: !5011)
!5028 = !{i32 0, i32 65536}
!5029 = !DILocation(line: 87, column: 3, scope: !5011)
!5030 = !DILocation(line: 88, column: 3, scope: !5011)
!5031 = !DILocation(line: 89, column: 3, scope: !5011)
!5032 = !DILocation(line: 90, column: 3, scope: !5011)
!5033 = !DILocation(line: 96, column: 1, scope: !5001)
!5034 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !2655, file: !2655, line: 187, type: !4939, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !5035)
!5035 = !{!5036, !5037, !5038}
!5036 = !DILocalVariable(name: "h", arg: 1, scope: !5034, file: !2655, line: 187, type: !2668)
!5037 = !DILocalVariable(name: "c", arg: 2, scope: !5034, file: !2655, line: 187, type: !2673)
!5038 = !DILocalVariable(name: "prev", arg: 3, scope: !5034, file: !2655, line: 188, type: !2673)
!5039 = !DILocation(line: 0, scope: !5034)
!5040 = !DILocation(line: 190, column: 2, scope: !5034)
!5041 = !DILocation(line: 191, column: 1, scope: !5034)
!5042 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !2655, file: !2655, line: 193, type: !4939, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !5043)
!5043 = !{!5044, !5045, !5046}
!5044 = !DILocalVariable(name: "h", arg: 1, scope: !5042, file: !2655, line: 193, type: !2668)
!5045 = !DILocalVariable(name: "c", arg: 2, scope: !5042, file: !2655, line: 193, type: !2673)
!5046 = !DILocalVariable(name: "next", arg: 3, scope: !5042, file: !2655, line: 194, type: !2673)
!5047 = !DILocation(line: 0, scope: !5042)
!5048 = !DILocation(line: 196, column: 2, scope: !5042)
!5049 = !DILocation(line: 197, column: 1, scope: !5042)
!5050 = distinct !DISubprogram(name: "prev_free_chunk", scope: !2655, file: !2655, line: 177, type: !4905, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !5051)
!5051 = !{!5052, !5053}
!5052 = !DILocalVariable(name: "h", arg: 1, scope: !5050, file: !2655, line: 177, type: !2668)
!5053 = !DILocalVariable(name: "c", arg: 2, scope: !5050, file: !2655, line: 177, type: !2673)
!5054 = !DILocation(line: 0, scope: !5050)
!5055 = !DILocation(line: 179, column: 9, scope: !5050)
!5056 = !DILocation(line: 179, column: 2, scope: !5050)
!5057 = distinct !DISubprogram(name: "chunk_field", scope: !2655, file: !2655, line: 107, type: !5058, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !5060)
!5058 = !DISubroutineType(types: !5059)
!5059 = !{!2673, !2668, !2673, !2654}
!5060 = !{!5061, !5062, !5063, !5064, !5065}
!5061 = !DILocalVariable(name: "h", arg: 1, scope: !5057, file: !2655, line: 107, type: !2668)
!5062 = !DILocalVariable(name: "c", arg: 2, scope: !5057, file: !2655, line: 107, type: !2673)
!5063 = !DILocalVariable(name: "f", arg: 3, scope: !5057, file: !2655, line: 108, type: !2654)
!5064 = !DILocalVariable(name: "buf", scope: !5057, file: !2655, line: 110, type: !2662)
!5065 = !DILocalVariable(name: "cmem", scope: !5057, file: !2655, line: 111, type: !102)
!5066 = !DILocation(line: 0, scope: !5057)
!5067 = !DILocation(line: 110, column: 22, scope: !5057)
!5068 = !DILocation(line: 111, column: 15, scope: !5057)
!5069 = !DILocation(line: 116, column: 11, scope: !5070)
!5070 = distinct !DILexicalBlock(scope: !5071, file: !2655, line: 115, column: 9)
!5071 = distinct !DILexicalBlock(scope: !5057, file: !2655, line: 113, column: 6)
!5072 = !DILocation(line: 116, column: 10, scope: !5070)
!5073 = !DILocation(line: 118, column: 1, scope: !5057)
!5074 = distinct !DISubprogram(name: "chunk_buf", scope: !2655, file: !2655, line: 101, type: !5075, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !5077)
!5075 = !DISubroutineType(types: !5076)
!5076 = !{!2662, !2668}
!5077 = !{!5078}
!5078 = !DILocalVariable(name: "h", arg: 1, scope: !5074, file: !2655, line: 101, type: !2668)
!5079 = !DILocation(line: 0, scope: !5074)
!5080 = !DILocation(line: 104, column: 9, scope: !5074)
!5081 = !DILocation(line: 104, column: 2, scope: !5074)
!5082 = distinct !DISubprogram(name: "chunk_set", scope: !2655, file: !2655, line: 120, type: !5083, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !5085)
!5083 = !DISubroutineType(types: !5084)
!5084 = !{null, !2668, !2673, !2654, !2673}
!5085 = !{!5086, !5087, !5088, !5089, !5090, !5091}
!5086 = !DILocalVariable(name: "h", arg: 1, scope: !5082, file: !2655, line: 120, type: !2668)
!5087 = !DILocalVariable(name: "c", arg: 2, scope: !5082, file: !2655, line: 120, type: !2673)
!5088 = !DILocalVariable(name: "f", arg: 3, scope: !5082, file: !2655, line: 121, type: !2654)
!5089 = !DILocalVariable(name: "val", arg: 4, scope: !5082, file: !2655, line: 121, type: !2673)
!5090 = !DILocalVariable(name: "buf", scope: !5082, file: !2655, line: 125, type: !2662)
!5091 = !DILocalVariable(name: "cmem", scope: !5082, file: !2655, line: 126, type: !102)
!5092 = !DILocation(line: 0, scope: !5082)
!5093 = !DILocation(line: 125, column: 22, scope: !5082)
!5094 = !DILocation(line: 126, column: 15, scope: !5082)
!5095 = !DILocation(line: 133, column: 27, scope: !5096)
!5096 = distinct !DILexicalBlock(scope: !5097, file: !2655, line: 131, column: 9)
!5097 = distinct !DILexicalBlock(scope: !5082, file: !2655, line: 128, column: 6)
!5098 = !DILocation(line: 133, column: 4, scope: !5096)
!5099 = !DILocation(line: 133, column: 3, scope: !5096)
!5100 = !DILocation(line: 133, column: 25, scope: !5096)
!5101 = !DILocation(line: 135, column: 1, scope: !5082)
!5102 = distinct !DISubprogram(name: "min_chunk_size", scope: !2655, file: !2655, line: 240, type: !5103, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !5105)
!5103 = !DISubroutineType(types: !5104)
!5104 = !{!4946, !2668}
!5105 = !{!5106}
!5106 = !DILocalVariable(name: "h", arg: 1, scope: !5102, file: !2655, line: 240, type: !2668)
!5107 = !DILocation(line: 0, scope: !5102)
!5108 = !DILocation(line: 242, column: 9, scope: !5102)
!5109 = !DILocation(line: 242, column: 2, scope: !5102)
!5110 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !2655, file: !2655, line: 235, type: !5111, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !5113)
!5111 = !DISubroutineType(types: !5112)
!5112 = !{!4946, !2668, !132}
!5113 = !{!5114, !5115}
!5114 = !DILocalVariable(name: "h", arg: 1, scope: !5110, file: !2655, line: 235, type: !2668)
!5115 = !DILocalVariable(name: "bytes", arg: 2, scope: !5110, file: !2655, line: 235, type: !132)
!5116 = !DILocation(line: 0, scope: !5110)
!5117 = !DILocation(line: 237, column: 39, scope: !5110)
!5118 = !DILocation(line: 237, column: 9, scope: !5110)
!5119 = !DILocation(line: 237, column: 2, scope: !5110)
!5120 = distinct !DISubprogram(name: "chunksz", scope: !2655, file: !2655, line: 230, type: !5121, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !5123)
!5121 = !DISubroutineType(types: !5122)
!5122 = !{!4946, !132}
!5123 = !{!5124}
!5124 = !DILocalVariable(name: "bytes", arg: 1, scope: !5120, file: !2655, line: 230, type: !132)
!5125 = !DILocation(line: 0, scope: !5120)
!5126 = !DILocation(line: 232, column: 29, scope: !5120)
!5127 = !DILocation(line: 232, column: 35, scope: !5120)
!5128 = !DILocation(line: 232, column: 2, scope: !5120)
!5129 = distinct !DISubprogram(name: "set_chunk_size", scope: !2655, file: !2655, line: 172, type: !5130, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !5132)
!5130 = !DISubroutineType(types: !5131)
!5131 = !{null, !2668, !2673, !4946}
!5132 = !{!5133, !5134, !5135}
!5133 = !DILocalVariable(name: "h", arg: 1, scope: !5129, file: !2655, line: 172, type: !2668)
!5134 = !DILocalVariable(name: "c", arg: 2, scope: !5129, file: !2655, line: 172, type: !2673)
!5135 = !DILocalVariable(name: "size", arg: 3, scope: !5129, file: !2655, line: 172, type: !4946)
!5136 = !DILocation(line: 0, scope: !5129)
!5137 = !DILocation(line: 174, column: 38, scope: !5129)
!5138 = !DILocation(line: 174, column: 2, scope: !5129)
!5139 = !DILocation(line: 175, column: 1, scope: !5129)
!5140 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !2655, file: !2655, line: 209, type: !5130, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !5141)
!5141 = !{!5142, !5143, !5144}
!5142 = !DILocalVariable(name: "h", arg: 1, scope: !5140, file: !2655, line: 209, type: !2668)
!5143 = !DILocalVariable(name: "c", arg: 2, scope: !5140, file: !2655, line: 209, type: !2673)
!5144 = !DILocalVariable(name: "size", arg: 3, scope: !5140, file: !2655, line: 210, type: !4946)
!5145 = !DILocation(line: 0, scope: !5140)
!5146 = !DILocation(line: 212, column: 2, scope: !5140)
!5147 = !DILocation(line: 213, column: 1, scope: !5140)
!5148 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !4820, file: !4820, line: 34, type: !5002, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !5149)
!5149 = !{!5150, !5151, !5152, !5153, !5154, !5157}
!5150 = !DILocalVariable(name: "h", arg: 1, scope: !5148, file: !4820, line: 34, type: !2668)
!5151 = !DILocalVariable(name: "c", arg: 2, scope: !5148, file: !4820, line: 34, type: !2673)
!5152 = !DILocalVariable(name: "bidx", arg: 3, scope: !5148, file: !4820, line: 34, type: !103)
!5153 = !DILocalVariable(name: "b", scope: !5148, file: !4820, line: 36, type: !5009)
!5154 = !DILocalVariable(name: "first", scope: !5155, file: !4820, line: 47, type: !2673)
!5155 = distinct !DILexicalBlock(scope: !5156, file: !4820, line: 46, column: 9)
!5156 = distinct !DILexicalBlock(scope: !5148, file: !4820, line: 42, column: 6)
!5157 = !DILocalVariable(name: "second", scope: !5155, file: !4820, line: 48, type: !2673)
!5158 = !DILocation(line: 0, scope: !5148)
!5159 = !DILocation(line: 36, column: 29, scope: !5148)
!5160 = !DILocation(line: 42, column: 6, scope: !5156)
!5161 = !DILocation(line: 42, column: 28, scope: !5156)
!5162 = !DILocation(line: 42, column: 6, scope: !5148)
!5163 = !DILocation(line: 44, column: 24, scope: !5164)
!5164 = distinct !DILexicalBlock(scope: !5156, file: !4820, line: 42, column: 34)
!5165 = !DILocation(line: 44, column: 23, scope: !5164)
!5166 = !DILocation(line: 44, column: 6, scope: !5164)
!5167 = !DILocation(line: 44, column: 20, scope: !5164)
!5168 = !DILocation(line: 45, column: 6, scope: !5164)
!5169 = !DILocation(line: 45, column: 11, scope: !5164)
!5170 = !DILocation(line: 46, column: 2, scope: !5164)
!5171 = !DILocation(line: 47, column: 21, scope: !5155)
!5172 = !DILocation(line: 0, scope: !5155)
!5173 = !DILocation(line: 50, column: 6, scope: !5155)
!5174 = !DILocation(line: 50, column: 11, scope: !5155)
!5175 = !DILocation(line: 51, column: 3, scope: !5155)
!5176 = !DILocation(line: 52, column: 3, scope: !5155)
!5177 = !DILocation(line: 58, column: 1, scope: !5148)
!5178 = distinct !DISubprogram(name: "next_free_chunk", scope: !2655, file: !2655, line: 182, type: !4905, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !5179)
!5179 = !{!5180, !5181}
!5180 = !DILocalVariable(name: "h", arg: 1, scope: !5178, file: !2655, line: 182, type: !2668)
!5181 = !DILocalVariable(name: "c", arg: 2, scope: !5178, file: !2655, line: 182, type: !2673)
!5182 = !DILocation(line: 0, scope: !5178)
!5183 = !DILocation(line: 184, column: 9, scope: !5178)
!5184 = !DILocation(line: 184, column: 2, scope: !5178)
!5185 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !4820, file: !4820, line: 200, type: !5186, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !5188)
!5186 = !DISubroutineType(types: !5187)
!5187 = !{!132, !4823, !102}
!5188 = !{!5189, !5190, !5191, !5192, !5193, !5194, !5195}
!5189 = !DILocalVariable(name: "heap", arg: 1, scope: !5185, file: !4820, line: 200, type: !4823)
!5190 = !DILocalVariable(name: "mem", arg: 2, scope: !5185, file: !4820, line: 200, type: !102)
!5191 = !DILocalVariable(name: "h", scope: !5185, file: !4820, line: 202, type: !2668)
!5192 = !DILocalVariable(name: "c", scope: !5185, file: !4820, line: 203, type: !2673)
!5193 = !DILocalVariable(name: "addr", scope: !5185, file: !4820, line: 204, type: !132)
!5194 = !DILocalVariable(name: "chunk_base", scope: !5185, file: !4820, line: 205, type: !132)
!5195 = !DILocalVariable(name: "chunk_sz", scope: !5185, file: !4820, line: 206, type: !132)
!5196 = !DILocation(line: 0, scope: !5185)
!5197 = !DILocation(line: 202, column: 27, scope: !5185)
!5198 = !DILocation(line: 203, column: 16, scope: !5185)
!5199 = !DILocation(line: 204, column: 16, scope: !5185)
!5200 = !DILocation(line: 205, column: 31, scope: !5185)
!5201 = !DILocation(line: 205, column: 22, scope: !5185)
!5202 = !DILocation(line: 206, column: 20, scope: !5185)
!5203 = !DILocation(line: 206, column: 37, scope: !5185)
!5204 = !DILocation(line: 208, column: 26, scope: !5185)
!5205 = !DILocation(line: 208, column: 18, scope: !5185)
!5206 = !DILocation(line: 208, column: 2, scope: !5185)
!5207 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !4820, file: !4820, line: 263, type: !5208, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !5210)
!5208 = !DISubroutineType(types: !5209)
!5209 = !{!102, !4823, !132}
!5210 = !{!5211, !5212, !5213, !5214, !5215, !5216}
!5211 = !DILocalVariable(name: "heap", arg: 1, scope: !5207, file: !4820, line: 263, type: !4823)
!5212 = !DILocalVariable(name: "bytes", arg: 2, scope: !5207, file: !4820, line: 263, type: !132)
!5213 = !DILocalVariable(name: "h", scope: !5207, file: !4820, line: 265, type: !2668)
!5214 = !DILocalVariable(name: "mem", scope: !5207, file: !4820, line: 266, type: !102)
!5215 = !DILocalVariable(name: "chunk_sz", scope: !5207, file: !4820, line: 272, type: !4946)
!5216 = !DILocalVariable(name: "c", scope: !5207, file: !4820, line: 273, type: !2673)
!5217 = !DILocation(line: 0, scope: !5207)
!5218 = !DILocation(line: 265, column: 27, scope: !5207)
!5219 = !DILocation(line: 268, column: 12, scope: !5220)
!5220 = distinct !DILexicalBlock(scope: !5207, file: !4820, line: 268, column: 6)
!5221 = !DILocation(line: 268, column: 18, scope: !5220)
!5222 = !DILocation(line: 268, column: 21, scope: !5220)
!5223 = !DILocation(line: 268, column: 6, scope: !5207)
!5224 = !DILocation(line: 272, column: 23, scope: !5207)
!5225 = !DILocation(line: 273, column: 16, scope: !5207)
!5226 = !DILocation(line: 274, column: 8, scope: !5227)
!5227 = distinct !DILexicalBlock(scope: !5207, file: !4820, line: 274, column: 6)
!5228 = !DILocation(line: 274, column: 6, scope: !5207)
!5229 = !DILocation(line: 279, column: 6, scope: !5230)
!5230 = distinct !DILexicalBlock(scope: !5207, file: !4820, line: 279, column: 6)
!5231 = !DILocation(line: 279, column: 23, scope: !5230)
!5232 = !DILocation(line: 279, column: 6, scope: !5207)
!5233 = !DILocation(line: 280, column: 24, scope: !5234)
!5234 = distinct !DILexicalBlock(scope: !5230, file: !4820, line: 279, column: 35)
!5235 = !DILocation(line: 280, column: 3, scope: !5234)
!5236 = !DILocation(line: 281, column: 3, scope: !5234)
!5237 = !DILocation(line: 282, column: 2, scope: !5234)
!5238 = !DILocation(line: 284, column: 2, scope: !5207)
!5239 = !DILocation(line: 286, column: 8, scope: !5207)
!5240 = !DILocation(line: 298, column: 2, scope: !5207)
!5241 = !DILocation(line: 299, column: 1, scope: !5207)
!5242 = distinct !DISubprogram(name: "size_too_big", scope: !2655, file: !2655, line: 256, type: !5243, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !5245)
!5243 = !DISubroutineType(types: !5244)
!5244 = !{!131, !2668, !132}
!5245 = !{!5246, !5247}
!5246 = !DILocalVariable(name: "h", arg: 1, scope: !5242, file: !2655, line: 256, type: !2668)
!5247 = !DILocalVariable(name: "bytes", arg: 2, scope: !5242, file: !2655, line: 256, type: !132)
!5248 = !DILocation(line: 0, scope: !5242)
!5249 = !DILocation(line: 262, column: 16, scope: !5242)
!5250 = !DILocation(line: 262, column: 36, scope: !5242)
!5251 = !DILocation(line: 262, column: 30, scope: !5242)
!5252 = !DILocation(line: 262, column: 2, scope: !5242)
!5253 = distinct !DISubprogram(name: "alloc_chunk", scope: !4820, file: !4820, line: 211, type: !5254, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !5256)
!5254 = !DISubroutineType(types: !5255)
!5255 = !{!2673, !2668, !4946}
!5256 = !{!5257, !5258, !5259, !5260, !5261, !5264, !5265, !5267, !5268, !5271}
!5257 = !DILocalVariable(name: "h", arg: 1, scope: !5253, file: !4820, line: 211, type: !2668)
!5258 = !DILocalVariable(name: "sz", arg: 2, scope: !5253, file: !4820, line: 211, type: !4946)
!5259 = !DILocalVariable(name: "bi", scope: !5253, file: !4820, line: 213, type: !103)
!5260 = !DILocalVariable(name: "b", scope: !5253, file: !4820, line: 214, type: !5009)
!5261 = !DILocalVariable(name: "first", scope: !5262, file: !4820, line: 233, type: !2673)
!5262 = distinct !DILexicalBlock(scope: !5263, file: !4820, line: 232, column: 15)
!5263 = distinct !DILexicalBlock(scope: !5253, file: !4820, line: 232, column: 6)
!5264 = !DILocalVariable(name: "i", scope: !5262, file: !4820, line: 234, type: !103)
!5265 = !DILocalVariable(name: "c", scope: !5266, file: !4820, line: 236, type: !2673)
!5266 = distinct !DILexicalBlock(scope: !5262, file: !4820, line: 235, column: 6)
!5267 = !DILocalVariable(name: "bmask", scope: !5253, file: !4820, line: 249, type: !108)
!5268 = !DILocalVariable(name: "minbucket", scope: !5269, file: !4820, line: 252, type: !103)
!5269 = distinct !DILexicalBlock(scope: !5270, file: !4820, line: 251, column: 19)
!5270 = distinct !DILexicalBlock(scope: !5253, file: !4820, line: 251, column: 6)
!5271 = !DILocalVariable(name: "c", scope: !5269, file: !4820, line: 253, type: !2673)
!5272 = !DILocation(line: 0, scope: !5253)
!5273 = !DILocation(line: 213, column: 11, scope: !5253)
!5274 = !DILocation(line: 232, column: 9, scope: !5263)
!5275 = !DILocation(line: 232, column: 6, scope: !5263)
!5276 = !DILocation(line: 232, column: 6, scope: !5253)
!5277 = !DILocation(line: 236, column: 21, scope: !5266)
!5278 = !DILocation(line: 0, scope: !5262)
!5279 = !DILocation(line: 0, scope: !5266)
!5280 = !DILocation(line: 237, column: 8, scope: !5281)
!5281 = distinct !DILexicalBlock(scope: !5266, file: !4820, line: 237, column: 8)
!5282 = !DILocation(line: 237, column: 25, scope: !5281)
!5283 = !DILocation(line: 237, column: 8, scope: !5266)
!5284 = !DILocation(line: 238, column: 5, scope: !5285)
!5285 = distinct !DILexicalBlock(scope: !5281, file: !4820, line: 237, column: 32)
!5286 = !DILocation(line: 241, column: 14, scope: !5266)
!5287 = !DILocation(line: 241, column: 12, scope: !5266)
!5288 = !DILocation(line: 243, column: 12, scope: !5262)
!5289 = !DILocation(line: 243, column: 16, scope: !5262)
!5290 = distinct !{!5290, !5291, !5292}
!5291 = !DILocation(line: 235, column: 3, scope: !5262)
!5292 = !DILocation(line: 243, column: 35, scope: !5262)
!5293 = !DILocation(line: 249, column: 22, scope: !5253)
!5294 = !DILocation(line: 249, column: 39, scope: !5253)
!5295 = !DILocation(line: 249, column: 36, scope: !5253)
!5296 = !DILocation(line: 251, column: 12, scope: !5270)
!5297 = !DILocation(line: 251, column: 6, scope: !5253)
!5298 = !DILocation(line: 252, column: 19, scope: !5269)
!5299 = !DILocation(line: 0, scope: !5269)
!5300 = !DILocation(line: 253, column: 39, scope: !5269)
!5301 = !DILocation(line: 255, column: 3, scope: !5269)
!5302 = !DILocation(line: 261, column: 1, scope: !5253)
!5303 = distinct !DISubprogram(name: "split_chunks", scope: !4820, file: !4820, line: 109, type: !4939, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !5304)
!5304 = !{!5305, !5306, !5307, !5308, !5309, !5310}
!5305 = !DILocalVariable(name: "h", arg: 1, scope: !5303, file: !4820, line: 109, type: !2668)
!5306 = !DILocalVariable(name: "lc", arg: 2, scope: !5303, file: !4820, line: 109, type: !2673)
!5307 = !DILocalVariable(name: "rc", arg: 3, scope: !5303, file: !4820, line: 109, type: !2673)
!5308 = !DILocalVariable(name: "sz0", scope: !5303, file: !4820, line: 114, type: !4946)
!5309 = !DILocalVariable(name: "lsz", scope: !5303, file: !4820, line: 115, type: !4946)
!5310 = !DILocalVariable(name: "rsz", scope: !5303, file: !4820, line: 116, type: !4946)
!5311 = !DILocation(line: 0, scope: !5303)
!5312 = !DILocation(line: 114, column: 18, scope: !5303)
!5313 = !DILocation(line: 115, column: 21, scope: !5303)
!5314 = !DILocation(line: 116, column: 22, scope: !5303)
!5315 = !DILocation(line: 118, column: 2, scope: !5303)
!5316 = !DILocation(line: 119, column: 2, scope: !5303)
!5317 = !DILocation(line: 120, column: 2, scope: !5303)
!5318 = !DILocation(line: 121, column: 25, scope: !5303)
!5319 = !DILocation(line: 121, column: 2, scope: !5303)
!5320 = !DILocation(line: 122, column: 1, scope: !5303)
!5321 = distinct !DISubprogram(name: "chunk_mem", scope: !4820, file: !4820, line: 24, type: !5322, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !5324)
!5322 = !DISubroutineType(types: !5323)
!5323 = !{!102, !2668, !2673}
!5324 = !{!5325, !5326, !5327, !5328}
!5325 = !DILocalVariable(name: "h", arg: 1, scope: !5321, file: !4820, line: 24, type: !2668)
!5326 = !DILocalVariable(name: "c", arg: 2, scope: !5321, file: !4820, line: 24, type: !2673)
!5327 = !DILocalVariable(name: "buf", scope: !5321, file: !4820, line: 26, type: !2662)
!5328 = !DILocalVariable(name: "ret", scope: !5321, file: !4820, line: 27, type: !379)
!5329 = !DILocation(line: 0, scope: !5321)
!5330 = !DILocation(line: 26, column: 22, scope: !5321)
!5331 = !DILocation(line: 27, column: 38, scope: !5321)
!5332 = !DILocation(line: 31, column: 2, scope: !5321)
!5333 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !4820, file: !4820, line: 301, type: !5334, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !5336)
!5334 = !DISubroutineType(types: !5335)
!5335 = !{!102, !4823, !132, !132}
!5336 = !{!5337, !5338, !5339, !5340, !5341, !5342, !5343, !5344, !5345, !5346, !5347, !5348}
!5337 = !DILocalVariable(name: "heap", arg: 1, scope: !5333, file: !4820, line: 301, type: !4823)
!5338 = !DILocalVariable(name: "align", arg: 2, scope: !5333, file: !4820, line: 301, type: !132)
!5339 = !DILocalVariable(name: "bytes", arg: 3, scope: !5333, file: !4820, line: 301, type: !132)
!5340 = !DILocalVariable(name: "h", scope: !5333, file: !4820, line: 303, type: !2668)
!5341 = !DILocalVariable(name: "gap", scope: !5333, file: !4820, line: 304, type: !132)
!5342 = !DILocalVariable(name: "rew", scope: !5333, file: !4820, line: 304, type: !132)
!5343 = !DILocalVariable(name: "padded_sz", scope: !5333, file: !4820, line: 335, type: !4946)
!5344 = !DILocalVariable(name: "c0", scope: !5333, file: !4820, line: 336, type: !2673)
!5345 = !DILocalVariable(name: "mem", scope: !5333, file: !4820, line: 341, type: !379)
!5346 = !DILocalVariable(name: "end", scope: !5333, file: !4820, line: 345, type: !2662)
!5347 = !DILocalVariable(name: "c", scope: !5333, file: !4820, line: 348, type: !2673)
!5348 = !DILocalVariable(name: "c_end", scope: !5333, file: !4820, line: 349, type: !2673)
!5349 = !DILocation(line: 0, scope: !5333)
!5350 = !DILocation(line: 303, column: 27, scope: !5333)
!5351 = !DILocation(line: 313, column: 16, scope: !5333)
!5352 = !DILocation(line: 313, column: 14, scope: !5333)
!5353 = !DILocation(line: 314, column: 12, scope: !5354)
!5354 = distinct !DILexicalBlock(scope: !5333, file: !4820, line: 314, column: 6)
!5355 = !DILocation(line: 314, column: 6, scope: !5333)
!5356 = !DILocation(line: 315, column: 9, scope: !5357)
!5357 = distinct !DILexicalBlock(scope: !5354, file: !4820, line: 314, column: 20)
!5358 = !DILocation(line: 316, column: 9, scope: !5357)
!5359 = !DILocation(line: 318, column: 13, scope: !5360)
!5360 = distinct !DILexicalBlock(scope: !5361, file: !4820, line: 318, column: 7)
!5361 = distinct !DILexicalBlock(scope: !5354, file: !4820, line: 317, column: 9)
!5362 = !DILocation(line: 318, column: 7, scope: !5361)
!5363 = !DILocation(line: 319, column: 11, scope: !5364)
!5364 = distinct !DILexicalBlock(scope: !5360, file: !4820, line: 318, column: 39)
!5365 = !DILocation(line: 319, column: 4, scope: !5364)
!5366 = !DILocation(line: 0, scope: !5354)
!5367 = !DILocation(line: 326, column: 12, scope: !5368)
!5368 = distinct !DILexicalBlock(scope: !5333, file: !4820, line: 326, column: 6)
!5369 = !DILocation(line: 326, column: 17, scope: !5368)
!5370 = !DILocation(line: 326, column: 20, scope: !5368)
!5371 = !DILocation(line: 326, column: 6, scope: !5333)
!5372 = !DILocation(line: 335, column: 50, scope: !5333)
!5373 = !DILocation(line: 335, column: 58, scope: !5333)
!5374 = !DILocation(line: 335, column: 24, scope: !5333)
!5375 = !DILocation(line: 336, column: 17, scope: !5333)
!5376 = !DILocation(line: 338, column: 9, scope: !5377)
!5377 = distinct !DILexicalBlock(scope: !5333, file: !4820, line: 338, column: 6)
!5378 = !DILocation(line: 338, column: 6, scope: !5333)
!5379 = !DILocation(line: 341, column: 17, scope: !5333)
!5380 = !DILocation(line: 344, column: 20, scope: !5333)
!5381 = !DILocation(line: 344, column: 8, scope: !5333)
!5382 = !DILocation(line: 344, column: 47, scope: !5333)
!5383 = !DILocation(line: 345, column: 39, scope: !5333)
!5384 = !DILocation(line: 348, column: 16, scope: !5333)
!5385 = !DILocation(line: 349, column: 26, scope: !5333)
!5386 = !DILocation(line: 349, column: 24, scope: !5333)
!5387 = !DILocation(line: 353, column: 8, scope: !5388)
!5388 = distinct !DILexicalBlock(scope: !5333, file: !4820, line: 353, column: 6)
!5389 = !DILocation(line: 353, column: 6, scope: !5333)
!5390 = !DILocation(line: 354, column: 3, scope: !5391)
!5391 = distinct !DILexicalBlock(scope: !5388, file: !4820, line: 353, column: 14)
!5392 = !DILocation(line: 355, column: 3, scope: !5391)
!5393 = !DILocation(line: 356, column: 2, scope: !5391)
!5394 = !DILocation(line: 359, column: 6, scope: !5395)
!5395 = distinct !DILexicalBlock(scope: !5333, file: !4820, line: 359, column: 6)
!5396 = !DILocation(line: 359, column: 24, scope: !5395)
!5397 = !DILocation(line: 359, column: 6, scope: !5333)
!5398 = !DILocation(line: 360, column: 3, scope: !5399)
!5399 = distinct !DILexicalBlock(scope: !5395, file: !4820, line: 359, column: 33)
!5400 = !DILocation(line: 361, column: 3, scope: !5399)
!5401 = !DILocation(line: 362, column: 2, scope: !5399)
!5402 = !DILocation(line: 364, column: 2, scope: !5333)
!5403 = !DILocation(line: 377, column: 1, scope: !5333)
!5404 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !4820, file: !4820, line: 379, type: !5405, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !5407)
!5405 = !DISubroutineType(types: !5406)
!5406 = !{!102, !4823, !102, !132, !132}
!5407 = !{!5408, !5409, !5410, !5411, !5412, !5413, !5414, !5415, !5416, !5417, !5423, !5424}
!5408 = !DILocalVariable(name: "heap", arg: 1, scope: !5404, file: !4820, line: 379, type: !4823)
!5409 = !DILocalVariable(name: "ptr", arg: 2, scope: !5404, file: !4820, line: 379, type: !102)
!5410 = !DILocalVariable(name: "align", arg: 3, scope: !5404, file: !4820, line: 380, type: !132)
!5411 = !DILocalVariable(name: "bytes", arg: 4, scope: !5404, file: !4820, line: 380, type: !132)
!5412 = !DILocalVariable(name: "h", scope: !5404, file: !4820, line: 382, type: !2668)
!5413 = !DILocalVariable(name: "c", scope: !5404, file: !4820, line: 399, type: !2673)
!5414 = !DILocalVariable(name: "rc", scope: !5404, file: !4820, line: 400, type: !2673)
!5415 = !DILocalVariable(name: "align_gap", scope: !5404, file: !4820, line: 401, type: !132)
!5416 = !DILocalVariable(name: "chunks_need", scope: !5404, file: !4820, line: 402, type: !4946)
!5417 = !DILocalVariable(name: "split_size", scope: !5418, file: !4820, line: 435, type: !4946)
!5418 = distinct !DILexicalBlock(scope: !5419, file: !4820, line: 433, column: 61)
!5419 = distinct !DILexicalBlock(scope: !5420, file: !4820, line: 432, column: 13)
!5420 = distinct !DILexicalBlock(scope: !5421, file: !4820, line: 409, column: 13)
!5421 = distinct !DILexicalBlock(scope: !5422, file: !4820, line: 406, column: 13)
!5422 = distinct !DILexicalBlock(scope: !5404, file: !4820, line: 404, column: 6)
!5423 = !DILocalVariable(name: "ptr2", scope: !5404, file: !4820, line: 474, type: !102)
!5424 = !DILocalVariable(name: "prev_size", scope: !5425, file: !4820, line: 477, type: !132)
!5425 = distinct !DILexicalBlock(scope: !5426, file: !4820, line: 476, column: 20)
!5426 = distinct !DILexicalBlock(scope: !5404, file: !4820, line: 476, column: 6)
!5427 = !DILocation(line: 0, scope: !5404)
!5428 = !DILocation(line: 382, column: 27, scope: !5404)
!5429 = !DILocation(line: 385, column: 10, scope: !5430)
!5430 = distinct !DILexicalBlock(scope: !5404, file: !4820, line: 385, column: 6)
!5431 = !DILocation(line: 385, column: 6, scope: !5404)
!5432 = !DILocation(line: 386, column: 10, scope: !5433)
!5433 = distinct !DILexicalBlock(scope: !5430, file: !4820, line: 385, column: 19)
!5434 = !DILocation(line: 386, column: 3, scope: !5433)
!5435 = !DILocation(line: 388, column: 12, scope: !5436)
!5436 = distinct !DILexicalBlock(scope: !5404, file: !4820, line: 388, column: 6)
!5437 = !DILocation(line: 388, column: 6, scope: !5404)
!5438 = !DILocation(line: 389, column: 3, scope: !5439)
!5439 = distinct !DILexicalBlock(scope: !5436, file: !4820, line: 388, column: 18)
!5440 = !DILocation(line: 390, column: 3, scope: !5439)
!5441 = !DILocation(line: 395, column: 6, scope: !5442)
!5442 = distinct !DILexicalBlock(scope: !5404, file: !4820, line: 395, column: 6)
!5443 = !DILocation(line: 395, column: 6, scope: !5404)
!5444 = !DILocation(line: 399, column: 16, scope: !5404)
!5445 = !DILocation(line: 400, column: 17, scope: !5404)
!5446 = !DILocation(line: 401, column: 49, scope: !5404)
!5447 = !DILocation(line: 401, column: 36, scope: !5404)
!5448 = !DILocation(line: 402, column: 52, scope: !5404)
!5449 = !DILocation(line: 402, column: 26, scope: !5404)
!5450 = !DILocation(line: 404, column: 6, scope: !5422)
!5451 = !DILocation(line: 404, column: 12, scope: !5422)
!5452 = !DILocation(line: 404, column: 40, scope: !5422)
!5453 = !DILocation(line: 404, column: 31, scope: !5422)
!5454 = !DILocation(line: 404, column: 6, scope: !5404)
!5455 = !DILocation(line: 406, column: 13, scope: !5421)
!5456 = !DILocation(line: 406, column: 30, scope: !5421)
!5457 = !DILocation(line: 406, column: 13, scope: !5422)
!5458 = !DILocation(line: 409, column: 30, scope: !5420)
!5459 = !DILocation(line: 409, column: 13, scope: !5421)
!5460 = !DILocation(line: 420, column: 24, scope: !5461)
!5461 = distinct !DILexicalBlock(scope: !5420, file: !4820, line: 409, column: 45)
!5462 = !DILocation(line: 420, column: 3, scope: !5461)
!5463 = !DILocation(line: 421, column: 3, scope: !5461)
!5464 = !DILocation(line: 422, column: 3, scope: !5461)
!5465 = !DILocation(line: 431, column: 3, scope: !5461)
!5466 = !DILocation(line: 432, column: 14, scope: !5419)
!5467 = !DILocation(line: 432, column: 32, scope: !5419)
!5468 = !DILocation(line: 433, column: 26, scope: !5419)
!5469 = !DILocation(line: 433, column: 24, scope: !5419)
!5470 = !DILocation(line: 433, column: 44, scope: !5419)
!5471 = !DILocation(line: 432, column: 13, scope: !5420)
!5472 = !DILocation(line: 435, column: 38, scope: !5418)
!5473 = !DILocation(line: 0, scope: !5418)
!5474 = !DILocation(line: 445, column: 3, scope: !5418)
!5475 = !DILocation(line: 447, column: 20, scope: !5476)
!5476 = distinct !DILexicalBlock(scope: !5418, file: !4820, line: 447, column: 7)
!5477 = !DILocation(line: 447, column: 18, scope: !5476)
!5478 = !DILocation(line: 447, column: 7, scope: !5418)
!5479 = !DILocation(line: 448, column: 27, scope: !5480)
!5480 = distinct !DILexicalBlock(scope: !5476, file: !4820, line: 447, column: 39)
!5481 = !DILocation(line: 448, column: 4, scope: !5480)
!5482 = !DILocation(line: 449, column: 4, scope: !5480)
!5483 = !DILocation(line: 450, column: 3, scope: !5480)
!5484 = !DILocation(line: 452, column: 3, scope: !5418)
!5485 = !DILocation(line: 453, column: 3, scope: !5418)
!5486 = !DILocation(line: 474, column: 15, scope: !5404)
!5487 = !DILocation(line: 476, column: 11, scope: !5426)
!5488 = !DILocation(line: 476, column: 6, scope: !5404)
!5489 = !DILocation(line: 477, column: 42, scope: !5425)
!5490 = !DILocation(line: 477, column: 22, scope: !5425)
!5491 = !DILocation(line: 477, column: 60, scope: !5425)
!5492 = !DILocation(line: 0, scope: !5425)
!5493 = !DILocation(line: 479, column: 21, scope: !5425)
!5494 = !DILocation(line: 479, column: 3, scope: !5425)
!5495 = !DILocation(line: 480, column: 3, scope: !5425)
!5496 = !DILocation(line: 481, column: 2, scope: !5425)
!5497 = !DILocation(line: 483, column: 1, scope: !5404)
!5498 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !2655, file: !2655, line: 245, type: !5499, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !5501)
!5499 = !DISubroutineType(types: !5500)
!5500 = !{!132, !2668, !4946}
!5501 = !{!5502, !5503}
!5502 = !DILocalVariable(name: "h", arg: 1, scope: !5498, file: !2655, line: 245, type: !2668)
!5503 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !5498, file: !2655, line: 245, type: !4946)
!5504 = !DILocation(line: 0, scope: !5498)
!5505 = !DILocation(line: 247, column: 20, scope: !5498)
!5506 = !DILocation(line: 247, column: 33, scope: !5498)
!5507 = !DILocation(line: 247, column: 2, scope: !5498)
!5508 = distinct !DISubprogram(name: "sys_heap_init", scope: !4820, file: !4820, line: 485, type: !5509, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !5511)
!5509 = !DISubroutineType(types: !5510)
!5510 = !{null, !4823, !102, !132}
!5511 = !{!5512, !5513, !5514, !5515, !5516, !5517, !5518, !5519, !5520, !5521}
!5512 = !DILocalVariable(name: "heap", arg: 1, scope: !5508, file: !4820, line: 485, type: !4823)
!5513 = !DILocalVariable(name: "mem", arg: 2, scope: !5508, file: !4820, line: 485, type: !102)
!5514 = !DILocalVariable(name: "bytes", arg: 3, scope: !5508, file: !4820, line: 485, type: !132)
!5515 = !DILocalVariable(name: "addr", scope: !5508, file: !4820, line: 502, type: !22)
!5516 = !DILocalVariable(name: "end", scope: !5508, file: !4820, line: 503, type: !22)
!5517 = !DILocalVariable(name: "heap_sz", scope: !5508, file: !4820, line: 504, type: !4946)
!5518 = !DILocalVariable(name: "h", scope: !5508, file: !4820, line: 509, type: !2668)
!5519 = !DILocalVariable(name: "nb_buckets", scope: !5508, file: !4820, line: 520, type: !103)
!5520 = !DILocalVariable(name: "chunk0_size", scope: !5508, file: !4820, line: 521, type: !4946)
!5521 = !DILocalVariable(name: "i", scope: !5522, file: !4820, line: 526, type: !103)
!5522 = distinct !DILexicalBlock(scope: !5508, file: !4820, line: 526, column: 2)
!5523 = !DILocation(line: 0, scope: !5508)
!5524 = !DILocation(line: 499, column: 8, scope: !5508)
!5525 = !DILocation(line: 502, column: 19, scope: !5508)
!5526 = !DILocation(line: 503, column: 18, scope: !5508)
!5527 = !DILocation(line: 504, column: 27, scope: !5508)
!5528 = !DILocation(line: 504, column: 35, scope: !5508)
!5529 = !DILocation(line: 509, column: 21, scope: !5508)
!5530 = !DILocation(line: 510, column: 8, scope: !5508)
!5531 = !DILocation(line: 510, column: 13, scope: !5508)
!5532 = !DILocation(line: 511, column: 5, scope: !5508)
!5533 = !DILocation(line: 511, column: 15, scope: !5508)
!5534 = !DILocation(line: 512, column: 5, scope: !5508)
!5535 = !DILocation(line: 512, column: 19, scope: !5508)
!5536 = !DILocation(line: 520, column: 19, scope: !5508)
!5537 = !DILocation(line: 522, column: 21, scope: !5508)
!5538 = !DILocation(line: 521, column: 56, scope: !5508)
!5539 = !DILocation(line: 521, column: 26, scope: !5508)
!5540 = !DILocation(line: 0, scope: !5522)
!5541 = !DILocation(line: 526, column: 20, scope: !5542)
!5542 = distinct !DILexicalBlock(scope: !5522, file: !4820, line: 526, column: 2)
!5543 = !DILocation(line: 526, column: 2, scope: !5522)
!5544 = !DILocation(line: 531, column: 2, scope: !5508)
!5545 = !DILocation(line: 532, column: 2, scope: !5508)
!5546 = !DILocation(line: 533, column: 2, scope: !5508)
!5547 = !DILocation(line: 536, column: 41, scope: !5508)
!5548 = !DILocation(line: 536, column: 2, scope: !5508)
!5549 = !DILocation(line: 537, column: 2, scope: !5508)
!5550 = !DILocation(line: 540, column: 2, scope: !5508)
!5551 = !DILocation(line: 541, column: 2, scope: !5508)
!5552 = !DILocation(line: 542, column: 2, scope: !5508)
!5553 = !DILocation(line: 544, column: 2, scope: !5508)
!5554 = !DILocation(line: 545, column: 1, scope: !5508)
!5555 = !DILocation(line: 527, column: 17, scope: !5556)
!5556 = distinct !DILexicalBlock(scope: !5542, file: !4820, line: 526, column: 39)
!5557 = !DILocation(line: 527, column: 22, scope: !5556)
!5558 = !DILocation(line: 526, column: 35, scope: !5542)
!5559 = distinct !{!5559, !5543, !5560}
!5560 = !DILocation(line: 528, column: 2, scope: !5522)
!5561 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2688, file: !2688, line: 1338, type: !5562, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !5570)
!5562 = !DISubroutineType(types: !5563)
!5563 = !{!103, !4018, !102, !337, !5564, !108}
!5564 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3657, line: 99, baseType: !5565)
!5565 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3657, line: 40, baseType: !5566)
!5566 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2688, baseType: !5567)
!5567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5568)
!5568 = !{!5569}
!5569 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5567, file: !2688, baseType: !102, size: 32)
!5570 = !{!5571, !5572, !5573, !5574, !5575, !5576, !5580, !5581, !5582, !5584, !5589, !5632, !5635, !5638, !5639, !5640, !5641, !5642, !5643, !5644, !5647, !5648, !5649, !5653, !5656, !5658, !5661, !5662, !5663, !5668, !5674, !5677, !5681, !5687, !5691, !5694, !5696, !5699}
!5571 = !DILocalVariable(name: "out", arg: 1, scope: !5561, file: !2688, line: 1338, type: !4018)
!5572 = !DILocalVariable(name: "ctx", arg: 2, scope: !5561, file: !2688, line: 1338, type: !102)
!5573 = !DILocalVariable(name: "fp", arg: 3, scope: !5561, file: !2688, line: 1338, type: !337)
!5574 = !DILocalVariable(name: "ap", arg: 4, scope: !5561, file: !2688, line: 1339, type: !5564)
!5575 = !DILocalVariable(name: "flags", arg: 5, scope: !5561, file: !2688, line: 1339, type: !108)
!5576 = !DILocalVariable(name: "buf", scope: !5561, file: !2688, line: 1341, type: !5577)
!5577 = !DICompositeType(tag: DW_TAG_array_type, baseType: !278, size: 176, elements: !5578)
!5578 = !{!5579}
!5579 = !DISubrange(count: 22)
!5580 = !DILocalVariable(name: "count", scope: !5561, file: !2688, line: 1342, type: !132)
!5581 = !DILocalVariable(name: "sint", scope: !5561, file: !2688, line: 1343, type: !2707)
!5582 = !DILocalVariable(name: "tagged_ap", scope: !5561, file: !2688, line: 1345, type: !5583)
!5583 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !131)
!5584 = !DILocalVariable(name: "rc", scope: !5585, file: !2688, line: 1377, type: !103)
!5585 = distinct !DILexicalBlock(scope: !5586, file: !2688, line: 1377, column: 4)
!5586 = distinct !DILexicalBlock(scope: !5587, file: !2688, line: 1376, column: 19)
!5587 = distinct !DILexicalBlock(scope: !5588, file: !2688, line: 1376, column: 7)
!5588 = distinct !DILexicalBlock(scope: !5561, file: !2688, line: 1375, column: 19)
!5589 = !DILocalVariable(name: "state", scope: !5588, file: !2688, line: 1395, type: !5590)
!5590 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5561, file: !2688, line: 1392, size: 192, elements: !5591)
!5591 = !{!5592, !5600}
!5592 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !5590, file: !2688, line: 1393, baseType: !5593, size: 64)
!5593 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2688, line: 166, size: 64, elements: !5594)
!5594 = !{!5595, !5596, !5597, !5598, !5599}
!5595 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !5593, file: !2688, line: 168, baseType: !2707, size: 64)
!5596 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !5593, file: !2688, line: 171, baseType: !2710, size: 64)
!5597 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !5593, file: !2688, line: 174, baseType: !372, size: 64)
!5598 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !5593, file: !2688, line: 177, baseType: !370, size: 64)
!5599 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5593, file: !2688, line: 180, baseType: !102, size: 32)
!5600 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !5590, file: !2688, line: 1394, baseType: !5601, size: 96, offset: 64)
!5601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2688, line: 189, size: 96, elements: !5602)
!5602 = !{!5603, !5604, !5605, !5606, !5607, !5608, !5609, !5610, !5611, !5612, !5613, !5614, !5615, !5616, !5617, !5618, !5619, !5620, !5621, !5622, !5627}
!5603 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !5601, file: !2688, line: 191, baseType: !131, size: 1, flags: DIFlagBitField, extraData: i64 0)
!5604 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !5601, file: !2688, line: 194, baseType: !131, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!5605 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !5601, file: !2688, line: 197, baseType: !131, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!5606 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !5601, file: !2688, line: 200, baseType: !131, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!5607 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !5601, file: !2688, line: 203, baseType: !131, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!5608 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !5601, file: !2688, line: 206, baseType: !131, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!5609 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !5601, file: !2688, line: 209, baseType: !131, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!5610 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !5601, file: !2688, line: 212, baseType: !131, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!5611 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !5601, file: !2688, line: 219, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!5612 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !5601, file: !2688, line: 222, baseType: !131, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!5613 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !5601, file: !2688, line: 229, baseType: !131, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!5614 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !5601, file: !2688, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!5615 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !5601, file: !2688, line: 238, baseType: !131, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!5616 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !5601, file: !2688, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!5617 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !5601, file: !2688, line: 244, baseType: !131, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!5618 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !5601, file: !2688, line: 247, baseType: !131, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!5619 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !5601, file: !2688, line: 252, baseType: !131, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!5620 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !5601, file: !2688, line: 257, baseType: !131, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!5621 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !5601, file: !2688, line: 260, baseType: !186, size: 8, offset: 24)
!5622 = !DIDerivedType(tag: DW_TAG_member, scope: !5601, file: !2688, line: 262, baseType: !5623, size: 32, offset: 32)
!5623 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5601, file: !2688, line: 262, size: 32, elements: !5624)
!5624 = !{!5625, !5626}
!5625 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !5623, file: !2688, line: 267, baseType: !103, size: 32)
!5626 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !5623, file: !2688, line: 289, baseType: !103, size: 32)
!5627 = !DIDerivedType(tag: DW_TAG_member, scope: !5601, file: !2688, line: 292, baseType: !5628, size: 32, offset: 64)
!5628 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5601, file: !2688, line: 292, size: 32, elements: !5629)
!5629 = !{!5630, !5631}
!5630 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !5628, file: !2688, line: 297, baseType: !103, size: 32)
!5631 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !5628, file: !2688, line: 306, baseType: !103, size: 32)
!5632 = !DILocalVariable(name: "conv", scope: !5588, file: !2688, line: 1400, type: !5633)
!5633 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5634)
!5634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5601, size: 32)
!5635 = !DILocalVariable(name: "value", scope: !5588, file: !2688, line: 1401, type: !5636)
!5636 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5637)
!5637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5593, size: 32)
!5638 = !DILocalVariable(name: "sp", scope: !5588, file: !2688, line: 1402, type: !337)
!5639 = !DILocalVariable(name: "width", scope: !5588, file: !2688, line: 1403, type: !103)
!5640 = !DILocalVariable(name: "precision", scope: !5588, file: !2688, line: 1404, type: !103)
!5641 = !DILocalVariable(name: "bps", scope: !5588, file: !2688, line: 1405, type: !337)
!5642 = !DILocalVariable(name: "bpe", scope: !5588, file: !2688, line: 1406, type: !337)
!5643 = !DILocalVariable(name: "sign", scope: !5588, file: !2688, line: 1407, type: !278)
!5644 = !DILocalVariable(name: "arg", scope: !5645, file: !2688, line: 1432, type: !103)
!5645 = distinct !DILexicalBlock(scope: !5646, file: !2688, line: 1431, column: 24)
!5646 = distinct !DILexicalBlock(scope: !5588, file: !2688, line: 1431, column: 7)
!5647 = !DILocalVariable(name: "specifier_cat", scope: !5588, file: !2688, line: 1468, type: !2687)
!5648 = !DILocalVariable(name: "length_mod", scope: !5588, file: !2688, line: 1470, type: !2695)
!5649 = !DILocalVariable(name: "rc", scope: !5650, file: !2688, line: 1575, type: !103)
!5650 = distinct !DILexicalBlock(scope: !5651, file: !2688, line: 1575, column: 4)
!5651 = distinct !DILexicalBlock(scope: !5652, file: !2688, line: 1574, column: 43)
!5652 = distinct !DILexicalBlock(scope: !5588, file: !2688, line: 1574, column: 7)
!5653 = !DILocalVariable(name: "rc", scope: !5654, file: !2688, line: 1584, type: !103)
!5654 = distinct !DILexicalBlock(scope: !5655, file: !2688, line: 1584, column: 4)
!5655 = distinct !DILexicalBlock(scope: !5588, file: !2688, line: 1582, column: 28)
!5656 = !DILocalVariable(name: "len", scope: !5657, file: !2688, line: 1589, type: !132)
!5657 = distinct !DILexicalBlock(scope: !5655, file: !2688, line: 1586, column: 13)
!5658 = !DILocalVariable(name: "len", scope: !5659, file: !2688, line: 1641, type: !132)
!5659 = distinct !DILexicalBlock(scope: !5660, file: !2688, line: 1640, column: 24)
!5660 = distinct !DILexicalBlock(scope: !5655, file: !2688, line: 1640, column: 8)
!5661 = !DILocalVariable(name: "nj_len", scope: !5588, file: !2688, line: 1722, type: !132)
!5662 = !DILocalVariable(name: "pad_len", scope: !5588, file: !2688, line: 1723, type: !103)
!5663 = !DILocalVariable(name: "pad", scope: !5664, file: !2688, line: 1751, type: !278)
!5664 = distinct !DILexicalBlock(scope: !5665, file: !2688, line: 1750, column: 26)
!5665 = distinct !DILexicalBlock(scope: !5666, file: !2688, line: 1750, column: 8)
!5666 = distinct !DILexicalBlock(scope: !5667, file: !2688, line: 1747, column: 18)
!5667 = distinct !DILexicalBlock(scope: !5588, file: !2688, line: 1747, column: 7)
!5668 = !DILocalVariable(name: "rc", scope: !5669, file: !2688, line: 1758, type: !103)
!5669 = distinct !DILexicalBlock(scope: !5670, file: !2688, line: 1758, column: 7)
!5670 = distinct !DILexicalBlock(scope: !5671, file: !2688, line: 1757, column: 21)
!5671 = distinct !DILexicalBlock(scope: !5672, file: !2688, line: 1757, column: 10)
!5672 = distinct !DILexicalBlock(scope: !5673, file: !2688, line: 1756, column: 26)
!5673 = distinct !DILexicalBlock(scope: !5664, file: !2688, line: 1756, column: 9)
!5674 = !DILocalVariable(name: "rc", scope: !5675, file: !2688, line: 1765, type: !103)
!5675 = distinct !DILexicalBlock(scope: !5676, file: !2688, line: 1765, column: 6)
!5676 = distinct !DILexicalBlock(scope: !5664, file: !2688, line: 1764, column: 25)
!5677 = !DILocalVariable(name: "rc", scope: !5678, file: !2688, line: 1774, type: !103)
!5678 = distinct !DILexicalBlock(scope: !5679, file: !2688, line: 1774, column: 4)
!5679 = distinct !DILexicalBlock(scope: !5680, file: !2688, line: 1773, column: 18)
!5680 = distinct !DILexicalBlock(scope: !5588, file: !2688, line: 1773, column: 7)
!5681 = !DILocalVariable(name: "rc", scope: !5682, file: !2688, line: 1819, type: !103)
!5682 = distinct !DILexicalBlock(scope: !5683, file: !2688, line: 1819, column: 5)
!5683 = distinct !DILexicalBlock(scope: !5684, file: !2688, line: 1818, column: 44)
!5684 = distinct !DILexicalBlock(scope: !5685, file: !2688, line: 1818, column: 8)
!5685 = distinct !DILexicalBlock(scope: !5686, file: !2688, line: 1817, column: 10)
!5686 = distinct !DILexicalBlock(scope: !5588, file: !2688, line: 1777, column: 7)
!5687 = !DILocalVariable(name: "rc", scope: !5688, file: !2688, line: 1823, type: !103)
!5688 = distinct !DILexicalBlock(scope: !5689, file: !2688, line: 1823, column: 5)
!5689 = distinct !DILexicalBlock(scope: !5690, file: !2688, line: 1822, column: 26)
!5690 = distinct !DILexicalBlock(scope: !5685, file: !2688, line: 1822, column: 8)
!5691 = !DILocalVariable(name: "rc", scope: !5692, file: !2688, line: 1828, type: !103)
!5692 = distinct !DILexicalBlock(scope: !5693, file: !2688, line: 1828, column: 5)
!5693 = distinct !DILexicalBlock(scope: !5685, file: !2688, line: 1827, column: 26)
!5694 = !DILocalVariable(name: "rc", scope: !5695, file: !2688, line: 1831, type: !103)
!5695 = distinct !DILexicalBlock(scope: !5685, file: !2688, line: 1831, column: 4)
!5696 = !DILocalVariable(name: "rc", scope: !5697, file: !2688, line: 1836, type: !103)
!5697 = distinct !DILexicalBlock(scope: !5698, file: !2688, line: 1836, column: 4)
!5698 = distinct !DILexicalBlock(scope: !5588, file: !2688, line: 1835, column: 21)
!5699 = !DILabel(scope: !5655, name: "prec_int_pad0", file: !2688, line: 1634)
!5700 = !DILocation(line: 0, scope: !5561)
!5701 = !DILocation(line: 1341, column: 2, scope: !5561)
!5702 = !DILocation(line: 1341, column: 7, scope: !5561)
!5703 = !DILocation(line: 1375, column: 2, scope: !5561)
!5704 = !DILocation(line: 1342, column: 9, scope: !5561)
!5705 = !DILocation(line: 1375, column: 9, scope: !5561)
!5706 = !DILocation(line: 1377, column: 4, scope: !5585)
!5707 = !DILocation(line: 0, scope: !5585)
!5708 = !DILocation(line: 1377, column: 4, scope: !5709)
!5709 = distinct !DILexicalBlock(scope: !5585, file: !2688, line: 1377, column: 4)
!5710 = distinct !{!5710, !5703, !5711}
!5711 = !DILocation(line: 1839, column: 2, scope: !5561)
!5712 = !DILocation(line: 1392, column: 3, scope: !5588)
!5713 = !DILocation(line: 1395, column: 5, scope: !5588)
!5714 = !DILocation(line: 0, scope: !5588)
!5715 = !DILocation(line: 1409, column: 8, scope: !5588)
!5716 = !DILocation(line: 1414, column: 13, scope: !5717)
!5717 = distinct !DILexicalBlock(scope: !5588, file: !2688, line: 1414, column: 7)
!5718 = !DILocation(line: 1414, column: 7, scope: !5588)
!5719 = !DILocation(line: 1415, column: 12, scope: !5720)
!5720 = distinct !DILexicalBlock(scope: !5717, file: !2688, line: 1414, column: 25)
!5721 = !DILocation(line: 1417, column: 14, scope: !5722)
!5722 = distinct !DILexicalBlock(scope: !5720, file: !2688, line: 1417, column: 8)
!5723 = !DILocation(line: 1417, column: 8, scope: !5720)
!5724 = !DILocation(line: 1418, column: 21, scope: !5725)
!5725 = distinct !DILexicalBlock(scope: !5722, file: !2688, line: 1417, column: 19)
!5726 = !DILocation(line: 1419, column: 13, scope: !5725)
!5727 = !DILocation(line: 1420, column: 4, scope: !5725)
!5728 = !DILocation(line: 1421, column: 20, scope: !5729)
!5729 = distinct !DILexicalBlock(scope: !5717, file: !2688, line: 1421, column: 14)
!5730 = !DILocation(line: 1421, column: 14, scope: !5717)
!5731 = !DILocation(line: 1431, column: 13, scope: !5646)
!5732 = !DILocation(line: 1431, column: 7, scope: !5588)
!5733 = !DILocation(line: 1432, column: 14, scope: !5645)
!5734 = !DILocation(line: 0, scope: !5645)
!5735 = !DILocation(line: 1434, column: 12, scope: !5736)
!5736 = distinct !DILexicalBlock(scope: !5645, file: !2688, line: 1434, column: 8)
!5737 = !DILocation(line: 1434, column: 8, scope: !5645)
!5738 = !DILocation(line: 1435, column: 24, scope: !5739)
!5739 = distinct !DILexicalBlock(scope: !5736, file: !2688, line: 1434, column: 17)
!5740 = !DILocation(line: 1436, column: 4, scope: !5739)
!5741 = !DILocation(line: 1439, column: 20, scope: !5742)
!5742 = distinct !DILexicalBlock(scope: !5646, file: !2688, line: 1439, column: 14)
!5743 = !DILocation(line: 1439, column: 14, scope: !5646)
!5744 = !DILocation(line: 1469, column: 37, scope: !5588)
!5745 = !DILocation(line: 1448, column: 20, scope: !5588)
!5746 = !DILocation(line: 1449, column: 22, scope: !5588)
!5747 = !DILocation(line: 1471, column: 34, scope: !5588)
!5748 = !DILocation(line: 1478, column: 7, scope: !5588)
!5749 = !DILocation(line: 1479, column: 4, scope: !5750)
!5750 = distinct !DILexicalBlock(scope: !5751, file: !2688, line: 1478, column: 40)
!5751 = distinct !DILexicalBlock(scope: !5588, file: !2688, line: 1478, column: 7)
!5752 = !DILocation(line: 1484, column: 19, scope: !5753)
!5753 = distinct !DILexicalBlock(scope: !5750, file: !2688, line: 1479, column: 24)
!5754 = !DILocation(line: 1484, column: 17, scope: !5753)
!5755 = !DILocation(line: 1485, column: 5, scope: !5753)
!5756 = !DILocation(line: 1492, column: 20, scope: !5757)
!5757 = distinct !DILexicalBlock(scope: !5758, file: !2688, line: 1491, column: 12)
!5758 = distinct !DILexicalBlock(scope: !5753, file: !2688, line: 1487, column: 9)
!5759 = !DILocation(line: 1492, column: 18, scope: !5757)
!5760 = !DILocation(line: 1494, column: 5, scope: !5753)
!5761 = !DILocation(line: 1497, column: 23, scope: !5753)
!5762 = !DILocation(line: 1496, column: 17, scope: !5753)
!5763 = !DILocation(line: 1498, column: 5, scope: !5753)
!5764 = !DILocation(line: 1501, column: 23, scope: !5753)
!5765 = !DILocation(line: 1500, column: 17, scope: !5753)
!5766 = !DILocation(line: 1502, column: 5, scope: !5753)
!5767 = !DILocation(line: 1513, column: 23, scope: !5753)
!5768 = !DILocation(line: 1513, column: 6, scope: !5753)
!5769 = !DILocation(line: 1512, column: 17, scope: !5753)
!5770 = !DILocation(line: 1514, column: 5, scope: !5753)
!5771 = !DILocation(line: 0, scope: !5753)
!5772 = !DILocation(line: 1516, column: 8, scope: !5750)
!5773 = !DILocation(line: 1517, column: 19, scope: !5774)
!5774 = distinct !DILexicalBlock(scope: !5775, file: !2688, line: 1516, column: 33)
!5775 = distinct !DILexicalBlock(scope: !5750, file: !2688, line: 1516, column: 8)
!5776 = !DILocation(line: 1517, column: 17, scope: !5774)
!5777 = !DILocation(line: 1518, column: 4, scope: !5774)
!5778 = !DILocation(line: 1519, column: 19, scope: !5779)
!5779 = distinct !DILexicalBlock(scope: !5780, file: !2688, line: 1518, column: 39)
!5780 = distinct !DILexicalBlock(scope: !5775, file: !2688, line: 1518, column: 15)
!5781 = !DILocation(line: 1519, column: 17, scope: !5779)
!5782 = !DILocation(line: 1520, column: 4, scope: !5779)
!5783 = !DILocation(line: 1522, column: 4, scope: !5784)
!5784 = distinct !DILexicalBlock(scope: !5785, file: !2688, line: 1521, column: 47)
!5785 = distinct !DILexicalBlock(scope: !5751, file: !2688, line: 1521, column: 14)
!5786 = !DILocation(line: 1527, column: 19, scope: !5787)
!5787 = distinct !DILexicalBlock(scope: !5784, file: !2688, line: 1522, column: 24)
!5788 = !DILocation(line: 1527, column: 17, scope: !5787)
!5789 = !DILocation(line: 1528, column: 5, scope: !5787)
!5790 = !DILocation(line: 0, scope: !5791)
!5791 = distinct !DILexicalBlock(scope: !5787, file: !2688, line: 1530, column: 9)
!5792 = !DILocation(line: 1540, column: 23, scope: !5787)
!5793 = !DILocation(line: 1539, column: 17, scope: !5787)
!5794 = !DILocation(line: 1542, column: 5, scope: !5787)
!5795 = !DILocation(line: 1545, column: 23, scope: !5787)
!5796 = !DILocation(line: 1544, column: 17, scope: !5787)
!5797 = !DILocation(line: 1547, column: 5, scope: !5787)
!5798 = !DILocation(line: 1551, column: 23, scope: !5787)
!5799 = !DILocation(line: 1551, column: 6, scope: !5787)
!5800 = !DILocation(line: 1550, column: 17, scope: !5787)
!5801 = !DILocation(line: 1552, column: 5, scope: !5787)
!5802 = !DILocation(line: 0, scope: !5787)
!5803 = !DILocation(line: 1554, column: 8, scope: !5784)
!5804 = !DILocation(line: 1555, column: 19, scope: !5805)
!5805 = distinct !DILexicalBlock(scope: !5806, file: !2688, line: 1554, column: 33)
!5806 = distinct !DILexicalBlock(scope: !5784, file: !2688, line: 1554, column: 8)
!5807 = !DILocation(line: 1555, column: 17, scope: !5805)
!5808 = !DILocation(line: 1556, column: 4, scope: !5805)
!5809 = !DILocation(line: 1557, column: 19, scope: !5810)
!5810 = distinct !DILexicalBlock(scope: !5811, file: !2688, line: 1556, column: 39)
!5811 = distinct !DILexicalBlock(scope: !5806, file: !2688, line: 1556, column: 15)
!5812 = !DILocation(line: 1557, column: 17, scope: !5810)
!5813 = !DILocation(line: 1558, column: 4, scope: !5810)
!5814 = !DILocation(line: 0, scope: !5815)
!5815 = distinct !DILexicalBlock(scope: !5816, file: !2688, line: 1560, column: 8)
!5816 = distinct !DILexicalBlock(scope: !5817, file: !2688, line: 1559, column: 45)
!5817 = distinct !DILexicalBlock(scope: !5785, file: !2688, line: 1559, column: 14)
!5818 = !DILocation(line: 1566, column: 17, scope: !5819)
!5819 = distinct !DILexicalBlock(scope: !5820, file: !2688, line: 1565, column: 46)
!5820 = distinct !DILexicalBlock(scope: !5817, file: !2688, line: 1565, column: 14)
!5821 = !DILocation(line: 1566, column: 15, scope: !5819)
!5822 = !DILocation(line: 1567, column: 3, scope: !5819)
!5823 = !DILocation(line: 1574, column: 21, scope: !5652)
!5824 = !DILocation(line: 1575, column: 4, scope: !5650)
!5825 = !DILocation(line: 0, scope: !5650)
!5826 = !DILocation(line: 1575, column: 4, scope: !5827)
!5827 = distinct !DILexicalBlock(scope: !5650, file: !2688, line: 1575, column: 4)
!5828 = !DILocation(line: 1582, column: 17, scope: !5588)
!5829 = !DILocation(line: 1582, column: 3, scope: !5588)
!5830 = !DILocation(line: 1584, column: 4, scope: !5654)
!5831 = !DILocation(line: 0, scope: !5654)
!5832 = !DILocation(line: 1584, column: 4, scope: !5833)
!5833 = distinct !DILexicalBlock(scope: !5654, file: !2688, line: 1584, column: 4)
!5834 = !DILocation(line: 1587, column: 31, scope: !5657)
!5835 = !DILocation(line: 1591, column: 18, scope: !5836)
!5836 = distinct !DILexicalBlock(scope: !5657, file: !2688, line: 1591, column: 8)
!5837 = !DILocation(line: 1591, column: 8, scope: !5657)
!5838 = !DILocation(line: 1592, column: 11, scope: !5839)
!5839 = distinct !DILexicalBlock(scope: !5836, file: !2688, line: 1591, column: 24)
!5840 = !DILocation(line: 0, scope: !5657)
!5841 = !DILocation(line: 1593, column: 4, scope: !5839)
!5842 = !DILocation(line: 1594, column: 11, scope: !5843)
!5843 = distinct !DILexicalBlock(scope: !5836, file: !2688, line: 1593, column: 11)
!5844 = !DILocation(line: 1604, column: 51, scope: !5655)
!5845 = !DILocation(line: 1604, column: 13, scope: !5655)
!5846 = !DILocation(line: 1604, column: 11, scope: !5655)
!5847 = !DILocation(line: 1606, column: 4, scope: !5655)
!5848 = !DILocation(line: 1609, column: 14, scope: !5849)
!5849 = distinct !DILexicalBlock(scope: !5655, file: !2688, line: 1609, column: 8)
!5850 = !DILocation(line: 1609, column: 8, scope: !5655)
!5851 = !DILocation(line: 1619, column: 18, scope: !5655)
!5852 = !DILocation(line: 1620, column: 13, scope: !5853)
!5853 = distinct !DILexicalBlock(scope: !5655, file: !2688, line: 1620, column: 8)
!5854 = !DILocation(line: 1620, column: 8, scope: !5655)
!5855 = !DILocation(line: 1622, column: 36, scope: !5856)
!5856 = distinct !DILexicalBlock(scope: !5853, file: !2688, line: 1620, column: 18)
!5857 = !DILocation(line: 1622, column: 17, scope: !5856)
!5858 = !DILocation(line: 1623, column: 4, scope: !5856)
!5859 = !DILocation(line: 1632, column: 29, scope: !5655)
!5860 = !DILocation(line: 1632, column: 10, scope: !5655)
!5861 = !DILocation(line: 1632, column: 4, scope: !5655)
!5862 = !DILocation(line: 1407, column: 8, scope: !5588)
!5863 = !DILocation(line: 0, scope: !5655)
!5864 = !DILocation(line: 1634, column: 3, scope: !5655)
!5865 = !DILocation(line: 1640, column: 18, scope: !5660)
!5866 = !DILocation(line: 1640, column: 8, scope: !5655)
!5867 = !DILocation(line: 1729, column: 13, scope: !5868)
!5868 = distinct !DILexicalBlock(scope: !5588, file: !2688, line: 1729, column: 7)
!5869 = !DILocation(line: 1641, column: 22, scope: !5659)
!5870 = !DILocation(line: 0, scope: !5659)
!5871 = !DILocation(line: 1646, column: 21, scope: !5659)
!5872 = !DILocation(line: 1649, column: 13, scope: !5873)
!5873 = distinct !DILexicalBlock(scope: !5659, file: !2688, line: 1649, column: 9)
!5874 = !DILocation(line: 1649, column: 9, scope: !5659)
!5875 = !DILocation(line: 1650, column: 35, scope: !5876)
!5876 = distinct !DILexicalBlock(scope: !5873, file: !2688, line: 1649, column: 34)
!5877 = !DILocation(line: 1650, column: 23, scope: !5876)
!5878 = !DILocation(line: 1651, column: 5, scope: !5876)
!5879 = !DILocation(line: 1660, column: 15, scope: !5880)
!5880 = distinct !DILexicalBlock(scope: !5655, file: !2688, line: 1660, column: 8)
!5881 = !DILocation(line: 1660, column: 19, scope: !5880)
!5882 = !DILocation(line: 1660, column: 8, scope: !5655)
!5883 = !DILocation(line: 1661, column: 23, scope: !5884)
!5884 = distinct !DILexicalBlock(scope: !5880, file: !2688, line: 1660, column: 28)
!5885 = !DILocation(line: 1661, column: 11, scope: !5884)
!5886 = !DILocation(line: 1665, column: 22, scope: !5884)
!5887 = !DILocation(line: 1666, column: 21, scope: !5884)
!5888 = !DILocation(line: 1668, column: 5, scope: !5884)
!5889 = !DILocation(line: 1677, column: 30, scope: !5890)
!5890 = distinct !DILexicalBlock(scope: !5891, file: !2688, line: 1676, column: 49)
!5891 = distinct !DILexicalBlock(scope: !5655, file: !2688, line: 1676, column: 8)
!5892 = !DILocation(line: 1677, column: 5, scope: !5890)
!5893 = !DILocation(line: 1680, column: 4, scope: !5655)
!5894 = !DILocation(line: 0, scope: !5836)
!5895 = !DILocation(line: 1597, column: 14, scope: !5657)
!5896 = !DILocation(line: 1699, column: 11, scope: !5897)
!5897 = distinct !DILexicalBlock(scope: !5588, file: !2688, line: 1699, column: 7)
!5898 = !DILocation(line: 1699, column: 7, scope: !5588)
!5899 = !DILocation(line: 1725, column: 7, scope: !5900)
!5900 = distinct !DILexicalBlock(scope: !5588, file: !2688, line: 1725, column: 7)
!5901 = !DILocation(line: 1725, column: 12, scope: !5900)
!5902 = !DILocation(line: 1747, column: 13, scope: !5667)
!5903 = !DILocation(line: 1747, column: 7, scope: !5588)
!5904 = !DILocation(line: 1722, column: 24, scope: !5588)
!5905 = !DILocation(line: 1725, column: 7, scope: !5588)
!5906 = !DILocation(line: 1729, column: 7, scope: !5588)
!5907 = !DILocation(line: 1736, column: 13, scope: !5908)
!5908 = distinct !DILexicalBlock(scope: !5588, file: !2688, line: 1736, column: 7)
!5909 = !DILocation(line: 1735, column: 19, scope: !5588)
!5910 = !DILocation(line: 1736, column: 7, scope: !5588)
!5911 = !DILocation(line: 1748, column: 10, scope: !5666)
!5912 = !DILocation(line: 1750, column: 15, scope: !5665)
!5913 = !DILocation(line: 1750, column: 8, scope: !5666)
!5914 = !DILocation(line: 0, scope: !5664)
!5915 = !DILocation(line: 1756, column: 15, scope: !5673)
!5916 = !DILocation(line: 1756, column: 9, scope: !5664)
!5917 = !DILocation(line: 1758, column: 7, scope: !5669)
!5918 = !DILocation(line: 0, scope: !5669)
!5919 = !DILocation(line: 1758, column: 7, scope: !5920)
!5920 = distinct !DILexicalBlock(scope: !5669, file: !2688, line: 1758, column: 7)
!5921 = !DILocation(line: 1764, column: 5, scope: !5664)
!5922 = !DILocation(line: 0, scope: !5666)
!5923 = !DILocation(line: 1764, column: 20, scope: !5664)
!5924 = !DILocation(line: 1764, column: 17, scope: !5664)
!5925 = !DILocation(line: 1765, column: 6, scope: !5675)
!5926 = !DILocation(line: 0, scope: !5675)
!5927 = !DILocation(line: 1765, column: 6, scope: !5928)
!5928 = distinct !DILexicalBlock(scope: !5675, file: !2688, line: 1765, column: 6)
!5929 = distinct !{!5929, !5921, !5930}
!5930 = !DILocation(line: 1766, column: 5, scope: !5664)
!5931 = !DILocation(line: 1773, column: 12, scope: !5680)
!5932 = !DILocation(line: 1773, column: 7, scope: !5588)
!5933 = !DILocation(line: 1773, column: 7, scope: !5680)
!5934 = !DILocation(line: 1774, column: 4, scope: !5678)
!5935 = !DILocation(line: 0, scope: !5678)
!5936 = !DILocation(line: 1774, column: 4, scope: !5937)
!5937 = distinct !DILexicalBlock(scope: !5678, file: !2688, line: 1774, column: 4)
!5938 = !DILocation(line: 1818, column: 8, scope: !5684)
!5939 = !DILocation(line: 1818, column: 27, scope: !5684)
!5940 = !DILocation(line: 1818, column: 25, scope: !5684)
!5941 = !DILocation(line: 1818, column: 8, scope: !5685)
!5942 = !DILocation(line: 1819, column: 5, scope: !5682)
!5943 = !DILocation(line: 0, scope: !5682)
!5944 = !DILocation(line: 1819, column: 5, scope: !5945)
!5945 = distinct !DILexicalBlock(scope: !5682, file: !2688, line: 1819, column: 5)
!5946 = !DILocation(line: 1822, column: 14, scope: !5690)
!5947 = !DILocation(line: 1822, column: 8, scope: !5685)
!5948 = !DILocation(line: 1823, column: 5, scope: !5688)
!5949 = !DILocation(line: 0, scope: !5688)
!5950 = !DILocation(line: 1823, column: 5, scope: !5951)
!5951 = distinct !DILexicalBlock(scope: !5688, file: !2688, line: 1823, column: 5)
!5952 = !DILocation(line: 1826, column: 20, scope: !5685)
!5953 = !DILocation(line: 1827, column: 4, scope: !5685)
!5954 = !DILocation(line: 0, scope: !5685)
!5955 = !DILocation(line: 1827, column: 21, scope: !5685)
!5956 = !DILocation(line: 1827, column: 18, scope: !5685)
!5957 = !DILocation(line: 1828, column: 5, scope: !5692)
!5958 = !DILocation(line: 0, scope: !5692)
!5959 = !DILocation(line: 1828, column: 5, scope: !5960)
!5960 = distinct !DILexicalBlock(scope: !5692, file: !2688, line: 1828, column: 5)
!5961 = distinct !{!5961, !5953, !5962}
!5962 = !DILocation(line: 1829, column: 4, scope: !5685)
!5963 = !DILocation(line: 1831, column: 4, scope: !5695)
!5964 = !DILocation(line: 0, scope: !5695)
!5965 = !DILocation(line: 1831, column: 4, scope: !5966)
!5966 = distinct !DILexicalBlock(scope: !5695, file: !2688, line: 1831, column: 4)
!5967 = !DILocation(line: 1835, column: 16, scope: !5588)
!5968 = !DILocation(line: 1835, column: 3, scope: !5588)
!5969 = !DILocation(line: 1836, column: 4, scope: !5697)
!5970 = !DILocation(line: 0, scope: !5697)
!5971 = !DILocation(line: 1836, column: 4, scope: !5972)
!5972 = distinct !DILexicalBlock(scope: !5697, file: !2688, line: 1836, column: 4)
!5973 = !DILocation(line: 1837, column: 4, scope: !5698)
!5974 = distinct !{!5974, !5968, !5975}
!5975 = !DILocation(line: 1838, column: 3, scope: !5588)
!5976 = !DILocation(line: 1844, column: 1, scope: !5561)
!5977 = distinct !DISubprogram(name: "extract_conversion", scope: !2688, file: !2688, line: 642, type: !5978, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !5980)
!5978 = !DISubroutineType(types: !5979)
!5979 = !{!337, !5634, !337}
!5980 = !{!5981, !5982}
!5981 = !DILocalVariable(name: "conv", arg: 1, scope: !5977, file: !2688, line: 642, type: !5634)
!5982 = !DILocalVariable(name: "sp", arg: 2, scope: !5977, file: !2688, line: 643, type: !337)
!5983 = !DILocation(line: 0, scope: !5977)
!5984 = !DILocation(line: 645, column: 10, scope: !5977)
!5985 = !DILocation(line: 653, column: 2, scope: !5977)
!5986 = !DILocation(line: 654, column: 6, scope: !5987)
!5987 = distinct !DILexicalBlock(scope: !5977, file: !2688, line: 654, column: 6)
!5988 = !DILocation(line: 654, column: 10, scope: !5987)
!5989 = !DILocation(line: 654, column: 6, scope: !5977)
!5990 = !DILocation(line: 655, column: 24, scope: !5991)
!5991 = distinct !DILexicalBlock(scope: !5987, file: !2688, line: 654, column: 18)
!5992 = !DILocation(line: 655, column: 19, scope: !5991)
!5993 = !DILocation(line: 656, column: 3, scope: !5991)
!5994 = !DILocation(line: 659, column: 7, scope: !5977)
!5995 = !DILocation(line: 660, column: 7, scope: !5977)
!5996 = !DILocation(line: 661, column: 7, scope: !5977)
!5997 = !DILocation(line: 662, column: 7, scope: !5977)
!5998 = !DILocation(line: 663, column: 7, scope: !5977)
!5999 = !DILocation(line: 665, column: 2, scope: !5977)
!6000 = !DILocation(line: 666, column: 1, scope: !5977)
!6001 = distinct !DISubprogram(name: "outs", scope: !2688, file: !2688, line: 1319, type: !6002, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !6004)
!6002 = !DISubroutineType(types: !6003)
!6003 = !{!103, !4018, !102, !337, !337}
!6004 = !{!6005, !6006, !6007, !6008, !6009, !6010}
!6005 = !DILocalVariable(name: "out", arg: 1, scope: !6001, file: !2688, line: 1319, type: !4018)
!6006 = !DILocalVariable(name: "ctx", arg: 2, scope: !6001, file: !2688, line: 1320, type: !102)
!6007 = !DILocalVariable(name: "sp", arg: 3, scope: !6001, file: !2688, line: 1321, type: !337)
!6008 = !DILocalVariable(name: "ep", arg: 4, scope: !6001, file: !2688, line: 1322, type: !337)
!6009 = !DILocalVariable(name: "count", scope: !6001, file: !2688, line: 1324, type: !132)
!6010 = !DILocalVariable(name: "rc", scope: !6011, file: !2688, line: 1327, type: !103)
!6011 = distinct !DILexicalBlock(scope: !6001, file: !2688, line: 1326, column: 45)
!6012 = !DILocation(line: 0, scope: !6001)
!6013 = !DILocation(line: 1326, column: 2, scope: !6001)
!6014 = !DILocation(line: 1324, column: 9, scope: !6001)
!6015 = !DILocation(line: 1326, column: 13, scope: !6001)
!6016 = !DILocation(line: 1326, column: 19, scope: !6001)
!6017 = !DILocation(line: 1327, column: 21, scope: !6011)
!6018 = !DILocation(line: 1326, column: 36, scope: !6001)
!6019 = !DILocation(line: 1326, column: 39, scope: !6001)
!6020 = !DILocation(line: 1327, column: 24, scope: !6011)
!6021 = !DILocation(line: 1327, column: 16, scope: !6011)
!6022 = !DILocation(line: 1327, column: 12, scope: !6011)
!6023 = !DILocation(line: 0, scope: !6011)
!6024 = !DILocation(line: 1329, column: 10, scope: !6025)
!6025 = distinct !DILexicalBlock(scope: !6011, file: !2688, line: 1329, column: 7)
!6026 = !DILocation(line: 1329, column: 7, scope: !6011)
!6027 = distinct !{!6027, !6013, !6028}
!6028 = !DILocation(line: 1333, column: 2, scope: !6001)
!6029 = !DILocation(line: 1336, column: 1, scope: !6001)
!6030 = distinct !DISubprogram(name: "encode_uint", scope: !2688, file: !2688, line: 788, type: !6031, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !6033)
!6031 = !DISubroutineType(types: !6032)
!6032 = !{!277, !2710, !5634, !277, !337}
!6033 = !{!6034, !6035, !6036, !6037, !6038, !6039, !6041, !6042}
!6034 = !DILocalVariable(name: "value", arg: 1, scope: !6030, file: !2688, line: 788, type: !2710)
!6035 = !DILocalVariable(name: "conv", arg: 2, scope: !6030, file: !2688, line: 789, type: !5634)
!6036 = !DILocalVariable(name: "bps", arg: 3, scope: !6030, file: !2688, line: 790, type: !277)
!6037 = !DILocalVariable(name: "bpe", arg: 4, scope: !6030, file: !2688, line: 791, type: !337)
!6038 = !DILocalVariable(name: "upcase", scope: !6030, file: !2688, line: 793, type: !131)
!6039 = !DILocalVariable(name: "radix", scope: !6030, file: !2688, line: 794, type: !6040)
!6040 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!6041 = !DILocalVariable(name: "bp", scope: !6030, file: !2688, line: 795, type: !277)
!6042 = !DILocalVariable(name: "lsv", scope: !6043, file: !2688, line: 798, type: !32)
!6043 = distinct !DILexicalBlock(scope: !6030, file: !2688, line: 797, column: 5)
!6044 = !DILocation(line: 0, scope: !6030)
!6045 = !DILocation(line: 793, column: 35, scope: !6030)
!6046 = !DILocation(line: 793, column: 24, scope: !6030)
!6047 = !DILocation(line: 793, column: 16, scope: !6030)
!6048 = !DILocation(line: 794, column: 29, scope: !6030)
!6049 = !DILocation(line: 795, column: 24, scope: !6030)
!6050 = !DILocation(line: 795, column: 17, scope: !6030)
!6051 = !DILocation(line: 797, column: 2, scope: !6030)
!6052 = !DILocation(line: 802, column: 9, scope: !6043)
!6053 = !DILocation(line: 798, column: 22, scope: !6043)
!6054 = !DILocation(line: 0, scope: !6043)
!6055 = !DILocation(line: 800, column: 16, scope: !6043)
!6056 = !DILocation(line: 800, column: 11, scope: !6043)
!6057 = !DILocation(line: 800, column: 4, scope: !6043)
!6058 = !DILocation(line: 800, column: 9, scope: !6043)
!6059 = !DILocation(line: 803, column: 18, scope: !6030)
!6060 = !DILocation(line: 803, column: 24, scope: !6030)
!6061 = !DILocation(line: 803, column: 2, scope: !6043)
!6062 = distinct !{!6062, !6051, !6063}
!6063 = !DILocation(line: 803, column: 37, scope: !6030)
!6064 = !DILocation(line: 808, column: 12, scope: !6065)
!6065 = distinct !DILexicalBlock(scope: !6030, file: !2688, line: 808, column: 6)
!6066 = !DILocation(line: 808, column: 6, scope: !6030)
!6067 = !DILocation(line: 809, column: 7, scope: !6068)
!6068 = distinct !DILexicalBlock(scope: !6065, file: !2688, line: 808, column: 23)
!6069 = !DILocation(line: 813, column: 3, scope: !6070)
!6070 = distinct !DILexicalBlock(scope: !6071, file: !2688, line: 811, column: 27)
!6071 = distinct !DILexicalBlock(scope: !6072, file: !2688, line: 811, column: 14)
!6072 = distinct !DILexicalBlock(scope: !6068, file: !2688, line: 809, column: 7)
!6073 = !DILocation(line: 0, scope: !6072)
!6074 = !DILocation(line: 818, column: 2, scope: !6030)
!6075 = distinct !DISubprogram(name: "store_count", scope: !2688, file: !2688, line: 1280, type: !6076, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !6080)
!6076 = !DISubroutineType(types: !6077)
!6077 = !{null, !6078, !102, !103}
!6078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6079, size: 32)
!6079 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5601)
!6080 = !{!6081, !6082, !6083}
!6081 = !DILocalVariable(name: "conv", arg: 1, scope: !6075, file: !2688, line: 1280, type: !6078)
!6082 = !DILocalVariable(name: "dp", arg: 2, scope: !6075, file: !2688, line: 1281, type: !102)
!6083 = !DILocalVariable(name: "count", arg: 3, scope: !6075, file: !2688, line: 1282, type: !103)
!6084 = !DILocation(line: 0, scope: !6075)
!6085 = !DILocation(line: 1284, column: 38, scope: !6075)
!6086 = !DILocation(line: 1284, column: 2, scope: !6075)
!6087 = !DILocation(line: 1286, column: 4, scope: !6088)
!6088 = distinct !DILexicalBlock(scope: !6075, file: !2688, line: 1284, column: 50)
!6089 = !DILocation(line: 1286, column: 14, scope: !6088)
!6090 = !DILocation(line: 1287, column: 3, scope: !6088)
!6091 = !DILocation(line: 1289, column: 24, scope: !6088)
!6092 = !DILocation(line: 1289, column: 22, scope: !6088)
!6093 = !DILocation(line: 1290, column: 3, scope: !6088)
!6094 = !DILocation(line: 1292, column: 18, scope: !6088)
!6095 = !DILocation(line: 1292, column: 4, scope: !6088)
!6096 = !DILocation(line: 1292, column: 16, scope: !6088)
!6097 = !DILocation(line: 1293, column: 3, scope: !6088)
!6098 = !DILocation(line: 1295, column: 4, scope: !6088)
!6099 = !DILocation(line: 1295, column: 15, scope: !6088)
!6100 = !DILocation(line: 1296, column: 3, scope: !6088)
!6101 = !DILocation(line: 1298, column: 22, scope: !6088)
!6102 = !DILocation(line: 1298, column: 4, scope: !6088)
!6103 = !DILocation(line: 1298, column: 20, scope: !6088)
!6104 = !DILocation(line: 1299, column: 3, scope: !6088)
!6105 = !DILocation(line: 1301, column: 21, scope: !6088)
!6106 = !DILocation(line: 1301, column: 4, scope: !6088)
!6107 = !DILocation(line: 1301, column: 19, scope: !6088)
!6108 = !DILocation(line: 1302, column: 3, scope: !6088)
!6109 = !DILocation(line: 1304, column: 4, scope: !6088)
!6110 = !DILocation(line: 1304, column: 17, scope: !6088)
!6111 = !DILocation(line: 1305, column: 3, scope: !6088)
!6112 = !DILocation(line: 1307, column: 4, scope: !6088)
!6113 = !DILocation(line: 1307, column: 20, scope: !6088)
!6114 = !DILocation(line: 1308, column: 3, scope: !6088)
!6115 = !DILocation(line: 1316, column: 1, scope: !6075)
!6116 = distinct !DISubprogram(name: "isupper", scope: !6117, file: !6117, line: 16, type: !396, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !6118)
!6117 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6118 = !{!6119}
!6119 = !DILocalVariable(name: "a", arg: 1, scope: !6116, file: !6117, line: 16, type: !103)
!6120 = !DILocation(line: 0, scope: !6116)
!6121 = !DILocation(line: 18, column: 29, scope: !6116)
!6122 = !DILocation(line: 18, column: 45, scope: !6116)
!6123 = !DILocation(line: 18, column: 2, scope: !6116)
!6124 = distinct !DISubprogram(name: "conversion_radix", scope: !2688, file: !2688, line: 761, type: !6125, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !6127)
!6125 = !DISubroutineType(types: !6126)
!6126 = !{!132, !278}
!6127 = !{!6128}
!6128 = !DILocalVariable(name: "specifier", arg: 1, scope: !6124, file: !2688, line: 761, type: !278)
!6129 = !DILocation(line: 0, scope: !6124)
!6130 = !DILocation(line: 763, column: 2, scope: !6124)
!6131 = !DILocation(line: 770, column: 3, scope: !6132)
!6132 = distinct !DILexicalBlock(scope: !6124, file: !2688, line: 763, column: 21)
!6133 = !DILocation(line: 774, column: 3, scope: !6132)
!6134 = !DILocation(line: 0, scope: !6132)
!6135 = !DILocation(line: 776, column: 1, scope: !6124)
!6136 = distinct !DISubprogram(name: "extract_flags", scope: !2688, file: !2688, line: 339, type: !5978, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !6137)
!6137 = !{!6138, !6139, !6140}
!6138 = !DILocalVariable(name: "conv", arg: 1, scope: !6136, file: !2688, line: 339, type: !5634)
!6139 = !DILocalVariable(name: "sp", arg: 2, scope: !6136, file: !2688, line: 340, type: !337)
!6140 = !DILocalVariable(name: "loop", scope: !6136, file: !2688, line: 342, type: !131)
!6141 = !DILocation(line: 0, scope: !6136)
!6142 = !DILocation(line: 344, column: 2, scope: !6136)
!6143 = !DILocation(line: 345, column: 11, scope: !6144)
!6144 = distinct !DILexicalBlock(scope: !6136, file: !2688, line: 344, column: 5)
!6145 = !DILocation(line: 345, column: 3, scope: !6144)
!6146 = !DILocation(line: 351, column: 4, scope: !6147)
!6147 = distinct !DILexicalBlock(scope: !6144, file: !2688, line: 345, column: 16)
!6148 = !DILocation(line: 354, column: 4, scope: !6147)
!6149 = !DILocation(line: 357, column: 4, scope: !6147)
!6150 = !DILocation(line: 360, column: 4, scope: !6147)
!6151 = !DILocation(line: 0, scope: !6147)
!6152 = !DILocation(line: 370, column: 12, scope: !6153)
!6153 = distinct !DILexicalBlock(scope: !6136, file: !2688, line: 370, column: 6)
!6154 = !DILocation(line: 370, column: 22, scope: !6153)
!6155 = !DILocation(line: 371, column: 19, scope: !6156)
!6156 = distinct !DILexicalBlock(scope: !6153, file: !2688, line: 370, column: 42)
!6157 = !DILocation(line: 372, column: 2, scope: !6156)
!6158 = !DILocation(line: 376, column: 2, scope: !6136)
!6159 = distinct !DISubprogram(name: "extract_width", scope: !2688, file: !2688, line: 388, type: !5978, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !6160)
!6160 = !{!6161, !6162, !6163, !6164}
!6161 = !DILocalVariable(name: "conv", arg: 1, scope: !6159, file: !2688, line: 388, type: !5634)
!6162 = !DILocalVariable(name: "sp", arg: 2, scope: !6159, file: !2688, line: 389, type: !337)
!6163 = !DILocalVariable(name: "wp", scope: !6159, file: !2688, line: 398, type: !337)
!6164 = !DILocalVariable(name: "width", scope: !6159, file: !2688, line: 399, type: !132)
!6165 = !DILocation(line: 0, scope: !6159)
!6166 = !DILocation(line: 391, column: 8, scope: !6159)
!6167 = !DILocation(line: 391, column: 22, scope: !6159)
!6168 = !DILocation(line: 393, column: 6, scope: !6169)
!6169 = distinct !DILexicalBlock(scope: !6159, file: !2688, line: 393, column: 6)
!6170 = !DILocation(line: 393, column: 10, scope: !6169)
!6171 = !DILocation(line: 393, column: 6, scope: !6159)
!6172 = !DILocation(line: 394, column: 20, scope: !6173)
!6173 = distinct !DILexicalBlock(scope: !6169, file: !2688, line: 393, column: 18)
!6174 = !DILocation(line: 395, column: 10, scope: !6173)
!6175 = !DILocation(line: 395, column: 3, scope: !6173)
!6176 = !DILocation(line: 399, column: 17, scope: !6159)
!6177 = !DILocation(line: 401, column: 6, scope: !6178)
!6178 = distinct !DILexicalBlock(scope: !6159, file: !2688, line: 401, column: 6)
!6179 = !DILocation(line: 401, column: 9, scope: !6178)
!6180 = !DILocation(line: 401, column: 6, scope: !6159)
!6181 = !DILocation(line: 402, column: 23, scope: !6182)
!6182 = distinct !DILexicalBlock(scope: !6178, file: !2688, line: 401, column: 16)
!6183 = !DILocation(line: 403, column: 9, scope: !6182)
!6184 = !DILocation(line: 403, column: 21, scope: !6182)
!6185 = !DILocation(line: 405, column: 11, scope: !6182)
!6186 = !DILocation(line: 404, column: 21, scope: !6182)
!6187 = !DILocation(line: 406, column: 2, scope: !6182)
!6188 = !DILocation(line: 409, column: 1, scope: !6159)
!6189 = distinct !DISubprogram(name: "extract_prec", scope: !2688, file: !2688, line: 420, type: !5978, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !6190)
!6190 = !{!6191, !6192, !6193}
!6191 = !DILocalVariable(name: "conv", arg: 1, scope: !6189, file: !2688, line: 420, type: !5634)
!6192 = !DILocalVariable(name: "sp", arg: 2, scope: !6189, file: !2688, line: 421, type: !337)
!6193 = !DILocalVariable(name: "prec", scope: !6189, file: !2688, line: 435, type: !132)
!6194 = !DILocation(line: 0, scope: !6189)
!6195 = !DILocation(line: 423, column: 24, scope: !6189)
!6196 = !DILocation(line: 423, column: 28, scope: !6189)
!6197 = !DILocation(line: 423, column: 8, scope: !6189)
!6198 = !DILocation(line: 423, column: 21, scope: !6189)
!6199 = !DILocation(line: 425, column: 6, scope: !6189)
!6200 = !DILocation(line: 428, column: 2, scope: !6189)
!6201 = !DILocation(line: 430, column: 6, scope: !6202)
!6202 = distinct !DILexicalBlock(scope: !6189, file: !2688, line: 430, column: 6)
!6203 = !DILocation(line: 430, column: 10, scope: !6202)
!6204 = !DILocation(line: 430, column: 6, scope: !6189)
!6205 = !DILocation(line: 431, column: 19, scope: !6206)
!6206 = distinct !DILexicalBlock(scope: !6202, file: !2688, line: 430, column: 18)
!6207 = !DILocation(line: 432, column: 10, scope: !6206)
!6208 = !DILocation(line: 432, column: 3, scope: !6206)
!6209 = !DILocation(line: 435, column: 16, scope: !6189)
!6210 = !DILocation(line: 437, column: 8, scope: !6189)
!6211 = !DILocation(line: 437, column: 19, scope: !6189)
!6212 = !DILocation(line: 439, column: 10, scope: !6189)
!6213 = !DILocation(line: 438, column: 20, scope: !6189)
!6214 = !DILocation(line: 441, column: 9, scope: !6189)
!6215 = !DILocation(line: 442, column: 1, scope: !6189)
!6216 = distinct !DISubprogram(name: "extract_length", scope: !2688, file: !2688, line: 453, type: !5978, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !6217)
!6217 = !{!6218, !6219}
!6218 = !DILocalVariable(name: "conv", arg: 1, scope: !6216, file: !2688, line: 453, type: !5634)
!6219 = !DILocalVariable(name: "sp", arg: 2, scope: !6216, file: !2688, line: 454, type: !337)
!6220 = !DILocation(line: 0, scope: !6216)
!6221 = !DILocation(line: 456, column: 10, scope: !6216)
!6222 = !DILocation(line: 456, column: 2, scope: !6216)
!6223 = !DILocation(line: 458, column: 8, scope: !6224)
!6224 = distinct !DILexicalBlock(scope: !6225, file: !2688, line: 458, column: 7)
!6225 = distinct !DILexicalBlock(scope: !6216, file: !2688, line: 456, column: 15)
!6226 = !DILocation(line: 458, column: 7, scope: !6224)
!6227 = !DILocation(line: 458, column: 13, scope: !6224)
!6228 = !DILocation(line: 0, scope: !6224)
!6229 = !DILocation(line: 458, column: 7, scope: !6225)
!6230 = !DILocation(line: 459, column: 21, scope: !6231)
!6231 = distinct !DILexicalBlock(scope: !6224, file: !2688, line: 458, column: 21)
!6232 = !DILocation(line: 460, column: 4, scope: !6231)
!6233 = !DILocation(line: 461, column: 3, scope: !6231)
!6234 = !DILocation(line: 462, column: 21, scope: !6235)
!6235 = distinct !DILexicalBlock(scope: !6224, file: !2688, line: 461, column: 10)
!6236 = !DILocation(line: 466, column: 8, scope: !6237)
!6237 = distinct !DILexicalBlock(scope: !6225, file: !2688, line: 466, column: 7)
!6238 = !DILocation(line: 466, column: 7, scope: !6237)
!6239 = !DILocation(line: 466, column: 13, scope: !6237)
!6240 = !DILocation(line: 0, scope: !6237)
!6241 = !DILocation(line: 466, column: 7, scope: !6225)
!6242 = !DILocation(line: 467, column: 21, scope: !6243)
!6243 = distinct !DILexicalBlock(scope: !6237, file: !2688, line: 466, column: 21)
!6244 = !DILocation(line: 468, column: 4, scope: !6243)
!6245 = !DILocation(line: 469, column: 3, scope: !6243)
!6246 = !DILocation(line: 470, column: 21, scope: !6247)
!6247 = distinct !DILexicalBlock(scope: !6237, file: !2688, line: 469, column: 10)
!6248 = !DILocation(line: 474, column: 9, scope: !6225)
!6249 = !DILocation(line: 474, column: 20, scope: !6225)
!6250 = !DILocation(line: 475, column: 3, scope: !6225)
!6251 = !DILocation(line: 476, column: 3, scope: !6225)
!6252 = !DILocation(line: 478, column: 9, scope: !6225)
!6253 = !DILocation(line: 478, column: 20, scope: !6225)
!6254 = !DILocation(line: 479, column: 3, scope: !6225)
!6255 = !DILocation(line: 480, column: 3, scope: !6225)
!6256 = !DILocation(line: 482, column: 9, scope: !6225)
!6257 = !DILocation(line: 482, column: 20, scope: !6225)
!6258 = !DILocation(line: 483, column: 3, scope: !6225)
!6259 = !DILocation(line: 484, column: 3, scope: !6225)
!6260 = !DILocation(line: 486, column: 9, scope: !6225)
!6261 = !DILocation(line: 486, column: 20, scope: !6225)
!6262 = !DILocation(line: 487, column: 3, scope: !6225)
!6263 = !DILocation(line: 492, column: 21, scope: !6225)
!6264 = !DILocation(line: 493, column: 3, scope: !6225)
!6265 = !DILocation(line: 495, column: 9, scope: !6225)
!6266 = !DILocation(line: 495, column: 20, scope: !6225)
!6267 = !DILocation(line: 496, column: 3, scope: !6225)
!6268 = !DILocation(line: 498, column: 2, scope: !6216)
!6269 = distinct !DISubprogram(name: "extract_specifier", scope: !2688, file: !2688, line: 513, type: !5978, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !6270)
!6270 = !{!6271, !6272, !6273, !6274}
!6271 = !DILocalVariable(name: "conv", arg: 1, scope: !6269, file: !2688, line: 513, type: !5634)
!6272 = !DILocalVariable(name: "sp", arg: 2, scope: !6269, file: !2688, line: 514, type: !337)
!6273 = !DILocalVariable(name: "unsupported", scope: !6269, file: !2688, line: 516, type: !131)
!6274 = !DILabel(scope: !6275, name: "int_conv", file: !2688, line: 526)
!6275 = distinct !DILexicalBlock(scope: !6269, file: !2688, line: 520, column: 27)
!6276 = !DILocation(line: 0, scope: !6269)
!6277 = !DILocation(line: 518, column: 20, scope: !6269)
!6278 = !DILocation(line: 518, column: 8, scope: !6269)
!6279 = !DILocation(line: 518, column: 18, scope: !6269)
!6280 = !DILocation(line: 520, column: 2, scope: !6269)
!6281 = !DILocation(line: 525, column: 3, scope: !6275)
!6282 = !DILocation(line: 0, scope: !6275)
!6283 = !DILocation(line: 526, column: 1, scope: !6275)
!6284 = !DILocation(line: 528, column: 24, scope: !6285)
!6285 = distinct !DILexicalBlock(scope: !6275, file: !2688, line: 528, column: 7)
!6286 = !DILocation(line: 528, column: 7, scope: !6275)
!6287 = !DILocation(line: 535, column: 23, scope: !6288)
!6288 = distinct !DILexicalBlock(scope: !6275, file: !2688, line: 535, column: 7)
!6289 = !DILocation(line: 535, column: 7, scope: !6275)
!6290 = !DILocation(line: 536, column: 36, scope: !6291)
!6291 = distinct !DILexicalBlock(scope: !6288, file: !2688, line: 535, column: 31)
!6292 = !DILocation(line: 537, column: 3, scope: !6291)
!6293 = !DILocation(line: 570, column: 9, scope: !6275)
!6294 = !DILocation(line: 570, column: 23, scope: !6275)
!6295 = !DILocation(line: 575, column: 4, scope: !6296)
!6296 = distinct !DILexicalBlock(scope: !6297, file: !2688, line: 573, column: 48)
!6297 = distinct !DILexicalBlock(scope: !6275, file: !2688, line: 573, column: 7)
!6298 = !DILocation(line: 603, column: 9, scope: !6275)
!6299 = !DILocation(line: 603, column: 23, scope: !6275)
!6300 = !DILocation(line: 605, column: 24, scope: !6301)
!6301 = distinct !DILexicalBlock(scope: !6275, file: !2688, line: 605, column: 7)
!6302 = !DILocation(line: 605, column: 7, scope: !6275)
!6303 = !DILocation(line: 612, column: 9, scope: !6275)
!6304 = !DILocation(line: 612, column: 23, scope: !6275)
!6305 = !DILocation(line: 619, column: 24, scope: !6306)
!6306 = distinct !DILexicalBlock(scope: !6275, file: !2688, line: 619, column: 7)
!6307 = !DILocation(line: 619, column: 7, scope: !6275)
!6308 = !DILocation(line: 625, column: 9, scope: !6275)
!6309 = !DILocation(line: 625, column: 17, scope: !6275)
!6310 = !DILocation(line: 626, column: 3, scope: !6275)
!6311 = !DILocation(line: 629, column: 20, scope: !6269)
!6312 = !DILocation(line: 629, column: 8, scope: !6269)
!6313 = !DILocation(line: 518, column: 23, scope: !6269)
!6314 = !DILocation(line: 631, column: 2, scope: !6269)
!6315 = distinct !DISubprogram(name: "extract_decimal", scope: !2688, file: !2688, line: 318, type: !6316, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !6318)
!6316 = !DISubroutineType(types: !6317)
!6317 = !{!132, !373}
!6318 = !{!6319, !6320, !6321}
!6319 = !DILocalVariable(name: "str", arg: 1, scope: !6315, file: !2688, line: 318, type: !373)
!6320 = !DILocalVariable(name: "sp", scope: !6315, file: !2688, line: 320, type: !337)
!6321 = !DILocalVariable(name: "val", scope: !6315, file: !2688, line: 321, type: !132)
!6322 = !DILocation(line: 0, scope: !6315)
!6323 = !DILocation(line: 320, column: 19, scope: !6315)
!6324 = !DILocation(line: 323, column: 37, scope: !6315)
!6325 = !DILocation(line: 323, column: 17, scope: !6315)
!6326 = !DILocation(line: 323, column: 9, scope: !6315)
!6327 = !DILocation(line: 323, column: 2, scope: !6315)
!6328 = !DILocation(line: 324, column: 13, scope: !6329)
!6329 = distinct !DILexicalBlock(scope: !6315, file: !2688, line: 323, column: 43)
!6330 = !DILocation(line: 324, column: 24, scope: !6329)
!6331 = !DILocation(line: 324, column: 19, scope: !6329)
!6332 = !DILocation(line: 324, column: 27, scope: !6329)
!6333 = distinct !{!6333, !6327, !6334}
!6334 = !DILocation(line: 325, column: 2, scope: !6315)
!6335 = !DILocation(line: 326, column: 7, scope: !6315)
!6336 = !DILocation(line: 327, column: 2, scope: !6315)
!6337 = distinct !DISubprogram(name: "isdigit", scope: !6117, file: !6117, line: 43, type: !396, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !6338)
!6338 = !{!6339}
!6339 = !DILocalVariable(name: "a", arg: 1, scope: !6337, file: !6117, line: 43, type: !103)
!6340 = !DILocation(line: 0, scope: !6337)
!6341 = !DILocation(line: 45, column: 29, scope: !6337)
!6342 = !DILocation(line: 45, column: 45, scope: !6337)
!6343 = !DILocation(line: 45, column: 2, scope: !6337)
!6344 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !6345, file: !6345, line: 9, type: !334, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2718, retainedNodes: !251)
!6345 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!6346 = !DILocation(line: 11, column: 1, scope: !6344)
!6347 = !{i64 2147565152, i64 2147565195, i64 2147565235}
!6348 = !DILocation(line: 12, column: 1, scope: !6344)
!6349 = !{i64 2147569414, i64 2147569457, i64 2147569497}
!6350 = !DILocation(line: 13, column: 1, scope: !6344)
!6351 = !{i64 2147569595, i64 2147569638, i64 2147569678}
!6352 = !DILocation(line: 14, column: 1, scope: !6344)
!6353 = !{i64 2147569761, i64 2147569804, i64 2147569844}
!6354 = !DILocation(line: 15, column: 1, scope: !6344)
!6355 = !{i64 2147569970, i64 2147570013, i64 2147570053}
!6356 = !DILocation(line: 16, column: 1, scope: !6344)
!6357 = !{i64 2147570139, i64 2147570182, i64 2147570222}
!6358 = !DILocation(line: 17, column: 1, scope: !6344)
!6359 = !{i64 2147570302, i64 2147570345, i64 2147570385}
!6360 = !DILocation(line: 18, column: 1, scope: !6344)
!6361 = !{i64 2147570486, i64 2147570529, i64 2147570569}
!6362 = !DILocation(line: 19, column: 1, scope: !6344)
!6363 = !{i64 2147570665, i64 2147570708, i64 2147570748}
!6364 = !DILocation(line: 20, column: 1, scope: !6344)
!6365 = !{i64 2147570908, i64 2147570951, i64 2147570991}
!6366 = !DILocation(line: 21, column: 1, scope: !6344)
!6367 = !{i64 2147571143, i64 2147571186, i64 2147571226}
!6368 = !DILocation(line: 22, column: 1, scope: !6344)
!6369 = !{i64 2147571330, i64 2147571373, i64 2147571413}
!6370 = !DILocation(line: 23, column: 1, scope: !6344)
!6371 = !{i64 2147571546, i64 2147571589, i64 2147571629}
!6372 = !DILocation(line: 24, column: 1, scope: !6344)
!6373 = !{i64 2147571749, i64 2147571792, i64 2147571832}
!6374 = !DILocation(line: 25, column: 1, scope: !6344)
!6375 = !{i64 2147571952, i64 2147571995, i64 2147572035}
!6376 = !DILocation(line: 26, column: 1, scope: !6344)
!6377 = !{i64 2147572127, i64 2147572170, i64 2147572210}
!6378 = !DILocation(line: 27, column: 1, scope: !6344)
!6379 = !{i64 2147572338, i64 2147572381, i64 2147572421}
!6380 = !DILocation(line: 28, column: 1, scope: !6344)
!6381 = !{i64 2147572542, i64 2147572585, i64 2147572625}
!6382 = !DILocation(line: 29, column: 1, scope: !6344)
!6383 = !{i64 2147572735, i64 2147572778, i64 2147572818}
!6384 = !DILocation(line: 30, column: 1, scope: !6344)
!6385 = !{i64 2147572937, i64 2147572980, i64 2147573020}
!6386 = !DILocation(line: 31, column: 1, scope: !6344)
!6387 = !{i64 2147573136, i64 2147573179, i64 2147573219}
!6388 = !DILocation(line: 32, column: 1, scope: !6344)
!6389 = !{i64 2147573363, i64 2147573406, i64 2147573446}
!6390 = !DILocation(line: 33, column: 1, scope: !6344)
!6391 = !{i64 2147573565, i64 2147573608, i64 2147573648}
!6392 = !DILocation(line: 34, column: 1, scope: !6344)
!6393 = !{i64 2147573780, i64 2147573823, i64 2147573863}
!6394 = !DILocation(line: 35, column: 1, scope: !6344)
!6395 = !{i64 2147573952, i64 2147573995, i64 2147574035}
!6396 = !DILocation(line: 36, column: 1, scope: !6344)
!6397 = !{i64 2147574154, i64 2147574197, i64 2147574237}
!6398 = !DILocation(line: 37, column: 1, scope: !6344)
!6399 = !{i64 2147574380, i64 2147574423, i64 2147574463}
!6400 = !DILocation(line: 38, column: 1, scope: !6344)
!6401 = !{i64 2147574579, i64 2147574622, i64 2147574662}
!6402 = !DILocation(line: 39, column: 1, scope: !6344)
!6403 = !{i64 2147574754, i64 2147574797, i64 2147574837}
!6404 = !DILocation(line: 40, column: 1, scope: !6344)
!6405 = !{i64 2147575022, i64 2147575065, i64 2147575105}
!6406 = !DILocation(line: 41, column: 1, scope: !6344)
!6407 = !{i64 2147575275, i64 2147575318, i64 2147575358}
!6408 = !DILocation(line: 42, column: 1, scope: !6344)
!6409 = !{i64 2147575516, i64 2147575559, i64 2147575599}
!6410 = !DILocation(line: 43, column: 1, scope: !6344)
!6411 = !{i64 2147575751, i64 2147575794, i64 2147575834}
!6412 = !DILocation(line: 44, column: 1, scope: !6344)
!6413 = !{i64 2147575983, i64 2147576026, i64 2147576066}
!6414 = !DILocation(line: 45, column: 1, scope: !6344)
!6415 = !{i64 2147576209, i64 2147576252, i64 2147576292}
!6416 = !DILocation(line: 46, column: 1, scope: !6344)
!6417 = !{i64 2147576447, i64 2147576490, i64 2147576530}
!6418 = !DILocation(line: 47, column: 1, scope: !6344)
!6419 = !{i64 2147576673, i64 2147576716, i64 2147576756}
!6420 = !DILocation(line: 48, column: 1, scope: !6344)
!6421 = !{i64 2147576908, i64 2147576951, i64 2147576991}
!6422 = !DILocation(line: 49, column: 1, scope: !6344)
!6423 = !{i64 2147577143, i64 2147577186, i64 2147577226}
!6424 = !DILocation(line: 50, column: 1, scope: !6344)
!6425 = !{i64 2147577381, i64 2147577424, i64 2147577464}
!6426 = !DILocation(line: 51, column: 1, scope: !6344)
!6427 = !{i64 2147577655, i64 2147577698, i64 2147577738}
!6428 = !DILocation(line: 52, column: 1, scope: !6344)
!6429 = !{i64 2147577893, i64 2147577936, i64 2147577976}
!6430 = !DILocation(line: 53, column: 1, scope: !6344)
!6431 = !{i64 2147582207, i64 2147582250, i64 2147582290}
!6432 = !DILocation(line: 54, column: 1, scope: !6344)
!6433 = !{i64 2147582451, i64 2147582494, i64 2147582534}
!6434 = !DILocation(line: 55, column: 1, scope: !6344)
!6435 = !{i64 2147582701, i64 2147582744, i64 2147582784}
!6436 = !DILocation(line: 56, column: 1, scope: !6344)
!6437 = !{i64 2147582942, i64 2147582985, i64 2147583025}
!6438 = !DILocation(line: 57, column: 1, scope: !6344)
!6439 = !{i64 2147583189, i64 2147583232, i64 2147583272}
!6440 = !DILocation(line: 58, column: 1, scope: !6344)
!6441 = !{i64 2147583424, i64 2147583467, i64 2147583507}
!6442 = !DILocation(line: 59, column: 1, scope: !6344)
!6443 = !{i64 2147583659, i64 2147583702, i64 2147583742}
!6444 = !DILocation(line: 60, column: 1, scope: !6344)
!6445 = !{i64 2147583894, i64 2147583937, i64 2147583977}
!6446 = !DILocation(line: 61, column: 1, scope: !6344)
!6447 = !{i64 2147584132, i64 2147584175, i64 2147584215}
!6448 = !DILocation(line: 62, column: 1, scope: !6344)
!6449 = !{i64 2147584373, i64 2147584416, i64 2147584456}
!6450 = !DILocation(line: 63, column: 1, scope: !6344)
!6451 = !{i64 2147584653, i64 2147584696, i64 2147584736}
!6452 = !DILocation(line: 64, column: 1, scope: !6344)
!6453 = !{i64 2147584912, i64 2147584955, i64 2147584995}
!6454 = !DILocation(line: 65, column: 1, scope: !6344)
!6455 = !{i64 2147585150, i64 2147585193, i64 2147585233}
!6456 = !DILocation(line: 66, column: 1, scope: !6344)
!6457 = !{i64 2147585409, i64 2147585452, i64 2147585492}
!6458 = !DILocation(line: 67, column: 1, scope: !6344)
!6459 = !{i64 2147585638, i64 2147585681, i64 2147585721}
!6460 = !DILocation(line: 68, column: 1, scope: !6344)
!6461 = !{i64 2147585846, i64 2147585889, i64 2147585929}
!6462 = !DILocation(line: 69, column: 1, scope: !6344)
!6463 = !{i64 2147586057, i64 2147586100, i64 2147586140}
!6464 = !DILocation(line: 70, column: 1, scope: !6344)
!6465 = !{i64 2147586292, i64 2147586335, i64 2147586375}
!6466 = !DILocation(line: 71, column: 1, scope: !6344)
!6467 = !{i64 2147586521, i64 2147586564, i64 2147586604}
!6468 = !DILocation(line: 72, column: 1, scope: !6344)
!6469 = !{i64 2147586738, i64 2147586781, i64 2147586821}
!6470 = !DILocation(line: 73, column: 1, scope: !6344)
!6471 = !{i64 2147586967, i64 2147587010, i64 2147587050}
!6472 = !DILocation(line: 74, column: 1, scope: !6344)
!6473 = !{i64 2147587205, i64 2147587248, i64 2147587288}
!6474 = !DILocation(line: 75, column: 1, scope: !6344)
!6475 = !{i64 2147587437, i64 2147587480, i64 2147587520}
!6476 = !DILocation(line: 76, column: 1, scope: !6344)
!6477 = !{i64 2147587663, i64 2147587706, i64 2147587746}
!6478 = !DILocation(line: 77, column: 1, scope: !6344)
!6479 = !{i64 2147587880, i64 2147587923, i64 2147587963}
!6480 = !DILocation(line: 78, column: 1, scope: !6344)
!6481 = !{i64 2147588112, i64 2147588155, i64 2147588195}
!6482 = !DILocation(line: 79, column: 1, scope: !6344)
!6483 = !{i64 2147588338, i64 2147588381, i64 2147588421}
!6484 = !DILocation(line: 80, column: 1, scope: !6344)
!6485 = !{i64 2147588552, i64 2147588595, i64 2147588635}
!6486 = !DILocation(line: 81, column: 1, scope: !6344)
!6487 = !{i64 2147588772, i64 2147588815, i64 2147588855}
!6488 = !DILocation(line: 82, column: 1, scope: !6344)
!6489 = !{i64 2147589004, i64 2147589047, i64 2147589087}
!6490 = !DILocation(line: 83, column: 1, scope: !6344)
!6491 = !{i64 2147589212, i64 2147589255, i64 2147589295}
!6492 = !DILocation(line: 84, column: 1, scope: !6344)
!6493 = !{i64 2147589417, i64 2147589460, i64 2147589500}
!6494 = !DILocation(line: 85, column: 1, scope: !6344)
!6495 = !{i64 2147589634, i64 2147589677, i64 2147589717}
!6496 = !DILocation(line: 86, column: 1, scope: !6344)
!6497 = !{i64 2147589848, i64 2147589891, i64 2147589931}
!6498 = !DILocation(line: 87, column: 1, scope: !6344)
!6499 = !{i64 2147590074, i64 2147590117, i64 2147590157}
!6500 = !DILocation(line: 88, column: 1, scope: !6344)
!6501 = !{i64 2147594355, i64 2147594398, i64 2147594438}
!6502 = !DILocation(line: 89, column: 1, scope: !6344)
!6503 = !{i64 2147594560, i64 2147594603, i64 2147594643}
!6504 = !DILocation(line: 90, column: 1, scope: !6344)
!6505 = !{i64 2147594792, i64 2147594835, i64 2147594875}
!6506 = !DILocation(line: 91, column: 1, scope: !6344)
!6507 = !{i64 2147595027, i64 2147595070, i64 2147595110}
!6508 = !DILocation(line: 92, column: 1, scope: !6344)
!6509 = !{i64 2147595277, i64 2147595320, i64 2147595360}
!6510 = !DILocation(line: 93, column: 1, scope: !6344)
!6511 = !{i64 2147595527, i64 2147595570, i64 2147595610}
!6512 = !DILocation(line: 94, column: 1, scope: !6344)
!6513 = !{i64 2147595765, i64 2147595808, i64 2147595848}
!6514 = !DILocation(line: 95, column: 1, scope: !6344)
!6515 = !{i64 2147595976, i64 2147596019, i64 2147596059}
!6516 = !DILocation(line: 96, column: 1, scope: !6344)
!6517 = !{i64 2147596193, i64 2147596236, i64 2147596276}
!6518 = !DILocation(line: 97, column: 1, scope: !6344)
!6519 = !{i64 2147596389, i64 2147596432, i64 2147596472}
!6520 = !DILocation(line: 98, column: 1, scope: !6344)
!6521 = !{i64 2147596591, i64 2147596634, i64 2147596674}
!6522 = !DILocation(line: 99, column: 1, scope: !6344)
!6523 = !{i64 2147596784, i64 2147596827, i64 2147596867}
!6524 = !DILocation(line: 100, column: 1, scope: !6344)
!6525 = !{i64 2147596992, i64 2147597035, i64 2147597075}
!6526 = !DILocation(line: 101, column: 1, scope: !6344)
!6527 = !{i64 2147597188, i64 2147597231, i64 2147597271}
!6528 = !DILocation(line: 102, column: 1, scope: !6344)
!6529 = !{i64 2147597438, i64 2147597481, i64 2147597521}
!6530 = !DILocation(line: 103, column: 1, scope: !6344)
!6531 = !{i64 2147597649, i64 2147597692, i64 2147597732}
!6532 = !DILocation(line: 104, column: 1, scope: !6344)
!6533 = !{i64 2147597848, i64 2147597891, i64 2147597931}
!6534 = !DILocation(line: 105, column: 1, scope: !6344)
!6535 = !{i64 2147598023, i64 2147598066, i64 2147598106}
!6536 = !DILocation(line: 106, column: 1, scope: !6344)
!6537 = !{i64 2147598207, i64 2147598250, i64 2147598290}
!6538 = !DILocation(line: 107, column: 1, scope: !6344)
!6539 = !{i64 2147598409, i64 2147598452, i64 2147598492}
!6540 = !DILocation(line: 108, column: 1, scope: !6344)
!6541 = !{i64 2147598590, i64 2147598633, i64 2147598673}
!6542 = !DILocation(line: 109, column: 1, scope: !6344)
!6543 = !{i64 2147598789, i64 2147598832, i64 2147598872}
!6544 = !DILocation(line: 110, column: 1, scope: !6344)
!6545 = !{i64 2147598994, i64 2147599037, i64 2147599077}
!6546 = !DILocation(line: 111, column: 1, scope: !6344)
!6547 = !{i64 2147599187, i64 2147599230, i64 2147599270}
!6548 = !DILocation(line: 112, column: 1, scope: !6344)
!6549 = !{i64 2147599353, i64 2147599396, i64 2147599436}
!6550 = !DILocation(line: 113, column: 1, scope: !6344)
!6551 = !{i64 2147599537, i64 2147599580, i64 2147599620}
!6552 = !DILocation(line: 114, column: 1, scope: !6344)
!6553 = !{i64 2147599727, i64 2147599770, i64 2147599810}
!6554 = !DILocation(line: 115, column: 1, scope: !6344)
!6555 = !{i64 2147599911, i64 2147599954, i64 2147599994}
!6556 = !DILocation(line: 116, column: 1, scope: !6344)
!6557 = !{i64 2147600125, i64 2147600168, i64 2147600208}
!6558 = !DILocation(line: 117, column: 1, scope: !6344)
!6559 = !{i64 2147600336, i64 2147600379, i64 2147600419}
!6560 = !DILocation(line: 118, column: 1, scope: !6344)
!6561 = !{i64 2147600559, i64 2147600602, i64 2147600642}
!6562 = !DILocation(line: 119, column: 1, scope: !6344)
!6563 = !{i64 2147600743, i64 2147600786, i64 2147600826}
!6564 = !DILocation(line: 120, column: 1, scope: !6344)
!6565 = !{i64 2147600957, i64 2147601000, i64 2147601040}
!6566 = !DILocation(line: 121, column: 1, scope: !6344)
!6567 = !{i64 2147601123, i64 2147601166, i64 2147601206}
!6568 = !DILocation(line: 122, column: 1, scope: !6344)
!6569 = !{i64 2147601304, i64 2147601347, i64 2147601387}
!6570 = !DILocation(line: 123, column: 1, scope: !6344)
!6571 = !{i64 2147601497, i64 2147601540, i64 2147601580}
!6572 = !DILocation(line: 124, column: 1, scope: !6344)
!6573 = !{i64 2147601723, i64 2147601766, i64 2147601806}
!6574 = !DILocation(line: 125, column: 1, scope: !6344)
!6575 = !{i64 2147601937, i64 2147601980, i64 2147602020}
!6576 = !DILocation(line: 126, column: 1, scope: !6344)
!6577 = !{i64 2147602163, i64 2147602206, i64 2147602246}
!6578 = !DILocation(line: 127, column: 1, scope: !6344)
!6579 = !{i64 2147602380, i64 2147602423, i64 2147602463}
!6580 = !DILocation(line: 128, column: 1, scope: !6344)
!6581 = !{i64 2147602657, i64 2147602700, i64 2147602740}
!6582 = !DILocation(line: 129, column: 1, scope: !6344)
!6583 = !{i64 2147602883, i64 2147602926, i64 2147602966}
!6584 = !DILocation(line: 130, column: 1, scope: !6344)
!6585 = !{i64 2147603091, i64 2147603134, i64 2147603174}
!6586 = !DILocation(line: 131, column: 1, scope: !6344)
!6587 = !{i64 2147603287, i64 2147603330, i64 2147603370}
!6588 = !DILocation(line: 132, column: 1, scope: !6344)
!6589 = !{i64 2147607613, i64 2147607656, i64 2147607696}
!6590 = !DILocation(line: 133, column: 1, scope: !6344)
!6591 = !{i64 2147607827, i64 2147607870, i64 2147607910}
!6592 = !DILocation(line: 134, column: 1, scope: !6344)
!6593 = !{i64 2147608002, i64 2147608045, i64 2147608085}
!6594 = !DILocation(line: 135, column: 1, scope: !6344)
!6595 = !{i64 2147608256, i64 2147608299, i64 2147608339}
!6596 = !DILocation(line: 136, column: 1, scope: !6344)
!6597 = !{i64 2147608455, i64 2147608498, i64 2147608538}
!6598 = !DILocation(line: 137, column: 1, scope: !6344)
!6599 = !{i64 2147608697, i64 2147608740, i64 2147608780}
!6600 = !DILocation(line: 138, column: 1, scope: !6344)
!6601 = !{i64 2147608860, i64 2147608903, i64 2147608943}
!6602 = !DILocation(line: 139, column: 1, scope: !6344)
!6603 = !{i64 2147609047, i64 2147609090, i64 2147609130}
!6604 = !DILocation(line: 140, column: 1, scope: !6344)
!6605 = !{i64 2147609255, i64 2147609298, i64 2147609338}
!6606 = !DILocation(line: 141, column: 1, scope: !6344)
!6607 = !{i64 2147609451, i64 2147609494, i64 2147609534}
!6608 = !DILocation(line: 142, column: 1, scope: !6344)
!6609 = !{i64 2147609644, i64 2147609687, i64 2147609727}
!6610 = !DILocation(line: 143, column: 1, scope: !6344)
!6611 = !{i64 2147609827, i64 2147609870, i64 2147609910}
!6612 = !DILocation(line: 144, column: 1, scope: !6344)
!6613 = !{i64 2147610041, i64 2147610084, i64 2147610124}
!6614 = !DILocation(line: 145, column: 1, scope: !6344)
!6615 = !{i64 2147610252, i64 2147610295, i64 2147610335}
!6616 = !DILocation(line: 146, column: 1, scope: !6344)
!6617 = !{i64 2147610472, i64 2147610515, i64 2147610555}
!6618 = !DILocation(line: 147, column: 1, scope: !6344)
!6619 = !{i64 2147610679, i64 2147610722, i64 2147610762}
!6620 = !DILocation(line: 148, column: 1, scope: !6344)
!6621 = !{i64 2147610952, i64 2147610995, i64 2147611035}
!6622 = !DILocation(line: 149, column: 1, scope: !6344)
!6623 = !{i64 2147611200, i64 2147611243, i64 2147611283}
!6624 = !DILocation(line: 150, column: 1, scope: !6344)
!6625 = !{i64 2147611399, i64 2147611442, i64 2147611482}
!6626 = !DILocation(line: 151, column: 1, scope: !6344)
!6627 = !{i64 2147611634, i64 2147611677, i64 2147611717}
!6628 = !DILocation(line: 152, column: 1, scope: !6344)
!6629 = !{i64 2147611884, i64 2147611927, i64 2147611967}
!6630 = !DILocation(line: 153, column: 1, scope: !6344)
!6631 = !{i64 2147612086, i64 2147612129, i64 2147612169}
!6632 = !DILocation(line: 154, column: 1, scope: !6344)
!6633 = !{i64 2147612309, i64 2147612352, i64 2147612392}
!6634 = !DILocation(line: 155, column: 1, scope: !6344)
!6635 = !{i64 2147612523, i64 2147612566, i64 2147612606}
!6636 = !DILocation(line: 156, column: 1, scope: !6344)
!6637 = !{i64 2147612767, i64 2147612810, i64 2147612850}
!6638 = !DILocation(line: 157, column: 1, scope: !6344)
!6639 = !{i64 2147612996, i64 2147613039, i64 2147613079}
!6640 = !DILocation(line: 158, column: 1, scope: !6344)
!6641 = !{i64 2147613225, i64 2147613268, i64 2147613308}
!6642 = !DILocation(line: 159, column: 1, scope: !6344)
!6643 = !{i64 2147613433, i64 2147613476, i64 2147613516}
!6644 = !DILocation(line: 160, column: 1, scope: !6344)
!6645 = !{i64 2147613671, i64 2147613714, i64 2147613754}
!6646 = !DILocation(line: 161, column: 1, scope: !6344)
!6647 = !{i64 2147613897, i64 2147613940, i64 2147613980}
!6648 = !DILocation(line: 162, column: 1, scope: !6344)
!6649 = !{i64 2147614156, i64 2147614199, i64 2147614239}
!6650 = !DILocation(line: 163, column: 1, scope: !6344)
!6651 = !{i64 2147614376, i64 2147614419, i64 2147614459}
!6652 = !DILocation(line: 164, column: 1, scope: !6344)
!6653 = !{i64 2147614608, i64 2147614651, i64 2147614691}
!6654 = !DILocation(line: 165, column: 1, scope: !6344)
!6655 = !{i64 2147614849, i64 2147614892, i64 2147614932}
!6656 = !DILocation(line: 166, column: 1, scope: !6344)
!6657 = !{i64 2147615090, i64 2147615133, i64 2147615173}
!6658 = !DILocation(line: 167, column: 1, scope: !6344)
!6659 = !{i64 2147615313, i64 2147615356, i64 2147615396}
!6660 = !DILocation(line: 168, column: 1, scope: !6344)
!6661 = !{i64 2147615530, i64 2147615573, i64 2147615613}
!6662 = !DILocation(line: 169, column: 1, scope: !6344)
!6663 = !{i64 2147615771, i64 2147615814, i64 2147615854}
!6664 = !DILocation(line: 170, column: 1, scope: !6344)
!6665 = !{i64 2147615958, i64 2147616001, i64 2147616041}
!6666 = !DILocation(line: 171, column: 1, scope: !6344)
!6667 = !{i64 2147620206, i64 2147620249, i64 2147620289}
!6668 = !DILocation(line: 172, column: 1, scope: !6344)
!6669 = !{i64 2147620369, i64 2147620412, i64 2147620452}
!6670 = !DILocation(line: 173, column: 1, scope: !6344)
!6671 = !{i64 2147620574, i64 2147620617, i64 2147620657}
!6672 = !DILocation(line: 174, column: 1, scope: !6344)
!6673 = !{i64 2147620767, i64 2147620810, i64 2147620850}
!6674 = !DILocation(line: 175, column: 1, scope: !6344)
!6675 = !{i64 2147621026, i64 2147621069, i64 2147621109}
!6676 = !DILocation(line: 176, column: 1, scope: !6344)
!6677 = !{i64 2147621249, i64 2147621292, i64 2147621332}
!6678 = !DILocation(line: 177, column: 1, scope: !6344)
!6679 = !{i64 2147621478, i64 2147621521, i64 2147621561}
!6680 = !DILocation(line: 178, column: 1, scope: !6344)
!6681 = !{i64 2147621692, i64 2147621735, i64 2147621775}
!6682 = !DILocation(line: 179, column: 1, scope: !6344)
!6683 = !{i64 2147621894, i64 2147621937, i64 2147621977}
!6684 = !DILocation(line: 180, column: 1, scope: !6344)
!6685 = !{i64 2147622090, i64 2147622133, i64 2147622173}
!6686 = !DILocation(line: 181, column: 1, scope: !6344)
!6687 = !{i64 2147622302, i64 2147622345, i64 2147622385}
!6688 = !DILocation(line: 182, column: 1, scope: !6344)
!6689 = !{i64 2147622523, i64 2147622566, i64 2147622606}
!6690 = !DILocation(line: 183, column: 1, scope: !6344)
!6691 = !{i64 2147622737, i64 2147622780, i64 2147622820}
!6692 = !DILocation(line: 184, column: 1, scope: !6344)
!6693 = !{i64 2147622927, i64 2147622970, i64 2147623010}
!6694 = !DILocation(line: 185, column: 1, scope: !6344)
!6695 = !{i64 2147623126, i64 2147623169, i64 2147623209}
!6696 = !DILocation(line: 186, column: 1, scope: !6344)
!6697 = !{i64 2147623331, i64 2147623374, i64 2147623414}
!6698 = !DILocation(line: 187, column: 1, scope: !6344)
!6699 = !{i64 2147623551, i64 2147623594, i64 2147623634}
!6700 = !DILocation(line: 188, column: 1, scope: !6344)
!6701 = !{i64 2147623752, i64 2147623795, i64 2147623835}
!6702 = !DILocation(line: 189, column: 1, scope: !6344)
!6703 = !{i64 2147623951, i64 2147623994, i64 2147624034}
!6704 = !DILocation(line: 190, column: 1, scope: !6344)
!6705 = !{i64 2147624156, i64 2147624199, i64 2147624239}
!6706 = !DILocation(line: 191, column: 1, scope: !6344)
!6707 = !{i64 2147624325, i64 2147624368, i64 2147624408}
!6708 = !DILocation(line: 192, column: 1, scope: !6344)
!6709 = !{i64 2147624509, i64 2147624552, i64 2147624592}
!6710 = !DILocation(line: 193, column: 1, scope: !6344)
!6711 = !{i64 2147624693, i64 2147624736, i64 2147624776}
!6712 = !DILocation(line: 194, column: 1, scope: !6344)
!6713 = !{i64 2147624880, i64 2147624923, i64 2147624963}
!6714 = !DILocation(line: 195, column: 1, scope: !6344)
!6715 = !{i64 2147625064, i64 2147625107, i64 2147625147}
!6716 = !DILocation(line: 196, column: 1, scope: !6344)
!6717 = !{i64 2147625302, i64 2147625345, i64 2147625385}
!6718 = !DILocation(line: 197, column: 1, scope: !6344)
!6719 = !{i64 2147625532, i64 2147625575, i64 2147625615}
!6720 = !DILocation(line: 198, column: 1, scope: !6344)
!6721 = !{i64 2147625761, i64 2147625804, i64 2147625844}
!6722 = !DILocation(line: 199, column: 1, scope: !6344)
!6723 = !{i64 2147625948, i64 2147625991, i64 2147626031}
!6724 = !DILocation(line: 200, column: 1, scope: !6344)
!6725 = !{i64 2147626144, i64 2147626187, i64 2147626227}
!6726 = !DILocation(line: 201, column: 1, scope: !6344)
!6727 = !{i64 2147626352, i64 2147626395, i64 2147626435}
!6728 = !DILocation(line: 202, column: 1, scope: !6344)
!6729 = !{i64 2147626564, i64 2147626607, i64 2147626647}
!6730 = !DILocation(line: 203, column: 1, scope: !6344)
!6731 = !{i64 2147626763, i64 2147626806, i64 2147626846}
!6732 = !DILocation(line: 204, column: 1, scope: !6344)
!6733 = !{i64 2147627001, i64 2147627044, i64 2147627084}
!6734 = !DILocation(line: 205, column: 1, scope: !6344)
!6735 = !{i64 2147627197, i64 2147627240, i64 2147627280}
!6736 = !DILocation(line: 206, column: 1, scope: !6344)
!6737 = !{i64 2147627399, i64 2147627442, i64 2147627482}
!6738 = !DILocation(line: 207, column: 1, scope: !6344)
!6739 = !{i64 2147627592, i64 2147627635, i64 2147627675}
!6740 = !DILocation(line: 208, column: 1, scope: !6344)
!6741 = !{i64 2147627826, i64 2147627869, i64 2147627909}
!6742 = !DILocation(line: 209, column: 1, scope: !6344)
!6743 = !{i64 2147627989, i64 2147628032, i64 2147628072}
!6744 = !DILocation(line: 210, column: 1, scope: !6344)
!6745 = !{i64 2147628228, i64 2147628271, i64 2147628311}
!6746 = !DILocation(line: 211, column: 1, scope: !6344)
!6747 = !{i64 2147628467, i64 2147628510, i64 2147628550}
!6748 = !DILocation(line: 212, column: 1, scope: !6344)
!6749 = !{i64 2147628703, i64 2147628746, i64 2147628786}
!6750 = !DILocation(line: 213, column: 1, scope: !6344)
!6751 = !{i64 2147628933, i64 2147628976, i64 2147629016}
!6752 = !DILocation(line: 214, column: 1, scope: !6344)
!6753 = !{i64 2147629120, i64 2147629163, i64 2147629203}
!6754 = !DILocation(line: 215, column: 1, scope: !6344)
!6755 = !{i64 2147629319, i64 2147629362, i64 2147629402}
!6756 = !DILocation(line: 216, column: 1, scope: !6344)
!6757 = !{i64 2147633651, i64 2147633694, i64 2147633734}
!6758 = !DILocation(line: 217, column: 1, scope: !6344)
!6759 = !{i64 2147633826, i64 2147633869, i64 2147633909}
!6760 = !DILocation(line: 218, column: 1, scope: !6344)
!6761 = !{i64 2147634060, i64 2147634103, i64 2147634143}
!6762 = !DILocation(line: 219, column: 1, scope: !6344)
!6763 = !{i64 2147634268, i64 2147634311, i64 2147634351}
!6764 = !DILocation(line: 220, column: 1, scope: !6344)
!6765 = !{i64 2147634486, i64 2147634529, i64 2147634569}
!6766 = !DILocation(line: 221, column: 1, scope: !6344)
!6767 = !{i64 2147634676, i64 2147634719, i64 2147634759}
!6768 = !DILocation(line: 222, column: 1, scope: !6344)
!6769 = !{i64 2147634908, i64 2147634951, i64 2147634991}
!6770 = !DILocation(line: 223, column: 1, scope: !6344)
!6771 = !{i64 2147635128, i64 2147635171, i64 2147635211}
!6772 = !DILocation(line: 224, column: 1, scope: !6344)
!6773 = !{i64 2147635324, i64 2147635367, i64 2147635407}
!6774 = !DILocation(line: 225, column: 1, scope: !6344)
!6775 = !{i64 2147635530, i64 2147635573, i64 2147635613}
!6776 = !DILocation(line: 226, column: 1, scope: !6344)
!6777 = !{i64 2147635735, i64 2147635778, i64 2147635818}
!6778 = !DILocation(line: 227, column: 1, scope: !6344)
!6779 = !{i64 2147635961, i64 2147636004, i64 2147636044}
!6780 = !DILocation(line: 228, column: 1, scope: !6344)
!6781 = !{i64 2147636169, i64 2147636212, i64 2147636252}
!6782 = !DILocation(line: 229, column: 1, scope: !6344)
!6783 = !{i64 2147636365, i64 2147636408, i64 2147636448}
!6784 = !DILocation(line: 230, column: 1, scope: !6344)
!6785 = !{i64 2147636597, i64 2147636640, i64 2147636680}
!6786 = !DILocation(line: 231, column: 1, scope: !6344)
!6787 = !{i64 2147636781, i64 2147636824, i64 2147636864}
!6788 = !DILocation(line: 232, column: 1, scope: !6344)
!6789 = !{i64 2147636990, i64 2147637033, i64 2147637073}
!6790 = !DILocation(line: 233, column: 1, scope: !6344)
!6791 = !{i64 2147637198, i64 2147637241, i64 2147637281}
!6792 = !DILocation(line: 234, column: 1, scope: !6344)
!6793 = !{i64 2147637394, i64 2147637437, i64 2147637477}
!6794 = !DILocation(line: 235, column: 1, scope: !6344)
!6795 = !{i64 2147637578, i64 2147637621, i64 2147637661}
!6796 = !DILocation(line: 236, column: 1, scope: !6344)
!6797 = !{i64 2147637804, i64 2147637847, i64 2147637887}
!6798 = !DILocation(line: 237, column: 1, scope: !6344)
!6799 = !{i64 2147638030, i64 2147638073, i64 2147638113}
!6800 = !DILocation(line: 238, column: 1, scope: !6344)
!6801 = !{i64 2147638256, i64 2147638299, i64 2147638339}
!6802 = !DILocation(line: 239, column: 1, scope: !6344)
!6803 = !{i64 2147638482, i64 2147638525, i64 2147638565}
!6804 = !DILocation(line: 240, column: 1, scope: !6344)
!6805 = !{i64 2147638708, i64 2147638751, i64 2147638791}
!6806 = !DILocation(line: 241, column: 1, scope: !6344)
!6807 = !{i64 2147638940, i64 2147638983, i64 2147639023}
!6808 = !DILocation(line: 242, column: 1, scope: !6344)
!6809 = !{i64 2147639178, i64 2147639221, i64 2147639261}
!6810 = !DILocation(line: 243, column: 1, scope: !6344)
!6811 = !{i64 2147639398, i64 2147639441, i64 2147639481}
!6812 = !DILocation(line: 244, column: 1, scope: !6344)
!6813 = !{i64 2147639642, i64 2147639685, i64 2147639725}
!6814 = !DILocation(line: 245, column: 1, scope: !6344)
!6815 = !{i64 2147639883, i64 2147639926, i64 2147639966}
!6816 = !DILocation(line: 246, column: 1, scope: !6344)
!6817 = !{i64 2147640118, i64 2147640161, i64 2147640201}
!6818 = !DILocation(line: 247, column: 1, scope: !6344)
!6819 = !{i64 2147640350, i64 2147640393, i64 2147640433}
!6820 = !DILocation(line: 248, column: 1, scope: !6344)
!6821 = !{i64 2147640552, i64 2147640595, i64 2147640635}
!6822 = !DILocation(line: 249, column: 1, scope: !6344)
!6823 = !{i64 2147640802, i64 2147640845, i64 2147640885}
!6824 = !DILocation(line: 250, column: 1, scope: !6344)
!6825 = !{i64 2147641040, i64 2147641083, i64 2147641123}
!6826 = !DILocation(line: 251, column: 1, scope: !6344)
!6827 = !{i64 2147641248, i64 2147641291, i64 2147641331}
!6828 = !DILocation(line: 252, column: 1, scope: !6344)
!6829 = !{i64 2147641444, i64 2147641487, i64 2147641527}
!6830 = !DILocation(line: 253, column: 1, scope: !6344)
!6831 = !{i64 2147641628, i64 2147641671, i64 2147641711}
!6832 = !DILocation(line: 254, column: 1, scope: !6344)
!6833 = !{i64 2147641845, i64 2147641888, i64 2147641928}
!6834 = !DILocation(line: 255, column: 1, scope: !6344)
!6835 = !{i64 2147642050, i64 2147642093, i64 2147642133}
!6836 = !DILocation(line: 256, column: 1, scope: !6344)
!6837 = !{i64 2147646346, i64 2147646389, i64 2147646429}
!6838 = !DILocation(line: 257, column: 1, scope: !6344)
!6839 = !{i64 2147646569, i64 2147646612, i64 2147646652}
!6840 = !DILocation(line: 258, column: 1, scope: !6344)
!6841 = !{i64 2147646793, i64 2147646836, i64 2147646876}
!6842 = !DILocation(line: 259, column: 1, scope: !6344)
!6843 = !{i64 2147647031, i64 2147647074, i64 2147647114}
!6844 = !DILocation(line: 260, column: 1, scope: !6344)
!6845 = !{i64 2147647269, i64 2147647312, i64 2147647352}
!6846 = !DILocation(line: 261, column: 1, scope: !6344)
!6847 = !{i64 2147647486, i64 2147647529, i64 2147647569}
!6848 = !DILocation(line: 262, column: 1, scope: !6344)
!6849 = !{i64 2147647691, i64 2147647734, i64 2147647774}
!6850 = !DILocation(line: 263, column: 1, scope: !6344)
!6851 = !{i64 2147647884, i64 2147647927, i64 2147647967}
!6852 = !DILocation(line: 264, column: 1, scope: !6344)
!6853 = !{i64 2147648137, i64 2147648180, i64 2147648220}
!6854 = !DILocation(line: 265, column: 1, scope: !6344)
!6855 = !{i64 2147648345, i64 2147648388, i64 2147648428}
!6856 = !DILocation(line: 266, column: 1, scope: !6344)
!6857 = !{i64 2147648541, i64 2147648584, i64 2147648624}
!6858 = !DILocation(line: 267, column: 1, scope: !6344)
!6859 = !{i64 2147648755, i64 2147648798, i64 2147648838}
!6860 = !DILocation(line: 268, column: 1, scope: !6344)
!6861 = !{i64 2147648963, i64 2147649006, i64 2147649046}
!6862 = !DILocation(line: 269, column: 1, scope: !6344)
!6863 = !{i64 2147649153, i64 2147649196, i64 2147649236}
!6864 = !DILocation(line: 270, column: 1, scope: !6344)
!6865 = !{i64 2147649367, i64 2147649410, i64 2147649450}
!6866 = !DILocation(line: 271, column: 1, scope: !6344)
!6867 = !{i64 2147649629, i64 2147649672, i64 2147649712}
!6868 = !DILocation(line: 272, column: 1, scope: !6344)
!6869 = !{i64 2147649840, i64 2147649883, i64 2147649923}
!6870 = !DILocation(line: 273, column: 1, scope: !6344)
!6871 = !{i64 2147650084, i64 2147650127, i64 2147650167}
!6872 = !DILocation(line: 274, column: 1, scope: !6344)
!6873 = !{i64 2147650295, i64 2147650338, i64 2147650378}
!6874 = !DILocation(line: 275, column: 1, scope: !6344)
!6875 = !{i64 2147650524, i64 2147650567, i64 2147650607}
!6876 = !DILocation(line: 276, column: 1, scope: !6344)
!6877 = !{i64 2147650789, i64 2147650832, i64 2147650872}
!6878 = !DILocation(line: 277, column: 1, scope: !6344)
!6879 = !{i64 2147650994, i64 2147651037, i64 2147651077}
!6880 = !DILocation(line: 278, column: 1, scope: !6344)
!6881 = !{i64 2147651190, i64 2147651233, i64 2147651273}
!6882 = !DILocation(line: 279, column: 1, scope: !6344)
!6883 = !{i64 2147651413, i64 2147651456, i64 2147651496}
!6884 = !DILocation(line: 280, column: 1, scope: !6344)
!6885 = !{i64 2147651576, i64 2147651619, i64 2147651659}
!6886 = !DILocation(line: 281, column: 1, scope: !6344)
!6887 = !{i64 2147651781, i64 2147651824, i64 2147651864}
!6888 = !DILocation(line: 282, column: 1, scope: !6344)
!6889 = !{i64 2147652001, i64 2147652044, i64 2147652084}
!6890 = !DILocation(line: 283, column: 1, scope: !6344)
!6891 = !{i64 2147652215, i64 2147652258, i64 2147652298}
!6892 = !DILocation(line: 284, column: 1, scope: !6344)
!6893 = !{i64 2147652459, i64 2147652502, i64 2147652542}
!6894 = !DILocation(line: 285, column: 1, scope: !6344)
!6895 = !{i64 2147652691, i64 2147652734, i64 2147652774}
!6896 = !DILocation(line: 286, column: 1, scope: !6344)
!6897 = !{i64 2147652905, i64 2147652948, i64 2147652988}
!6898 = !DILocation(line: 287, column: 1, scope: !6344)
!6899 = !{i64 2147653116, i64 2147653159, i64 2147653199}
!6900 = !DILocation(line: 288, column: 1, scope: !6344)
!6901 = !{i64 2147653309, i64 2147653352, i64 2147653392}
!6902 = !DILocation(line: 289, column: 1, scope: !6344)
!6903 = !{i64 2147653508, i64 2147653551, i64 2147653591}
!6904 = !DILocation(line: 290, column: 1, scope: !6344)
!6905 = !{i64 2147653680, i64 2147653723, i64 2147653763}
!6906 = !DILocation(line: 291, column: 1, scope: !6344)
!6907 = !{i64 2147653873, i64 2147653916, i64 2147653956}
!6908 = !DILocation(line: 292, column: 1, scope: !6344)
!6909 = !{i64 2147654069, i64 2147654112, i64 2147654152}
!6910 = !DILocation(line: 293, column: 1, scope: !6344)
!6911 = !{i64 2147654232, i64 2147654275, i64 2147654315}
!6912 = !DILocation(line: 294, column: 1, scope: !6344)
!6913 = !{i64 2147654434, i64 2147654477, i64 2147654517}
!6914 = !DILocation(line: 295, column: 1, scope: !6344)
!6915 = !{i64 2147654639, i64 2147654682, i64 2147654722}
!6916 = !DILocation(line: 296, column: 1, scope: !6344)
!6917 = !{i64 2147654847, i64 2147654890, i64 2147654930}
!6918 = !DILocation(line: 297, column: 1, scope: !6344)
!6919 = !{i64 2147655040, i64 2147655083, i64 2147655123}
!6920 = !DILocation(line: 298, column: 1, scope: !6344)
!6921 = !{i64 2147659288, i64 2147659331, i64 2147659371}
!6922 = !DILocation(line: 299, column: 1, scope: !6344)
!6923 = !{i64 2147659515, i64 2147659558, i64 2147659598}
!6924 = !DILocation(line: 300, column: 1, scope: !6344)
!6925 = !{i64 2147659681, i64 2147659724, i64 2147659764}
!6926 = !DILocation(line: 301, column: 1, scope: !6344)
!6927 = !{i64 2147659919, i64 2147659962, i64 2147660002}
!6928 = !DILocation(line: 302, column: 1, scope: !6344)
!6929 = !{i64 2147660169, i64 2147660212, i64 2147660252}
!6930 = !DILocation(line: 303, column: 1, scope: !6344)
!6931 = !{i64 2147660377, i64 2147660420, i64 2147660460}
!6932 = !DILocation(line: 304, column: 1, scope: !6344)
!6933 = !{i64 2147660573, i64 2147660616, i64 2147660656}
!6934 = !DILocation(line: 305, column: 1, scope: !6344)
!6935 = !{i64 2147660790, i64 2147660833, i64 2147660873}
!6936 = !DILocation(line: 306, column: 1, scope: !6344)
!6937 = !{i64 2147661082, i64 2147661125, i64 2147661165}
!6938 = !DILocation(line: 307, column: 1, scope: !6344)
!6939 = !{i64 2147661314, i64 2147661357, i64 2147661397}
!6940 = !DILocation(line: 308, column: 1, scope: !6344)
!6941 = !{i64 2147661531, i64 2147661574, i64 2147661614}
!6942 = !DILocation(line: 309, column: 1, scope: !6344)
!6943 = !{i64 2147661738, i64 2147661781, i64 2147661821}
!6944 = !DILocation(line: 310, column: 1, scope: !6344)
!6945 = !{i64 2147661939, i64 2147661982, i64 2147662022}
!6946 = !DILocation(line: 311, column: 1, scope: !6344)
!6947 = !{i64 2147662171, i64 2147662214, i64 2147662254}
!6948 = !DILocation(line: 312, column: 1, scope: !6344)
!6949 = !{i64 2147662379, i64 2147662422, i64 2147662462}
!6950 = !DILocation(line: 313, column: 1, scope: !6344)
!6951 = !{i64 2147662569, i64 2147662612, i64 2147662652}
!6952 = !DILocation(line: 314, column: 1, scope: !6344)
!6953 = !{i64 2147662795, i64 2147662838, i64 2147662878}
!6954 = !DILocation(line: 315, column: 1, scope: !6344)
!6955 = !{i64 2147662984, i64 2147663027, i64 2147663067}
!6956 = !DILocation(line: 316, column: 1, scope: !6344)
!6957 = !{i64 2147663255, i64 2147663298, i64 2147663338}
!6958 = !DILocation(line: 317, column: 1, scope: !6344)
!6959 = !{i64 2147663475, i64 2147663518, i64 2147663558}
!6960 = !DILocation(line: 318, column: 1, scope: !6344)
!6961 = !{i64 2147663728, i64 2147663771, i64 2147663811}
!6962 = !DILocation(line: 319, column: 1, scope: !6344)
!6963 = !{i64 2147663936, i64 2147663979, i64 2147664019}
!6964 = !DILocation(line: 320, column: 1, scope: !6344)
!6965 = !{i64 2147664168, i64 2147664211, i64 2147664251}
!6966 = !DILocation(line: 321, column: 1, scope: !6344)
!6967 = !{i64 2147664379, i64 2147664422, i64 2147664462}
!6968 = !DILocation(line: 322, column: 1, scope: !6344)
!6969 = !{i64 2147664569, i64 2147664612, i64 2147664652}
!6970 = !DILocation(line: 323, column: 1, scope: !6344)
!6971 = !{i64 2147664783, i64 2147664826, i64 2147664866}
!6972 = !DILocation(line: 324, column: 1, scope: !6344)
!6973 = !{i64 2147664982, i64 2147665025, i64 2147665065}
!6974 = !DILocation(line: 325, column: 1, scope: !6344)
!6975 = !{i64 2147665169, i64 2147665212, i64 2147665252}
!6976 = !DILocation(line: 326, column: 1, scope: !6344)
!6977 = !{i64 2147665377, i64 2147665420, i64 2147665460}
!6978 = !DILocation(line: 327, column: 1, scope: !6344)
!6979 = !{i64 2147665606, i64 2147665649, i64 2147665689}
!6980 = !DILocation(line: 328, column: 1, scope: !6344)
!6981 = !{i64 2147665808, i64 2147665851, i64 2147665891}
!6982 = !DILocation(line: 329, column: 1, scope: !6344)
!6983 = !{i64 2147666007, i64 2147666050, i64 2147666090}
!6984 = !DILocation(line: 330, column: 1, scope: !6344)
!6985 = !{i64 2147666224, i64 2147666267, i64 2147666307}
!6986 = !DILocation(line: 332, column: 1, scope: !6344)
!6987 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !417, file: !417, line: 30, type: !424, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !400, retainedNodes: !6988)
!6988 = !{!6989, !6990}
!6989 = !DILocalVariable(name: "arg", arg: 1, scope: !6987, file: !417, line: 30, type: !426)
!6990 = !DILocalVariable(name: "key", scope: !6987, file: !417, line: 32, type: !108)
!6991 = !DILocation(line: 0, scope: !6987)
!6992 = !DILocation(line: 37, column: 2, scope: !6987)
!6993 = !DILocation(line: 38, column: 2, scope: !6987)
!6994 = !DILocation(line: 55, column: 2, scope: !6995, inlinedAt: !7002)
!6995 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6996, file: !6996, line: 42, type: !6997, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !400, retainedNodes: !6999)
!6996 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6997 = !DISubroutineType(types: !6998)
!6998 = !{!32}
!6999 = !{!7000, !7001}
!7000 = !DILocalVariable(name: "key", scope: !6995, file: !6996, line: 44, type: !32)
!7001 = !DILocalVariable(name: "tmp", scope: !6995, file: !6996, line: 53, type: !32)
!7002 = distinct !DILocation(line: 40, column: 8, scope: !6987)
!7003 = !{i64 2102895}
!7004 = !DILocation(line: 0, scope: !6995, inlinedAt: !7002)
!7005 = !DILocalVariable(name: "key", arg: 1, scope: !7006, file: !6996, line: 84, type: !32)
!7006 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6996, file: !6996, line: 84, type: !7007, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !400, retainedNodes: !7009)
!7007 = !DISubroutineType(types: !7008)
!7008 = !{null, !32}
!7009 = !{!7005}
!7010 = !DILocation(line: 0, scope: !7006, inlinedAt: !7011)
!7011 = distinct !DILocation(line: 47, column: 2, scope: !6987)
!7012 = !DILocation(line: 95, column: 2, scope: !7006, inlinedAt: !7011)
!7013 = !{i64 2103712}
!7014 = !DILocation(line: 51, column: 18, scope: !6987)
!7015 = !DILocation(line: 53, column: 2, scope: !6987)
!7016 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !7017, file: !7017, line: 1609, type: !334, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !400, retainedNodes: !251)
!7017 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7018 = !DILocation(line: 1611, column: 3, scope: !7016)
!7019 = !DILocation(line: 1612, column: 1, scope: !7016)
!7020 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !7017, file: !7017, line: 1629, type: !334, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !400, retainedNodes: !251)
!7021 = !DILocation(line: 1631, column: 3, scope: !7020)
!7022 = !DILocation(line: 1632, column: 1, scope: !7020)
!7023 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !453, file: !453, line: 26, type: !459, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !450, retainedNodes: !7024)
!7024 = !{!7025}
!7025 = !DILocalVariable(name: "dev", arg: 1, scope: !7023, file: !453, line: 26, type: !461)
!7026 = !DILocation(line: 0, scope: !7023)
!7027 = !DILocation(line: 68, column: 2, scope: !7023)
!7028 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !7029, file: !7029, line: 14, type: !4588, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2720, retainedNodes: !7030)
!7029 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7030 = !{!7031, !7032}
!7031 = !DILocalVariable(name: "fmt", arg: 1, scope: !7028, file: !7029, line: 14, type: !337)
!7032 = !DILocalVariable(name: "ap", scope: !7028, file: !7029, line: 16, type: !7033)
!7033 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3657, line: 99, baseType: !7034)
!7034 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3657, line: 40, baseType: !7035)
!7035 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !7029, baseType: !7036)
!7036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !7037)
!7037 = !{!7038}
!7038 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !7036, file: !7029, line: 16, baseType: !102, size: 32)
!7039 = !DILocation(line: 0, scope: !7028)
!7040 = !DILocation(line: 16, column: 2, scope: !7028)
!7041 = !DILocation(line: 16, column: 10, scope: !7028)
!7042 = !DILocation(line: 18, column: 2, scope: !7028)
!7043 = !DILocation(line: 19, column: 2, scope: !7028)
!7044 = !DILocation(line: 20, column: 2, scope: !7028)
!7045 = !DILocation(line: 21, column: 1, scope: !7028)
!7046 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !7029, file: !7029, line: 23, type: !7047, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2720, retainedNodes: !7049)
!7047 = !DISubroutineType(types: !7048)
!7048 = !{null, !337, !7033}
!7049 = !{!7050, !7051}
!7050 = !DILocalVariable(name: "fmt", arg: 1, scope: !7046, file: !7029, line: 23, type: !337)
!7051 = !DILocalVariable(name: "ap", arg: 2, scope: !7046, file: !7029, line: 23, type: !7033)
!7052 = !DILocation(line: 0, scope: !7046)
!7053 = !DILocation(line: 25, column: 2, scope: !7046)
!7054 = !DILocation(line: 26, column: 1, scope: !7046)
!7055 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !7029, file: !7029, line: 52, type: !7056, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2720, retainedNodes: !7058)
!7056 = !DISubroutineType(types: !7057)
!7057 = !{null, !103, !13, !132}
!7058 = !{!7059, !7060, !7061, !7062}
!7059 = !DILocalVariable(name: "level", arg: 1, scope: !7055, file: !7029, line: 52, type: !103)
!7060 = !DILocalVariable(name: "data", arg: 2, scope: !7055, file: !7029, line: 52, type: !13)
!7061 = !DILocalVariable(name: "size", arg: 3, scope: !7055, file: !7029, line: 52, type: !132)
!7062 = !DILocalVariable(name: "data_buffer", scope: !7055, file: !7029, line: 54, type: !337)
!7063 = !DILocation(line: 0, scope: !7055)
!7064 = !DILocation(line: 55, column: 14, scope: !7055)
!7065 = !DILocation(line: 55, column: 2, scope: !7055)
!7066 = !DILocation(line: 56, column: 3, scope: !7067)
!7067 = distinct !DILexicalBlock(scope: !7055, file: !7029, line: 55, column: 20)
!7068 = !DILocation(line: 57, column: 3, scope: !7067)
!7069 = !DILocation(line: 59, column: 7, scope: !7067)
!7070 = distinct !{!7070, !7065, !7071}
!7071 = !DILocation(line: 65, column: 2, scope: !7055)
!7072 = !DILocation(line: 66, column: 1, scope: !7055)
!7073 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3589, file: !3589, line: 175, type: !3590, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2720, retainedNodes: !7074)
!7074 = !{!7075}
!7075 = !DILocalVariable(name: "level", arg: 1, scope: !7073, file: !3589, line: 175, type: !103)
!7076 = !DILocation(line: 0, scope: !7073)
!7077 = !DILocation(line: 177, column: 2, scope: !7073)
!7078 = !DILocation(line: 189, column: 1, scope: !7073)
!7079 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !7029, file: !7029, line: 28, type: !7080, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2720, retainedNodes: !7082)
!7080 = !DISubroutineType(types: !7081)
!7081 = !{null, !337, !132}
!7082 = !{!7083, !7084, !7085, !7087, !7089}
!7083 = !DILocalVariable(name: "data", arg: 1, scope: !7079, file: !7029, line: 28, type: !337)
!7084 = !DILocalVariable(name: "length", arg: 2, scope: !7079, file: !7029, line: 28, type: !132)
!7085 = !DILocalVariable(name: "i", scope: !7086, file: !7029, line: 30, type: !132)
!7086 = distinct !DILexicalBlock(scope: !7079, file: !7029, line: 30, column: 2)
!7087 = !DILocalVariable(name: "i", scope: !7088, file: !7029, line: 40, type: !132)
!7088 = distinct !DILexicalBlock(scope: !7079, file: !7029, line: 40, column: 2)
!7089 = !DILocalVariable(name: "c", scope: !7090, file: !7029, line: 42, type: !186)
!7090 = distinct !DILexicalBlock(scope: !7091, file: !7029, line: 41, column: 19)
!7091 = distinct !DILexicalBlock(scope: !7092, file: !7029, line: 41, column: 7)
!7092 = distinct !DILexicalBlock(scope: !7093, file: !7029, line: 40, column: 54)
!7093 = distinct !DILexicalBlock(scope: !7088, file: !7029, line: 40, column: 2)
!7094 = !DILocation(line: 0, scope: !7079)
!7095 = !DILocation(line: 0, scope: !7086)
!7096 = !DILocation(line: 30, column: 2, scope: !7086)
!7097 = !DILocation(line: 38, column: 2, scope: !7079)
!7098 = !DILocation(line: 0, scope: !7088)
!7099 = !DILocation(line: 40, column: 2, scope: !7088)
!7100 = !DILocation(line: 31, column: 9, scope: !7101)
!7101 = distinct !DILexicalBlock(scope: !7102, file: !7029, line: 31, column: 7)
!7102 = distinct !DILexicalBlock(scope: !7103, file: !7029, line: 30, column: 54)
!7103 = distinct !DILexicalBlock(scope: !7086, file: !7029, line: 30, column: 2)
!7104 = !DILocation(line: 31, column: 7, scope: !7102)
!7105 = !DILocation(line: 32, column: 35, scope: !7106)
!7106 = distinct !DILexicalBlock(scope: !7101, file: !7029, line: 31, column: 19)
!7107 = !DILocation(line: 32, column: 20, scope: !7106)
!7108 = !DILocation(line: 32, column: 4, scope: !7106)
!7109 = !DILocation(line: 33, column: 3, scope: !7106)
!7110 = !DILocation(line: 34, column: 4, scope: !7111)
!7111 = distinct !DILexicalBlock(scope: !7101, file: !7029, line: 33, column: 10)
!7112 = !DILocation(line: 30, column: 50, scope: !7103)
!7113 = !DILocation(line: 30, column: 24, scope: !7103)
!7114 = distinct !{!7114, !7096, !7115}
!7115 = !DILocation(line: 36, column: 2, scope: !7086)
!7116 = !DILocation(line: 49, column: 2, scope: !7079)
!7117 = !DILocation(line: 50, column: 1, scope: !7079)
!7118 = !DILocation(line: 41, column: 9, scope: !7091)
!7119 = !DILocation(line: 41, column: 7, scope: !7092)
!7120 = !DILocation(line: 42, column: 22, scope: !7090)
!7121 = !DILocation(line: 0, scope: !7090)
!7122 = !DILocation(line: 44, column: 25, scope: !7090)
!7123 = !DILocation(line: 44, column: 17, scope: !7090)
!7124 = !DILocation(line: 44, column: 33, scope: !7090)
!7125 = !DILocation(line: 44, column: 4, scope: !7090)
!7126 = !DILocation(line: 45, column: 3, scope: !7090)
!7127 = !DILocation(line: 46, column: 4, scope: !7128)
!7128 = distinct !DILexicalBlock(scope: !7091, file: !7029, line: 45, column: 10)
!7129 = !DILocation(line: 40, column: 50, scope: !7093)
!7130 = !DILocation(line: 40, column: 24, scope: !7093)
!7131 = distinct !{!7131, !7099, !7132}
!7132 = !DILocation(line: 48, column: 2, scope: !7088)
!7133 = distinct !DISubprogram(name: "isprint", scope: !6117, file: !6117, line: 37, type: !396, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2720, retainedNodes: !7134)
!7134 = !{!7135}
!7135 = !DILocalVariable(name: "c", arg: 1, scope: !7133, file: !6117, line: 37, type: !103)
!7136 = !DILocation(line: 0, scope: !7133)
!7137 = !DILocation(line: 39, column: 38, scope: !7133)
!7138 = !DILocation(line: 39, column: 2, scope: !7133)
!7139 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !7140, file: !7140, line: 57, type: !7141, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2723, retainedNodes: !7187)
!7140 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7141 = !DISubroutineType(types: !7142)
!7142 = !{null, !32, !7143}
!7143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7144, size: 32)
!7144 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7145)
!7145 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2843, line: 141, baseType: !7146)
!7146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2843, line: 97, size: 256, elements: !7147)
!7147 = !{!7148}
!7148 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !7146, file: !2843, line: 107, baseType: !7149, size: 256)
!7149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2843, line: 98, size: 256, elements: !7150)
!7150 = !{!7151, !7156, !7161, !7166, !7171, !7176, !7181, !7186}
!7151 = !DIDerivedType(tag: DW_TAG_member, scope: !7149, file: !2843, line: 99, baseType: !7152, size: 32)
!7152 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7149, file: !2843, line: 99, size: 32, elements: !7153)
!7153 = !{!7154, !7155}
!7154 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !7152, file: !2843, line: 99, baseType: !108, size: 32)
!7155 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !7152, file: !2843, line: 99, baseType: !108, size: 32)
!7156 = !DIDerivedType(tag: DW_TAG_member, scope: !7149, file: !2843, line: 100, baseType: !7157, size: 32, offset: 32)
!7157 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7149, file: !2843, line: 100, size: 32, elements: !7158)
!7158 = !{!7159, !7160}
!7159 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !7157, file: !2843, line: 100, baseType: !108, size: 32)
!7160 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !7157, file: !2843, line: 100, baseType: !108, size: 32)
!7161 = !DIDerivedType(tag: DW_TAG_member, scope: !7149, file: !2843, line: 101, baseType: !7162, size: 32, offset: 64)
!7162 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7149, file: !2843, line: 101, size: 32, elements: !7163)
!7163 = !{!7164, !7165}
!7164 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !7162, file: !2843, line: 101, baseType: !108, size: 32)
!7165 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !7162, file: !2843, line: 101, baseType: !108, size: 32)
!7166 = !DIDerivedType(tag: DW_TAG_member, scope: !7149, file: !2843, line: 102, baseType: !7167, size: 32, offset: 96)
!7167 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7149, file: !2843, line: 102, size: 32, elements: !7168)
!7168 = !{!7169, !7170}
!7169 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !7167, file: !2843, line: 102, baseType: !108, size: 32)
!7170 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !7167, file: !2843, line: 102, baseType: !108, size: 32)
!7171 = !DIDerivedType(tag: DW_TAG_member, scope: !7149, file: !2843, line: 103, baseType: !7172, size: 32, offset: 128)
!7172 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7149, file: !2843, line: 103, size: 32, elements: !7173)
!7173 = !{!7174, !7175}
!7174 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !7172, file: !2843, line: 103, baseType: !108, size: 32)
!7175 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !7172, file: !2843, line: 103, baseType: !108, size: 32)
!7176 = !DIDerivedType(tag: DW_TAG_member, scope: !7149, file: !2843, line: 104, baseType: !7177, size: 32, offset: 160)
!7177 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7149, file: !2843, line: 104, size: 32, elements: !7178)
!7178 = !{!7179, !7180}
!7179 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !7177, file: !2843, line: 104, baseType: !108, size: 32)
!7180 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !7177, file: !2843, line: 104, baseType: !108, size: 32)
!7181 = !DIDerivedType(tag: DW_TAG_member, scope: !7149, file: !2843, line: 105, baseType: !7182, size: 32, offset: 192)
!7182 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7149, file: !2843, line: 105, size: 32, elements: !7183)
!7183 = !{!7184, !7185}
!7184 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !7182, file: !2843, line: 105, baseType: !108, size: 32)
!7185 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !7182, file: !2843, line: 105, baseType: !108, size: 32)
!7186 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !7149, file: !2843, line: 106, baseType: !108, size: 32, offset: 224)
!7187 = !{!7188, !7189}
!7188 = !DILocalVariable(name: "reason", arg: 1, scope: !7139, file: !7140, line: 57, type: !32)
!7189 = !DILocalVariable(name: "esf", arg: 2, scope: !7139, file: !7140, line: 57, type: !7143)
!7190 = !DILocation(line: 0, scope: !7139)
!7191 = !DILocation(line: 60, column: 10, scope: !7192)
!7192 = distinct !DILexicalBlock(scope: !7139, file: !7140, line: 60, column: 6)
!7193 = !DILocation(line: 60, column: 6, scope: !7139)
!7194 = !DILocation(line: 61, column: 3, scope: !7195)
!7195 = distinct !DILexicalBlock(scope: !7192, file: !7140, line: 60, column: 19)
!7196 = !DILocation(line: 62, column: 2, scope: !7195)
!7197 = !DILocation(line: 63, column: 2, scope: !7139)
!7198 = !DILocation(line: 64, column: 1, scope: !7139)
!7199 = distinct !DISubprogram(name: "esf_dump", scope: !7140, file: !7140, line: 20, type: !7200, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2723, retainedNodes: !7202)
!7200 = !DISubroutineType(types: !7201)
!7201 = !{null, !7143}
!7202 = !{!7203}
!7203 = !DILocalVariable(name: "esf", arg: 1, scope: !7199, file: !7140, line: 20, type: !7143)
!7204 = !DILocation(line: 0, scope: !7199)
!7205 = !DILocation(line: 22, column: 2, scope: !7206)
!7206 = distinct !DILexicalBlock(scope: !7207, file: !7140, line: 22, column: 2)
!7207 = distinct !DILexicalBlock(scope: !7208, file: !7140, line: 22, column: 2)
!7208 = distinct !DILexicalBlock(scope: !7209, file: !7140, line: 22, column: 2)
!7209 = distinct !DILexicalBlock(scope: !7199, file: !7140, line: 22, column: 2)
!7210 = !DILocation(line: 24, column: 2, scope: !7211)
!7211 = distinct !DILexicalBlock(scope: !7212, file: !7140, line: 24, column: 2)
!7212 = distinct !DILexicalBlock(scope: !7213, file: !7140, line: 24, column: 2)
!7213 = distinct !DILexicalBlock(scope: !7214, file: !7140, line: 24, column: 2)
!7214 = distinct !DILexicalBlock(scope: !7199, file: !7140, line: 24, column: 2)
!7215 = !DILocation(line: 26, column: 2, scope: !7216)
!7216 = distinct !DILexicalBlock(scope: !7217, file: !7140, line: 26, column: 2)
!7217 = distinct !DILexicalBlock(scope: !7218, file: !7140, line: 26, column: 2)
!7218 = distinct !DILexicalBlock(scope: !7219, file: !7140, line: 26, column: 2)
!7219 = distinct !DILexicalBlock(scope: !7199, file: !7140, line: 26, column: 2)
!7220 = !DILocation(line: 53, column: 2, scope: !7221)
!7221 = distinct !DILexicalBlock(scope: !7222, file: !7140, line: 53, column: 2)
!7222 = distinct !DILexicalBlock(scope: !7223, file: !7140, line: 53, column: 2)
!7223 = distinct !DILexicalBlock(scope: !7224, file: !7140, line: 53, column: 2)
!7224 = distinct !DILexicalBlock(scope: !7199, file: !7140, line: 53, column: 2)
!7225 = !DILocation(line: 55, column: 1, scope: !7199)
!7226 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !7140, file: !7140, line: 82, type: !7227, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2723, retainedNodes: !7242)
!7227 = !DISubroutineType(types: !7228)
!7228 = !{null, !7143, !7229}
!7229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7230, size: 32)
!7230 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !214, line: 37, baseType: !7231)
!7231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !7232)
!7232 = !{!7233, !7234, !7235, !7236, !7237, !7238, !7239, !7240, !7241}
!7233 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7231, file: !214, line: 26, baseType: !108, size: 32)
!7234 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7231, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!7235 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7231, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!7236 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7231, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!7237 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7231, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!7238 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7231, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!7239 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7231, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!7240 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7231, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!7241 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7231, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!7242 = !{!7243, !7244, !7245}
!7243 = !DILocalVariable(name: "esf", arg: 1, scope: !7226, file: !7140, line: 82, type: !7143)
!7244 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !7226, file: !7140, line: 82, type: !7229)
!7245 = !DILocalVariable(name: "reason", scope: !7226, file: !7140, line: 88, type: !32)
!7246 = !DILocation(line: 0, scope: !7226)
!7247 = !DILocation(line: 88, column: 35, scope: !7226)
!7248 = !DILocation(line: 108, column: 2, scope: !7226)
!7249 = !DILocation(line: 131, column: 1, scope: !7226)
!7250 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !7140, file: !7140, line: 133, type: !7251, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2723, retainedNodes: !7253)
!7251 = !DISubroutineType(types: !7252)
!7252 = !{null, !102}
!7253 = !{!7254, !7255, !7256}
!7254 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !7250, file: !7140, line: 133, type: !102)
!7255 = !DILocalVariable(name: "ssf_contents", scope: !7250, file: !7140, line: 135, type: !986)
!7256 = !DILocalVariable(name: "oops_esf", scope: !7250, file: !7140, line: 136, type: !7145)
!7257 = !DILocation(line: 0, scope: !7250)
!7258 = !DILocation(line: 136, column: 2, scope: !7250)
!7259 = !DILocation(line: 136, column: 15, scope: !7250)
!7260 = !DILocation(line: 139, column: 22, scope: !7250)
!7261 = !DILocation(line: 139, column: 17, scope: !7250)
!7262 = !DILocation(line: 139, column: 20, scope: !7250)
!7263 = !DILocation(line: 141, column: 2, scope: !7250)
!7264 = !DILocation(line: 142, column: 2, scope: !7250)
!7265 = distinct !DISubprogram(name: "arch_irq_enable", scope: !7266, file: !7266, line: 40, type: !7007, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2734, retainedNodes: !7267)
!7266 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7267 = !{!7268}
!7268 = !DILocalVariable(name: "irq", arg: 1, scope: !7265, file: !7266, line: 40, type: !32)
!7269 = !DILocation(line: 0, scope: !7265)
!7270 = !DILocation(line: 42, column: 2, scope: !7265)
!7271 = !DILocation(line: 43, column: 1, scope: !7265)
!7272 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !624, file: !624, line: 1684, type: !7273, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2734, retainedNodes: !7275)
!7273 = !DISubroutineType(types: !7274)
!7274 = !{null, !892}
!7275 = !{!7276}
!7276 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7272, file: !624, line: 1684, type: !892)
!7277 = !DILocation(line: 0, scope: !7272)
!7278 = !DILocation(line: 1686, column: 23, scope: !7279)
!7279 = distinct !DILexicalBlock(scope: !7272, file: !624, line: 1686, column: 7)
!7280 = !DILocation(line: 1686, column: 7, scope: !7272)
!7281 = !DILocation(line: 1688, column: 5, scope: !7282)
!7282 = distinct !DILexicalBlock(scope: !7279, file: !624, line: 1687, column: 3)
!7283 = !{i64 2151070820}
!7284 = !DILocation(line: 1689, column: 81, scope: !7282)
!7285 = !DILocation(line: 1689, column: 60, scope: !7282)
!7286 = !DILocation(line: 1689, column: 34, scope: !7282)
!7287 = !DILocation(line: 1689, column: 5, scope: !7282)
!7288 = !DILocation(line: 1689, column: 43, scope: !7282)
!7289 = !DILocation(line: 1690, column: 5, scope: !7282)
!7290 = !{i64 2151070934}
!7291 = !DILocation(line: 1691, column: 3, scope: !7282)
!7292 = !DILocation(line: 1692, column: 1, scope: !7272)
!7293 = distinct !DISubprogram(name: "arch_irq_disable", scope: !7266, file: !7266, line: 45, type: !7007, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2734, retainedNodes: !7294)
!7294 = !{!7295}
!7295 = !DILocalVariable(name: "irq", arg: 1, scope: !7293, file: !7266, line: 45, type: !32)
!7296 = !DILocation(line: 0, scope: !7293)
!7297 = !DILocation(line: 47, column: 2, scope: !7293)
!7298 = !DILocation(line: 48, column: 1, scope: !7293)
!7299 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !624, file: !624, line: 1722, type: !7273, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2734, retainedNodes: !7300)
!7300 = !{!7301}
!7301 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7299, file: !624, line: 1722, type: !892)
!7302 = !DILocation(line: 0, scope: !7299)
!7303 = !DILocation(line: 1724, column: 23, scope: !7304)
!7304 = distinct !DILexicalBlock(scope: !7299, file: !624, line: 1724, column: 7)
!7305 = !DILocation(line: 1724, column: 7, scope: !7299)
!7306 = !DILocation(line: 1726, column: 81, scope: !7307)
!7307 = distinct !DILexicalBlock(scope: !7304, file: !624, line: 1725, column: 3)
!7308 = !DILocation(line: 1726, column: 60, scope: !7307)
!7309 = !DILocation(line: 1726, column: 34, scope: !7307)
!7310 = !DILocation(line: 1726, column: 5, scope: !7307)
!7311 = !DILocation(line: 1726, column: 43, scope: !7307)
!7312 = !DILocation(line: 271, column: 3, scope: !7313, inlinedAt: !7315)
!7313 = distinct !DISubprogram(name: "__DSB", scope: !7314, file: !7314, line: 269, type: !334, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2734, retainedNodes: !251)
!7314 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7315 = distinct !DILocation(line: 1727, column: 5, scope: !7307)
!7316 = !{i64 3525203}
!7317 = !DILocation(line: 260, column: 3, scope: !7318, inlinedAt: !7319)
!7318 = distinct !DISubprogram(name: "__ISB", scope: !7314, file: !7314, line: 258, type: !334, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2734, retainedNodes: !251)
!7319 = distinct !DILocation(line: 1728, column: 5, scope: !7307)
!7320 = !{i64 3524920}
!7321 = !DILocation(line: 1729, column: 3, scope: !7307)
!7322 = !DILocation(line: 1730, column: 1, scope: !7299)
!7323 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !7266, file: !7266, line: 50, type: !7324, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2734, retainedNodes: !7326)
!7324 = !DISubroutineType(types: !7325)
!7325 = !{!103, !32}
!7326 = !{!7327}
!7327 = !DILocalVariable(name: "irq", arg: 1, scope: !7323, file: !7266, line: 50, type: !32)
!7328 = !DILocation(line: 0, scope: !7323)
!7329 = !DILocation(line: 52, column: 20, scope: !7323)
!7330 = !DILocation(line: 52, column: 9, scope: !7323)
!7331 = !DILocation(line: 52, column: 41, scope: !7323)
!7332 = !DILocation(line: 52, column: 39, scope: !7323)
!7333 = !DILocation(line: 52, column: 2, scope: !7323)
!7334 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !7266, file: !7266, line: 64, type: !7335, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2734, retainedNodes: !7337)
!7335 = !DISubroutineType(types: !7336)
!7336 = !{null, !32, !32, !108}
!7337 = !{!7338, !7339, !7340}
!7338 = !DILocalVariable(name: "irq", arg: 1, scope: !7334, file: !7266, line: 64, type: !32)
!7339 = !DILocalVariable(name: "prio", arg: 2, scope: !7334, file: !7266, line: 64, type: !32)
!7340 = !DILocalVariable(name: "flags", arg: 3, scope: !7334, file: !7266, line: 64, type: !108)
!7341 = !DILocation(line: 0, scope: !7334)
!7342 = !DILocation(line: 83, column: 8, scope: !7343)
!7343 = distinct !DILexicalBlock(scope: !7344, file: !7266, line: 82, column: 9)
!7344 = distinct !DILexicalBlock(scope: !7334, file: !7266, line: 76, column: 6)
!7345 = !DILocation(line: 95, column: 2, scope: !7334)
!7346 = !DILocation(line: 96, column: 1, scope: !7334)
!7347 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !624, file: !624, line: 1814, type: !7348, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2734, retainedNodes: !7350)
!7348 = !DISubroutineType(types: !7349)
!7349 = !{null, !892, !108}
!7350 = !{!7351, !7352}
!7351 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7347, file: !624, line: 1814, type: !892)
!7352 = !DILocalVariable(name: "priority", arg: 2, scope: !7347, file: !624, line: 1814, type: !108)
!7353 = !DILocation(line: 0, scope: !7347)
!7354 = !DILocation(line: 0, scope: !7355)
!7355 = distinct !DILexicalBlock(scope: !7347, file: !624, line: 1816, column: 7)
!7356 = !DILocation(line: 1816, column: 7, scope: !7347)
!7357 = !DILocation(line: 1824, column: 1, scope: !7347)
!7358 = distinct !DISubprogram(name: "z_irq_spurious", scope: !7266, file: !7266, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2734, retainedNodes: !7359)
!7359 = !{!7360}
!7360 = !DILocalVariable(name: "unused", arg: 1, scope: !7358, file: !7266, line: 155, type: !13)
!7361 = !DILocation(line: 0, scope: !7358)
!7362 = !DILocation(line: 159, column: 2, scope: !7358)
!7363 = !DILocation(line: 160, column: 1, scope: !7358)
!7364 = distinct !DISubprogram(name: "z_arm_nmi", scope: !7365, file: !7365, line: 87, type: !334, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2780, retainedNodes: !251)
!7365 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7366 = !DILocation(line: 89, column: 2, scope: !7364)
!7367 = !DILocation(line: 90, column: 2, scope: !7364)
!7368 = !DILocation(line: 91, column: 1, scope: !7364)
!7369 = !DISubprogram(name: "z_SysNmiOnReset", scope: !7365, file: !7365, line: 23, type: !334, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!7370 = !DISubprogram(name: "z_arm_int_exit", scope: !7371, file: !7371, line: 153, type: !334, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!7371 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7372 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !7373, file: !7373, line: 256, type: !334, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !251)
!7373 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7374 = !DILocation(line: 258, column: 2, scope: !7372)
!7375 = !DILocation(line: 260, column: 2, scope: !7372)
!7376 = !DILocation(line: 262, column: 2, scope: !7372)
!7377 = !DILocation(line: 263, column: 2, scope: !7372)
!7378 = !DILocation(line: 267, column: 2, scope: !7372)
!7379 = !DILocation(line: 268, column: 2, scope: !7372)
!7380 = distinct !DISubprogram(name: "relocate_vector_table", scope: !7373, file: !7373, line: 53, type: !334, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !251)
!7381 = !DILocation(line: 55, column: 12, scope: !7380)
!7382 = !DILocation(line: 271, column: 3, scope: !7383, inlinedAt: !7384)
!7383 = distinct !DISubprogram(name: "__DSB", scope: !7314, file: !7314, line: 269, type: !334, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !251)
!7384 = distinct !DILocation(line: 56, column: 2, scope: !7380)
!7385 = !{i64 3523874}
!7386 = !DILocation(line: 260, column: 3, scope: !7387, inlinedAt: !7388)
!7387 = distinct !DISubprogram(name: "__ISB", scope: !7314, file: !7314, line: 258, type: !334, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !251)
!7388 = distinct !DILocation(line: 57, column: 2, scope: !7380)
!7389 = !{i64 3523591}
!7390 = !DILocation(line: 58, column: 1, scope: !7380)
!7391 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !7373, file: !7373, line: 96, type: !334, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !251)
!7392 = !DILocation(line: 103, column: 13, scope: !7391)
!7393 = !DILocation(line: 975, column: 3, scope: !7394, inlinedAt: !7397)
!7394 = distinct !DISubprogram(name: "__get_CONTROL", scope: !7314, file: !7314, line: 971, type: !3598, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !7395)
!7395 = !{!7396}
!7396 = !DILocalVariable(name: "result", scope: !7394, file: !7314, line: 973, type: !108)
!7397 = distinct !DILocation(line: 189, column: 16, scope: !7391)
!7398 = !{i64 3544704}
!7399 = !DILocation(line: 0, scope: !7394, inlinedAt: !7397)
!7400 = !DILocation(line: 189, column: 32, scope: !7391)
!7401 = !DILocalVariable(name: "control", arg: 1, scope: !7402, file: !7314, line: 1001, type: !108)
!7402 = distinct !DISubprogram(name: "__set_CONTROL", scope: !7314, file: !7314, line: 1001, type: !7403, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !7405)
!7403 = !DISubroutineType(types: !7404)
!7404 = !{null, !108}
!7405 = !{!7401}
!7406 = !DILocation(line: 0, scope: !7402, inlinedAt: !7407)
!7407 = distinct !DILocation(line: 189, column: 2, scope: !7391)
!7408 = !DILocation(line: 1003, column: 3, scope: !7402, inlinedAt: !7407)
!7409 = !{i64 3545424}
!7410 = !DILocation(line: 260, column: 3, scope: !7387, inlinedAt: !7411)
!7411 = distinct !DILocation(line: 1004, column: 3, scope: !7402, inlinedAt: !7407)
!7412 = !DILocation(line: 191, column: 1, scope: !7391)
!7413 = distinct !DISubprogram(name: "arch_swap", scope: !7414, file: !7414, line: 33, type: !7324, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !7415)
!7414 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7415 = !{!7416}
!7416 = !DILocalVariable(name: "key", arg: 1, scope: !7413, file: !7414, line: 33, type: !32)
!7417 = !DILocation(line: 0, scope: !7413)
!7418 = !DILocation(line: 36, column: 2, scope: !7413)
!7419 = !DILocation(line: 36, column: 17, scope: !7413)
!7420 = !DILocation(line: 36, column: 25, scope: !7413)
!7421 = !DILocation(line: 37, column: 37, scope: !7413)
!7422 = !DILocation(line: 37, column: 17, scope: !7413)
!7423 = !DILocation(line: 37, column: 35, scope: !7413)
!7424 = !DILocation(line: 41, column: 12, scope: !7413)
!7425 = !DILocalVariable(name: "key", arg: 1, scope: !7426, file: !6996, line: 84, type: !32)
!7426 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6996, file: !6996, line: 84, type: !7007, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !7427)
!7427 = !{!7425}
!7428 = !DILocation(line: 0, scope: !7426, inlinedAt: !7429)
!7429 = distinct !DILocation(line: 44, column: 2, scope: !7413)
!7430 = !DILocation(line: 95, column: 2, scope: !7426, inlinedAt: !7429)
!7431 = !{i64 2223196}
!7432 = !DILocation(line: 53, column: 9, scope: !7413)
!7433 = !DILocation(line: 53, column: 24, scope: !7413)
!7434 = !DILocation(line: 53, column: 2, scope: !7413)
!7435 = distinct !DISubprogram(name: "arch_new_thread", scope: !7436, file: !7436, line: 56, type: !7437, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2838, retainedNodes: !7544)
!7436 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7437 = !DISubroutineType(types: !7438)
!7438 = !{null, !7439, !7539, !277, !321, !102, !102, !102}
!7439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7440, size: 32)
!7440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !7441)
!7441 = !{!7442, !7500, !7512, !7513, !7514, !7515, !7521, !7534}
!7442 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7440, file: !163, line: 247, baseType: !7443, size: 384)
!7443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !7444)
!7444 = !{!7445, !7469, !7476, !7477, !7478, !7487, !7488, !7489}
!7445 = !DIDerivedType(tag: DW_TAG_member, scope: !7443, file: !163, line: 60, baseType: !7446, size: 64)
!7446 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7443, file: !163, line: 60, size: 64, elements: !7447)
!7447 = !{!7448, !7463}
!7448 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7446, file: !163, line: 61, baseType: !7449, size: 64)
!7449 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !7450)
!7450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !7451)
!7451 = !{!7452, !7458}
!7452 = !DIDerivedType(tag: DW_TAG_member, scope: !7450, file: !146, line: 38, baseType: !7453, size: 32)
!7453 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7450, file: !146, line: 38, size: 32, elements: !7454)
!7454 = !{!7455, !7457}
!7455 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7453, file: !146, line: 39, baseType: !7456, size: 32)
!7456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7450, size: 32)
!7457 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7453, file: !146, line: 40, baseType: !7456, size: 32)
!7458 = !DIDerivedType(tag: DW_TAG_member, scope: !7450, file: !146, line: 42, baseType: !7459, size: 32, offset: 32)
!7459 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7450, file: !146, line: 42, size: 32, elements: !7460)
!7460 = !{!7461, !7462}
!7461 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7459, file: !146, line: 43, baseType: !7456, size: 32)
!7462 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7459, file: !146, line: 44, baseType: !7456, size: 32)
!7463 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7446, file: !163, line: 62, baseType: !7464, size: 64)
!7464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !7465)
!7465 = !{!7466}
!7466 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7464, file: !175, line: 50, baseType: !7467, size: 64)
!7467 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7468, size: 64, elements: !180)
!7468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7464, size: 32)
!7469 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7443, file: !163, line: 68, baseType: !7470, size: 32, offset: 64)
!7470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7471, size: 32)
!7471 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !7472)
!7472 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !7473)
!7473 = !{!7474}
!7474 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7472, file: !141, line: 232, baseType: !7475, size: 64)
!7475 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !7450)
!7476 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7443, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!7477 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7443, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!7478 = !DIDerivedType(tag: DW_TAG_member, scope: !7443, file: !163, line: 90, baseType: !7479, size: 16, offset: 112)
!7479 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7443, file: !163, line: 90, size: 16, elements: !7480)
!7480 = !{!7481, !7486}
!7481 = !DIDerivedType(tag: DW_TAG_member, scope: !7479, file: !163, line: 91, baseType: !7482, size: 16)
!7482 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7479, file: !163, line: 91, size: 16, elements: !7483)
!7483 = !{!7484, !7485}
!7484 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7482, file: !163, line: 96, baseType: !195, size: 8)
!7485 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7482, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!7486 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7479, file: !163, line: 100, baseType: !121, size: 16)
!7487 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7443, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!7488 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7443, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!7489 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7443, file: !163, line: 131, baseType: !7490, size: 192, offset: 192)
!7490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !7491)
!7491 = !{!7492, !7493, !7499}
!7492 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7490, file: !141, line: 245, baseType: !7449, size: 64)
!7493 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7490, file: !141, line: 246, baseType: !7494, size: 32, offset: 64)
!7494 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !7495)
!7495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7496, size: 32)
!7496 = !DISubroutineType(types: !7497)
!7497 = !{null, !7498}
!7498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7490, size: 32)
!7499 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7490, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!7500 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7440, file: !163, line: 250, baseType: !7501, size: 288, offset: 384)
!7501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !7502)
!7502 = !{!7503, !7504, !7505, !7506, !7507, !7508, !7509, !7510, !7511}
!7503 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7501, file: !214, line: 26, baseType: !108, size: 32)
!7504 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7501, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!7505 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7501, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!7506 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7501, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!7507 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7501, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!7508 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7501, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!7509 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7501, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!7510 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7501, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!7511 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7501, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!7512 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7440, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!7513 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7440, file: !163, line: 256, baseType: !7471, size: 64, offset: 704)
!7514 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7440, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!7515 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7440, file: !163, line: 300, baseType: !7516, size: 96, offset: 800)
!7516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !7517)
!7517 = !{!7518, !7519, !7520}
!7518 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7516, file: !163, line: 153, baseType: !22, size: 32)
!7519 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7516, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!7520 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7516, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!7521 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7440, file: !163, line: 325, baseType: !7522, size: 32, offset: 896)
!7522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7523, size: 32)
!7523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !7524)
!7524 = !{!7525, !7531, !7532}
!7525 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7523, file: !137, line: 5074, baseType: !7526, size: 96)
!7526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !7527)
!7527 = !{!7528, !7529, !7530}
!7528 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7526, file: !240, line: 57, baseType: !243, size: 32)
!7529 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7526, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!7530 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7526, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!7531 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7523, file: !137, line: 5075, baseType: !7471, size: 64, offset: 96)
!7532 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7523, file: !137, line: 5076, baseType: !7533, offset: 160)
!7533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!7534 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7440, file: !163, line: 343, baseType: !7535, size: 64, offset: 928)
!7535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !7536)
!7536 = !{!7537, !7538}
!7537 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7535, file: !214, line: 63, baseType: !108, size: 32)
!7538 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7535, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!7539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7540, size: 32)
!7540 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !314, line: 44, baseType: !7541)
!7541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !316, line: 47, size: 8, elements: !7542)
!7542 = !{!7543}
!7543 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7541, file: !316, line: 48, baseType: !278, size: 8)
!7544 = !{!7545, !7546, !7547, !7548, !7549, !7550, !7551, !7552}
!7545 = !DILocalVariable(name: "thread", arg: 1, scope: !7435, file: !7436, line: 56, type: !7439)
!7546 = !DILocalVariable(name: "stack", arg: 2, scope: !7435, file: !7436, line: 56, type: !7539)
!7547 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !7435, file: !7436, line: 57, type: !277)
!7548 = !DILocalVariable(name: "entry", arg: 4, scope: !7435, file: !7436, line: 57, type: !321)
!7549 = !DILocalVariable(name: "p1", arg: 5, scope: !7435, file: !7436, line: 58, type: !102)
!7550 = !DILocalVariable(name: "p2", arg: 6, scope: !7435, file: !7436, line: 58, type: !102)
!7551 = !DILocalVariable(name: "p3", arg: 7, scope: !7435, file: !7436, line: 58, type: !102)
!7552 = !DILocalVariable(name: "iframe", scope: !7435, file: !7436, line: 60, type: !2841)
!7553 = !DILocation(line: 0, scope: !7435)
!7554 = !DILocation(line: 85, column: 11, scope: !7435)
!7555 = !DILocation(line: 93, column: 10, scope: !7435)
!7556 = !DILocation(line: 98, column: 13, scope: !7435)
!7557 = !DILocation(line: 100, column: 15, scope: !7435)
!7558 = !DILocation(line: 100, column: 10, scope: !7435)
!7559 = !DILocation(line: 100, column: 13, scope: !7435)
!7560 = !DILocation(line: 101, column: 15, scope: !7435)
!7561 = !DILocation(line: 101, column: 10, scope: !7435)
!7562 = !DILocation(line: 101, column: 13, scope: !7435)
!7563 = !DILocation(line: 102, column: 15, scope: !7435)
!7564 = !DILocation(line: 102, column: 10, scope: !7435)
!7565 = !DILocation(line: 102, column: 13, scope: !7435)
!7566 = !DILocation(line: 103, column: 15, scope: !7435)
!7567 = !DILocation(line: 103, column: 10, scope: !7435)
!7568 = !DILocation(line: 103, column: 13, scope: !7435)
!7569 = !DILocation(line: 106, column: 10, scope: !7435)
!7570 = !DILocation(line: 106, column: 15, scope: !7435)
!7571 = !DILocation(line: 122, column: 29, scope: !7435)
!7572 = !DILocation(line: 122, column: 23, scope: !7435)
!7573 = !DILocation(line: 122, column: 27, scope: !7435)
!7574 = !DILocation(line: 123, column: 15, scope: !7435)
!7575 = !DILocation(line: 123, column: 23, scope: !7435)
!7576 = !DILocation(line: 143, column: 1, scope: !7435)
!7577 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !7436, file: !7436, line: 385, type: !7578, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2838, retainedNodes: !7581)
!7578 = !DISubroutineType(types: !7579)
!7579 = !{!108, !7580, !7580}
!7580 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !108)
!7581 = !{!7582, !7583, !7584, !7587}
!7582 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !7577, file: !7436, line: 385, type: !7580)
!7583 = !DILocalVariable(name: "psp", arg: 2, scope: !7577, file: !7436, line: 385, type: !7580)
!7584 = !DILocalVariable(name: "thread", scope: !7577, file: !7436, line: 388, type: !7585)
!7585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7586, size: 32)
!7586 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7440)
!7587 = !DILocalVariable(name: "guard_len", scope: !7577, file: !7436, line: 405, type: !108)
!7588 = !DILocation(line: 0, scope: !7577)
!7589 = !DILocation(line: 388, column: 34, scope: !7577)
!7590 = !DILocation(line: 390, column: 13, scope: !7591)
!7591 = distinct !DILexicalBlock(scope: !7577, file: !7436, line: 390, column: 6)
!7592 = !DILocation(line: 390, column: 6, scope: !7577)
!7593 = !DILocation(line: 438, column: 6, scope: !7594)
!7594 = distinct !DILexicalBlock(scope: !7577, file: !7436, line: 438, column: 6)
!7595 = !DILocation(line: 438, column: 6, scope: !7577)
!7596 = !DILocation(line: 442, column: 3, scope: !7597)
!7597 = distinct !DILexicalBlock(scope: !7594, file: !7436, line: 440, column: 22)
!7598 = !DILocation(line: 455, column: 1, scope: !7577)
!7599 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !7436, file: !7436, line: 530, type: !7600, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2838, retainedNodes: !7602)
!7600 = !DISubroutineType(types: !7601)
!7601 = !{null, !7439, !277, !321}
!7602 = !{!7603, !7604, !7605}
!7603 = !DILocalVariable(name: "main_thread", arg: 1, scope: !7599, file: !7436, line: 530, type: !7439)
!7604 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !7599, file: !7436, line: 530, type: !277)
!7605 = !DILocalVariable(name: "_main", arg: 3, scope: !7599, file: !7436, line: 531, type: !321)
!7606 = !DILocation(line: 0, scope: !7599)
!7607 = !DILocation(line: 535, column: 11, scope: !7599)
!7608 = !DILocation(line: 560, column: 2, scope: !7599)
!7609 = !DILocation(line: 576, column: 2, scope: !7599)
!7610 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!7611 = !DILocation(line: 603, column: 2, scope: !7599)
!7612 = distinct !DISubprogram(name: "z_arm_fault", scope: !7613, file: !7613, line: 1036, type: !7614, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2881, retainedNodes: !7629)
!7613 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7614 = !DISubroutineType(types: !7615)
!7615 = !{null, !108, !108, !108, !7616}
!7616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7617, size: 32)
!7617 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !214, line: 37, baseType: !7618)
!7618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !7619)
!7619 = !{!7620, !7621, !7622, !7623, !7624, !7625, !7626, !7627, !7628}
!7620 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7618, file: !214, line: 26, baseType: !108, size: 32)
!7621 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7618, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!7622 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7618, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!7623 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7618, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!7624 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7618, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!7625 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7618, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!7626 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7618, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!7627 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7618, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!7628 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7618, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!7629 = !{!7630, !7631, !7632, !7633, !7634, !7635, !7636, !7637, !7638, !7639}
!7630 = !DILocalVariable(name: "msp", arg: 1, scope: !7612, file: !7613, line: 1036, type: !108)
!7631 = !DILocalVariable(name: "psp", arg: 2, scope: !7612, file: !7613, line: 1036, type: !108)
!7632 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7612, file: !7613, line: 1036, type: !108)
!7633 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !7612, file: !7613, line: 1037, type: !7616)
!7634 = !DILocalVariable(name: "reason", scope: !7612, file: !7613, line: 1039, type: !108)
!7635 = !DILocalVariable(name: "fault", scope: !7612, file: !7613, line: 1040, type: !103)
!7636 = !DILocalVariable(name: "recoverable", scope: !7612, file: !7613, line: 1041, type: !131)
!7637 = !DILocalVariable(name: "nested_exc", scope: !7612, file: !7613, line: 1041, type: !131)
!7638 = !DILocalVariable(name: "esf", scope: !7612, file: !7613, line: 1042, type: !2909)
!7639 = !DILocalVariable(name: "esf_copy", scope: !7612, file: !7613, line: 1047, type: !2910)
!7640 = !DILocation(line: 0, scope: !7612)
!7641 = !DILocation(line: 1040, column: 19, scope: !7612)
!7642 = !DILocation(line: 1040, column: 24, scope: !7612)
!7643 = !DILocation(line: 1041, column: 2, scope: !7612)
!7644 = !DILocation(line: 1047, column: 2, scope: !7612)
!7645 = !DILocation(line: 1047, column: 15, scope: !7612)
!7646 = !DILocalVariable(name: "key", arg: 1, scope: !7647, file: !6996, line: 84, type: !32)
!7647 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6996, file: !6996, line: 84, type: !7007, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2881, retainedNodes: !7648)
!7648 = !{!7646}
!7649 = !DILocation(line: 0, scope: !7647, inlinedAt: !7650)
!7650 = distinct !DILocation(line: 1050, column: 2, scope: !7612)
!7651 = !DILocation(line: 95, column: 2, scope: !7647, inlinedAt: !7650)
!7652 = !{i64 2256440}
!7653 = !DILocation(line: 1055, column: 9, scope: !7612)
!7654 = !DILocation(line: 1063, column: 11, scope: !7612)
!7655 = !DILocation(line: 1064, column: 6, scope: !7656)
!7656 = distinct !DILexicalBlock(scope: !7612, file: !7613, line: 1064, column: 6)
!7657 = !{i8 0, i8 2}
!7658 = !DILocation(line: 1064, column: 6, scope: !7612)
!7659 = !DILocation(line: 1070, column: 20, scope: !7612)
!7660 = !DILocation(line: 1070, column: 2, scope: !7612)
!7661 = !DILocation(line: 1089, column: 6, scope: !7662)
!7662 = distinct !DILexicalBlock(scope: !7612, file: !7613, line: 1089, column: 6)
!7663 = !DILocation(line: 0, scope: !7662)
!7664 = !DILocation(line: 1089, column: 6, scope: !7612)
!7665 = !DILocation(line: 1090, column: 28, scope: !7666)
!7666 = distinct !DILexicalBlock(scope: !7667, file: !7613, line: 1090, column: 7)
!7667 = distinct !DILexicalBlock(scope: !7662, file: !7613, line: 1089, column: 18)
!7668 = !DILocation(line: 1090, column: 44, scope: !7666)
!7669 = !DILocation(line: 1090, column: 7, scope: !7667)
!7670 = !DILocation(line: 1091, column: 24, scope: !7671)
!7671 = distinct !DILexicalBlock(scope: !7666, file: !7613, line: 1090, column: 50)
!7672 = !DILocation(line: 1092, column: 3, scope: !7671)
!7673 = !DILocation(line: 1094, column: 23, scope: !7674)
!7674 = distinct !DILexicalBlock(scope: !7662, file: !7613, line: 1093, column: 9)
!7675 = !DILocation(line: 1097, column: 2, scope: !7612)
!7676 = !DILocation(line: 1098, column: 1, scope: !7612)
!7677 = distinct !DISubprogram(name: "get_esf", scope: !7613, file: !7613, line: 894, type: !7678, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2881, retainedNodes: !7681)
!7678 = !DISubroutineType(types: !7679)
!7679 = !{!2909, !108, !108, !108, !7680}
!7680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !131, size: 32)
!7681 = !{!7682, !7683, !7684, !7685, !7686, !7687}
!7682 = !DILocalVariable(name: "msp", arg: 1, scope: !7677, file: !7613, line: 894, type: !108)
!7683 = !DILocalVariable(name: "psp", arg: 2, scope: !7677, file: !7613, line: 894, type: !108)
!7684 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7677, file: !7613, line: 894, type: !108)
!7685 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !7677, file: !7613, line: 895, type: !7680)
!7686 = !DILocalVariable(name: "alternative_state_exc", scope: !7677, file: !7613, line: 897, type: !131)
!7687 = !DILocalVariable(name: "ptr_esf", scope: !7677, file: !7613, line: 898, type: !2909)
!7688 = !DILocation(line: 0, scope: !7677)
!7689 = !DILocation(line: 900, column: 14, scope: !7677)
!7690 = !DILocation(line: 902, column: 49, scope: !7691)
!7691 = distinct !DILexicalBlock(scope: !7677, file: !7613, line: 902, column: 6)
!7692 = !DILocation(line: 902, column: 6, scope: !7677)
!7693 = !DILocation(line: 983, column: 44, scope: !7694)
!7694 = distinct !DILexicalBlock(scope: !7677, file: !7613, line: 983, column: 6)
!7695 = !DILocation(line: 985, column: 3, scope: !7696)
!7696 = distinct !DILexicalBlock(scope: !7697, file: !7613, line: 985, column: 3)
!7697 = distinct !DILexicalBlock(scope: !7698, file: !7613, line: 985, column: 3)
!7698 = distinct !DILexicalBlock(scope: !7699, file: !7613, line: 985, column: 3)
!7699 = distinct !DILexicalBlock(scope: !7700, file: !7613, line: 985, column: 3)
!7700 = distinct !DILexicalBlock(scope: !7694, file: !7613, line: 984, column: 47)
!7701 = !DILocation(line: 986, column: 3, scope: !7700)
!7702 = !DILocation(line: 983, column: 18, scope: !7694)
!7703 = !DILocation(line: 991, column: 7, scope: !7704)
!7704 = distinct !DILexicalBlock(scope: !7705, file: !7613, line: 990, column: 30)
!7705 = distinct !DILexicalBlock(scope: !7677, file: !7613, line: 990, column: 6)
!7706 = !DILocation(line: 998, column: 16, scope: !7707)
!7707 = distinct !DILexicalBlock(scope: !7708, file: !7613, line: 995, column: 10)
!7708 = distinct !DILexicalBlock(scope: !7704, file: !7613, line: 991, column: 7)
!7709 = !DILocation(line: 1002, column: 2, scope: !7677)
!7710 = !DILocation(line: 1003, column: 1, scope: !7677)
!7711 = distinct !DISubprogram(name: "fault_handle", scope: !7613, file: !7613, line: 786, type: !7712, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2881, retainedNodes: !7714)
!7712 = !DISubroutineType(types: !7713)
!7713 = !{!108, !2909, !103, !7680}
!7714 = !{!7715, !7716, !7717, !7718}
!7715 = !DILocalVariable(name: "esf", arg: 1, scope: !7711, file: !7613, line: 786, type: !2909)
!7716 = !DILocalVariable(name: "fault", arg: 2, scope: !7711, file: !7613, line: 786, type: !103)
!7717 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7711, file: !7613, line: 786, type: !7680)
!7718 = !DILocalVariable(name: "reason", scope: !7711, file: !7613, line: 788, type: !108)
!7719 = !DILocation(line: 0, scope: !7711)
!7720 = !DILocation(line: 790, column: 15, scope: !7711)
!7721 = !DILocation(line: 792, column: 2, scope: !7711)
!7722 = !DILocation(line: 794, column: 12, scope: !7723)
!7723 = distinct !DILexicalBlock(scope: !7711, file: !7613, line: 792, column: 17)
!7724 = !DILocation(line: 795, column: 3, scope: !7723)
!7725 = !DILocation(line: 800, column: 12, scope: !7723)
!7726 = !DILocation(line: 801, column: 3, scope: !7723)
!7727 = !DILocation(line: 803, column: 12, scope: !7723)
!7728 = !DILocation(line: 804, column: 3, scope: !7723)
!7729 = !DILocation(line: 806, column: 12, scope: !7723)
!7730 = !DILocation(line: 807, column: 3, scope: !7723)
!7731 = !DILocation(line: 814, column: 3, scope: !7723)
!7732 = !DILocation(line: 815, column: 3, scope: !7723)
!7733 = !DILocation(line: 820, column: 3, scope: !7723)
!7734 = !DILocation(line: 821, column: 3, scope: !7723)
!7735 = !DILocation(line: 829, column: 2, scope: !7711)
!7736 = distinct !DISubprogram(name: "hard_fault", scope: !7613, file: !7613, line: 709, type: !7737, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2881, retainedNodes: !7739)
!7737 = !DISubroutineType(types: !7738)
!7738 = !{!108, !2909, !7680}
!7739 = !{!7740, !7741, !7742}
!7740 = !DILocalVariable(name: "esf", arg: 1, scope: !7736, file: !7613, line: 709, type: !2909)
!7741 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7736, file: !7613, line: 709, type: !7680)
!7742 = !DILocalVariable(name: "reason", scope: !7736, file: !7613, line: 711, type: !108)
!7743 = !DILocation(line: 0, scope: !7736)
!7744 = !DILocation(line: 713, column: 2, scope: !7745)
!7745 = distinct !DILexicalBlock(scope: !7746, file: !7613, line: 713, column: 2)
!7746 = distinct !DILexicalBlock(scope: !7747, file: !7613, line: 713, column: 2)
!7747 = distinct !DILexicalBlock(scope: !7748, file: !7613, line: 713, column: 2)
!7748 = distinct !DILexicalBlock(scope: !7736, file: !7613, line: 713, column: 2)
!7749 = !DILocation(line: 732, column: 15, scope: !7736)
!7750 = !DILocation(line: 734, column: 12, scope: !7751)
!7751 = distinct !DILexicalBlock(scope: !7736, file: !7613, line: 734, column: 6)
!7752 = !DILocation(line: 734, column: 17, scope: !7751)
!7753 = !DILocation(line: 734, column: 41, scope: !7751)
!7754 = !DILocation(line: 734, column: 6, scope: !7736)
!7755 = !DILocation(line: 735, column: 3, scope: !7756)
!7756 = distinct !DILexicalBlock(scope: !7757, file: !7613, line: 735, column: 3)
!7757 = distinct !DILexicalBlock(scope: !7758, file: !7613, line: 735, column: 3)
!7758 = distinct !DILexicalBlock(scope: !7759, file: !7613, line: 735, column: 3)
!7759 = distinct !DILexicalBlock(scope: !7760, file: !7613, line: 735, column: 3)
!7760 = distinct !DILexicalBlock(scope: !7751, file: !7613, line: 734, column: 47)
!7761 = !DILocation(line: 736, column: 2, scope: !7760)
!7762 = !DILocation(line: 736, column: 19, scope: !7763)
!7763 = distinct !DILexicalBlock(scope: !7751, file: !7613, line: 736, column: 13)
!7764 = !DILocation(line: 736, column: 49, scope: !7763)
!7765 = !DILocation(line: 736, column: 13, scope: !7751)
!7766 = !DILocation(line: 737, column: 3, scope: !7767)
!7767 = distinct !DILexicalBlock(scope: !7768, file: !7613, line: 737, column: 3)
!7768 = distinct !DILexicalBlock(scope: !7769, file: !7613, line: 737, column: 3)
!7769 = distinct !DILexicalBlock(scope: !7770, file: !7613, line: 737, column: 3)
!7770 = distinct !DILexicalBlock(scope: !7771, file: !7613, line: 737, column: 3)
!7771 = distinct !DILexicalBlock(scope: !7763, file: !7613, line: 736, column: 55)
!7772 = !DILocation(line: 738, column: 2, scope: !7771)
!7773 = !DILocation(line: 738, column: 19, scope: !7774)
!7774 = distinct !DILexicalBlock(scope: !7763, file: !7613, line: 738, column: 13)
!7775 = !DILocation(line: 738, column: 24, scope: !7774)
!7776 = !DILocation(line: 738, column: 47, scope: !7774)
!7777 = !DILocation(line: 738, column: 13, scope: !7763)
!7778 = !DILocation(line: 739, column: 3, scope: !7779)
!7779 = distinct !DILexicalBlock(scope: !7780, file: !7613, line: 739, column: 3)
!7780 = distinct !DILexicalBlock(scope: !7781, file: !7613, line: 739, column: 3)
!7781 = distinct !DILexicalBlock(scope: !7782, file: !7613, line: 739, column: 3)
!7782 = distinct !DILexicalBlock(scope: !7783, file: !7613, line: 739, column: 3)
!7783 = distinct !DILexicalBlock(scope: !7774, file: !7613, line: 738, column: 53)
!7784 = !DILocation(line: 740, column: 7, scope: !7785)
!7785 = distinct !DILexicalBlock(scope: !7783, file: !7613, line: 740, column: 7)
!7786 = !DILocation(line: 740, column: 7, scope: !7783)
!7787 = !DILocation(line: 741, column: 4, scope: !7788)
!7788 = distinct !DILexicalBlock(scope: !7789, file: !7613, line: 741, column: 4)
!7789 = distinct !DILexicalBlock(scope: !7790, file: !7613, line: 741, column: 4)
!7790 = distinct !DILexicalBlock(scope: !7791, file: !7613, line: 741, column: 4)
!7791 = distinct !DILexicalBlock(scope: !7792, file: !7613, line: 741, column: 4)
!7792 = distinct !DILexicalBlock(scope: !7785, file: !7613, line: 740, column: 38)
!7793 = !DILocation(line: 742, column: 24, scope: !7792)
!7794 = !DILocation(line: 743, column: 3, scope: !7792)
!7795 = !DILocation(line: 743, column: 20, scope: !7796)
!7796 = distinct !DILexicalBlock(scope: !7785, file: !7613, line: 743, column: 14)
!7797 = !DILocation(line: 743, column: 25, scope: !7796)
!7798 = !DILocation(line: 743, column: 52, scope: !7796)
!7799 = !DILocation(line: 743, column: 14, scope: !7785)
!7800 = !DILocation(line: 744, column: 13, scope: !7801)
!7801 = distinct !DILexicalBlock(scope: !7796, file: !7613, line: 743, column: 58)
!7802 = !DILocation(line: 745, column: 3, scope: !7801)
!7803 = !DILocation(line: 745, column: 20, scope: !7804)
!7804 = distinct !DILexicalBlock(scope: !7796, file: !7613, line: 745, column: 14)
!7805 = !DILocation(line: 745, column: 25, scope: !7804)
!7806 = !DILocation(line: 745, column: 52, scope: !7804)
!7807 = !DILocation(line: 745, column: 14, scope: !7796)
!7808 = !DILocation(line: 746, column: 13, scope: !7809)
!7809 = distinct !DILexicalBlock(scope: !7804, file: !7613, line: 745, column: 58)
!7810 = !DILocation(line: 747, column: 3, scope: !7809)
!7811 = !DILocation(line: 747, column: 20, scope: !7812)
!7812 = distinct !DILexicalBlock(scope: !7804, file: !7613, line: 747, column: 14)
!7813 = !DILocation(line: 747, column: 52, scope: !7812)
!7814 = !DILocation(line: 747, column: 14, scope: !7804)
!7815 = !DILocation(line: 748, column: 13, scope: !7816)
!7816 = distinct !DILexicalBlock(scope: !7812, file: !7613, line: 747, column: 58)
!7817 = !DILocation(line: 753, column: 3, scope: !7816)
!7818 = !DILocation(line: 766, column: 2, scope: !7736)
!7819 = distinct !DISubprogram(name: "mem_manage_fault", scope: !7613, file: !7613, line: 229, type: !7712, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2881, retainedNodes: !7820)
!7820 = !{!7821, !7822, !7823, !7824, !7825, !7826, !7829}
!7821 = !DILocalVariable(name: "esf", arg: 1, scope: !7819, file: !7613, line: 229, type: !2909)
!7822 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7819, file: !7613, line: 229, type: !103)
!7823 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7819, file: !7613, line: 230, type: !7680)
!7824 = !DILocalVariable(name: "reason", scope: !7819, file: !7613, line: 232, type: !108)
!7825 = !DILocalVariable(name: "mmfar", scope: !7819, file: !7613, line: 233, type: !108)
!7826 = !DILocalVariable(name: "temp", scope: !7827, file: !7613, line: 254, type: !108)
!7827 = distinct !DILexicalBlock(scope: !7828, file: !7613, line: 244, column: 48)
!7828 = distinct !DILexicalBlock(scope: !7819, file: !7613, line: 244, column: 6)
!7829 = !DILocalVariable(name: "min_stack_ptr", scope: !7830, file: !7613, line: 309, type: !108)
!7830 = distinct !DILexicalBlock(scope: !7831, file: !7613, line: 308, column: 43)
!7831 = distinct !DILexicalBlock(scope: !7832, file: !7613, line: 308, column: 7)
!7832 = distinct !DILexicalBlock(scope: !7833, file: !7613, line: 289, column: 40)
!7833 = distinct !DILexicalBlock(scope: !7819, file: !7613, line: 288, column: 6)
!7834 = !DILocation(line: 0, scope: !7819)
!7835 = !DILocation(line: 235, column: 2, scope: !7836)
!7836 = distinct !DILexicalBlock(scope: !7837, file: !7613, line: 235, column: 2)
!7837 = distinct !DILexicalBlock(scope: !7838, file: !7613, line: 235, column: 2)
!7838 = distinct !DILexicalBlock(scope: !7839, file: !7613, line: 235, column: 2)
!7839 = distinct !DILexicalBlock(scope: !7819, file: !7613, line: 235, column: 2)
!7840 = !DILocation(line: 237, column: 12, scope: !7841)
!7841 = distinct !DILexicalBlock(scope: !7819, file: !7613, line: 237, column: 6)
!7842 = !DILocation(line: 237, column: 17, scope: !7841)
!7843 = !DILocation(line: 237, column: 41, scope: !7841)
!7844 = !DILocation(line: 237, column: 6, scope: !7819)
!7845 = !DILocation(line: 238, column: 3, scope: !7846)
!7846 = distinct !DILexicalBlock(scope: !7847, file: !7613, line: 238, column: 3)
!7847 = distinct !DILexicalBlock(scope: !7848, file: !7613, line: 238, column: 3)
!7848 = distinct !DILexicalBlock(scope: !7849, file: !7613, line: 238, column: 3)
!7849 = distinct !DILexicalBlock(scope: !7850, file: !7613, line: 238, column: 3)
!7850 = distinct !DILexicalBlock(scope: !7841, file: !7613, line: 237, column: 47)
!7851 = !DILocation(line: 240, column: 2, scope: !7850)
!7852 = !DILocation(line: 241, column: 12, scope: !7853)
!7853 = distinct !DILexicalBlock(scope: !7819, file: !7613, line: 241, column: 6)
!7854 = !DILocation(line: 241, column: 17, scope: !7853)
!7855 = !DILocation(line: 241, column: 43, scope: !7853)
!7856 = !DILocation(line: 241, column: 6, scope: !7819)
!7857 = !DILocation(line: 242, column: 3, scope: !7858)
!7858 = distinct !DILexicalBlock(scope: !7859, file: !7613, line: 242, column: 3)
!7859 = distinct !DILexicalBlock(scope: !7860, file: !7613, line: 242, column: 3)
!7860 = distinct !DILexicalBlock(scope: !7861, file: !7613, line: 242, column: 3)
!7861 = distinct !DILexicalBlock(scope: !7862, file: !7613, line: 242, column: 3)
!7862 = distinct !DILexicalBlock(scope: !7853, file: !7613, line: 241, column: 49)
!7863 = !DILocation(line: 243, column: 2, scope: !7862)
!7864 = !DILocation(line: 244, column: 12, scope: !7828)
!7865 = !DILocation(line: 244, column: 17, scope: !7828)
!7866 = !DILocation(line: 244, column: 42, scope: !7828)
!7867 = !DILocation(line: 244, column: 6, scope: !7819)
!7868 = !DILocation(line: 245, column: 3, scope: !7869)
!7869 = distinct !DILexicalBlock(scope: !7870, file: !7613, line: 245, column: 3)
!7870 = distinct !DILexicalBlock(scope: !7871, file: !7613, line: 245, column: 3)
!7871 = distinct !DILexicalBlock(scope: !7872, file: !7613, line: 245, column: 3)
!7872 = distinct !DILexicalBlock(scope: !7827, file: !7613, line: 245, column: 3)
!7873 = !DILocation(line: 254, column: 24, scope: !7827)
!7874 = !DILocation(line: 0, scope: !7827)
!7875 = !DILocation(line: 256, column: 13, scope: !7876)
!7876 = distinct !DILexicalBlock(scope: !7827, file: !7613, line: 256, column: 7)
!7877 = !DILocation(line: 256, column: 18, scope: !7876)
!7878 = !DILocation(line: 256, column: 44, scope: !7876)
!7879 = !DILocation(line: 256, column: 7, scope: !7827)
!7880 = !DILocation(line: 258, column: 4, scope: !7881)
!7881 = distinct !DILexicalBlock(scope: !7882, file: !7613, line: 258, column: 4)
!7882 = distinct !DILexicalBlock(scope: !7883, file: !7613, line: 258, column: 4)
!7883 = distinct !DILexicalBlock(scope: !7884, file: !7613, line: 258, column: 4)
!7884 = distinct !DILexicalBlock(scope: !7885, file: !7613, line: 258, column: 4)
!7885 = distinct !DILexicalBlock(scope: !7876, file: !7613, line: 256, column: 50)
!7886 = !DILocation(line: 259, column: 24, scope: !7887)
!7887 = distinct !DILexicalBlock(scope: !7885, file: !7613, line: 259, column: 8)
!7888 = !DILocation(line: 259, column: 8, scope: !7885)
!7889 = !DILocation(line: 261, column: 15, scope: !7890)
!7890 = distinct !DILexicalBlock(scope: !7887, file: !7613, line: 259, column: 30)
!7891 = !DILocation(line: 262, column: 4, scope: !7890)
!7892 = !DILocation(line: 265, column: 12, scope: !7893)
!7893 = distinct !DILexicalBlock(scope: !7819, file: !7613, line: 265, column: 6)
!7894 = !DILocation(line: 265, column: 17, scope: !7893)
!7895 = !DILocation(line: 265, column: 42, scope: !7893)
!7896 = !DILocation(line: 265, column: 6, scope: !7819)
!7897 = !DILocation(line: 266, column: 3, scope: !7898)
!7898 = distinct !DILexicalBlock(scope: !7899, file: !7613, line: 266, column: 3)
!7899 = distinct !DILexicalBlock(scope: !7900, file: !7613, line: 266, column: 3)
!7900 = distinct !DILexicalBlock(scope: !7901, file: !7613, line: 266, column: 3)
!7901 = distinct !DILexicalBlock(scope: !7902, file: !7613, line: 266, column: 3)
!7902 = distinct !DILexicalBlock(scope: !7893, file: !7613, line: 265, column: 48)
!7903 = !DILocation(line: 267, column: 2, scope: !7902)
!7904 = !DILocation(line: 269, column: 12, scope: !7905)
!7905 = distinct !DILexicalBlock(scope: !7819, file: !7613, line: 269, column: 6)
!7906 = !DILocation(line: 269, column: 17, scope: !7905)
!7907 = !DILocation(line: 269, column: 41, scope: !7905)
!7908 = !DILocation(line: 269, column: 6, scope: !7819)
!7909 = !DILocation(line: 270, column: 3, scope: !7910)
!7910 = distinct !DILexicalBlock(scope: !7911, file: !7613, line: 270, column: 3)
!7911 = distinct !DILexicalBlock(scope: !7912, file: !7613, line: 270, column: 3)
!7912 = distinct !DILexicalBlock(scope: !7913, file: !7613, line: 270, column: 3)
!7913 = distinct !DILexicalBlock(scope: !7914, file: !7613, line: 270, column: 3)
!7914 = distinct !DILexicalBlock(scope: !7905, file: !7613, line: 269, column: 47)
!7915 = !DILocation(line: 272, column: 2, scope: !7914)
!7916 = !DILocation(line: 288, column: 12, scope: !7833)
!7917 = !DILocation(line: 288, column: 17, scope: !7833)
!7918 = !DILocation(line: 288, column: 41, scope: !7833)
!7919 = !DILocation(line: 289, column: 9, scope: !7833)
!7920 = !DILocation(line: 289, column: 14, scope: !7833)
!7921 = !DILocation(line: 288, column: 6, scope: !7819)
!7922 = !DILocation(line: 308, column: 12, scope: !7831)
!7923 = !DILocation(line: 308, column: 17, scope: !7831)
!7924 = !DILocation(line: 308, column: 7, scope: !7832)
!7925 = !DILocation(line: 310, column: 6, scope: !7830)
!7926 = !DILocation(line: 309, column: 29, scope: !7830)
!7927 = !DILocation(line: 0, scope: !7830)
!7928 = !DILocation(line: 312, column: 8, scope: !7929)
!7929 = distinct !DILexicalBlock(scope: !7830, file: !7613, line: 312, column: 8)
!7930 = !DILocation(line: 312, column: 8, scope: !7830)
!7931 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !7932, file: !7314, line: 1099, type: !108)
!7932 = distinct !DISubprogram(name: "__set_PSP", scope: !7314, file: !7314, line: 1099, type: !7403, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2881, retainedNodes: !7933)
!7933 = !{!7931}
!7934 = !DILocation(line: 0, scope: !7932, inlinedAt: !7935)
!7935 = distinct !DILocation(line: 338, column: 5, scope: !7936)
!7936 = distinct !DILexicalBlock(scope: !7929, file: !7613, line: 312, column: 23)
!7937 = !DILocation(line: 1101, column: 3, scope: !7932, inlinedAt: !7935)
!7938 = !{i64 3574843}
!7939 = !DILocation(line: 341, column: 4, scope: !7936)
!7940 = !DILocation(line: 360, column: 12, scope: !7941)
!7941 = distinct !DILexicalBlock(scope: !7819, file: !7613, line: 360, column: 6)
!7942 = !DILocation(line: 360, column: 17, scope: !7941)
!7943 = !DILocation(line: 360, column: 41, scope: !7941)
!7944 = !DILocation(line: 360, column: 6, scope: !7819)
!7945 = !DILocation(line: 361, column: 14, scope: !7946)
!7946 = distinct !DILexicalBlock(scope: !7941, file: !7613, line: 360, column: 47)
!7947 = !DILocation(line: 362, column: 2, scope: !7946)
!7948 = !DILocation(line: 366, column: 12, scope: !7819)
!7949 = !DILocation(line: 369, column: 15, scope: !7819)
!7950 = !DILocation(line: 371, column: 2, scope: !7819)
!7951 = distinct !DISubprogram(name: "bus_fault", scope: !7613, file: !7613, line: 383, type: !7952, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2881, retainedNodes: !7954)
!7952 = !DISubroutineType(types: !7953)
!7953 = !{!103, !2909, !103, !7680}
!7954 = !{!7955, !7956, !7957, !7958, !7959}
!7955 = !DILocalVariable(name: "esf", arg: 1, scope: !7951, file: !7613, line: 383, type: !2909)
!7956 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7951, file: !7613, line: 383, type: !103)
!7957 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7951, file: !7613, line: 383, type: !7680)
!7958 = !DILocalVariable(name: "reason", scope: !7951, file: !7613, line: 385, type: !108)
!7959 = !DILocalVariable(name: "bfar", scope: !7960, file: !7613, line: 405, type: !108)
!7960 = distinct !DILexicalBlock(scope: !7961, file: !7613, line: 395, column: 42)
!7961 = distinct !DILexicalBlock(scope: !7951, file: !7613, line: 395, column: 6)
!7962 = !DILocation(line: 0, scope: !7951)
!7963 = !DILocation(line: 387, column: 2, scope: !7964)
!7964 = distinct !DILexicalBlock(scope: !7965, file: !7613, line: 387, column: 2)
!7965 = distinct !DILexicalBlock(scope: !7966, file: !7613, line: 387, column: 2)
!7966 = distinct !DILexicalBlock(scope: !7967, file: !7613, line: 387, column: 2)
!7967 = distinct !DILexicalBlock(scope: !7951, file: !7613, line: 387, column: 2)
!7968 = !DILocation(line: 389, column: 11, scope: !7969)
!7969 = distinct !DILexicalBlock(scope: !7951, file: !7613, line: 389, column: 6)
!7970 = !DILocation(line: 389, column: 16, scope: !7969)
!7971 = !DILocation(line: 389, column: 6, scope: !7951)
!7972 = !DILocation(line: 390, column: 3, scope: !7973)
!7973 = distinct !DILexicalBlock(scope: !7974, file: !7613, line: 390, column: 3)
!7974 = distinct !DILexicalBlock(scope: !7975, file: !7613, line: 390, column: 3)
!7975 = distinct !DILexicalBlock(scope: !7976, file: !7613, line: 390, column: 3)
!7976 = distinct !DILexicalBlock(scope: !7977, file: !7613, line: 390, column: 3)
!7977 = distinct !DILexicalBlock(scope: !7969, file: !7613, line: 389, column: 39)
!7978 = !DILocation(line: 391, column: 2, scope: !7977)
!7979 = !DILocation(line: 392, column: 11, scope: !7980)
!7980 = distinct !DILexicalBlock(scope: !7951, file: !7613, line: 392, column: 6)
!7981 = !DILocation(line: 392, column: 16, scope: !7980)
!7982 = !DILocation(line: 392, column: 6, scope: !7951)
!7983 = !DILocation(line: 393, column: 3, scope: !7984)
!7984 = distinct !DILexicalBlock(scope: !7985, file: !7613, line: 393, column: 3)
!7985 = distinct !DILexicalBlock(scope: !7986, file: !7613, line: 393, column: 3)
!7986 = distinct !DILexicalBlock(scope: !7987, file: !7613, line: 393, column: 3)
!7987 = distinct !DILexicalBlock(scope: !7988, file: !7613, line: 393, column: 3)
!7988 = distinct !DILexicalBlock(scope: !7980, file: !7613, line: 392, column: 41)
!7989 = !DILocation(line: 394, column: 2, scope: !7988)
!7990 = !DILocation(line: 395, column: 11, scope: !7961)
!7991 = !DILocation(line: 395, column: 16, scope: !7961)
!7992 = !DILocation(line: 395, column: 6, scope: !7951)
!7993 = !DILocation(line: 396, column: 3, scope: !7994)
!7994 = distinct !DILexicalBlock(scope: !7995, file: !7613, line: 396, column: 3)
!7995 = distinct !DILexicalBlock(scope: !7996, file: !7613, line: 396, column: 3)
!7996 = distinct !DILexicalBlock(scope: !7997, file: !7613, line: 396, column: 3)
!7997 = distinct !DILexicalBlock(scope: !7960, file: !7613, line: 396, column: 3)
!7998 = !DILocation(line: 405, column: 3, scope: !7960)
!7999 = !DILocation(line: 0, scope: !7960)
!8000 = !DILocation(line: 407, column: 13, scope: !8001)
!8001 = distinct !DILexicalBlock(scope: !7960, file: !7613, line: 407, column: 7)
!8002 = !DILocation(line: 407, column: 18, scope: !8001)
!8003 = !DILocation(line: 407, column: 44, scope: !8001)
!8004 = !DILocation(line: 407, column: 7, scope: !7960)
!8005 = !DILocation(line: 408, column: 4, scope: !8006)
!8006 = distinct !DILexicalBlock(scope: !8007, file: !7613, line: 408, column: 4)
!8007 = distinct !DILexicalBlock(scope: !8008, file: !7613, line: 408, column: 4)
!8008 = distinct !DILexicalBlock(scope: !8009, file: !7613, line: 408, column: 4)
!8009 = distinct !DILexicalBlock(scope: !8010, file: !7613, line: 408, column: 4)
!8010 = distinct !DILexicalBlock(scope: !8001, file: !7613, line: 407, column: 50)
!8011 = !DILocation(line: 409, column: 24, scope: !8012)
!8012 = distinct !DILexicalBlock(scope: !8010, file: !7613, line: 409, column: 8)
!8013 = !DILocation(line: 409, column: 8, scope: !8010)
!8014 = !DILocation(line: 411, column: 15, scope: !8015)
!8015 = distinct !DILexicalBlock(scope: !8012, file: !7613, line: 409, column: 30)
!8016 = !DILocation(line: 412, column: 4, scope: !8015)
!8017 = !DILocation(line: 415, column: 11, scope: !8018)
!8018 = distinct !DILexicalBlock(scope: !7951, file: !7613, line: 415, column: 6)
!8019 = !DILocation(line: 415, column: 16, scope: !8018)
!8020 = !DILocation(line: 415, column: 6, scope: !7951)
!8021 = !DILocation(line: 416, column: 3, scope: !8022)
!8022 = distinct !DILexicalBlock(scope: !8023, file: !7613, line: 416, column: 3)
!8023 = distinct !DILexicalBlock(scope: !8024, file: !7613, line: 416, column: 3)
!8024 = distinct !DILexicalBlock(scope: !8025, file: !7613, line: 416, column: 3)
!8025 = distinct !DILexicalBlock(scope: !8026, file: !7613, line: 416, column: 3)
!8026 = distinct !DILexicalBlock(scope: !8018, file: !7613, line: 415, column: 44)
!8027 = !DILocation(line: 417, column: 2, scope: !8026)
!8028 = !DILocation(line: 418, column: 12, scope: !8029)
!8029 = distinct !DILexicalBlock(scope: !7951, file: !7613, line: 418, column: 6)
!8030 = !DILocation(line: 418, column: 17, scope: !8029)
!8031 = !DILocation(line: 418, column: 41, scope: !8029)
!8032 = !DILocation(line: 418, column: 6, scope: !7951)
!8033 = !DILocation(line: 423, column: 18, scope: !8034)
!8034 = distinct !DILexicalBlock(scope: !8029, file: !7613, line: 423, column: 13)
!8035 = !DILocation(line: 423, column: 23, scope: !8034)
!8036 = !DILocation(line: 423, column: 13, scope: !8029)
!8037 = !DILocation(line: 0, scope: !8029)
!8038 = !DILocation(line: 524, column: 12, scope: !7951)
!8039 = !DILocation(line: 526, column: 15, scope: !7951)
!8040 = !DILocation(line: 528, column: 2, scope: !7951)
!8041 = distinct !DISubprogram(name: "usage_fault", scope: !7613, file: !7613, line: 539, type: !8042, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2881, retainedNodes: !8046)
!8042 = !DISubroutineType(types: !8043)
!8043 = !{!108, !8044}
!8044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8045, size: 32)
!8045 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2910)
!8046 = !{!8047, !8048}
!8047 = !DILocalVariable(name: "esf", arg: 1, scope: !8041, file: !7613, line: 539, type: !8044)
!8048 = !DILocalVariable(name: "reason", scope: !8041, file: !7613, line: 541, type: !108)
!8049 = !DILocation(line: 0, scope: !8041)
!8050 = !DILocation(line: 543, column: 2, scope: !8051)
!8051 = distinct !DILexicalBlock(scope: !8052, file: !7613, line: 543, column: 2)
!8052 = distinct !DILexicalBlock(scope: !8053, file: !7613, line: 543, column: 2)
!8053 = distinct !DILexicalBlock(scope: !8054, file: !7613, line: 543, column: 2)
!8054 = distinct !DILexicalBlock(scope: !8041, file: !7613, line: 543, column: 2)
!8055 = !DILocation(line: 546, column: 12, scope: !8056)
!8056 = distinct !DILexicalBlock(scope: !8041, file: !7613, line: 546, column: 6)
!8057 = !DILocation(line: 546, column: 17, scope: !8056)
!8058 = !DILocation(line: 546, column: 43, scope: !8056)
!8059 = !DILocation(line: 546, column: 6, scope: !8041)
!8060 = !DILocation(line: 547, column: 3, scope: !8061)
!8061 = distinct !DILexicalBlock(scope: !8062, file: !7613, line: 547, column: 3)
!8062 = distinct !DILexicalBlock(scope: !8063, file: !7613, line: 547, column: 3)
!8063 = distinct !DILexicalBlock(scope: !8064, file: !7613, line: 547, column: 3)
!8064 = distinct !DILexicalBlock(scope: !8065, file: !7613, line: 547, column: 3)
!8065 = distinct !DILexicalBlock(scope: !8056, file: !7613, line: 546, column: 49)
!8066 = !DILocation(line: 548, column: 2, scope: !8065)
!8067 = !DILocation(line: 549, column: 12, scope: !8068)
!8068 = distinct !DILexicalBlock(scope: !8041, file: !7613, line: 549, column: 6)
!8069 = !DILocation(line: 549, column: 17, scope: !8068)
!8070 = !DILocation(line: 549, column: 43, scope: !8068)
!8071 = !DILocation(line: 549, column: 6, scope: !8041)
!8072 = !DILocation(line: 550, column: 3, scope: !8073)
!8073 = distinct !DILexicalBlock(scope: !8074, file: !7613, line: 550, column: 3)
!8074 = distinct !DILexicalBlock(scope: !8075, file: !7613, line: 550, column: 3)
!8075 = distinct !DILexicalBlock(scope: !8076, file: !7613, line: 550, column: 3)
!8076 = distinct !DILexicalBlock(scope: !8077, file: !7613, line: 550, column: 3)
!8077 = distinct !DILexicalBlock(scope: !8068, file: !7613, line: 549, column: 49)
!8078 = !DILocation(line: 551, column: 2, scope: !8077)
!8079 = !DILocation(line: 567, column: 12, scope: !8080)
!8080 = distinct !DILexicalBlock(scope: !8041, file: !7613, line: 567, column: 6)
!8081 = !DILocation(line: 567, column: 17, scope: !8080)
!8082 = !DILocation(line: 567, column: 38, scope: !8080)
!8083 = !DILocation(line: 567, column: 6, scope: !8041)
!8084 = !DILocation(line: 568, column: 3, scope: !8085)
!8085 = distinct !DILexicalBlock(scope: !8086, file: !7613, line: 568, column: 3)
!8086 = distinct !DILexicalBlock(scope: !8087, file: !7613, line: 568, column: 3)
!8087 = distinct !DILexicalBlock(scope: !8088, file: !7613, line: 568, column: 3)
!8088 = distinct !DILexicalBlock(scope: !8089, file: !7613, line: 568, column: 3)
!8089 = distinct !DILexicalBlock(scope: !8080, file: !7613, line: 567, column: 44)
!8090 = !DILocation(line: 569, column: 2, scope: !8089)
!8091 = !DILocation(line: 570, column: 12, scope: !8092)
!8092 = distinct !DILexicalBlock(scope: !8041, file: !7613, line: 570, column: 6)
!8093 = !DILocation(line: 570, column: 17, scope: !8092)
!8094 = !DILocation(line: 570, column: 39, scope: !8092)
!8095 = !DILocation(line: 570, column: 6, scope: !8041)
!8096 = !DILocation(line: 571, column: 3, scope: !8097)
!8097 = distinct !DILexicalBlock(scope: !8098, file: !7613, line: 571, column: 3)
!8098 = distinct !DILexicalBlock(scope: !8099, file: !7613, line: 571, column: 3)
!8099 = distinct !DILexicalBlock(scope: !8100, file: !7613, line: 571, column: 3)
!8100 = distinct !DILexicalBlock(scope: !8101, file: !7613, line: 571, column: 3)
!8101 = distinct !DILexicalBlock(scope: !8092, file: !7613, line: 570, column: 45)
!8102 = !DILocation(line: 572, column: 2, scope: !8101)
!8103 = !DILocation(line: 573, column: 12, scope: !8104)
!8104 = distinct !DILexicalBlock(scope: !8041, file: !7613, line: 573, column: 6)
!8105 = !DILocation(line: 573, column: 17, scope: !8104)
!8106 = !DILocation(line: 573, column: 42, scope: !8104)
!8107 = !DILocation(line: 573, column: 6, scope: !8041)
!8108 = !DILocation(line: 574, column: 3, scope: !8109)
!8109 = distinct !DILexicalBlock(scope: !8110, file: !7613, line: 574, column: 3)
!8110 = distinct !DILexicalBlock(scope: !8111, file: !7613, line: 574, column: 3)
!8111 = distinct !DILexicalBlock(scope: !8112, file: !7613, line: 574, column: 3)
!8112 = distinct !DILexicalBlock(scope: !8113, file: !7613, line: 574, column: 3)
!8113 = distinct !DILexicalBlock(scope: !8104, file: !7613, line: 573, column: 48)
!8114 = !DILocation(line: 575, column: 2, scope: !8113)
!8115 = !DILocation(line: 576, column: 12, scope: !8116)
!8116 = distinct !DILexicalBlock(scope: !8041, file: !7613, line: 576, column: 6)
!8117 = !DILocation(line: 576, column: 17, scope: !8116)
!8118 = !DILocation(line: 576, column: 44, scope: !8116)
!8119 = !DILocation(line: 576, column: 6, scope: !8041)
!8120 = !DILocation(line: 577, column: 3, scope: !8121)
!8121 = distinct !DILexicalBlock(scope: !8122, file: !7613, line: 577, column: 3)
!8122 = distinct !DILexicalBlock(scope: !8123, file: !7613, line: 577, column: 3)
!8123 = distinct !DILexicalBlock(scope: !8124, file: !7613, line: 577, column: 3)
!8124 = distinct !DILexicalBlock(scope: !8125, file: !7613, line: 577, column: 3)
!8125 = distinct !DILexicalBlock(scope: !8116, file: !7613, line: 576, column: 50)
!8126 = !DILocation(line: 578, column: 2, scope: !8125)
!8127 = !DILocation(line: 581, column: 12, scope: !8041)
!8128 = !DILocation(line: 583, column: 2, scope: !8041)
!8129 = distinct !DISubprogram(name: "debug_monitor", scope: !7613, file: !7613, line: 632, type: !8130, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2881, retainedNodes: !8132)
!8130 = !DISubroutineType(types: !8131)
!8131 = !{null, !2909, !7680}
!8132 = !{!8133, !8134}
!8133 = !DILocalVariable(name: "esf", arg: 1, scope: !8129, file: !7613, line: 632, type: !2909)
!8134 = !DILocalVariable(name: "recoverable", arg: 2, scope: !8129, file: !7613, line: 632, type: !7680)
!8135 = !DILocation(line: 0, scope: !8129)
!8136 = !DILocation(line: 634, column: 15, scope: !8129)
!8137 = !DILocation(line: 636, column: 2, scope: !8138)
!8138 = distinct !DILexicalBlock(scope: !8139, file: !7613, line: 636, column: 2)
!8139 = distinct !DILexicalBlock(scope: !8140, file: !7613, line: 636, column: 2)
!8140 = distinct !DILexicalBlock(scope: !8141, file: !7613, line: 636, column: 2)
!8141 = distinct !DILexicalBlock(scope: !8129, file: !7613, line: 636, column: 2)
!8142 = !DILocation(line: 652, column: 1, scope: !8129)
!8143 = distinct !DISubprogram(name: "reserved_exception", scope: !7613, file: !7613, line: 776, type: !8144, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2881, retainedNodes: !8146)
!8144 = !DISubroutineType(types: !8145)
!8145 = !{null, !8044, !103}
!8146 = !{!8147, !8148}
!8147 = !DILocalVariable(name: "esf", arg: 1, scope: !8143, file: !7613, line: 776, type: !8044)
!8148 = !DILocalVariable(name: "fault", arg: 2, scope: !8143, file: !7613, line: 776, type: !103)
!8149 = !DILocation(line: 0, scope: !8143)
!8150 = !DILocation(line: 780, column: 2, scope: !8151)
!8151 = distinct !DILexicalBlock(scope: !8152, file: !7613, line: 780, column: 2)
!8152 = distinct !DILexicalBlock(scope: !8153, file: !7613, line: 780, column: 2)
!8153 = distinct !DILexicalBlock(scope: !8154, file: !7613, line: 780, column: 2)
!8154 = distinct !DILexicalBlock(scope: !8143, file: !7613, line: 780, column: 2)
!8155 = !DILocation(line: 783, column: 1, scope: !8143)
!8156 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !7613, file: !7613, line: 658, type: !8157, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2881, retainedNodes: !8159)
!8157 = !DISubroutineType(types: !8158)
!8158 = !{!131, !2909}
!8159 = !{!8160, !8161, !8162}
!8160 = !DILocalVariable(name: "esf", arg: 1, scope: !8156, file: !7613, line: 658, type: !2909)
!8161 = !DILocalVariable(name: "ret_addr", scope: !8156, file: !7613, line: 660, type: !2683)
!8162 = !DILocalVariable(name: "fault_insn", scope: !8156, file: !7613, line: 686, type: !121)
!8163 = !DILocation(line: 0, scope: !8156)
!8164 = !DILocation(line: 660, column: 46, scope: !8156)
!8165 = !DILocation(line: 660, column: 23, scope: !8156)
!8166 = !DILocation(line: 682, column: 11, scope: !8156)
!8167 = !DILocation(line: 271, column: 3, scope: !8168, inlinedAt: !8169)
!8168 = distinct !DISubprogram(name: "__DSB", scope: !7314, file: !7314, line: 269, type: !334, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2881, retainedNodes: !251)
!8169 = distinct !DILocation(line: 683, column: 2, scope: !8156)
!8170 = !{i64 3550978}
!8171 = !DILocation(line: 260, column: 3, scope: !8172, inlinedAt: !8173)
!8172 = distinct !DISubprogram(name: "__ISB", scope: !7314, file: !7314, line: 258, type: !334, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2881, retainedNodes: !251)
!8173 = distinct !DILocation(line: 684, column: 2, scope: !8156)
!8174 = !{i64 3550695}
!8175 = !DILocation(line: 686, column: 35, scope: !8156)
!8176 = !DILocation(line: 686, column: 24, scope: !8156)
!8177 = !DILocation(line: 688, column: 11, scope: !8156)
!8178 = !DILocation(line: 271, column: 3, scope: !8168, inlinedAt: !8179)
!8179 = distinct !DILocation(line: 689, column: 2, scope: !8156)
!8180 = !DILocation(line: 260, column: 3, scope: !8172, inlinedAt: !8181)
!8181 = distinct !DILocation(line: 690, column: 2, scope: !8156)
!8182 = !DILocation(line: 693, column: 45, scope: !8183)
!8183 = distinct !DILexicalBlock(scope: !8156, file: !7613, line: 693, column: 6)
!8184 = !DILocation(line: 699, column: 1, scope: !8156)
!8185 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !7613, file: !7613, line: 1107, type: !334, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2881, retainedNodes: !251)
!8186 = !DILocation(line: 1111, column: 11, scope: !8185)
!8187 = !DILocation(line: 1136, column: 1, scope: !8185)
!8188 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !8189, file: !8189, line: 26, type: !334, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2952, retainedNodes: !8190)
!8189 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8190 = !{!8191}
!8191 = !DILocalVariable(name: "irq", scope: !8188, file: !8189, line: 28, type: !103)
!8192 = !DILocation(line: 0, scope: !8188)
!8193 = !DILocation(line: 30, column: 2, scope: !8194)
!8194 = distinct !DILexicalBlock(scope: !8188, file: !8189, line: 30, column: 2)
!8195 = !DILocation(line: 31, column: 3, scope: !8196)
!8196 = distinct !DILexicalBlock(scope: !8197, file: !8189, line: 30, column: 39)
!8197 = distinct !DILexicalBlock(scope: !8194, file: !8189, line: 30, column: 2)
!8198 = !DILocation(line: 30, column: 35, scope: !8197)
!8199 = !DILocation(line: 30, column: 13, scope: !8197)
!8200 = distinct !{!8200, !8193, !8201}
!8201 = !DILocation(line: 32, column: 2, scope: !8194)
!8202 = !DILocation(line: 33, column: 1, scope: !8188)
!8203 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !624, file: !624, line: 1814, type: !7348, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2952, retainedNodes: !8204)
!8204 = !{!8205, !8206}
!8205 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8203, file: !624, line: 1814, type: !892)
!8206 = !DILocalVariable(name: "priority", arg: 2, scope: !8203, file: !624, line: 1814, type: !108)
!8207 = !DILocation(line: 0, scope: !8203)
!8208 = !DILocation(line: 1816, column: 7, scope: !8203)
!8209 = !DILocation(line: 0, scope: !8210)
!8210 = distinct !DILexicalBlock(scope: !8203, file: !624, line: 1816, column: 7)
!8211 = !DILocation(line: 1824, column: 1, scope: !8203)
!8212 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !8213, file: !8213, line: 27, type: !8214, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2997, retainedNodes: !8317)
!8213 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8214 = !DISubroutineType(types: !8215)
!8215 = !{null, !8216}
!8216 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !163, line: 347, baseType: !8217)
!8217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8218, size: 32)
!8218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !8219)
!8219 = !{!8220, !8278, !8290, !8291, !8292, !8293, !8299, !8312}
!8220 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8218, file: !163, line: 247, baseType: !8221, size: 384)
!8221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !8222)
!8222 = !{!8223, !8247, !8254, !8255, !8256, !8265, !8266, !8267}
!8223 = !DIDerivedType(tag: DW_TAG_member, scope: !8221, file: !163, line: 60, baseType: !8224, size: 64)
!8224 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8221, file: !163, line: 60, size: 64, elements: !8225)
!8225 = !{!8226, !8241}
!8226 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !8224, file: !163, line: 61, baseType: !8227, size: 64)
!8227 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !8228)
!8228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !8229)
!8229 = !{!8230, !8236}
!8230 = !DIDerivedType(tag: DW_TAG_member, scope: !8228, file: !146, line: 38, baseType: !8231, size: 32)
!8231 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8228, file: !146, line: 38, size: 32, elements: !8232)
!8232 = !{!8233, !8235}
!8233 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8231, file: !146, line: 39, baseType: !8234, size: 32)
!8234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8228, size: 32)
!8235 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8231, file: !146, line: 40, baseType: !8234, size: 32)
!8236 = !DIDerivedType(tag: DW_TAG_member, scope: !8228, file: !146, line: 42, baseType: !8237, size: 32, offset: 32)
!8237 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8228, file: !146, line: 42, size: 32, elements: !8238)
!8238 = !{!8239, !8240}
!8239 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8237, file: !146, line: 43, baseType: !8234, size: 32)
!8240 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8237, file: !146, line: 44, baseType: !8234, size: 32)
!8241 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !8224, file: !163, line: 62, baseType: !8242, size: 64)
!8242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !8243)
!8243 = !{!8244}
!8244 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !8242, file: !175, line: 50, baseType: !8245, size: 64)
!8245 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8246, size: 64, elements: !180)
!8246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8242, size: 32)
!8247 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !8221, file: !163, line: 68, baseType: !8248, size: 32, offset: 64)
!8248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8249, size: 32)
!8249 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !8250)
!8250 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !8251)
!8251 = !{!8252}
!8252 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8250, file: !141, line: 232, baseType: !8253, size: 64)
!8253 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !8228)
!8254 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !8221, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!8255 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !8221, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!8256 = !DIDerivedType(tag: DW_TAG_member, scope: !8221, file: !163, line: 90, baseType: !8257, size: 16, offset: 112)
!8257 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8221, file: !163, line: 90, size: 16, elements: !8258)
!8258 = !{!8259, !8264}
!8259 = !DIDerivedType(tag: DW_TAG_member, scope: !8257, file: !163, line: 91, baseType: !8260, size: 16)
!8260 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8257, file: !163, line: 91, size: 16, elements: !8261)
!8261 = !{!8262, !8263}
!8262 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !8260, file: !163, line: 96, baseType: !195, size: 8)
!8263 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !8260, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!8264 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !8257, file: !163, line: 100, baseType: !121, size: 16)
!8265 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !8221, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!8266 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !8221, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!8267 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !8221, file: !163, line: 131, baseType: !8268, size: 192, offset: 192)
!8268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !8269)
!8269 = !{!8270, !8271, !8277}
!8270 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !8268, file: !141, line: 245, baseType: !8227, size: 64)
!8271 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !8268, file: !141, line: 246, baseType: !8272, size: 32, offset: 64)
!8272 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !8273)
!8273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8274, size: 32)
!8274 = !DISubroutineType(types: !8275)
!8275 = !{null, !8276}
!8276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8268, size: 32)
!8277 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !8268, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!8278 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !8218, file: !163, line: 250, baseType: !8279, size: 288, offset: 384)
!8279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !8280)
!8280 = !{!8281, !8282, !8283, !8284, !8285, !8286, !8287, !8288, !8289}
!8281 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8279, file: !214, line: 26, baseType: !108, size: 32)
!8282 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8279, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!8283 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8279, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!8284 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8279, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!8285 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8279, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!8286 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8279, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!8287 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8279, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!8288 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8279, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!8289 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8279, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!8290 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !8218, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!8291 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !8218, file: !163, line: 256, baseType: !8249, size: 64, offset: 704)
!8292 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !8218, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!8293 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !8218, file: !163, line: 300, baseType: !8294, size: 96, offset: 800)
!8294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !8295)
!8295 = !{!8296, !8297, !8298}
!8296 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8294, file: !163, line: 153, baseType: !22, size: 32)
!8297 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8294, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!8298 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !8294, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!8299 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !8218, file: !163, line: 325, baseType: !8300, size: 32, offset: 896)
!8300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8301, size: 32)
!8301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !8302)
!8302 = !{!8303, !8309, !8310}
!8303 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8301, file: !137, line: 5074, baseType: !8304, size: 96)
!8304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !8305)
!8305 = !{!8306, !8307, !8308}
!8306 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8304, file: !240, line: 57, baseType: !243, size: 32)
!8307 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !8304, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!8308 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !8304, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!8309 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8301, file: !137, line: 5075, baseType: !8249, size: 64, offset: 96)
!8310 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8301, file: !137, line: 5076, baseType: !8311, offset: 160)
!8311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!8312 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !8218, file: !163, line: 343, baseType: !8313, size: 64, offset: 928)
!8313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !8314)
!8314 = !{!8315, !8316}
!8315 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !8313, file: !214, line: 63, baseType: !108, size: 32)
!8316 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !8313, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!8317 = !{!8318}
!8318 = !DILocalVariable(name: "thread", arg: 1, scope: !8212, file: !8213, line: 27, type: !8216)
!8319 = !DILocation(line: 0, scope: !8212)
!8320 = !DILocation(line: 29, column: 6, scope: !8321)
!8321 = distinct !DILexicalBlock(scope: !8212, file: !8213, line: 29, column: 6)
!8322 = !DILocation(line: 29, column: 15, scope: !8321)
!8323 = !DILocation(line: 29, column: 6, scope: !8212)
!8324 = !DILocation(line: 1031, column: 3, scope: !8325, inlinedAt: !8328)
!8325 = distinct !DISubprogram(name: "__get_IPSR", scope: !7314, file: !7314, line: 1027, type: !3598, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2997, retainedNodes: !8326)
!8326 = !{!8327}
!8327 = !DILocalVariable(name: "result", scope: !8325, file: !7314, line: 1029, type: !108)
!8328 = distinct !DILocation(line: 48, column: 10, scope: !8329, inlinedAt: !8333)
!8329 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8330, file: !8330, line: 46, type: !8331, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2997, retainedNodes: !251)
!8330 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8331 = !DISubroutineType(types: !8332)
!8332 = !{!131}
!8333 = distinct !DILocation(line: 30, column: 7, scope: !8334)
!8334 = distinct !DILexicalBlock(scope: !8335, file: !8213, line: 30, column: 7)
!8335 = distinct !DILexicalBlock(scope: !8321, file: !8213, line: 29, column: 26)
!8336 = !{i64 3539826}
!8337 = !DILocation(line: 0, scope: !8325, inlinedAt: !8328)
!8338 = !DILocation(line: 48, column: 9, scope: !8329, inlinedAt: !8333)
!8339 = !DILocation(line: 30, column: 7, scope: !8335)
!8340 = !DILocation(line: 42, column: 14, scope: !8341)
!8341 = distinct !DILexicalBlock(scope: !8334, file: !8213, line: 30, column: 25)
!8342 = !DILocation(line: 48, column: 15, scope: !8341)
!8343 = !DILocation(line: 49, column: 3, scope: !8341)
!8344 = !DILocation(line: 52, column: 2, scope: !8212)
!8345 = !DILocation(line: 53, column: 1, scope: !8212)
!8346 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !486, file: !486, line: 127, type: !334, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !479, retainedNodes: !251)
!8347 = !DILocation(line: 134, column: 2, scope: !8346)
!8348 = !DILocation(line: 156, column: 1, scope: !8346)
!8349 = !DILocation(line: 0, scope: !485)
!8350 = !DILocation(line: 289, column: 36, scope: !8351)
!8351 = distinct !DILexicalBlock(scope: !485, file: !486, line: 285, column: 2)
!8352 = !DILocation(line: 289, column: 42, scope: !8351)
!8353 = !DILocation(line: 300, column: 36, scope: !485)
!8354 = !DILocation(line: 301, column: 35, scope: !485)
!8355 = !DILocation(line: 302, column: 37, scope: !485)
!8356 = !DILocation(line: 311, column: 2, scope: !485)
!8357 = !DILocation(line: 316, column: 1, scope: !485)
!8358 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !652, file: !652, line: 180, type: !334, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !251)
!8359 = !DILocation(line: 188, column: 12, scope: !8358)
!8360 = !DILocation(line: 271, column: 3, scope: !8361, inlinedAt: !8362)
!8361 = distinct !DISubprogram(name: "__DSB", scope: !7314, file: !7314, line: 269, type: !334, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !251)
!8362 = distinct !DILocation(line: 192, column: 2, scope: !8358)
!8363 = !{i64 3700504}
!8364 = !DILocation(line: 260, column: 3, scope: !8365, inlinedAt: !8366)
!8365 = distinct !DISubprogram(name: "__ISB", scope: !7314, file: !7314, line: 258, type: !334, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !251)
!8366 = distinct !DILocation(line: 193, column: 2, scope: !8358)
!8367 = !{i64 3700221}
!8368 = !DILocation(line: 194, column: 1, scope: !8358)
!8369 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !652, file: !652, line: 199, type: !334, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !251)
!8370 = !DILocation(line: 282, column: 3, scope: !8371, inlinedAt: !8372)
!8371 = distinct !DISubprogram(name: "__DMB", scope: !7314, file: !7314, line: 280, type: !334, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !251)
!8372 = distinct !DILocation(line: 202, column: 2, scope: !8369)
!8373 = !{i64 3700780}
!8374 = !DILocation(line: 205, column: 12, scope: !8369)
!8375 = !DILocation(line: 206, column: 1, scope: !8369)
!8376 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !652, file: !652, line: 275, type: !8377, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8390)
!8377 = !DISubroutineType(types: !8378)
!8378 = !{null, !8379, !1916, !7580, !7580}
!8379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8380, size: 32)
!8380 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8381)
!8381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !596, line: 52, size: 96, elements: !8382)
!8382 = !{!8383, !8384, !8385}
!8383 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8381, file: !596, line: 53, baseType: !22, size: 32)
!8384 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8381, file: !596, line: 54, baseType: !132, size: 32, offset: 32)
!8385 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !8381, file: !596, line: 55, baseType: !8386, size: 32, offset: 64)
!8386 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !602, line: 151, baseType: !8387)
!8387 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !602, line: 149, size: 32, elements: !8388)
!8388 = !{!8389}
!8389 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !8387, file: !602, line: 150, baseType: !108, size: 32)
!8390 = !{!8391, !8392, !8393, !8394}
!8391 = !DILocalVariable(name: "static_regions", arg: 1, scope: !8376, file: !652, line: 276, type: !8379)
!8392 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8376, file: !652, line: 276, type: !1916)
!8393 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !8376, file: !652, line: 277, type: !7580)
!8394 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !8376, file: !652, line: 277, type: !7580)
!8395 = !DILocation(line: 0, scope: !8376)
!8396 = !DILocation(line: 279, column: 6, scope: !8397)
!8397 = distinct !DILexicalBlock(scope: !8376, file: !652, line: 279, column: 6)
!8398 = !DILocation(line: 285, column: 1, scope: !8376)
!8399 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !8400, file: !8400, line: 220, type: !8401, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8403)
!8400 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8401 = !DISubroutineType(types: !8402)
!8402 = !{!103, !8379, !1916, !7580, !7580}
!8403 = !{!8404, !8405, !8406, !8407, !8408}
!8404 = !DILocalVariable(name: "static_regions", arg: 1, scope: !8399, file: !8400, line: 221, type: !8379)
!8405 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8399, file: !8400, line: 221, type: !1916)
!8406 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !8399, file: !8400, line: 222, type: !7580)
!8407 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !8399, file: !8400, line: 223, type: !7580)
!8408 = !DILocalVariable(name: "mpu_reg_index", scope: !8399, file: !8400, line: 225, type: !103)
!8409 = !DILocation(line: 0, scope: !8399)
!8410 = !DILocation(line: 225, column: 22, scope: !8399)
!8411 = !DILocation(line: 233, column: 18, scope: !8399)
!8412 = !DILocation(line: 236, column: 23, scope: !8399)
!8413 = !DILocation(line: 236, column: 21, scope: !8399)
!8414 = !DILocation(line: 238, column: 2, scope: !8399)
!8415 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !652, file: !652, line: 105, type: !8416, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8418)
!8416 = !DISubroutineType(types: !8417)
!8417 = !{!103, !8379, !185, !185, !131}
!8418 = !{!8419, !8420, !8421, !8422, !8423, !8424}
!8419 = !DILocalVariable(name: "regions", arg: 1, scope: !8415, file: !652, line: 106, type: !8379)
!8420 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8415, file: !652, line: 106, type: !185)
!8421 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !8415, file: !652, line: 106, type: !185)
!8422 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !8415, file: !652, line: 107, type: !131)
!8423 = !DILocalVariable(name: "i", scope: !8415, file: !652, line: 109, type: !103)
!8424 = !DILocalVariable(name: "reg_index", scope: !8415, file: !652, line: 110, type: !103)
!8425 = !DILocation(line: 0, scope: !8415)
!8426 = !DILocation(line: 110, column: 18, scope: !8415)
!8427 = !DILocation(line: 112, column: 16, scope: !8428)
!8428 = distinct !DILexicalBlock(scope: !8429, file: !652, line: 112, column: 2)
!8429 = distinct !DILexicalBlock(scope: !8415, file: !652, line: 112, column: 2)
!8430 = !DILocation(line: 112, column: 2, scope: !8429)
!8431 = !DILocation(line: 113, column: 7, scope: !8432)
!8432 = distinct !DILexicalBlock(scope: !8433, file: !652, line: 113, column: 7)
!8433 = distinct !DILexicalBlock(scope: !8428, file: !652, line: 112, column: 36)
!8434 = !DILocation(line: 113, column: 18, scope: !8432)
!8435 = !DILocation(line: 113, column: 23, scope: !8432)
!8436 = !DILocation(line: 113, column: 7, scope: !8433)
!8437 = !DILocation(line: 118, column: 23, scope: !8438)
!8438 = distinct !DILexicalBlock(scope: !8433, file: !652, line: 118, column: 7)
!8439 = !DILocation(line: 119, column: 7, scope: !8438)
!8440 = !DILocation(line: 118, column: 7, scope: !8433)
!8441 = !DILocation(line: 120, column: 4, scope: !8442)
!8442 = distinct !DILexicalBlock(scope: !8443, file: !652, line: 120, column: 4)
!8443 = distinct !DILexicalBlock(scope: !8444, file: !652, line: 120, column: 4)
!8444 = distinct !DILexicalBlock(scope: !8445, file: !652, line: 120, column: 4)
!8445 = distinct !DILexicalBlock(scope: !8446, file: !652, line: 120, column: 4)
!8446 = distinct !DILexicalBlock(scope: !8438, file: !652, line: 119, column: 45)
!8447 = !DILocation(line: 121, column: 4, scope: !8446)
!8448 = !DILocation(line: 124, column: 36, scope: !8433)
!8449 = !DILocation(line: 124, column: 15, scope: !8433)
!8450 = !DILocation(line: 126, column: 17, scope: !8451)
!8451 = distinct !DILexicalBlock(scope: !8433, file: !652, line: 126, column: 7)
!8452 = !DILocation(line: 126, column: 7, scope: !8433)
!8453 = !DILocation(line: 131, column: 12, scope: !8433)
!8454 = !DILocation(line: 132, column: 2, scope: !8433)
!8455 = !DILocation(line: 112, column: 32, scope: !8428)
!8456 = distinct !{!8456, !8430, !8457}
!8457 = !DILocation(line: 132, column: 2, scope: !8429)
!8458 = !DILocation(line: 135, column: 1, scope: !8415)
!8459 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !8400, file: !8400, line: 63, type: !8460, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8462)
!8460 = !DISubroutineType(types: !8461)
!8461 = !{!103, !8379}
!8462 = !{!8463, !8464}
!8463 = !DILocalVariable(name: "part", arg: 1, scope: !8459, file: !8400, line: 63, type: !8379)
!8464 = !DILocalVariable(name: "partition_is_valid", scope: !8459, file: !8400, line: 70, type: !103)
!8465 = !DILocation(line: 0, scope: !8459)
!8466 = !DILocation(line: 71, column: 11, scope: !8459)
!8467 = !DILocation(line: 71, column: 37, scope: !8459)
!8468 = !DILocation(line: 72, column: 3, scope: !8459)
!8469 = !DILocation(line: 71, column: 30, scope: !8459)
!8470 = !DILocation(line: 75, column: 11, scope: !8459)
!8471 = !DILocation(line: 75, column: 17, scope: !8459)
!8472 = !DILocation(line: 75, column: 38, scope: !8459)
!8473 = !DILocation(line: 77, column: 2, scope: !8459)
!8474 = distinct !DISubprogram(name: "mpu_configure_region", scope: !652, file: !652, line: 79, type: !8475, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8477)
!8475 = !DISubroutineType(types: !8476)
!8476 = !{!103, !1916, !8379}
!8477 = !{!8478, !8479, !8480}
!8478 = !DILocalVariable(name: "index", arg: 1, scope: !8474, file: !652, line: 79, type: !1916)
!8479 = !DILocalVariable(name: "new_region", arg: 2, scope: !8474, file: !652, line: 80, type: !8379)
!8480 = !DILocalVariable(name: "region_conf", scope: !8474, file: !652, line: 82, type: !641)
!8481 = !DILocation(line: 0, scope: !8474)
!8482 = !DILocation(line: 82, column: 2, scope: !8474)
!8483 = !DILocation(line: 82, column: 24, scope: !8474)
!8484 = !DILocation(line: 87, column: 33, scope: !8474)
!8485 = !DILocation(line: 87, column: 14, scope: !8474)
!8486 = !DILocation(line: 87, column: 19, scope: !8474)
!8487 = !DILocation(line: 91, column: 55, scope: !8474)
!8488 = !DILocation(line: 92, column: 16, scope: !8474)
!8489 = !DILocation(line: 92, column: 53, scope: !8474)
!8490 = !DILocation(line: 91, column: 2, scope: !8474)
!8491 = !DILocation(line: 95, column: 9, scope: !8474)
!8492 = !DILocation(line: 97, column: 1, scope: !8474)
!8493 = !DILocation(line: 95, column: 2, scope: !8474)
!8494 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !8400, file: !8400, line: 113, type: !8495, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8500)
!8495 = !DISubroutineType(types: !8496)
!8496 = !{null, !8497, !8498, !108, !108}
!8497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !647, size: 32)
!8498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8499, size: 32)
!8499 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8386)
!8500 = !{!8501, !8502, !8503, !8504}
!8501 = !DILocalVariable(name: "p_attr", arg: 1, scope: !8494, file: !8400, line: 114, type: !8497)
!8502 = !DILocalVariable(name: "attr", arg: 2, scope: !8494, file: !8400, line: 115, type: !8498)
!8503 = !DILocalVariable(name: "base", arg: 3, scope: !8494, file: !8400, line: 115, type: !108)
!8504 = !DILocalVariable(name: "size", arg: 4, scope: !8494, file: !8400, line: 115, type: !108)
!8505 = !DILocation(line: 0, scope: !8494)
!8506 = !DILocation(line: 127, column: 23, scope: !8494)
!8507 = !DILocation(line: 127, column: 35, scope: !8494)
!8508 = !DILocation(line: 127, column: 33, scope: !8494)
!8509 = !DILocation(line: 127, column: 10, scope: !8494)
!8510 = !DILocation(line: 127, column: 15, scope: !8494)
!8511 = !DILocation(line: 129, column: 1, scope: !8494)
!8512 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !652, file: !652, line: 57, type: !8513, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8515)
!8513 = !DISubroutineType(types: !8514)
!8514 = !{!103, !1916, !639}
!8515 = !{!8516, !8517}
!8516 = !DILocalVariable(name: "index", arg: 1, scope: !8512, file: !652, line: 57, type: !1916)
!8517 = !DILocalVariable(name: "region_conf", arg: 2, scope: !8512, file: !652, line: 58, type: !639)
!8518 = !DILocation(line: 0, scope: !8512)
!8519 = !DILocation(line: 61, column: 6, scope: !8520)
!8520 = distinct !DILexicalBlock(scope: !8512, file: !652, line: 61, column: 6)
!8521 = !DILocation(line: 61, column: 12, scope: !8520)
!8522 = !DILocation(line: 61, column: 6, scope: !8512)
!8523 = !DILocation(line: 64, column: 3, scope: !8524)
!8524 = distinct !DILexicalBlock(scope: !8525, file: !652, line: 64, column: 3)
!8525 = distinct !DILexicalBlock(scope: !8526, file: !652, line: 64, column: 3)
!8526 = distinct !DILexicalBlock(scope: !8527, file: !652, line: 64, column: 3)
!8527 = distinct !DILexicalBlock(scope: !8528, file: !652, line: 64, column: 3)
!8528 = distinct !DILexicalBlock(scope: !8520, file: !652, line: 61, column: 40)
!8529 = !DILocation(line: 65, column: 3, scope: !8528)
!8530 = !DILocation(line: 71, column: 2, scope: !8512)
!8531 = !DILocation(line: 73, column: 2, scope: !8512)
!8532 = !DILocation(line: 74, column: 1, scope: !8512)
!8533 = distinct !DISubprogram(name: "region_init", scope: !8400, file: !8400, line: 29, type: !8534, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8536)
!8534 = !DISubroutineType(types: !8535)
!8535 = !{null, !7580, !639}
!8536 = !{!8537, !8538}
!8537 = !DILocalVariable(name: "index", arg: 1, scope: !8533, file: !8400, line: 29, type: !7580)
!8538 = !DILocalVariable(name: "region_conf", arg: 2, scope: !8533, file: !8400, line: 30, type: !639)
!8539 = !DILocation(line: 0, scope: !8533)
!8540 = !DILocation(line: 33, column: 2, scope: !8533)
!8541 = !DILocation(line: 47, column: 28, scope: !8533)
!8542 = !DILocation(line: 47, column: 33, scope: !8533)
!8543 = !DILocation(line: 48, column: 26, scope: !8533)
!8544 = !DILocation(line: 47, column: 12, scope: !8533)
!8545 = !DILocation(line: 49, column: 32, scope: !8533)
!8546 = !DILocation(line: 49, column: 37, scope: !8533)
!8547 = !DILocation(line: 49, column: 12, scope: !8533)
!8548 = !DILocation(line: 53, column: 1, scope: !8533)
!8549 = distinct !DISubprogram(name: "set_region_number", scope: !8550, file: !8550, line: 32, type: !7403, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8551)
!8550 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8551 = !{!8552}
!8552 = !DILocalVariable(name: "index", arg: 1, scope: !8549, file: !8550, line: 32, type: !108)
!8553 = !DILocation(line: 0, scope: !8549)
!8554 = !DILocation(line: 34, column: 11, scope: !8549)
!8555 = !DILocation(line: 35, column: 1, scope: !8549)
!8556 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !8400, file: !8400, line: 88, type: !8557, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8559)
!8557 = !DISubroutineType(types: !8558)
!8558 = !{!108, !108}
!8559 = !{!8560}
!8560 = !DILocalVariable(name: "size", arg: 1, scope: !8556, file: !8400, line: 88, type: !108)
!8561 = !DILocation(line: 0, scope: !8556)
!8562 = !DILocation(line: 91, column: 11, scope: !8563)
!8563 = distinct !DILexicalBlock(scope: !8556, file: !8400, line: 91, column: 6)
!8564 = !DILocation(line: 91, column: 6, scope: !8556)
!8565 = !DILocation(line: 100, column: 11, scope: !8566)
!8566 = distinct !DILexicalBlock(scope: !8556, file: !8400, line: 100, column: 6)
!8567 = !DILocation(line: 100, column: 6, scope: !8556)
!8568 = !DILocation(line: 104, column: 35, scope: !8556)
!8569 = !DILocation(line: 104, column: 16, scope: !8556)
!8570 = !DILocation(line: 104, column: 50, scope: !8556)
!8571 = !DILocation(line: 104, column: 72, scope: !8556)
!8572 = !DILocation(line: 104, column: 2, scope: !8556)
!8573 = !DILocation(line: 106, column: 1, scope: !8556)
!8574 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !652, file: !652, line: 307, type: !8575, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8577)
!8575 = !DISubroutineType(types: !8576)
!8576 = !{null, !8379, !185}
!8577 = !{!8578, !8579}
!8578 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !8574, file: !652, line: 308, type: !8379)
!8579 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8574, file: !652, line: 308, type: !185)
!8580 = !DILocation(line: 0, scope: !8574)
!8581 = !DILocation(line: 310, column: 6, scope: !8582)
!8582 = distinct !DILexicalBlock(scope: !8574, file: !652, line: 310, column: 6)
!8583 = !DILocation(line: 316, column: 1, scope: !8574)
!8584 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !8400, file: !8400, line: 249, type: !8585, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8587)
!8585 = !DISubroutineType(types: !8586)
!8586 = !{!103, !8379, !185}
!8587 = !{!8588, !8589, !8590, !8591}
!8588 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !8584, file: !8400, line: 250, type: !8379)
!8589 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8584, file: !8400, line: 250, type: !185)
!8590 = !DILocalVariable(name: "mpu_reg_index", scope: !8584, file: !8400, line: 252, type: !103)
!8591 = !DILocalVariable(name: "i", scope: !8592, file: !8400, line: 264, type: !103)
!8592 = distinct !DILexicalBlock(scope: !8593, file: !8400, line: 264, column: 3)
!8593 = distinct !DILexicalBlock(scope: !8594, file: !8400, line: 261, column: 32)
!8594 = distinct !DILexicalBlock(scope: !8584, file: !8400, line: 261, column: 6)
!8595 = !DILocation(line: 0, scope: !8584)
!8596 = !DILocation(line: 252, column: 22, scope: !8584)
!8597 = !DILocation(line: 258, column: 18, scope: !8584)
!8598 = !DILocation(line: 261, column: 20, scope: !8594)
!8599 = !DILocation(line: 261, column: 6, scope: !8584)
!8600 = !DILocation(line: 0, scope: !8592)
!8601 = !DILocation(line: 265, column: 4, scope: !8602)
!8602 = distinct !DILexicalBlock(scope: !8603, file: !8400, line: 264, column: 59)
!8603 = distinct !DILexicalBlock(scope: !8592, file: !8400, line: 264, column: 3)
!8604 = !DILocation(line: 264, column: 55, scope: !8603)
!8605 = !DILocation(line: 264, column: 33, scope: !8603)
!8606 = !DILocation(line: 264, column: 3, scope: !8592)
!8607 = distinct !{!8607, !8606, !8608}
!8608 = !DILocation(line: 266, column: 3, scope: !8592)
!8609 = !DILocation(line: 269, column: 2, scope: !8584)
!8610 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !8611, file: !8611, line: 218, type: !7403, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8612)
!8611 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8612 = !{!8613}
!8613 = !DILocalVariable(name: "rnr", arg: 1, scope: !8610, file: !8611, line: 218, type: !108)
!8614 = !DILocation(line: 0, scope: !8610)
!8615 = !DILocation(line: 220, column: 12, scope: !8610)
!8616 = !DILocation(line: 221, column: 13, scope: !8610)
!8617 = !DILocation(line: 222, column: 1, scope: !8610)
!8618 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !652, file: !652, line: 326, type: !8619, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8621)
!8619 = !DISubroutineType(types: !8620)
!8620 = !{!103}
!8621 = !{!8622}
!8622 = !DILocalVariable(name: "r_index", scope: !8618, file: !652, line: 328, type: !108)
!8623 = !DILocation(line: 330, column: 17, scope: !8624)
!8624 = distinct !DILexicalBlock(scope: !8618, file: !652, line: 330, column: 6)
!8625 = !DILocation(line: 330, column: 29, scope: !8624)
!8626 = !DILocation(line: 330, column: 6, scope: !8618)
!8627 = !DILocation(line: 347, column: 2, scope: !8618)
!8628 = !DILocation(line: 0, scope: !8618)
!8629 = !DILocation(line: 364, column: 29, scope: !8630)
!8630 = distinct !DILexicalBlock(scope: !8631, file: !652, line: 364, column: 2)
!8631 = distinct !DILexicalBlock(scope: !8618, file: !652, line: 364, column: 2)
!8632 = !DILocation(line: 364, column: 2, scope: !8631)
!8633 = !DILocation(line: 365, column: 25, scope: !8634)
!8634 = distinct !DILexicalBlock(scope: !8630, file: !652, line: 364, column: 66)
!8635 = !DILocation(line: 365, column: 3, scope: !8634)
!8636 = !DILocation(line: 364, column: 62, scope: !8630)
!8637 = distinct !{!8637, !8632, !8638}
!8638 = !DILocation(line: 366, column: 2, scope: !8631)
!8639 = !DILocation(line: 369, column: 23, scope: !8618)
!8640 = !DILocation(line: 369, column: 21, scope: !8618)
!8641 = !DILocation(line: 372, column: 2, scope: !8618)
!8642 = !DILocation(line: 443, column: 2, scope: !8618)
!8643 = !DILocation(line: 444, column: 1, scope: !8618)
!8644 = distinct !DISubprogram(name: "strcpy", scope: !8645, file: !8645, line: 20, type: !8646, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !8650)
!8645 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8646 = !DISubroutineType(types: !8647)
!8647 = !{!277, !8648, !8649}
!8648 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !277)
!8649 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !337)
!8650 = !{!8651, !8652, !8653}
!8651 = !DILocalVariable(name: "d", arg: 1, scope: !8644, file: !8645, line: 20, type: !8648)
!8652 = !DILocalVariable(name: "s", arg: 2, scope: !8644, file: !8645, line: 20, type: !8649)
!8653 = !DILocalVariable(name: "dest", scope: !8644, file: !8645, line: 22, type: !277)
!8654 = !DILocation(line: 0, scope: !8644)
!8655 = !DILocation(line: 24, column: 9, scope: !8644)
!8656 = !DILocation(line: 24, column: 12, scope: !8644)
!8657 = !DILocation(line: 24, column: 2, scope: !8644)
!8658 = !DILocation(line: 25, column: 6, scope: !8659)
!8659 = distinct !DILexicalBlock(scope: !8644, file: !8645, line: 24, column: 21)
!8660 = !DILocation(line: 26, column: 4, scope: !8659)
!8661 = !DILocation(line: 27, column: 4, scope: !8659)
!8662 = distinct !{!8662, !8657, !8663}
!8663 = !DILocation(line: 28, column: 2, scope: !8644)
!8664 = !DILocation(line: 30, column: 5, scope: !8644)
!8665 = !DILocation(line: 32, column: 2, scope: !8644)
!8666 = distinct !DISubprogram(name: "strncpy", scope: !8645, file: !8645, line: 42, type: !8667, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !8669)
!8667 = !DISubroutineType(types: !8668)
!8668 = !{!277, !8648, !8649, !132}
!8669 = !{!8670, !8671, !8672, !8673}
!8670 = !DILocalVariable(name: "d", arg: 1, scope: !8666, file: !8645, line: 42, type: !8648)
!8671 = !DILocalVariable(name: "s", arg: 2, scope: !8666, file: !8645, line: 42, type: !8649)
!8672 = !DILocalVariable(name: "n", arg: 3, scope: !8666, file: !8645, line: 42, type: !132)
!8673 = !DILocalVariable(name: "dest", scope: !8666, file: !8645, line: 44, type: !277)
!8674 = !DILocation(line: 0, scope: !8666)
!8675 = !DILocation(line: 46, column: 12, scope: !8666)
!8676 = !DILocation(line: 46, column: 17, scope: !8666)
!8677 = !DILocation(line: 46, column: 20, scope: !8666)
!8678 = !DILocation(line: 46, column: 23, scope: !8666)
!8679 = !DILocation(line: 46, column: 2, scope: !8666)
!8680 = !DILocation(line: 47, column: 6, scope: !8681)
!8681 = distinct !DILexicalBlock(scope: !8666, file: !8645, line: 46, column: 32)
!8682 = !DILocation(line: 48, column: 4, scope: !8681)
!8683 = !DILocation(line: 49, column: 4, scope: !8681)
!8684 = !DILocation(line: 50, column: 4, scope: !8681)
!8685 = distinct !{!8685, !8679, !8686}
!8686 = !DILocation(line: 51, column: 2, scope: !8666)
!8687 = !DILocation(line: 54, column: 6, scope: !8688)
!8688 = distinct !DILexicalBlock(scope: !8666, file: !8645, line: 53, column: 16)
!8689 = !DILocation(line: 55, column: 4, scope: !8688)
!8690 = !DILocation(line: 56, column: 4, scope: !8688)
!8691 = !DILocation(line: 53, column: 11, scope: !8666)
!8692 = !DILocation(line: 53, column: 2, scope: !8666)
!8693 = distinct !{!8693, !8692, !8694}
!8694 = !DILocation(line: 57, column: 2, scope: !8666)
!8695 = !DILocation(line: 59, column: 2, scope: !8666)
!8696 = distinct !DISubprogram(name: "strchr", scope: !8645, file: !8645, line: 69, type: !8697, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !8699)
!8697 = !DISubroutineType(types: !8698)
!8698 = !{!277, !337, !103}
!8699 = !{!8700, !8701, !8702}
!8700 = !DILocalVariable(name: "s", arg: 1, scope: !8696, file: !8645, line: 69, type: !337)
!8701 = !DILocalVariable(name: "c", arg: 2, scope: !8696, file: !8645, line: 69, type: !103)
!8702 = !DILocalVariable(name: "tmp", scope: !8696, file: !8645, line: 71, type: !278)
!8703 = !DILocation(line: 0, scope: !8696)
!8704 = !DILocation(line: 73, column: 2, scope: !8696)
!8705 = !DILocation(line: 73, column: 10, scope: !8696)
!8706 = !DILocation(line: 73, column: 13, scope: !8696)
!8707 = !DILocation(line: 73, column: 21, scope: !8696)
!8708 = !DILocation(line: 74, column: 4, scope: !8709)
!8709 = distinct !DILexicalBlock(scope: !8696, file: !8645, line: 73, column: 38)
!8710 = distinct !{!8710, !8704, !8711}
!8711 = !DILocation(line: 75, column: 2, scope: !8696)
!8712 = !DILocation(line: 77, column: 9, scope: !8696)
!8713 = !DILocation(line: 77, column: 2, scope: !8696)
!8714 = distinct !DISubprogram(name: "strrchr", scope: !8645, file: !8645, line: 87, type: !8697, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !8715)
!8715 = !{!8716, !8717, !8718}
!8716 = !DILocalVariable(name: "s", arg: 1, scope: !8714, file: !8645, line: 87, type: !337)
!8717 = !DILocalVariable(name: "c", arg: 2, scope: !8714, file: !8645, line: 87, type: !103)
!8718 = !DILocalVariable(name: "match", scope: !8714, file: !8645, line: 89, type: !277)
!8719 = !DILocation(line: 0, scope: !8714)
!8720 = !DILocation(line: 91, column: 2, scope: !8714)
!8721 = !DILocation(line: 92, column: 7, scope: !8722)
!8722 = distinct !DILexicalBlock(scope: !8723, file: !8645, line: 92, column: 7)
!8723 = distinct !DILexicalBlock(scope: !8714, file: !8645, line: 91, column: 5)
!8724 = !DILocation(line: 92, column: 10, scope: !8722)
!8725 = !DILocation(line: 92, column: 7, scope: !8723)
!8726 = !DILocation(line: 95, column: 13, scope: !8714)
!8727 = !DILocation(line: 95, column: 2, scope: !8723)
!8728 = distinct !{!8728, !8720, !8729}
!8729 = !DILocation(line: 95, column: 15, scope: !8714)
!8730 = !DILocation(line: 97, column: 2, scope: !8714)
!8731 = distinct !DISubprogram(name: "strlen", scope: !8645, file: !8645, line: 107, type: !8732, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !8734)
!8732 = !DISubroutineType(types: !8733)
!8733 = !{!132, !337}
!8734 = !{!8735, !8736}
!8735 = !DILocalVariable(name: "s", arg: 1, scope: !8731, file: !8645, line: 107, type: !337)
!8736 = !DILocalVariable(name: "n", scope: !8731, file: !8645, line: 109, type: !132)
!8737 = !DILocation(line: 0, scope: !8731)
!8738 = !DILocation(line: 111, column: 9, scope: !8731)
!8739 = !DILocation(line: 111, column: 12, scope: !8731)
!8740 = !DILocation(line: 111, column: 2, scope: !8731)
!8741 = !DILocation(line: 112, column: 4, scope: !8742)
!8742 = distinct !DILexicalBlock(scope: !8731, file: !8645, line: 111, column: 21)
!8743 = !DILocation(line: 113, column: 4, scope: !8742)
!8744 = distinct !{!8744, !8740, !8745}
!8745 = !DILocation(line: 114, column: 2, scope: !8731)
!8746 = !DILocation(line: 116, column: 2, scope: !8731)
!8747 = distinct !DISubprogram(name: "strnlen", scope: !8645, file: !8645, line: 126, type: !8748, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !8750)
!8748 = !DISubroutineType(types: !8749)
!8749 = !{!132, !337, !132}
!8750 = !{!8751, !8752, !8753}
!8751 = !DILocalVariable(name: "s", arg: 1, scope: !8747, file: !8645, line: 126, type: !337)
!8752 = !DILocalVariable(name: "maxlen", arg: 2, scope: !8747, file: !8645, line: 126, type: !132)
!8753 = !DILocalVariable(name: "n", scope: !8747, file: !8645, line: 128, type: !132)
!8754 = !DILocation(line: 0, scope: !8747)
!8755 = !DILocation(line: 130, column: 9, scope: !8747)
!8756 = !DILocation(line: 130, column: 12, scope: !8747)
!8757 = !DILocation(line: 130, column: 20, scope: !8747)
!8758 = !DILocation(line: 130, column: 2, scope: !8747)
!8759 = !DILocation(line: 131, column: 4, scope: !8760)
!8760 = distinct !DILexicalBlock(scope: !8747, file: !8645, line: 130, column: 35)
!8761 = !DILocation(line: 132, column: 4, scope: !8760)
!8762 = distinct !{!8762, !8758, !8763}
!8763 = !DILocation(line: 133, column: 2, scope: !8747)
!8764 = !DILocation(line: 135, column: 2, scope: !8747)
!8765 = distinct !DISubprogram(name: "strcmp", scope: !8645, file: !8645, line: 145, type: !8766, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !8768)
!8766 = !DISubroutineType(types: !8767)
!8767 = !{!103, !337, !337}
!8768 = !{!8769, !8770}
!8769 = !DILocalVariable(name: "s1", arg: 1, scope: !8765, file: !8645, line: 145, type: !337)
!8770 = !DILocalVariable(name: "s2", arg: 2, scope: !8765, file: !8645, line: 145, type: !337)
!8771 = !DILocation(line: 0, scope: !8765)
!8772 = !DILocation(line: 147, column: 10, scope: !8765)
!8773 = !DILocation(line: 147, column: 17, scope: !8765)
!8774 = !DILocation(line: 147, column: 14, scope: !8765)
!8775 = !DILocation(line: 147, column: 22, scope: !8765)
!8776 = !DILocation(line: 148, column: 5, scope: !8777)
!8777 = distinct !DILexicalBlock(scope: !8765, file: !8645, line: 147, column: 40)
!8778 = !DILocation(line: 149, column: 5, scope: !8777)
!8779 = distinct !{!8779, !8780, !8781}
!8780 = !DILocation(line: 147, column: 2, scope: !8765)
!8781 = !DILocation(line: 150, column: 2, scope: !8765)
!8782 = !DILocation(line: 152, column: 9, scope: !8765)
!8783 = !DILocation(line: 152, column: 15, scope: !8765)
!8784 = !DILocation(line: 152, column: 13, scope: !8765)
!8785 = !DILocation(line: 152, column: 2, scope: !8765)
!8786 = distinct !DISubprogram(name: "strncmp", scope: !8645, file: !8645, line: 162, type: !8787, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !8789)
!8787 = !DISubroutineType(types: !8788)
!8788 = !{!103, !337, !337, !132}
!8789 = !{!8790, !8791, !8792}
!8790 = !DILocalVariable(name: "s1", arg: 1, scope: !8786, file: !8645, line: 162, type: !337)
!8791 = !DILocalVariable(name: "s2", arg: 2, scope: !8786, file: !8645, line: 162, type: !337)
!8792 = !DILocalVariable(name: "n", arg: 3, scope: !8786, file: !8645, line: 162, type: !132)
!8793 = !DILocation(line: 0, scope: !8786)
!8794 = !DILocation(line: 164, column: 17, scope: !8786)
!8795 = !DILocation(line: 164, column: 21, scope: !8786)
!8796 = !DILocation(line: 164, column: 28, scope: !8786)
!8797 = !DILocation(line: 164, column: 25, scope: !8786)
!8798 = !DILocation(line: 164, column: 33, scope: !8786)
!8799 = !DILocation(line: 165, column: 5, scope: !8800)
!8800 = distinct !DILexicalBlock(scope: !8786, file: !8645, line: 164, column: 51)
!8801 = !DILocation(line: 166, column: 5, scope: !8800)
!8802 = !DILocation(line: 167, column: 4, scope: !8800)
!8803 = distinct !{!8803, !8804, !8805}
!8804 = !DILocation(line: 164, column: 2, scope: !8786)
!8805 = !DILocation(line: 168, column: 2, scope: !8786)
!8806 = !DILocation(line: 170, column: 25, scope: !8786)
!8807 = !DILocation(line: 170, column: 31, scope: !8786)
!8808 = !DILocation(line: 170, column: 29, scope: !8786)
!8809 = !DILocation(line: 170, column: 9, scope: !8786)
!8810 = !DILocation(line: 170, column: 2, scope: !8786)
!8811 = distinct !DISubprogram(name: "strtok_r", scope: !8645, file: !8645, line: 180, type: !8812, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !8814)
!8812 = !DISubroutineType(types: !8813)
!8813 = !{!277, !277, !337, !378}
!8814 = !{!8815, !8816, !8817, !8818, !8819}
!8815 = !DILocalVariable(name: "str", arg: 1, scope: !8811, file: !8645, line: 180, type: !277)
!8816 = !DILocalVariable(name: "sep", arg: 2, scope: !8811, file: !8645, line: 180, type: !337)
!8817 = !DILocalVariable(name: "state", arg: 3, scope: !8811, file: !8645, line: 180, type: !378)
!8818 = !DILocalVariable(name: "start", scope: !8811, file: !8645, line: 182, type: !277)
!8819 = !DILocalVariable(name: "end", scope: !8811, file: !8645, line: 182, type: !277)
!8820 = !DILocation(line: 0, scope: !8811)
!8821 = !DILocation(line: 184, column: 10, scope: !8811)
!8822 = !DILocation(line: 184, column: 22, scope: !8811)
!8823 = !DILocation(line: 187, column: 9, scope: !8811)
!8824 = !DILocation(line: 187, column: 16, scope: !8811)
!8825 = !DILocation(line: 187, column: 19, scope: !8811)
!8826 = !DILocation(line: 187, column: 2, scope: !8811)
!8827 = !DILocation(line: 188, column: 8, scope: !8828)
!8828 = distinct !DILexicalBlock(scope: !8811, file: !8645, line: 187, column: 40)
!8829 = distinct !{!8829, !8826, !8830}
!8830 = !DILocation(line: 189, column: 2, scope: !8811)
!8831 = !DILocation(line: 198, column: 9, scope: !8811)
!8832 = !DILocation(line: 198, column: 18, scope: !8811)
!8833 = !DILocation(line: 198, column: 17, scope: !8811)
!8834 = !DILocation(line: 198, column: 2, scope: !8811)
!8835 = !DILocation(line: 199, column: 6, scope: !8836)
!8836 = distinct !DILexicalBlock(scope: !8811, file: !8645, line: 198, column: 37)
!8837 = !DILocation(line: 198, column: 14, scope: !8811)
!8838 = distinct !{!8838, !8834, !8839}
!8839 = !DILocation(line: 200, column: 2, scope: !8811)
!8840 = !DILocation(line: 203, column: 8, scope: !8841)
!8841 = distinct !DILexicalBlock(scope: !8842, file: !8645, line: 202, column: 20)
!8842 = distinct !DILexicalBlock(scope: !8811, file: !8645, line: 202, column: 6)
!8843 = !DILocation(line: 204, column: 16, scope: !8841)
!8844 = !DILocation(line: 205, column: 2, scope: !8841)
!8845 = !DILocation(line: 210, column: 1, scope: !8811)
!8846 = distinct !DISubprogram(name: "strcat", scope: !8645, file: !8645, line: 212, type: !8646, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !8847)
!8847 = !{!8848, !8849}
!8848 = !DILocalVariable(name: "dest", arg: 1, scope: !8846, file: !8645, line: 212, type: !8648)
!8849 = !DILocalVariable(name: "src", arg: 2, scope: !8846, file: !8645, line: 212, type: !8649)
!8850 = !DILocation(line: 0, scope: !8846)
!8851 = !DILocation(line: 214, column: 16, scope: !8846)
!8852 = !DILocation(line: 214, column: 14, scope: !8846)
!8853 = !DILocation(line: 214, column: 2, scope: !8846)
!8854 = !DILocation(line: 215, column: 2, scope: !8846)
!8855 = distinct !DISubprogram(name: "strncat", scope: !8645, file: !8645, line: 218, type: !8667, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !8856)
!8856 = !{!8857, !8858, !8859, !8860, !8861}
!8857 = !DILocalVariable(name: "dest", arg: 1, scope: !8855, file: !8645, line: 218, type: !8648)
!8858 = !DILocalVariable(name: "src", arg: 2, scope: !8855, file: !8645, line: 218, type: !8649)
!8859 = !DILocalVariable(name: "n", arg: 3, scope: !8855, file: !8645, line: 219, type: !132)
!8860 = !DILocalVariable(name: "orig_dest", scope: !8855, file: !8645, line: 221, type: !277)
!8861 = !DILocalVariable(name: "len", scope: !8855, file: !8645, line: 222, type: !132)
!8862 = !DILocation(line: 0, scope: !8855)
!8863 = !DILocation(line: 222, column: 15, scope: !8855)
!8864 = !DILocation(line: 224, column: 7, scope: !8855)
!8865 = !DILocation(line: 225, column: 14, scope: !8855)
!8866 = !DILocation(line: 225, column: 19, scope: !8855)
!8867 = !DILocation(line: 225, column: 11, scope: !8855)
!8868 = !DILocation(line: 225, column: 23, scope: !8855)
!8869 = !DILocation(line: 225, column: 28, scope: !8855)
!8870 = !DILocation(line: 225, column: 2, scope: !8855)
!8871 = !DILocation(line: 226, column: 17, scope: !8872)
!8872 = distinct !DILexicalBlock(scope: !8855, file: !8645, line: 225, column: 38)
!8873 = !DILocation(line: 226, column: 8, scope: !8872)
!8874 = !DILocation(line: 226, column: 11, scope: !8872)
!8875 = distinct !{!8875, !8870, !8876}
!8876 = !DILocation(line: 227, column: 2, scope: !8855)
!8877 = !DILocation(line: 228, column: 8, scope: !8855)
!8878 = !DILocation(line: 230, column: 2, scope: !8855)
!8879 = distinct !DISubprogram(name: "memcmp", scope: !8645, file: !8645, line: 239, type: !8880, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !8882)
!8880 = !DISubroutineType(types: !8881)
!8881 = !{!103, !13, !13, !132}
!8882 = !{!8883, !8884, !8885, !8886, !8887}
!8883 = !DILocalVariable(name: "m1", arg: 1, scope: !8879, file: !8645, line: 239, type: !13)
!8884 = !DILocalVariable(name: "m2", arg: 2, scope: !8879, file: !8645, line: 239, type: !13)
!8885 = !DILocalVariable(name: "n", arg: 3, scope: !8879, file: !8645, line: 239, type: !132)
!8886 = !DILocalVariable(name: "c1", scope: !8879, file: !8645, line: 241, type: !337)
!8887 = !DILocalVariable(name: "c2", scope: !8879, file: !8645, line: 242, type: !337)
!8888 = !DILocation(line: 0, scope: !8879)
!8889 = !DILocation(line: 244, column: 7, scope: !8890)
!8890 = distinct !DILexicalBlock(scope: !8879, file: !8645, line: 244, column: 6)
!8891 = !DILocation(line: 244, column: 6, scope: !8879)
!8892 = !DILocation(line: 248, column: 10, scope: !8879)
!8893 = !DILocation(line: 248, column: 14, scope: !8879)
!8894 = !DILocation(line: 248, column: 19, scope: !8879)
!8895 = !DILocation(line: 248, column: 2, scope: !8879)
!8896 = !DILocation(line: 248, column: 23, scope: !8879)
!8897 = !DILocation(line: 248, column: 30, scope: !8879)
!8898 = !DILocation(line: 248, column: 27, scope: !8879)
!8899 = !DILocation(line: 249, column: 5, scope: !8900)
!8900 = distinct !DILexicalBlock(scope: !8879, file: !8645, line: 248, column: 36)
!8901 = !DILocation(line: 250, column: 5, scope: !8900)
!8902 = distinct !{!8902, !8895, !8903}
!8903 = !DILocation(line: 251, column: 2, scope: !8879)
!8904 = !DILocation(line: 253, column: 9, scope: !8879)
!8905 = !DILocation(line: 253, column: 15, scope: !8879)
!8906 = !DILocation(line: 253, column: 13, scope: !8879)
!8907 = !DILocation(line: 253, column: 2, scope: !8879)
!8908 = !DILocation(line: 254, column: 1, scope: !8879)
!8909 = distinct !DISubprogram(name: "memmove", scope: !8645, file: !8645, line: 263, type: !8910, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !8912)
!8910 = !DISubroutineType(types: !8911)
!8911 = !{!102, !102, !13, !132}
!8912 = !{!8913, !8914, !8915, !8916, !8917}
!8913 = !DILocalVariable(name: "d", arg: 1, scope: !8909, file: !8645, line: 263, type: !102)
!8914 = !DILocalVariable(name: "s", arg: 2, scope: !8909, file: !8645, line: 263, type: !13)
!8915 = !DILocalVariable(name: "n", arg: 3, scope: !8909, file: !8645, line: 263, type: !132)
!8916 = !DILocalVariable(name: "dest", scope: !8909, file: !8645, line: 265, type: !277)
!8917 = !DILocalVariable(name: "src", scope: !8909, file: !8645, line: 266, type: !337)
!8918 = !DILocation(line: 0, scope: !8909)
!8919 = !DILocation(line: 268, column: 21, scope: !8920)
!8920 = distinct !DILexicalBlock(scope: !8909, file: !8645, line: 268, column: 6)
!8921 = !DILocation(line: 268, column: 28, scope: !8920)
!8922 = !DILocation(line: 268, column: 6, scope: !8909)
!8923 = !DILocation(line: 280, column: 12, scope: !8924)
!8924 = distinct !DILexicalBlock(scope: !8920, file: !8645, line: 278, column: 9)
!8925 = !DILocation(line: 280, column: 3, scope: !8924)
!8926 = !DILocation(line: 275, column: 5, scope: !8927)
!8927 = distinct !DILexicalBlock(scope: !8928, file: !8645, line: 274, column: 17)
!8928 = distinct !DILexicalBlock(scope: !8920, file: !8645, line: 268, column: 33)
!8929 = !DILocation(line: 276, column: 14, scope: !8927)
!8930 = !DILocation(line: 276, column: 4, scope: !8927)
!8931 = !DILocation(line: 276, column: 12, scope: !8927)
!8932 = !DILocation(line: 274, column: 12, scope: !8928)
!8933 = !DILocation(line: 274, column: 3, scope: !8928)
!8934 = distinct !{!8934, !8933, !8935}
!8935 = !DILocation(line: 277, column: 3, scope: !8928)
!8936 = !DILocation(line: 281, column: 12, scope: !8937)
!8937 = distinct !DILexicalBlock(scope: !8924, file: !8645, line: 280, column: 17)
!8938 = !DILocation(line: 281, column: 10, scope: !8937)
!8939 = !DILocation(line: 282, column: 8, scope: !8937)
!8940 = !DILocation(line: 283, column: 7, scope: !8937)
!8941 = !DILocation(line: 284, column: 5, scope: !8937)
!8942 = distinct !{!8942, !8925, !8943}
!8943 = !DILocation(line: 285, column: 3, scope: !8924)
!8944 = !DILocation(line: 288, column: 2, scope: !8909)
!8945 = distinct !DISubprogram(name: "memcpy", scope: !8645, file: !8645, line: 298, type: !8946, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !8950)
!8946 = !DISubroutineType(types: !8947)
!8947 = !{!102, !8948, !8949, !132}
!8948 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!8949 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!8950 = !{!8951, !8952, !8953, !8954, !8955}
!8951 = !DILocalVariable(name: "d", arg: 1, scope: !8945, file: !8645, line: 298, type: !8948)
!8952 = !DILocalVariable(name: "s", arg: 2, scope: !8945, file: !8645, line: 298, type: !8949)
!8953 = !DILocalVariable(name: "n", arg: 3, scope: !8945, file: !8645, line: 298, type: !132)
!8954 = !DILocalVariable(name: "d_byte", scope: !8945, file: !8645, line: 302, type: !1091)
!8955 = !DILocalVariable(name: "s_byte", scope: !8945, file: !8645, line: 303, type: !3028)
!8956 = !DILocation(line: 0, scope: !8945)
!8957 = !DILocation(line: 337, column: 11, scope: !8945)
!8958 = !DILocation(line: 337, column: 2, scope: !8945)
!8959 = !DILocation(line: 338, column: 25, scope: !8960)
!8960 = distinct !DILexicalBlock(scope: !8945, file: !8645, line: 337, column: 16)
!8961 = !DILocation(line: 338, column: 17, scope: !8960)
!8962 = !DILocation(line: 338, column: 11, scope: !8960)
!8963 = !DILocation(line: 338, column: 15, scope: !8960)
!8964 = !DILocation(line: 339, column: 4, scope: !8960)
!8965 = distinct !{!8965, !8958, !8966}
!8966 = !DILocation(line: 340, column: 2, scope: !8945)
!8967 = !DILocation(line: 342, column: 2, scope: !8945)
!8968 = distinct !DISubprogram(name: "memset", scope: !8645, file: !8645, line: 352, type: !8969, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !8971)
!8969 = !DISubroutineType(types: !8970)
!8970 = !{!102, !102, !103, !132}
!8971 = !{!8972, !8973, !8974, !8975, !8976}
!8972 = !DILocalVariable(name: "buf", arg: 1, scope: !8968, file: !8645, line: 352, type: !102)
!8973 = !DILocalVariable(name: "c", arg: 2, scope: !8968, file: !8645, line: 352, type: !103)
!8974 = !DILocalVariable(name: "n", arg: 3, scope: !8968, file: !8645, line: 352, type: !132)
!8975 = !DILocalVariable(name: "d_byte", scope: !8968, file: !8645, line: 356, type: !1091)
!8976 = !DILocalVariable(name: "c_byte", scope: !8968, file: !8645, line: 357, type: !186)
!8977 = !DILocation(line: 0, scope: !8968)
!8978 = !DILocation(line: 357, column: 25, scope: !8968)
!8979 = !DILocation(line: 389, column: 11, scope: !8968)
!8980 = !DILocation(line: 389, column: 2, scope: !8968)
!8981 = !DILocation(line: 390, column: 11, scope: !8982)
!8982 = distinct !DILexicalBlock(scope: !8968, file: !8645, line: 389, column: 16)
!8983 = !DILocation(line: 390, column: 15, scope: !8982)
!8984 = !DILocation(line: 391, column: 4, scope: !8982)
!8985 = distinct !{!8985, !8980, !8986}
!8986 = !DILocation(line: 392, column: 2, scope: !8968)
!8987 = !DILocation(line: 394, column: 2, scope: !8968)
!8988 = distinct !DISubprogram(name: "memchr", scope: !8645, file: !8645, line: 404, type: !8989, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !8991)
!8989 = !DISubroutineType(types: !8990)
!8990 = !{!102, !13, !103, !132}
!8991 = !{!8992, !8993, !8994, !8995}
!8992 = !DILocalVariable(name: "s", arg: 1, scope: !8988, file: !8645, line: 404, type: !13)
!8993 = !DILocalVariable(name: "c", arg: 2, scope: !8988, file: !8645, line: 404, type: !103)
!8994 = !DILocalVariable(name: "n", arg: 3, scope: !8988, file: !8645, line: 404, type: !132)
!8995 = !DILocalVariable(name: "p", scope: !8996, file: !8645, line: 407, type: !3028)
!8996 = distinct !DILexicalBlock(scope: !8997, file: !8645, line: 406, column: 14)
!8997 = distinct !DILexicalBlock(scope: !8988, file: !8645, line: 406, column: 6)
!8998 = !DILocation(line: 0, scope: !8988)
!8999 = !DILocation(line: 406, column: 8, scope: !8997)
!9000 = !DILocation(line: 406, column: 6, scope: !8988)
!9001 = !DILocation(line: 409, column: 3, scope: !8996)
!9002 = !DILocation(line: 0, scope: !8996)
!9003 = !DILocation(line: 410, column: 8, scope: !9004)
!9004 = distinct !DILexicalBlock(scope: !9005, file: !8645, line: 410, column: 8)
!9005 = distinct !DILexicalBlock(scope: !8996, file: !8645, line: 409, column: 6)
!9006 = !DILocation(line: 410, column: 13, scope: !9004)
!9007 = !DILocation(line: 410, column: 8, scope: !9005)
!9008 = distinct !{!9008, !9001, !9009}
!9009 = !DILocation(line: 414, column: 20, scope: !8996)
!9010 = !DILocation(line: 417, column: 2, scope: !8988)
!9011 = !DILocation(line: 418, column: 1, scope: !8988)
!9012 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !662, file: !662, line: 23, type: !4512, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !655, retainedNodes: !9013)
!9013 = !{!9014}
!9014 = !DILocalVariable(name: "hook", arg: 1, scope: !9012, file: !662, line: 23, type: !395)
!9015 = !DILocation(line: 0, scope: !9012)
!9016 = !DILocation(line: 25, column: 15, scope: !9012)
!9017 = !DILocation(line: 26, column: 1, scope: !9012)
!9018 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !662, file: !662, line: 14, type: !396, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !655, retainedNodes: !9019)
!9019 = !{!9020}
!9020 = !DILocalVariable(name: "c", arg: 1, scope: !9018, file: !662, line: 14, type: !103)
!9021 = !DILocation(line: 0, scope: !9018)
!9022 = !DILocation(line: 18, column: 2, scope: !9018)
!9023 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !662, file: !662, line: 28, type: !9024, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !655, retainedNodes: !9026)
!9024 = !DISubroutineType(types: !9025)
!9025 = !{!103, !103, !658}
!9026 = !{!9027, !9028}
!9027 = !DILocalVariable(name: "c", arg: 1, scope: !9023, file: !662, line: 28, type: !103)
!9028 = !DILocalVariable(name: "stream", arg: 2, scope: !9023, file: !662, line: 28, type: !658)
!9029 = !DILocation(line: 0, scope: !9023)
!9030 = !DILocation(line: 30, column: 27, scope: !9023)
!9031 = !DILocation(line: 30, column: 50, scope: !9023)
!9032 = !DILocation(line: 30, column: 9, scope: !9023)
!9033 = !DILocation(line: 30, column: 2, scope: !9023)
!9034 = distinct !DISubprogram(name: "fputc", scope: !662, file: !662, line: 41, type: !9024, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !655, retainedNodes: !9035)
!9035 = !{!9036, !9037}
!9036 = !DILocalVariable(name: "c", arg: 1, scope: !9034, file: !662, line: 41, type: !103)
!9037 = !DILocalVariable(name: "stream", arg: 2, scope: !9034, file: !662, line: 41, type: !658)
!9038 = !DILocation(line: 0, scope: !9034)
!9039 = !DILocation(line: 43, column: 9, scope: !9034)
!9040 = !DILocation(line: 43, column: 2, scope: !9034)
!9041 = distinct !DISubprogram(name: "zephyr_fputc", scope: !9042, file: !9042, line: 72, type: !9024, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !655, retainedNodes: !9043)
!9042 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!9043 = !{!9044, !9045}
!9044 = !DILocalVariable(name: "c", arg: 1, scope: !9041, file: !9042, line: 72, type: !103)
!9045 = !DILocalVariable(name: "stream", arg: 2, scope: !9041, file: !9042, line: 72, type: !658)
!9046 = !DILocation(line: 0, scope: !9041)
!9047 = !DILocation(line: 81, column: 2, scope: !9048)
!9048 = distinct !DILexicalBlock(scope: !9041, file: !9042, line: 81, column: 2)
!9049 = !{i64 2154904882}
!9050 = !DILocation(line: 82, column: 9, scope: !9041)
!9051 = !DILocation(line: 82, column: 2, scope: !9041)
!9052 = distinct !DISubprogram(name: "fputs", scope: !662, file: !662, line: 46, type: !9053, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !655, retainedNodes: !9056)
!9053 = !DISubroutineType(types: !9054)
!9054 = !{!103, !8649, !9055}
!9055 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !658)
!9056 = !{!9057, !9058, !9059, !9060}
!9057 = !DILocalVariable(name: "s", arg: 1, scope: !9052, file: !662, line: 46, type: !8649)
!9058 = !DILocalVariable(name: "stream", arg: 2, scope: !9052, file: !662, line: 46, type: !9055)
!9059 = !DILocalVariable(name: "len", scope: !9052, file: !662, line: 48, type: !103)
!9060 = !DILocalVariable(name: "ret", scope: !9052, file: !662, line: 49, type: !103)
!9061 = !DILocation(line: 0, scope: !9052)
!9062 = !DILocation(line: 48, column: 12, scope: !9052)
!9063 = !DILocation(line: 51, column: 8, scope: !9052)
!9064 = !DILocation(line: 53, column: 13, scope: !9052)
!9065 = !DILocation(line: 53, column: 9, scope: !9052)
!9066 = !DILocation(line: 53, column: 2, scope: !9052)
!9067 = distinct !DISubprogram(name: "fwrite", scope: !662, file: !662, line: 99, type: !9068, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !655, retainedNodes: !9070)
!9068 = !DISubroutineType(types: !9069)
!9069 = !{!132, !8949, !132, !132, !9055}
!9070 = !{!9071, !9072, !9073, !9074}
!9071 = !DILocalVariable(name: "ptr", arg: 1, scope: !9067, file: !662, line: 99, type: !8949)
!9072 = !DILocalVariable(name: "size", arg: 2, scope: !9067, file: !662, line: 99, type: !132)
!9073 = !DILocalVariable(name: "nitems", arg: 3, scope: !9067, file: !662, line: 99, type: !132)
!9074 = !DILocalVariable(name: "stream", arg: 4, scope: !9067, file: !662, line: 100, type: !9055)
!9075 = !DILocation(line: 0, scope: !9067)
!9076 = !DILocation(line: 102, column: 9, scope: !9067)
!9077 = !DILocation(line: 102, column: 2, scope: !9067)
!9078 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !9042, file: !9042, line: 96, type: !9068, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !655, retainedNodes: !9079)
!9079 = !{!9080, !9081, !9082, !9083}
!9080 = !DILocalVariable(name: "ptr", arg: 1, scope: !9078, file: !9042, line: 96, type: !8949)
!9081 = !DILocalVariable(name: "size", arg: 2, scope: !9078, file: !9042, line: 96, type: !132)
!9082 = !DILocalVariable(name: "nitems", arg: 3, scope: !9078, file: !9042, line: 96, type: !132)
!9083 = !DILocalVariable(name: "stream", arg: 4, scope: !9078, file: !9042, line: 96, type: !9055)
!9084 = !DILocation(line: 0, scope: !9078)
!9085 = !DILocation(line: 107, column: 2, scope: !9086)
!9086 = distinct !DILexicalBlock(scope: !9078, file: !9042, line: 107, column: 2)
!9087 = !{i64 2154904986}
!9088 = !DILocation(line: 108, column: 9, scope: !9078)
!9089 = !DILocation(line: 108, column: 2, scope: !9078)
!9090 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !662, file: !662, line: 56, type: !9068, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !655, retainedNodes: !9091)
!9091 = !{!9092, !9093, !9094, !9095, !9096, !9097, !9098, !9099}
!9092 = !DILocalVariable(name: "ptr", arg: 1, scope: !9090, file: !662, line: 56, type: !8949)
!9093 = !DILocalVariable(name: "size", arg: 2, scope: !9090, file: !662, line: 56, type: !132)
!9094 = !DILocalVariable(name: "nitems", arg: 3, scope: !9090, file: !662, line: 57, type: !132)
!9095 = !DILocalVariable(name: "stream", arg: 4, scope: !9090, file: !662, line: 57, type: !9055)
!9096 = !DILocalVariable(name: "i", scope: !9090, file: !662, line: 59, type: !132)
!9097 = !DILocalVariable(name: "j", scope: !9090, file: !662, line: 60, type: !132)
!9098 = !DILocalVariable(name: "p", scope: !9090, file: !662, line: 61, type: !3028)
!9099 = !DILabel(scope: !9090, name: "done", file: !662, line: 82)
!9100 = !DILocation(line: 0, scope: !9090)
!9101 = !DILocation(line: 63, column: 14, scope: !9102)
!9102 = distinct !DILexicalBlock(scope: !9090, file: !662, line: 63, column: 6)
!9103 = !DILocation(line: 63, column: 24, scope: !9102)
!9104 = !DILocation(line: 72, column: 3, scope: !9105)
!9105 = distinct !DILexicalBlock(scope: !9090, file: !662, line: 70, column: 5)
!9106 = !DILocation(line: 0, scope: !9105)
!9107 = !DILocation(line: 73, column: 8, scope: !9108)
!9108 = distinct !DILexicalBlock(scope: !9109, file: !662, line: 73, column: 8)
!9109 = distinct !DILexicalBlock(scope: !9105, file: !662, line: 72, column: 6)
!9110 = !DILocation(line: 73, column: 29, scope: !9108)
!9111 = !DILocation(line: 73, column: 27, scope: !9108)
!9112 = !DILocation(line: 73, column: 21, scope: !9108)
!9113 = !DILocation(line: 73, column: 33, scope: !9108)
!9114 = !DILocation(line: 73, column: 8, scope: !9109)
!9115 = !DILocation(line: 76, column: 5, scope: !9109)
!9116 = !DILocation(line: 77, column: 14, scope: !9105)
!9117 = !DILocation(line: 77, column: 3, scope: !9109)
!9118 = distinct !{!9118, !9104, !9119}
!9119 = !DILocation(line: 77, column: 17, scope: !9105)
!9120 = !DILocation(line: 79, column: 4, scope: !9105)
!9121 = !DILocation(line: 80, column: 13, scope: !9090)
!9122 = !DILocation(line: 80, column: 2, scope: !9105)
!9123 = distinct !{!9123, !9124, !9125}
!9124 = !DILocation(line: 70, column: 2, scope: !9090)
!9125 = !DILocation(line: 80, column: 16, scope: !9090)
!9126 = !DILocation(line: 82, column: 1, scope: !9090)
!9127 = !DILocation(line: 83, column: 17, scope: !9090)
!9128 = !DILocation(line: 83, column: 2, scope: !9090)
!9129 = !DILocation(line: 84, column: 1, scope: !9090)
!9130 = distinct !DISubprogram(name: "puts", scope: !662, file: !662, line: 106, type: !9131, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !655, retainedNodes: !9133)
!9131 = !DISubroutineType(types: !9132)
!9132 = !{!103, !337}
!9133 = !{!9134}
!9134 = !DILocalVariable(name: "s", arg: 1, scope: !9130, file: !662, line: 106, type: !337)
!9135 = !DILocation(line: 0, scope: !9130)
!9136 = !DILocation(line: 108, column: 6, scope: !9137)
!9137 = distinct !DILexicalBlock(scope: !9130, file: !662, line: 108, column: 6)
!9138 = !DILocation(line: 108, column: 23, scope: !9137)
!9139 = !DILocation(line: 108, column: 6, scope: !9130)
!9140 = !DILocation(line: 112, column: 9, scope: !9130)
!9141 = !DILocation(line: 112, column: 29, scope: !9130)
!9142 = !DILocation(line: 112, column: 2, scope: !9130)
!9143 = !DILocation(line: 113, column: 1, scope: !9130)
!9144 = distinct !DISubprogram(name: "_zbus_timeout_remainder", scope: !694, file: !694, line: 12, type: !9145, scopeLine: 13, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !690, retainedNodes: !9151)
!9145 = !DISubroutineType(types: !9146)
!9146 = !{!9147, !109}
!9147 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !9148)
!9148 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !9149)
!9149 = !{!9150}
!9150 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !9148, file: !105, line: 66, baseType: !104, size: 64)
!9151 = !{!9152, !9153}
!9152 = !DILocalVariable(name: "end_ticks", arg: 1, scope: !9144, file: !694, line: 12, type: !109)
!9153 = !DILocalVariable(name: "now_ticks", scope: !9144, file: !694, line: 14, type: !106)
!9154 = !DILocation(line: 0, scope: !9144)
!9155 = !DILocation(line: 14, column: 22, scope: !9144)
!9156 = !DILocation(line: 16, column: 9, scope: !9144)
!9157 = !DILocation(line: 17, column: 1, scope: !9144)
!9158 = distinct !DISubprogram(name: "zbus_chan_pub", scope: !694, file: !694, line: 103, type: !9159, scopeLine: 104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !690, retainedNodes: !9305)
!9159 = !DISubroutineType(types: !9160)
!9160 = !{!103, !9161, !13, !9147}
!9161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9162, size: 32)
!9162 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9163)
!9163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_channel", file: !117, line: 29, size: 192, elements: !9164)
!9164 = !{!9165, !9166, !9167, !9168, !9169, !9277}
!9165 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !9163, file: !117, line: 35, baseType: !120, size: 16)
!9166 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !9163, file: !117, line: 40, baseType: !124, size: 32, offset: 32)
!9167 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !9163, file: !117, line: 45, baseType: !124, size: 32, offset: 64)
!9168 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !9163, file: !117, line: 51, baseType: !127, size: 32, offset: 96)
!9169 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !9163, file: !117, line: 56, baseType: !9170, size: 32, offset: 128)
!9170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9171, size: 32)
!9171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !137, line: 2720, size: 160, elements: !9172)
!9172 = !{!9173, !9192, !9275, !9276}
!9173 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9171, file: !137, line: 2722, baseType: !9174, size: 64)
!9174 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !9175)
!9175 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !9176)
!9176 = !{!9177}
!9177 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9175, file: !141, line: 232, baseType: !9178, size: 64)
!9178 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !9179)
!9179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !9180)
!9180 = !{!9181, !9187}
!9181 = !DIDerivedType(tag: DW_TAG_member, scope: !9179, file: !146, line: 38, baseType: !9182, size: 32)
!9182 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9179, file: !146, line: 38, size: 32, elements: !9183)
!9183 = !{!9184, !9186}
!9184 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9182, file: !146, line: 39, baseType: !9185, size: 32)
!9185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9179, size: 32)
!9186 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9182, file: !146, line: 40, baseType: !9185, size: 32)
!9187 = !DIDerivedType(tag: DW_TAG_member, scope: !9179, file: !146, line: 42, baseType: !9188, size: 32, offset: 32)
!9188 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9179, file: !146, line: 42, size: 32, elements: !9189)
!9189 = !{!9190, !9191}
!9190 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9188, file: !146, line: 43, baseType: !9185, size: 32)
!9191 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9188, file: !146, line: 44, baseType: !9185, size: 32)
!9192 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !9171, file: !137, line: 2724, baseType: !9193, size: 32, offset: 64)
!9193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9194, size: 32)
!9194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !9195)
!9195 = !{!9196, !9236, !9248, !9249, !9250, !9251, !9257, !9270}
!9196 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !9194, file: !163, line: 247, baseType: !9197, size: 384)
!9197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !9198)
!9198 = !{!9199, !9210, !9212, !9213, !9214, !9223, !9224, !9225}
!9199 = !DIDerivedType(tag: DW_TAG_member, scope: !9197, file: !163, line: 60, baseType: !9200, size: 64)
!9200 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9197, file: !163, line: 60, size: 64, elements: !9201)
!9201 = !{!9202, !9204}
!9202 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !9200, file: !163, line: 61, baseType: !9203, size: 64)
!9203 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !9179)
!9204 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !9200, file: !163, line: 62, baseType: !9205, size: 64)
!9205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !9206)
!9206 = !{!9207}
!9207 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !9205, file: !175, line: 50, baseType: !9208, size: 64)
!9208 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9209, size: 64, elements: !180)
!9209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9205, size: 32)
!9210 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !9197, file: !163, line: 68, baseType: !9211, size: 32, offset: 64)
!9211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9174, size: 32)
!9212 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !9197, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!9213 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !9197, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!9214 = !DIDerivedType(tag: DW_TAG_member, scope: !9197, file: !163, line: 90, baseType: !9215, size: 16, offset: 112)
!9215 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9197, file: !163, line: 90, size: 16, elements: !9216)
!9216 = !{!9217, !9222}
!9217 = !DIDerivedType(tag: DW_TAG_member, scope: !9215, file: !163, line: 91, baseType: !9218, size: 16)
!9218 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9215, file: !163, line: 91, size: 16, elements: !9219)
!9219 = !{!9220, !9221}
!9220 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !9218, file: !163, line: 96, baseType: !195, size: 8)
!9221 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !9218, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!9222 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !9215, file: !163, line: 100, baseType: !121, size: 16)
!9223 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !9197, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!9224 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !9197, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!9225 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !9197, file: !163, line: 131, baseType: !9226, size: 192, offset: 192)
!9226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !9227)
!9227 = !{!9228, !9229, !9235}
!9228 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !9226, file: !141, line: 245, baseType: !9203, size: 64)
!9229 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !9226, file: !141, line: 246, baseType: !9230, size: 32, offset: 64)
!9230 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !9231)
!9231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9232, size: 32)
!9232 = !DISubroutineType(types: !9233)
!9233 = !{null, !9234}
!9234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9226, size: 32)
!9235 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !9226, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!9236 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !9194, file: !163, line: 250, baseType: !9237, size: 288, offset: 384)
!9237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !9238)
!9238 = !{!9239, !9240, !9241, !9242, !9243, !9244, !9245, !9246, !9247}
!9239 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !9237, file: !214, line: 26, baseType: !108, size: 32)
!9240 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !9237, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!9241 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !9237, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!9242 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !9237, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!9243 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !9237, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!9244 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !9237, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!9245 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !9237, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!9246 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !9237, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!9247 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !9237, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!9248 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !9194, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!9249 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !9194, file: !163, line: 256, baseType: !9174, size: 64, offset: 704)
!9250 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !9194, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!9251 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !9194, file: !163, line: 300, baseType: !9252, size: 96, offset: 800)
!9252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !9253)
!9253 = !{!9254, !9255, !9256}
!9254 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !9252, file: !163, line: 153, baseType: !22, size: 32)
!9255 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !9252, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!9256 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !9252, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!9257 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !9194, file: !163, line: 325, baseType: !9258, size: 32, offset: 896)
!9258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9259, size: 32)
!9259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !9260)
!9260 = !{!9261, !9267, !9268}
!9261 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9259, file: !137, line: 5074, baseType: !9262, size: 96)
!9262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !9263)
!9263 = !{!9264, !9265, !9266}
!9264 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9262, file: !240, line: 57, baseType: !243, size: 32)
!9265 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !9262, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!9266 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !9262, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!9267 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9259, file: !137, line: 5075, baseType: !9174, size: 64, offset: 96)
!9268 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9259, file: !137, line: 5076, baseType: !9269, offset: 160)
!9269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!9270 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !9194, file: !163, line: 343, baseType: !9271, size: 64, offset: 928)
!9271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !9272)
!9272 = !{!9273, !9274}
!9273 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !9271, file: !214, line: 63, baseType: !108, size: 32)
!9274 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !9271, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!9275 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !9171, file: !137, line: 2727, baseType: !108, size: 32, offset: 96)
!9276 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !9171, file: !137, line: 2730, baseType: !103, size: 32, offset: 128)
!9277 = !DIDerivedType(tag: DW_TAG_member, name: "observers", scope: !9163, file: !117, line: 67, baseType: !9278, size: 32, offset: 160)
!9278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9279, size: 32)
!9279 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9280)
!9280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9281, size: 32)
!9281 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9282)
!9282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer", file: !117, line: 85, size: 96, elements: !9283)
!9283 = !{!9284, !9285, !9300}
!9284 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !9282, file: !117, line: 91, baseType: !131, size: 8)
!9285 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !9282, file: !117, line: 93, baseType: !9286, size: 32, offset: 32)
!9286 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9287)
!9287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9288, size: 32)
!9288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !137, line: 4204, size: 320, elements: !9289)
!9289 = !{!9290, !9291, !9292, !9293, !9294, !9295, !9296, !9297, !9298, !9299}
!9290 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9288, file: !137, line: 4206, baseType: !9174, size: 64)
!9291 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9288, file: !137, line: 4208, baseType: !9269, offset: 64)
!9292 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !9288, file: !137, line: 4210, baseType: !132, size: 32, offset: 64)
!9293 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !9288, file: !137, line: 4212, baseType: !108, size: 32, offset: 96)
!9294 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !9288, file: !137, line: 4214, baseType: !277, size: 32, offset: 128)
!9295 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !9288, file: !137, line: 4216, baseType: !277, size: 32, offset: 160)
!9296 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !9288, file: !137, line: 4218, baseType: !277, size: 32, offset: 192)
!9297 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !9288, file: !137, line: 4220, baseType: !277, size: 32, offset: 224)
!9298 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !9288, file: !137, line: 4222, baseType: !108, size: 32, offset: 256)
!9299 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9288, file: !137, line: 4227, baseType: !185, size: 8, offset: 288)
!9300 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !9282, file: !117, line: 96, baseType: !9301, size: 32, offset: 64)
!9301 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9302)
!9302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9303, size: 32)
!9303 = !DISubroutineType(types: !9304)
!9304 = !{null, !9161}
!9305 = !{!9306, !9307, !9308, !9309, !9310}
!9306 = !DILocalVariable(name: "chan", arg: 1, scope: !9158, file: !694, line: 103, type: !9161)
!9307 = !DILocalVariable(name: "msg", arg: 2, scope: !9158, file: !694, line: 103, type: !13)
!9308 = !DILocalVariable(name: "timeout", arg: 3, scope: !9158, file: !694, line: 103, type: !9147)
!9309 = !DILocalVariable(name: "err", scope: !9158, file: !694, line: 105, type: !103)
!9310 = !DILocalVariable(name: "end_ticks", scope: !9158, file: !694, line: 106, type: !109)
!9311 = !DILocation(line: 0, scope: !9158)
!9312 = !DILocation(line: 106, column: 23, scope: !9158)
!9313 = !DILocation(line: 112, column: 12, scope: !9314)
!9314 = distinct !DILexicalBlock(scope: !9158, file: !694, line: 112, column: 6)
!9315 = !DILocation(line: 112, column: 22, scope: !9314)
!9316 = !DILocation(line: 112, column: 30, scope: !9314)
!9317 = !DILocation(line: 112, column: 61, scope: !9314)
!9318 = !DILocation(line: 112, column: 55, scope: !9314)
!9319 = !DILocation(line: 112, column: 34, scope: !9314)
!9320 = !DILocation(line: 112, column: 6, scope: !9158)
!9321 = !DILocation(line: 116, column: 27, scope: !9158)
!9322 = !DILocation(line: 116, column: 8, scope: !9158)
!9323 = !DILocation(line: 117, column: 6, scope: !9324)
!9324 = distinct !DILexicalBlock(scope: !9158, file: !694, line: 117, column: 6)
!9325 = !DILocation(line: 117, column: 6, scope: !9158)
!9326 = !DILocation(line: 121, column: 15, scope: !9158)
!9327 = !DILocation(line: 121, column: 35, scope: !9158)
!9328 = !DILocation(line: 121, column: 29, scope: !9158)
!9329 = !DILocation(line: 121, column: 2, scope: !9158)
!9330 = !DILocation(line: 123, column: 8, scope: !9158)
!9331 = !DILocation(line: 125, column: 23, scope: !9158)
!9332 = !DILocation(line: 125, column: 2, scope: !9158)
!9333 = !DILocation(line: 127, column: 2, scope: !9158)
!9334 = !DILocation(line: 128, column: 1, scope: !9158)
!9335 = distinct !DISubprogram(name: "k_mutex_lock", scope: !3618, file: !3618, line: 927, type: !9336, scopeLine: 928, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !690, retainedNodes: !9338)
!9336 = !DISubroutineType(types: !9337)
!9337 = !{!103, !9170, !9147}
!9338 = !{!9339, !9340}
!9339 = !DILocalVariable(name: "mutex", arg: 1, scope: !9335, file: !3618, line: 927, type: !9170)
!9340 = !DILocalVariable(name: "timeout", arg: 2, scope: !9335, file: !3618, line: 927, type: !9147)
!9341 = !DILocation(line: 0, scope: !9335)
!9342 = !DILocation(line: 936, column: 2, scope: !9343)
!9343 = distinct !DILexicalBlock(scope: !9335, file: !3618, line: 936, column: 2)
!9344 = !{i64 2154846527}
!9345 = !DILocation(line: 937, column: 9, scope: !9335)
!9346 = !DILocation(line: 937, column: 2, scope: !9335)
!9347 = distinct !DISubprogram(name: "_zbus_notify_observers", scope: !694, file: !694, line: 66, type: !9348, scopeLine: 67, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !690, retainedNodes: !9350)
!9348 = !DISubroutineType(types: !9349)
!9349 = !{!103, !9161, !109}
!9350 = !{!9351, !9352, !9353, !9354, !9355, !9357}
!9351 = !DILocalVariable(name: "chan", arg: 1, scope: !9347, file: !694, line: 66, type: !9161)
!9352 = !DILocalVariable(name: "end_ticks", arg: 2, scope: !9347, file: !694, line: 66, type: !109)
!9353 = !DILocalVariable(name: "last_error", scope: !9347, file: !694, line: 68, type: !103)
!9354 = !DILocalVariable(name: "err", scope: !9347, file: !694, line: 68, type: !103)
!9355 = !DILocalVariable(name: "obs", scope: !9356, file: !694, line: 70, type: !9278)
!9356 = distinct !DILexicalBlock(scope: !9347, file: !694, line: 70, column: 2)
!9357 = !DILocalVariable(name: "obs", scope: !9358, file: !694, line: 81, type: !9278)
!9358 = distinct !DILexicalBlock(scope: !9347, file: !694, line: 81, column: 2)
!9359 = !DILocation(line: 0, scope: !9347)
!9360 = !DILocation(line: 70, column: 54, scope: !9356)
!9361 = !DILocation(line: 0, scope: !9356)
!9362 = !DILocation(line: 70, column: 65, scope: !9363)
!9363 = distinct !DILexicalBlock(scope: !9356, file: !694, line: 70, column: 2)
!9364 = !DILocation(line: 70, column: 70, scope: !9363)
!9365 = !DILocation(line: 70, column: 2, scope: !9356)
!9366 = !DILocation(line: 81, column: 54, scope: !9358)
!9367 = !DILocation(line: 81, column: 65, scope: !9368)
!9368 = distinct !DILexicalBlock(scope: !9358, file: !694, line: 81, column: 2)
!9369 = !DILocation(line: 0, scope: !9358)
!9370 = !DILocation(line: 81, column: 70, scope: !9368)
!9371 = !DILocation(line: 81, column: 2, scope: !9358)
!9372 = !DILocation(line: 71, column: 15, scope: !9373)
!9373 = distinct !DILexicalBlock(scope: !9374, file: !694, line: 71, column: 7)
!9374 = distinct !DILexicalBlock(scope: !9363, file: !694, line: 70, column: 86)
!9375 = !DILocation(line: 71, column: 23, scope: !9373)
!9376 = !DILocation(line: 71, column: 35, scope: !9373)
!9377 = !DILocation(line: 71, column: 44, scope: !9373)
!9378 = !DILocation(line: 71, column: 7, scope: !9374)
!9379 = !DILocation(line: 72, column: 4, scope: !9380)
!9380 = distinct !DILexicalBlock(scope: !9373, file: !694, line: 71, column: 54)
!9381 = !DILocation(line: 73, column: 3, scope: !9380)
!9382 = !DILocation(line: 70, column: 79, scope: !9363)
!9383 = distinct !{!9383, !9365, !9384}
!9384 = !DILocation(line: 74, column: 2, scope: !9356)
!9385 = !DILocation(line: 100, column: 2, scope: !9347)
!9386 = !DILocation(line: 82, column: 15, scope: !9387)
!9387 = distinct !DILexicalBlock(scope: !9388, file: !694, line: 82, column: 7)
!9388 = distinct !DILexicalBlock(scope: !9368, file: !694, line: 81, column: 86)
!9389 = !DILocation(line: 82, column: 23, scope: !9387)
!9390 = !DILocation(line: 82, column: 35, scope: !9387)
!9391 = !DILocation(line: 82, column: 41, scope: !9387)
!9392 = !DILocation(line: 82, column: 7, scope: !9388)
!9393 = !DILocation(line: 83, column: 43, scope: !9394)
!9394 = distinct !DILexicalBlock(scope: !9387, file: !694, line: 82, column: 51)
!9395 = !DILocation(line: 83, column: 10, scope: !9394)
!9396 = !DILocation(line: 86, column: 8, scope: !9397)
!9397 = distinct !DILexicalBlock(scope: !9394, file: !694, line: 86, column: 8)
!9398 = !DILocation(line: 86, column: 8, scope: !9394)
!9399 = !DILocation(line: 87, column: 5, scope: !9400)
!9400 = distinct !DILexicalBlock(scope: !9401, file: !694, line: 87, column: 5)
!9401 = distinct !DILexicalBlock(scope: !9402, file: !694, line: 87, column: 5)
!9402 = distinct !DILexicalBlock(scope: !9403, file: !694, line: 87, column: 5)
!9403 = distinct !DILexicalBlock(scope: !9404, file: !694, line: 87, column: 5)
!9404 = distinct !DILexicalBlock(scope: !9397, file: !694, line: 86, column: 13)
!9405 = !DILocation(line: 90, column: 4, scope: !9404)
!9406 = !DILocation(line: 81, column: 79, scope: !9368)
!9407 = distinct !{!9407, !9371, !9408}
!9408 = !DILocation(line: 92, column: 2, scope: !9358)
!9409 = distinct !DISubprogram(name: "k_mutex_unlock", scope: !3618, file: !3618, line: 944, type: !9410, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !690, retainedNodes: !9412)
!9410 = !DISubroutineType(types: !9411)
!9411 = !{!103, !9170}
!9412 = !{!9413}
!9413 = !DILocalVariable(name: "mutex", arg: 1, scope: !9409, file: !3618, line: 944, type: !9170)
!9414 = !DILocation(line: 0, scope: !9409)
!9415 = !DILocation(line: 952, column: 2, scope: !9416)
!9416 = distinct !DILexicalBlock(scope: !9409, file: !3618, line: 952, column: 2)
!9417 = !{i64 2154846595}
!9418 = !DILocation(line: 953, column: 9, scope: !9409)
!9419 = !DILocation(line: 953, column: 2, scope: !9409)
!9420 = distinct !DISubprogram(name: "k_msgq_put", scope: !3618, file: !3618, line: 1129, type: !9421, scopeLine: 1130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !690, retainedNodes: !9423)
!9421 = !DISubroutineType(types: !9422)
!9422 = !{!103, !9287, !13, !9147}
!9423 = !{!9424, !9425, !9426}
!9424 = !DILocalVariable(name: "msgq", arg: 1, scope: !9420, file: !3618, line: 1129, type: !9287)
!9425 = !DILocalVariable(name: "data", arg: 2, scope: !9420, file: !3618, line: 1129, type: !13)
!9426 = !DILocalVariable(name: "timeout", arg: 3, scope: !9420, file: !3618, line: 1129, type: !9147)
!9427 = !DILocation(line: 0, scope: !9420)
!9428 = !DILocation(line: 1139, column: 2, scope: !9429)
!9429 = distinct !DILexicalBlock(scope: !9420, file: !3618, line: 1139, column: 2)
!9430 = !{i64 2154847343}
!9431 = !DILocation(line: 1140, column: 9, scope: !9420)
!9432 = !DILocation(line: 1140, column: 2, scope: !9420)
!9433 = distinct !DISubprogram(name: "zbus_chan_read", scope: !694, file: !694, line: 130, type: !9434, scopeLine: 131, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !690, retainedNodes: !9436)
!9434 = !DISubroutineType(types: !9435)
!9435 = !{!103, !9161, !102, !9147}
!9436 = !{!9437, !9438, !9439, !9440}
!9437 = !DILocalVariable(name: "chan", arg: 1, scope: !9433, file: !694, line: 130, type: !9161)
!9438 = !DILocalVariable(name: "msg", arg: 2, scope: !9433, file: !694, line: 130, type: !102)
!9439 = !DILocalVariable(name: "timeout", arg: 3, scope: !9433, file: !694, line: 130, type: !9147)
!9440 = !DILocalVariable(name: "err", scope: !9433, file: !694, line: 132, type: !103)
!9441 = !DILocation(line: 0, scope: !9433)
!9442 = !DILocation(line: 138, column: 27, scope: !9433)
!9443 = !DILocation(line: 138, column: 8, scope: !9433)
!9444 = !DILocation(line: 139, column: 6, scope: !9445)
!9445 = distinct !DILexicalBlock(scope: !9433, file: !694, line: 139, column: 6)
!9446 = !DILocation(line: 139, column: 6, scope: !9433)
!9447 = !DILocation(line: 143, column: 20, scope: !9433)
!9448 = !DILocation(line: 143, column: 35, scope: !9433)
!9449 = !DILocation(line: 143, column: 29, scope: !9433)
!9450 = !DILocation(line: 143, column: 2, scope: !9433)
!9451 = !DILocation(line: 145, column: 30, scope: !9433)
!9452 = !DILocation(line: 145, column: 9, scope: !9433)
!9453 = !DILocation(line: 145, column: 2, scope: !9433)
!9454 = !DILocation(line: 146, column: 1, scope: !9433)
!9455 = distinct !DISubprogram(name: "zbus_chan_notify", scope: !694, file: !694, line: 148, type: !9456, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !690, retainedNodes: !9458)
!9456 = !DISubroutineType(types: !9457)
!9457 = !{!103, !9161, !9147}
!9458 = !{!9459, !9460, !9461, !9462}
!9459 = !DILocalVariable(name: "chan", arg: 1, scope: !9455, file: !694, line: 148, type: !9161)
!9460 = !DILocalVariable(name: "timeout", arg: 2, scope: !9455, file: !694, line: 148, type: !9147)
!9461 = !DILocalVariable(name: "err", scope: !9455, file: !694, line: 150, type: !103)
!9462 = !DILocalVariable(name: "end_ticks", scope: !9455, file: !694, line: 151, type: !109)
!9463 = !DILocation(line: 0, scope: !9455)
!9464 = !DILocation(line: 151, column: 23, scope: !9455)
!9465 = !DILocation(line: 156, column: 27, scope: !9455)
!9466 = !DILocation(line: 156, column: 8, scope: !9455)
!9467 = !DILocation(line: 157, column: 6, scope: !9468)
!9468 = distinct !DILexicalBlock(scope: !9455, file: !694, line: 157, column: 6)
!9469 = !DILocation(line: 157, column: 6, scope: !9455)
!9470 = !DILocation(line: 161, column: 8, scope: !9455)
!9471 = !DILocation(line: 163, column: 23, scope: !9455)
!9472 = !DILocation(line: 163, column: 2, scope: !9455)
!9473 = !DILocation(line: 165, column: 2, scope: !9455)
!9474 = !DILocation(line: 166, column: 1, scope: !9455)
!9475 = distinct !DISubprogram(name: "zbus_chan_claim", scope: !694, file: !694, line: 168, type: !9456, scopeLine: 169, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !690, retainedNodes: !9476)
!9476 = !{!9477, !9478, !9479}
!9477 = !DILocalVariable(name: "chan", arg: 1, scope: !9475, file: !694, line: 168, type: !9161)
!9478 = !DILocalVariable(name: "timeout", arg: 2, scope: !9475, file: !694, line: 168, type: !9147)
!9479 = !DILocalVariable(name: "err", scope: !9475, file: !694, line: 173, type: !103)
!9480 = !DILocation(line: 0, scope: !9475)
!9481 = !DILocation(line: 173, column: 31, scope: !9475)
!9482 = !DILocation(line: 173, column: 12, scope: !9475)
!9483 = !DILocation(line: 180, column: 1, scope: !9475)
!9484 = distinct !DISubprogram(name: "zbus_chan_finish", scope: !694, file: !694, line: 182, type: !9485, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !690, retainedNodes: !9487)
!9485 = !DISubroutineType(types: !9486)
!9486 = !{!103, !9161}
!9487 = !{!9488, !9489}
!9488 = !DILocalVariable(name: "chan", arg: 1, scope: !9484, file: !694, line: 182, type: !9161)
!9489 = !DILocalVariable(name: "err", scope: !9484, file: !694, line: 187, type: !103)
!9490 = !DILocation(line: 0, scope: !9484)
!9491 = !DILocation(line: 187, column: 33, scope: !9484)
!9492 = !DILocation(line: 187, column: 12, scope: !9484)
!9493 = !DILocation(line: 189, column: 2, scope: !9484)
!9494 = distinct !DISubprogram(name: "zbus_sub_wait", scope: !694, file: !694, line: 192, type: !9495, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !690, retainedNodes: !9498)
!9495 = !DISubroutineType(types: !9496)
!9496 = !{!103, !9280, !9497, !9147}
!9497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9161, size: 32)
!9498 = !{!9499, !9500, !9501}
!9499 = !DILocalVariable(name: "sub", arg: 1, scope: !9494, file: !694, line: 192, type: !9280)
!9500 = !DILocalVariable(name: "chan", arg: 2, scope: !9494, file: !694, line: 192, type: !9497)
!9501 = !DILocalVariable(name: "timeout", arg: 3, scope: !9494, file: !694, line: 193, type: !9147)
!9502 = !DILocation(line: 0, scope: !9494)
!9503 = !DILocation(line: 199, column: 11, scope: !9504)
!9504 = distinct !DILexicalBlock(scope: !9494, file: !694, line: 199, column: 6)
!9505 = !DILocation(line: 199, column: 17, scope: !9504)
!9506 = !DILocation(line: 199, column: 6, scope: !9494)
!9507 = !DILocation(line: 203, column: 32, scope: !9494)
!9508 = !DILocation(line: 203, column: 9, scope: !9494)
!9509 = !DILocation(line: 203, column: 2, scope: !9494)
!9510 = !DILocation(line: 204, column: 1, scope: !9494)
!9511 = distinct !DISubprogram(name: "k_msgq_get", scope: !3618, file: !3618, line: 1147, type: !9512, scopeLine: 1148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !690, retainedNodes: !9514)
!9512 = !DISubroutineType(types: !9513)
!9513 = !{!103, !9287, !102, !9147}
!9514 = !{!9515, !9516, !9517}
!9515 = !DILocalVariable(name: "msgq", arg: 1, scope: !9511, file: !3618, line: 1147, type: !9287)
!9516 = !DILocalVariable(name: "data", arg: 2, scope: !9511, file: !3618, line: 1147, type: !102)
!9517 = !DILocalVariable(name: "timeout", arg: 3, scope: !9511, file: !3618, line: 1147, type: !9147)
!9518 = !DILocation(line: 0, scope: !9511)
!9519 = !DILocation(line: 1157, column: 2, scope: !9520)
!9520 = distinct !DILexicalBlock(scope: !9511, file: !3618, line: 1157, column: 2)
!9521 = !{i64 2154847411}
!9522 = !DILocation(line: 1158, column: 9, scope: !9511)
!9523 = !DILocation(line: 1158, column: 2, scope: !9511)
!9524 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !807, file: !807, line: 368, type: !860, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9525)
!9525 = !{!9526}
!9526 = !DILocalVariable(name: "dev", arg: 1, scope: !9524, file: !807, line: 368, type: !836)
!9527 = !DILocation(line: 0, scope: !9524)
!9528 = !DILocation(line: 370, column: 2, scope: !9524)
!9529 = !DILocation(line: 371, column: 1, scope: !9524)
!9530 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !807, file: !807, line: 243, type: !9531, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9533)
!9531 = !DISubroutineType(types: !9532)
!9532 = !{null, !103, !103, !836}
!9533 = !{!9534, !9535, !9536, !9537, !9539}
!9534 = !DILocalVariable(name: "min", arg: 1, scope: !9530, file: !807, line: 243, type: !103)
!9535 = !DILocalVariable(name: "max", arg: 2, scope: !9530, file: !807, line: 243, type: !103)
!9536 = !DILocalVariable(name: "dev", arg: 3, scope: !9530, file: !807, line: 243, type: !836)
!9537 = !DILocalVariable(name: "data", scope: !9530, file: !807, line: 245, type: !9538)
!9538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !840, size: 32)
!9539 = !DILocalVariable(name: "line", scope: !9530, file: !807, line: 246, type: !103)
!9540 = !DILocation(line: 0, scope: !9530)
!9541 = !DILocation(line: 245, column: 38, scope: !9530)
!9542 = !DILocation(line: 249, column: 24, scope: !9543)
!9543 = distinct !DILexicalBlock(scope: !9544, file: !807, line: 249, column: 2)
!9544 = distinct !DILexicalBlock(scope: !9530, file: !807, line: 249, column: 2)
!9545 = !DILocation(line: 249, column: 2, scope: !9544)
!9546 = !DILocation(line: 251, column: 7, scope: !9547)
!9547 = distinct !DILexicalBlock(scope: !9548, file: !807, line: 251, column: 7)
!9548 = distinct !DILexicalBlock(scope: !9543, file: !807, line: 249, column: 39)
!9549 = !DILocation(line: 251, column: 7, scope: !9548)
!9550 = !DILocation(line: 253, column: 4, scope: !9551)
!9551 = distinct !DILexicalBlock(scope: !9547, file: !807, line: 251, column: 36)
!9552 = !DILocation(line: 256, column: 24, scope: !9553)
!9553 = distinct !DILexicalBlock(scope: !9551, file: !807, line: 256, column: 8)
!9554 = !DILocation(line: 256, column: 9, scope: !9553)
!9555 = !DILocation(line: 256, column: 8, scope: !9551)
!9556 = !DILocation(line: 260, column: 43, scope: !9551)
!9557 = !DILocation(line: 260, column: 4, scope: !9551)
!9558 = !DILocation(line: 261, column: 3, scope: !9551)
!9559 = !DILocation(line: 249, column: 35, scope: !9543)
!9560 = distinct !{!9560, !9545, !9561}
!9561 = !DILocation(line: 262, column: 2, scope: !9544)
!9562 = !DILocation(line: 263, column: 1, scope: !9530)
!9563 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !807, file: !807, line: 158, type: !396, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9564)
!9564 = !{!9565}
!9565 = !DILocalVariable(name: "line", arg: 1, scope: !9563, file: !807, line: 158, type: !103)
!9566 = !DILocation(line: 0, scope: !9563)
!9567 = !DILocation(line: 170, column: 38, scope: !9568)
!9568 = distinct !DILexicalBlock(scope: !9569, file: !807, line: 160, column: 17)
!9569 = distinct !DILexicalBlock(scope: !9563, file: !807, line: 160, column: 6)
!9570 = !DILocation(line: 170, column: 10, scope: !9568)
!9571 = !DILocation(line: 176, column: 1, scope: !9563)
!9572 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !807, file: !807, line: 183, type: !9573, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9575)
!9573 = !DISubroutineType(types: !9574)
!9574 = !{null, !103}
!9575 = !{!9576}
!9576 = !DILocalVariable(name: "line", arg: 1, scope: !9572, file: !807, line: 183, type: !103)
!9577 = !DILocation(line: 0, scope: !9572)
!9578 = !DILocation(line: 195, column: 28, scope: !9579)
!9579 = distinct !DILexicalBlock(scope: !9580, file: !807, line: 185, column: 17)
!9580 = distinct !DILexicalBlock(scope: !9572, file: !807, line: 185, column: 6)
!9581 = !DILocation(line: 195, column: 3, scope: !9579)
!9582 = !DILocation(line: 200, column: 1, scope: !9572)
!9583 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !9584, file: !9584, line: 910, type: !7403, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9585)
!9584 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9585 = !{!9586}
!9586 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9583, file: !9584, line: 910, type: !108)
!9587 = !DILocation(line: 0, scope: !9583)
!9588 = !DILocation(line: 912, column: 3, scope: !9583)
!9589 = !DILocation(line: 913, column: 1, scope: !9583)
!9590 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !9584, file: !9584, line: 834, type: !8557, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9591)
!9591 = !{!9592}
!9592 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9590, file: !9584, line: 834, type: !108)
!9593 = !DILocation(line: 0, scope: !9590)
!9594 = !DILocation(line: 836, column: 11, scope: !9590)
!9595 = !DILocation(line: 836, column: 40, scope: !9590)
!9596 = !DILocation(line: 836, column: 3, scope: !9590)
!9597 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !807, file: !807, line: 304, type: !860, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9598)
!9598 = !{!9599}
!9599 = !DILocalVariable(name: "dev", arg: 1, scope: !9597, file: !807, line: 304, type: !836)
!9600 = !DILocation(line: 0, scope: !9597)
!9601 = !DILocation(line: 306, column: 2, scope: !9597)
!9602 = !DILocation(line: 307, column: 1, scope: !9597)
!9603 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !807, file: !807, line: 299, type: !860, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9604)
!9604 = !{!9605}
!9605 = !DILocalVariable(name: "dev", arg: 1, scope: !9603, file: !807, line: 299, type: !836)
!9606 = !DILocation(line: 0, scope: !9603)
!9607 = !DILocation(line: 301, column: 2, scope: !9603)
!9608 = !DILocation(line: 302, column: 1, scope: !9603)
!9609 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !807, file: !807, line: 294, type: !860, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9610)
!9610 = !{!9611}
!9611 = !DILocalVariable(name: "dev", arg: 1, scope: !9609, file: !807, line: 294, type: !836)
!9612 = !DILocation(line: 0, scope: !9609)
!9613 = !DILocation(line: 296, column: 2, scope: !9609)
!9614 = !DILocation(line: 297, column: 1, scope: !9609)
!9615 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !807, file: !807, line: 397, type: !860, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9616)
!9616 = !{!9617}
!9617 = !DILocalVariable(name: "dev", arg: 1, scope: !9615, file: !807, line: 397, type: !836)
!9618 = !DILocation(line: 0, scope: !9615)
!9619 = !DILocation(line: 399, column: 2, scope: !9615)
!9620 = !DILocation(line: 400, column: 1, scope: !9615)
!9621 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !807, file: !807, line: 392, type: !860, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9622)
!9622 = !{!9623}
!9623 = !DILocalVariable(name: "dev", arg: 1, scope: !9621, file: !807, line: 392, type: !836)
!9624 = !DILocation(line: 0, scope: !9621)
!9625 = !DILocation(line: 394, column: 2, scope: !9621)
!9626 = !DILocation(line: 395, column: 1, scope: !9621)
!9627 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !807, file: !807, line: 289, type: !860, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9628)
!9628 = !{!9629}
!9629 = !DILocalVariable(name: "dev", arg: 1, scope: !9627, file: !807, line: 289, type: !836)
!9630 = !DILocation(line: 0, scope: !9627)
!9631 = !DILocation(line: 291, column: 2, scope: !9627)
!9632 = !DILocation(line: 292, column: 1, scope: !9627)
!9633 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !807, file: !807, line: 387, type: !860, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9634)
!9634 = !{!9635}
!9635 = !DILocalVariable(name: "dev", arg: 1, scope: !9633, file: !807, line: 387, type: !836)
!9636 = !DILocation(line: 0, scope: !9633)
!9637 = !DILocation(line: 389, column: 2, scope: !9633)
!9638 = !DILocation(line: 390, column: 1, scope: !9633)
!9639 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !807, file: !807, line: 382, type: !860, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9640)
!9640 = !{!9641}
!9641 = !DILocalVariable(name: "dev", arg: 1, scope: !9639, file: !807, line: 382, type: !836)
!9642 = !DILocation(line: 0, scope: !9639)
!9643 = !DILocation(line: 384, column: 2, scope: !9639)
!9644 = !DILocation(line: 385, column: 1, scope: !9639)
!9645 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !807, file: !807, line: 373, type: !860, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9646)
!9646 = !{!9647}
!9647 = !DILocalVariable(name: "dev", arg: 1, scope: !9645, file: !807, line: 373, type: !836)
!9648 = !DILocation(line: 0, scope: !9645)
!9649 = !DILocation(line: 375, column: 2, scope: !9645)
!9650 = !DILocation(line: 376, column: 1, scope: !9645)
!9651 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !807, file: !807, line: 284, type: !860, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9652)
!9652 = !{!9653}
!9653 = !DILocalVariable(name: "dev", arg: 1, scope: !9651, file: !807, line: 284, type: !836)
!9654 = !DILocation(line: 0, scope: !9651)
!9655 = !DILocation(line: 286, column: 2, scope: !9651)
!9656 = !DILocation(line: 287, column: 1, scope: !9651)
!9657 = distinct !DISubprogram(name: "stm32_exti_init", scope: !807, file: !807, line: 416, type: !834, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9658)
!9658 = !{!9659}
!9659 = !DILocalVariable(name: "dev", arg: 1, scope: !9657, file: !807, line: 416, type: !836)
!9660 = !DILocation(line: 0, scope: !9657)
!9661 = !DILocation(line: 418, column: 2, scope: !9657)
!9662 = !DILocation(line: 420, column: 2, scope: !9657)
!9663 = !DILocation(line: 0, scope: !859)
!9664 = !DILocation(line: 493, column: 2, scope: !9665)
!9665 = distinct !DILexicalBlock(scope: !859, file: !807, line: 493, column: 2)
!9666 = !DILocation(line: 497, column: 2, scope: !9667)
!9667 = distinct !DILexicalBlock(scope: !859, file: !807, line: 497, column: 2)
!9668 = !DILocation(line: 507, column: 2, scope: !9669)
!9669 = distinct !DILexicalBlock(scope: !859, file: !807, line: 507, column: 2)
!9670 = !DILocation(line: 512, column: 2, scope: !9671)
!9671 = distinct !DILexicalBlock(scope: !859, file: !807, line: 512, column: 2)
!9672 = !DILocation(line: 516, column: 2, scope: !9673)
!9673 = distinct !DILexicalBlock(scope: !859, file: !807, line: 516, column: 2)
!9674 = !DILocation(line: 523, column: 2, scope: !9675)
!9675 = distinct !DILexicalBlock(scope: !859, file: !807, line: 523, column: 2)
!9676 = !DILocation(line: 527, column: 2, scope: !9677)
!9677 = distinct !DILexicalBlock(scope: !859, file: !807, line: 527, column: 2)
!9678 = !DILocation(line: 581, column: 2, scope: !9679)
!9679 = distinct !DILexicalBlock(scope: !859, file: !807, line: 581, column: 2)
!9680 = !DILocation(line: 586, column: 2, scope: !9681)
!9681 = distinct !DILexicalBlock(scope: !859, file: !807, line: 586, column: 2)
!9682 = !DILocation(line: 591, column: 2, scope: !9683)
!9683 = distinct !DILexicalBlock(scope: !859, file: !807, line: 591, column: 2)
!9684 = !DILocation(line: 595, column: 2, scope: !9685)
!9685 = distinct !DILexicalBlock(scope: !859, file: !807, line: 595, column: 2)
!9686 = !DILocation(line: 607, column: 1, scope: !859)
!9687 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !807, file: !807, line: 112, type: !9573, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9688)
!9688 = !{!9689, !9690}
!9689 = !DILocalVariable(name: "line", arg: 1, scope: !9687, file: !807, line: 112, type: !103)
!9690 = !DILocalVariable(name: "irqnum", scope: !9687, file: !807, line: 114, type: !103)
!9691 = !DILocation(line: 0, scope: !9687)
!9692 = !DILocation(line: 121, column: 11, scope: !9687)
!9693 = !DILocation(line: 130, column: 26, scope: !9687)
!9694 = !DILocation(line: 130, column: 2, scope: !9687)
!9695 = !DILocation(line: 134, column: 2, scope: !9687)
!9696 = !DILocation(line: 135, column: 1, scope: !9687)
!9697 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !9584, file: !9584, line: 268, type: !7403, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9698)
!9698 = !{!9699}
!9699 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9697, file: !9584, line: 268, type: !108)
!9700 = !DILocation(line: 0, scope: !9697)
!9701 = !DILocation(line: 270, column: 3, scope: !9697)
!9702 = !DILocation(line: 271, column: 1, scope: !9697)
!9703 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !807, file: !807, line: 137, type: !9573, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9704)
!9704 = !{!9705}
!9705 = !DILocalVariable(name: "line", arg: 1, scope: !9703, file: !807, line: 137, type: !103)
!9706 = !DILocation(line: 0, scope: !9703)
!9707 = !DILocation(line: 141, column: 11, scope: !9708)
!9708 = distinct !DILexicalBlock(scope: !9703, file: !807, line: 141, column: 6)
!9709 = !DILocation(line: 141, column: 6, scope: !9703)
!9710 = !DILocation(line: 145, column: 28, scope: !9711)
!9711 = distinct !DILexicalBlock(scope: !9708, file: !807, line: 141, column: 17)
!9712 = !DILocation(line: 145, column: 3, scope: !9711)
!9713 = !DILocation(line: 147, column: 2, scope: !9711)
!9714 = !DILocation(line: 151, column: 1, scope: !9703)
!9715 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !9584, file: !9584, line: 309, type: !7403, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9716)
!9716 = !{!9717}
!9717 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9715, file: !9584, line: 309, type: !108)
!9718 = !DILocation(line: 0, scope: !9715)
!9719 = !DILocation(line: 311, column: 3, scope: !9715)
!9720 = !DILocation(line: 312, column: 1, scope: !9715)
!9721 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !807, file: !807, line: 202, type: !9722, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9724)
!9722 = !DISubroutineType(types: !9723)
!9723 = !{null, !103, !103}
!9724 = !{!9725, !9726}
!9725 = !DILocalVariable(name: "line", arg: 1, scope: !9721, file: !807, line: 202, type: !103)
!9726 = !DILocalVariable(name: "trigger", arg: 2, scope: !9721, file: !807, line: 202, type: !103)
!9727 = !DILocation(line: 0, scope: !9721)
!9728 = !DILocation(line: 211, column: 2, scope: !9721)
!9729 = !DILocation(line: 213, column: 36, scope: !9730)
!9730 = distinct !DILexicalBlock(scope: !9721, file: !807, line: 211, column: 19)
!9731 = !DILocation(line: 213, column: 3, scope: !9730)
!9732 = !DILocation(line: 214, column: 3, scope: !9730)
!9733 = !DILocation(line: 215, column: 3, scope: !9730)
!9734 = !DILocation(line: 217, column: 35, scope: !9730)
!9735 = !DILocation(line: 217, column: 3, scope: !9730)
!9736 = !DILocation(line: 218, column: 3, scope: !9730)
!9737 = !DILocation(line: 219, column: 3, scope: !9730)
!9738 = !DILocation(line: 221, column: 36, scope: !9730)
!9739 = !DILocation(line: 221, column: 3, scope: !9730)
!9740 = !DILocation(line: 222, column: 3, scope: !9730)
!9741 = !DILocation(line: 223, column: 3, scope: !9730)
!9742 = !DILocation(line: 225, column: 35, scope: !9730)
!9743 = !DILocation(line: 225, column: 3, scope: !9730)
!9744 = !DILocation(line: 226, column: 3, scope: !9730)
!9745 = !DILocation(line: 227, column: 3, scope: !9730)
!9746 = !DILocation(line: 232, column: 1, scope: !9721)
!9747 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !9584, file: !9584, line: 573, type: !7403, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9748)
!9748 = !{!9749}
!9749 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9747, file: !9584, line: 573, type: !108)
!9750 = !DILocation(line: 0, scope: !9747)
!9751 = !DILocation(line: 575, column: 3, scope: !9747)
!9752 = !DILocation(line: 577, column: 1, scope: !9747)
!9753 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !9584, file: !9584, line: 703, type: !7403, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9754)
!9754 = !{!9755}
!9755 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9753, file: !9584, line: 703, type: !108)
!9756 = !DILocation(line: 0, scope: !9753)
!9757 = !DILocation(line: 705, column: 3, scope: !9753)
!9758 = !DILocation(line: 706, column: 1, scope: !9753)
!9759 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !9584, file: !9584, line: 529, type: !7403, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9760)
!9760 = !{!9761}
!9761 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9759, file: !9584, line: 529, type: !108)
!9762 = !DILocation(line: 0, scope: !9759)
!9763 = !DILocation(line: 531, column: 3, scope: !9759)
!9764 = !DILocation(line: 533, column: 1, scope: !9759)
!9765 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !9584, file: !9584, line: 661, type: !7403, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9766)
!9766 = !{!9767}
!9767 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9765, file: !9584, line: 661, type: !108)
!9768 = !DILocation(line: 0, scope: !9765)
!9769 = !DILocation(line: 663, column: 3, scope: !9765)
!9770 = !DILocation(line: 664, column: 1, scope: !9765)
!9771 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !807, file: !807, line: 433, type: !9772, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9774)
!9772 = !DISubroutineType(types: !9773)
!9773 = !{!103, !103, !847, !102}
!9774 = !{!9775, !9776, !9777, !9778, !9780}
!9775 = !DILocalVariable(name: "line", arg: 1, scope: !9771, file: !807, line: 433, type: !103)
!9776 = !DILocalVariable(name: "cb", arg: 2, scope: !9771, file: !807, line: 433, type: !847)
!9777 = !DILocalVariable(name: "arg", arg: 3, scope: !9771, file: !807, line: 433, type: !102)
!9778 = !DILocalVariable(name: "dev", scope: !9771, file: !807, line: 435, type: !9779)
!9779 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !836)
!9780 = !DILocalVariable(name: "data", scope: !9771, file: !807, line: 436, type: !9538)
!9781 = !DILocation(line: 0, scope: !9771)
!9782 = !DILocation(line: 438, column: 21, scope: !9783)
!9783 = distinct !DILexicalBlock(scope: !9771, file: !807, line: 438, column: 6)
!9784 = !DILocation(line: 438, column: 6, scope: !9783)
!9785 = !DILocation(line: 438, column: 6, scope: !9771)
!9786 = !DILocation(line: 442, column: 20, scope: !9771)
!9787 = !DILocation(line: 443, column: 17, scope: !9771)
!9788 = !DILocation(line: 443, column: 22, scope: !9771)
!9789 = !DILocation(line: 445, column: 2, scope: !9771)
!9790 = !DILocation(line: 446, column: 1, scope: !9771)
!9791 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !807, file: !807, line: 448, type: !9573, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9792)
!9792 = !{!9793, !9794, !9795}
!9793 = !DILocalVariable(name: "line", arg: 1, scope: !9791, file: !807, line: 448, type: !103)
!9794 = !DILocalVariable(name: "dev", scope: !9791, file: !807, line: 450, type: !9779)
!9795 = !DILocalVariable(name: "data", scope: !9791, file: !807, line: 451, type: !9538)
!9796 = !DILocation(line: 0, scope: !9791)
!9797 = !DILocation(line: 453, column: 17, scope: !9791)
!9798 = !DILocation(line: 453, column: 20, scope: !9791)
!9799 = !DILocation(line: 454, column: 17, scope: !9791)
!9800 = !DILocation(line: 454, column: 22, scope: !9791)
!9801 = !DILocation(line: 455, column: 1, scope: !9791)
!9802 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !990, file: !990, line: 183, type: !1028, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !929, retainedNodes: !9803)
!9803 = !{!9804, !9805, !9806, !9807, !9808}
!9804 = !DILocalVariable(name: "dev", arg: 1, scope: !9802, file: !990, line: 183, type: !1019)
!9805 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9802, file: !990, line: 184, type: !1030)
!9806 = !DILocalVariable(name: "pclken", scope: !9802, file: !990, line: 186, type: !980)
!9807 = !DILocalVariable(name: "reg", scope: !9802, file: !990, line: 187, type: !1580)
!9808 = !DILocalVariable(name: "reg_val", scope: !9802, file: !990, line: 188, type: !108)
!9809 = !DILocation(line: 0, scope: !9802)
!9810 = !DILocation(line: 192, column: 6, scope: !9811)
!9811 = distinct !DILexicalBlock(scope: !9802, file: !990, line: 192, column: 6)
!9812 = !DILocation(line: 192, column: 6, scope: !9802)
!9813 = !DILocation(line: 197, column: 52, scope: !9802)
!9814 = !DILocation(line: 197, column: 8, scope: !9802)
!9815 = !DILocation(line: 198, column: 12, scope: !9802)
!9816 = !DILocation(line: 199, column: 21, scope: !9802)
!9817 = !DILocation(line: 199, column: 10, scope: !9802)
!9818 = !DILocation(line: 200, column: 7, scope: !9802)
!9819 = !DILocation(line: 202, column: 2, scope: !9802)
!9820 = !DILocation(line: 203, column: 1, scope: !9802)
!9821 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !990, file: !990, line: 205, type: !1028, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !929, retainedNodes: !9822)
!9822 = !{!9823, !9824, !9825, !9826, !9827}
!9823 = !DILocalVariable(name: "dev", arg: 1, scope: !9821, file: !990, line: 205, type: !1019)
!9824 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9821, file: !990, line: 206, type: !1030)
!9825 = !DILocalVariable(name: "pclken", scope: !9821, file: !990, line: 208, type: !980)
!9826 = !DILocalVariable(name: "reg", scope: !9821, file: !990, line: 209, type: !1580)
!9827 = !DILocalVariable(name: "reg_val", scope: !9821, file: !990, line: 210, type: !108)
!9828 = !DILocation(line: 0, scope: !9821)
!9829 = !DILocation(line: 214, column: 6, scope: !9830)
!9830 = distinct !DILexicalBlock(scope: !9821, file: !990, line: 214, column: 6)
!9831 = !DILocation(line: 214, column: 6, scope: !9821)
!9832 = !DILocation(line: 219, column: 52, scope: !9821)
!9833 = !DILocation(line: 219, column: 8, scope: !9821)
!9834 = !DILocation(line: 220, column: 12, scope: !9821)
!9835 = !DILocation(line: 221, column: 22, scope: !9821)
!9836 = !DILocation(line: 221, column: 13, scope: !9821)
!9837 = !DILocation(line: 221, column: 10, scope: !9821)
!9838 = !DILocation(line: 222, column: 7, scope: !9821)
!9839 = !DILocation(line: 224, column: 2, scope: !9821)
!9840 = !DILocation(line: 225, column: 1, scope: !9821)
!9841 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !990, file: !990, line: 262, type: !1044, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !929, retainedNodes: !9842)
!9842 = !{!9843, !9844, !9845, !9846, !9847, !9848, !9849, !9850}
!9843 = !DILocalVariable(name: "clock", arg: 1, scope: !9841, file: !990, line: 262, type: !1019)
!9844 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9841, file: !990, line: 263, type: !1030)
!9845 = !DILocalVariable(name: "rate", arg: 3, scope: !9841, file: !990, line: 264, type: !986)
!9846 = !DILocalVariable(name: "pclken", scope: !9841, file: !990, line: 266, type: !980)
!9847 = !DILocalVariable(name: "ahb_clock", scope: !9841, file: !990, line: 273, type: !108)
!9848 = !DILocalVariable(name: "apb1_clock", scope: !9841, file: !990, line: 274, type: !108)
!9849 = !DILocalVariable(name: "apb2_clock", scope: !9841, file: !990, line: 276, type: !108)
!9850 = !DILocalVariable(name: "ahb3_clock", scope: !9841, file: !990, line: 286, type: !108)
!9851 = !DILocation(line: 0, scope: !9841)
!9852 = !DILocation(line: 273, column: 23, scope: !9841)
!9853 = !DILocation(line: 299, column: 18, scope: !9841)
!9854 = !DILocation(line: 299, column: 2, scope: !9841)
!9855 = !DILocation(line: 274, column: 24, scope: !9841)
!9856 = !DILocation(line: 319, column: 3, scope: !9857)
!9857 = distinct !DILexicalBlock(scope: !9841, file: !990, line: 299, column: 23)
!9858 = !DILocation(line: 276, column: 24, scope: !9841)
!9859 = !DILocation(line: 323, column: 3, scope: !9857)
!9860 = !DILocation(line: 346, column: 33, scope: !9857)
!9861 = !DILocation(line: 346, column: 11, scope: !9857)
!9862 = !DILocation(line: 350, column: 3, scope: !9857)
!9863 = !DILocation(line: 354, column: 33, scope: !9857)
!9864 = !DILocation(line: 354, column: 11, scope: !9857)
!9865 = !DILocation(line: 358, column: 3, scope: !9857)
!9866 = !DILocation(line: 374, column: 3, scope: !9857)
!9867 = !DILocation(line: 379, column: 3, scope: !9857)
!9868 = !DILocation(line: 0, scope: !9857)
!9869 = !DILocation(line: 396, column: 1, scope: !9841)
!9870 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !990, file: !990, line: 227, type: !1060, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !929, retainedNodes: !9871)
!9871 = !{!9872, !9873, !9874, !9875, !9876, !9877, !9878, !9879}
!9872 = !DILocalVariable(name: "dev", arg: 1, scope: !9870, file: !990, line: 227, type: !1019)
!9873 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9870, file: !990, line: 228, type: !1030)
!9874 = !DILocalVariable(name: "data", arg: 3, scope: !9870, file: !990, line: 229, type: !102)
!9875 = !DILocalVariable(name: "pclken", scope: !9870, file: !990, line: 233, type: !980)
!9876 = !DILocalVariable(name: "reg", scope: !9870, file: !990, line: 234, type: !1580)
!9877 = !DILocalVariable(name: "reg_val", scope: !9870, file: !990, line: 235, type: !108)
!9878 = !DILocalVariable(name: "dt_val", scope: !9870, file: !990, line: 235, type: !108)
!9879 = !DILocalVariable(name: "err", scope: !9870, file: !990, line: 236, type: !103)
!9880 = !DILocation(line: 0, scope: !9870)
!9881 = !DILocation(line: 241, column: 30, scope: !9870)
!9882 = !DILocation(line: 241, column: 8, scope: !9870)
!9883 = !DILocation(line: 242, column: 10, scope: !9884)
!9884 = distinct !DILexicalBlock(scope: !9870, file: !990, line: 242, column: 6)
!9885 = !DILocation(line: 242, column: 6, scope: !9870)
!9886 = !DILocation(line: 247, column: 11, scope: !9870)
!9887 = !DILocation(line: 248, column: 6, scope: !9870)
!9888 = !DILocation(line: 247, column: 44, scope: !9870)
!9889 = !DILocation(line: 250, column: 6, scope: !9870)
!9890 = !DILocation(line: 249, column: 52, scope: !9870)
!9891 = !DILocation(line: 249, column: 8, scope: !9870)
!9892 = !DILocation(line: 251, column: 12, scope: !9870)
!9893 = !DILocation(line: 252, column: 10, scope: !9870)
!9894 = !DILocation(line: 253, column: 7, scope: !9870)
!9895 = !DILocation(line: 255, column: 2, scope: !9870)
!9896 = !DILocation(line: 260, column: 1, scope: !9870)
!9897 = distinct !DISubprogram(name: "enabled_clock", scope: !990, file: !990, line: 100, type: !9898, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !929, retainedNodes: !9900)
!9898 = !DISubroutineType(types: !9899)
!9899 = !{!103, !108}
!9900 = !{!9901, !9902}
!9901 = !DILocalVariable(name: "src_clk", arg: 1, scope: !9897, file: !990, line: 100, type: !108)
!9902 = !DILocalVariable(name: "r", scope: !9897, file: !990, line: 102, type: !103)
!9903 = !DILocation(line: 0, scope: !9897)
!9904 = !DILocation(line: 104, column: 2, scope: !9897)
!9905 = !DILocation(line: 180, column: 2, scope: !9897)
!9906 = !DILocation(line: 181, column: 1, scope: !9897)
!9907 = distinct !DISubprogram(name: "get_bus_clock", scope: !990, file: !990, line: 79, type: !9908, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !929, retainedNodes: !9910)
!9908 = !DISubroutineType(types: !9909)
!9909 = !{!108, !108, !108}
!9910 = !{!9911, !9912}
!9911 = !DILocalVariable(name: "clock", arg: 1, scope: !9907, file: !990, line: 79, type: !108)
!9912 = !DILocalVariable(name: "prescaler", arg: 2, scope: !9907, file: !990, line: 79, type: !108)
!9913 = !DILocation(line: 0, scope: !9907)
!9914 = !DILocation(line: 81, column: 15, scope: !9907)
!9915 = !DILocation(line: 81, column: 2, scope: !9907)
!9916 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !990, file: !990, line: 68, type: !9917, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !929, retainedNodes: !9919)
!9917 = !DISubroutineType(types: !9918)
!9918 = !{!108, !108, !103, !103, !103}
!9919 = !{!9920, !9921, !9922, !9923}
!9920 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !9916, file: !990, line: 68, type: !108)
!9921 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !9916, file: !990, line: 69, type: !103)
!9922 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !9916, file: !990, line: 70, type: !103)
!9923 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !9916, file: !990, line: 71, type: !103)
!9924 = !DILocation(line: 0, scope: !9916)
!9925 = !DILocation(line: 75, column: 22, scope: !9916)
!9926 = !DILocation(line: 76, column: 13, scope: !9916)
!9927 = !DILocation(line: 75, column: 34, scope: !9916)
!9928 = !DILocation(line: 75, column: 2, scope: !9916)
!9929 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !990, file: !990, line: 641, type: !1017, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !929, retainedNodes: !9930)
!9930 = !{!9931, !9932, !9933}
!9931 = !DILocalVariable(name: "dev", arg: 1, scope: !9929, file: !990, line: 641, type: !1019)
!9932 = !DILocalVariable(name: "old_flash_freq", scope: !9929, file: !990, line: 664, type: !108)
!9933 = !DILocalVariable(name: "new_flash_freq", scope: !9929, file: !990, line: 665, type: !108)
!9934 = !DILocation(line: 0, scope: !9929)
!9935 = !DILocation(line: 646, column: 2, scope: !9929)
!9936 = !DILocation(line: 667, column: 19, scope: !9929)
!9937 = !DILocation(line: 674, column: 21, scope: !9938)
!9938 = distinct !DILexicalBlock(scope: !9929, file: !990, line: 674, column: 6)
!9939 = !DILocation(line: 674, column: 6, scope: !9929)
!9940 = !DILocation(line: 675, column: 3, scope: !9941)
!9941 = distinct !DILexicalBlock(scope: !9938, file: !990, line: 674, column: 59)
!9942 = !DILocation(line: 676, column: 2, scope: !9941)
!9943 = !DILocation(line: 680, column: 2, scope: !9929)
!9944 = !DILocation(line: 683, column: 2, scope: !9929)
!9945 = !DILocation(line: 690, column: 3, scope: !9946)
!9946 = distinct !DILexicalBlock(scope: !9947, file: !990, line: 689, column: 9)
!9947 = distinct !DILexicalBlock(scope: !9929, file: !990, line: 685, column: 6)
!9948 = !DILocation(line: 695, column: 2, scope: !9929)
!9949 = !DILocation(line: 696, column: 2, scope: !9929)
!9950 = !DILocation(line: 696, column: 9, scope: !9929)
!9951 = !DILocation(line: 696, column: 34, scope: !9929)
!9952 = distinct !{!9952, !9949, !9953}
!9953 = !DILocation(line: 697, column: 2, scope: !9929)
!9954 = !DILocation(line: 720, column: 21, scope: !9955)
!9955 = distinct !DILexicalBlock(scope: !9929, file: !990, line: 720, column: 6)
!9956 = !DILocation(line: 720, column: 6, scope: !9929)
!9957 = !DILocation(line: 721, column: 3, scope: !9958)
!9958 = distinct !DILexicalBlock(scope: !9955, file: !990, line: 720, column: 60)
!9959 = !DILocation(line: 722, column: 2, scope: !9958)
!9960 = !DILocation(line: 725, column: 18, scope: !9929)
!9961 = !DILocation(line: 728, column: 2, scope: !9929)
!9962 = !DILocation(line: 730, column: 2, scope: !9929)
!9963 = !DILocation(line: 745, column: 2, scope: !9929)
!9964 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !9965, file: !9965, line: 3275, type: !3598, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !929, retainedNodes: !251)
!9965 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9966 = !DILocation(line: 3277, column: 21, scope: !9964)
!9967 = !DILocation(line: 3277, column: 3, scope: !9964)
!9968 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !990, file: !990, line: 507, type: !334, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !929, retainedNodes: !251)
!9969 = !DILocation(line: 516, column: 4, scope: !9970)
!9970 = distinct !DILexicalBlock(scope: !9971, file: !990, line: 515, column: 10)
!9971 = distinct !DILexicalBlock(scope: !9972, file: !990, line: 513, column: 7)
!9972 = distinct !DILexicalBlock(scope: !9973, file: !990, line: 510, column: 37)
!9973 = distinct !DILexicalBlock(scope: !9968, file: !990, line: 510, column: 6)
!9974 = !DILocation(line: 526, column: 3, scope: !9972)
!9975 = !DILocation(line: 527, column: 3, scope: !9972)
!9976 = !DILocation(line: 527, column: 10, scope: !9972)
!9977 = !DILocation(line: 527, column: 31, scope: !9972)
!9978 = distinct !{!9978, !9975, !9979}
!9979 = !DILocation(line: 529, column: 3, scope: !9972)
!9980 = !DILocation(line: 583, column: 3, scope: !9981)
!9981 = distinct !DILexicalBlock(scope: !9982, file: !990, line: 577, column: 37)
!9982 = distinct !DILexicalBlock(scope: !9968, file: !990, line: 577, column: 6)
!9983 = !DILocation(line: 584, column: 3, scope: !9981)
!9984 = !DILocation(line: 584, column: 10, scope: !9981)
!9985 = !DILocation(line: 584, column: 31, scope: !9981)
!9986 = distinct !{!9986, !9983, !9987}
!9987 = !DILocation(line: 585, column: 3, scope: !9981)
!9988 = !DILocation(line: 627, column: 1, scope: !9968)
!9989 = distinct !DISubprogram(name: "set_up_plls", scope: !990, file: !990, line: 448, type: !334, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !929, retainedNodes: !251)
!9990 = !DILocation(line: 460, column: 6, scope: !9991)
!9991 = distinct !DILexicalBlock(scope: !9989, file: !990, line: 460, column: 6)
!9992 = !DILocation(line: 460, column: 31, scope: !9991)
!9993 = !DILocation(line: 460, column: 6, scope: !9989)
!9994 = !DILocation(line: 461, column: 3, scope: !9995)
!9995 = distinct !DILexicalBlock(scope: !9991, file: !990, line: 460, column: 67)
!9996 = !DILocation(line: 462, column: 3, scope: !9995)
!9997 = !DILocation(line: 463, column: 2, scope: !9995)
!9998 = !DILocation(line: 464, column: 2, scope: !9989)
!9999 = !DILocation(line: 488, column: 2, scope: !9989)
!10000 = !DILocation(line: 492, column: 2, scope: !9989)
!10001 = !DILocation(line: 496, column: 2, scope: !9989)
!10002 = !DILocation(line: 499, column: 2, scope: !9989)
!10003 = !DILocation(line: 500, column: 2, scope: !9989)
!10004 = !DILocation(line: 500, column: 9, scope: !9989)
!10005 = !DILocation(line: 500, column: 30, scope: !9989)
!10006 = distinct !{!10006, !10003, !10007}
!10007 = !DILocation(line: 502, column: 2, scope: !9989)
!10008 = !DILocation(line: 505, column: 1, scope: !9989)
!10009 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !9965, file: !9965, line: 3224, type: !7403, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !929, retainedNodes: !10010)
!10010 = !{!10011}
!10011 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10009, file: !9965, line: 3224, type: !108)
!10012 = !DILocation(line: 0, scope: !10009)
!10013 = !DILocation(line: 3226, column: 3, scope: !10009)
!10014 = !DILocation(line: 3227, column: 1, scope: !10009)
!10015 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !9965, file: !9965, line: 3188, type: !7403, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !929, retainedNodes: !10016)
!10016 = !{!10017}
!10017 = !DILocalVariable(name: "Source", arg: 1, scope: !10015, file: !9965, line: 3188, type: !108)
!10018 = !DILocation(line: 0, scope: !10015)
!10019 = !DILocation(line: 3190, column: 3, scope: !10015)
!10020 = !DILocation(line: 3191, column: 1, scope: !10015)
!10021 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !9965, file: !9965, line: 3204, type: !3598, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !929, retainedNodes: !251)
!10022 = !DILocation(line: 3206, column: 21, scope: !10021)
!10023 = !DILocation(line: 3206, column: 3, scope: !10021)
!10024 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !9965, file: !9965, line: 3240, type: !7403, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !929, retainedNodes: !10025)
!10025 = !{!10026}
!10026 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10024, file: !9965, line: 3240, type: !108)
!10027 = !DILocation(line: 0, scope: !10024)
!10028 = !DILocation(line: 3242, column: 3, scope: !10024)
!10029 = !DILocation(line: 3243, column: 1, scope: !10024)
!10030 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !9965, file: !9965, line: 3256, type: !7403, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !929, retainedNodes: !10031)
!10031 = !{!10032}
!10032 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10030, file: !9965, line: 3256, type: !108)
!10033 = !DILocation(line: 0, scope: !10030)
!10034 = !DILocation(line: 3258, column: 3, scope: !10030)
!10035 = !DILocation(line: 3259, column: 1, scope: !10030)
!10036 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !990, file: !990, line: 409, type: !334, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !929, retainedNodes: !251)
!10037 = !DILocation(line: 412, column: 6, scope: !10038)
!10038 = distinct !DILexicalBlock(scope: !10036, file: !990, line: 412, column: 6)
!10039 = !DILocation(line: 412, column: 27, scope: !10038)
!10040 = !DILocation(line: 412, column: 6, scope: !10036)
!10041 = !DILocation(line: 414, column: 3, scope: !10042)
!10042 = distinct !DILexicalBlock(scope: !10038, file: !990, line: 412, column: 33)
!10043 = !DILocation(line: 415, column: 3, scope: !10042)
!10044 = !DILocation(line: 415, column: 10, scope: !10042)
!10045 = !DILocation(line: 415, column: 31, scope: !10042)
!10046 = distinct !{!10046, !10043, !10047}
!10047 = !DILocation(line: 417, column: 3, scope: !10042)
!10048 = !DILocation(line: 421, column: 2, scope: !10036)
!10049 = !DILocation(line: 422, column: 2, scope: !10036)
!10050 = !DILocation(line: 422, column: 9, scope: !10036)
!10051 = !DILocation(line: 422, column: 34, scope: !10036)
!10052 = distinct !{!10052, !10049, !10053}
!10053 = !DILocation(line: 423, column: 2, scope: !10036)
!10054 = !DILocation(line: 424, column: 1, scope: !10036)
!10055 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !9965, file: !9965, line: 4195, type: !334, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !929, retainedNodes: !251)
!10056 = !DILocation(line: 4197, column: 3, scope: !10055)
!10057 = !DILocation(line: 4198, column: 1, scope: !10055)
!10058 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !9965, file: !9965, line: 4184, type: !334, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !929, retainedNodes: !251)
!10059 = !DILocation(line: 4186, column: 3, scope: !10058)
!10060 = !DILocation(line: 4187, column: 1, scope: !10058)
!10061 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !9965, file: !9965, line: 4205, type: !3598, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !929, retainedNodes: !251)
!10062 = !DILocation(line: 4207, column: 11, scope: !10061)
!10063 = !DILocation(line: 4207, column: 44, scope: !10061)
!10064 = !DILocation(line: 4207, column: 3, scope: !10061)
!10065 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !9965, file: !9965, line: 3007, type: !3598, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !929, retainedNodes: !251)
!10066 = !DILocation(line: 3009, column: 11, scope: !10065)
!10067 = !DILocation(line: 3009, column: 44, scope: !10065)
!10068 = !DILocation(line: 3009, column: 3, scope: !10065)
!10069 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !9965, file: !9965, line: 2987, type: !334, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !929, retainedNodes: !251)
!10070 = !DILocation(line: 2989, column: 3, scope: !10069)
!10071 = !DILocation(line: 2990, column: 1, scope: !10069)
!10072 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !9965, file: !9965, line: 2939, type: !334, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !929, retainedNodes: !251)
!10073 = !DILocation(line: 2941, column: 3, scope: !10072)
!10074 = !DILocation(line: 2942, column: 1, scope: !10072)
!10075 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !9965, file: !9965, line: 2949, type: !334, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !929, retainedNodes: !251)
!10076 = !DILocation(line: 2951, column: 3, scope: !10075)
!10077 = !DILocation(line: 2952, column: 1, scope: !10075)
!10078 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !9965, file: !9965, line: 2969, type: !3598, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !929, retainedNodes: !251)
!10079 = !DILocation(line: 2971, column: 11, scope: !10078)
!10080 = !DILocation(line: 2971, column: 44, scope: !10078)
!10081 = !DILocation(line: 2971, column: 3, scope: !10078)
!10082 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !9965, file: !9965, line: 3143, type: !334, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !929, retainedNodes: !251)
!10083 = !DILocation(line: 3145, column: 3, scope: !10082)
!10084 = !DILocation(line: 3146, column: 1, scope: !10082)
!10085 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !9965, file: !9965, line: 3163, type: !3598, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !929, retainedNodes: !251)
!10086 = !DILocation(line: 3165, column: 11, scope: !10085)
!10087 = !DILocation(line: 3165, column: 46, scope: !10085)
!10088 = !DILocation(line: 3165, column: 3, scope: !10085)
!10089 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !10090, file: !10090, line: 40, type: !3598, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3030, retainedNodes: !251)
!10090 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10091 = !DILocation(line: 45, column: 3, scope: !10092)
!10092 = distinct !DILexicalBlock(scope: !10093, file: !10090, line: 44, column: 44)
!10093 = distinct !DILexicalBlock(scope: !10094, file: !10090, line: 44, column: 13)
!10094 = distinct !DILexicalBlock(scope: !10089, file: !10090, line: 42, column: 6)
!10095 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !10090, file: !10090, line: 56, type: !334, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3030, retainedNodes: !251)
!10096 = !DILocation(line: 58, column: 2, scope: !10095)
!10097 = !DILocation(line: 62, column: 1, scope: !10095)
!10098 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !9965, file: !9965, line: 4304, type: !10099, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3030, retainedNodes: !10101)
!10099 = !DISubroutineType(types: !10100)
!10100 = !{null, !108, !108, !108, !108}
!10101 = !{!10102, !10103, !10104, !10105}
!10102 = !DILocalVariable(name: "Source", arg: 1, scope: !10098, file: !9965, line: 4304, type: !108)
!10103 = !DILocalVariable(name: "PLLM", arg: 2, scope: !10098, file: !9965, line: 4304, type: !108)
!10104 = !DILocalVariable(name: "PLLN", arg: 3, scope: !10098, file: !9965, line: 4304, type: !108)
!10105 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !10098, file: !9965, line: 4304, type: !108)
!10106 = !DILocation(line: 0, scope: !10098)
!10107 = !DILocation(line: 4306, column: 3, scope: !10098)
!10108 = !DILocation(line: 4308, column: 3, scope: !10098)
!10109 = !DILocation(line: 4312, column: 1, scope: !10098)
!10110 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !10090, file: !10090, line: 69, type: !334, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3030, retainedNodes: !251)
!10111 = !DILocation(line: 72, column: 2, scope: !10110)
!10112 = !DILocation(line: 73, column: 1, scope: !10110)
!10113 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !10114, file: !10114, line: 1185, type: !7403, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3030, retainedNodes: !10115)
!10114 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10115 = !{!10116, !10117}
!10116 = !DILocalVariable(name: "Periphs", arg: 1, scope: !10113, file: !10114, line: 1185, type: !108)
!10117 = !DILocalVariable(name: "tmpreg", scope: !10113, file: !10114, line: 1187, type: !409)
!10118 = !DILocation(line: 0, scope: !10113)
!10119 = !DILocation(line: 1187, column: 3, scope: !10113)
!10120 = !DILocation(line: 1187, column: 17, scope: !10113)
!10121 = !DILocation(line: 1188, column: 3, scope: !10113)
!10122 = !DILocation(line: 1190, column: 12, scope: !10113)
!10123 = !DILocation(line: 1190, column: 10, scope: !10113)
!10124 = !DILocation(line: 1191, column: 9, scope: !10113)
!10125 = !DILocation(line: 1192, column: 1, scope: !10113)
!10126 = distinct !DISubprogram(name: "uart_console_init", scope: !1121, file: !1121, line: 588, type: !1098, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1064, retainedNodes: !10127)
!10127 = !{!10128}
!10128 = !DILocalVariable(name: "arg", arg: 1, scope: !10126, file: !1121, line: 588, type: !1076)
!10129 = !DILocation(line: 0, scope: !10126)
!10130 = !DILocation(line: 593, column: 7, scope: !10131)
!10131 = distinct !DILexicalBlock(scope: !10126, file: !1121, line: 593, column: 6)
!10132 = !DILocation(line: 593, column: 6, scope: !10126)
!10133 = !DILocation(line: 597, column: 2, scope: !10126)
!10134 = !DILocation(line: 599, column: 2, scope: !10126)
!10135 = !DILocation(line: 600, column: 1, scope: !10126)
!10136 = distinct !DISubprogram(name: "device_is_ready", scope: !10137, file: !10137, line: 47, type: !10138, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1064, retainedNodes: !10140)
!10137 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!10138 = !DISubroutineType(types: !10139)
!10139 = !{!131, !1076}
!10140 = !{!10141}
!10141 = !DILocalVariable(name: "dev", arg: 1, scope: !10136, file: !10137, line: 47, type: !1076)
!10142 = !DILocation(line: 0, scope: !10136)
!10143 = !DILocation(line: 55, column: 2, scope: !10144)
!10144 = distinct !DILexicalBlock(scope: !10136, file: !10137, line: 55, column: 2)
!10145 = !{i64 2155044896}
!10146 = !DILocation(line: 56, column: 9, scope: !10136)
!10147 = !DILocation(line: 56, column: 2, scope: !10136)
!10148 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1121, file: !1121, line: 573, type: !334, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1064, retainedNodes: !251)
!10149 = !DILocation(line: 576, column: 2, scope: !10148)
!10150 = !DILocation(line: 579, column: 2, scope: !10148)
!10151 = !DILocation(line: 581, column: 1, scope: !10148)
!10152 = distinct !DISubprogram(name: "console_out", scope: !1121, file: !1121, line: 77, type: !396, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1064, retainedNodes: !10153)
!10153 = !{!10154}
!10154 = !DILocalVariable(name: "c", arg: 1, scope: !10152, file: !1121, line: 77, type: !103)
!10155 = !DILocation(line: 0, scope: !10152)
!10156 = !DILocation(line: 89, column: 11, scope: !10157)
!10157 = distinct !DILexicalBlock(scope: !10152, file: !1121, line: 89, column: 6)
!10158 = !DILocation(line: 89, column: 6, scope: !10152)
!10159 = !DILocation(line: 90, column: 3, scope: !10160)
!10160 = distinct !DILexicalBlock(scope: !10157, file: !1121, line: 89, column: 17)
!10161 = !DILocation(line: 91, column: 2, scope: !10160)
!10162 = !DILocation(line: 92, column: 34, scope: !10152)
!10163 = !DILocation(line: 92, column: 2, scope: !10152)
!10164 = !DILocation(line: 94, column: 2, scope: !10152)
!10165 = distinct !DISubprogram(name: "uart_poll_out", scope: !10166, file: !10166, line: 95, type: !1094, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1064, retainedNodes: !10167)
!10166 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_feather_stm32f405/subsys/zbus/benchmark")
!10167 = !{!10168, !10169}
!10168 = !DILocalVariable(name: "dev", arg: 1, scope: !10165, file: !10166, line: 95, type: !1076)
!10169 = !DILocalVariable(name: "out_char", arg: 2, scope: !10165, file: !10166, line: 95, type: !186)
!10170 = !DILocation(line: 0, scope: !10165)
!10171 = !DILocation(line: 105, column: 2, scope: !10172)
!10172 = distinct !DILexicalBlock(scope: !10165, file: !10166, line: 105, column: 2)
!10173 = !{i64 2155128287}
!10174 = !DILocation(line: 106, column: 2, scope: !10165)
!10175 = !DILocation(line: 107, column: 1, scope: !10165)
!10176 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1070, file: !1070, line: 574, type: !1094, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1064, retainedNodes: !10177)
!10177 = !{!10178, !10179, !10180}
!10178 = !DILocalVariable(name: "dev", arg: 1, scope: !10176, file: !1070, line: 574, type: !1076)
!10179 = !DILocalVariable(name: "out_char", arg: 2, scope: !10176, file: !1070, line: 575, type: !186)
!10180 = !DILocalVariable(name: "api", scope: !10176, file: !1070, line: 577, type: !1067)
!10181 = !DILocation(line: 0, scope: !10176)
!10182 = !DILocation(line: 578, column: 40, scope: !10176)
!10183 = !DILocation(line: 580, column: 7, scope: !10176)
!10184 = !DILocation(line: 580, column: 2, scope: !10176)
!10185 = !DILocation(line: 581, column: 1, scope: !10176)
!10186 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !429, file: !429, line: 730, type: !10138, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1064, retainedNodes: !10187)
!10187 = !{!10188}
!10188 = !DILocalVariable(name: "dev", arg: 1, scope: !10186, file: !429, line: 730, type: !1076)
!10189 = !DILocation(line: 0, scope: !10186)
!10190 = !DILocation(line: 732, column: 9, scope: !10186)
!10191 = !DILocation(line: 732, column: 2, scope: !10186)
!10192 = distinct !DISubprogram(name: "uart_register_input", scope: !1121, file: !1121, line: 560, type: !10193, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1064, retainedNodes: !10238)
!10193 = !DISubroutineType(types: !10194)
!10194 = !{null, !10195, !10195, !10235}
!10195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10196, size: 32)
!10196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !137, line: 2208, size: 128, elements: !10197)
!10197 = !{!10198}
!10198 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !10196, file: !137, line: 2209, baseType: !10199, size: 128)
!10199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !137, line: 1709, size: 128, elements: !10200)
!10200 = !{!10201, !10214, !10216}
!10201 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !10199, file: !137, line: 1710, baseType: !10202, size: 64)
!10202 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !10203, line: 46, baseType: !10204)
!10203 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !10203, line: 41, size: 64, elements: !10205)
!10205 = !{!10206, !10213}
!10206 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10204, file: !10203, line: 42, baseType: !10207, size: 32)
!10207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10208, size: 32)
!10208 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !10203, line: 39, baseType: !10209)
!10209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !10203, line: 35, size: 32, elements: !10210)
!10210 = !{!10211}
!10211 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !10209, file: !10203, line: 36, baseType: !10212, size: 32)
!10212 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !10203, line: 32, baseType: !108)
!10213 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10204, file: !10203, line: 43, baseType: !10207, size: 32, offset: 32)
!10214 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10199, file: !137, line: 1711, baseType: !10215, offset: 64)
!10215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!10216 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !10199, file: !137, line: 1712, baseType: !10217, size: 64, offset: 64)
!10217 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !10218)
!10218 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !10219)
!10219 = !{!10220}
!10220 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !10218, file: !141, line: 232, baseType: !10221, size: 64)
!10221 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !10222)
!10222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !10223)
!10223 = !{!10224, !10230}
!10224 = !DIDerivedType(tag: DW_TAG_member, scope: !10222, file: !146, line: 38, baseType: !10225, size: 32)
!10225 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10222, file: !146, line: 38, size: 32, elements: !10226)
!10226 = !{!10227, !10229}
!10227 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10225, file: !146, line: 39, baseType: !10228, size: 32)
!10228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10222, size: 32)
!10229 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10225, file: !146, line: 40, baseType: !10228, size: 32)
!10230 = !DIDerivedType(tag: DW_TAG_member, scope: !10222, file: !146, line: 42, baseType: !10231, size: 32, offset: 32)
!10231 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10222, file: !146, line: 42, size: 32, elements: !10232)
!10232 = !{!10233, !10234}
!10233 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10231, file: !146, line: 43, baseType: !10228, size: 32)
!10234 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !10231, file: !146, line: 44, baseType: !10228, size: 32)
!10235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10236, size: 32)
!10236 = !DISubroutineType(types: !10237)
!10237 = !{!185, !277, !185}
!10238 = !{!10239, !10240, !10241}
!10239 = !DILocalVariable(name: "avail", arg: 1, scope: !10192, file: !1121, line: 560, type: !10195)
!10240 = !DILocalVariable(name: "lines", arg: 2, scope: !10192, file: !1121, line: 560, type: !10195)
!10241 = !DILocalVariable(name: "completion", arg: 3, scope: !10192, file: !1121, line: 561, type: !10235)
!10242 = !DILocation(line: 0, scope: !10192)
!10243 = !DILocation(line: 566, column: 1, scope: !10192)
!10244 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1299, file: !1299, line: 523, type: !1157, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !10245)
!10245 = !{!10246, !10247, !10248, !10249, !10250}
!10246 = !DILocalVariable(name: "dev", arg: 1, scope: !10244, file: !1299, line: 523, type: !1159)
!10247 = !DILocalVariable(name: "pin", arg: 2, scope: !10244, file: !1299, line: 524, type: !1174)
!10248 = !DILocalVariable(name: "flags", arg: 3, scope: !10244, file: !1299, line: 524, type: !1175)
!10249 = !DILocalVariable(name: "err", scope: !10244, file: !1299, line: 526, type: !103)
!10250 = !DILocalVariable(name: "pincfg", scope: !10244, file: !1299, line: 527, type: !103)
!10251 = !DILocation(line: 0, scope: !10244)
!10252 = !DILocation(line: 527, column: 2, scope: !10244)
!10253 = !DILocation(line: 532, column: 8, scope: !10244)
!10254 = !DILocation(line: 533, column: 10, scope: !10255)
!10255 = distinct !DILexicalBlock(scope: !10244, file: !1299, line: 533, column: 6)
!10256 = !DILocation(line: 533, column: 6, scope: !10244)
!10257 = !DILocation(line: 543, column: 13, scope: !10258)
!10258 = distinct !DILexicalBlock(scope: !10244, file: !1299, line: 543, column: 6)
!10259 = !DILocation(line: 543, column: 28, scope: !10258)
!10260 = !DILocation(line: 543, column: 6, scope: !10244)
!10261 = !DILocation(line: 544, column: 14, scope: !10262)
!10262 = distinct !DILexicalBlock(scope: !10263, file: !1299, line: 544, column: 7)
!10263 = distinct !DILexicalBlock(scope: !10258, file: !1299, line: 543, column: 34)
!10264 = !DILocation(line: 544, column: 39, scope: !10262)
!10265 = !DILocation(line: 544, column: 7, scope: !10263)
!10266 = !DILocation(line: 545, column: 38, scope: !10267)
!10267 = distinct !DILexicalBlock(scope: !10262, file: !1299, line: 544, column: 45)
!10268 = !DILocation(line: 545, column: 4, scope: !10267)
!10269 = !DILocation(line: 546, column: 3, scope: !10267)
!10270 = !DILocation(line: 546, column: 21, scope: !10271)
!10271 = distinct !DILexicalBlock(scope: !10262, file: !1299, line: 546, column: 14)
!10272 = !DILocation(line: 546, column: 45, scope: !10271)
!10273 = !DILocation(line: 546, column: 14, scope: !10262)
!10274 = !DILocation(line: 547, column: 40, scope: !10275)
!10275 = distinct !DILexicalBlock(scope: !10271, file: !1299, line: 546, column: 51)
!10276 = !DILocation(line: 547, column: 4, scope: !10275)
!10277 = !DILocation(line: 548, column: 3, scope: !10275)
!10278 = !DILocation(line: 551, column: 32, scope: !10244)
!10279 = !DILocation(line: 551, column: 37, scope: !10244)
!10280 = !DILocation(line: 551, column: 2, scope: !10244)
!10281 = !DILocation(line: 554, column: 6, scope: !10244)
!10282 = !DILocation(line: 562, column: 1, scope: !10244)
!10283 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1299, file: !1299, line: 410, type: !10284, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !10286)
!10284 = !DISubroutineType(types: !10285)
!10285 = !{!103, !1159, !986}
!10286 = !{!10287, !10288, !10289, !10291}
!10287 = !DILocalVariable(name: "dev", arg: 1, scope: !10283, file: !1299, line: 410, type: !1159)
!10288 = !DILocalVariable(name: "value", arg: 2, scope: !10283, file: !1299, line: 410, type: !986)
!10289 = !DILocalVariable(name: "cfg", scope: !10283, file: !1299, line: 412, type: !10290)
!10290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1418, size: 32)
!10291 = !DILocalVariable(name: "gpio", scope: !10283, file: !1299, line: 413, type: !1232)
!10292 = !DILocation(line: 0, scope: !10283)
!10293 = !DILocation(line: 412, column: 45, scope: !10283)
!10294 = !DILocation(line: 413, column: 44, scope: !10283)
!10295 = !DILocation(line: 415, column: 11, scope: !10283)
!10296 = !DILocation(line: 415, column: 9, scope: !10283)
!10297 = !DILocation(line: 417, column: 2, scope: !10283)
!10298 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1299, file: !1299, line: 420, type: !1184, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !10299)
!10299 = !{!10300, !10301, !10302, !10303, !10304, !10305}
!10300 = !DILocalVariable(name: "dev", arg: 1, scope: !10298, file: !1299, line: 420, type: !1159)
!10301 = !DILocalVariable(name: "mask", arg: 2, scope: !10298, file: !1299, line: 421, type: !1186)
!10302 = !DILocalVariable(name: "value", arg: 3, scope: !10298, file: !1299, line: 422, type: !1181)
!10303 = !DILocalVariable(name: "cfg", scope: !10298, file: !1299, line: 424, type: !10290)
!10304 = !DILocalVariable(name: "gpio", scope: !10298, file: !1299, line: 425, type: !1232)
!10305 = !DILocalVariable(name: "port_value", scope: !10298, file: !1299, line: 426, type: !108)
!10306 = !DILocation(line: 0, scope: !10298)
!10307 = !DILocation(line: 424, column: 45, scope: !10298)
!10308 = !DILocation(line: 425, column: 44, scope: !10298)
!10309 = !DILocation(line: 430, column: 15, scope: !10298)
!10310 = !DILocation(line: 431, column: 46, scope: !10298)
!10311 = !DILocation(line: 431, column: 44, scope: !10298)
!10312 = !DILocation(line: 431, column: 61, scope: !10298)
!10313 = !DILocation(line: 431, column: 53, scope: !10298)
!10314 = !DILocation(line: 431, column: 2, scope: !10298)
!10315 = !DILocation(line: 435, column: 2, scope: !10298)
!10316 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1299, file: !1299, line: 438, type: !1189, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !10317)
!10317 = !{!10318, !10319, !10320, !10321}
!10318 = !DILocalVariable(name: "dev", arg: 1, scope: !10316, file: !1299, line: 438, type: !1159)
!10319 = !DILocalVariable(name: "pins", arg: 2, scope: !10316, file: !1299, line: 439, type: !1186)
!10320 = !DILocalVariable(name: "cfg", scope: !10316, file: !1299, line: 441, type: !10290)
!10321 = !DILocalVariable(name: "gpio", scope: !10316, file: !1299, line: 442, type: !1232)
!10322 = !DILocation(line: 0, scope: !10316)
!10323 = !DILocation(line: 441, column: 45, scope: !10316)
!10324 = !DILocation(line: 442, column: 44, scope: !10316)
!10325 = !DILocation(line: 448, column: 2, scope: !10316)
!10326 = !DILocation(line: 450, column: 2, scope: !10316)
!10327 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1299, file: !1299, line: 453, type: !1189, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !10328)
!10328 = !{!10329, !10330, !10331, !10332}
!10329 = !DILocalVariable(name: "dev", arg: 1, scope: !10327, file: !1299, line: 453, type: !1159)
!10330 = !DILocalVariable(name: "pins", arg: 2, scope: !10327, file: !1299, line: 454, type: !1186)
!10331 = !DILocalVariable(name: "cfg", scope: !10327, file: !1299, line: 456, type: !10290)
!10332 = !DILocalVariable(name: "gpio", scope: !10327, file: !1299, line: 457, type: !1232)
!10333 = !DILocation(line: 0, scope: !10327)
!10334 = !DILocation(line: 456, column: 45, scope: !10327)
!10335 = !DILocation(line: 457, column: 44, scope: !10327)
!10336 = !DILocation(line: 467, column: 2, scope: !10327)
!10337 = !DILocation(line: 470, column: 2, scope: !10327)
!10338 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1299, file: !1299, line: 473, type: !1189, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !10339)
!10339 = !{!10340, !10341, !10342, !10343}
!10340 = !DILocalVariable(name: "dev", arg: 1, scope: !10338, file: !1299, line: 473, type: !1159)
!10341 = !DILocalVariable(name: "pins", arg: 2, scope: !10338, file: !1299, line: 474, type: !1186)
!10342 = !DILocalVariable(name: "cfg", scope: !10338, file: !1299, line: 476, type: !10290)
!10343 = !DILocalVariable(name: "gpio", scope: !10338, file: !1299, line: 477, type: !1232)
!10344 = !DILocation(line: 0, scope: !10338)
!10345 = !DILocation(line: 476, column: 45, scope: !10338)
!10346 = !DILocation(line: 477, column: 44, scope: !10338)
!10347 = !DILocation(line: 484, column: 2, scope: !10338)
!10348 = !DILocation(line: 487, column: 2, scope: !10338)
!10349 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1299, file: !1299, line: 594, type: !1195, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !10350)
!10350 = !{!10351, !10352, !10353, !10354, !10355, !10356, !10358, !10359, !10360}
!10351 = !DILocalVariable(name: "dev", arg: 1, scope: !10349, file: !1299, line: 594, type: !1159)
!10352 = !DILocalVariable(name: "pin", arg: 2, scope: !10349, file: !1299, line: 595, type: !1174)
!10353 = !DILocalVariable(name: "mode", arg: 3, scope: !10349, file: !1299, line: 596, type: !1133)
!10354 = !DILocalVariable(name: "trig", arg: 4, scope: !10349, file: !1299, line: 597, type: !1139)
!10355 = !DILocalVariable(name: "cfg", scope: !10349, file: !1299, line: 599, type: !10290)
!10356 = !DILocalVariable(name: "data", scope: !10349, file: !1299, line: 600, type: !10357)
!10357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1368, size: 32)
!10358 = !DILocalVariable(name: "edge", scope: !10349, file: !1299, line: 601, type: !103)
!10359 = !DILocalVariable(name: "err", scope: !10349, file: !1299, line: 602, type: !103)
!10360 = !DILabel(scope: !10349, name: "exit", file: !1299, line: 643)
!10361 = !DILocation(line: 0, scope: !10349)
!10362 = !DILocation(line: 599, column: 45, scope: !10349)
!10363 = !DILocation(line: 604, column: 6, scope: !10349)
!10364 = !DILocation(line: 605, column: 34, scope: !10365)
!10365 = distinct !DILexicalBlock(scope: !10366, file: !1299, line: 605, column: 7)
!10366 = distinct !DILexicalBlock(scope: !10367, file: !1299, line: 604, column: 38)
!10367 = distinct !DILexicalBlock(scope: !10349, file: !1299, line: 604, column: 6)
!10368 = !DILocation(line: 605, column: 7, scope: !10365)
!10369 = !DILocation(line: 605, column: 47, scope: !10365)
!10370 = !DILocation(line: 605, column: 39, scope: !10365)
!10371 = !DILocation(line: 605, column: 7, scope: !10366)
!10372 = !DILocation(line: 606, column: 4, scope: !10373)
!10373 = distinct !DILexicalBlock(scope: !10365, file: !1299, line: 605, column: 53)
!10374 = !DILocation(line: 607, column: 4, scope: !10373)
!10375 = !DILocation(line: 608, column: 4, scope: !10373)
!10376 = !DILocation(line: 609, column: 3, scope: !10373)
!10377 = !DILocation(line: 600, column: 38, scope: !10349)
!10378 = !DILocation(line: 620, column: 30, scope: !10379)
!10379 = distinct !DILexicalBlock(scope: !10349, file: !1299, line: 620, column: 6)
!10380 = !DILocation(line: 620, column: 6, scope: !10379)
!10381 = !DILocation(line: 620, column: 57, scope: !10379)
!10382 = !DILocation(line: 620, column: 6, scope: !10349)
!10383 = !DILocation(line: 625, column: 29, scope: !10349)
!10384 = !DILocation(line: 625, column: 2, scope: !10349)
!10385 = !DILocation(line: 627, column: 2, scope: !10349)
!10386 = !DILocation(line: 630, column: 3, scope: !10387)
!10387 = distinct !DILexicalBlock(scope: !10349, file: !1299, line: 627, column: 16)
!10388 = !DILocation(line: 633, column: 3, scope: !10387)
!10389 = !DILocation(line: 636, column: 3, scope: !10387)
!10390 = !DILocation(line: 639, column: 2, scope: !10349)
!10391 = !DILocation(line: 641, column: 2, scope: !10349)
!10392 = !DILocation(line: 643, column: 1, scope: !10349)
!10393 = !DILocation(line: 644, column: 2, scope: !10349)
!10394 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1299, file: !1299, line: 647, type: !1199, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !10395)
!10395 = !{!10396, !10397, !10398, !10399}
!10396 = !DILocalVariable(name: "dev", arg: 1, scope: !10394, file: !1299, line: 647, type: !1159)
!10397 = !DILocalVariable(name: "callback", arg: 2, scope: !10394, file: !1299, line: 648, type: !1201)
!10398 = !DILocalVariable(name: "set", arg: 3, scope: !10394, file: !1299, line: 649, type: !131)
!10399 = !DILocalVariable(name: "data", scope: !10394, file: !1299, line: 651, type: !10357)
!10400 = !DILocation(line: 0, scope: !10394)
!10401 = !DILocation(line: 651, column: 38, scope: !10394)
!10402 = !DILocation(line: 653, column: 37, scope: !10394)
!10403 = !DILocation(line: 653, column: 9, scope: !10394)
!10404 = !DILocation(line: 653, column: 2, scope: !10394)
!10405 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !10406, file: !10406, line: 38, type: !10407, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !10410)
!10406 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10407 = !DISubroutineType(types: !10408)
!10408 = !{!103, !10409, !1201, !131}
!10409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1374, size: 32)
!10410 = !{!10411, !10412, !10413}
!10411 = !DILocalVariable(name: "callbacks", arg: 1, scope: !10405, file: !10406, line: 38, type: !10409)
!10412 = !DILocalVariable(name: "callback", arg: 2, scope: !10405, file: !10406, line: 39, type: !1201)
!10413 = !DILocalVariable(name: "set", arg: 3, scope: !10405, file: !10406, line: 40, type: !131)
!10414 = !DILocation(line: 0, scope: !10405)
!10415 = !DILocation(line: 45, column: 7, scope: !10416)
!10416 = distinct !DILexicalBlock(scope: !10405, file: !10406, line: 45, column: 6)
!10417 = !DILocation(line: 45, column: 6, scope: !10405)
!10418 = !DILocation(line: 46, column: 56, scope: !10419)
!10419 = distinct !DILexicalBlock(scope: !10420, file: !10406, line: 46, column: 7)
!10420 = distinct !DILexicalBlock(scope: !10416, file: !10406, line: 45, column: 38)
!10421 = !DILocation(line: 46, column: 8, scope: !10419)
!10422 = !DILocation(line: 46, column: 7, scope: !10420)
!10423 = !DILocation(line: 51, column: 13, scope: !10416)
!10424 = !DILocation(line: 56, column: 43, scope: !10425)
!10425 = distinct !DILexicalBlock(scope: !10426, file: !10406, line: 55, column: 11)
!10426 = distinct !DILexicalBlock(scope: !10405, file: !10406, line: 55, column: 6)
!10427 = !DILocation(line: 56, column: 3, scope: !10425)
!10428 = !DILocation(line: 57, column: 2, scope: !10425)
!10429 = !DILocation(line: 60, column: 1, scope: !10405)
!10430 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1206, file: !1206, line: 261, type: !10431, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !10433)
!10431 = !DISubroutineType(types: !10432)
!10432 = !{!131, !10409}
!10433 = !{!10434}
!10434 = !DILocalVariable(name: "list", arg: 1, scope: !10430, file: !1206, line: 261, type: !10409)
!10435 = !DILocation(line: 0, scope: !10430)
!10436 = !DILocation(line: 261, column: 1, scope: !10430)
!10437 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1206, file: !1206, line: 417, type: !10438, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !10440)
!10438 = !DISubroutineType(types: !10439)
!10439 = !{!131, !10409, !1378}
!10440 = !{!10441, !10442, !10443, !10444}
!10441 = !DILocalVariable(name: "list", arg: 1, scope: !10437, file: !1206, line: 417, type: !10409)
!10442 = !DILocalVariable(name: "node", arg: 2, scope: !10437, file: !1206, line: 417, type: !1378)
!10443 = !DILocalVariable(name: "prev", scope: !10437, file: !1206, line: 417, type: !1378)
!10444 = !DILocalVariable(name: "test", scope: !10437, file: !1206, line: 417, type: !1378)
!10445 = !DILocation(line: 0, scope: !10437)
!10446 = !DILocation(line: 417, column: 1, scope: !10447)
!10447 = distinct !DILexicalBlock(scope: !10437, file: !1206, line: 417, column: 1)
!10448 = !DILocation(line: 417, column: 1, scope: !10449)
!10449 = distinct !DILexicalBlock(scope: !10447, file: !1206, line: 417, column: 1)
!10450 = !DILocation(line: 417, column: 1, scope: !10451)
!10451 = distinct !DILexicalBlock(scope: !10452, file: !1206, line: 417, column: 1)
!10452 = distinct !DILexicalBlock(scope: !10449, file: !1206, line: 417, column: 1)
!10453 = !DILocation(line: 417, column: 1, scope: !10452)
!10454 = distinct !{!10454, !10446, !10446}
!10455 = !DILocation(line: 417, column: 1, scope: !10456)
!10456 = distinct !DILexicalBlock(scope: !10451, file: !1206, line: 417, column: 1)
!10457 = !DILocation(line: 417, column: 1, scope: !10437)
!10458 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1206, file: !1206, line: 298, type: !10459, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !10461)
!10459 = !DISubroutineType(types: !10460)
!10460 = !{null, !10409, !1378}
!10461 = !{!10462, !10463}
!10462 = !DILocalVariable(name: "list", arg: 1, scope: !10458, file: !1206, line: 298, type: !10409)
!10463 = !DILocalVariable(name: "node", arg: 2, scope: !10458, file: !1206, line: 298, type: !1378)
!10464 = !DILocation(line: 0, scope: !10458)
!10465 = !DILocation(line: 298, column: 1, scope: !10458)
!10466 = !DILocation(line: 298, column: 1, scope: !10467)
!10467 = distinct !DILexicalBlock(scope: !10458, file: !1206, line: 298, column: 1)
!10468 = !DILocation(line: 298, column: 1, scope: !10469)
!10469 = distinct !DILexicalBlock(scope: !10467, file: !1206, line: 298, column: 1)
!10470 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1206, file: !1206, line: 231, type: !10471, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !10473)
!10471 = !DISubroutineType(types: !10472)
!10472 = !{!1378, !10409}
!10473 = !{!10474}
!10474 = !DILocalVariable(name: "list", arg: 1, scope: !10470, file: !1206, line: 231, type: !10409)
!10475 = !DILocation(line: 0, scope: !10470)
!10476 = !DILocation(line: 233, column: 15, scope: !10470)
!10477 = !DILocation(line: 233, column: 2, scope: !10470)
!10478 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1206, file: !1206, line: 209, type: !10479, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !10481)
!10479 = !DISubroutineType(types: !10480)
!10480 = !{null, !1378, !1378}
!10481 = !{!10482, !10483}
!10482 = !DILocalVariable(name: "parent", arg: 1, scope: !10478, file: !1206, line: 209, type: !1378)
!10483 = !DILocalVariable(name: "child", arg: 2, scope: !10478, file: !1206, line: 209, type: !1378)
!10484 = !DILocation(line: 0, scope: !10478)
!10485 = !DILocation(line: 211, column: 10, scope: !10478)
!10486 = !DILocation(line: 211, column: 15, scope: !10478)
!10487 = !DILocation(line: 212, column: 1, scope: !10478)
!10488 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1206, file: !1206, line: 214, type: !10459, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !10489)
!10489 = !{!10490, !10491}
!10490 = !DILocalVariable(name: "list", arg: 1, scope: !10488, file: !1206, line: 214, type: !10409)
!10491 = !DILocalVariable(name: "node", arg: 2, scope: !10488, file: !1206, line: 214, type: !1378)
!10492 = !DILocation(line: 0, scope: !10488)
!10493 = !DILocation(line: 216, column: 8, scope: !10488)
!10494 = !DILocation(line: 216, column: 13, scope: !10488)
!10495 = !DILocation(line: 217, column: 1, scope: !10488)
!10496 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1206, file: !1206, line: 243, type: !10471, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !10497)
!10497 = !{!10498}
!10498 = !DILocalVariable(name: "list", arg: 1, scope: !10496, file: !1206, line: 243, type: !10409)
!10499 = !DILocation(line: 0, scope: !10496)
!10500 = !DILocation(line: 245, column: 15, scope: !10496)
!10501 = !DILocation(line: 245, column: 2, scope: !10496)
!10502 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1206, file: !1206, line: 219, type: !10459, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !10503)
!10503 = !{!10504, !10505}
!10504 = !DILocalVariable(name: "list", arg: 1, scope: !10502, file: !1206, line: 219, type: !10409)
!10505 = !DILocalVariable(name: "node", arg: 2, scope: !10502, file: !1206, line: 219, type: !1378)
!10506 = !DILocation(line: 0, scope: !10502)
!10507 = !DILocation(line: 221, column: 8, scope: !10502)
!10508 = !DILocation(line: 221, column: 13, scope: !10502)
!10509 = !DILocation(line: 222, column: 1, scope: !10502)
!10510 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1206, file: !1206, line: 401, type: !10511, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !10513)
!10511 = !DISubroutineType(types: !10512)
!10512 = !{null, !10409, !1378, !1378}
!10513 = !{!10514, !10515, !10516}
!10514 = !DILocalVariable(name: "list", arg: 1, scope: !10510, file: !1206, line: 401, type: !10409)
!10515 = !DILocalVariable(name: "prev_node", arg: 2, scope: !10510, file: !1206, line: 401, type: !1378)
!10516 = !DILocalVariable(name: "node", arg: 3, scope: !10510, file: !1206, line: 401, type: !1378)
!10517 = !DILocation(line: 0, scope: !10510)
!10518 = !DILocation(line: 401, column: 1, scope: !10519)
!10519 = distinct !DILexicalBlock(scope: !10510, file: !1206, line: 401, column: 1)
!10520 = !DILocation(line: 0, scope: !10519)
!10521 = !DILocation(line: 401, column: 1, scope: !10510)
!10522 = !DILocation(line: 401, column: 1, scope: !10523)
!10523 = distinct !DILexicalBlock(scope: !10519, file: !1206, line: 401, column: 1)
!10524 = !DILocation(line: 401, column: 1, scope: !10525)
!10525 = distinct !DILexicalBlock(scope: !10523, file: !1206, line: 401, column: 1)
!10526 = !DILocation(line: 401, column: 1, scope: !10527)
!10527 = distinct !DILexicalBlock(scope: !10525, file: !1206, line: 401, column: 1)
!10528 = !DILocation(line: 401, column: 1, scope: !10529)
!10529 = distinct !DILexicalBlock(scope: !10519, file: !1206, line: 401, column: 1)
!10530 = !DILocation(line: 401, column: 1, scope: !10531)
!10531 = distinct !DILexicalBlock(scope: !10529, file: !1206, line: 401, column: 1)
!10532 = !DILocation(line: 401, column: 1, scope: !10533)
!10533 = distinct !DILexicalBlock(scope: !10531, file: !1206, line: 401, column: 1)
!10534 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1206, file: !1206, line: 285, type: !10535, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !10537)
!10535 = !DISubroutineType(types: !10536)
!10536 = !{!1378, !1378}
!10537 = !{!10538}
!10538 = !DILocalVariable(name: "node", arg: 1, scope: !10534, file: !1206, line: 285, type: !1378)
!10539 = !DILocation(line: 0, scope: !10534)
!10540 = !DILocation(line: 285, column: 1, scope: !10534)
!10541 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1206, file: !1206, line: 274, type: !10535, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !10542)
!10542 = !{!10543}
!10543 = !DILocalVariable(name: "node", arg: 1, scope: !10541, file: !1206, line: 274, type: !1378)
!10544 = !DILocation(line: 0, scope: !10541)
!10545 = !DILocation(line: 274, column: 1, scope: !10541)
!10546 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1206, file: !1206, line: 204, type: !10535, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !10547)
!10547 = !{!10548}
!10548 = !DILocalVariable(name: "node", arg: 1, scope: !10546, file: !1206, line: 204, type: !1378)
!10549 = !DILocation(line: 0, scope: !10546)
!10550 = !DILocation(line: 206, column: 15, scope: !10546)
!10551 = !DILocation(line: 206, column: 2, scope: !10546)
!10552 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1299, file: !1299, line: 342, type: !396, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !10553)
!10553 = !{!10554, !10555, !10556}
!10554 = !DILocalVariable(name: "pin", arg: 1, scope: !10552, file: !1299, line: 342, type: !103)
!10555 = !DILocalVariable(name: "line", scope: !10552, file: !1299, line: 344, type: !108)
!10556 = !DILocalVariable(name: "port", scope: !10552, file: !1299, line: 345, type: !103)
!10557 = !DILocation(line: 0, scope: !10552)
!10558 = !DILocation(line: 344, column: 18, scope: !10552)
!10559 = !{i32 983040, i32 0}
!10560 = !DILocation(line: 356, column: 9, scope: !10552)
!10561 = !DILocation(line: 370, column: 2, scope: !10552)
!10562 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1299, file: !1299, line: 37, type: !850, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !10563)
!10563 = !{!10564, !10565, !10566}
!10564 = !DILocalVariable(name: "line", arg: 1, scope: !10562, file: !1299, line: 37, type: !103)
!10565 = !DILocalVariable(name: "arg", arg: 2, scope: !10562, file: !1299, line: 37, type: !102)
!10566 = !DILocalVariable(name: "data", scope: !10562, file: !1299, line: 39, type: !10357)
!10567 = !DILocation(line: 0, scope: !10562)
!10568 = !DILocation(line: 41, column: 29, scope: !10562)
!10569 = !DILocation(line: 41, column: 39, scope: !10562)
!10570 = !DILocation(line: 41, column: 44, scope: !10562)
!10571 = !DILocation(line: 41, column: 2, scope: !10562)
!10572 = !DILocation(line: 42, column: 1, scope: !10562)
!10573 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1299, file: !1299, line: 376, type: !10574, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !10576)
!10574 = !DISubroutineType(types: !10575)
!10575 = !{!103, !103, !103}
!10576 = !{!10577, !10578, !10579, !10581, !10582}
!10577 = !DILocalVariable(name: "port", arg: 1, scope: !10573, file: !1299, line: 376, type: !103)
!10578 = !DILocalVariable(name: "pin", arg: 2, scope: !10573, file: !1299, line: 376, type: !103)
!10579 = !DILocalVariable(name: "clk", scope: !10573, file: !1299, line: 386, type: !10580)
!10580 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1159)
!10581 = !DILocalVariable(name: "pclken", scope: !10573, file: !1299, line: 387, type: !1425)
!10582 = !DILocalVariable(name: "ret", scope: !10573, file: !1299, line: 396, type: !103)
!10583 = !DILocation(line: 0, scope: !10573)
!10584 = !DILocation(line: 387, column: 2, scope: !10573)
!10585 = !DILocation(line: 387, column: 22, scope: !10573)
!10586 = !DILocation(line: 399, column: 8, scope: !10573)
!10587 = !DILocation(line: 400, column: 10, scope: !10588)
!10588 = distinct !DILexicalBlock(scope: !10573, file: !1299, line: 400, column: 6)
!10589 = !DILocation(line: 400, column: 6, scope: !10573)
!10590 = !DILocation(line: 405, column: 2, scope: !10573)
!10591 = !DILocation(line: 407, column: 2, scope: !10573)
!10592 = !DILocation(line: 408, column: 1, scope: !10573)
!10593 = distinct !DISubprogram(name: "clock_control_on", scope: !938, file: !938, line: 123, type: !1264, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !10594)
!10594 = !{!10595, !10596, !10597}
!10595 = !DILocalVariable(name: "dev", arg: 1, scope: !10593, file: !938, line: 123, type: !1159)
!10596 = !DILocalVariable(name: "sys", arg: 2, scope: !10593, file: !938, line: 124, type: !1030)
!10597 = !DILocalVariable(name: "api", scope: !10593, file: !938, line: 126, type: !1257)
!10598 = !DILocation(line: 0, scope: !10593)
!10599 = !DILocation(line: 127, column: 49, scope: !10593)
!10600 = !DILocation(line: 129, column: 14, scope: !10593)
!10601 = !DILocation(line: 129, column: 9, scope: !10593)
!10602 = !DILocation(line: 129, column: 2, scope: !10593)
!10603 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1299, file: !1299, line: 311, type: !9722, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !10604)
!10604 = !{!10605, !10606, !10607}
!10605 = !DILocalVariable(name: "port", arg: 1, scope: !10603, file: !1299, line: 311, type: !103)
!10606 = !DILocalVariable(name: "pin", arg: 2, scope: !10603, file: !1299, line: 311, type: !103)
!10607 = !DILocalVariable(name: "line", scope: !10603, file: !1299, line: 313, type: !108)
!10608 = !DILocation(line: 0, scope: !10603)
!10609 = !DILocation(line: 313, column: 18, scope: !10603)
!10610 = !DILocation(line: 337, column: 2, scope: !10603)
!10611 = !DILocation(line: 340, column: 1, scope: !10603)
!10612 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1299, file: !1299, line: 295, type: !10613, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !10615)
!10613 = !DISubroutineType(types: !10614)
!10614 = !{!108, !103}
!10615 = !{!10616}
!10616 = !DILocalVariable(name: "pin", arg: 1, scope: !10612, file: !1299, line: 295, type: !103)
!10617 = !DILocation(line: 0, scope: !10612)
!10618 = !DILocation(line: 307, column: 46, scope: !10612)
!10619 = !DILocation(line: 307, column: 27, scope: !10612)
!10620 = !DILocation(line: 307, column: 32, scope: !10612)
!10621 = !DILocation(line: 307, column: 14, scope: !10612)
!10622 = !DILocation(line: 307, column: 39, scope: !10612)
!10623 = !DILocation(line: 307, column: 2, scope: !10612)
!10624 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !7017, file: !7017, line: 671, type: !10625, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !10627)
!10625 = !DISubroutineType(types: !10626)
!10626 = !{null, !108, !108}
!10627 = !{!10628, !10629}
!10628 = !DILocalVariable(name: "Port", arg: 1, scope: !10624, file: !7017, line: 671, type: !108)
!10629 = !DILocalVariable(name: "Line", arg: 2, scope: !10624, file: !7017, line: 671, type: !108)
!10630 = !DILocation(line: 0, scope: !10624)
!10631 = !DILocation(line: 673, column: 3, scope: !10624)
!10632 = !DILocalVariable(name: "value", arg: 1, scope: !10633, file: !7314, line: 373, type: !108)
!10633 = distinct !DISubprogram(name: "__RBIT", scope: !7314, file: !7314, line: 373, type: !8557, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !10634)
!10634 = !{!10632, !10635}
!10635 = !DILocalVariable(name: "result", scope: !10633, file: !7314, line: 375, type: !108)
!10636 = !DILocation(line: 0, scope: !10633, inlinedAt: !10637)
!10637 = distinct !DILocation(line: 673, column: 3, scope: !10624)
!10638 = !DILocation(line: 380, column: 4, scope: !10633, inlinedAt: !10637)
!10639 = !{i64 3547126}
!10640 = !DILocalVariable(name: "value", arg: 1, scope: !10641, file: !7314, line: 403, type: !108)
!10641 = distinct !DISubprogram(name: "__CLZ", scope: !7314, file: !7314, line: 403, type: !10642, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !10644)
!10642 = !DISubroutineType(types: !10643)
!10643 = !{!185, !108}
!10644 = !{!10640}
!10645 = !DILocation(line: 0, scope: !10641, inlinedAt: !10646)
!10646 = distinct !DILocation(line: 673, column: 3, scope: !10624)
!10647 = !DILocation(line: 414, column: 7, scope: !10641, inlinedAt: !10646)
!10648 = !DILocation(line: 674, column: 1, scope: !10624)
!10649 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !10406, file: !10406, line: 69, type: !10650, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !10652)
!10650 = !DISubroutineType(types: !10651)
!10651 = !{null, !10409, !1159, !108}
!10652 = !{!10653, !10654, !10655, !10656, !10657}
!10653 = !DILocalVariable(name: "list", arg: 1, scope: !10649, file: !10406, line: 69, type: !10409)
!10654 = !DILocalVariable(name: "port", arg: 2, scope: !10649, file: !10406, line: 70, type: !1159)
!10655 = !DILocalVariable(name: "pins", arg: 3, scope: !10649, file: !10406, line: 71, type: !108)
!10656 = !DILocalVariable(name: "cb", scope: !10649, file: !10406, line: 73, type: !1201)
!10657 = !DILocalVariable(name: "tmp", scope: !10649, file: !10406, line: 73, type: !1201)
!10658 = !DILocation(line: 0, scope: !10649)
!10659 = !DILocation(line: 75, column: 2, scope: !10660)
!10660 = distinct !DILexicalBlock(scope: !10649, file: !10406, line: 75, column: 2)
!10661 = !DILocation(line: 0, scope: !10660)
!10662 = !DILocation(line: 76, column: 11, scope: !10663)
!10663 = distinct !DILexicalBlock(scope: !10664, file: !10406, line: 76, column: 7)
!10664 = distinct !DILexicalBlock(scope: !10665, file: !10406, line: 75, column: 57)
!10665 = distinct !DILexicalBlock(scope: !10660, file: !10406, line: 75, column: 2)
!10666 = !DILocation(line: 76, column: 20, scope: !10663)
!10667 = !DILocation(line: 76, column: 7, scope: !10664)
!10668 = !DILocation(line: 78, column: 8, scope: !10669)
!10669 = distinct !DILexicalBlock(scope: !10663, file: !10406, line: 76, column: 28)
!10670 = !DILocation(line: 78, column: 4, scope: !10669)
!10671 = !DILocation(line: 79, column: 3, scope: !10669)
!10672 = !DILocation(line: 75, column: 2, scope: !10665)
!10673 = !DILocation(line: 81, column: 1, scope: !10649)
!10674 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !7017, file: !7017, line: 710, type: !8557, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !10675)
!10675 = !{!10676}
!10676 = !DILocalVariable(name: "Line", arg: 1, scope: !10674, file: !7017, line: 710, type: !108)
!10677 = !DILocation(line: 0, scope: !10674)
!10678 = !DILocation(line: 712, column: 21, scope: !10674)
!10679 = !DILocation(line: 0, scope: !10633, inlinedAt: !10680)
!10680 = distinct !DILocation(line: 712, column: 76, scope: !10674)
!10681 = !DILocation(line: 380, column: 4, scope: !10633, inlinedAt: !10680)
!10682 = !DILocation(line: 0, scope: !10641, inlinedAt: !10683)
!10683 = distinct !DILocation(line: 712, column: 76, scope: !10674)
!10684 = !DILocation(line: 414, column: 7, scope: !10641, inlinedAt: !10683)
!10685 = !DILocation(line: 712, column: 73, scope: !10674)
!10686 = !DILocation(line: 712, column: 3, scope: !10674)
!10687 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !10688, file: !10688, line: 910, type: !10689, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !10691)
!10688 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10689 = !DISubroutineType(types: !10690)
!10690 = !{null, !1232, !108}
!10691 = !{!10692, !10693}
!10692 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10687, file: !10688, line: 910, type: !1232)
!10693 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10687, file: !10688, line: 910, type: !108)
!10694 = !DILocation(line: 0, scope: !10687)
!10695 = !DILocation(line: 912, column: 3, scope: !10687)
!10696 = !DILocation(line: 913, column: 1, scope: !10687)
!10697 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !10688, file: !10688, line: 823, type: !10698, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !10700)
!10698 = !DISubroutineType(types: !10699)
!10699 = !{!108, !1232}
!10700 = !{!10701}
!10701 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10697, file: !10688, line: 823, type: !1232)
!10702 = !DILocation(line: 0, scope: !10697)
!10703 = !DILocation(line: 825, column: 21, scope: !10697)
!10704 = !DILocation(line: 825, column: 3, scope: !10697)
!10705 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !10688, file: !10688, line: 812, type: !10689, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !10706)
!10706 = !{!10707, !10708}
!10707 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10705, file: !10688, line: 812, type: !1232)
!10708 = !DILocalVariable(name: "PortValue", arg: 2, scope: !10705, file: !10688, line: 812, type: !108)
!10709 = !DILocation(line: 0, scope: !10705)
!10710 = !DILocation(line: 814, column: 3, scope: !10705)
!10711 = !DILocation(line: 815, column: 1, scope: !10705)
!10712 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !10688, file: !10688, line: 771, type: !10698, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !10713)
!10713 = !{!10714}
!10714 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10712, file: !10688, line: 771, type: !1232)
!10715 = !DILocation(line: 0, scope: !10712)
!10716 = !DILocation(line: 773, column: 21, scope: !10712)
!10717 = !DILocation(line: 773, column: 3, scope: !10712)
!10718 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1299, file: !1299, line: 47, type: !10719, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !10721)
!10719 = !DISubroutineType(types: !10720)
!10720 = !{!103, !1175, !374}
!10721 = !{!10722, !10723}
!10722 = !DILocalVariable(name: "flags", arg: 1, scope: !10718, file: !1299, line: 47, type: !1175)
!10723 = !DILocalVariable(name: "pincfg", arg: 2, scope: !10718, file: !1299, line: 47, type: !374)
!10724 = !DILocation(line: 0, scope: !10718)
!10725 = !DILocation(line: 50, column: 13, scope: !10726)
!10726 = distinct !DILexicalBlock(scope: !10718, file: !1299, line: 50, column: 6)
!10727 = !DILocation(line: 50, column: 28, scope: !10726)
!10728 = !DILocation(line: 50, column: 6, scope: !10718)
!10729 = !DILocation(line: 53, column: 11, scope: !10730)
!10730 = distinct !DILexicalBlock(scope: !10726, file: !1299, line: 50, column: 34)
!10731 = !DILocation(line: 55, column: 14, scope: !10732)
!10732 = distinct !DILexicalBlock(scope: !10730, file: !1299, line: 55, column: 7)
!10733 = !DILocation(line: 55, column: 35, scope: !10732)
!10734 = !DILocation(line: 55, column: 7, scope: !10730)
!10735 = !DILocation(line: 56, column: 14, scope: !10736)
!10736 = distinct !DILexicalBlock(scope: !10737, file: !1299, line: 56, column: 8)
!10737 = distinct !DILexicalBlock(scope: !10732, file: !1299, line: 55, column: 41)
!10738 = !DILocation(line: 56, column: 8, scope: !10737)
!10739 = !DILocation(line: 0, scope: !10732)
!10740 = !DILocation(line: 66, column: 14, scope: !10741)
!10741 = distinct !DILexicalBlock(scope: !10730, file: !1299, line: 66, column: 7)
!10742 = !DILocation(line: 66, column: 30, scope: !10741)
!10743 = !DILocation(line: 66, column: 7, scope: !10730)
!10744 = !DILocation(line: 67, column: 12, scope: !10745)
!10745 = distinct !DILexicalBlock(scope: !10741, file: !1299, line: 66, column: 36)
!10746 = !DILocation(line: 68, column: 3, scope: !10745)
!10747 = !DILocation(line: 68, column: 21, scope: !10748)
!10748 = distinct !DILexicalBlock(scope: !10741, file: !1299, line: 68, column: 14)
!10749 = !DILocation(line: 68, column: 39, scope: !10748)
!10750 = !DILocation(line: 68, column: 14, scope: !10741)
!10751 = !DILocation(line: 69, column: 12, scope: !10752)
!10752 = distinct !DILexicalBlock(scope: !10748, file: !1299, line: 68, column: 45)
!10753 = !DILocation(line: 70, column: 3, scope: !10752)
!10754 = !DILocation(line: 72, column: 21, scope: !10755)
!10755 = distinct !DILexicalBlock(scope: !10726, file: !1299, line: 72, column: 14)
!10756 = !DILocation(line: 72, column: 35, scope: !10755)
!10757 = !DILocation(line: 72, column: 14, scope: !10726)
!10758 = !DILocation(line: 77, column: 14, scope: !10759)
!10759 = distinct !DILexicalBlock(scope: !10760, file: !1299, line: 77, column: 7)
!10760 = distinct !DILexicalBlock(scope: !10755, file: !1299, line: 72, column: 41)
!10761 = !DILocation(line: 77, column: 30, scope: !10759)
!10762 = !DILocation(line: 77, column: 7, scope: !10760)
!10763 = !DILocation(line: 0, scope: !10726)
!10764 = !DILocation(line: 90, column: 1, scope: !10718)
!10765 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1299, file: !1299, line: 157, type: !10766, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !10768)
!10766 = !DISubroutineType(types: !10767)
!10767 = !{null, !1159, !103, !103, !103}
!10768 = !{!10769, !10770, !10771, !10772, !10773, !10774, !10775, !10776, !10777, !10778, !10779}
!10769 = !DILocalVariable(name: "dev", arg: 1, scope: !10765, file: !1299, line: 157, type: !1159)
!10770 = !DILocalVariable(name: "pin", arg: 2, scope: !10765, file: !1299, line: 157, type: !103)
!10771 = !DILocalVariable(name: "conf", arg: 3, scope: !10765, file: !1299, line: 158, type: !103)
!10772 = !DILocalVariable(name: "func", arg: 4, scope: !10765, file: !1299, line: 158, type: !103)
!10773 = !DILocalVariable(name: "cfg", scope: !10765, file: !1299, line: 160, type: !10290)
!10774 = !DILocalVariable(name: "gpio", scope: !10765, file: !1299, line: 161, type: !1232)
!10775 = !DILocalVariable(name: "pin_ll", scope: !10765, file: !1299, line: 163, type: !103)
!10776 = !DILocalVariable(name: "mode", scope: !10765, file: !1299, line: 227, type: !32)
!10777 = !DILocalVariable(name: "otype", scope: !10765, file: !1299, line: 227, type: !32)
!10778 = !DILocalVariable(name: "ospeed", scope: !10765, file: !1299, line: 227, type: !32)
!10779 = !DILocalVariable(name: "pupd", scope: !10765, file: !1299, line: 227, type: !32)
!10780 = !DILocation(line: 0, scope: !10765)
!10781 = !DILocation(line: 160, column: 45, scope: !10765)
!10782 = !DILocation(line: 161, column: 44, scope: !10765)
!10783 = !DILocation(line: 163, column: 15, scope: !10765)
!10784 = !DILocation(line: 229, column: 14, scope: !10765)
!10785 = !DILocation(line: 246, column: 47, scope: !10765)
!10786 = !DILocation(line: 246, column: 2, scope: !10765)
!10787 = !DILocation(line: 248, column: 43, scope: !10765)
!10788 = !DILocation(line: 248, column: 2, scope: !10765)
!10789 = !DILocation(line: 250, column: 40, scope: !10765)
!10790 = !DILocation(line: 250, column: 2, scope: !10765)
!10791 = !DILocation(line: 252, column: 11, scope: !10792)
!10792 = distinct !DILexicalBlock(scope: !10765, file: !1299, line: 252, column: 6)
!10793 = !DILocation(line: 252, column: 6, scope: !10765)
!10794 = !DILocation(line: 253, column: 11, scope: !10795)
!10795 = distinct !DILexicalBlock(scope: !10796, file: !1299, line: 253, column: 7)
!10796 = distinct !DILexicalBlock(scope: !10792, file: !1299, line: 252, column: 36)
!10797 = !DILocation(line: 253, column: 7, scope: !10796)
!10798 = !DILocation(line: 254, column: 4, scope: !10799)
!10799 = distinct !DILexicalBlock(scope: !10795, file: !1299, line: 253, column: 16)
!10800 = !DILocation(line: 255, column: 3, scope: !10799)
!10801 = !DILocation(line: 256, column: 4, scope: !10802)
!10802 = distinct !DILexicalBlock(scope: !10795, file: !1299, line: 255, column: 10)
!10803 = !DILocation(line: 260, column: 40, scope: !10765)
!10804 = !DILocation(line: 260, column: 2, scope: !10765)
!10805 = !DILocation(line: 265, column: 1, scope: !10765)
!10806 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1299, file: !1299, line: 137, type: !10613, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !10807)
!10807 = !{!10808, !10809}
!10808 = !DILocalVariable(name: "pin", arg: 1, scope: !10806, file: !1299, line: 137, type: !103)
!10809 = !DILocalVariable(name: "pinval", scope: !10806, file: !1299, line: 139, type: !108)
!10810 = !DILocation(line: 0, scope: !10806)
!10811 = !DILocation(line: 149, column: 13, scope: !10806)
!10812 = !DILocation(line: 151, column: 2, scope: !10806)
!10813 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !10688, file: !10688, line: 342, type: !10814, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !10816)
!10814 = !DISubroutineType(types: !10815)
!10815 = !{null, !1232, !108, !108}
!10816 = !{!10817, !10818, !10819}
!10817 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10813, file: !10688, line: 342, type: !1232)
!10818 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10813, file: !10688, line: 342, type: !108)
!10819 = !DILocalVariable(name: "OutputType", arg: 3, scope: !10813, file: !10688, line: 342, type: !108)
!10820 = !DILocation(line: 0, scope: !10813)
!10821 = !DILocation(line: 344, column: 3, scope: !10813)
!10822 = !DILocation(line: 345, column: 1, scope: !10813)
!10823 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !10688, file: !10688, line: 413, type: !10814, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !10824)
!10824 = !{!10825, !10826, !10827}
!10825 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10823, file: !10688, line: 413, type: !1232)
!10826 = !DILocalVariable(name: "Pin", arg: 2, scope: !10823, file: !10688, line: 413, type: !108)
!10827 = !DILocalVariable(name: "Speed", arg: 3, scope: !10823, file: !10688, line: 413, type: !108)
!10828 = !DILocation(line: 0, scope: !10823)
!10829 = !DILocation(line: 415, column: 3, scope: !10823)
!10830 = !DILocation(line: 0, scope: !10633, inlinedAt: !10831)
!10831 = distinct !DILocation(line: 415, column: 3, scope: !10823)
!10832 = !DILocation(line: 380, column: 4, scope: !10633, inlinedAt: !10831)
!10833 = !DILocation(line: 0, scope: !10641, inlinedAt: !10834)
!10834 = distinct !DILocation(line: 415, column: 3, scope: !10823)
!10835 = !DILocation(line: 414, column: 7, scope: !10641, inlinedAt: !10834)
!10836 = !DILocation(line: 0, scope: !10633, inlinedAt: !10837)
!10837 = distinct !DILocation(line: 415, column: 3, scope: !10823)
!10838 = !DILocation(line: 0, scope: !10641, inlinedAt: !10839)
!10839 = distinct !DILocation(line: 415, column: 3, scope: !10823)
!10840 = !DILocation(line: 417, column: 1, scope: !10823)
!10841 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !10688, file: !10688, line: 484, type: !10814, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !10842)
!10842 = !{!10843, !10844, !10845}
!10843 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10841, file: !10688, line: 484, type: !1232)
!10844 = !DILocalVariable(name: "Pin", arg: 2, scope: !10841, file: !10688, line: 484, type: !108)
!10845 = !DILocalVariable(name: "Pull", arg: 3, scope: !10841, file: !10688, line: 484, type: !108)
!10846 = !DILocation(line: 0, scope: !10841)
!10847 = !DILocation(line: 486, column: 3, scope: !10841)
!10848 = !DILocation(line: 0, scope: !10633, inlinedAt: !10849)
!10849 = distinct !DILocation(line: 486, column: 3, scope: !10841)
!10850 = !DILocation(line: 380, column: 4, scope: !10633, inlinedAt: !10849)
!10851 = !DILocation(line: 0, scope: !10641, inlinedAt: !10852)
!10852 = distinct !DILocation(line: 486, column: 3, scope: !10841)
!10853 = !DILocation(line: 414, column: 7, scope: !10641, inlinedAt: !10852)
!10854 = !DILocation(line: 0, scope: !10633, inlinedAt: !10855)
!10855 = distinct !DILocation(line: 486, column: 3, scope: !10841)
!10856 = !DILocation(line: 0, scope: !10641, inlinedAt: !10857)
!10857 = distinct !DILocation(line: 486, column: 3, scope: !10841)
!10858 = !DILocation(line: 487, column: 1, scope: !10841)
!10859 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !10688, file: !10688, line: 556, type: !10814, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !10860)
!10860 = !{!10861, !10862, !10863}
!10861 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10859, file: !10688, line: 556, type: !1232)
!10862 = !DILocalVariable(name: "Pin", arg: 2, scope: !10859, file: !10688, line: 556, type: !108)
!10863 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10859, file: !10688, line: 556, type: !108)
!10864 = !DILocation(line: 0, scope: !10859)
!10865 = !DILocation(line: 558, column: 3, scope: !10859)
!10866 = !DILocation(line: 0, scope: !10633, inlinedAt: !10867)
!10867 = distinct !DILocation(line: 558, column: 3, scope: !10859)
!10868 = !DILocation(line: 380, column: 4, scope: !10633, inlinedAt: !10867)
!10869 = !DILocation(line: 0, scope: !10641, inlinedAt: !10870)
!10870 = distinct !DILocation(line: 558, column: 3, scope: !10859)
!10871 = !DILocation(line: 414, column: 7, scope: !10641, inlinedAt: !10870)
!10872 = !DILocation(line: 0, scope: !10633, inlinedAt: !10873)
!10873 = distinct !DILocation(line: 558, column: 3, scope: !10859)
!10874 = !DILocation(line: 0, scope: !10641, inlinedAt: !10875)
!10875 = distinct !DILocation(line: 558, column: 3, scope: !10859)
!10876 = !DILocation(line: 560, column: 1, scope: !10859)
!10877 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !10688, file: !10688, line: 633, type: !10814, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !10878)
!10878 = !{!10879, !10880, !10881}
!10879 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10877, file: !10688, line: 633, type: !1232)
!10880 = !DILocalVariable(name: "Pin", arg: 2, scope: !10877, file: !10688, line: 633, type: !108)
!10881 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10877, file: !10688, line: 633, type: !108)
!10882 = !DILocation(line: 0, scope: !10877)
!10883 = !DILocation(line: 635, column: 3, scope: !10877)
!10884 = !DILocation(line: 0, scope: !10633, inlinedAt: !10885)
!10885 = distinct !DILocation(line: 635, column: 3, scope: !10877)
!10886 = !DILocation(line: 380, column: 4, scope: !10633, inlinedAt: !10885)
!10887 = !DILocation(line: 0, scope: !10641, inlinedAt: !10888)
!10888 = distinct !DILocation(line: 635, column: 3, scope: !10877)
!10889 = !DILocation(line: 414, column: 7, scope: !10641, inlinedAt: !10888)
!10890 = !DILocation(line: 0, scope: !10633, inlinedAt: !10891)
!10891 = distinct !DILocation(line: 635, column: 3, scope: !10877)
!10892 = !DILocation(line: 0, scope: !10641, inlinedAt: !10893)
!10893 = distinct !DILocation(line: 635, column: 3, scope: !10877)
!10894 = !DILocation(line: 637, column: 1, scope: !10877)
!10895 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !10688, file: !10688, line: 273, type: !10814, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !10896)
!10896 = !{!10897, !10898, !10899}
!10897 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10895, file: !10688, line: 273, type: !1232)
!10898 = !DILocalVariable(name: "Pin", arg: 2, scope: !10895, file: !10688, line: 273, type: !108)
!10899 = !DILocalVariable(name: "Mode", arg: 3, scope: !10895, file: !10688, line: 273, type: !108)
!10900 = !DILocation(line: 0, scope: !10895)
!10901 = !DILocation(line: 275, column: 3, scope: !10895)
!10902 = !DILocation(line: 0, scope: !10633, inlinedAt: !10903)
!10903 = distinct !DILocation(line: 275, column: 3, scope: !10895)
!10904 = !DILocation(line: 380, column: 4, scope: !10633, inlinedAt: !10903)
!10905 = !DILocation(line: 0, scope: !10641, inlinedAt: !10906)
!10906 = distinct !DILocation(line: 275, column: 3, scope: !10895)
!10907 = !DILocation(line: 414, column: 7, scope: !10641, inlinedAt: !10906)
!10908 = !DILocation(line: 0, scope: !10633, inlinedAt: !10909)
!10909 = distinct !DILocation(line: 275, column: 3, scope: !10895)
!10910 = !DILocation(line: 0, scope: !10641, inlinedAt: !10911)
!10911 = distinct !DILocation(line: 275, column: 3, scope: !10895)
!10912 = !DILocation(line: 276, column: 1, scope: !10895)
!10913 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1299, file: !1299, line: 698, type: !1312, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !10914)
!10914 = !{!10915, !10916, !10917}
!10915 = !DILocalVariable(name: "dev", arg: 1, scope: !10913, file: !1299, line: 698, type: !1159)
!10916 = !DILocalVariable(name: "data", scope: !10913, file: !1299, line: 700, type: !10357)
!10917 = !DILocalVariable(name: "ret", scope: !10913, file: !1299, line: 701, type: !103)
!10918 = !DILocation(line: 0, scope: !10913)
!10919 = !DILocation(line: 700, column: 38, scope: !10913)
!10920 = !DILocation(line: 703, column: 8, scope: !10913)
!10921 = !DILocation(line: 703, column: 12, scope: !10913)
!10922 = !DILocation(line: 705, column: 7, scope: !10923)
!10923 = distinct !DILexicalBlock(scope: !10913, file: !1299, line: 705, column: 6)
!10924 = !DILocation(line: 705, column: 6, scope: !10913)
!10925 = !DILocation(line: 722, column: 8, scope: !10913)
!10926 = !DILocation(line: 723, column: 10, scope: !10927)
!10927 = distinct !DILexicalBlock(scope: !10913, file: !1299, line: 723, column: 6)
!10928 = !DILocation(line: 723, column: 6, scope: !10913)
!10929 = !DILocation(line: 731, column: 1, scope: !10913)
!10930 = distinct !DISubprogram(name: "device_is_ready", scope: !10137, file: !10137, line: 47, type: !10931, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !10933)
!10931 = !DISubroutineType(types: !10932)
!10932 = !{!131, !1159}
!10933 = !{!10934}
!10934 = !DILocalVariable(name: "dev", arg: 1, scope: !10930, file: !10137, line: 47, type: !1159)
!10935 = !DILocation(line: 0, scope: !10930)
!10936 = !DILocation(line: 55, column: 2, scope: !10937)
!10937 = distinct !DILexicalBlock(scope: !10930, file: !10137, line: 55, column: 2)
!10938 = !{i64 2155036103}
!10939 = !DILocation(line: 56, column: 9, scope: !10930)
!10940 = !DILocation(line: 56, column: 2, scope: !10930)
!10941 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1299, file: !1299, line: 270, type: !10942, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !10944)
!10942 = !DISubroutineType(types: !10943)
!10943 = !{!103, !1159, !131}
!10944 = !{!10945, !10946, !10947, !10948, !10949}
!10945 = !DILocalVariable(name: "dev", arg: 1, scope: !10941, file: !1299, line: 270, type: !1159)
!10946 = !DILocalVariable(name: "on", arg: 2, scope: !10941, file: !1299, line: 270, type: !131)
!10947 = !DILocalVariable(name: "cfg", scope: !10941, file: !1299, line: 272, type: !10290)
!10948 = !DILocalVariable(name: "ret", scope: !10941, file: !1299, line: 273, type: !103)
!10949 = !DILocalVariable(name: "clk", scope: !10941, file: !1299, line: 278, type: !10580)
!10950 = !DILocation(line: 0, scope: !10941)
!10951 = !DILocation(line: 272, column: 45, scope: !10941)
!10952 = !DILocation(line: 282, column: 38, scope: !10953)
!10953 = distinct !DILexicalBlock(scope: !10954, file: !1299, line: 280, column: 10)
!10954 = distinct !DILexicalBlock(scope: !10941, file: !1299, line: 280, column: 6)
!10955 = !DILocation(line: 282, column: 6, scope: !10953)
!10956 = !DILocation(line: 281, column: 9, scope: !10953)
!10957 = !DILocation(line: 293, column: 1, scope: !10941)
!10958 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !429, file: !429, line: 730, type: !10931, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !10959)
!10959 = !{!10960}
!10960 = !DILocalVariable(name: "dev", arg: 1, scope: !10958, file: !429, line: 730, type: !1159)
!10961 = !DILocation(line: 0, scope: !10958)
!10962 = !DILocation(line: 732, column: 9, scope: !10958)
!10963 = !DILocation(line: 732, column: 2, scope: !10958)
!10964 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1299, file: !1299, line: 496, type: !10965, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !10967)
!10965 = !DISubroutineType(types: !10966)
!10966 = !{!103, !1159, !103, !103, !103}
!10967 = !{!10968, !10969, !10970, !10971, !10972, !10973}
!10968 = !DILocalVariable(name: "dev", arg: 1, scope: !10964, file: !1299, line: 496, type: !1159)
!10969 = !DILocalVariable(name: "pin", arg: 2, scope: !10964, file: !1299, line: 496, type: !103)
!10970 = !DILocalVariable(name: "conf", arg: 3, scope: !10964, file: !1299, line: 496, type: !103)
!10971 = !DILocalVariable(name: "func", arg: 4, scope: !10964, file: !1299, line: 496, type: !103)
!10972 = !DILocalVariable(name: "ret", scope: !10964, file: !1299, line: 498, type: !103)
!10973 = !DILocalVariable(name: "gpio_out", scope: !10974, file: !1299, line: 508, type: !108)
!10974 = distinct !DILexicalBlock(scope: !10975, file: !1299, line: 507, column: 27)
!10975 = distinct !DILexicalBlock(scope: !10964, file: !1299, line: 507, column: 6)
!10976 = !DILocation(line: 0, scope: !10964)
!10977 = !DILocation(line: 505, column: 2, scope: !10964)
!10978 = !DILocation(line: 507, column: 11, scope: !10975)
!10979 = !DILocation(line: 507, column: 6, scope: !10964)
!10980 = !DILocation(line: 508, column: 28, scope: !10974)
!10981 = !DILocation(line: 0, scope: !10974)
!10982 = !DILocation(line: 510, column: 16, scope: !10983)
!10983 = distinct !DILexicalBlock(scope: !10974, file: !1299, line: 510, column: 7)
!10984 = !DILocation(line: 0, scope: !10983)
!10985 = !DILocation(line: 510, column: 7, scope: !10974)
!10986 = !DILocation(line: 511, column: 4, scope: !10987)
!10987 = distinct !DILexicalBlock(scope: !10983, file: !1299, line: 510, column: 32)
!10988 = !DILocation(line: 512, column: 3, scope: !10987)
!10989 = !DILocation(line: 513, column: 4, scope: !10990)
!10990 = distinct !DILexicalBlock(scope: !10991, file: !1299, line: 512, column: 39)
!10991 = distinct !DILexicalBlock(scope: !10983, file: !1299, line: 512, column: 14)
!10992 = !DILocation(line: 514, column: 3, scope: !10990)
!10993 = !DILocation(line: 518, column: 1, scope: !10964)
!10994 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1584, file: !1584, line: 526, type: !1487, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !10995)
!10995 = !{!10996, !10997, !10998}
!10996 = !DILocalVariable(name: "dev", arg: 1, scope: !10994, file: !1584, line: 526, type: !1489)
!10997 = !DILocalVariable(name: "c", arg: 2, scope: !10994, file: !1584, line: 526, type: !1091)
!10998 = !DILocalVariable(name: "config", scope: !10994, file: !1584, line: 528, type: !10999)
!10999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1601, size: 32)
!11000 = !DILocation(line: 0, scope: !10994)
!11001 = !DILocation(line: 528, column: 48, scope: !10994)
!11002 = !DILocation(line: 531, column: 40, scope: !11003)
!11003 = distinct !DILexicalBlock(scope: !10994, file: !1584, line: 531, column: 6)
!11004 = !DILocation(line: 531, column: 6, scope: !11003)
!11005 = !DILocation(line: 531, column: 6, scope: !10994)
!11006 = !DILocation(line: 532, column: 34, scope: !11007)
!11007 = distinct !DILexicalBlock(scope: !11003, file: !1584, line: 531, column: 48)
!11008 = !DILocation(line: 532, column: 3, scope: !11007)
!11009 = !DILocation(line: 533, column: 2, scope: !11007)
!11010 = !DILocation(line: 539, column: 42, scope: !11011)
!11011 = distinct !DILexicalBlock(scope: !10994, file: !1584, line: 539, column: 6)
!11012 = !DILocation(line: 539, column: 7, scope: !11011)
!11013 = !DILocation(line: 539, column: 6, scope: !10994)
!11014 = !DILocation(line: 543, column: 52, scope: !10994)
!11015 = !DILocation(line: 543, column: 22, scope: !10994)
!11016 = !DILocation(line: 543, column: 5, scope: !10994)
!11017 = !DILocation(line: 545, column: 2, scope: !10994)
!11018 = !DILocation(line: 546, column: 1, scope: !10994)
!11019 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1584, file: !1584, line: 548, type: !1506, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11020)
!11020 = !{!11021, !11022, !11023, !11024}
!11021 = !DILocalVariable(name: "dev", arg: 1, scope: !11019, file: !1584, line: 548, type: !1489)
!11022 = !DILocalVariable(name: "c", arg: 2, scope: !11019, file: !1584, line: 549, type: !186)
!11023 = !DILocalVariable(name: "config", scope: !11019, file: !1584, line: 551, type: !10999)
!11024 = !DILocalVariable(name: "key", scope: !11019, file: !1584, line: 555, type: !32)
!11025 = !DILocation(line: 0, scope: !11019)
!11026 = !DILocation(line: 551, column: 48, scope: !11019)
!11027 = !DILocation(line: 562, column: 2, scope: !11019)
!11028 = !DILocation(line: 563, column: 41, scope: !11029)
!11029 = distinct !DILexicalBlock(scope: !11030, file: !1584, line: 563, column: 7)
!11030 = distinct !DILexicalBlock(scope: !11019, file: !1584, line: 562, column: 12)
!11031 = !DILocation(line: 563, column: 7, scope: !11029)
!11032 = !DILocation(line: 563, column: 7, scope: !11030)
!11033 = !DILocation(line: 55, column: 2, scope: !11034, inlinedAt: !11038)
!11034 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6996, file: !6996, line: 42, type: !6997, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11035)
!11035 = !{!11036, !11037}
!11036 = !DILocalVariable(name: "key", scope: !11034, file: !6996, line: 44, type: !32)
!11037 = !DILocalVariable(name: "tmp", scope: !11034, file: !6996, line: 53, type: !32)
!11038 = distinct !DILocation(line: 564, column: 10, scope: !11039)
!11039 = distinct !DILexicalBlock(scope: !11029, file: !1584, line: 563, column: 49)
!11040 = !{i64 2272797}
!11041 = !DILocation(line: 0, scope: !11034, inlinedAt: !11038)
!11042 = !DILocation(line: 565, column: 42, scope: !11043)
!11043 = distinct !DILexicalBlock(scope: !11039, file: !1584, line: 565, column: 8)
!11044 = !DILocation(line: 565, column: 8, scope: !11043)
!11045 = !DILocation(line: 565, column: 8, scope: !11039)
!11046 = !DILocalVariable(name: "key", arg: 1, scope: !11047, file: !6996, line: 84, type: !32)
!11047 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6996, file: !6996, line: 84, type: !7007, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11048)
!11048 = !{!11046}
!11049 = !DILocation(line: 0, scope: !11047, inlinedAt: !11050)
!11050 = distinct !DILocation(line: 568, column: 4, scope: !11039)
!11051 = !DILocation(line: 95, column: 2, scope: !11047, inlinedAt: !11050)
!11052 = !{i64 2273614}
!11053 = !DILocation(line: 569, column: 3, scope: !11039)
!11054 = distinct !{!11054, !11027, !11055}
!11055 = !DILocation(line: 570, column: 2, scope: !11019)
!11056 = !DILocation(line: 592, column: 33, scope: !11019)
!11057 = !DILocation(line: 592, column: 2, scope: !11019)
!11058 = !DILocation(line: 0, scope: !11047, inlinedAt: !11059)
!11059 = distinct !DILocation(line: 593, column: 2, scope: !11019)
!11060 = !DILocation(line: 95, column: 2, scope: !11047, inlinedAt: !11059)
!11061 = !DILocation(line: 594, column: 1, scope: !11019)
!11062 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1584, file: !1584, line: 596, type: !1510, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11063)
!11063 = !{!11064, !11065, !11066}
!11064 = !DILocalVariable(name: "dev", arg: 1, scope: !11062, file: !1584, line: 596, type: !1489)
!11065 = !DILocalVariable(name: "config", scope: !11062, file: !1584, line: 598, type: !10999)
!11066 = !DILocalVariable(name: "err", scope: !11062, file: !1584, line: 599, type: !108)
!11067 = !DILocation(line: 0, scope: !11062)
!11068 = !DILocation(line: 598, column: 48, scope: !11062)
!11069 = !DILocation(line: 606, column: 40, scope: !11070)
!11070 = distinct !DILexicalBlock(scope: !11062, file: !1584, line: 606, column: 6)
!11071 = !DILocation(line: 606, column: 6, scope: !11070)
!11072 = !DILocation(line: 606, column: 6, scope: !11062)
!11073 = !DILocation(line: 610, column: 39, scope: !11074)
!11074 = distinct !DILexicalBlock(scope: !11062, file: !1584, line: 610, column: 6)
!11075 = !DILocation(line: 610, column: 6, scope: !11074)
!11076 = !DILocation(line: 610, column: 6, scope: !11062)
!11077 = !DILocation(line: 614, column: 39, scope: !11078)
!11078 = distinct !DILexicalBlock(scope: !11062, file: !1584, line: 614, column: 6)
!11079 = !DILocation(line: 614, column: 6, scope: !11078)
!11080 = !DILocation(line: 614, column: 6, scope: !11062)
!11081 = !DILocation(line: 619, column: 40, scope: !11082)
!11082 = distinct !DILexicalBlock(scope: !11062, file: !1584, line: 619, column: 6)
!11083 = !DILocation(line: 619, column: 6, scope: !11082)
!11084 = !DILocation(line: 619, column: 6, scope: !11062)
!11085 = !DILocation(line: 623, column: 10, scope: !11086)
!11086 = distinct !DILexicalBlock(scope: !11062, file: !1584, line: 623, column: 6)
!11087 = !DILocation(line: 623, column: 6, scope: !11062)
!11088 = !DILocation(line: 624, column: 34, scope: !11089)
!11089 = distinct !DILexicalBlock(scope: !11086, file: !1584, line: 623, column: 24)
!11090 = !DILocation(line: 624, column: 3, scope: !11089)
!11091 = !DILocation(line: 625, column: 2, scope: !11089)
!11092 = !DILocation(line: 632, column: 10, scope: !11093)
!11093 = distinct !DILexicalBlock(scope: !11062, file: !1584, line: 632, column: 6)
!11094 = !DILocation(line: 632, column: 6, scope: !11062)
!11095 = !DILocation(line: 633, column: 34, scope: !11096)
!11096 = distinct !DILexicalBlock(scope: !11093, file: !1584, line: 632, column: 32)
!11097 = !DILocation(line: 633, column: 3, scope: !11096)
!11098 = !DILocation(line: 634, column: 2, scope: !11096)
!11099 = !DILocation(line: 636, column: 10, scope: !11100)
!11100 = distinct !DILexicalBlock(scope: !11062, file: !1584, line: 636, column: 6)
!11101 = !DILocation(line: 636, column: 6, scope: !11062)
!11102 = !DILocation(line: 637, column: 33, scope: !11103)
!11103 = distinct !DILexicalBlock(scope: !11100, file: !1584, line: 636, column: 31)
!11104 = !DILocation(line: 637, column: 3, scope: !11103)
!11105 = !DILocation(line: 638, column: 2, scope: !11103)
!11106 = !DILocation(line: 640, column: 10, scope: !11107)
!11107 = distinct !DILexicalBlock(scope: !11062, file: !1584, line: 640, column: 6)
!11108 = !DILocation(line: 640, column: 6, scope: !11062)
!11109 = !DILocation(line: 641, column: 33, scope: !11110)
!11110 = distinct !DILexicalBlock(scope: !11107, file: !1584, line: 640, column: 32)
!11111 = !DILocation(line: 641, column: 3, scope: !11110)
!11112 = !DILocation(line: 642, column: 2, scope: !11110)
!11113 = !DILocation(line: 646, column: 32, scope: !11062)
!11114 = !DILocation(line: 646, column: 2, scope: !11062)
!11115 = !DILocation(line: 648, column: 2, scope: !11062)
!11116 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1584, file: !1584, line: 419, type: !1514, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11117)
!11117 = !{!11118, !11119, !11120, !11121, !11123, !11124, !11125, !11126}
!11118 = !DILocalVariable(name: "dev", arg: 1, scope: !11116, file: !1584, line: 419, type: !1489)
!11119 = !DILocalVariable(name: "cfg", arg: 2, scope: !11116, file: !1584, line: 420, type: !1516)
!11120 = !DILocalVariable(name: "config", scope: !11116, file: !1584, line: 422, type: !10999)
!11121 = !DILocalVariable(name: "data", scope: !11116, file: !1584, line: 423, type: !11122)
!11122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1658, size: 32)
!11123 = !DILocalVariable(name: "parity", scope: !11116, file: !1584, line: 424, type: !7580)
!11124 = !DILocalVariable(name: "stopbits", scope: !11116, file: !1584, line: 425, type: !7580)
!11125 = !DILocalVariable(name: "databits", scope: !11116, file: !1584, line: 426, type: !7580)
!11126 = !DILocalVariable(name: "flowctrl", scope: !11116, file: !1584, line: 428, type: !7580)
!11127 = !DILocation(line: 0, scope: !11116)
!11128 = !DILocation(line: 422, column: 48, scope: !11116)
!11129 = !DILocation(line: 423, column: 38, scope: !11116)
!11130 = !DILocation(line: 424, column: 56, scope: !11116)
!11131 = !DILocation(line: 424, column: 51, scope: !11116)
!11132 = !DILocation(line: 424, column: 26, scope: !11116)
!11133 = !DILocation(line: 425, column: 60, scope: !11116)
!11134 = !DILocation(line: 425, column: 55, scope: !11116)
!11135 = !DILocation(line: 425, column: 28, scope: !11116)
!11136 = !DILocation(line: 426, column: 60, scope: !11116)
!11137 = !DILocation(line: 426, column: 55, scope: !11116)
!11138 = !DILocation(line: 426, column: 28, scope: !11116)
!11139 = !DILocation(line: 428, column: 58, scope: !11116)
!11140 = !DILocation(line: 428, column: 53, scope: !11116)
!11141 = !DILocation(line: 428, column: 28, scope: !11116)
!11142 = !DILocation(line: 431, column: 44, scope: !11143)
!11143 = distinct !DILexicalBlock(scope: !11116, file: !1584, line: 431, column: 6)
!11144 = !DILocation(line: 438, column: 22, scope: !11145)
!11145 = distinct !DILexicalBlock(scope: !11116, file: !1584, line: 437, column: 6)
!11146 = !DILocation(line: 437, column: 6, scope: !11116)
!11147 = !DILocation(line: 448, column: 6, scope: !11116)
!11148 = !DILocation(line: 465, column: 47, scope: !11149)
!11149 = distinct !DILexicalBlock(scope: !11116, file: !1584, line: 465, column: 6)
!11150 = !DILocation(line: 475, column: 21, scope: !11151)
!11151 = distinct !DILexicalBlock(scope: !11116, file: !1584, line: 475, column: 6)
!11152 = !DILocation(line: 475, column: 6, scope: !11116)
!11153 = !DILocation(line: 476, column: 8, scope: !11154)
!11154 = distinct !DILexicalBlock(scope: !11155, file: !1584, line: 476, column: 7)
!11155 = distinct !DILexicalBlock(scope: !11151, file: !1584, line: 475, column: 49)
!11156 = !DILocation(line: 477, column: 34, scope: !11154)
!11157 = !DILocation(line: 476, column: 7, scope: !11155)
!11158 = !DILocation(line: 482, column: 27, scope: !11116)
!11159 = !DILocation(line: 482, column: 2, scope: !11116)
!11160 = !DILocation(line: 484, column: 16, scope: !11161)
!11161 = distinct !DILexicalBlock(scope: !11116, file: !1584, line: 484, column: 6)
!11162 = !DILocation(line: 484, column: 13, scope: !11161)
!11163 = !DILocation(line: 484, column: 6, scope: !11116)
!11164 = !DILocation(line: 485, column: 3, scope: !11165)
!11165 = distinct !DILexicalBlock(scope: !11161, file: !1584, line: 484, column: 44)
!11166 = !DILocation(line: 486, column: 2, scope: !11165)
!11167 = !DILocation(line: 488, column: 18, scope: !11168)
!11168 = distinct !DILexicalBlock(scope: !11116, file: !1584, line: 488, column: 6)
!11169 = !DILocation(line: 488, column: 15, scope: !11168)
!11170 = !DILocation(line: 488, column: 6, scope: !11116)
!11171 = !DILocation(line: 489, column: 3, scope: !11172)
!11172 = distinct !DILexicalBlock(scope: !11168, file: !1584, line: 488, column: 48)
!11173 = !DILocation(line: 490, column: 2, scope: !11172)
!11174 = !DILocation(line: 492, column: 18, scope: !11175)
!11175 = distinct !DILexicalBlock(scope: !11116, file: !1584, line: 492, column: 6)
!11176 = !DILocation(line: 492, column: 15, scope: !11175)
!11177 = !DILocation(line: 492, column: 6, scope: !11116)
!11178 = !DILocation(line: 493, column: 3, scope: !11179)
!11179 = distinct !DILexicalBlock(scope: !11175, file: !1584, line: 492, column: 48)
!11180 = !DILocation(line: 494, column: 2, scope: !11179)
!11181 = !DILocation(line: 496, column: 18, scope: !11182)
!11182 = distinct !DILexicalBlock(scope: !11116, file: !1584, line: 496, column: 6)
!11183 = !DILocation(line: 496, column: 15, scope: !11182)
!11184 = !DILocation(line: 496, column: 6, scope: !11116)
!11185 = !DILocation(line: 497, column: 3, scope: !11186)
!11186 = distinct !DILexicalBlock(scope: !11182, file: !1584, line: 496, column: 46)
!11187 = !DILocation(line: 498, column: 2, scope: !11186)
!11188 = !DILocation(line: 500, column: 11, scope: !11189)
!11189 = distinct !DILexicalBlock(scope: !11116, file: !1584, line: 500, column: 6)
!11190 = !DILocation(line: 500, column: 29, scope: !11189)
!11191 = !DILocation(line: 500, column: 20, scope: !11189)
!11192 = !DILocation(line: 500, column: 6, scope: !11116)
!11193 = !DILocation(line: 501, column: 3, scope: !11194)
!11194 = distinct !DILexicalBlock(scope: !11189, file: !1584, line: 500, column: 40)
!11195 = !DILocation(line: 502, column: 26, scope: !11194)
!11196 = !DILocation(line: 502, column: 19, scope: !11194)
!11197 = !DILocation(line: 503, column: 2, scope: !11194)
!11198 = !DILocation(line: 505, column: 26, scope: !11116)
!11199 = !DILocation(line: 505, column: 2, scope: !11116)
!11200 = !DILocation(line: 506, column: 2, scope: !11116)
!11201 = !DILocation(line: 507, column: 1, scope: !11116)
!11202 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1584, file: !1584, line: 509, type: !1527, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11203)
!11203 = !{!11204, !11205, !11206}
!11204 = !DILocalVariable(name: "dev", arg: 1, scope: !11202, file: !1584, line: 509, type: !1489)
!11205 = !DILocalVariable(name: "cfg", arg: 2, scope: !11202, file: !1584, line: 510, type: !1529)
!11206 = !DILocalVariable(name: "data", scope: !11202, file: !1584, line: 512, type: !11122)
!11207 = !DILocation(line: 0, scope: !11202)
!11208 = !DILocation(line: 512, column: 38, scope: !11202)
!11209 = !DILocation(line: 514, column: 24, scope: !11202)
!11210 = !DILocation(line: 514, column: 7, scope: !11202)
!11211 = !DILocation(line: 514, column: 16, scope: !11202)
!11212 = !DILocation(line: 515, column: 41, scope: !11202)
!11213 = !{i32 0, i32 1537}
!11214 = !DILocation(line: 515, column: 16, scope: !11202)
!11215 = !DILocation(line: 515, column: 7, scope: !11202)
!11216 = !DILocation(line: 515, column: 14, scope: !11202)
!11217 = !DILocation(line: 517, column: 3, scope: !11202)
!11218 = !{i32 0, i32 12289}
!11219 = !DILocation(line: 516, column: 19, scope: !11202)
!11220 = !DILocation(line: 516, column: 7, scope: !11202)
!11221 = !DILocation(line: 516, column: 17, scope: !11202)
!11222 = !DILocation(line: 519, column: 3, scope: !11202)
!11223 = !DILocation(line: 519, column: 33, scope: !11202)
!11224 = !DILocation(line: 518, column: 19, scope: !11202)
!11225 = !DILocation(line: 518, column: 7, scope: !11202)
!11226 = !DILocation(line: 518, column: 17, scope: !11202)
!11227 = !DILocation(line: 521, column: 3, scope: !11202)
!11228 = !{i32 0, i32 769}
!11229 = !DILocation(line: 520, column: 19, scope: !11202)
!11230 = !DILocation(line: 520, column: 7, scope: !11202)
!11231 = !DILocation(line: 520, column: 17, scope: !11202)
!11232 = !DILocation(line: 522, column: 2, scope: !11202)
!11233 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1584, file: !1584, line: 205, type: !11234, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11236)
!11234 = !DISubroutineType(types: !11235)
!11235 = !{!108, !1489}
!11236 = !{!11237, !11238}
!11237 = !DILocalVariable(name: "dev", arg: 1, scope: !11233, file: !1584, line: 205, type: !1489)
!11238 = !DILocalVariable(name: "config", scope: !11233, file: !1584, line: 207, type: !10999)
!11239 = !DILocation(line: 0, scope: !11233)
!11240 = !DILocation(line: 207, column: 48, scope: !11233)
!11241 = !DILocation(line: 209, column: 36, scope: !11233)
!11242 = !DILocation(line: 209, column: 9, scope: !11233)
!11243 = !DILocation(line: 209, column: 2, scope: !11233)
!11244 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1584, file: !1584, line: 270, type: !11245, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11247)
!11245 = !DISubroutineType(types: !11246)
!11246 = !{!1455, !108}
!11247 = !{!11248}
!11248 = !DILocalVariable(name: "parity", arg: 1, scope: !11244, file: !1584, line: 270, type: !108)
!11249 = !DILocation(line: 0, scope: !11244)
!11250 = !DILocation(line: 272, column: 2, scope: !11244)
!11251 = !DILocation(line: 281, column: 1, scope: !11244)
!11252 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1584, file: !1584, line: 220, type: !11234, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11253)
!11253 = !{!11254, !11255}
!11254 = !DILocalVariable(name: "dev", arg: 1, scope: !11252, file: !1584, line: 220, type: !1489)
!11255 = !DILocalVariable(name: "config", scope: !11252, file: !1584, line: 222, type: !10999)
!11256 = !DILocation(line: 0, scope: !11252)
!11257 = !DILocation(line: 222, column: 48, scope: !11252)
!11258 = !DILocation(line: 224, column: 44, scope: !11252)
!11259 = !DILocation(line: 224, column: 9, scope: !11252)
!11260 = !DILocation(line: 224, column: 2, scope: !11252)
!11261 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1584, file: !1584, line: 304, type: !11262, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11264)
!11262 = !DISubroutineType(types: !11263)
!11263 = !{!1469, !108}
!11264 = !{!11265}
!11265 = !DILocalVariable(name: "sb", arg: 1, scope: !11261, file: !1584, line: 304, type: !108)
!11266 = !DILocation(line: 0, scope: !11261)
!11267 = !DILocation(line: 306, column: 2, scope: !11261)
!11268 = !DILocation(line: 0, scope: !11269)
!11269 = distinct !DILexicalBlock(scope: !11261, file: !1584, line: 306, column: 14)
!11270 = !DILocation(line: 323, column: 1, scope: !11261)
!11271 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1584, file: !1584, line: 235, type: !11234, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11272)
!11272 = !{!11273, !11274}
!11273 = !DILocalVariable(name: "dev", arg: 1, scope: !11271, file: !1584, line: 235, type: !1489)
!11274 = !DILocalVariable(name: "config", scope: !11271, file: !1584, line: 237, type: !10999)
!11275 = !DILocation(line: 0, scope: !11271)
!11276 = !DILocation(line: 237, column: 48, scope: !11271)
!11277 = !DILocation(line: 239, column: 39, scope: !11271)
!11278 = !DILocation(line: 239, column: 9, scope: !11271)
!11279 = !DILocation(line: 239, column: 2, scope: !11271)
!11280 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1584, file: !1584, line: 355, type: !11281, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11283)
!11281 = !DISubroutineType(types: !11282)
!11282 = !{!1462, !108, !108}
!11283 = !{!11284, !11285}
!11284 = !DILocalVariable(name: "db", arg: 1, scope: !11280, file: !1584, line: 355, type: !108)
!11285 = !DILocalVariable(name: "p", arg: 2, scope: !11280, file: !1584, line: 356, type: !108)
!11286 = !DILocation(line: 0, scope: !11280)
!11287 = !DILocation(line: 358, column: 2, scope: !11280)
!11288 = !DILocation(line: 384, column: 1, scope: !11280)
!11289 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1584, file: !1584, line: 250, type: !11234, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11290)
!11290 = !{!11291, !11292}
!11291 = !DILocalVariable(name: "dev", arg: 1, scope: !11289, file: !1584, line: 250, type: !1489)
!11292 = !DILocalVariable(name: "config", scope: !11289, file: !1584, line: 252, type: !10999)
!11293 = !DILocation(line: 0, scope: !11289)
!11294 = !DILocation(line: 252, column: 48, scope: !11289)
!11295 = !DILocation(line: 254, column: 40, scope: !11289)
!11296 = !DILocation(line: 254, column: 9, scope: !11289)
!11297 = !DILocation(line: 254, column: 2, scope: !11289)
!11298 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1584, file: !1584, line: 409, type: !11299, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11301)
!11299 = !DISubroutineType(types: !11300)
!11300 = !{!1475, !108}
!11301 = !{!11302}
!11302 = !DILocalVariable(name: "fc", arg: 1, scope: !11298, file: !1584, line: 409, type: !108)
!11303 = !DILocation(line: 0, scope: !11298)
!11304 = !DILocation(line: 411, column: 9, scope: !11305)
!11305 = distinct !DILexicalBlock(scope: !11298, file: !1584, line: 411, column: 6)
!11306 = !DILocation(line: 416, column: 1, scope: !11298)
!11307 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !11308, file: !11308, line: 967, type: !11309, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11311)
!11308 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11309 = !DISubroutineType(types: !11310)
!11310 = !{!108, !1530}
!11311 = !{!11312}
!11312 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11307, file: !11308, line: 967, type: !1530)
!11313 = !DILocation(line: 0, scope: !11307)
!11314 = !DILocation(line: 969, column: 21, scope: !11307)
!11315 = !DILocation(line: 969, column: 3, scope: !11307)
!11316 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !11308, file: !11308, line: 601, type: !11309, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11317)
!11317 = !{!11318}
!11318 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11316, file: !11308, line: 601, type: !1530)
!11319 = !DILocation(line: 0, scope: !11316)
!11320 = !DILocation(line: 603, column: 21, scope: !11316)
!11321 = !DILocation(line: 603, column: 3, scope: !11316)
!11322 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !11308, file: !11308, line: 820, type: !11309, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11323)
!11323 = !{!11324}
!11324 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11322, file: !11308, line: 820, type: !1530)
!11325 = !DILocation(line: 0, scope: !11322)
!11326 = !DILocation(line: 822, column: 21, scope: !11322)
!11327 = !DILocation(line: 822, column: 3, scope: !11322)
!11328 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !11308, file: !11308, line: 547, type: !11309, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11329)
!11329 = !{!11330}
!11330 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11328, file: !11308, line: 547, type: !1530)
!11331 = !DILocation(line: 0, scope: !11328)
!11332 = !DILocation(line: 549, column: 21, scope: !11328)
!11333 = !DILocation(line: 549, column: 3, scope: !11328)
!11334 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1584, file: !1584, line: 257, type: !11335, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11337)
!11335 = !DISubroutineType(types: !11336)
!11336 = !{!108, !1455}
!11337 = !{!11338}
!11338 = !DILocalVariable(name: "parity", arg: 1, scope: !11334, file: !1584, line: 257, type: !1455)
!11339 = !DILocation(line: 0, scope: !11334)
!11340 = !DILocation(line: 259, column: 2, scope: !11334)
!11341 = !DILocation(line: 268, column: 1, scope: !11334)
!11342 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1584, file: !1584, line: 283, type: !11343, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11345)
!11343 = !DISubroutineType(types: !11344)
!11344 = !{!108, !1469}
!11345 = !{!11346}
!11346 = !DILocalVariable(name: "sb", arg: 1, scope: !11342, file: !1584, line: 283, type: !1469)
!11347 = !DILocation(line: 0, scope: !11342)
!11348 = !DILocation(line: 285, column: 2, scope: !11342)
!11349 = !DILocation(line: 0, scope: !11350)
!11350 = distinct !DILexicalBlock(scope: !11342, file: !1584, line: 285, column: 14)
!11351 = !DILocation(line: 302, column: 1, scope: !11342)
!11352 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1584, file: !1584, line: 325, type: !11353, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11355)
!11353 = !DISubroutineType(types: !11354)
!11354 = !{!108, !1462, !1455}
!11355 = !{!11356, !11357}
!11356 = !DILocalVariable(name: "db", arg: 1, scope: !11352, file: !1584, line: 325, type: !1462)
!11357 = !DILocalVariable(name: "p", arg: 2, scope: !11352, file: !1584, line: 326, type: !1455)
!11358 = !DILocation(line: 0, scope: !11352)
!11359 = !DILocation(line: 328, column: 2, scope: !11352)
!11360 = !DILocation(line: 353, column: 1, scope: !11352)
!11361 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1584, file: !1584, line: 393, type: !11362, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11364)
!11362 = !DISubroutineType(types: !11363)
!11363 = !{!108, !1475}
!11364 = !{!11365}
!11365 = !DILocalVariable(name: "fc", arg: 1, scope: !11361, file: !1584, line: 393, type: !1475)
!11366 = !DILocation(line: 0, scope: !11361)
!11367 = !DILocation(line: 395, column: 9, scope: !11368)
!11368 = distinct !DILexicalBlock(scope: !11361, file: !1584, line: 395, column: 6)
!11369 = !DILocation(line: 400, column: 1, scope: !11361)
!11370 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !11308, file: !11308, line: 424, type: !11371, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11373)
!11371 = !DISubroutineType(types: !11372)
!11372 = !{null, !1530}
!11373 = !{!11374}
!11374 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11370, file: !11308, line: 424, type: !1530)
!11375 = !DILocation(line: 0, scope: !11370)
!11376 = !DILocation(line: 426, column: 3, scope: !11370)
!11377 = !DILocation(line: 427, column: 1, scope: !11370)
!11378 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1584, file: !1584, line: 197, type: !11379, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11381)
!11379 = !DISubroutineType(types: !11380)
!11380 = !{null, !1489, !108}
!11381 = !{!11382, !11383, !11384}
!11382 = !DILocalVariable(name: "dev", arg: 1, scope: !11378, file: !1584, line: 197, type: !1489)
!11383 = !DILocalVariable(name: "parity", arg: 2, scope: !11378, file: !1584, line: 198, type: !108)
!11384 = !DILocalVariable(name: "config", scope: !11378, file: !1584, line: 200, type: !10999)
!11385 = !DILocation(line: 0, scope: !11378)
!11386 = !DILocation(line: 200, column: 48, scope: !11378)
!11387 = !DILocation(line: 202, column: 29, scope: !11378)
!11388 = !DILocation(line: 202, column: 2, scope: !11378)
!11389 = !DILocation(line: 203, column: 1, scope: !11378)
!11390 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1584, file: !1584, line: 212, type: !11379, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11391)
!11391 = !{!11392, !11393, !11394}
!11392 = !DILocalVariable(name: "dev", arg: 1, scope: !11390, file: !1584, line: 212, type: !1489)
!11393 = !DILocalVariable(name: "stopbits", arg: 2, scope: !11390, file: !1584, line: 213, type: !108)
!11394 = !DILocalVariable(name: "config", scope: !11390, file: !1584, line: 215, type: !10999)
!11395 = !DILocation(line: 0, scope: !11390)
!11396 = !DILocation(line: 215, column: 48, scope: !11390)
!11397 = !DILocation(line: 217, column: 37, scope: !11390)
!11398 = !DILocation(line: 217, column: 2, scope: !11390)
!11399 = !DILocation(line: 218, column: 1, scope: !11390)
!11400 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1584, file: !1584, line: 227, type: !11379, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11401)
!11401 = !{!11402, !11403, !11404}
!11402 = !DILocalVariable(name: "dev", arg: 1, scope: !11400, file: !1584, line: 227, type: !1489)
!11403 = !DILocalVariable(name: "databits", arg: 2, scope: !11400, file: !1584, line: 228, type: !108)
!11404 = !DILocalVariable(name: "config", scope: !11400, file: !1584, line: 230, type: !10999)
!11405 = !DILocation(line: 0, scope: !11400)
!11406 = !DILocation(line: 230, column: 48, scope: !11400)
!11407 = !DILocation(line: 232, column: 32, scope: !11400)
!11408 = !DILocation(line: 232, column: 2, scope: !11400)
!11409 = !DILocation(line: 233, column: 1, scope: !11400)
!11410 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1584, file: !1584, line: 242, type: !11379, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11411)
!11411 = !{!11412, !11413, !11414}
!11412 = !DILocalVariable(name: "dev", arg: 1, scope: !11410, file: !1584, line: 242, type: !1489)
!11413 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !11410, file: !1584, line: 243, type: !108)
!11414 = !DILocalVariable(name: "config", scope: !11410, file: !1584, line: 245, type: !10999)
!11415 = !DILocation(line: 0, scope: !11410)
!11416 = !DILocation(line: 245, column: 48, scope: !11410)
!11417 = !DILocation(line: 247, column: 33, scope: !11410)
!11418 = !DILocation(line: 247, column: 2, scope: !11410)
!11419 = !DILocation(line: 248, column: 1, scope: !11410)
!11420 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1584, file: !1584, line: 107, type: !11379, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11421)
!11421 = !{!11422, !11423, !11424, !11425, !11426}
!11422 = !DILocalVariable(name: "dev", arg: 1, scope: !11420, file: !1584, line: 107, type: !1489)
!11423 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !11420, file: !1584, line: 107, type: !108)
!11424 = !DILocalVariable(name: "config", scope: !11420, file: !1584, line: 109, type: !10999)
!11425 = !DILocalVariable(name: "data", scope: !11420, file: !1584, line: 110, type: !11122)
!11426 = !DILocalVariable(name: "clock_rate", scope: !11420, file: !1584, line: 112, type: !108)
!11427 = !DILocation(line: 0, scope: !11420)
!11428 = !DILocation(line: 109, column: 48, scope: !11420)
!11429 = !DILocation(line: 110, column: 38, scope: !11420)
!11430 = !DILocation(line: 112, column: 2, scope: !11420)
!11431 = !DILocation(line: 123, column: 36, scope: !11432)
!11432 = distinct !DILexicalBlock(scope: !11433, file: !1584, line: 123, column: 7)
!11433 = distinct !DILexicalBlock(scope: !11434, file: !1584, line: 122, column: 9)
!11434 = distinct !DILexicalBlock(scope: !11420, file: !1584, line: 115, column: 6)
!11435 = !DILocation(line: 124, column: 42, scope: !11432)
!11436 = !DILocation(line: 123, column: 7, scope: !11432)
!11437 = !DILocation(line: 125, column: 22, scope: !11432)
!11438 = !DILocation(line: 123, column: 7, scope: !11433)
!11439 = !DILocation(line: 126, column: 4, scope: !11440)
!11440 = distinct !DILexicalBlock(scope: !11441, file: !1584, line: 126, column: 4)
!11441 = distinct !DILexicalBlock(scope: !11442, file: !1584, line: 126, column: 4)
!11442 = distinct !DILexicalBlock(scope: !11443, file: !1584, line: 126, column: 4)
!11443 = distinct !DILexicalBlock(scope: !11444, file: !1584, line: 126, column: 4)
!11444 = distinct !DILexicalBlock(scope: !11432, file: !1584, line: 125, column: 27)
!11445 = !DILocation(line: 127, column: 4, scope: !11444)
!11446 = !DILocation(line: 176, column: 36, scope: !11420)
!11447 = !DILocation(line: 176, column: 3, scope: !11420)
!11448 = !DILocation(line: 179, column: 32, scope: !11420)
!11449 = !DILocation(line: 180, column: 10, scope: !11420)
!11450 = !DILocation(line: 179, column: 3, scope: !11420)
!11451 = !DILocation(line: 195, column: 1, scope: !11420)
!11452 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !11308, file: !11308, line: 410, type: !11371, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11453)
!11453 = !{!11454}
!11454 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11452, file: !11308, line: 410, type: !1530)
!11455 = !DILocation(line: 0, scope: !11452)
!11456 = !DILocation(line: 412, column: 3, scope: !11452)
!11457 = !DILocation(line: 413, column: 1, scope: !11452)
!11458 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !938, file: !938, line: 216, type: !1563, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11459)
!11459 = !{!11460, !11461, !11462, !11463}
!11460 = !DILocalVariable(name: "dev", arg: 1, scope: !11458, file: !938, line: 216, type: !1489)
!11461 = !DILocalVariable(name: "sys", arg: 2, scope: !11458, file: !938, line: 217, type: !1030)
!11462 = !DILocalVariable(name: "rate", arg: 3, scope: !11458, file: !938, line: 218, type: !986)
!11463 = !DILocalVariable(name: "api", scope: !11458, file: !938, line: 220, type: !1541)
!11464 = !DILocation(line: 0, scope: !11458)
!11465 = !DILocation(line: 221, column: 49, scope: !11458)
!11466 = !DILocation(line: 223, column: 11, scope: !11467)
!11467 = distinct !DILexicalBlock(scope: !11458, file: !938, line: 223, column: 6)
!11468 = !DILocation(line: 223, column: 20, scope: !11467)
!11469 = !DILocation(line: 223, column: 6, scope: !11458)
!11470 = !DILocation(line: 227, column: 9, scope: !11458)
!11471 = !DILocation(line: 227, column: 2, scope: !11458)
!11472 = !DILocation(line: 228, column: 1, scope: !11458)
!11473 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3589, file: !3589, line: 175, type: !3590, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11474)
!11474 = !{!11475}
!11475 = !DILocalVariable(name: "level", arg: 1, scope: !11473, file: !3589, line: 175, type: !103)
!11476 = !DILocation(line: 0, scope: !11473)
!11477 = !DILocation(line: 177, column: 2, scope: !11473)
!11478 = !DILocation(line: 189, column: 1, scope: !11473)
!11479 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !11308, file: !11308, line: 615, type: !11480, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11482)
!11480 = !DISubroutineType(types: !11481)
!11481 = !{null, !1530, !108}
!11482 = !{!11483, !11484}
!11483 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11479, file: !11308, line: 615, type: !1530)
!11484 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !11479, file: !11308, line: 615, type: !108)
!11485 = !DILocation(line: 0, scope: !11479)
!11486 = !DILocation(line: 617, column: 3, scope: !11479)
!11487 = !DILocation(line: 618, column: 1, scope: !11479)
!11488 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !11308, file: !11308, line: 1020, type: !11489, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11491)
!11489 = !DISubroutineType(types: !11490)
!11490 = !{null, !1530, !108, !108, !108}
!11491 = !{!11492, !11493, !11494, !11495}
!11492 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11488, file: !11308, line: 1020, type: !1530)
!11493 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !11488, file: !11308, line: 1020, type: !108)
!11494 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !11488, file: !11308, line: 1020, type: !108)
!11495 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !11488, file: !11308, line: 1021, type: !108)
!11496 = !DILocation(line: 0, scope: !11488)
!11497 = !DILocation(line: 1029, column: 30, scope: !11498)
!11498 = distinct !DILexicalBlock(scope: !11499, file: !11308, line: 1028, column: 3)
!11499 = distinct !DILexicalBlock(scope: !11488, file: !11308, line: 1023, column: 7)
!11500 = !DILocation(line: 1029, column: 19, scope: !11498)
!11501 = !DILocation(line: 1029, column: 13, scope: !11498)
!11502 = !DILocation(line: 1029, column: 17, scope: !11498)
!11503 = !DILocation(line: 1031, column: 1, scope: !11488)
!11504 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !11308, file: !11308, line: 949, type: !11480, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11505)
!11505 = !{!11506, !11507}
!11506 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11504, file: !11308, line: 949, type: !1530)
!11507 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !11504, file: !11308, line: 949, type: !108)
!11508 = !DILocation(line: 0, scope: !11504)
!11509 = !DILocation(line: 951, column: 3, scope: !11504)
!11510 = !DILocation(line: 952, column: 1, scope: !11504)
!11511 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !11308, file: !11308, line: 588, type: !11480, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11512)
!11512 = !{!11513, !11514}
!11513 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11511, file: !11308, line: 588, type: !1530)
!11514 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11511, file: !11308, line: 588, type: !108)
!11515 = !DILocation(line: 0, scope: !11511)
!11516 = !DILocation(line: 590, column: 3, scope: !11511)
!11517 = !DILocation(line: 591, column: 1, scope: !11511)
!11518 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !11308, file: !11308, line: 805, type: !11480, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11519)
!11519 = !{!11520, !11521}
!11520 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11518, file: !11308, line: 805, type: !1530)
!11521 = !DILocalVariable(name: "StopBits", arg: 2, scope: !11518, file: !11308, line: 805, type: !108)
!11522 = !DILocation(line: 0, scope: !11518)
!11523 = !DILocation(line: 807, column: 3, scope: !11518)
!11524 = !DILocation(line: 808, column: 1, scope: !11518)
!11525 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !11308, file: !11308, line: 532, type: !11480, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11526)
!11526 = !{!11527, !11528}
!11527 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11525, file: !11308, line: 532, type: !1530)
!11528 = !DILocalVariable(name: "Parity", arg: 2, scope: !11525, file: !11308, line: 532, type: !108)
!11529 = !DILocation(line: 0, scope: !11525)
!11530 = !DILocation(line: 534, column: 3, scope: !11525)
!11531 = !DILocation(line: 535, column: 1, scope: !11525)
!11532 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !11308, file: !11308, line: 1770, type: !11309, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11533)
!11533 = !{!11534}
!11534 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11532, file: !11308, line: 1770, type: !1530)
!11535 = !DILocation(line: 0, scope: !11532)
!11536 = !DILocation(line: 1772, column: 11, scope: !11532)
!11537 = !DILocation(line: 1772, column: 46, scope: !11532)
!11538 = !DILocation(line: 1772, column: 3, scope: !11532)
!11539 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !11308, file: !11308, line: 1737, type: !11309, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11540)
!11540 = !{!11541}
!11541 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11539, file: !11308, line: 1737, type: !1530)
!11542 = !DILocation(line: 0, scope: !11539)
!11543 = !DILocation(line: 1739, column: 11, scope: !11539)
!11544 = !DILocation(line: 1739, column: 3, scope: !11539)
!11545 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !11308, file: !11308, line: 1748, type: !11309, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11546)
!11546 = !{!11547}
!11547 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11545, file: !11308, line: 1748, type: !1530)
!11548 = !DILocation(line: 0, scope: !11545)
!11549 = !DILocation(line: 1750, column: 11, scope: !11545)
!11550 = !DILocation(line: 1750, column: 45, scope: !11545)
!11551 = !DILocation(line: 1750, column: 3, scope: !11545)
!11552 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !11308, file: !11308, line: 1827, type: !11309, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11553)
!11553 = !{!11554}
!11554 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11552, file: !11308, line: 1827, type: !1530)
!11555 = !DILocation(line: 0, scope: !11552)
!11556 = !DILocation(line: 1829, column: 11, scope: !11552)
!11557 = !DILocation(line: 1829, column: 46, scope: !11552)
!11558 = !DILocation(line: 1829, column: 3, scope: !11552)
!11559 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !11308, file: !11308, line: 1992, type: !11371, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11560)
!11560 = !{!11561}
!11561 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11559, file: !11308, line: 1992, type: !1530)
!11562 = !DILocation(line: 0, scope: !11559)
!11563 = !DILocation(line: 1994, column: 3, scope: !11559)
!11564 = !DILocation(line: 1995, column: 1, scope: !11559)
!11565 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !11308, file: !11308, line: 1934, type: !11371, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11566)
!11566 = !{!11567, !11568}
!11567 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11565, file: !11308, line: 1934, type: !1530)
!11568 = !DILocalVariable(name: "tmpreg", scope: !11565, file: !11308, line: 1936, type: !409)
!11569 = !DILocation(line: 0, scope: !11565)
!11570 = !DILocation(line: 1936, column: 3, scope: !11565)
!11571 = !DILocation(line: 1936, column: 17, scope: !11565)
!11572 = !DILocation(line: 1937, column: 20, scope: !11565)
!11573 = !DILocation(line: 1937, column: 10, scope: !11565)
!11574 = !DILocation(line: 1938, column: 10, scope: !11565)
!11575 = !DILocation(line: 1939, column: 20, scope: !11565)
!11576 = !DILocation(line: 1939, column: 10, scope: !11565)
!11577 = !DILocation(line: 1940, column: 10, scope: !11565)
!11578 = !DILocation(line: 1941, column: 1, scope: !11565)
!11579 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !11308, file: !11308, line: 1877, type: !11371, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11580)
!11580 = !{!11581, !11582}
!11581 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11579, file: !11308, line: 1877, type: !1530)
!11582 = !DILocalVariable(name: "tmpreg", scope: !11579, file: !11308, line: 1879, type: !409)
!11583 = !DILocation(line: 0, scope: !11579)
!11584 = !DILocation(line: 1879, column: 3, scope: !11579)
!11585 = !DILocation(line: 1879, column: 17, scope: !11579)
!11586 = !DILocation(line: 1880, column: 20, scope: !11579)
!11587 = !DILocation(line: 1880, column: 10, scope: !11579)
!11588 = !DILocation(line: 1881, column: 10, scope: !11579)
!11589 = !DILocation(line: 1882, column: 20, scope: !11579)
!11590 = !DILocation(line: 1882, column: 10, scope: !11579)
!11591 = !DILocation(line: 1883, column: 10, scope: !11579)
!11592 = !DILocation(line: 1884, column: 1, scope: !11579)
!11593 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !11308, file: !11308, line: 1896, type: !11371, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11594)
!11594 = !{!11595, !11596}
!11595 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11593, file: !11308, line: 1896, type: !1530)
!11596 = !DILocalVariable(name: "tmpreg", scope: !11593, file: !11308, line: 1898, type: !409)
!11597 = !DILocation(line: 0, scope: !11593)
!11598 = !DILocation(line: 1898, column: 3, scope: !11593)
!11599 = !DILocation(line: 1898, column: 17, scope: !11593)
!11600 = !DILocation(line: 1899, column: 20, scope: !11593)
!11601 = !DILocation(line: 1899, column: 10, scope: !11593)
!11602 = !DILocation(line: 1900, column: 10, scope: !11593)
!11603 = !DILocation(line: 1901, column: 20, scope: !11593)
!11604 = !DILocation(line: 1901, column: 10, scope: !11593)
!11605 = !DILocation(line: 1902, column: 10, scope: !11593)
!11606 = !DILocation(line: 1903, column: 1, scope: !11593)
!11607 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !11308, file: !11308, line: 1915, type: !11371, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11608)
!11608 = !{!11609, !11610}
!11609 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11607, file: !11308, line: 1915, type: !1530)
!11610 = !DILocalVariable(name: "tmpreg", scope: !11607, file: !11308, line: 1917, type: !409)
!11611 = !DILocation(line: 0, scope: !11607)
!11612 = !DILocation(line: 1917, column: 3, scope: !11607)
!11613 = !DILocation(line: 1917, column: 17, scope: !11607)
!11614 = !DILocation(line: 1918, column: 20, scope: !11607)
!11615 = !DILocation(line: 1918, column: 10, scope: !11607)
!11616 = !DILocation(line: 1919, column: 10, scope: !11607)
!11617 = !DILocation(line: 1920, column: 20, scope: !11607)
!11618 = !DILocation(line: 1920, column: 10, scope: !11607)
!11619 = !DILocation(line: 1921, column: 10, scope: !11607)
!11620 = !DILocation(line: 1922, column: 1, scope: !11607)
!11621 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !11308, file: !11308, line: 1814, type: !11309, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11622)
!11622 = !{!11623}
!11623 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11621, file: !11308, line: 1814, type: !1530)
!11624 = !DILocation(line: 0, scope: !11621)
!11625 = !DILocation(line: 1816, column: 11, scope: !11621)
!11626 = !DILocation(line: 1816, column: 46, scope: !11621)
!11627 = !DILocation(line: 1816, column: 3, scope: !11621)
!11628 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !11308, file: !11308, line: 2426, type: !11629, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11631)
!11629 = !DISubroutineType(types: !11630)
!11630 = !{null, !1530, !185}
!11631 = !{!11632, !11633}
!11632 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11628, file: !11308, line: 2426, type: !1530)
!11633 = !DILocalVariable(name: "Value", arg: 2, scope: !11628, file: !11308, line: 2426, type: !185)
!11634 = !DILocation(line: 0, scope: !11628)
!11635 = !DILocation(line: 2428, column: 16, scope: !11628)
!11636 = !DILocation(line: 2428, column: 11, scope: !11628)
!11637 = !DILocation(line: 2428, column: 14, scope: !11628)
!11638 = !DILocation(line: 2429, column: 1, scope: !11628)
!11639 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !11308, file: !11308, line: 1792, type: !11309, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11640)
!11640 = !{!11641}
!11641 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11639, file: !11308, line: 1792, type: !1530)
!11642 = !DILocation(line: 0, scope: !11639)
!11643 = !DILocation(line: 1794, column: 11, scope: !11639)
!11644 = !DILocation(line: 1794, column: 47, scope: !11639)
!11645 = !DILocation(line: 1794, column: 3, scope: !11639)
!11646 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !11308, file: !11308, line: 2403, type: !11647, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11649)
!11647 = !DISubroutineType(types: !11648)
!11648 = !{!185, !1530}
!11649 = !{!11650}
!11650 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11646, file: !11308, line: 2403, type: !1530)
!11651 = !DILocation(line: 0, scope: !11646)
!11652 = !DILocation(line: 2405, column: 20, scope: !11646)
!11653 = !DILocation(line: 2405, column: 10, scope: !11646)
!11654 = !DILocation(line: 2405, column: 3, scope: !11646)
!11655 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1584, file: !1584, line: 1583, type: !1510, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11656)
!11656 = !{!11657, !11658, !11659, !11660, !11661, !11662}
!11657 = !DILocalVariable(name: "dev", arg: 1, scope: !11655, file: !1584, line: 1583, type: !1489)
!11658 = !DILocalVariable(name: "config", scope: !11655, file: !1584, line: 1585, type: !10999)
!11659 = !DILocalVariable(name: "data", scope: !11655, file: !1584, line: 1586, type: !11122)
!11660 = !DILocalVariable(name: "ll_parity", scope: !11655, file: !1584, line: 1587, type: !108)
!11661 = !DILocalVariable(name: "ll_datawidth", scope: !11655, file: !1584, line: 1588, type: !108)
!11662 = !DILocalVariable(name: "err", scope: !11655, file: !1584, line: 1589, type: !103)
!11663 = !DILocation(line: 0, scope: !11655)
!11664 = !DILocation(line: 1585, column: 48, scope: !11655)
!11665 = !DILocation(line: 1586, column: 38, scope: !11655)
!11666 = !DILocation(line: 1591, column: 2, scope: !11655)
!11667 = !DILocation(line: 1593, column: 29, scope: !11668)
!11668 = distinct !DILexicalBlock(scope: !11655, file: !1584, line: 1593, column: 6)
!11669 = !DILocation(line: 1593, column: 7, scope: !11668)
!11670 = !DILocation(line: 1593, column: 6, scope: !11655)
!11671 = !DILocation(line: 1594, column: 3, scope: !11672)
!11672 = distinct !DILexicalBlock(scope: !11673, file: !1584, line: 1594, column: 3)
!11673 = distinct !DILexicalBlock(scope: !11674, file: !1584, line: 1594, column: 3)
!11674 = distinct !DILexicalBlock(scope: !11675, file: !1584, line: 1594, column: 3)
!11675 = distinct !DILexicalBlock(scope: !11676, file: !1584, line: 1594, column: 3)
!11676 = distinct !DILexicalBlock(scope: !11668, file: !1584, line: 1593, column: 37)
!11677 = !DILocation(line: 1595, column: 3, scope: !11676)
!11678 = !DILocation(line: 1599, column: 31, scope: !11655)
!11679 = !DILocation(line: 1599, column: 71, scope: !11655)
!11680 = !DILocation(line: 1599, column: 8, scope: !11655)
!11681 = !DILocation(line: 1600, column: 10, scope: !11682)
!11682 = distinct !DILexicalBlock(scope: !11655, file: !1584, line: 1600, column: 6)
!11683 = !DILocation(line: 1600, column: 6, scope: !11655)
!11684 = !DILocation(line: 1601, column: 3, scope: !11685)
!11685 = distinct !DILexicalBlock(scope: !11686, file: !1584, line: 1601, column: 3)
!11686 = distinct !DILexicalBlock(scope: !11687, file: !1584, line: 1601, column: 3)
!11687 = distinct !DILexicalBlock(scope: !11688, file: !1584, line: 1601, column: 3)
!11688 = distinct !DILexicalBlock(scope: !11689, file: !1584, line: 1601, column: 3)
!11689 = distinct !DILexicalBlock(scope: !11682, file: !1584, line: 1600, column: 16)
!11690 = !DILocation(line: 1602, column: 3, scope: !11689)
!11691 = !DILocation(line: 1616, column: 36, scope: !11655)
!11692 = !DILocation(line: 1616, column: 8, scope: !11655)
!11693 = !DILocation(line: 1617, column: 10, scope: !11694)
!11694 = distinct !DILexicalBlock(scope: !11655, file: !1584, line: 1617, column: 6)
!11695 = !DILocation(line: 1617, column: 6, scope: !11655)
!11696 = !DILocation(line: 1621, column: 27, scope: !11655)
!11697 = !DILocation(line: 1621, column: 2, scope: !11655)
!11698 = !DILocation(line: 1624, column: 40, scope: !11655)
!11699 = !DILocation(line: 1624, column: 2, scope: !11655)
!11700 = !DILocation(line: 1630, column: 14, scope: !11701)
!11701 = distinct !DILexicalBlock(scope: !11655, file: !1584, line: 1630, column: 6)
!11702 = !DILocation(line: 1630, column: 6, scope: !11655)
!11703 = !DILocation(line: 1640, column: 4, scope: !11704)
!11704 = distinct !DILexicalBlock(scope: !11705, file: !1584, line: 1640, column: 4)
!11705 = distinct !DILexicalBlock(scope: !11706, file: !1584, line: 1640, column: 4)
!11706 = distinct !DILexicalBlock(scope: !11707, file: !1584, line: 1640, column: 4)
!11707 = distinct !DILexicalBlock(scope: !11708, file: !1584, line: 1640, column: 4)
!11708 = distinct !DILexicalBlock(scope: !11709, file: !1584, line: 1639, column: 28)
!11709 = distinct !DILexicalBlock(scope: !11710, file: !1584, line: 1639, column: 7)
!11710 = distinct !DILexicalBlock(scope: !11711, file: !1584, line: 1638, column: 9)
!11711 = distinct !DILexicalBlock(scope: !11701, file: !1584, line: 1634, column: 13)
!11712 = !DILocation(line: 0, scope: !11701)
!11713 = !DILocation(line: 1649, column: 35, scope: !11655)
!11714 = !DILocation(line: 1649, column: 2, scope: !11655)
!11715 = !DILocation(line: 1654, column: 14, scope: !11716)
!11716 = distinct !DILexicalBlock(scope: !11655, file: !1584, line: 1654, column: 6)
!11717 = !DILocation(line: 1654, column: 6, scope: !11655)
!11718 = !DILocation(line: 1655, column: 3, scope: !11719)
!11719 = distinct !DILexicalBlock(scope: !11716, file: !1584, line: 1654, column: 31)
!11720 = !DILocation(line: 1656, column: 2, scope: !11719)
!11721 = !DILocation(line: 1659, column: 37, scope: !11655)
!11722 = !DILocation(line: 1659, column: 2, scope: !11655)
!11723 = !DILocation(line: 1662, column: 14, scope: !11724)
!11724 = distinct !DILexicalBlock(scope: !11655, file: !1584, line: 1662, column: 6)
!11725 = !DILocation(line: 1662, column: 6, scope: !11655)
!11726 = !DILocation(line: 1663, column: 37, scope: !11727)
!11727 = distinct !DILexicalBlock(scope: !11724, file: !1584, line: 1662, column: 27)
!11728 = !DILocation(line: 1663, column: 3, scope: !11727)
!11729 = !DILocation(line: 1664, column: 2, scope: !11727)
!11730 = !DILocation(line: 1684, column: 26, scope: !11655)
!11731 = !DILocation(line: 1684, column: 2, scope: !11655)
!11732 = !DILocation(line: 1722, column: 2, scope: !11655)
!11733 = !DILocation(line: 1724, column: 1, scope: !11655)
!11734 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1584, file: !1584, line: 651, type: !11735, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11737)
!11735 = !DISubroutineType(types: !11736)
!11736 = !{null, !1489}
!11737 = !{!11738, !11739, !11740}
!11738 = !DILocalVariable(name: "dev", arg: 1, scope: !11734, file: !1584, line: 651, type: !1489)
!11739 = !DILocalVariable(name: "data", scope: !11734, file: !1584, line: 653, type: !11122)
!11740 = !DILocalVariable(name: "clk", scope: !11734, file: !1584, line: 654, type: !11741)
!11741 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1489)
!11742 = !DILocation(line: 0, scope: !11734)
!11743 = !DILocation(line: 653, column: 38, scope: !11734)
!11744 = !DILocation(line: 656, column: 8, scope: !11734)
!11745 = !DILocation(line: 656, column: 14, scope: !11734)
!11746 = !DILocation(line: 657, column: 1, scope: !11734)
!11747 = distinct !DISubprogram(name: "device_is_ready", scope: !10137, file: !10137, line: 47, type: !11748, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11750)
!11748 = !DISubroutineType(types: !11749)
!11749 = !{!131, !1489}
!11750 = !{!11751}
!11751 = !DILocalVariable(name: "dev", arg: 1, scope: !11747, file: !10137, line: 47, type: !1489)
!11752 = !DILocation(line: 0, scope: !11747)
!11753 = !DILocation(line: 55, column: 2, scope: !11754)
!11754 = distinct !DILexicalBlock(scope: !11747, file: !10137, line: 55, column: 2)
!11755 = !{i64 2155127266}
!11756 = !DILocation(line: 56, column: 9, scope: !11747)
!11757 = !DILocation(line: 56, column: 2, scope: !11747)
!11758 = distinct !DISubprogram(name: "clock_control_on", scope: !938, file: !938, line: 123, type: !1548, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11759)
!11759 = !{!11760, !11761, !11762}
!11760 = !DILocalVariable(name: "dev", arg: 1, scope: !11758, file: !938, line: 123, type: !1489)
!11761 = !DILocalVariable(name: "sys", arg: 2, scope: !11758, file: !938, line: 124, type: !1030)
!11762 = !DILocalVariable(name: "api", scope: !11758, file: !938, line: 126, type: !1541)
!11763 = !DILocation(line: 0, scope: !11758)
!11764 = !DILocation(line: 127, column: 49, scope: !11758)
!11765 = !DILocation(line: 129, column: 14, scope: !11758)
!11766 = !DILocation(line: 129, column: 9, scope: !11758)
!11767 = !DILocation(line: 129, column: 2, scope: !11758)
!11768 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1624, file: !1624, line: 342, type: !11769, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11771)
!11769 = !DISubroutineType(types: !11770)
!11770 = !{!103, !1621, !185}
!11771 = !{!11772, !11773, !11774, !11775}
!11772 = !DILocalVariable(name: "config", arg: 1, scope: !11768, file: !1624, line: 342, type: !1621)
!11773 = !DILocalVariable(name: "id", arg: 2, scope: !11768, file: !1624, line: 343, type: !185)
!11774 = !DILocalVariable(name: "ret", scope: !11768, file: !1624, line: 345, type: !103)
!11775 = !DILocalVariable(name: "state", scope: !11768, file: !1624, line: 346, type: !1627)
!11776 = !DILocation(line: 0, scope: !11768)
!11777 = !DILocation(line: 346, column: 2, scope: !11768)
!11778 = !DILocation(line: 348, column: 8, scope: !11768)
!11779 = !DILocation(line: 349, column: 10, scope: !11780)
!11780 = distinct !DILexicalBlock(scope: !11768, file: !1624, line: 349, column: 6)
!11781 = !DILocation(line: 349, column: 6, scope: !11768)
!11782 = !DILocation(line: 353, column: 44, scope: !11768)
!11783 = !DILocation(line: 353, column: 9, scope: !11768)
!11784 = !DILocation(line: 353, column: 2, scope: !11768)
!11785 = !DILocation(line: 354, column: 1, scope: !11768)
!11786 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !11308, file: !11308, line: 497, type: !11480, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11787)
!11787 = !{!11788, !11789, !11790}
!11788 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11786, file: !11308, line: 497, type: !1530)
!11789 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !11786, file: !11308, line: 497, type: !108)
!11790 = !DILocalVariable(name: "val", scope: !11791, file: !11308, line: 499, type: !108)
!11791 = distinct !DILexicalBlock(scope: !11786, file: !11308, line: 499, column: 3)
!11792 = !DILocation(line: 0, scope: !11786)
!11793 = !DILocation(line: 499, column: 3, scope: !11791)
!11794 = !DILocalVariable(name: "addr", arg: 1, scope: !11795, file: !7314, line: 476, type: !1580)
!11795 = distinct !DISubprogram(name: "__LDREXW", scope: !7314, file: !7314, line: 476, type: !11796, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11798)
!11796 = !DISubroutineType(types: !11797)
!11797 = !{!108, !1580}
!11798 = !{!11794, !11799}
!11799 = !DILocalVariable(name: "result", scope: !11795, file: !7314, line: 478, type: !108)
!11800 = !DILocation(line: 0, scope: !11795, inlinedAt: !11801)
!11801 = distinct !DILocation(line: 499, column: 3, scope: !11802)
!11802 = distinct !DILexicalBlock(scope: !11791, file: !11308, line: 499, column: 3)
!11803 = !DILocation(line: 480, column: 4, scope: !11795, inlinedAt: !11801)
!11804 = !{i64 3574733}
!11805 = !DILocation(line: 499, column: 3, scope: !11802)
!11806 = !DILocation(line: 0, scope: !11791)
!11807 = !DILocalVariable(name: "value", arg: 1, scope: !11808, file: !7314, line: 527, type: !108)
!11808 = distinct !DISubprogram(name: "__STREXW", scope: !7314, file: !7314, line: 527, type: !11809, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11811)
!11809 = !DISubroutineType(types: !11810)
!11810 = !{!108, !108, !1580}
!11811 = !{!11807, !11812, !11813}
!11812 = !DILocalVariable(name: "addr", arg: 2, scope: !11808, file: !7314, line: 527, type: !1580)
!11813 = !DILocalVariable(name: "result", scope: !11808, file: !7314, line: 529, type: !108)
!11814 = !DILocation(line: 0, scope: !11808, inlinedAt: !11815)
!11815 = distinct !DILocation(line: 499, column: 3, scope: !11791)
!11816 = !DILocation(line: 531, column: 4, scope: !11808, inlinedAt: !11815)
!11817 = !{i64 3576169}
!11818 = distinct !{!11818, !11793, !11793}
!11819 = !DILocation(line: 500, column: 1, scope: !11786)
!11820 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !11308, file: !11308, line: 850, type: !11489, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11821)
!11821 = !{!11822, !11823, !11824, !11825}
!11822 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11820, file: !11308, line: 850, type: !1530)
!11823 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11820, file: !11308, line: 850, type: !108)
!11824 = !DILocalVariable(name: "Parity", arg: 3, scope: !11820, file: !11308, line: 850, type: !108)
!11825 = !DILocalVariable(name: "StopBits", arg: 4, scope: !11820, file: !11308, line: 851, type: !108)
!11826 = !DILocation(line: 0, scope: !11820)
!11827 = !DILocation(line: 853, column: 3, scope: !11820)
!11828 = !DILocation(line: 854, column: 3, scope: !11820)
!11829 = !DILocation(line: 855, column: 1, scope: !11820)
!11830 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !11308, file: !11308, line: 1337, type: !11371, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11831)
!11831 = !{!11832}
!11832 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11830, file: !11308, line: 1337, type: !1530)
!11833 = !DILocation(line: 0, scope: !11830)
!11834 = !DILocation(line: 1339, column: 3, scope: !11830)
!11835 = !DILocation(line: 1340, column: 1, scope: !11830)
!11836 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1624, file: !1624, line: 316, type: !11837, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11839)
!11837 = !DISubroutineType(types: !11838)
!11838 = !{!103, !1621, !1627}
!11839 = !{!11840, !11841, !11842}
!11840 = !DILocalVariable(name: "config", arg: 1, scope: !11836, file: !1624, line: 317, type: !1621)
!11841 = !DILocalVariable(name: "state", arg: 2, scope: !11836, file: !1624, line: 318, type: !1627)
!11842 = !DILocalVariable(name: "reg", scope: !11836, file: !1624, line: 320, type: !22)
!11843 = !DILocation(line: 0, scope: !11836)
!11844 = !DILocation(line: 329, column: 39, scope: !11836)
!11845 = !DILocation(line: 329, column: 52, scope: !11836)
!11846 = !DILocation(line: 329, column: 9, scope: !11836)
!11847 = !DILocation(line: 329, column: 2, scope: !11836)
!11848 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !429, file: !429, line: 730, type: !11748, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1445, retainedNodes: !11849)
!11849 = !{!11850}
!11850 = !DILocalVariable(name: "dev", arg: 1, scope: !11848, file: !429, line: 730, type: !1489)
!11851 = !DILocation(line: 0, scope: !11848)
!11852 = !DILocation(line: 732, column: 9, scope: !11848)
!11853 = !DILocation(line: 732, column: 2, scope: !11848)
!11854 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1747, file: !1747, line: 270, type: !1753, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1669, retainedNodes: !11855)
!11855 = !{!11856}
!11856 = !DILocalVariable(name: "dev", arg: 1, scope: !11854, file: !1747, line: 270, type: !1755)
!11857 = !DILocation(line: 0, scope: !11854)
!11858 = !DILocation(line: 274, column: 2, scope: !11854)
!11859 = !DILocation(line: 275, column: 12, scope: !11854)
!11860 = !DILocation(line: 276, column: 15, scope: !11854)
!11861 = !DILocation(line: 277, column: 16, scope: !11854)
!11862 = !DILocation(line: 278, column: 15, scope: !11854)
!11863 = !DILocation(line: 279, column: 16, scope: !11854)
!11864 = !DILocation(line: 282, column: 2, scope: !11854)
!11865 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !624, file: !624, line: 1814, type: !7348, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1669, retainedNodes: !11866)
!11866 = !{!11867, !11868}
!11867 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11865, file: !624, line: 1814, type: !892)
!11868 = !DILocalVariable(name: "priority", arg: 2, scope: !11865, file: !624, line: 1814, type: !108)
!11869 = !DILocation(line: 0, scope: !11865)
!11870 = !DILocation(line: 1822, column: 46, scope: !11871)
!11871 = distinct !DILexicalBlock(scope: !11872, file: !624, line: 1821, column: 3)
!11872 = distinct !DILexicalBlock(scope: !11865, file: !624, line: 1816, column: 7)
!11873 = !DILocation(line: 1824, column: 1, scope: !11865)
!11874 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1747, file: !1747, line: 118, type: !7251, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1669, retainedNodes: !11875)
!11875 = !{!11876, !11877}
!11876 = !DILocalVariable(name: "arg", arg: 1, scope: !11874, file: !1747, line: 118, type: !102)
!11877 = !DILocalVariable(name: "dticks", scope: !11874, file: !1747, line: 121, type: !108)
!11878 = !DILocation(line: 0, scope: !11874)
!11879 = !DILocation(line: 124, column: 2, scope: !11874)
!11880 = !DILocation(line: 129, column: 17, scope: !11874)
!11881 = !DILocation(line: 129, column: 14, scope: !11874)
!11882 = !DILocation(line: 130, column: 15, scope: !11874)
!11883 = !DILocation(line: 145, column: 27, scope: !11884)
!11884 = distinct !DILexicalBlock(scope: !11885, file: !1747, line: 132, column: 16)
!11885 = distinct !DILexicalBlock(scope: !11874, file: !1747, line: 132, column: 6)
!11886 = !DILocation(line: 145, column: 25, scope: !11884)
!11887 = !DILocation(line: 145, column: 45, scope: !11884)
!11888 = !DILocation(line: 146, column: 30, scope: !11884)
!11889 = !DILocation(line: 146, column: 20, scope: !11884)
!11890 = !DILocation(line: 147, column: 3, scope: !11884)
!11891 = !DILocation(line: 151, column: 2, scope: !11874)
!11892 = !DILocation(line: 152, column: 1, scope: !11874)
!11893 = distinct !DISubprogram(name: "elapsed", scope: !1747, file: !1747, line: 85, type: !3598, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1669, retainedNodes: !11894)
!11894 = !{!11895, !11896, !11897}
!11895 = !DILocalVariable(name: "val1", scope: !11893, file: !1747, line: 87, type: !108)
!11896 = !DILocalVariable(name: "ctrl", scope: !11893, file: !1747, line: 88, type: !108)
!11897 = !DILocalVariable(name: "val2", scope: !11893, file: !1747, line: 89, type: !108)
!11898 = !DILocation(line: 87, column: 27, scope: !11893)
!11899 = !DILocation(line: 0, scope: !11893)
!11900 = !DILocation(line: 88, column: 27, scope: !11893)
!11901 = !DILocation(line: 89, column: 27, scope: !11893)
!11902 = !DILocation(line: 105, column: 12, scope: !11903)
!11903 = distinct !DILexicalBlock(scope: !11893, file: !1747, line: 105, column: 6)
!11904 = !DILocation(line: 106, column: 6, scope: !11903)
!11905 = !DILocation(line: 107, column: 16, scope: !11906)
!11906 = distinct !DILexicalBlock(scope: !11903, file: !1747, line: 106, column: 24)
!11907 = !DILocation(line: 111, column: 18, scope: !11906)
!11908 = !DILocation(line: 112, column: 2, scope: !11906)
!11909 = !DILocation(line: 114, column: 20, scope: !11893)
!11910 = !DILocation(line: 114, column: 30, scope: !11893)
!11911 = !DILocation(line: 114, column: 28, scope: !11893)
!11912 = !DILocation(line: 114, column: 2, scope: !11893)
!11913 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1747, file: !1747, line: 154, type: !11914, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1669, retainedNodes: !11916)
!11914 = !DISubroutineType(types: !11915)
!11915 = !{null, !331, !131}
!11916 = !{!11917, !11918, !11919, !11920, !11921, !11922, !11923, !11928, !11929}
!11917 = !DILocalVariable(name: "ticks", arg: 1, scope: !11913, file: !1747, line: 154, type: !331)
!11918 = !DILocalVariable(name: "idle", arg: 2, scope: !11913, file: !1747, line: 154, type: !131)
!11919 = !DILocalVariable(name: "delay", scope: !11913, file: !1747, line: 169, type: !108)
!11920 = !DILocalVariable(name: "val1", scope: !11913, file: !1747, line: 170, type: !108)
!11921 = !DILocalVariable(name: "val2", scope: !11913, file: !1747, line: 170, type: !108)
!11922 = !DILocalVariable(name: "last_load_", scope: !11913, file: !1747, line: 171, type: !108)
!11923 = !DILocalVariable(name: "key", scope: !11913, file: !1747, line: 176, type: !11924)
!11924 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !250, line: 106, baseType: !11925)
!11925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !250, line: 32, size: 32, elements: !11926)
!11926 = !{!11927}
!11927 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !11925, file: !250, line: 33, baseType: !103, size: 32)
!11928 = !DILocalVariable(name: "pending", scope: !11913, file: !1747, line: 178, type: !108)
!11929 = !DILocalVariable(name: "unannounced", scope: !11913, file: !1747, line: 185, type: !108)
!11930 = !DILocation(line: 0, scope: !11913)
!11931 = !DILocation(line: 162, column: 49, scope: !11932)
!11932 = distinct !DILexicalBlock(scope: !11913, file: !1747, line: 162, column: 6)
!11933 = !DILocation(line: 163, column: 17, scope: !11934)
!11934 = distinct !DILexicalBlock(scope: !11932, file: !1747, line: 162, column: 78)
!11935 = !DILocation(line: 164, column: 13, scope: !11934)
!11936 = !DILocation(line: 165, column: 3, scope: !11934)
!11937 = !DILocation(line: 171, column: 24, scope: !11913)
!11938 = !DILocation(line: 173, column: 10, scope: !11913)
!11939 = !DILocation(line: 174, column: 10, scope: !11913)
!11940 = !DILocalVariable(name: "l", arg: 1, scope: !11941, file: !250, line: 136, type: !11944)
!11941 = distinct !DISubprogram(name: "k_spin_lock", scope: !250, file: !250, line: 136, type: !11942, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1669, retainedNodes: !11945)
!11942 = !DISubroutineType(types: !11943)
!11943 = !{!11924, !11944}
!11944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1773, size: 32)
!11945 = !{!11940, !11946}
!11946 = !DILocalVariable(name: "k", scope: !11941, file: !250, line: 139, type: !11924)
!11947 = !DILocation(line: 0, scope: !11941, inlinedAt: !11948)
!11948 = distinct !DILocation(line: 176, column: 25, scope: !11913)
!11949 = !DILocation(line: 55, column: 2, scope: !11950, inlinedAt: !11954)
!11950 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6996, file: !6996, line: 42, type: !6997, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1669, retainedNodes: !11951)
!11951 = !{!11952, !11953}
!11952 = !DILocalVariable(name: "key", scope: !11950, file: !6996, line: 44, type: !32)
!11953 = !DILocalVariable(name: "tmp", scope: !11950, file: !6996, line: 53, type: !32)
!11954 = distinct !DILocation(line: 145, column: 10, scope: !11941, inlinedAt: !11948)
!11955 = !{i64 2197185}
!11956 = !DILocation(line: 0, scope: !11950, inlinedAt: !11954)
!11957 = !DILocation(line: 178, column: 21, scope: !11913)
!11958 = !DILocation(line: 180, column: 18, scope: !11913)
!11959 = !DILocation(line: 182, column: 14, scope: !11913)
!11960 = !DILocation(line: 183, column: 15, scope: !11913)
!11961 = !DILocation(line: 185, column: 39, scope: !11913)
!11962 = !DILocation(line: 185, column: 37, scope: !11913)
!11963 = !DILocation(line: 187, column: 27, scope: !11964)
!11964 = distinct !DILexicalBlock(scope: !11913, file: !1747, line: 187, column: 6)
!11965 = !DILocation(line: 187, column: 6, scope: !11913)
!11966 = !DILocation(line: 202, column: 27, scope: !11967)
!11967 = distinct !DILexicalBlock(scope: !11964, file: !1747, line: 195, column: 9)
!11968 = !DILocation(line: 202, column: 48, scope: !11967)
!11969 = !DILocation(line: 203, column: 9, scope: !11967)
!11970 = !DILocation(line: 204, column: 11, scope: !11967)
!11971 = !DILocation(line: 205, column: 13, scope: !11972)
!11972 = distinct !DILexicalBlock(scope: !11967, file: !1747, line: 205, column: 7)
!11973 = !DILocation(line: 205, column: 7, scope: !11967)
!11974 = !DILocation(line: 0, scope: !11964)
!11975 = !DILocation(line: 212, column: 18, scope: !11913)
!11976 = !DILocation(line: 214, column: 28, scope: !11913)
!11977 = !DILocation(line: 214, column: 16, scope: !11913)
!11978 = !DILocation(line: 215, column: 15, scope: !11913)
!11979 = !DILocation(line: 227, column: 11, scope: !11980)
!11980 = distinct !DILexicalBlock(scope: !11913, file: !1747, line: 227, column: 6)
!11981 = !DILocation(line: 227, column: 6, scope: !11913)
!11982 = !DILocation(line: 228, column: 15, scope: !11983)
!11983 = distinct !DILexicalBlock(scope: !11980, file: !1747, line: 227, column: 19)
!11984 = !DILocation(line: 228, column: 38, scope: !11983)
!11985 = !DILocation(line: 228, column: 24, scope: !11983)
!11986 = !DILocation(line: 229, column: 2, scope: !11983)
!11987 = !DILocation(line: 230, column: 24, scope: !11988)
!11988 = distinct !DILexicalBlock(scope: !11980, file: !1747, line: 229, column: 9)
!11989 = !DILocation(line: 230, column: 15, scope: !11988)
!11990 = !DILocation(line: 0, scope: !11980)
!11991 = !DILocalVariable(name: "key", arg: 2, scope: !11992, file: !250, line: 190, type: !11924)
!11992 = distinct !DISubprogram(name: "k_spin_unlock", scope: !250, file: !250, line: 189, type: !11993, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1669, retainedNodes: !11995)
!11993 = !DISubroutineType(types: !11994)
!11994 = !{null, !11944, !11924}
!11995 = !{!11996, !11991}
!11996 = !DILocalVariable(name: "l", arg: 1, scope: !11992, file: !250, line: 189, type: !11944)
!11997 = !DILocation(line: 0, scope: !11992, inlinedAt: !11998)
!11998 = distinct !DILocation(line: 232, column: 2, scope: !11913)
!11999 = !DILocalVariable(name: "key", arg: 1, scope: !12000, file: !6996, line: 84, type: !32)
!12000 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6996, file: !6996, line: 84, type: !7007, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1669, retainedNodes: !12001)
!12001 = !{!11999}
!12002 = !DILocation(line: 0, scope: !12000, inlinedAt: !12003)
!12003 = distinct !DILocation(line: 215, column: 2, scope: !11992, inlinedAt: !11998)
!12004 = !DILocation(line: 95, column: 2, scope: !12000, inlinedAt: !12003)
!12005 = !{i64 2198002}
!12006 = !DILocation(line: 234, column: 1, scope: !11913)
!12007 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1747, file: !1747, line: 236, type: !3598, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1669, retainedNodes: !12008)
!12008 = !{!12009, !12010}
!12009 = !DILocalVariable(name: "key", scope: !12007, file: !1747, line: 242, type: !11924)
!12010 = !DILocalVariable(name: "cyc", scope: !12007, file: !1747, line: 243, type: !108)
!12011 = !DILocation(line: 0, scope: !11941, inlinedAt: !12012)
!12012 = distinct !DILocation(line: 242, column: 25, scope: !12007)
!12013 = !DILocation(line: 55, column: 2, scope: !11950, inlinedAt: !12014)
!12014 = distinct !DILocation(line: 145, column: 10, scope: !11941, inlinedAt: !12012)
!12015 = !DILocation(line: 0, scope: !11950, inlinedAt: !12014)
!12016 = !DILocation(line: 0, scope: !12007)
!12017 = !DILocation(line: 243, column: 17, scope: !12007)
!12018 = !DILocation(line: 243, column: 29, scope: !12007)
!12019 = !DILocation(line: 243, column: 27, scope: !12007)
!12020 = !DILocation(line: 243, column: 43, scope: !12007)
!12021 = !DILocation(line: 243, column: 41, scope: !12007)
!12022 = !DILocation(line: 0, scope: !11992, inlinedAt: !12023)
!12023 = distinct !DILocation(line: 245, column: 2, scope: !12007)
!12024 = !DILocation(line: 0, scope: !12000, inlinedAt: !12025)
!12025 = distinct !DILocation(line: 215, column: 2, scope: !11992, inlinedAt: !12023)
!12026 = !DILocation(line: 95, column: 2, scope: !12000, inlinedAt: !12025)
!12027 = !DILocation(line: 246, column: 13, scope: !12007)
!12028 = !DILocation(line: 246, column: 2, scope: !12007)
!12029 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1747, file: !1747, line: 249, type: !3598, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1669, retainedNodes: !12030)
!12030 = !{!12031, !12032}
!12031 = !DILocalVariable(name: "key", scope: !12029, file: !1747, line: 251, type: !11924)
!12032 = !DILocalVariable(name: "ret", scope: !12029, file: !1747, line: 252, type: !108)
!12033 = !DILocation(line: 0, scope: !11941, inlinedAt: !12034)
!12034 = distinct !DILocation(line: 251, column: 25, scope: !12029)
!12035 = !DILocation(line: 55, column: 2, scope: !11950, inlinedAt: !12036)
!12036 = distinct !DILocation(line: 145, column: 10, scope: !11941, inlinedAt: !12034)
!12037 = !DILocation(line: 0, scope: !11950, inlinedAt: !12036)
!12038 = !DILocation(line: 0, scope: !12029)
!12039 = !DILocation(line: 252, column: 17, scope: !12029)
!12040 = !DILocation(line: 252, column: 29, scope: !12029)
!12041 = !DILocation(line: 252, column: 27, scope: !12029)
!12042 = !DILocation(line: 0, scope: !11992, inlinedAt: !12043)
!12043 = distinct !DILocation(line: 254, column: 2, scope: !12029)
!12044 = !DILocation(line: 0, scope: !12000, inlinedAt: !12045)
!12045 = distinct !DILocation(line: 215, column: 2, scope: !11992, inlinedAt: !12043)
!12046 = !DILocation(line: 95, column: 2, scope: !12000, inlinedAt: !12045)
!12047 = !DILocation(line: 255, column: 2, scope: !12029)
!12048 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1747, file: !1747, line: 258, type: !334, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1669, retainedNodes: !251)
!12049 = !DILocation(line: 260, column: 6, scope: !12050)
!12050 = distinct !DILexicalBlock(scope: !12048, file: !1747, line: 260, column: 6)
!12051 = !DILocation(line: 260, column: 16, scope: !12050)
!12052 = !DILocation(line: 260, column: 6, scope: !12048)
!12053 = !DILocation(line: 261, column: 17, scope: !12054)
!12054 = distinct !DILexicalBlock(scope: !12050, file: !1747, line: 260, column: 34)
!12055 = !DILocation(line: 262, column: 2, scope: !12054)
!12056 = !DILocation(line: 263, column: 1, scope: !12048)
!12057 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1747, file: !1747, line: 265, type: !334, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1669, retainedNodes: !251)
!12058 = !DILocation(line: 267, column: 16, scope: !12057)
!12059 = !DILocation(line: 268, column: 1, scope: !12057)
!12060 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !12061, file: !12061, line: 9, type: !12062, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3067, retainedNodes: !12085)
!12061 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12062 = !DISubroutineType(types: !12063)
!12063 = !{!103, !12064, !185, !12084}
!12064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12065, size: 32)
!12065 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12066)
!12066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1624, line: 60, size: 64, elements: !12067)
!12067 = !{!12068, !12083}
!12068 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !12066, file: !1624, line: 69, baseType: !12069, size: 32)
!12069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12070, size: 32)
!12070 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12071)
!12071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1624, line: 50, size: 64, elements: !12072)
!12072 = !{!12073, !12081, !12082}
!12073 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !12071, file: !1624, line: 52, baseType: !12074, size: 32)
!12074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12075, size: 32)
!12075 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12076)
!12076 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1635, line: 37, baseType: !12077)
!12077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1635, line: 32, size: 64, elements: !12078)
!12078 = !{!12079, !12080}
!12079 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !12077, file: !1635, line: 34, baseType: !108, size: 32)
!12080 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !12077, file: !1635, line: 36, baseType: !108, size: 32, offset: 32)
!12081 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !12071, file: !1624, line: 54, baseType: !185, size: 8, offset: 32)
!12082 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !12071, file: !1624, line: 56, baseType: !185, size: 8, offset: 40)
!12083 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !12066, file: !1624, line: 71, baseType: !185, size: 8, offset: 32)
!12084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12069, size: 32)
!12085 = !{!12086, !12087, !12088}
!12086 = !DILocalVariable(name: "config", arg: 1, scope: !12060, file: !12061, line: 9, type: !12064)
!12087 = !DILocalVariable(name: "id", arg: 2, scope: !12060, file: !12061, line: 9, type: !185)
!12088 = !DILocalVariable(name: "state", arg: 3, scope: !12060, file: !12061, line: 10, type: !12084)
!12089 = !DILocation(line: 0, scope: !12060)
!12090 = !DILocation(line: 12, column: 20, scope: !12060)
!12091 = !DILocation(line: 13, column: 27, scope: !12060)
!12092 = !DILocation(line: 13, column: 42, scope: !12060)
!12093 = !DILocation(line: 13, column: 19, scope: !12060)
!12094 = !DILocation(line: 13, column: 16, scope: !12060)
!12095 = !DILocation(line: 13, column: 2, scope: !12060)
!12096 = distinct !{!12096, !12095, !12097}
!12097 = !DILocation(line: 19, column: 2, scope: !12060)
!12098 = !DILocation(line: 14, column: 23, scope: !12099)
!12099 = distinct !DILexicalBlock(scope: !12100, file: !12061, line: 14, column: 7)
!12100 = distinct !DILexicalBlock(scope: !12060, file: !12061, line: 13, column: 54)
!12101 = !DILocation(line: 14, column: 10, scope: !12099)
!12102 = !DILocation(line: 18, column: 11, scope: !12100)
!12103 = !DILocation(line: 14, column: 7, scope: !12100)
!12104 = !DILocation(line: 22, column: 1, scope: !12060)
!12105 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1864, file: !1864, line: 193, type: !12106, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1782, retainedNodes: !12115)
!12106 = !DISubroutineType(types: !12107)
!12107 = !{!103, !12108, !185, !22}
!12108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12109, size: 32)
!12109 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12110)
!12110 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1635, line: 37, baseType: !12111)
!12111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1635, line: 32, size: 64, elements: !12112)
!12112 = !{!12113, !12114}
!12113 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !12111, file: !1635, line: 34, baseType: !108, size: 32)
!12114 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !12111, file: !1635, line: 36, baseType: !108, size: 32, offset: 32)
!12115 = !{!12116, !12117, !12118, !12119, !12120, !12121, !12122, !12123, !12125}
!12116 = !DILocalVariable(name: "pins", arg: 1, scope: !12105, file: !1864, line: 193, type: !12108)
!12117 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !12105, file: !1864, line: 193, type: !185)
!12118 = !DILocalVariable(name: "reg", arg: 3, scope: !12105, file: !1864, line: 194, type: !22)
!12119 = !DILocalVariable(name: "pin", scope: !12105, file: !1864, line: 196, type: !108)
!12120 = !DILocalVariable(name: "mux", scope: !12105, file: !1864, line: 196, type: !108)
!12121 = !DILocalVariable(name: "pin_cgf", scope: !12105, file: !1864, line: 197, type: !108)
!12122 = !DILocalVariable(name: "ret", scope: !12105, file: !1864, line: 198, type: !103)
!12123 = !DILocalVariable(name: "i", scope: !12124, file: !1864, line: 209, type: !185)
!12124 = distinct !DILexicalBlock(scope: !12105, file: !1864, line: 209, column: 2)
!12125 = !DILocalVariable(name: "gpio_out", scope: !12126, file: !1864, line: 239, type: !108)
!12126 = distinct !DILexicalBlock(scope: !12127, file: !1864, line: 238, column: 55)
!12127 = distinct !DILexicalBlock(scope: !12128, file: !1864, line: 238, column: 14)
!12128 = distinct !DILexicalBlock(scope: !12129, file: !1864, line: 236, column: 14)
!12129 = distinct !DILexicalBlock(scope: !12130, file: !1864, line: 234, column: 7)
!12130 = distinct !DILexicalBlock(scope: !12131, file: !1864, line: 209, column: 41)
!12131 = distinct !DILexicalBlock(scope: !12124, file: !1864, line: 209, column: 2)
!12132 = !DILocation(line: 0, scope: !12105)
!12133 = !DILocation(line: 0, scope: !12124)
!12134 = !DILocation(line: 209, column: 25, scope: !12131)
!12135 = !DILocation(line: 209, column: 2, scope: !12124)
!12136 = distinct !{!12136, !12135, !12137}
!12137 = !DILocation(line: 259, column: 2, scope: !12124)
!12138 = !DILocation(line: 210, column: 17, scope: !12130)
!12139 = !DILocation(line: 234, column: 7, scope: !12129)
!12140 = !DILocation(line: 234, column: 33, scope: !12129)
!12141 = !DILocation(line: 234, column: 7, scope: !12130)
!12142 = !DILocation(line: 235, column: 22, scope: !12143)
!12143 = distinct !DILexicalBlock(scope: !12129, file: !1864, line: 234, column: 49)
!12144 = !DILocation(line: 235, column: 29, scope: !12143)
!12145 = !DILocation(line: 236, column: 3, scope: !12143)
!12146 = !DILocation(line: 236, column: 14, scope: !12129)
!12147 = !DILocation(line: 239, column: 32, scope: !12126)
!12148 = !DILocation(line: 0, scope: !12126)
!12149 = !DILocation(line: 241, column: 8, scope: !12126)
!12150 = !DILocation(line: 246, column: 3, scope: !12126)
!12151 = !DILocation(line: 252, column: 9, scope: !12130)
!12152 = !DILocation(line: 255, column: 9, scope: !12130)
!12153 = !DILocation(line: 256, column: 11, scope: !12154)
!12154 = distinct !DILexicalBlock(scope: !12130, file: !1864, line: 256, column: 7)
!12155 = !DILocation(line: 209, column: 37, scope: !12131)
!12156 = !DILocation(line: 256, column: 7, scope: !12130)
!12157 = !DILocation(line: 262, column: 1, scope: !12105)
!12158 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1864, file: !1864, line: 176, type: !12159, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1782, retainedNodes: !12161)
!12159 = !DISubroutineType(types: !12160)
!12160 = !{!103, !108, !108, !108}
!12161 = !{!12162, !12163, !12164, !12165}
!12162 = !DILocalVariable(name: "pin", arg: 1, scope: !12158, file: !1864, line: 176, type: !108)
!12163 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !12158, file: !1864, line: 176, type: !108)
!12164 = !DILocalVariable(name: "pin_func", arg: 3, scope: !12158, file: !1864, line: 176, type: !108)
!12165 = !DILocalVariable(name: "port_device", scope: !12158, file: !1864, line: 178, type: !1794)
!12166 = !DILocation(line: 0, scope: !12158)
!12167 = !DILocation(line: 180, column: 22, scope: !12168)
!12168 = distinct !DILexicalBlock(scope: !12158, file: !1864, line: 180, column: 6)
!12169 = !DILocation(line: 180, column: 6, scope: !12158)
!12170 = !DILocation(line: 180, column: 6, scope: !12168)
!12171 = !DILocation(line: 184, column: 16, scope: !12158)
!12172 = !DILocation(line: 186, column: 19, scope: !12173)
!12173 = distinct !DILexicalBlock(scope: !12158, file: !1864, line: 186, column: 6)
!12174 = !DILocation(line: 186, column: 28, scope: !12173)
!12175 = !DILocation(line: 186, column: 33, scope: !12173)
!12176 = !DILocation(line: 186, column: 6, scope: !12158)
!12177 = !DILocation(line: 190, column: 43, scope: !12158)
!12178 = !DILocation(line: 190, column: 9, scope: !12158)
!12179 = !DILocation(line: 190, column: 2, scope: !12158)
!12180 = !DILocation(line: 191, column: 1, scope: !12158)
!12181 = distinct !DISubprogram(name: "device_is_ready", scope: !10137, file: !10137, line: 47, type: !12182, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1782, retainedNodes: !12184)
!12182 = !DISubroutineType(types: !12183)
!12183 = !{!131, !1794}
!12184 = !{!12185}
!12185 = !DILocalVariable(name: "dev", arg: 1, scope: !12181, file: !10137, line: 47, type: !1794)
!12186 = !DILocation(line: 0, scope: !12181)
!12187 = !DILocation(line: 55, column: 2, scope: !12188)
!12188 = distinct !DILexicalBlock(scope: !12181, file: !10137, line: 55, column: 2)
!12189 = !{i64 2149431191}
!12190 = !DILocation(line: 56, column: 9, scope: !12181)
!12191 = !DILocation(line: 56, column: 2, scope: !12181)
!12192 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !429, file: !429, line: 730, type: !12182, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1782, retainedNodes: !12193)
!12193 = !{!12194}
!12194 = !DILocalVariable(name: "dev", arg: 1, scope: !12192, file: !429, line: 730, type: !1794)
!12195 = !DILocation(line: 0, scope: !12192)
!12196 = !DILocation(line: 732, column: 9, scope: !12192)
!12197 = !DILocation(line: 732, column: 2, scope: !12192)
!12198 = distinct !DISubprogram(name: "SystemInit", scope: !1912, file: !1912, line: 167, type: !334, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1872, retainedNodes: !251)
!12199 = !DILocation(line: 182, column: 1, scope: !12198)
!12200 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1912, file: !1912, line: 220, type: !334, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1872, retainedNodes: !12201)
!12201 = !{!12202, !12203, !12204, !12205, !12206}
!12202 = !DILocalVariable(name: "tmp", scope: !12200, file: !1912, line: 222, type: !108)
!12203 = !DILocalVariable(name: "pllvco", scope: !12200, file: !1912, line: 222, type: !108)
!12204 = !DILocalVariable(name: "pllp", scope: !12200, file: !1912, line: 222, type: !108)
!12205 = !DILocalVariable(name: "pllsource", scope: !12200, file: !1912, line: 222, type: !108)
!12206 = !DILocalVariable(name: "pllm", scope: !12200, file: !1912, line: 222, type: !108)
!12207 = !DILocation(line: 0, scope: !12200)
!12208 = !DILocation(line: 225, column: 14, scope: !12200)
!12209 = !DILocation(line: 225, column: 19, scope: !12200)
!12210 = !DILocation(line: 227, column: 3, scope: !12200)
!12211 = !DILocation(line: 234, column: 7, scope: !12212)
!12212 = distinct !DILexicalBlock(scope: !12200, file: !1912, line: 228, column: 3)
!12213 = !DILocation(line: 240, column: 25, scope: !12212)
!12214 = !DILocation(line: 241, column: 19, scope: !12212)
!12215 = !DILocation(line: 241, column: 27, scope: !12212)
!12216 = !DILocation(line: 243, column: 21, scope: !12217)
!12217 = distinct !DILexicalBlock(scope: !12212, file: !1912, line: 243, column: 11)
!12218 = !DILocation(line: 0, scope: !12217)
!12219 = !DILocation(line: 254, column: 22, scope: !12212)
!12220 = !DILocation(line: 254, column: 62, scope: !12212)
!12221 = !DILocation(line: 255, column: 31, scope: !12212)
!12222 = !DILocation(line: 256, column: 7, scope: !12212)
!12223 = !DILocation(line: 0, scope: !12212)
!12224 = !DILocation(line: 263, column: 30, scope: !12200)
!12225 = !DILocation(line: 263, column: 52, scope: !12200)
!12226 = !DILocation(line: 263, column: 9, scope: !12200)
!12227 = !DILocation(line: 265, column: 19, scope: !12200)
!12228 = !DILocation(line: 266, column: 1, scope: !12200)
!12229 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !12230, file: !12230, line: 200, type: !12231, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3069, retainedNodes: !251)
!12230 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12231 = !DISubroutineType(types: !12232)
!12232 = !{!12233}
!12233 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !3073, line: 44, baseType: !3072)
!12234 = !DILocation(line: 202, column: 3, scope: !12229)
!12235 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !12230, file: !12230, line: 219, type: !12236, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3069, retainedNodes: !12260)
!12236 = !DISubroutineType(types: !12237)
!12237 = !{!12233, !12238}
!12238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12239, size: 32)
!12239 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !12240, line: 70, baseType: !12241)
!12240 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12241 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12240, line: 49, size: 384, elements: !12242)
!12242 = !{!12243, !12244, !12245, !12246, !12247, !12248, !12249}
!12243 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !12241, file: !12240, line: 51, baseType: !108, size: 32)
!12244 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !12241, file: !12240, line: 54, baseType: !108, size: 32, offset: 32)
!12245 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !12241, file: !12240, line: 57, baseType: !108, size: 32, offset: 64)
!12246 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !12241, file: !12240, line: 60, baseType: !108, size: 32, offset: 96)
!12247 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !12241, file: !12240, line: 63, baseType: !108, size: 32, offset: 128)
!12248 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !12241, file: !12240, line: 66, baseType: !108, size: 32, offset: 160)
!12249 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !12241, file: !12240, line: 69, baseType: !12250, size: 192, offset: 192)
!12250 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !12251, line: 73, baseType: !12252)
!12251 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12252 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12251, line: 45, size: 192, elements: !12253)
!12253 = !{!12254, !12255, !12256, !12257, !12258, !12259}
!12254 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !12252, file: !12251, line: 47, baseType: !108, size: 32)
!12255 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !12252, file: !12251, line: 50, baseType: !108, size: 32, offset: 32)
!12256 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !12252, file: !12251, line: 53, baseType: !108, size: 32, offset: 64)
!12257 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !12252, file: !12251, line: 56, baseType: !108, size: 32, offset: 96)
!12258 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !12252, file: !12251, line: 60, baseType: !108, size: 32, offset: 128)
!12259 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !12252, file: !12251, line: 63, baseType: !108, size: 32, offset: 160)
!12260 = !{!12261, !12262, !12263, !12264, !12268}
!12261 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12235, file: !12230, line: 219, type: !12238)
!12262 = !DILocalVariable(name: "tickstart", scope: !12235, file: !12230, line: 221, type: !108)
!12263 = !DILocalVariable(name: "pll_config", scope: !12235, file: !12230, line: 221, type: !108)
!12264 = !DILocalVariable(name: "pwrclkchanged", scope: !12265, file: !12230, line: 391, type: !12267)
!12265 = distinct !DILexicalBlock(scope: !12266, file: !12230, line: 390, column: 3)
!12266 = distinct !DILexicalBlock(scope: !12235, file: !12230, line: 389, column: 6)
!12267 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !933, line: 188, baseType: !3079)
!12268 = !DILocalVariable(name: "tmpreg", scope: !12269, file: !12230, line: 400, type: !409)
!12269 = distinct !DILexicalBlock(scope: !12270, file: !12230, line: 400, column: 7)
!12270 = distinct !DILexicalBlock(scope: !12271, file: !12230, line: 399, column: 5)
!12271 = distinct !DILexicalBlock(scope: !12265, file: !12230, line: 398, column: 8)
!12272 = !DILocation(line: 0, scope: !12235)
!12273 = !DILocation(line: 224, column: 24, scope: !12274)
!12274 = distinct !DILexicalBlock(scope: !12235, file: !12230, line: 224, column: 6)
!12275 = !DILocation(line: 224, column: 6, scope: !12235)
!12276 = !DILocation(line: 232, column: 27, scope: !12277)
!12277 = distinct !DILexicalBlock(scope: !12235, file: !12230, line: 232, column: 6)
!12278 = !DILocation(line: 232, column: 43, scope: !12277)
!12279 = !DILocation(line: 232, column: 69, scope: !12277)
!12280 = !DILocation(line: 232, column: 6, scope: !12235)
!12281 = !DILocation(line: 237, column: 9, scope: !12282)
!12282 = distinct !DILexicalBlock(scope: !12283, file: !12230, line: 237, column: 8)
!12283 = distinct !DILexicalBlock(scope: !12277, file: !12230, line: 233, column: 3)
!12284 = !DILocation(line: 237, column: 39, scope: !12282)
!12285 = !DILocation(line: 237, column: 60, scope: !12282)
!12286 = !DILocation(line: 238, column: 9, scope: !12282)
!12287 = !DILocation(line: 238, column: 39, scope: !12282)
!12288 = !DILocation(line: 238, column: 60, scope: !12282)
!12289 = !DILocation(line: 238, column: 70, scope: !12282)
!12290 = !DILocation(line: 238, column: 78, scope: !12282)
!12291 = !DILocation(line: 238, column: 100, scope: !12282)
!12292 = !DILocation(line: 237, column: 8, scope: !12283)
!12293 = !DILocation(line: 240, column: 11, scope: !12294)
!12294 = distinct !DILexicalBlock(scope: !12295, file: !12230, line: 240, column: 10)
!12295 = distinct !DILexicalBlock(scope: !12282, file: !12230, line: 239, column: 5)
!12296 = !DILocation(line: 240, column: 57, scope: !12294)
!12297 = !DILocation(line: 240, column: 80, scope: !12294)
!12298 = !DILocation(line: 240, column: 89, scope: !12294)
!12299 = !DILocation(line: 240, column: 10, scope: !12295)
!12300 = !DILocation(line: 248, column: 7, scope: !12301)
!12301 = distinct !DILexicalBlock(scope: !12302, file: !12230, line: 248, column: 7)
!12302 = distinct !DILexicalBlock(scope: !12303, file: !12230, line: 248, column: 7)
!12303 = distinct !DILexicalBlock(scope: !12282, file: !12230, line: 246, column: 5)
!12304 = !DILocation(line: 248, column: 7, scope: !12302)
!12305 = !DILocation(line: 248, column: 7, scope: !12306)
!12306 = distinct !DILexicalBlock(scope: !12301, file: !12230, line: 248, column: 7)
!12307 = !DILocation(line: 248, column: 7, scope: !12308)
!12308 = distinct !DILexicalBlock(scope: !12309, file: !12230, line: 248, column: 7)
!12309 = distinct !DILexicalBlock(scope: !12301, file: !12230, line: 248, column: 7)
!12310 = !DILocation(line: 248, column: 7, scope: !12311)
!12311 = distinct !DILexicalBlock(scope: !12309, file: !12230, line: 248, column: 7)
!12312 = !DILocation(line: 0, scope: !12301)
!12313 = !DILocation(line: 251, column: 30, scope: !12314)
!12314 = distinct !DILexicalBlock(scope: !12303, file: !12230, line: 251, column: 10)
!12315 = !DILocation(line: 251, column: 40, scope: !12314)
!12316 = !DILocation(line: 0, scope: !12314)
!12317 = !DILocation(line: 251, column: 10, scope: !12303)
!12318 = !DILocation(line: 257, column: 15, scope: !12319)
!12319 = distinct !DILexicalBlock(scope: !12314, file: !12230, line: 252, column: 7)
!12320 = !DILocation(line: 257, column: 51, scope: !12319)
!12321 = !DILocation(line: 257, column: 9, scope: !12319)
!12322 = !DILocation(line: 259, column: 15, scope: !12323)
!12323 = distinct !DILexicalBlock(scope: !12324, file: !12230, line: 259, column: 14)
!12324 = distinct !DILexicalBlock(scope: !12319, file: !12230, line: 258, column: 9)
!12325 = !DILocation(line: 259, column: 29, scope: !12323)
!12326 = !DILocation(line: 259, column: 43, scope: !12323)
!12327 = !DILocation(line: 259, column: 14, scope: !12324)
!12328 = distinct !{!12328, !12321, !12329}
!12329 = !DILocation(line: 263, column: 9, scope: !12319)
!12330 = !DILocation(line: 271, column: 15, scope: !12331)
!12331 = distinct !DILexicalBlock(scope: !12314, file: !12230, line: 266, column: 7)
!12332 = !DILocation(line: 271, column: 9, scope: !12331)
!12333 = !DILocation(line: 273, column: 15, scope: !12334)
!12334 = distinct !DILexicalBlock(scope: !12335, file: !12230, line: 273, column: 14)
!12335 = distinct !DILexicalBlock(scope: !12331, file: !12230, line: 272, column: 9)
!12336 = !DILocation(line: 273, column: 29, scope: !12334)
!12337 = !DILocation(line: 273, column: 43, scope: !12334)
!12338 = !DILocation(line: 273, column: 14, scope: !12335)
!12339 = distinct !{!12339, !12332, !12340}
!12340 = !DILocation(line: 277, column: 9, scope: !12331)
!12341 = !DILocation(line: 282, column: 27, scope: !12342)
!12342 = distinct !DILexicalBlock(scope: !12235, file: !12230, line: 282, column: 6)
!12343 = !DILocation(line: 282, column: 43, scope: !12342)
!12344 = !DILocation(line: 282, column: 69, scope: !12342)
!12345 = !DILocation(line: 282, column: 6, scope: !12235)
!12346 = !DILocation(line: 289, column: 9, scope: !12347)
!12347 = distinct !DILexicalBlock(scope: !12348, file: !12230, line: 289, column: 8)
!12348 = distinct !DILexicalBlock(scope: !12342, file: !12230, line: 283, column: 3)
!12349 = !DILocation(line: 289, column: 39, scope: !12347)
!12350 = !DILocation(line: 289, column: 60, scope: !12347)
!12351 = !DILocation(line: 290, column: 9, scope: !12347)
!12352 = !DILocation(line: 290, column: 39, scope: !12347)
!12353 = !DILocation(line: 290, column: 60, scope: !12347)
!12354 = !DILocation(line: 290, column: 70, scope: !12347)
!12355 = !DILocation(line: 290, column: 78, scope: !12347)
!12356 = !DILocation(line: 290, column: 100, scope: !12347)
!12357 = !DILocation(line: 289, column: 8, scope: !12348)
!12358 = !DILocation(line: 293, column: 11, scope: !12359)
!12359 = distinct !DILexicalBlock(scope: !12360, file: !12230, line: 293, column: 10)
!12360 = distinct !DILexicalBlock(scope: !12347, file: !12230, line: 291, column: 5)
!12361 = !DILocation(line: 293, column: 57, scope: !12359)
!12362 = !DILocation(line: 293, column: 80, scope: !12359)
!12363 = !DILocation(line: 293, column: 89, scope: !12359)
!12364 = !DILocation(line: 293, column: 10, scope: !12360)
!12365 = !DILocation(line: 307, column: 30, scope: !12366)
!12366 = distinct !DILexicalBlock(scope: !12367, file: !12230, line: 307, column: 10)
!12367 = distinct !DILexicalBlock(scope: !12347, file: !12230, line: 305, column: 5)
!12368 = !DILocation(line: 307, column: 39, scope: !12366)
!12369 = !DILocation(line: 307, column: 10, scope: !12367)
!12370 = !DILocation(line: 310, column: 9, scope: !12371)
!12371 = distinct !DILexicalBlock(scope: !12366, file: !12230, line: 308, column: 7)
!12372 = !DILocation(line: 313, column: 21, scope: !12371)
!12373 = !DILocation(line: 316, column: 9, scope: !12371)
!12374 = !DILocation(line: 316, column: 15, scope: !12371)
!12375 = !DILocation(line: 316, column: 51, scope: !12371)
!12376 = !DILocation(line: 318, column: 15, scope: !12377)
!12377 = distinct !DILexicalBlock(scope: !12378, file: !12230, line: 318, column: 14)
!12378 = distinct !DILexicalBlock(scope: !12371, file: !12230, line: 317, column: 9)
!12379 = !DILocation(line: 318, column: 29, scope: !12377)
!12380 = !DILocation(line: 318, column: 43, scope: !12377)
!12381 = !DILocation(line: 318, column: 14, scope: !12378)
!12382 = distinct !{!12382, !12373, !12383}
!12383 = !DILocation(line: 322, column: 9, scope: !12371)
!12384 = !DILocation(line: 330, column: 9, scope: !12385)
!12385 = distinct !DILexicalBlock(scope: !12366, file: !12230, line: 328, column: 7)
!12386 = !DILocation(line: 333, column: 21, scope: !12385)
!12387 = !DILocation(line: 336, column: 9, scope: !12385)
!12388 = !DILocation(line: 336, column: 15, scope: !12385)
!12389 = !DILocation(line: 338, column: 15, scope: !12390)
!12390 = distinct !DILexicalBlock(scope: !12391, file: !12230, line: 338, column: 14)
!12391 = distinct !DILexicalBlock(scope: !12385, file: !12230, line: 337, column: 9)
!12392 = !DILocation(line: 338, column: 29, scope: !12390)
!12393 = !DILocation(line: 338, column: 43, scope: !12390)
!12394 = !DILocation(line: 338, column: 14, scope: !12391)
!12395 = distinct !{!12395, !12387, !12396}
!12396 = !DILocation(line: 342, column: 9, scope: !12385)
!12397 = !DILocation(line: 0, scope: !12347)
!12398 = !DILocation(line: 347, column: 27, scope: !12399)
!12399 = distinct !DILexicalBlock(scope: !12235, file: !12230, line: 347, column: 6)
!12400 = !DILocation(line: 347, column: 43, scope: !12399)
!12401 = !DILocation(line: 347, column: 69, scope: !12399)
!12402 = !DILocation(line: 347, column: 6, scope: !12235)
!12403 = !DILocation(line: 353, column: 28, scope: !12404)
!12404 = distinct !DILexicalBlock(scope: !12405, file: !12230, line: 353, column: 8)
!12405 = distinct !DILexicalBlock(scope: !12399, file: !12230, line: 348, column: 3)
!12406 = !DILocation(line: 353, column: 37, scope: !12404)
!12407 = !DILocation(line: 353, column: 8, scope: !12405)
!12408 = !DILocation(line: 356, column: 7, scope: !12409)
!12409 = distinct !DILexicalBlock(scope: !12404, file: !12230, line: 354, column: 5)
!12410 = !DILocation(line: 359, column: 19, scope: !12409)
!12411 = !DILocation(line: 362, column: 7, scope: !12409)
!12412 = !DILocation(line: 362, column: 13, scope: !12409)
!12413 = !DILocation(line: 362, column: 49, scope: !12409)
!12414 = !DILocation(line: 364, column: 13, scope: !12415)
!12415 = distinct !DILexicalBlock(scope: !12416, file: !12230, line: 364, column: 12)
!12416 = distinct !DILexicalBlock(scope: !12409, file: !12230, line: 363, column: 7)
!12417 = !DILocation(line: 364, column: 27, scope: !12415)
!12418 = !DILocation(line: 364, column: 41, scope: !12415)
!12419 = !DILocation(line: 364, column: 12, scope: !12416)
!12420 = distinct !{!12420, !12411, !12421}
!12421 = !DILocation(line: 368, column: 7, scope: !12409)
!12422 = !DILocation(line: 373, column: 7, scope: !12423)
!12423 = distinct !DILexicalBlock(scope: !12404, file: !12230, line: 371, column: 5)
!12424 = !DILocation(line: 376, column: 19, scope: !12423)
!12425 = !DILocation(line: 379, column: 7, scope: !12423)
!12426 = !DILocation(line: 379, column: 13, scope: !12423)
!12427 = !DILocation(line: 381, column: 13, scope: !12428)
!12428 = distinct !DILexicalBlock(scope: !12429, file: !12230, line: 381, column: 12)
!12429 = distinct !DILexicalBlock(scope: !12423, file: !12230, line: 380, column: 7)
!12430 = !DILocation(line: 381, column: 27, scope: !12428)
!12431 = !DILocation(line: 381, column: 41, scope: !12428)
!12432 = !DILocation(line: 381, column: 12, scope: !12429)
!12433 = distinct !{!12433, !12425, !12434}
!12434 = !DILocation(line: 385, column: 7, scope: !12423)
!12435 = !DILocation(line: 389, column: 27, scope: !12266)
!12436 = !DILocation(line: 389, column: 43, scope: !12266)
!12437 = !DILocation(line: 389, column: 69, scope: !12266)
!12438 = !DILocation(line: 389, column: 6, scope: !12235)
!12439 = !DILocation(line: 0, scope: !12265)
!12440 = !DILocation(line: 398, column: 8, scope: !12271)
!12441 = !DILocation(line: 398, column: 8, scope: !12265)
!12442 = !DILocation(line: 400, column: 7, scope: !12269)
!12443 = !DILocation(line: 400, column: 7, scope: !12270)
!12444 = !DILocation(line: 402, column: 5, scope: !12270)
!12445 = !DILocation(line: 404, column: 8, scope: !12446)
!12446 = distinct !DILexicalBlock(scope: !12265, file: !12230, line: 404, column: 8)
!12447 = !DILocation(line: 404, column: 8, scope: !12265)
!12448 = !DILocation(line: 407, column: 7, scope: !12449)
!12449 = distinct !DILexicalBlock(scope: !12446, file: !12230, line: 405, column: 5)
!12450 = !DILocation(line: 410, column: 19, scope: !12449)
!12451 = !DILocation(line: 412, column: 7, scope: !12449)
!12452 = !DILocation(line: 412, column: 13, scope: !12449)
!12453 = !DILocation(line: 414, column: 13, scope: !12454)
!12454 = distinct !DILexicalBlock(scope: !12455, file: !12230, line: 414, column: 12)
!12455 = distinct !DILexicalBlock(scope: !12449, file: !12230, line: 413, column: 7)
!12456 = !DILocation(line: 414, column: 27, scope: !12454)
!12457 = !DILocation(line: 414, column: 40, scope: !12454)
!12458 = !DILocation(line: 414, column: 12, scope: !12455)
!12459 = distinct !{!12459, !12451, !12460}
!12460 = !DILocation(line: 418, column: 7, scope: !12449)
!12461 = !DILocation(line: 422, column: 5, scope: !12462)
!12462 = distinct !DILexicalBlock(scope: !12463, file: !12230, line: 422, column: 5)
!12463 = distinct !DILexicalBlock(scope: !12265, file: !12230, line: 422, column: 5)
!12464 = !DILocation(line: 422, column: 5, scope: !12463)
!12465 = !DILocation(line: 422, column: 5, scope: !12466)
!12466 = distinct !DILexicalBlock(scope: !12462, file: !12230, line: 422, column: 5)
!12467 = !DILocation(line: 422, column: 5, scope: !12468)
!12468 = distinct !DILexicalBlock(scope: !12469, file: !12230, line: 422, column: 5)
!12469 = distinct !DILexicalBlock(scope: !12462, file: !12230, line: 422, column: 5)
!12470 = !DILocation(line: 422, column: 5, scope: !12471)
!12471 = distinct !DILexicalBlock(scope: !12469, file: !12230, line: 422, column: 5)
!12472 = !DILocation(line: 0, scope: !12462)
!12473 = !DILocation(line: 424, column: 28, scope: !12474)
!12474 = distinct !DILexicalBlock(scope: !12265, file: !12230, line: 424, column: 8)
!12475 = !DILocation(line: 424, column: 38, scope: !12474)
!12476 = !DILocation(line: 0, scope: !12474)
!12477 = !DILocation(line: 424, column: 8, scope: !12265)
!12478 = !DILocation(line: 430, column: 13, scope: !12479)
!12479 = distinct !DILexicalBlock(scope: !12474, file: !12230, line: 425, column: 5)
!12480 = !DILocation(line: 430, column: 49, scope: !12479)
!12481 = !DILocation(line: 430, column: 7, scope: !12479)
!12482 = !DILocation(line: 432, column: 13, scope: !12483)
!12483 = distinct !DILexicalBlock(scope: !12484, file: !12230, line: 432, column: 12)
!12484 = distinct !DILexicalBlock(scope: !12479, file: !12230, line: 431, column: 7)
!12485 = !DILocation(line: 432, column: 27, scope: !12483)
!12486 = !DILocation(line: 432, column: 41, scope: !12483)
!12487 = !DILocation(line: 432, column: 12, scope: !12484)
!12488 = distinct !{!12488, !12481, !12489}
!12489 = !DILocation(line: 436, column: 7, scope: !12479)
!12490 = !DILocation(line: 444, column: 13, scope: !12491)
!12491 = distinct !DILexicalBlock(scope: !12474, file: !12230, line: 439, column: 5)
!12492 = !DILocation(line: 444, column: 7, scope: !12491)
!12493 = !DILocation(line: 446, column: 13, scope: !12494)
!12494 = distinct !DILexicalBlock(scope: !12495, file: !12230, line: 446, column: 12)
!12495 = distinct !DILexicalBlock(scope: !12491, file: !12230, line: 445, column: 7)
!12496 = !DILocation(line: 446, column: 27, scope: !12494)
!12497 = !DILocation(line: 446, column: 41, scope: !12494)
!12498 = !DILocation(line: 446, column: 12, scope: !12495)
!12499 = distinct !{!12499, !12492, !12500}
!12500 = !DILocation(line: 450, column: 7, scope: !12491)
!12501 = !DILocation(line: 454, column: 8, scope: !12265)
!12502 = !DILocation(line: 456, column: 7, scope: !12503)
!12503 = distinct !DILexicalBlock(scope: !12504, file: !12230, line: 455, column: 5)
!12504 = distinct !DILexicalBlock(scope: !12265, file: !12230, line: 454, column: 8)
!12505 = !DILocation(line: 457, column: 5, scope: !12503)
!12506 = !DILocation(line: 462, column: 31, scope: !12507)
!12507 = distinct !DILexicalBlock(scope: !12235, file: !12230, line: 462, column: 7)
!12508 = !DILocation(line: 462, column: 41, scope: !12507)
!12509 = !DILocation(line: 462, column: 7, scope: !12235)
!12510 = !DILocation(line: 465, column: 8, scope: !12511)
!12511 = distinct !DILexicalBlock(scope: !12512, file: !12230, line: 465, column: 8)
!12512 = distinct !DILexicalBlock(scope: !12507, file: !12230, line: 463, column: 3)
!12513 = !DILocation(line: 465, column: 38, scope: !12511)
!12514 = !DILocation(line: 465, column: 8, scope: !12512)
!12515 = !DILocation(line: 467, column: 44, scope: !12516)
!12516 = distinct !DILexicalBlock(scope: !12517, file: !12230, line: 467, column: 10)
!12517 = distinct !DILexicalBlock(scope: !12511, file: !12230, line: 466, column: 5)
!12518 = !DILocation(line: 0, scope: !12516)
!12519 = !DILocation(line: 467, column: 10, scope: !12517)
!12520 = !DILocation(line: 483, column: 15, scope: !12521)
!12521 = distinct !DILexicalBlock(scope: !12516, file: !12230, line: 468, column: 7)
!12522 = !DILocation(line: 483, column: 9, scope: !12521)
!12523 = !DILocation(line: 485, column: 15, scope: !12524)
!12524 = distinct !DILexicalBlock(scope: !12525, file: !12230, line: 485, column: 14)
!12525 = distinct !DILexicalBlock(scope: !12521, file: !12230, line: 484, column: 9)
!12526 = !DILocation(line: 485, column: 29, scope: !12524)
!12527 = !DILocation(line: 485, column: 43, scope: !12524)
!12528 = !DILocation(line: 485, column: 14, scope: !12525)
!12529 = distinct !{!12529, !12522, !12530}
!12530 = !DILocation(line: 489, column: 9, scope: !12521)
!12531 = !DILocation(line: 492, column: 9, scope: !12521)
!12532 = !DILocation(line: 498, column: 9, scope: !12521)
!12533 = !DILocation(line: 501, column: 21, scope: !12521)
!12534 = !DILocation(line: 504, column: 9, scope: !12521)
!12535 = !DILocation(line: 504, column: 15, scope: !12521)
!12536 = !DILocation(line: 504, column: 51, scope: !12521)
!12537 = !DILocation(line: 506, column: 15, scope: !12538)
!12538 = distinct !DILexicalBlock(scope: !12539, file: !12230, line: 506, column: 14)
!12539 = distinct !DILexicalBlock(scope: !12521, file: !12230, line: 505, column: 9)
!12540 = !DILocation(line: 506, column: 29, scope: !12538)
!12541 = !DILocation(line: 506, column: 43, scope: !12538)
!12542 = !DILocation(line: 506, column: 14, scope: !12539)
!12543 = distinct !{!12543, !12534, !12544}
!12544 = !DILocation(line: 510, column: 9, scope: !12521)
!12545 = !DILocation(line: 521, column: 15, scope: !12546)
!12546 = distinct !DILexicalBlock(scope: !12516, file: !12230, line: 513, column: 7)
!12547 = !DILocation(line: 521, column: 9, scope: !12546)
!12548 = !DILocation(line: 523, column: 15, scope: !12549)
!12549 = distinct !DILexicalBlock(scope: !12550, file: !12230, line: 523, column: 14)
!12550 = distinct !DILexicalBlock(scope: !12546, file: !12230, line: 522, column: 9)
!12551 = !DILocation(line: 523, column: 29, scope: !12549)
!12552 = !DILocation(line: 523, column: 43, scope: !12549)
!12553 = !DILocation(line: 523, column: 14, scope: !12550)
!12554 = distinct !{!12554, !12547, !12555}
!12555 = !DILocation(line: 527, column: 9, scope: !12546)
!12556 = !DILocation(line: 533, column: 44, scope: !12557)
!12557 = distinct !DILexicalBlock(scope: !12558, file: !12230, line: 533, column: 10)
!12558 = distinct !DILexicalBlock(scope: !12511, file: !12230, line: 531, column: 5)
!12559 = !DILocation(line: 533, column: 10, scope: !12558)
!12560 = !DILocation(line: 540, column: 27, scope: !12561)
!12561 = distinct !DILexicalBlock(scope: !12557, file: !12230, line: 538, column: 7)
!12562 = !DILocation(line: 551, column: 14, scope: !12563)
!12563 = distinct !DILexicalBlock(scope: !12561, file: !12230, line: 550, column: 13)
!12564 = !DILocation(line: 551, column: 81, scope: !12563)
!12565 = !DILocation(line: 551, column: 55, scope: !12563)
!12566 = !DILocation(line: 551, column: 92, scope: !12563)
!12567 = !DILocation(line: 552, column: 14, scope: !12563)
!12568 = !DILocation(line: 552, column: 80, scope: !12563)
!12569 = !DILocation(line: 552, column: 53, scope: !12563)
!12570 = !DILocation(line: 552, column: 111, scope: !12563)
!12571 = !DILocation(line: 553, column: 14, scope: !12563)
!12572 = !DILocation(line: 553, column: 80, scope: !12563)
!12573 = !DILocation(line: 553, column: 86, scope: !12563)
!12574 = !DILocation(line: 553, column: 53, scope: !12563)
!12575 = !DILocation(line: 553, column: 111, scope: !12563)
!12576 = !DILocation(line: 554, column: 14, scope: !12563)
!12577 = !DILocation(line: 554, column: 82, scope: !12563)
!12578 = !DILocation(line: 554, column: 101, scope: !12563)
!12579 = !DILocation(line: 554, column: 53, scope: !12563)
!12580 = !DILocation(line: 554, column: 126, scope: !12563)
!12581 = !DILocation(line: 555, column: 14, scope: !12563)
!12582 = !DILocation(line: 555, column: 80, scope: !12563)
!12583 = !DILocation(line: 555, column: 85, scope: !12563)
!12584 = !DILocation(line: 555, column: 53, scope: !12563)
!12585 = !DILocation(line: 550, column: 13, scope: !12561)
!12586 = !DILocation(line: 563, column: 3, scope: !12235)
!12587 = !DILocation(line: 564, column: 1, scope: !12235)
!12588 = !DISubprogram(name: "HAL_GetTick", scope: !12589, file: !12589, line: 234, type: !3598, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!12589 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12590 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !12230, file: !12230, line: 591, type: !12591, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3069, retainedNodes: !12602)
!12591 = !DISubroutineType(types: !12592)
!12592 = !{!12233, !12593, !108}
!12593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12594, size: 32)
!12594 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !12240, line: 92, baseType: !12595)
!12595 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12240, line: 75, size: 160, elements: !12596)
!12596 = !{!12597, !12598, !12599, !12600, !12601}
!12597 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !12595, file: !12240, line: 77, baseType: !108, size: 32)
!12598 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !12595, file: !12240, line: 80, baseType: !108, size: 32, offset: 32)
!12599 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12595, file: !12240, line: 83, baseType: !108, size: 32, offset: 64)
!12600 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12595, file: !12240, line: 86, baseType: !108, size: 32, offset: 96)
!12601 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12595, file: !12240, line: 89, baseType: !108, size: 32, offset: 128)
!12602 = !{!12603, !12604, !12605}
!12603 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12590, file: !12230, line: 591, type: !12593)
!12604 = !DILocalVariable(name: "FLatency", arg: 2, scope: !12590, file: !12230, line: 591, type: !108)
!12605 = !DILocalVariable(name: "tickstart", scope: !12590, file: !12230, line: 593, type: !108)
!12606 = !DILocation(line: 0, scope: !12590)
!12607 = !DILocation(line: 596, column: 24, scope: !12608)
!12608 = distinct !DILexicalBlock(scope: !12590, file: !12230, line: 596, column: 6)
!12609 = !DILocation(line: 596, column: 6, scope: !12590)
!12610 = !DILocation(line: 610, column: 17, scope: !12611)
!12611 = distinct !DILexicalBlock(scope: !12590, file: !12230, line: 610, column: 6)
!12612 = !DILocation(line: 610, column: 15, scope: !12611)
!12613 = !DILocation(line: 610, column: 6, scope: !12590)
!12614 = !DILocation(line: 613, column: 5, scope: !12615)
!12615 = distinct !DILexicalBlock(scope: !12611, file: !12230, line: 611, column: 3)
!12616 = !DILocation(line: 617, column: 8, scope: !12617)
!12617 = distinct !DILexicalBlock(scope: !12615, file: !12230, line: 617, column: 8)
!12618 = !DILocation(line: 617, column: 34, scope: !12617)
!12619 = !DILocation(line: 617, column: 8, scope: !12615)
!12620 = !DILocation(line: 624, column: 27, scope: !12621)
!12621 = distinct !DILexicalBlock(scope: !12590, file: !12230, line: 624, column: 6)
!12622 = !DILocation(line: 624, column: 38, scope: !12621)
!12623 = !DILocation(line: 624, column: 60, scope: !12621)
!12624 = !DILocation(line: 624, column: 6, scope: !12590)
!12625 = !DILocation(line: 628, column: 40, scope: !12626)
!12626 = distinct !DILexicalBlock(scope: !12627, file: !12230, line: 628, column: 8)
!12627 = distinct !DILexicalBlock(scope: !12621, file: !12230, line: 625, column: 3)
!12628 = !DILocation(line: 628, column: 63, scope: !12626)
!12629 = !DILocation(line: 628, column: 8, scope: !12627)
!12630 = !DILocation(line: 630, column: 7, scope: !12631)
!12631 = distinct !DILexicalBlock(scope: !12626, file: !12230, line: 629, column: 5)
!12632 = !DILocation(line: 633, column: 29, scope: !12633)
!12633 = distinct !DILexicalBlock(scope: !12627, file: !12230, line: 633, column: 8)
!12634 = !DILocation(line: 631, column: 5, scope: !12631)
!12635 = !DILocation(line: 633, column: 40, scope: !12633)
!12636 = !DILocation(line: 633, column: 63, scope: !12633)
!12637 = !DILocation(line: 633, column: 8, scope: !12627)
!12638 = !DILocation(line: 635, column: 7, scope: !12639)
!12639 = distinct !DILexicalBlock(scope: !12633, file: !12230, line: 634, column: 5)
!12640 = !DILocation(line: 636, column: 5, scope: !12639)
!12641 = !DILocation(line: 639, column: 5, scope: !12627)
!12642 = !DILocation(line: 643, column: 27, scope: !12643)
!12643 = distinct !DILexicalBlock(scope: !12590, file: !12230, line: 643, column: 6)
!12644 = !DILocation(line: 640, column: 3, scope: !12627)
!12645 = !DILocation(line: 643, column: 38, scope: !12643)
!12646 = !DILocation(line: 643, column: 62, scope: !12643)
!12647 = !DILocation(line: 643, column: 6, scope: !12590)
!12648 = !DILocation(line: 648, column: 27, scope: !12649)
!12649 = distinct !DILexicalBlock(scope: !12650, file: !12230, line: 648, column: 8)
!12650 = distinct !DILexicalBlock(scope: !12643, file: !12230, line: 644, column: 3)
!12651 = !DILocation(line: 648, column: 8, scope: !12650)
!12652 = !DILocation(line: 651, column: 10, scope: !12653)
!12653 = distinct !DILexicalBlock(scope: !12654, file: !12230, line: 651, column: 10)
!12654 = distinct !DILexicalBlock(scope: !12649, file: !12230, line: 649, column: 5)
!12655 = !DILocation(line: 651, column: 46, scope: !12653)
!12656 = !DILocation(line: 651, column: 10, scope: !12654)
!12657 = !DILocation(line: 661, column: 10, scope: !12658)
!12658 = distinct !DILexicalBlock(scope: !12659, file: !12230, line: 661, column: 10)
!12659 = distinct !DILexicalBlock(scope: !12660, file: !12230, line: 659, column: 5)
!12660 = distinct !DILexicalBlock(scope: !12649, file: !12230, line: 657, column: 13)
!12661 = !DILocation(line: 661, column: 46, scope: !12658)
!12662 = !DILocation(line: 661, column: 10, scope: !12659)
!12663 = !DILocation(line: 670, column: 10, scope: !12664)
!12664 = distinct !DILexicalBlock(scope: !12665, file: !12230, line: 670, column: 10)
!12665 = distinct !DILexicalBlock(scope: !12660, file: !12230, line: 668, column: 5)
!12666 = !DILocation(line: 670, column: 46, scope: !12664)
!12667 = !DILocation(line: 670, column: 10, scope: !12665)
!12668 = !DILocation(line: 676, column: 5, scope: !12650)
!12669 = !DILocation(line: 679, column: 17, scope: !12650)
!12670 = !DILocation(line: 681, column: 5, scope: !12650)
!12671 = !DILocation(line: 681, column: 12, scope: !12650)
!12672 = !DILocation(line: 681, column: 65, scope: !12650)
!12673 = !DILocation(line: 681, column: 78, scope: !12650)
!12674 = !DILocation(line: 681, column: 42, scope: !12650)
!12675 = !DILocation(line: 683, column: 12, scope: !12676)
!12676 = distinct !DILexicalBlock(scope: !12677, file: !12230, line: 683, column: 11)
!12677 = distinct !DILexicalBlock(scope: !12650, file: !12230, line: 682, column: 5)
!12678 = !DILocation(line: 683, column: 26, scope: !12676)
!12679 = !DILocation(line: 683, column: 39, scope: !12676)
!12680 = !DILocation(line: 683, column: 11, scope: !12677)
!12681 = distinct !{!12681, !12670, !12682}
!12682 = !DILocation(line: 687, column: 5, scope: !12650)
!12683 = !DILocation(line: 691, column: 17, scope: !12684)
!12684 = distinct !DILexicalBlock(scope: !12590, file: !12230, line: 691, column: 6)
!12685 = !DILocation(line: 691, column: 15, scope: !12684)
!12686 = !DILocation(line: 691, column: 6, scope: !12590)
!12687 = !DILocation(line: 694, column: 5, scope: !12688)
!12688 = distinct !DILexicalBlock(scope: !12684, file: !12230, line: 692, column: 3)
!12689 = !DILocation(line: 698, column: 8, scope: !12690)
!12690 = distinct !DILexicalBlock(scope: !12688, file: !12230, line: 698, column: 8)
!12691 = !DILocation(line: 698, column: 34, scope: !12690)
!12692 = !DILocation(line: 698, column: 8, scope: !12688)
!12693 = !DILocation(line: 705, column: 27, scope: !12694)
!12694 = distinct !DILexicalBlock(scope: !12590, file: !12230, line: 705, column: 6)
!12695 = !DILocation(line: 705, column: 38, scope: !12694)
!12696 = !DILocation(line: 705, column: 61, scope: !12694)
!12697 = !DILocation(line: 705, column: 6, scope: !12590)
!12698 = !DILocation(line: 708, column: 5, scope: !12699)
!12699 = distinct !DILexicalBlock(scope: !12694, file: !12230, line: 706, column: 3)
!12700 = !DILocation(line: 712, column: 27, scope: !12701)
!12701 = distinct !DILexicalBlock(scope: !12590, file: !12230, line: 712, column: 6)
!12702 = !DILocation(line: 709, column: 3, scope: !12699)
!12703 = !DILocation(line: 712, column: 38, scope: !12701)
!12704 = !DILocation(line: 712, column: 61, scope: !12701)
!12705 = !DILocation(line: 712, column: 6, scope: !12590)
!12706 = !DILocation(line: 715, column: 5, scope: !12707)
!12707 = distinct !DILexicalBlock(scope: !12701, file: !12230, line: 713, column: 3)
!12708 = !DILocation(line: 716, column: 3, scope: !12707)
!12709 = !DILocation(line: 719, column: 21, scope: !12590)
!12710 = !DILocation(line: 719, column: 70, scope: !12590)
!12711 = !DILocation(line: 719, column: 91, scope: !12590)
!12712 = !DILocation(line: 719, column: 50, scope: !12590)
!12713 = !DILocation(line: 719, column: 47, scope: !12590)
!12714 = !DILocation(line: 719, column: 19, scope: !12590)
!12715 = !DILocation(line: 722, column: 17, scope: !12590)
!12716 = !DILocation(line: 722, column: 3, scope: !12590)
!12717 = !DILocation(line: 724, column: 3, scope: !12590)
!12718 = !DILocation(line: 725, column: 1, scope: !12590)
!12719 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !12230, file: !12230, line: 885, type: !3598, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3069, retainedNodes: !12720)
!12720 = !{!12721, !12722, !12723, !12724}
!12721 = !DILocalVariable(name: "pllm", scope: !12719, file: !12230, line: 887, type: !108)
!12722 = !DILocalVariable(name: "pllvco", scope: !12719, file: !12230, line: 887, type: !108)
!12723 = !DILocalVariable(name: "pllp", scope: !12719, file: !12230, line: 887, type: !108)
!12724 = !DILocalVariable(name: "sysclockfreq", scope: !12719, file: !12230, line: 888, type: !108)
!12725 = !DILocation(line: 0, scope: !12719)
!12726 = !DILocation(line: 891, column: 16, scope: !12719)
!12727 = !DILocation(line: 891, column: 21, scope: !12719)
!12728 = !DILocation(line: 891, column: 3, scope: !12719)
!12729 = !DILocation(line: 901, column: 7, scope: !12730)
!12730 = distinct !DILexicalBlock(scope: !12731, file: !12230, line: 899, column: 5)
!12731 = distinct !DILexicalBlock(scope: !12719, file: !12230, line: 892, column: 3)
!12732 = !DILocation(line: 907, column: 19, scope: !12733)
!12733 = distinct !DILexicalBlock(scope: !12731, file: !12230, line: 904, column: 5)
!12734 = !DILocation(line: 907, column: 27, scope: !12733)
!12735 = !DILocation(line: 908, column: 10, scope: !12736)
!12736 = distinct !DILexicalBlock(scope: !12733, file: !12230, line: 908, column: 10)
!12737 = !DILocation(line: 908, column: 40, scope: !12736)
!12738 = !DILocation(line: 0, scope: !12736)
!12739 = !DILocation(line: 918, column: 23, scope: !12733)
!12740 = !DILocation(line: 918, column: 82, scope: !12733)
!12741 = !DILocation(line: 920, column: 28, scope: !12733)
!12742 = !DILocation(line: 921, column: 7, scope: !12733)
!12743 = !DILocation(line: 0, scope: !12731)
!12744 = !DILocation(line: 929, column: 3, scope: !12719)
!12745 = !DISubprogram(name: "HAL_InitTick", scope: !12589, file: !12589, line: 223, type: !12746, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!12746 = !DISubroutineType(types: !12747)
!12747 = !{!12233, !108}
!12748 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !12230, file: !12230, line: 775, type: !12749, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3069, retainedNodes: !12751)
!12749 = !DISubroutineType(types: !12750)
!12750 = !{null, !108, !108, !108}
!12751 = !{!12752, !12753, !12754, !12755, !12765, !12769}
!12752 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !12748, file: !12230, line: 775, type: !108)
!12753 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !12748, file: !12230, line: 775, type: !108)
!12754 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !12748, file: !12230, line: 775, type: !108)
!12755 = !DILocalVariable(name: "GPIO_InitStruct", scope: !12748, file: !12230, line: 777, type: !12756)
!12756 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !12757, line: 62, baseType: !12758)
!12757 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12758 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12757, line: 46, size: 160, elements: !12759)
!12759 = !{!12760, !12761, !12762, !12763, !12764}
!12760 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !12758, file: !12757, line: 48, baseType: !108, size: 32)
!12761 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !12758, file: !12757, line: 51, baseType: !108, size: 32, offset: 32)
!12762 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !12758, file: !12757, line: 54, baseType: !108, size: 32, offset: 64)
!12763 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !12758, file: !12757, line: 57, baseType: !108, size: 32, offset: 96)
!12764 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !12758, file: !12757, line: 60, baseType: !108, size: 32, offset: 128)
!12765 = !DILocalVariable(name: "tmpreg", scope: !12766, file: !12230, line: 787, type: !409)
!12766 = distinct !DILexicalBlock(scope: !12767, file: !12230, line: 787, column: 5)
!12767 = distinct !DILexicalBlock(scope: !12768, file: !12230, line: 783, column: 3)
!12768 = distinct !DILexicalBlock(scope: !12748, file: !12230, line: 782, column: 6)
!12769 = !DILocalVariable(name: "tmpreg", scope: !12770, file: !12230, line: 811, type: !409)
!12770 = distinct !DILexicalBlock(scope: !12771, file: !12230, line: 811, column: 5)
!12771 = distinct !DILexicalBlock(scope: !12768, file: !12230, line: 807, column: 3)
!12772 = !DILocation(line: 0, scope: !12748)
!12773 = !DILocation(line: 777, column: 3, scope: !12748)
!12774 = !DILocation(line: 777, column: 20, scope: !12748)
!12775 = !DILocation(line: 782, column: 15, scope: !12768)
!12776 = !DILocation(line: 782, column: 6, scope: !12748)
!12777 = !DILocation(line: 787, column: 5, scope: !12766)
!12778 = !DILocation(line: 787, column: 5, scope: !12767)
!12779 = !DILocation(line: 790, column: 21, scope: !12767)
!12780 = !DILocation(line: 790, column: 25, scope: !12767)
!12781 = !DILocation(line: 791, column: 21, scope: !12767)
!12782 = !DILocation(line: 791, column: 26, scope: !12767)
!12783 = !DILocation(line: 792, column: 21, scope: !12767)
!12784 = !DILocation(line: 792, column: 27, scope: !12767)
!12785 = !DILocation(line: 793, column: 21, scope: !12767)
!12786 = !DILocation(line: 793, column: 26, scope: !12767)
!12787 = !DILocation(line: 794, column: 21, scope: !12767)
!12788 = !DILocation(line: 794, column: 31, scope: !12767)
!12789 = !DILocation(line: 795, column: 5, scope: !12767)
!12790 = !DILocation(line: 798, column: 5, scope: !12767)
!12791 = !DILocation(line: 804, column: 3, scope: !12767)
!12792 = !DILocation(line: 811, column: 5, scope: !12770)
!12793 = !DILocation(line: 811, column: 5, scope: !12771)
!12794 = !DILocation(line: 814, column: 21, scope: !12771)
!12795 = !DILocation(line: 814, column: 25, scope: !12771)
!12796 = !DILocation(line: 815, column: 21, scope: !12771)
!12797 = !DILocation(line: 815, column: 26, scope: !12771)
!12798 = !DILocation(line: 816, column: 21, scope: !12771)
!12799 = !DILocation(line: 816, column: 27, scope: !12771)
!12800 = !DILocation(line: 817, column: 21, scope: !12771)
!12801 = !DILocation(line: 817, column: 26, scope: !12771)
!12802 = !DILocation(line: 818, column: 21, scope: !12771)
!12803 = !DILocation(line: 818, column: 31, scope: !12771)
!12804 = !DILocation(line: 819, column: 5, scope: !12771)
!12805 = !DILocation(line: 822, column: 5, scope: !12771)
!12806 = !DILocation(line: 0, scope: !12768)
!12807 = !DILocation(line: 830, column: 1, scope: !12748)
!12808 = !DISubprogram(name: "HAL_GPIO_Init", scope: !12757, file: !12757, line: 224, type: !12809, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!12809 = !DISubroutineType(types: !12810)
!12810 = !{null, !3140, !12811}
!12811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12756, size: 32)
!12812 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !12230, file: !12230, line: 841, type: !334, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3069, retainedNodes: !251)
!12813 = !DILocation(line: 843, column: 38, scope: !12812)
!12814 = !DILocation(line: 844, column: 1, scope: !12812)
!12815 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !12230, file: !12230, line: 850, type: !334, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3069, retainedNodes: !251)
!12816 = !DILocation(line: 852, column: 38, scope: !12815)
!12817 = !DILocation(line: 853, column: 1, scope: !12815)
!12818 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !12230, file: !12230, line: 941, type: !3598, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3069, retainedNodes: !251)
!12819 = !DILocation(line: 943, column: 10, scope: !12818)
!12820 = !DILocation(line: 943, column: 3, scope: !12818)
!12821 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !12230, file: !12230, line: 952, type: !3598, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3069, retainedNodes: !251)
!12822 = !DILocation(line: 955, column: 11, scope: !12821)
!12823 = !DILocation(line: 955, column: 56, scope: !12821)
!12824 = !DILocation(line: 955, column: 78, scope: !12821)
!12825 = !DILocation(line: 955, column: 36, scope: !12821)
!12826 = !DILocation(line: 955, column: 33, scope: !12821)
!12827 = !DILocation(line: 955, column: 3, scope: !12821)
!12828 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !12230, file: !12230, line: 964, type: !3598, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3069, retainedNodes: !251)
!12829 = !DILocation(line: 967, column: 11, scope: !12828)
!12830 = !DILocation(line: 967, column: 55, scope: !12828)
!12831 = !DILocation(line: 967, column: 77, scope: !12828)
!12832 = !DILocation(line: 967, column: 35, scope: !12828)
!12833 = !DILocation(line: 967, column: 32, scope: !12828)
!12834 = !DILocation(line: 967, column: 3, scope: !12828)
!12835 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !12230, file: !12230, line: 977, type: !12836, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3069, retainedNodes: !12838)
!12836 = !DISubroutineType(types: !12837)
!12837 = !{null, !12238}
!12838 = !{!12839}
!12839 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12835, file: !12230, line: 977, type: !12238)
!12840 = !DILocation(line: 0, scope: !12835)
!12841 = !DILocation(line: 980, column: 22, scope: !12835)
!12842 = !DILocation(line: 980, column: 37, scope: !12835)
!12843 = !DILocation(line: 983, column: 12, scope: !12844)
!12844 = distinct !DILexicalBlock(scope: !12835, file: !12230, line: 983, column: 6)
!12845 = !DILocation(line: 983, column: 15, scope: !12844)
!12846 = !DILocation(line: 983, column: 31, scope: !12844)
!12847 = !DILocation(line: 983, column: 6, scope: !12835)
!12848 = !DILocation(line: 985, column: 24, scope: !12849)
!12849 = distinct !DILexicalBlock(scope: !12844, file: !12230, line: 984, column: 3)
!12850 = !DILocation(line: 985, column: 33, scope: !12849)
!12851 = !DILocation(line: 986, column: 3, scope: !12849)
!12852 = !DILocation(line: 987, column: 17, scope: !12853)
!12853 = distinct !DILexicalBlock(scope: !12844, file: !12230, line: 987, column: 11)
!12854 = !DILocation(line: 987, column: 20, scope: !12853)
!12855 = !DILocation(line: 987, column: 35, scope: !12853)
!12856 = !DILocation(line: 0, scope: !12853)
!12857 = !DILocation(line: 987, column: 11, scope: !12844)
!12858 = !DILocation(line: 989, column: 33, scope: !12859)
!12859 = distinct !DILexicalBlock(scope: !12853, file: !12230, line: 988, column: 3)
!12860 = !DILocation(line: 990, column: 3, scope: !12859)
!12861 = !DILocation(line: 993, column: 33, scope: !12862)
!12862 = distinct !DILexicalBlock(scope: !12853, file: !12230, line: 992, column: 3)
!12863 = !DILocation(line: 997, column: 12, scope: !12864)
!12864 = distinct !DILexicalBlock(scope: !12835, file: !12230, line: 997, column: 6)
!12865 = !DILocation(line: 997, column: 15, scope: !12864)
!12866 = !DILocation(line: 1003, column: 24, scope: !12867)
!12867 = distinct !DILexicalBlock(scope: !12864, file: !12230, line: 1002, column: 3)
!12868 = !DILocation(line: 1003, column: 33, scope: !12867)
!12869 = !DILocation(line: 1006, column: 61, scope: !12835)
!12870 = !DILocation(line: 1006, column: 81, scope: !12835)
!12871 = !DILocation(line: 1006, column: 22, scope: !12835)
!12872 = !DILocation(line: 1006, column: 42, scope: !12835)
!12873 = !DILocation(line: 1009, column: 12, scope: !12874)
!12874 = distinct !DILexicalBlock(scope: !12835, file: !12230, line: 1009, column: 6)
!12875 = !DILocation(line: 1009, column: 17, scope: !12874)
!12876 = !DILocation(line: 1009, column: 35, scope: !12874)
!12877 = !DILocation(line: 1009, column: 6, scope: !12835)
!12878 = !DILocation(line: 1011, column: 24, scope: !12879)
!12879 = distinct !DILexicalBlock(scope: !12874, file: !12230, line: 1010, column: 3)
!12880 = !DILocation(line: 1011, column: 33, scope: !12879)
!12881 = !DILocation(line: 1012, column: 3, scope: !12879)
!12882 = !DILocation(line: 1013, column: 17, scope: !12883)
!12883 = distinct !DILexicalBlock(scope: !12874, file: !12230, line: 1013, column: 11)
!12884 = !DILocation(line: 1013, column: 22, scope: !12883)
!12885 = !DILocation(line: 1013, column: 39, scope: !12883)
!12886 = !DILocation(line: 0, scope: !12883)
!12887 = !DILocation(line: 1013, column: 11, scope: !12874)
!12888 = !DILocation(line: 1015, column: 33, scope: !12889)
!12889 = distinct !DILexicalBlock(scope: !12883, file: !12230, line: 1014, column: 3)
!12890 = !DILocation(line: 1016, column: 3, scope: !12889)
!12891 = !DILocation(line: 1019, column: 33, scope: !12892)
!12892 = distinct !DILexicalBlock(scope: !12883, file: !12230, line: 1018, column: 3)
!12893 = !DILocation(line: 1023, column: 12, scope: !12894)
!12894 = distinct !DILexicalBlock(scope: !12835, file: !12230, line: 1023, column: 6)
!12895 = !DILocation(line: 1023, column: 16, scope: !12894)
!12896 = !DILocation(line: 1029, column: 24, scope: !12897)
!12897 = distinct !DILexicalBlock(scope: !12894, file: !12230, line: 1028, column: 3)
!12898 = !DILocation(line: 1029, column: 33, scope: !12897)
!12899 = !DILocation(line: 1033, column: 12, scope: !12900)
!12900 = distinct !DILexicalBlock(scope: !12835, file: !12230, line: 1033, column: 6)
!12901 = !DILocation(line: 1033, column: 15, scope: !12900)
!12902 = !DILocation(line: 1033, column: 30, scope: !12900)
!12903 = !DILocation(line: 1033, column: 6, scope: !12835)
!12904 = !DILocation(line: 1039, column: 28, scope: !12905)
!12905 = distinct !DILexicalBlock(scope: !12900, file: !12230, line: 1038, column: 3)
!12906 = !DILocation(line: 1039, column: 37, scope: !12905)
!12907 = !DILocation(line: 1041, column: 54, scope: !12835)
!12908 = !DILocation(line: 1041, column: 62, scope: !12835)
!12909 = !DILocation(line: 1041, column: 26, scope: !12835)
!12910 = !DILocation(line: 1041, column: 36, scope: !12835)
!12911 = !DILocation(line: 1042, column: 49, scope: !12835)
!12912 = !DILocation(line: 1042, column: 57, scope: !12835)
!12913 = !DILocation(line: 1042, column: 26, scope: !12835)
!12914 = !DILocation(line: 1042, column: 31, scope: !12835)
!12915 = !DILocation(line: 1043, column: 50, scope: !12835)
!12916 = !DILocation(line: 1043, column: 78, scope: !12835)
!12917 = !DILocation(line: 1043, column: 26, scope: !12835)
!12918 = !DILocation(line: 1043, column: 31, scope: !12835)
!12919 = !DILocation(line: 1044, column: 52, scope: !12835)
!12920 = !DILocation(line: 1044, column: 102, scope: !12835)
!12921 = !DILocation(line: 1044, column: 109, scope: !12835)
!12922 = !DILocation(line: 1044, column: 26, scope: !12835)
!12923 = !DILocation(line: 1044, column: 31, scope: !12835)
!12924 = !DILocation(line: 1045, column: 50, scope: !12835)
!12925 = !DILocation(line: 1045, column: 78, scope: !12835)
!12926 = !DILocation(line: 1045, column: 26, scope: !12835)
!12927 = !DILocation(line: 1045, column: 31, scope: !12835)
!12928 = !DILocation(line: 1046, column: 1, scope: !12835)
!12929 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !12230, file: !12230, line: 1056, type: !12930, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3069, retainedNodes: !12932)
!12930 = !DISubroutineType(types: !12931)
!12931 = !{null, !12593, !986}
!12932 = !{!12933, !12934}
!12933 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12929, file: !12230, line: 1056, type: !12593)
!12934 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !12929, file: !12230, line: 1056, type: !986)
!12935 = !DILocation(line: 0, scope: !12929)
!12936 = !DILocation(line: 1059, column: 22, scope: !12929)
!12937 = !DILocation(line: 1059, column: 32, scope: !12929)
!12938 = !DILocation(line: 1062, column: 53, scope: !12929)
!12939 = !DILocation(line: 1062, column: 58, scope: !12929)
!12940 = !DILocation(line: 1062, column: 22, scope: !12929)
!12941 = !DILocation(line: 1062, column: 35, scope: !12929)
!12942 = !DILocation(line: 1065, column: 54, scope: !12929)
!12943 = !DILocation(line: 1065, column: 59, scope: !12929)
!12944 = !DILocation(line: 1065, column: 22, scope: !12929)
!12945 = !DILocation(line: 1065, column: 36, scope: !12929)
!12946 = !DILocation(line: 1068, column: 55, scope: !12929)
!12947 = !DILocation(line: 1068, column: 60, scope: !12929)
!12948 = !DILocation(line: 1068, column: 22, scope: !12929)
!12949 = !DILocation(line: 1068, column: 37, scope: !12929)
!12950 = !DILocation(line: 1071, column: 56, scope: !12929)
!12951 = !DILocation(line: 1071, column: 79, scope: !12929)
!12952 = !DILocation(line: 1071, column: 22, scope: !12929)
!12953 = !DILocation(line: 1071, column: 37, scope: !12929)
!12954 = !DILocation(line: 1074, column: 34, scope: !12929)
!12955 = !DILocation(line: 1074, column: 38, scope: !12929)
!12956 = !DILocation(line: 1074, column: 14, scope: !12929)
!12957 = !DILocation(line: 1075, column: 1, scope: !12929)
!12958 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !12230, file: !12230, line: 1082, type: !334, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3069, retainedNodes: !251)
!12959 = !DILocation(line: 1085, column: 6, scope: !12960)
!12960 = distinct !DILexicalBlock(scope: !12958, file: !12230, line: 1085, column: 6)
!12961 = !DILocation(line: 1085, column: 6, scope: !12958)
!12962 = !DILocation(line: 1088, column: 5, scope: !12963)
!12963 = distinct !DILexicalBlock(scope: !12960, file: !12230, line: 1086, column: 3)
!12964 = !DILocation(line: 1091, column: 5, scope: !12963)
!12965 = !DILocation(line: 1092, column: 3, scope: !12963)
!12966 = !DILocation(line: 1093, column: 1, scope: !12958)
!12967 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !12230, file: !12230, line: 1099, type: !334, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3069, retainedNodes: !251)
!12968 = !DILocation(line: 1104, column: 1, scope: !12967)
!12969 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !12970, file: !12970, line: 257, type: !7403, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !12971)
!12970 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12971 = !{!12972}
!12972 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12969, file: !12970, line: 257, type: !108)
!12973 = !DILocation(line: 0, scope: !12969)
!12974 = !DILocation(line: 260, column: 3, scope: !12969)
!12975 = !DILocation(line: 261, column: 1, scope: !12969)
!12976 = distinct !DISubprogram(name: "LL_InitTick", scope: !12977, file: !12977, line: 260, type: !10625, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !12978)
!12977 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12978 = !{!12979, !12980}
!12979 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12976, file: !12977, line: 260, type: !108)
!12980 = !DILocalVariable(name: "Ticks", arg: 2, scope: !12976, file: !12977, line: 260, type: !108)
!12981 = !DILocation(line: 0, scope: !12976)
!12982 = !DILocation(line: 263, column: 46, scope: !12976)
!12983 = !DILocation(line: 263, column: 55, scope: !12976)
!12984 = !DILocation(line: 263, column: 18, scope: !12976)
!12985 = !DILocation(line: 264, column: 18, scope: !12976)
!12986 = !DILocation(line: 265, column: 18, scope: !12976)
!12987 = !DILocation(line: 267, column: 1, scope: !12976)
!12988 = distinct !DISubprogram(name: "LL_mDelay", scope: !12970, file: !12970, line: 273, type: !7403, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !12989)
!12989 = !{!12990, !12991}
!12990 = !DILocalVariable(name: "Delay", arg: 1, scope: !12988, file: !12970, line: 273, type: !108)
!12991 = !DILocalVariable(name: "tmp", scope: !12988, file: !12970, line: 275, type: !409)
!12992 = !DILocation(line: 0, scope: !12988)
!12993 = !DILocation(line: 275, column: 3, scope: !12988)
!12994 = !DILocation(line: 275, column: 18, scope: !12988)
!12995 = !DILocation(line: 275, column: 33, scope: !12988)
!12996 = !DILocation(line: 277, column: 10, scope: !12988)
!12997 = !DILocation(line: 280, column: 12, scope: !12998)
!12998 = distinct !DILexicalBlock(scope: !12988, file: !12970, line: 280, column: 6)
!12999 = !DILocation(line: 285, column: 3, scope: !12988)
!13000 = !DILocation(line: 287, column: 18, scope: !13001)
!13001 = distinct !DILexicalBlock(scope: !13002, file: !12970, line: 287, column: 8)
!13002 = distinct !DILexicalBlock(scope: !12988, file: !12970, line: 286, column: 3)
!13003 = !DILocation(line: 292, column: 1, scope: !12988)
!13004 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !12970, file: !12970, line: 323, type: !7403, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !13005)
!13005 = !{!13006}
!13006 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13004, file: !12970, line: 323, type: !108)
!13007 = !DILocation(line: 0, scope: !13004)
!13008 = !DILocation(line: 326, column: 19, scope: !13004)
!13009 = !DILocation(line: 327, column: 1, scope: !13004)
!13010 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !12970, file: !12970, line: 338, type: !13011, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !13014)
!13011 = !DISubroutineType(types: !13012)
!13012 = !{!13013, !108}
!13013 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !933, line: 201, baseType: !932)
!13014 = !{!13015, !13016, !13017, !13018, !13019}
!13015 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !13010, file: !12970, line: 338, type: !108)
!13016 = !DILocalVariable(name: "timeout", scope: !13010, file: !12970, line: 340, type: !108)
!13017 = !DILocalVariable(name: "getlatency", scope: !13010, file: !12970, line: 341, type: !108)
!13018 = !DILocalVariable(name: "latency", scope: !13010, file: !12970, line: 342, type: !108)
!13019 = !DILocalVariable(name: "status", scope: !13010, file: !12970, line: 343, type: !13013)
!13020 = !DILocation(line: 0, scope: !13010)
!13021 = !DILocation(line: 347, column: 21, scope: !13022)
!13022 = distinct !DILexicalBlock(scope: !13010, file: !12970, line: 347, column: 6)
!13023 = !DILocation(line: 347, column: 6, scope: !13010)
!13024 = !DILocation(line: 353, column: 8, scope: !13025)
!13025 = distinct !DILexicalBlock(scope: !13026, file: !12970, line: 353, column: 8)
!13026 = distinct !DILexicalBlock(scope: !13022, file: !12970, line: 352, column: 3)
!13027 = !DILocation(line: 353, column: 40, scope: !13025)
!13028 = !DILocation(line: 353, column: 8, scope: !13026)
!13029 = !DILocation(line: 356, column: 26, scope: !13030)
!13030 = distinct !DILexicalBlock(scope: !13031, file: !12970, line: 356, column: 10)
!13031 = distinct !DILexicalBlock(scope: !13025, file: !12970, line: 354, column: 5)
!13032 = !DILocation(line: 356, column: 55, scope: !13030)
!13033 = !DILocation(line: 362, column: 55, scope: !13034)
!13034 = distinct !DILexicalBlock(scope: !13031, file: !12970, line: 362, column: 10)
!13035 = !DILocation(line: 368, column: 55, scope: !13036)
!13036 = distinct !DILexicalBlock(scope: !13031, file: !12970, line: 368, column: 10)
!13037 = !DILocation(line: 374, column: 26, scope: !13038)
!13038 = distinct !DILexicalBlock(scope: !13031, file: !12970, line: 374, column: 10)
!13039 = !DILocation(line: 374, column: 55, scope: !13038)
!13040 = !DILocation(line: 380, column: 28, scope: !13041)
!13041 = distinct !DILexicalBlock(scope: !13042, file: !12970, line: 380, column: 12)
!13042 = distinct !DILexicalBlock(scope: !13038, file: !12970, line: 379, column: 7)
!13043 = !DILocation(line: 380, column: 57, scope: !13041)
!13044 = !DILocation(line: 387, column: 8, scope: !13045)
!13045 = distinct !DILexicalBlock(scope: !13026, file: !12970, line: 387, column: 8)
!13046 = !DILocation(line: 387, column: 40, scope: !13045)
!13047 = !DILocation(line: 387, column: 8, scope: !13026)
!13048 = !DILocation(line: 396, column: 26, scope: !13049)
!13049 = distinct !DILexicalBlock(scope: !13050, file: !12970, line: 396, column: 10)
!13050 = distinct !DILexicalBlock(scope: !13045, file: !12970, line: 388, column: 5)
!13051 = !DILocation(line: 396, column: 55, scope: !13049)
!13052 = !DILocation(line: 402, column: 26, scope: !13053)
!13053 = distinct !DILexicalBlock(scope: !13050, file: !12970, line: 402, column: 10)
!13054 = !DILocation(line: 402, column: 55, scope: !13053)
!13055 = !DILocation(line: 407, column: 26, scope: !13056)
!13056 = distinct !DILexicalBlock(scope: !13050, file: !12970, line: 407, column: 10)
!13057 = !DILocation(line: 407, column: 55, scope: !13056)
!13058 = !DILocation(line: 413, column: 28, scope: !13059)
!13059 = distinct !DILexicalBlock(scope: !13060, file: !12970, line: 413, column: 12)
!13060 = distinct !DILexicalBlock(scope: !13056, file: !12970, line: 412, column: 7)
!13061 = !DILocation(line: 413, column: 57, scope: !13059)
!13062 = !DILocation(line: 0, scope: !13026)
!13063 = !DILocation(line: 444, column: 5, scope: !13026)
!13064 = !DILocation(line: 448, column: 5, scope: !13026)
!13065 = !DILocation(line: 451, column: 18, scope: !13066)
!13066 = distinct !DILexicalBlock(scope: !13026, file: !12970, line: 449, column: 5)
!13067 = !DILocation(line: 452, column: 12, scope: !13066)
!13068 = !DILocation(line: 453, column: 26, scope: !13026)
!13069 = !DILocation(line: 453, column: 38, scope: !13026)
!13070 = !DILocation(line: 453, column: 5, scope: !13066)
!13071 = distinct !{!13071, !13064, !13072}
!13072 = !DILocation(line: 453, column: 54, scope: !13026)
!13073 = !DILocation(line: 0, scope: !13022)
!13074 = !DILocation(line: 464, column: 3, scope: !13010)
!13075 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !13076, file: !13076, line: 519, type: !3598, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !251)
!13076 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13077 = !DILocation(line: 521, column: 21, scope: !13075)
!13078 = !DILocation(line: 521, column: 3, scope: !13075)
!13079 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !7017, file: !7017, line: 1543, type: !7403, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !13080)
!13080 = !{!13081}
!13081 = !DILocalVariable(name: "Latency", arg: 1, scope: !13079, file: !7017, line: 1543, type: !108)
!13082 = !DILocation(line: 0, scope: !13079)
!13083 = !DILocation(line: 1545, column: 3, scope: !13079)
!13084 = !DILocation(line: 1546, column: 1, scope: !13079)
!13085 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !7017, file: !7017, line: 1569, type: !3598, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !251)
!13086 = !DILocation(line: 1571, column: 21, scope: !13085)
!13087 = !DILocation(line: 1571, column: 3, scope: !13085)
!13088 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !12970, file: !12970, line: 483, type: !13089, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !13105)
!13089 = !DISubroutineType(types: !13090)
!13090 = !{!13013, !13091, !13098}
!13091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13092, size: 32)
!13092 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !12977, line: 114, baseType: !13093)
!13093 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12977, line: 94, size: 96, elements: !13094)
!13094 = !{!13095, !13096, !13097}
!13095 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !13093, file: !12977, line: 96, baseType: !108, size: 32)
!13096 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !13093, file: !12977, line: 102, baseType: !108, size: 32, offset: 32)
!13097 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !13093, file: !12977, line: 109, baseType: !108, size: 32, offset: 64)
!13098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13099, size: 32)
!13099 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !12977, line: 139, baseType: !13100)
!13100 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12977, line: 119, size: 96, elements: !13101)
!13101 = !{!13102, !13103, !13104}
!13102 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !13100, file: !12977, line: 121, baseType: !108, size: 32)
!13103 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !13100, file: !12977, line: 127, baseType: !108, size: 32, offset: 32)
!13104 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !13100, file: !12977, line: 133, baseType: !108, size: 32, offset: 64)
!13105 = !{!13106, !13107, !13108, !13109}
!13106 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !13088, file: !12970, line: 483, type: !13091)
!13107 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !13088, file: !12970, line: 484, type: !13098)
!13108 = !DILocalVariable(name: "status", scope: !13088, file: !12970, line: 486, type: !13013)
!13109 = !DILocalVariable(name: "pllfreq", scope: !13088, file: !12970, line: 487, type: !108)
!13110 = !DILocation(line: 0, scope: !13088)
!13111 = !DILocation(line: 490, column: 6, scope: !13112)
!13112 = distinct !DILexicalBlock(scope: !13088, file: !12970, line: 490, column: 6)
!13113 = !DILocation(line: 490, column: 25, scope: !13112)
!13114 = !DILocation(line: 490, column: 6, scope: !13088)
!13115 = !DILocation(line: 493, column: 15, scope: !13116)
!13116 = distinct !DILexicalBlock(scope: !13112, file: !12970, line: 491, column: 3)
!13117 = !DILocation(line: 496, column: 8, scope: !13118)
!13118 = distinct !DILexicalBlock(scope: !13116, file: !12970, line: 496, column: 8)
!13119 = !DILocation(line: 496, column: 29, scope: !13118)
!13120 = !DILocation(line: 496, column: 8, scope: !13116)
!13121 = !DILocation(line: 498, column: 7, scope: !13122)
!13122 = distinct !DILexicalBlock(scope: !13118, file: !12970, line: 497, column: 5)
!13123 = !DILocation(line: 499, column: 7, scope: !13122)
!13124 = !DILocation(line: 499, column: 14, scope: !13122)
!13125 = !DILocation(line: 499, column: 35, scope: !13122)
!13126 = distinct !{!13126, !13123, !13127}
!13127 = !DILocation(line: 502, column: 7, scope: !13122)
!13128 = !DILocation(line: 506, column: 76, scope: !13116)
!13129 = !DILocation(line: 506, column: 103, scope: !13116)
!13130 = !DILocation(line: 507, column: 54, scope: !13116)
!13131 = !DILocation(line: 506, column: 5, scope: !13116)
!13132 = !DILocation(line: 510, column: 14, scope: !13116)
!13133 = !DILocation(line: 511, column: 3, scope: !13116)
!13134 = !DILocation(line: 0, scope: !13112)
!13135 = !DILocation(line: 518, column: 3, scope: !13088)
!13136 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !12970, file: !12970, line: 642, type: !13137, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !13139)
!13137 = !DISubroutineType(types: !13138)
!13138 = !{!13013}
!13139 = !{!13140}
!13140 = !DILocalVariable(name: "status", scope: !13136, file: !12970, line: 644, type: !13013)
!13141 = !DILocation(line: 0, scope: !13136)
!13142 = !DILocation(line: 647, column: 6, scope: !13143)
!13143 = distinct !DILexicalBlock(scope: !13136, file: !12970, line: 647, column: 6)
!13144 = !DILocation(line: 647, column: 27, scope: !13143)
!13145 = !DILocation(line: 663, column: 6, scope: !13146)
!13146 = distinct !DILexicalBlock(scope: !13136, file: !12970, line: 663, column: 6)
!13147 = !DILocation(line: 663, column: 30, scope: !13146)
!13148 = !DILocation(line: 663, column: 6, scope: !13136)
!13149 = !DILocation(line: 669, column: 3, scope: !13136)
!13150 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !12970, file: !12970, line: 611, type: !13151, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !13153)
!13151 = !DISubroutineType(types: !13152)
!13152 = !{!108, !108, !13091}
!13153 = !{!13154, !13155, !13156}
!13154 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !13150, file: !12970, line: 611, type: !108)
!13155 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !13150, file: !12970, line: 611, type: !13091)
!13156 = !DILocalVariable(name: "pllfreq", scope: !13150, file: !12970, line: 613, type: !108)
!13157 = !DILocation(line: 0, scope: !13150)
!13158 = !DILocation(line: 622, column: 56, scope: !13150)
!13159 = !DILocation(line: 622, column: 61, scope: !13150)
!13160 = !DILocation(line: 622, column: 32, scope: !13150)
!13161 = !DILocation(line: 626, column: 45, scope: !13150)
!13162 = !DILocation(line: 626, column: 50, scope: !13150)
!13163 = !DILocation(line: 626, column: 21, scope: !13150)
!13164 = !DILocation(line: 630, column: 47, scope: !13150)
!13165 = !DILocation(line: 630, column: 82, scope: !13150)
!13166 = !DILocation(line: 630, column: 21, scope: !13150)
!13167 = !DILocation(line: 633, column: 3, scope: !13150)
!13168 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !9965, file: !9965, line: 3007, type: !3598, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !251)
!13169 = !DILocation(line: 3009, column: 11, scope: !13168)
!13170 = !DILocation(line: 3009, column: 44, scope: !13168)
!13171 = !DILocation(line: 3009, column: 3, scope: !13168)
!13172 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !9965, file: !9965, line: 2987, type: !334, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !251)
!13173 = !DILocation(line: 2989, column: 3, scope: !13172)
!13174 = !DILocation(line: 2990, column: 1, scope: !13172)
!13175 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !9965, file: !9965, line: 4304, type: !10099, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !13176)
!13176 = !{!13177, !13178, !13179, !13180}
!13177 = !DILocalVariable(name: "Source", arg: 1, scope: !13175, file: !9965, line: 4304, type: !108)
!13178 = !DILocalVariable(name: "PLLM", arg: 2, scope: !13175, file: !9965, line: 4304, type: !108)
!13179 = !DILocalVariable(name: "PLLN", arg: 3, scope: !13175, file: !9965, line: 4304, type: !108)
!13180 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !13175, file: !9965, line: 4304, type: !108)
!13181 = !DILocation(line: 0, scope: !13175)
!13182 = !DILocation(line: 4306, column: 3, scope: !13175)
!13183 = !DILocation(line: 4308, column: 3, scope: !13175)
!13184 = !DILocation(line: 4312, column: 1, scope: !13175)
!13185 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !12970, file: !12970, line: 681, type: !13186, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !13188)
!13186 = !DISubroutineType(types: !13187)
!13187 = !{!13013, !108, !13098}
!13188 = !{!13189, !13190, !13191, !13192}
!13189 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !13185, file: !12970, line: 681, type: !108)
!13190 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !13185, file: !12970, line: 681, type: !13098)
!13191 = !DILocalVariable(name: "status", scope: !13185, file: !12970, line: 683, type: !13013)
!13192 = !DILocalVariable(name: "hclk_frequency", scope: !13185, file: !12970, line: 684, type: !108)
!13193 = !DILocation(line: 0, scope: !13185)
!13194 = !DILocation(line: 691, column: 20, scope: !13185)
!13195 = !DILocation(line: 694, column: 6, scope: !13196)
!13196 = distinct !DILexicalBlock(scope: !13185, file: !12970, line: 694, column: 6)
!13197 = !DILocation(line: 694, column: 22, scope: !13196)
!13198 = !DILocation(line: 694, column: 6, scope: !13185)
!13199 = !DILocation(line: 697, column: 14, scope: !13200)
!13200 = distinct !DILexicalBlock(scope: !13196, file: !12970, line: 695, column: 3)
!13201 = !DILocation(line: 701, column: 13, scope: !13202)
!13202 = distinct !DILexicalBlock(scope: !13185, file: !12970, line: 701, column: 6)
!13203 = !DILocation(line: 701, column: 6, scope: !13185)
!13204 = !DILocation(line: 704, column: 5, scope: !13205)
!13205 = distinct !DILexicalBlock(scope: !13202, file: !12970, line: 702, column: 3)
!13206 = !DILocation(line: 705, column: 5, scope: !13205)
!13207 = !DILocation(line: 705, column: 12, scope: !13205)
!13208 = !DILocation(line: 705, column: 33, scope: !13205)
!13209 = distinct !{!13209, !13206, !13210}
!13210 = !DILocation(line: 708, column: 5, scope: !13205)
!13211 = !DILocation(line: 711, column: 49, scope: !13205)
!13212 = !DILocation(line: 711, column: 5, scope: !13205)
!13213 = !DILocation(line: 712, column: 5, scope: !13205)
!13214 = !DILocation(line: 713, column: 5, scope: !13205)
!13215 = !DILocation(line: 713, column: 12, scope: !13205)
!13216 = !DILocation(line: 713, column: 37, scope: !13205)
!13217 = distinct !{!13217, !13214, !13218}
!13218 = !DILocation(line: 716, column: 5, scope: !13205)
!13219 = !DILocation(line: 719, column: 50, scope: !13205)
!13220 = !DILocation(line: 719, column: 5, scope: !13205)
!13221 = !DILocation(line: 720, column: 50, scope: !13205)
!13222 = !DILocation(line: 720, column: 5, scope: !13205)
!13223 = !DILocation(line: 721, column: 3, scope: !13205)
!13224 = !DILocation(line: 724, column: 6, scope: !13225)
!13225 = distinct !DILexicalBlock(scope: !13185, file: !12970, line: 724, column: 6)
!13226 = !DILocation(line: 724, column: 22, scope: !13225)
!13227 = !DILocation(line: 724, column: 6, scope: !13185)
!13228 = !DILocation(line: 727, column: 14, scope: !13229)
!13229 = distinct !DILexicalBlock(scope: !13225, file: !12970, line: 725, column: 3)
!13230 = !DILocation(line: 728, column: 3, scope: !13229)
!13231 = !DILocation(line: 731, column: 13, scope: !13232)
!13232 = distinct !DILexicalBlock(scope: !13185, file: !12970, line: 731, column: 6)
!13233 = !DILocation(line: 731, column: 6, scope: !13185)
!13234 = !DILocation(line: 733, column: 5, scope: !13235)
!13235 = distinct !DILexicalBlock(scope: !13232, file: !12970, line: 732, column: 3)
!13236 = !DILocation(line: 734, column: 3, scope: !13235)
!13237 = !DILocation(line: 736, column: 3, scope: !13185)
!13238 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !9965, file: !9965, line: 4184, type: !334, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !251)
!13239 = !DILocation(line: 4186, column: 3, scope: !13238)
!13240 = !DILocation(line: 4187, column: 1, scope: !13238)
!13241 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !9965, file: !9965, line: 4205, type: !3598, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !251)
!13242 = !DILocation(line: 4207, column: 11, scope: !13241)
!13243 = !DILocation(line: 4207, column: 44, scope: !13241)
!13244 = !DILocation(line: 4207, column: 3, scope: !13241)
!13245 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !9965, file: !9965, line: 3224, type: !7403, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !13246)
!13246 = !{!13247}
!13247 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13245, file: !9965, line: 3224, type: !108)
!13248 = !DILocation(line: 0, scope: !13245)
!13249 = !DILocation(line: 3226, column: 3, scope: !13245)
!13250 = !DILocation(line: 3227, column: 1, scope: !13245)
!13251 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !9965, file: !9965, line: 3188, type: !7403, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !13252)
!13252 = !{!13253}
!13253 = !DILocalVariable(name: "Source", arg: 1, scope: !13251, file: !9965, line: 3188, type: !108)
!13254 = !DILocation(line: 0, scope: !13251)
!13255 = !DILocation(line: 3190, column: 3, scope: !13251)
!13256 = !DILocation(line: 3191, column: 1, scope: !13251)
!13257 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !9965, file: !9965, line: 3204, type: !3598, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !251)
!13258 = !DILocation(line: 3206, column: 21, scope: !13257)
!13259 = !DILocation(line: 3206, column: 3, scope: !13257)
!13260 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !9965, file: !9965, line: 3240, type: !7403, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !13261)
!13261 = !{!13262}
!13262 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13260, file: !9965, line: 3240, type: !108)
!13263 = !DILocation(line: 0, scope: !13260)
!13264 = !DILocation(line: 3242, column: 3, scope: !13260)
!13265 = !DILocation(line: 3243, column: 1, scope: !13260)
!13266 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !9965, file: !9965, line: 3256, type: !7403, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !13267)
!13267 = !{!13268}
!13268 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13266, file: !9965, line: 3256, type: !108)
!13269 = !DILocation(line: 0, scope: !13266)
!13270 = !DILocation(line: 3258, column: 3, scope: !13266)
!13271 = !DILocation(line: 3259, column: 1, scope: !13266)
!13272 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !9965, file: !9965, line: 5153, type: !3598, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !251)
!13273 = !DILocation(line: 5155, column: 11, scope: !13272)
!13274 = !DILocation(line: 5155, column: 47, scope: !13272)
!13275 = !DILocation(line: 5155, column: 3, scope: !13272)
!13276 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !12970, file: !12970, line: 540, type: !13277, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !13279)
!13277 = !DISubroutineType(types: !13278)
!13278 = !{!13013, !108, !108, !13091, !13098}
!13279 = !{!13280, !13281, !13282, !13283, !13284, !13285}
!13280 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !13276, file: !12970, line: 540, type: !108)
!13281 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !13276, file: !12970, line: 540, type: !108)
!13282 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !13276, file: !12970, line: 541, type: !13091)
!13283 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !13276, file: !12970, line: 541, type: !13098)
!13284 = !DILocalVariable(name: "status", scope: !13276, file: !12970, line: 543, type: !13013)
!13285 = !DILocalVariable(name: "pllfreq", scope: !13276, file: !12970, line: 544, type: !108)
!13286 = !DILocation(line: 0, scope: !13276)
!13287 = !DILocation(line: 551, column: 6, scope: !13288)
!13288 = distinct !DILexicalBlock(scope: !13276, file: !12970, line: 551, column: 6)
!13289 = !DILocation(line: 551, column: 25, scope: !13288)
!13290 = !DILocation(line: 551, column: 6, scope: !13276)
!13291 = !DILocation(line: 554, column: 15, scope: !13292)
!13292 = distinct !DILexicalBlock(scope: !13288, file: !12970, line: 552, column: 3)
!13293 = !DILocation(line: 557, column: 8, scope: !13294)
!13294 = distinct !DILexicalBlock(scope: !13292, file: !12970, line: 557, column: 8)
!13295 = !DILocation(line: 557, column: 29, scope: !13294)
!13296 = !DILocation(line: 557, column: 8, scope: !13292)
!13297 = !DILocation(line: 560, column: 20, scope: !13298)
!13298 = distinct !DILexicalBlock(scope: !13299, file: !12970, line: 560, column: 10)
!13299 = distinct !DILexicalBlock(scope: !13294, file: !12970, line: 558, column: 5)
!13300 = !DILocation(line: 560, column: 10, scope: !13299)
!13301 = !DILocation(line: 562, column: 9, scope: !13302)
!13302 = distinct !DILexicalBlock(scope: !13298, file: !12970, line: 561, column: 7)
!13303 = !DILocation(line: 563, column: 7, scope: !13302)
!13304 = !DILocation(line: 566, column: 9, scope: !13305)
!13305 = distinct !DILexicalBlock(scope: !13298, file: !12970, line: 565, column: 7)
!13306 = !DILocation(line: 570, column: 7, scope: !13299)
!13307 = !DILocation(line: 571, column: 7, scope: !13299)
!13308 = !DILocation(line: 571, column: 14, scope: !13299)
!13309 = !DILocation(line: 571, column: 35, scope: !13299)
!13310 = distinct !{!13310, !13307, !13311}
!13311 = !DILocation(line: 574, column: 7, scope: !13299)
!13312 = !DILocation(line: 578, column: 76, scope: !13292)
!13313 = !DILocation(line: 578, column: 103, scope: !13292)
!13314 = !DILocation(line: 579, column: 54, scope: !13292)
!13315 = !DILocation(line: 578, column: 5, scope: !13292)
!13316 = !DILocation(line: 582, column: 14, scope: !13292)
!13317 = !DILocation(line: 583, column: 3, scope: !13292)
!13318 = !DILocation(line: 0, scope: !13288)
!13319 = !DILocation(line: 590, column: 3, scope: !13276)
!13320 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !9965, file: !9965, line: 2969, type: !3598, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !251)
!13321 = !DILocation(line: 2971, column: 11, scope: !13320)
!13322 = !DILocation(line: 2971, column: 44, scope: !13320)
!13323 = !DILocation(line: 2971, column: 3, scope: !13320)
!13324 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !9965, file: !9965, line: 2929, type: !334, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !251)
!13325 = !DILocation(line: 2931, column: 3, scope: !13324)
!13326 = !DILocation(line: 2932, column: 1, scope: !13324)
!13327 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !9965, file: !9965, line: 2939, type: !334, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !251)
!13328 = !DILocation(line: 2941, column: 3, scope: !13327)
!13329 = !DILocation(line: 2942, column: 1, scope: !13327)
!13330 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !9965, file: !9965, line: 2949, type: !334, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3153, retainedNodes: !251)
!13331 = !DILocation(line: 2951, column: 3, scope: !13330)
!13332 = !DILocation(line: 2952, column: 1, scope: !13330)
!13333 = distinct !DISubprogram(name: "z_device_state_init", scope: !13334, file: !13334, line: 23, type: !334, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3216, retainedNodes: !13335)
!13334 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13335 = !{!13336}
!13336 = !DILocalVariable(name: "dev", scope: !13333, file: !13334, line: 25, type: !13337)
!13337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13338, size: 32)
!13338 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13339)
!13339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !429, line: 378, size: 192, elements: !13340)
!13340 = !{!13341, !13342, !13343, !13344, !13350, !13351}
!13341 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !13339, file: !429, line: 380, baseType: !337, size: 32)
!13342 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !13339, file: !429, line: 382, baseType: !13, size: 32, offset: 32)
!13343 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !13339, file: !429, line: 384, baseType: !13, size: 32, offset: 64)
!13344 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !13339, file: !429, line: 386, baseType: !13345, size: 32, offset: 96)
!13345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13346, size: 32)
!13346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !429, line: 351, size: 16, elements: !13347)
!13347 = !{!13348, !13349}
!13348 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !13346, file: !429, line: 359, baseType: !185, size: 8)
!13349 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !13346, file: !429, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!13350 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13339, file: !429, line: 388, baseType: !102, size: 32, offset: 128)
!13351 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !13339, file: !429, line: 396, baseType: !442, size: 32, offset: 160)
!13352 = !DILocation(line: 0, scope: !13333)
!13353 = !DILocation(line: 31, column: 1, scope: !13333)
!13354 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !13334, file: !13334, line: 33, type: !13355, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3216, retainedNodes: !13357)
!13355 = !DISubroutineType(types: !13356)
!13356 = !{!13337, !337}
!13357 = !{!13358, !13359}
!13358 = !DILocalVariable(name: "name", arg: 1, scope: !13354, file: !13334, line: 33, type: !337)
!13359 = !DILocalVariable(name: "dev", scope: !13354, file: !13334, line: 35, type: !13337)
!13360 = !DILocation(line: 0, scope: !13354)
!13361 = !DILocation(line: 40, column: 12, scope: !13362)
!13362 = distinct !DILexicalBlock(scope: !13354, file: !13334, line: 40, column: 6)
!13363 = !DILocation(line: 40, column: 21, scope: !13362)
!13364 = !DILocation(line: 40, column: 25, scope: !13362)
!13365 = !DILocation(line: 40, column: 33, scope: !13362)
!13366 = !DILocation(line: 40, column: 6, scope: !13354)
!13367 = !DILocation(line: 55, column: 2, scope: !13368)
!13368 = distinct !DILexicalBlock(scope: !13354, file: !13334, line: 55, column: 2)
!13369 = !DILocation(line: 50, column: 7, scope: !13370)
!13370 = distinct !DILexicalBlock(scope: !13371, file: !13334, line: 50, column: 7)
!13371 = distinct !DILexicalBlock(scope: !13372, file: !13334, line: 49, column: 57)
!13372 = distinct !DILexicalBlock(scope: !13373, file: !13334, line: 49, column: 2)
!13373 = distinct !DILexicalBlock(scope: !13354, file: !13334, line: 49, column: 2)
!13374 = !DILocation(line: 50, column: 30, scope: !13370)
!13375 = !DILocation(line: 50, column: 39, scope: !13370)
!13376 = !DILocation(line: 50, column: 44, scope: !13370)
!13377 = !DILocation(line: 50, column: 7, scope: !13371)
!13378 = !DILocation(line: 49, column: 53, scope: !13372)
!13379 = !DILocation(line: 49, column: 33, scope: !13372)
!13380 = !DILocation(line: 49, column: 2, scope: !13373)
!13381 = distinct !{!13381, !13380, !13382}
!13382 = !DILocation(line: 53, column: 2, scope: !13373)
!13383 = !DILocation(line: 56, column: 7, scope: !13384)
!13384 = distinct !DILexicalBlock(scope: !13385, file: !13334, line: 56, column: 7)
!13385 = distinct !DILexicalBlock(scope: !13386, file: !13334, line: 55, column: 57)
!13386 = distinct !DILexicalBlock(scope: !13368, file: !13334, line: 55, column: 2)
!13387 = !DILocation(line: 56, column: 30, scope: !13384)
!13388 = !DILocation(line: 56, column: 52, scope: !13384)
!13389 = !DILocation(line: 56, column: 34, scope: !13384)
!13390 = !DILocation(line: 56, column: 58, scope: !13384)
!13391 = !DILocation(line: 56, column: 7, scope: !13385)
!13392 = !DILocation(line: 55, column: 53, scope: !13386)
!13393 = !DILocation(line: 55, column: 33, scope: !13386)
!13394 = distinct !{!13394, !13367, !13395}
!13395 = !DILocation(line: 59, column: 2, scope: !13368)
!13396 = !DILocation(line: 62, column: 1, scope: !13354)
!13397 = distinct !DISubprogram(name: "z_device_is_ready", scope: !13334, file: !13334, line: 93, type: !13398, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3216, retainedNodes: !13400)
!13398 = !DISubroutineType(types: !13399)
!13399 = !{!131, !13337}
!13400 = !{!13401}
!13401 = !DILocalVariable(name: "dev", arg: 1, scope: !13397, file: !13334, line: 93, type: !13337)
!13402 = !DILocation(line: 0, scope: !13397)
!13403 = !DILocation(line: 99, column: 10, scope: !13404)
!13404 = distinct !DILexicalBlock(scope: !13397, file: !13334, line: 99, column: 6)
!13405 = !DILocation(line: 99, column: 6, scope: !13397)
!13406 = !DILocation(line: 103, column: 14, scope: !13397)
!13407 = !DILocation(line: 103, column: 21, scope: !13397)
!13408 = !DILocation(line: 103, column: 33, scope: !13397)
!13409 = !DILocation(line: 103, column: 49, scope: !13397)
!13410 = !DILocation(line: 103, column: 58, scope: !13397)
!13411 = !DILocation(line: 104, column: 1, scope: !13397)
!13412 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !13334, file: !13334, line: 87, type: !13413, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3216, retainedNodes: !13416)
!13413 = !DISubroutineType(types: !13414)
!13414 = !{!132, !13415}
!13415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13337, size: 32)
!13416 = !{!13417}
!13417 = !DILocalVariable(name: "devices", arg: 1, scope: !13412, file: !13334, line: 87, type: !13415)
!13418 = !DILocation(line: 0, scope: !13412)
!13419 = !DILocation(line: 89, column: 11, scope: !13412)
!13420 = !DILocation(line: 90, column: 2, scope: !13412)
!13421 = distinct !DISubprogram(name: "device_required_foreach", scope: !13334, file: !13334, line: 125, type: !13422, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3216, retainedNodes: !13428)
!13422 = !DISubroutineType(types: !13423)
!13423 = !{!103, !13337, !13424, !102}
!13424 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !429, line: 471, baseType: !13425)
!13425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13426, size: 32)
!13426 = !DISubroutineType(types: !13427)
!13427 = !{!103, !13337, !102}
!13428 = !{!13429, !13430, !13431, !13432, !13433}
!13429 = !DILocalVariable(name: "dev", arg: 1, scope: !13421, file: !13334, line: 125, type: !13337)
!13430 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13421, file: !13334, line: 126, type: !13424)
!13431 = !DILocalVariable(name: "context", arg: 3, scope: !13421, file: !13334, line: 127, type: !102)
!13432 = !DILocalVariable(name: "handle_count", scope: !13421, file: !13334, line: 129, type: !132)
!13433 = !DILocalVariable(name: "handles", scope: !13421, file: !13334, line: 130, type: !442)
!13434 = !DILocation(line: 0, scope: !13421)
!13435 = !DILocation(line: 129, column: 2, scope: !13421)
!13436 = !DILocation(line: 129, column: 9, scope: !13421)
!13437 = !DILocation(line: 130, column: 35, scope: !13421)
!13438 = !DILocation(line: 132, column: 33, scope: !13421)
!13439 = !DILocation(line: 132, column: 9, scope: !13421)
!13440 = !DILocation(line: 133, column: 1, scope: !13421)
!13441 = !DILocation(line: 132, column: 2, scope: !13421)
!13442 = distinct !DISubprogram(name: "device_required_handles_get", scope: !429, file: !429, line: 493, type: !13443, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3216, retainedNodes: !13445)
!13443 = !DISubroutineType(types: !13444)
!13444 = !{!442, !13337, !2715}
!13445 = !{!13446, !13447, !13448, !13449}
!13446 = !DILocalVariable(name: "dev", arg: 1, scope: !13442, file: !429, line: 493, type: !13337)
!13447 = !DILocalVariable(name: "count", arg: 2, scope: !13442, file: !429, line: 493, type: !2715)
!13448 = !DILocalVariable(name: "rv", scope: !13442, file: !429, line: 495, type: !442)
!13449 = !DILocalVariable(name: "i", scope: !13450, file: !429, line: 498, type: !132)
!13450 = distinct !DILexicalBlock(scope: !13451, file: !429, line: 497, column: 18)
!13451 = distinct !DILexicalBlock(scope: !13442, file: !429, line: 497, column: 6)
!13452 = !DILocation(line: 0, scope: !13442)
!13453 = !DILocation(line: 495, column: 35, scope: !13442)
!13454 = !DILocation(line: 497, column: 9, scope: !13451)
!13455 = !DILocation(line: 497, column: 6, scope: !13442)
!13456 = !DILocation(line: 0, scope: !13450)
!13457 = !DILocation(line: 500, column: 11, scope: !13450)
!13458 = !DILocation(line: 500, column: 40, scope: !13450)
!13459 = !DILocation(line: 502, column: 4, scope: !13460)
!13460 = distinct !DILexicalBlock(scope: !13450, file: !429, line: 501, column: 40)
!13461 = distinct !{!13461, !13462, !13463}
!13462 = !DILocation(line: 500, column: 3, scope: !13450)
!13463 = !DILocation(line: 503, column: 3, scope: !13450)
!13464 = !DILocation(line: 504, column: 10, scope: !13450)
!13465 = !DILocation(line: 505, column: 2, scope: !13450)
!13466 = !DILocation(line: 507, column: 2, scope: !13442)
!13467 = distinct !DISubprogram(name: "device_visitor", scope: !13334, file: !13334, line: 106, type: !13468, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3216, retainedNodes: !13470)
!13468 = !DISubroutineType(types: !13469)
!13469 = !{!103, !442, !132, !13424, !102}
!13470 = !{!13471, !13472, !13473, !13474, !13475, !13477, !13480, !13481}
!13471 = !DILocalVariable(name: "handles", arg: 1, scope: !13467, file: !13334, line: 106, type: !442)
!13472 = !DILocalVariable(name: "handle_count", arg: 2, scope: !13467, file: !13334, line: 107, type: !132)
!13473 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !13467, file: !13334, line: 108, type: !13424)
!13474 = !DILocalVariable(name: "context", arg: 4, scope: !13467, file: !13334, line: 109, type: !102)
!13475 = !DILocalVariable(name: "i", scope: !13476, file: !13334, line: 112, type: !132)
!13476 = distinct !DILexicalBlock(scope: !13467, file: !13334, line: 112, column: 2)
!13477 = !DILocalVariable(name: "dh", scope: !13478, file: !13334, line: 113, type: !444)
!13478 = distinct !DILexicalBlock(scope: !13479, file: !13334, line: 112, column: 44)
!13479 = distinct !DILexicalBlock(scope: !13476, file: !13334, line: 112, column: 2)
!13480 = !DILocalVariable(name: "rdev", scope: !13478, file: !13334, line: 114, type: !13337)
!13481 = !DILocalVariable(name: "rc", scope: !13478, file: !13334, line: 115, type: !103)
!13482 = !DILocation(line: 0, scope: !13467)
!13483 = !DILocation(line: 0, scope: !13476)
!13484 = !DILocation(line: 112, column: 23, scope: !13479)
!13485 = !DILocation(line: 112, column: 2, scope: !13476)
!13486 = distinct !{!13486, !13485, !13487}
!13487 = !DILocation(line: 120, column: 2, scope: !13476)
!13488 = !DILocation(line: 113, column: 24, scope: !13478)
!13489 = !DILocation(line: 0, scope: !13478)
!13490 = !DILocation(line: 114, column: 31, scope: !13478)
!13491 = !DILocation(line: 115, column: 12, scope: !13478)
!13492 = !DILocation(line: 117, column: 10, scope: !13493)
!13493 = distinct !DILexicalBlock(scope: !13478, file: !13334, line: 117, column: 7)
!13494 = !DILocation(line: 112, column: 39, scope: !13479)
!13495 = !DILocation(line: 123, column: 1, scope: !13467)
!13496 = distinct !DISubprogram(name: "device_from_handle", scope: !429, file: !429, line: 439, type: !13497, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3216, retainedNodes: !13499)
!13497 = !DISubroutineType(types: !13498)
!13498 = !{!13337, !444}
!13499 = !{!13500, !13501, !13502}
!13500 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !13496, file: !429, line: 439, type: !444)
!13501 = !DILocalVariable(name: "dev", scope: !13496, file: !429, line: 443, type: !13337)
!13502 = !DILocalVariable(name: "numdev", scope: !13496, file: !429, line: 444, type: !132)
!13503 = !DILocation(line: 0, scope: !13496)
!13504 = !DILocation(line: 446, column: 7, scope: !13505)
!13505 = distinct !DILexicalBlock(scope: !13496, file: !429, line: 446, column: 6)
!13506 = !DILocation(line: 446, column: 18, scope: !13505)
!13507 = !DILocation(line: 446, column: 23, scope: !13505)
!13508 = !DILocation(line: 450, column: 2, scope: !13496)
!13509 = distinct !DISubprogram(name: "device_supported_foreach", scope: !13334, file: !13334, line: 135, type: !13422, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3216, retainedNodes: !13510)
!13510 = !{!13511, !13512, !13513, !13514, !13515}
!13511 = !DILocalVariable(name: "dev", arg: 1, scope: !13509, file: !13334, line: 135, type: !13337)
!13512 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13509, file: !13334, line: 136, type: !13424)
!13513 = !DILocalVariable(name: "context", arg: 3, scope: !13509, file: !13334, line: 137, type: !102)
!13514 = !DILocalVariable(name: "handle_count", scope: !13509, file: !13334, line: 139, type: !132)
!13515 = !DILocalVariable(name: "handles", scope: !13509, file: !13334, line: 140, type: !442)
!13516 = !DILocation(line: 0, scope: !13509)
!13517 = !DILocation(line: 139, column: 2, scope: !13509)
!13518 = !DILocation(line: 139, column: 9, scope: !13509)
!13519 = !DILocation(line: 140, column: 35, scope: !13509)
!13520 = !DILocation(line: 142, column: 33, scope: !13509)
!13521 = !DILocation(line: 142, column: 9, scope: !13509)
!13522 = !DILocation(line: 143, column: 1, scope: !13509)
!13523 = !DILocation(line: 142, column: 2, scope: !13509)
!13524 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !429, file: !429, line: 573, type: !13443, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3216, retainedNodes: !13525)
!13525 = !{!13526, !13527, !13528, !13529, !13530}
!13526 = !DILocalVariable(name: "dev", arg: 1, scope: !13524, file: !429, line: 573, type: !13337)
!13527 = !DILocalVariable(name: "count", arg: 2, scope: !13524, file: !429, line: 573, type: !2715)
!13528 = !DILocalVariable(name: "rv", scope: !13524, file: !429, line: 575, type: !442)
!13529 = !DILocalVariable(name: "region", scope: !13524, file: !429, line: 576, type: !132)
!13530 = !DILocalVariable(name: "i", scope: !13524, file: !429, line: 577, type: !132)
!13531 = !DILocation(line: 0, scope: !13524)
!13532 = !DILocation(line: 575, column: 35, scope: !13524)
!13533 = !DILocation(line: 579, column: 9, scope: !13534)
!13534 = distinct !DILexicalBlock(scope: !13524, file: !429, line: 579, column: 6)
!13535 = !DILocation(line: 579, column: 6, scope: !13524)
!13536 = !DILocation(line: 582, column: 8, scope: !13537)
!13537 = distinct !DILexicalBlock(scope: !13538, file: !429, line: 582, column: 8)
!13538 = distinct !DILexicalBlock(scope: !13539, file: !429, line: 581, column: 23)
!13539 = distinct !DILexicalBlock(scope: !13534, file: !429, line: 579, column: 18)
!13540 = !DILocation(line: 582, column: 12, scope: !13537)
!13541 = !DILocation(line: 585, column: 6, scope: !13538)
!13542 = !DILocation(line: 0, scope: !13539)
!13543 = !DILocation(line: 581, column: 17, scope: !13539)
!13544 = !DILocation(line: 581, column: 3, scope: !13539)
!13545 = !DILocation(line: 588, column: 10, scope: !13539)
!13546 = !DILocation(line: 588, column: 16, scope: !13539)
!13547 = !DILocation(line: 589, column: 4, scope: !13548)
!13548 = distinct !DILexicalBlock(scope: !13539, file: !429, line: 588, column: 39)
!13549 = !DILocation(line: 588, column: 3, scope: !13539)
!13550 = distinct !{!13550, !13549, !13551}
!13551 = !DILocation(line: 590, column: 3, scope: !13539)
!13552 = !DILocation(line: 591, column: 10, scope: !13539)
!13553 = !DILocation(line: 592, column: 2, scope: !13539)
!13554 = !DILocation(line: 575, column: 25, scope: !13524)
!13555 = !DILocation(line: 594, column: 2, scope: !13524)
!13556 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1925, file: !1925, line: 49, type: !13557, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1922, retainedNodes: !251)
!13557 = !DISubroutineType(types: !13558)
!13558 = !{!374}
!13559 = !DILocation(line: 51, column: 10, scope: !13556)
!13560 = !DILocation(line: 51, column: 20, scope: !13556)
!13561 = !DILocation(line: 51, column: 2, scope: !13556)
!13562 = distinct !DISubprogram(name: "coredump", scope: !3223, file: !3223, line: 209, type: !13563, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3219, retainedNodes: !13709)
!13563 = !DISubroutineType(types: !13564)
!13564 = !{null, !32, !13565, !13609}
!13565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13566, size: 32)
!13566 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13567)
!13567 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2843, line: 141, baseType: !13568)
!13568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2843, line: 97, size: 256, elements: !13569)
!13569 = !{!13570}
!13570 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !13568, file: !2843, line: 107, baseType: !13571, size: 256)
!13571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2843, line: 98, size: 256, elements: !13572)
!13572 = !{!13573, !13578, !13583, !13588, !13593, !13598, !13603, !13608}
!13573 = !DIDerivedType(tag: DW_TAG_member, scope: !13571, file: !2843, line: 99, baseType: !13574, size: 32)
!13574 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13571, file: !2843, line: 99, size: 32, elements: !13575)
!13575 = !{!13576, !13577}
!13576 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !13574, file: !2843, line: 99, baseType: !108, size: 32)
!13577 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !13574, file: !2843, line: 99, baseType: !108, size: 32)
!13578 = !DIDerivedType(tag: DW_TAG_member, scope: !13571, file: !2843, line: 100, baseType: !13579, size: 32, offset: 32)
!13579 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13571, file: !2843, line: 100, size: 32, elements: !13580)
!13580 = !{!13581, !13582}
!13581 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !13579, file: !2843, line: 100, baseType: !108, size: 32)
!13582 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !13579, file: !2843, line: 100, baseType: !108, size: 32)
!13583 = !DIDerivedType(tag: DW_TAG_member, scope: !13571, file: !2843, line: 101, baseType: !13584, size: 32, offset: 64)
!13584 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13571, file: !2843, line: 101, size: 32, elements: !13585)
!13585 = !{!13586, !13587}
!13586 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !13584, file: !2843, line: 101, baseType: !108, size: 32)
!13587 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !13584, file: !2843, line: 101, baseType: !108, size: 32)
!13588 = !DIDerivedType(tag: DW_TAG_member, scope: !13571, file: !2843, line: 102, baseType: !13589, size: 32, offset: 96)
!13589 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13571, file: !2843, line: 102, size: 32, elements: !13590)
!13590 = !{!13591, !13592}
!13591 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !13589, file: !2843, line: 102, baseType: !108, size: 32)
!13592 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !13589, file: !2843, line: 102, baseType: !108, size: 32)
!13593 = !DIDerivedType(tag: DW_TAG_member, scope: !13571, file: !2843, line: 103, baseType: !13594, size: 32, offset: 128)
!13594 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13571, file: !2843, line: 103, size: 32, elements: !13595)
!13595 = !{!13596, !13597}
!13596 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !13594, file: !2843, line: 103, baseType: !108, size: 32)
!13597 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !13594, file: !2843, line: 103, baseType: !108, size: 32)
!13598 = !DIDerivedType(tag: DW_TAG_member, scope: !13571, file: !2843, line: 104, baseType: !13599, size: 32, offset: 160)
!13599 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13571, file: !2843, line: 104, size: 32, elements: !13600)
!13600 = !{!13601, !13602}
!13601 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !13599, file: !2843, line: 104, baseType: !108, size: 32)
!13602 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !13599, file: !2843, line: 104, baseType: !108, size: 32)
!13603 = !DIDerivedType(tag: DW_TAG_member, scope: !13571, file: !2843, line: 105, baseType: !13604, size: 32, offset: 192)
!13604 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13571, file: !2843, line: 105, size: 32, elements: !13605)
!13605 = !{!13606, !13607}
!13606 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !13604, file: !2843, line: 105, baseType: !108, size: 32)
!13607 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !13604, file: !2843, line: 105, baseType: !108, size: 32)
!13608 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !13571, file: !2843, line: 106, baseType: !108, size: 32, offset: 224)
!13609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13610, size: 32)
!13610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !13611)
!13611 = !{!13612, !13670, !13682, !13683, !13684, !13685, !13691, !13704}
!13612 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !13610, file: !163, line: 247, baseType: !13613, size: 384)
!13613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !13614)
!13614 = !{!13615, !13639, !13646, !13647, !13648, !13657, !13658, !13659}
!13615 = !DIDerivedType(tag: DW_TAG_member, scope: !13613, file: !163, line: 60, baseType: !13616, size: 64)
!13616 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13613, file: !163, line: 60, size: 64, elements: !13617)
!13617 = !{!13618, !13633}
!13618 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !13616, file: !163, line: 61, baseType: !13619, size: 64)
!13619 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !13620)
!13620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !13621)
!13621 = !{!13622, !13628}
!13622 = !DIDerivedType(tag: DW_TAG_member, scope: !13620, file: !146, line: 38, baseType: !13623, size: 32)
!13623 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13620, file: !146, line: 38, size: 32, elements: !13624)
!13624 = !{!13625, !13627}
!13625 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !13623, file: !146, line: 39, baseType: !13626, size: 32)
!13626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13620, size: 32)
!13627 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13623, file: !146, line: 40, baseType: !13626, size: 32)
!13628 = !DIDerivedType(tag: DW_TAG_member, scope: !13620, file: !146, line: 42, baseType: !13629, size: 32, offset: 32)
!13629 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13620, file: !146, line: 42, size: 32, elements: !13630)
!13630 = !{!13631, !13632}
!13631 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !13629, file: !146, line: 43, baseType: !13626, size: 32)
!13632 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13629, file: !146, line: 44, baseType: !13626, size: 32)
!13633 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !13616, file: !163, line: 62, baseType: !13634, size: 64)
!13634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !13635)
!13635 = !{!13636}
!13636 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !13634, file: !175, line: 50, baseType: !13637, size: 64)
!13637 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13638, size: 64, elements: !180)
!13638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13634, size: 32)
!13639 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !13613, file: !163, line: 68, baseType: !13640, size: 32, offset: 64)
!13640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13641, size: 32)
!13641 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !13642)
!13642 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !13643)
!13643 = !{!13644}
!13644 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !13642, file: !141, line: 232, baseType: !13645, size: 64)
!13645 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !13620)
!13646 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !13613, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!13647 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !13613, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!13648 = !DIDerivedType(tag: DW_TAG_member, scope: !13613, file: !163, line: 90, baseType: !13649, size: 16, offset: 112)
!13649 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13613, file: !163, line: 90, size: 16, elements: !13650)
!13650 = !{!13651, !13656}
!13651 = !DIDerivedType(tag: DW_TAG_member, scope: !13649, file: !163, line: 91, baseType: !13652, size: 16)
!13652 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13649, file: !163, line: 91, size: 16, elements: !13653)
!13653 = !{!13654, !13655}
!13654 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !13652, file: !163, line: 96, baseType: !195, size: 8)
!13655 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !13652, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!13656 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !13649, file: !163, line: 100, baseType: !121, size: 16)
!13657 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !13613, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!13658 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !13613, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!13659 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !13613, file: !163, line: 131, baseType: !13660, size: 192, offset: 192)
!13660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !13661)
!13661 = !{!13662, !13663, !13669}
!13662 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !13660, file: !141, line: 245, baseType: !13619, size: 64)
!13663 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !13660, file: !141, line: 246, baseType: !13664, size: 32, offset: 64)
!13664 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !13665)
!13665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13666, size: 32)
!13666 = !DISubroutineType(types: !13667)
!13667 = !{null, !13668}
!13668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13660, size: 32)
!13669 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !13660, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!13670 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !13610, file: !163, line: 250, baseType: !13671, size: 288, offset: 384)
!13671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !13672)
!13672 = !{!13673, !13674, !13675, !13676, !13677, !13678, !13679, !13680, !13681}
!13673 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !13671, file: !214, line: 26, baseType: !108, size: 32)
!13674 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !13671, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!13675 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !13671, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!13676 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !13671, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!13677 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !13671, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!13678 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !13671, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!13679 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !13671, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!13680 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !13671, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!13681 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !13671, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!13682 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !13610, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!13683 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !13610, file: !163, line: 256, baseType: !13641, size: 64, offset: 704)
!13684 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !13610, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!13685 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !13610, file: !163, line: 300, baseType: !13686, size: 96, offset: 800)
!13686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !13687)
!13687 = !{!13688, !13689, !13690}
!13688 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !13686, file: !163, line: 153, baseType: !22, size: 32)
!13689 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13686, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!13690 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !13686, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!13691 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !13610, file: !163, line: 325, baseType: !13692, size: 32, offset: 896)
!13692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13693, size: 32)
!13693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !13694)
!13694 = !{!13695, !13701, !13702}
!13695 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13693, file: !137, line: 5074, baseType: !13696, size: 96)
!13696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !13697)
!13697 = !{!13698, !13699, !13700}
!13698 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13696, file: !240, line: 57, baseType: !243, size: 32)
!13699 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !13696, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!13700 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !13696, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!13701 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13693, file: !137, line: 5075, baseType: !13641, size: 64, offset: 96)
!13702 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13693, file: !137, line: 5076, baseType: !13703, offset: 160)
!13703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!13704 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !13610, file: !163, line: 343, baseType: !13705, size: 64, offset: 928)
!13705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !13706)
!13706 = !{!13707, !13708}
!13707 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !13705, file: !214, line: 63, baseType: !108, size: 32)
!13708 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !13705, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!13709 = !{!13710, !13711, !13712}
!13710 = !DILocalVariable(name: "reason", arg: 1, scope: !13562, file: !3223, line: 209, type: !32)
!13711 = !DILocalVariable(name: "esf", arg: 2, scope: !13562, file: !3223, line: 209, type: !13565)
!13712 = !DILocalVariable(name: "thread", arg: 3, scope: !13562, file: !3223, line: 210, type: !13609)
!13713 = !DILocation(line: 0, scope: !13562)
!13714 = !DILocation(line: 212, column: 1, scope: !13562)
!13715 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3223, file: !3223, line: 214, type: !13716, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3219, retainedNodes: !13718)
!13716 = !DISubroutineType(types: !13717)
!13717 = !{null, !22, !22}
!13718 = !{!13719, !13720}
!13719 = !DILocalVariable(name: "start_addr", arg: 1, scope: !13715, file: !3223, line: 214, type: !22)
!13720 = !DILocalVariable(name: "end_addr", arg: 2, scope: !13715, file: !3223, line: 214, type: !22)
!13721 = !DILocation(line: 0, scope: !13715)
!13722 = !DILocation(line: 216, column: 1, scope: !13715)
!13723 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3223, file: !3223, line: 218, type: !13724, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3219, retainedNodes: !13726)
!13724 = !DISubroutineType(types: !13725)
!13725 = !{null, !379, !132}
!13726 = !{!13727, !13728}
!13727 = !DILocalVariable(name: "buf", arg: 1, scope: !13723, file: !3223, line: 218, type: !379)
!13728 = !DILocalVariable(name: "buflen", arg: 2, scope: !13723, file: !3223, line: 218, type: !132)
!13729 = !DILocation(line: 0, scope: !13723)
!13730 = !DILocation(line: 220, column: 1, scope: !13723)
!13731 = distinct !DISubprogram(name: "coredump_query", scope: !3223, file: !3223, line: 222, type: !13732, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3219, retainedNodes: !13734)
!13732 = !DISubroutineType(types: !13733)
!13733 = !{!103, !3222, !102}
!13734 = !{!13735, !13736}
!13735 = !DILocalVariable(name: "query_id", arg: 1, scope: !13731, file: !3223, line: 222, type: !3222)
!13736 = !DILocalVariable(name: "arg", arg: 2, scope: !13731, file: !3223, line: 222, type: !102)
!13737 = !DILocation(line: 0, scope: !13731)
!13738 = !DILocation(line: 224, column: 2, scope: !13731)
!13739 = distinct !DISubprogram(name: "coredump_cmd", scope: !3223, file: !3223, line: 227, type: !13740, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3219, retainedNodes: !13742)
!13740 = !DISubroutineType(types: !13741)
!13741 = !{!103, !3229, !102}
!13742 = !{!13743, !13744}
!13743 = !DILocalVariable(name: "query_id", arg: 1, scope: !13739, file: !3223, line: 227, type: !3229)
!13744 = !DILocalVariable(name: "arg", arg: 2, scope: !13739, file: !3223, line: 227, type: !102)
!13745 = !DILocation(line: 0, scope: !13739)
!13746 = !DILocation(line: 229, column: 2, scope: !13739)
!13747 = distinct !DISubprogram(name: "arch_system_halt", scope: !13748, file: !13748, line: 23, type: !7007, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3219, retainedNodes: !13749)
!13748 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13749 = !{!13750}
!13750 = !DILocalVariable(name: "reason", arg: 1, scope: !13747, file: !13748, line: 23, type: !32)
!13751 = !DILocation(line: 0, scope: !13747)
!13752 = !DILocation(line: 55, column: 2, scope: !13753, inlinedAt: !13757)
!13753 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6996, file: !6996, line: 42, type: !6997, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3219, retainedNodes: !13754)
!13754 = !{!13755, !13756}
!13755 = !DILocalVariable(name: "key", scope: !13753, file: !6996, line: 44, type: !32)
!13756 = !DILocalVariable(name: "tmp", scope: !13753, file: !6996, line: 53, type: !32)
!13757 = distinct !DILocation(line: 31, column: 8, scope: !13747)
!13758 = !{i64 2225357}
!13759 = !DILocation(line: 0, scope: !13753, inlinedAt: !13757)
!13760 = !DILocation(line: 32, column: 2, scope: !13747)
!13761 = !DILocation(line: 32, column: 2, scope: !13762)
!13762 = distinct !DILexicalBlock(scope: !13763, file: !13748, line: 32, column: 2)
!13763 = distinct !DILexicalBlock(scope: !13747, file: !13748, line: 32, column: 2)
!13764 = distinct !{!13764, !13765, !13766}
!13765 = !DILocation(line: 32, column: 2, scope: !13763)
!13766 = !DILocation(line: 34, column: 2, scope: !13763)
!13767 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !13748, file: !13748, line: 39, type: !13768, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3219, retainedNodes: !13770)
!13768 = !DISubroutineType(types: !13769)
!13769 = !{null, !32, !13565}
!13770 = !{!13771, !13772}
!13771 = !DILocalVariable(name: "reason", arg: 1, scope: !13767, file: !13748, line: 39, type: !32)
!13772 = !DILocalVariable(name: "esf", arg: 2, scope: !13767, file: !13748, line: 40, type: !13565)
!13773 = !DILocation(line: 0, scope: !13767)
!13774 = !DILocation(line: 45, column: 2, scope: !13775)
!13775 = distinct !DILexicalBlock(scope: !13776, file: !13748, line: 45, column: 2)
!13776 = distinct !DILexicalBlock(scope: !13777, file: !13748, line: 45, column: 2)
!13777 = distinct !DILexicalBlock(scope: !13778, file: !13748, line: 45, column: 2)
!13778 = distinct !DILexicalBlock(scope: !13767, file: !13748, line: 45, column: 2)
!13779 = !DILocation(line: 46, column: 2, scope: !13767)
!13780 = distinct !DISubprogram(name: "k_fatal_halt", scope: !13748, file: !13748, line: 81, type: !7007, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3219, retainedNodes: !13781)
!13781 = !{!13782}
!13782 = !DILocalVariable(name: "reason", arg: 1, scope: !13780, file: !13748, line: 81, type: !32)
!13783 = !DILocation(line: 0, scope: !13780)
!13784 = !DILocation(line: 83, column: 2, scope: !13780)
!13785 = distinct !DISubprogram(name: "z_fatal_error", scope: !13748, file: !13748, line: 96, type: !13768, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3219, retainedNodes: !13786)
!13786 = !{!13787, !13788, !13789, !13790}
!13787 = !DILocalVariable(name: "reason", arg: 1, scope: !13785, file: !13748, line: 96, type: !32)
!13788 = !DILocalVariable(name: "esf", arg: 2, scope: !13785, file: !13748, line: 96, type: !13565)
!13789 = !DILocalVariable(name: "key", scope: !13785, file: !13748, line: 102, type: !32)
!13790 = !DILocalVariable(name: "thread", scope: !13785, file: !13748, line: 103, type: !13609)
!13791 = !DILocation(line: 0, scope: !13785)
!13792 = !DILocation(line: 55, column: 2, scope: !13753, inlinedAt: !13793)
!13793 = distinct !DILocation(line: 102, column: 21, scope: !13785)
!13794 = !DILocation(line: 0, scope: !13753, inlinedAt: !13793)
!13795 = !DILocation(line: 104, column: 4, scope: !13785)
!13796 = !DILocation(line: 109, column: 2, scope: !13797)
!13797 = distinct !DILexicalBlock(scope: !13798, file: !13748, line: 109, column: 2)
!13798 = distinct !DILexicalBlock(scope: !13799, file: !13748, line: 109, column: 2)
!13799 = distinct !DILexicalBlock(scope: !13800, file: !13748, line: 109, column: 2)
!13800 = distinct !DILexicalBlock(scope: !13785, file: !13748, line: 109, column: 2)
!13801 = !DILocation(line: 119, column: 11, scope: !13802)
!13802 = distinct !DILexicalBlock(scope: !13785, file: !13748, line: 119, column: 6)
!13803 = !DILocation(line: 119, column: 20, scope: !13802)
!13804 = !DILocalVariable(name: "esf", arg: 1, scope: !13805, file: !8330, line: 71, type: !13565)
!13805 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !8330, file: !8330, line: 71, type: !13806, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3219, retainedNodes: !13808)
!13806 = !DISubroutineType(types: !13807)
!13807 = !{!131, !13565}
!13808 = !{!13804}
!13809 = !DILocation(line: 0, scope: !13805, inlinedAt: !13810)
!13810 = distinct !DILocation(line: 119, column: 23, scope: !13802)
!13811 = !DILocation(line: 73, column: 21, scope: !13805, inlinedAt: !13810)
!13812 = !DILocation(line: 73, column: 26, scope: !13805, inlinedAt: !13810)
!13813 = !DILocation(line: 73, column: 9, scope: !13805, inlinedAt: !13810)
!13814 = !DILocation(line: 119, column: 6, scope: !13785)
!13815 = !DILocation(line: 120, column: 3, scope: !13816)
!13816 = distinct !DILexicalBlock(scope: !13817, file: !13748, line: 120, column: 3)
!13817 = distinct !DILexicalBlock(scope: !13818, file: !13748, line: 120, column: 3)
!13818 = distinct !DILexicalBlock(scope: !13819, file: !13748, line: 120, column: 3)
!13819 = distinct !DILexicalBlock(scope: !13820, file: !13748, line: 120, column: 3)
!13820 = distinct !DILexicalBlock(scope: !13802, file: !13748, line: 119, column: 57)
!13821 = !DILocation(line: 121, column: 2, scope: !13820)
!13822 = !DILocation(line: 124, column: 2, scope: !13823)
!13823 = distinct !DILexicalBlock(scope: !13824, file: !13748, line: 124, column: 2)
!13824 = distinct !DILexicalBlock(scope: !13825, file: !13748, line: 124, column: 2)
!13825 = distinct !DILexicalBlock(scope: !13826, file: !13748, line: 124, column: 2)
!13826 = distinct !DILexicalBlock(scope: !13785, file: !13748, line: 124, column: 2)
!13827 = !DILocation(line: 131, column: 2, scope: !13785)
!13828 = !DILocation(line: 0, scope: !13805, inlinedAt: !13829)
!13829 = distinct !DILocation(line: 151, column: 24, scope: !13830)
!13830 = distinct !DILexicalBlock(scope: !13831, file: !13748, line: 151, column: 7)
!13831 = distinct !DILexicalBlock(scope: !13832, file: !13748, line: 146, column: 32)
!13832 = distinct !DILexicalBlock(scope: !13785, file: !13748, line: 146, column: 6)
!13833 = !DILocation(line: 151, column: 7, scope: !13831)
!13834 = !DILocation(line: 151, column: 21, scope: !13830)
!13835 = !DILocalVariable(name: "key", arg: 1, scope: !13836, file: !6996, line: 84, type: !32)
!13836 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6996, file: !6996, line: 84, type: !7007, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3219, retainedNodes: !13837)
!13837 = !{!13835}
!13838 = !DILocation(line: 0, scope: !13836, inlinedAt: !13839)
!13839 = distinct !DILocation(line: 186, column: 2, scope: !13785)
!13840 = !DILocation(line: 95, column: 2, scope: !13836, inlinedAt: !13839)
!13841 = !{i64 2226174}
!13842 = !DILocation(line: 189, column: 3, scope: !13843)
!13843 = distinct !DILexicalBlock(scope: !13844, file: !13748, line: 188, column: 41)
!13844 = distinct !DILexicalBlock(scope: !13785, file: !13748, line: 188, column: 6)
!13845 = !DILocation(line: 191, column: 1, scope: !13785)
!13846 = distinct !DISubprogram(name: "k_current_get", scope: !137, file: !137, line: 530, type: !13847, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3219, retainedNodes: !251)
!13847 = !DISubroutineType(types: !13848)
!13848 = !{!13849}
!13849 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !163, line: 347, baseType: !13609)
!13850 = !DILocation(line: 535, column: 9, scope: !13846)
!13851 = !DILocation(line: 535, column: 2, scope: !13846)
!13852 = distinct !DISubprogram(name: "reason_to_str", scope: !13748, file: !13748, line: 62, type: !13853, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3219, retainedNodes: !13855)
!13853 = !DISubroutineType(types: !13854)
!13854 = !{!337, !32}
!13855 = !{!13856}
!13856 = !DILocalVariable(name: "reason", arg: 1, scope: !13852, file: !13748, line: 62, type: !32)
!13857 = !DILocation(line: 0, scope: !13852)
!13858 = !DILocation(line: 64, column: 2, scope: !13852)
!13859 = !DILocation(line: 0, scope: !13860)
!13860 = distinct !DILexicalBlock(scope: !13852, file: !13748, line: 64, column: 18)
!13861 = !DILocation(line: 78, column: 1, scope: !13852)
!13862 = distinct !DISubprogram(name: "thread_name_get", scope: !13748, file: !13748, line: 51, type: !13863, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3219, retainedNodes: !13865)
!13863 = !DISubroutineType(types: !13864)
!13864 = !{!337, !13609}
!13865 = !{!13866, !13867}
!13866 = !DILocalVariable(name: "thread", arg: 1, scope: !13862, file: !13748, line: 51, type: !13609)
!13867 = !DILocalVariable(name: "thread_name", scope: !13862, file: !13748, line: 53, type: !337)
!13868 = !DILocation(line: 0, scope: !13862)
!13869 = !DILocation(line: 53, column: 36, scope: !13862)
!13870 = !DILocation(line: 53, column: 28, scope: !13862)
!13871 = !DILocation(line: 53, column: 47, scope: !13862)
!13872 = !DILocation(line: 55, column: 19, scope: !13873)
!13873 = distinct !DILexicalBlock(scope: !13862, file: !13748, line: 55, column: 6)
!13874 = !DILocation(line: 55, column: 28, scope: !13873)
!13875 = !DILocation(line: 55, column: 32, scope: !13873)
!13876 = !DILocation(line: 55, column: 47, scope: !13873)
!13877 = !DILocation(line: 55, column: 6, scope: !13862)
!13878 = !DILocation(line: 57, column: 2, scope: !13879)
!13879 = distinct !DILexicalBlock(scope: !13873, file: !13748, line: 55, column: 57)
!13880 = !DILocation(line: 59, column: 2, scope: !13862)
!13881 = distinct !DISubprogram(name: "k_thread_abort", scope: !3618, file: !3618, line: 188, type: !13882, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3219, retainedNodes: !13884)
!13882 = !DISubroutineType(types: !13883)
!13883 = !{null, !13849}
!13884 = !{!13885}
!13885 = !DILocalVariable(name: "thread", arg: 1, scope: !13881, file: !3618, line: 188, type: !13849)
!13886 = !DILocation(line: 0, scope: !13881)
!13887 = !DILocation(line: 197, column: 2, scope: !13888)
!13888 = distinct !DILexicalBlock(scope: !13881, file: !3618, line: 197, column: 2)
!13889 = !{i64 2154843122}
!13890 = !DILocation(line: 198, column: 2, scope: !13881)
!13891 = !DILocation(line: 199, column: 1, scope: !13881)
!13892 = distinct !DISubprogram(name: "z_current_get", scope: !3618, file: !3618, line: 173, type: !13847, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3219, retainedNodes: !251)
!13893 = !DILocation(line: 180, column: 2, scope: !13894)
!13894 = distinct !DILexicalBlock(scope: !13892, file: !3618, line: 180, column: 2)
!13895 = !{i64 2154843054}
!13896 = !DILocation(line: 181, column: 9, scope: !13892)
!13897 = !DILocation(line: 181, column: 2, scope: !13892)
!13898 = distinct !DISubprogram(name: "z_early_memset", scope: !1933, file: !1933, line: 108, type: !13899, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !13901)
!13899 = !DISubroutineType(types: !13900)
!13900 = !{null, !102, !103, !132}
!13901 = !{!13902, !13903, !13904}
!13902 = !DILocalVariable(name: "dst", arg: 1, scope: !13898, file: !1933, line: 108, type: !102)
!13903 = !DILocalVariable(name: "c", arg: 2, scope: !13898, file: !1933, line: 108, type: !103)
!13904 = !DILocalVariable(name: "n", arg: 3, scope: !13898, file: !1933, line: 108, type: !132)
!13905 = !DILocation(line: 0, scope: !13898)
!13906 = !DILocation(line: 110, column: 9, scope: !13898)
!13907 = !DILocation(line: 111, column: 1, scope: !13898)
!13908 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1933, file: !1933, line: 121, type: !13909, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !13911)
!13909 = !DISubroutineType(types: !13910)
!13910 = !{null, !102, !13, !132}
!13911 = !{!13912, !13913, !13914}
!13912 = !DILocalVariable(name: "dst", arg: 1, scope: !13908, file: !1933, line: 121, type: !102)
!13913 = !DILocalVariable(name: "src", arg: 2, scope: !13908, file: !1933, line: 121, type: !13)
!13914 = !DILocalVariable(name: "n", arg: 3, scope: !13908, file: !1933, line: 121, type: !132)
!13915 = !DILocation(line: 0, scope: !13908)
!13916 = !DILocation(line: 123, column: 9, scope: !13908)
!13917 = !DILocation(line: 124, column: 1, scope: !13908)
!13918 = distinct !DISubprogram(name: "z_bss_zero", scope: !1933, file: !1933, line: 132, type: !334, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !251)
!13919 = !DILocation(line: 143, column: 2, scope: !13918)
!13920 = !DILocation(line: 145, column: 2, scope: !13918)
!13921 = !DILocation(line: 168, column: 1, scope: !13918)
!13922 = distinct !DISubprogram(name: "z_init_cpu", scope: !1933, file: !1933, line: 372, type: !9573, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !13923)
!13923 = !{!13924}
!13924 = !DILocalVariable(name: "id", arg: 1, scope: !13922, file: !1933, line: 372, type: !103)
!13925 = !DILocation(line: 0, scope: !13922)
!13926 = !DILocation(line: 374, column: 2, scope: !13922)
!13927 = !DILocation(line: 375, column: 34, scope: !13922)
!13928 = !DILocation(line: 375, column: 19, scope: !13922)
!13929 = !DILocation(line: 375, column: 31, scope: !13922)
!13930 = !DILocation(line: 376, column: 24, scope: !13922)
!13931 = !DILocation(line: 376, column: 19, scope: !13922)
!13932 = !DILocation(line: 376, column: 22, scope: !13922)
!13933 = !DILocation(line: 378, column: 26, scope: !13922)
!13934 = !DILocation(line: 378, column: 4, scope: !13922)
!13935 = !DILocation(line: 378, column: 50, scope: !13922)
!13936 = !DILocation(line: 377, column: 19, scope: !13922)
!13937 = !DILocation(line: 377, column: 29, scope: !13922)
!13938 = !DILocation(line: 384, column: 1, scope: !13922)
!13939 = distinct !DISubprogram(name: "init_idle_thread", scope: !1933, file: !1933, line: 343, type: !9573, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !13940)
!13940 = !{!13941, !13942, !13943, !13946}
!13941 = !DILocalVariable(name: "i", arg: 1, scope: !13939, file: !1933, line: 343, type: !103)
!13942 = !DILocalVariable(name: "thread", scope: !13939, file: !1933, line: 345, type: !2025)
!13943 = !DILocalVariable(name: "stack", scope: !13939, file: !1933, line: 346, type: !13944)
!13944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13945, size: 32)
!13945 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !314, line: 44, baseType: !2139)
!13946 = !DILocalVariable(name: "tname", scope: !13939, file: !1933, line: 358, type: !277)
!13947 = !DILocation(line: 0, scope: !13939)
!13948 = !DILocation(line: 345, column: 29, scope: !13939)
!13949 = !DILocation(line: 346, column: 28, scope: !13939)
!13950 = !DILocation(line: 362, column: 37, scope: !13939)
!13951 = !DILocation(line: 362, column: 36, scope: !13939)
!13952 = !DILocation(line: 361, column: 2, scope: !13939)
!13953 = !DILocation(line: 365, column: 2, scope: !13939)
!13954 = !DILocation(line: 370, column: 1, scope: !13939)
!13955 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !316, file: !316, line: 331, type: !13956, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !13958)
!13956 = !DISubroutineType(types: !13957)
!13957 = !{!277, !13944}
!13958 = !{!13959}
!13959 = !DILocalVariable(name: "sym", arg: 1, scope: !13955, file: !316, line: 331, type: !13944)
!13960 = !DILocation(line: 0, scope: !13955)
!13961 = !DILocation(line: 333, column: 21, scope: !13955)
!13962 = !DILocation(line: 333, column: 2, scope: !13955)
!13963 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13964, file: !13964, line: 155, type: !13965, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !13967)
!13964 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13965 = !DISubroutineType(types: !13966)
!13966 = !{null, !2025}
!13967 = !{!13968}
!13968 = !DILocalVariable(name: "thread", arg: 1, scope: !13963, file: !13964, line: 155, type: !2025)
!13969 = !DILocation(line: 0, scope: !13963)
!13970 = !DILocation(line: 157, column: 15, scope: !13963)
!13971 = !DILocation(line: 157, column: 28, scope: !13963)
!13972 = !DILocation(line: 158, column: 1, scope: !13963)
!13973 = distinct !DISubprogram(name: "z_cstart", scope: !1933, file: !1933, line: 501, type: !334, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !13974)
!13974 = !{!13975}
!13975 = !DILocalVariable(name: "dummy_thread", scope: !13973, file: !1933, line: 518, type: !2026)
!13976 = !DILocation(line: 507, column: 2, scope: !13973)
!13977 = !DILocation(line: 43, column: 14, scope: !13978, inlinedAt: !13982)
!13978 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !13979, file: !13979, line: 40, type: !334, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !13980)
!13979 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13980 = !{!13981}
!13981 = !DILocalVariable(name: "msp", scope: !13978, file: !13979, line: 42, type: !108)
!13982 = distinct !DILocation(line: 44, column: 2, scope: !13983, inlinedAt: !13985)
!13983 = distinct !DISubprogram(name: "arch_kernel_init", scope: !13984, file: !13984, line: 42, type: !334, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !251)
!13984 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13985 = distinct !DILocation(line: 510, column: 2, scope: !13973)
!13986 = !DILocation(line: 43, column: 3, scope: !13978, inlinedAt: !13982)
!13987 = !DILocation(line: 43, column: 60, scope: !13978, inlinedAt: !13982)
!13988 = !DILocation(line: 0, scope: !13978, inlinedAt: !13982)
!13989 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !13990, file: !7314, line: 1153, type: !108)
!13990 = distinct !DISubprogram(name: "__set_MSP", scope: !7314, file: !7314, line: 1153, type: !7403, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !13991)
!13991 = !{!13989}
!13992 = !DILocation(line: 0, scope: !13990, inlinedAt: !13993)
!13993 = distinct !DILocation(line: 46, column: 2, scope: !13978, inlinedAt: !13982)
!13994 = !DILocation(line: 1155, column: 3, scope: !13990, inlinedAt: !13993)
!13995 = !{i64 3562475}
!13996 = !DILocation(line: 62, column: 11, scope: !13978, inlinedAt: !13982)
!13997 = !DILocation(line: 102, column: 2, scope: !13998, inlinedAt: !13999)
!13998 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !8330, file: !8330, line: 97, type: !334, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !251)
!13999 = distinct !DILocation(line: 45, column: 2, scope: !13983, inlinedAt: !13985)
!14000 = !DILocation(line: 108, column: 2, scope: !13998, inlinedAt: !13999)
!14001 = !DILocation(line: 112, column: 2, scope: !13998, inlinedAt: !13999)
!14002 = !DILocation(line: 113, column: 2, scope: !13998, inlinedAt: !13999)
!14003 = !DILocation(line: 114, column: 2, scope: !13998, inlinedAt: !13999)
!14004 = !DILocation(line: 116, column: 2, scope: !13998, inlinedAt: !13999)
!14005 = !DILocation(line: 123, column: 13, scope: !13998, inlinedAt: !13999)
!14006 = !DILocation(line: 46, column: 2, scope: !13983, inlinedAt: !13985)
!14007 = !DILocation(line: 47, column: 2, scope: !13983, inlinedAt: !13985)
!14008 = !DILocation(line: 174, column: 12, scope: !14009, inlinedAt: !14010)
!14009 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !8330, file: !8330, line: 169, type: !334, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !251)
!14010 = distinct !DILocation(line: 48, column: 2, scope: !13983, inlinedAt: !13985)
!14011 = !DILocation(line: 179, column: 12, scope: !14009, inlinedAt: !14010)
!14012 = !DILocation(line: 50, column: 2, scope: !13983, inlinedAt: !13985)
!14013 = !DILocation(line: 57, column: 2, scope: !13983, inlinedAt: !13985)
!14014 = !DILocation(line: 518, column: 2, scope: !13973)
!14015 = !DILocation(line: 518, column: 18, scope: !13973)
!14016 = !DILocation(line: 520, column: 2, scope: !13973)
!14017 = !DILocation(line: 523, column: 2, scope: !13973)
!14018 = !DILocation(line: 526, column: 2, scope: !13973)
!14019 = !DILocation(line: 527, column: 2, scope: !13973)
!14020 = !DILocation(line: 543, column: 24, scope: !13973)
!14021 = !DILocation(line: 543, column: 2, scope: !13973)
!14022 = !DILocation(line: 0, scope: !2161)
!14023 = !DILocation(line: 246, column: 15, scope: !2179)
!14024 = !DILocation(line: 246, column: 36, scope: !2178)
!14025 = !DILocation(line: 246, column: 2, scope: !2179)
!14026 = !DILocation(line: 247, column: 37, scope: !2177)
!14027 = !DILocation(line: 0, scope: !2177)
!14028 = !DILocation(line: 248, column: 19, scope: !2177)
!14029 = !DILocation(line: 248, column: 12, scope: !2177)
!14030 = !DILocation(line: 250, column: 11, scope: !14031)
!14031 = distinct !DILexicalBlock(scope: !2177, file: !1933, line: 250, column: 7)
!14032 = !DILocation(line: 250, column: 7, scope: !2177)
!14033 = !DILocation(line: 254, column: 11, scope: !14034)
!14034 = distinct !DILexicalBlock(scope: !14035, file: !1933, line: 254, column: 8)
!14035 = distinct !DILexicalBlock(scope: !14031, file: !1933, line: 250, column: 20)
!14036 = !DILocation(line: 254, column: 8, scope: !14035)
!14037 = !DILocation(line: 255, column: 9, scope: !14038)
!14038 = distinct !DILexicalBlock(scope: !14034, file: !1933, line: 254, column: 17)
!14039 = !DILocation(line: 258, column: 9, scope: !14038)
!14040 = !DILocation(line: 261, column: 28, scope: !14038)
!14041 = !DILocation(line: 261, column: 10, scope: !14038)
!14042 = !DILocation(line: 261, column: 17, scope: !14038)
!14043 = !DILocation(line: 261, column: 26, scope: !14038)
!14044 = !DILocation(line: 262, column: 4, scope: !14038)
!14045 = !DILocation(line: 263, column: 9, scope: !14035)
!14046 = !DILocation(line: 263, column: 16, scope: !14035)
!14047 = !DILocation(line: 263, column: 28, scope: !14035)
!14048 = !DILocation(line: 264, column: 3, scope: !14035)
!14049 = !DILocation(line: 246, column: 60, scope: !2178)
!14050 = distinct !{!14050, !14025, !14051}
!14051 = !DILocation(line: 265, column: 2, scope: !2179)
!14052 = !DILocation(line: 266, column: 1, scope: !2161)
!14053 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !624, file: !624, line: 1814, type: !7348, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !14054)
!14054 = !{!14055, !14056}
!14055 = !DILocalVariable(name: "IRQn", arg: 1, scope: !14053, file: !624, line: 1814, type: !892)
!14056 = !DILocalVariable(name: "priority", arg: 2, scope: !14053, file: !624, line: 1814, type: !108)
!14057 = !DILocation(line: 0, scope: !14053)
!14058 = !DILocation(line: 1822, column: 48, scope: !14059)
!14059 = distinct !DILexicalBlock(scope: !14060, file: !624, line: 1821, column: 3)
!14060 = distinct !DILexicalBlock(scope: !14053, file: !624, line: 1816, column: 7)
!14061 = !DILocation(line: 1822, column: 32, scope: !14059)
!14062 = !DILocation(line: 1822, column: 40, scope: !14059)
!14063 = !DILocation(line: 1822, column: 5, scope: !14059)
!14064 = !DILocation(line: 1822, column: 46, scope: !14059)
!14065 = !DILocation(line: 1824, column: 1, scope: !14053)
!14066 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !13984, file: !13984, line: 32, type: !334, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!14067 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !14068, file: !14068, line: 215, type: !13965, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !14069)
!14068 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14069 = !{!14070}
!14070 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !14067, file: !14068, line: 215, type: !2025)
!14071 = !DILocation(line: 0, scope: !14067)
!14072 = !DILocation(line: 217, column: 21, scope: !14067)
!14073 = !DILocation(line: 217, column: 34, scope: !14067)
!14074 = !DILocation(line: 221, column: 21, scope: !14067)
!14075 = !DILocation(line: 221, column: 34, scope: !14067)
!14076 = !DILocation(line: 223, column: 27, scope: !14067)
!14077 = !DILocation(line: 223, column: 33, scope: !14067)
!14078 = !DILocation(line: 224, column: 27, scope: !14067)
!14079 = !DILocation(line: 224, column: 32, scope: !14067)
!14080 = !DILocation(line: 230, column: 2, scope: !14067)
!14081 = !DILocation(line: 239, column: 24, scope: !14067)
!14082 = !DILocation(line: 240, column: 1, scope: !14067)
!14083 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1933, file: !1933, line: 399, type: !14084, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !14086)
!14084 = !DISubroutineType(types: !14085)
!14085 = !{!277}
!14086 = !{!14087}
!14087 = !DILocalVariable(name: "stack_ptr", scope: !14083, file: !1933, line: 401, type: !277)
!14088 = !DILocation(line: 404, column: 2, scope: !14083)
!14089 = !DILocation(line: 416, column: 24, scope: !14083)
!14090 = !DILocation(line: 418, column: 14, scope: !14083)
!14091 = !DILocation(line: 0, scope: !14083)
!14092 = !DILocation(line: 423, column: 2, scope: !14083)
!14093 = !DILocation(line: 424, column: 2, scope: !14083)
!14094 = !DILocation(line: 426, column: 2, scope: !14083)
!14095 = !DILocation(line: 428, column: 2, scope: !14083)
!14096 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1933, file: !1933, line: 432, type: !14097, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !14099)
!14097 = !DISubroutineType(types: !14098)
!14098 = !{null, !277}
!14099 = !{!14100}
!14100 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !14096, file: !1933, line: 432, type: !277)
!14101 = !DILocation(line: 0, scope: !14096)
!14102 = !DILocation(line: 435, column: 2, scope: !14096)
!14103 = !DILocation(line: 445, column: 2, scope: !14096)
!14104 = distinct !DISubprogram(name: "bg_thread_main", scope: !1933, file: !1933, line: 277, type: !323, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !14105)
!14105 = !{!14106, !14107, !14108}
!14106 = !DILocalVariable(name: "unused1", arg: 1, scope: !14104, file: !1933, line: 277, type: !102)
!14107 = !DILocalVariable(name: "unused2", arg: 2, scope: !14104, file: !1933, line: 277, type: !102)
!14108 = !DILocalVariable(name: "unused3", arg: 3, scope: !14104, file: !1933, line: 277, type: !102)
!14109 = !DILocation(line: 0, scope: !14104)
!14110 = !DILocation(line: 291, column: 20, scope: !14104)
!14111 = !DILocation(line: 293, column: 2, scope: !14104)
!14112 = !DILocation(line: 297, column: 2, scope: !14104)
!14113 = !DILocation(line: 305, column: 2, scope: !14104)
!14114 = !DILocation(line: 307, column: 2, scope: !14104)
!14115 = !DILocation(line: 330, column: 8, scope: !14104)
!14116 = !DILocation(line: 333, column: 34, scope: !14104)
!14117 = !DILocation(line: 339, column: 1, scope: !14104)
!14118 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2190, file: !2190, line: 45, type: !14119, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !14127)
!14119 = !DISubroutineType(types: !14120)
!14120 = !{null, !14121, !102}
!14121 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !137, line: 103, baseType: !14122)
!14122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14123, size: 32)
!14123 = !DISubroutineType(types: !14124)
!14124 = !{null, !14125, !102}
!14125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14126, size: 32)
!14126 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2195)
!14127 = !{!14128, !14129}
!14128 = !DILocalVariable(name: "user_cb", arg: 1, scope: !14118, file: !2190, line: 45, type: !14121)
!14129 = !DILocalVariable(name: "user_data", arg: 2, scope: !14118, file: !2190, line: 45, type: !102)
!14130 = !DILocation(line: 0, scope: !14118)
!14131 = !DILocation(line: 71, column: 1, scope: !14118)
!14132 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2190, file: !2190, line: 73, type: !14119, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !14133)
!14133 = !{!14134, !14135}
!14134 = !DILocalVariable(name: "user_cb", arg: 1, scope: !14132, file: !2190, line: 73, type: !14121)
!14135 = !DILocalVariable(name: "user_data", arg: 2, scope: !14132, file: !2190, line: 73, type: !102)
!14136 = !DILocation(line: 0, scope: !14132)
!14137 = !DILocation(line: 95, column: 1, scope: !14132)
!14138 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2190, file: !2190, line: 97, type: !8331, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !251)
!14139 = !DILocation(line: 1031, column: 3, scope: !14140, inlinedAt: !14143)
!14140 = distinct !DISubprogram(name: "__get_IPSR", scope: !7314, file: !7314, line: 1027, type: !3598, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !14141)
!14141 = !{!14142}
!14142 = !DILocalVariable(name: "result", scope: !14140, file: !7314, line: 1029, type: !108)
!14143 = distinct !DILocation(line: 48, column: 10, scope: !14144, inlinedAt: !14145)
!14144 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8330, file: !8330, line: 46, type: !8331, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !251)
!14145 = distinct !DILocation(line: 99, column: 9, scope: !14138)
!14146 = !{i64 3568126}
!14147 = !DILocation(line: 0, scope: !14140, inlinedAt: !14143)
!14148 = !DILocation(line: 48, column: 9, scope: !14144, inlinedAt: !14145)
!14149 = !DILocation(line: 99, column: 2, scope: !14138)
!14150 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2190, file: !2190, line: 106, type: !334, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !251)
!14151 = !DILocation(line: 108, column: 2, scope: !14150)
!14152 = !DILocation(line: 108, column: 17, scope: !14150)
!14153 = !DILocation(line: 108, column: 30, scope: !14150)
!14154 = !DILocation(line: 109, column: 1, scope: !14150)
!14155 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2190, file: !2190, line: 116, type: !334, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !251)
!14156 = !DILocation(line: 118, column: 2, scope: !14155)
!14157 = !DILocation(line: 118, column: 17, scope: !14155)
!14158 = !DILocation(line: 118, column: 30, scope: !14155)
!14159 = !DILocation(line: 119, column: 1, scope: !14155)
!14160 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2190, file: !2190, line: 126, type: !8331, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !251)
!14161 = !DILocation(line: 128, column: 10, scope: !14160)
!14162 = !DILocation(line: 128, column: 25, scope: !14160)
!14163 = !DILocation(line: 128, column: 38, scope: !14160)
!14164 = !DILocation(line: 128, column: 53, scope: !14160)
!14165 = !DILocation(line: 128, column: 2, scope: !14160)
!14166 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2190, file: !2190, line: 187, type: !14167, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !14169)
!14167 = !DISubroutineType(types: !14168)
!14168 = !{!103, !2194, !337}
!14169 = !{!14170, !14171}
!14170 = !DILocalVariable(name: "thread", arg: 1, scope: !14166, file: !2190, line: 187, type: !2194)
!14171 = !DILocalVariable(name: "value", arg: 2, scope: !14166, file: !2190, line: 187, type: !337)
!14172 = !DILocation(line: 0, scope: !14166)
!14173 = !DILocation(line: 206, column: 2, scope: !14166)
!14174 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2190, file: !2190, line: 238, type: !14175, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !14177)
!14175 = !DISubroutineType(types: !14176)
!14176 = !{!337, !2194}
!14177 = !{!14178}
!14178 = !DILocalVariable(name: "thread", arg: 1, scope: !14174, file: !2190, line: 238, type: !2194)
!14179 = !DILocation(line: 0, scope: !14174)
!14180 = !DILocation(line: 244, column: 2, scope: !14174)
!14181 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2190, file: !2190, line: 248, type: !14182, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !14184)
!14182 = !DISubroutineType(types: !14183)
!14183 = !{!103, !2193, !277, !132}
!14184 = !{!14185, !14186, !14187}
!14185 = !DILocalVariable(name: "thread", arg: 1, scope: !14181, file: !2190, line: 248, type: !2193)
!14186 = !DILocalVariable(name: "buf", arg: 2, scope: !14181, file: !2190, line: 248, type: !277)
!14187 = !DILocalVariable(name: "size", arg: 3, scope: !14181, file: !2190, line: 248, type: !132)
!14188 = !DILocation(line: 0, scope: !14181)
!14189 = !DILocation(line: 257, column: 2, scope: !14181)
!14190 = !DILocation(line: 0, scope: !2189)
!14191 = !DILocation(line: 281, column: 11, scope: !14192)
!14192 = distinct !DILexicalBlock(scope: !2189, file: !2190, line: 281, column: 6)
!14193 = !DILocation(line: 281, column: 20, scope: !14192)
!14194 = !DILocation(line: 275, column: 45, scope: !2189)
!14195 = !DILocation(line: 285, column: 10, scope: !2189)
!14196 = !DILocation(line: 0, scope: !2310)
!14197 = !DILocation(line: 293, column: 39, scope: !14198)
!14198 = distinct !DILexicalBlock(scope: !2310, file: !2190, line: 293, column: 2)
!14199 = !DILocation(line: 293, column: 2, scope: !2310)
!14200 = !DILocation(line: 273, column: 14, scope: !2189)
!14201 = !DILocation(line: 309, column: 2, scope: !2189)
!14202 = !DILocation(line: 309, column: 11, scope: !2189)
!14203 = !DILocation(line: 311, column: 2, scope: !2189)
!14204 = !DILocation(line: 293, column: 26, scope: !14198)
!14205 = !DILocation(line: 294, column: 9, scope: !14206)
!14206 = distinct !DILexicalBlock(scope: !14198, file: !2190, line: 293, column: 54)
!14207 = !DILocation(line: 295, column: 21, scope: !14208)
!14208 = distinct !DILexicalBlock(scope: !14206, file: !2190, line: 295, column: 7)
!14209 = !DILocation(line: 295, column: 28, scope: !14208)
!14210 = !DILocation(line: 295, column: 7, scope: !14206)
!14211 = !DILocation(line: 299, column: 25, scope: !14206)
!14212 = !DILocation(line: 299, column: 41, scope: !14206)
!14213 = !DILocation(line: 300, column: 7, scope: !14206)
!14214 = !DILocation(line: 300, column: 26, scope: !14206)
!14215 = !DILocation(line: 299, column: 10, scope: !14206)
!14216 = !DILocation(line: 299, column: 7, scope: !14206)
!14217 = !DILocation(line: 302, column: 16, scope: !14206)
!14218 = !DILocation(line: 304, column: 20, scope: !14219)
!14219 = distinct !DILexicalBlock(scope: !14206, file: !2190, line: 304, column: 7)
!14220 = !DILocation(line: 304, column: 7, scope: !14206)
!14221 = !DILocation(line: 305, column: 26, scope: !14222)
!14222 = distinct !DILexicalBlock(scope: !14219, file: !2190, line: 304, column: 26)
!14223 = !DILocation(line: 305, column: 42, scope: !14222)
!14224 = !DILocation(line: 305, column: 11, scope: !14222)
!14225 = !DILocation(line: 305, column: 8, scope: !14222)
!14226 = !DILocation(line: 306, column: 3, scope: !14222)
!14227 = !DILocation(line: 293, column: 50, scope: !14198)
!14228 = !DILocation(line: 312, column: 1, scope: !2189)
!14229 = distinct !DISubprogram(name: "copy_bytes", scope: !2190, file: !2190, line: 261, type: !14230, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !14232)
!14230 = !DISubroutineType(types: !14231)
!14231 = !{!132, !277, !132, !337, !132}
!14232 = !{!14233, !14234, !14235, !14236, !14237}
!14233 = !DILocalVariable(name: "dest", arg: 1, scope: !14229, file: !2190, line: 261, type: !277)
!14234 = !DILocalVariable(name: "dest_size", arg: 2, scope: !14229, file: !2190, line: 261, type: !132)
!14235 = !DILocalVariable(name: "src", arg: 3, scope: !14229, file: !2190, line: 261, type: !337)
!14236 = !DILocalVariable(name: "src_size", arg: 4, scope: !14229, file: !2190, line: 261, type: !132)
!14237 = !DILocalVariable(name: "bytes_to_copy", scope: !14229, file: !2190, line: 263, type: !132)
!14238 = !DILocation(line: 0, scope: !14229)
!14239 = !DILocation(line: 265, column: 18, scope: !14229)
!14240 = !DILocation(line: 266, column: 2, scope: !14229)
!14241 = !DILocation(line: 268, column: 2, scope: !14229)
!14242 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2190, file: !2190, line: 383, type: !14243, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !14245)
!14243 = !DISubroutineType(types: !14244)
!14244 = !{null, !2194}
!14245 = !{!14246}
!14246 = !DILocalVariable(name: "thread", arg: 1, scope: !14242, file: !2190, line: 383, type: !2194)
!14247 = !DILocation(line: 0, scope: !14242)
!14248 = !DILocation(line: 387, column: 2, scope: !14242)
!14249 = !DILocation(line: 388, column: 1, scope: !14242)
!14250 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2190, file: !2190, line: 528, type: !14251, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !14258)
!14251 = !DISubroutineType(types: !14252)
!14252 = !{!277, !2194, !14253, !132, !321, !102, !102, !102, !103, !108, !337}
!14253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14254, size: 32)
!14254 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !314, line: 44, baseType: !14255)
!14255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !316, line: 47, size: 8, elements: !14256)
!14256 = !{!14257}
!14257 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14255, file: !316, line: 48, baseType: !278, size: 8)
!14258 = !{!14259, !14260, !14261, !14262, !14263, !14264, !14265, !14266, !14267, !14268, !14269}
!14259 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14250, file: !2190, line: 528, type: !2194)
!14260 = !DILocalVariable(name: "stack", arg: 2, scope: !14250, file: !2190, line: 529, type: !14253)
!14261 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14250, file: !2190, line: 529, type: !132)
!14262 = !DILocalVariable(name: "entry", arg: 4, scope: !14250, file: !2190, line: 530, type: !321)
!14263 = !DILocalVariable(name: "p1", arg: 5, scope: !14250, file: !2190, line: 531, type: !102)
!14264 = !DILocalVariable(name: "p2", arg: 6, scope: !14250, file: !2190, line: 531, type: !102)
!14265 = !DILocalVariable(name: "p3", arg: 7, scope: !14250, file: !2190, line: 531, type: !102)
!14266 = !DILocalVariable(name: "prio", arg: 8, scope: !14250, file: !2190, line: 532, type: !103)
!14267 = !DILocalVariable(name: "options", arg: 9, scope: !14250, file: !2190, line: 532, type: !108)
!14268 = !DILocalVariable(name: "name", arg: 10, scope: !14250, file: !2190, line: 532, type: !337)
!14269 = !DILocalVariable(name: "stack_ptr", scope: !14250, file: !2190, line: 534, type: !277)
!14270 = !DILocation(line: 0, scope: !14250)
!14271 = !DILocation(line: 550, column: 28, scope: !14250)
!14272 = !DILocation(line: 550, column: 2, scope: !14250)
!14273 = !DILocation(line: 553, column: 34, scope: !14250)
!14274 = !DILocation(line: 553, column: 2, scope: !14250)
!14275 = !DILocation(line: 554, column: 14, scope: !14250)
!14276 = !DILocation(line: 564, column: 2, scope: !14250)
!14277 = !DILocation(line: 567, column: 14, scope: !14250)
!14278 = !DILocation(line: 567, column: 24, scope: !14250)
!14279 = !DILocation(line: 612, column: 7, scope: !14280)
!14280 = distinct !DILexicalBlock(scope: !14250, file: !2190, line: 612, column: 6)
!14281 = !DILocation(line: 612, column: 6, scope: !14250)
!14282 = !DILocation(line: 627, column: 40, scope: !14250)
!14283 = !DILocation(line: 637, column: 2, scope: !14250)
!14284 = !DILocation(line: 613, column: 15, scope: !14285)
!14285 = distinct !DILexicalBlock(scope: !14280, file: !2190, line: 612, column: 17)
!14286 = !DILocation(line: 613, column: 29, scope: !14285)
!14287 = !DILocation(line: 638, column: 1, scope: !14250)
!14288 = distinct !DISubprogram(name: "z_waitq_init", scope: !14289, file: !14289, line: 47, type: !14290, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !14292)
!14289 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14290 = !DISubroutineType(types: !14291)
!14291 = !{null, !2225}
!14292 = !{!14293}
!14293 = !DILocalVariable(name: "w", arg: 1, scope: !14288, file: !14289, line: 47, type: !2225)
!14294 = !DILocation(line: 0, scope: !14288)
!14295 = !DILocation(line: 49, column: 21, scope: !14288)
!14296 = !DILocation(line: 49, column: 2, scope: !14288)
!14297 = !DILocation(line: 50, column: 1, scope: !14288)
!14298 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2190, file: !2190, line: 791, type: !14299, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !14302)
!14299 = !DISubroutineType(types: !14300)
!14300 = !{null, !14301, !103, !108, !32}
!14301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2198, size: 32)
!14302 = !{!14303, !14304, !14305, !14306}
!14303 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14298, file: !2190, line: 791, type: !14301)
!14304 = !DILocalVariable(name: "priority", arg: 2, scope: !14298, file: !2190, line: 791, type: !103)
!14305 = !DILocalVariable(name: "initial_state", arg: 3, scope: !14298, file: !2190, line: 792, type: !108)
!14306 = !DILocalVariable(name: "options", arg: 4, scope: !14298, file: !2190, line: 792, type: !32)
!14307 = !DILocation(line: 0, scope: !14298)
!14308 = !DILocation(line: 795, column: 15, scope: !14298)
!14309 = !DILocation(line: 795, column: 25, scope: !14298)
!14310 = !DILocation(line: 796, column: 30, scope: !14298)
!14311 = !DILocation(line: 796, column: 15, scope: !14298)
!14312 = !DILocation(line: 796, column: 28, scope: !14298)
!14313 = !DILocation(line: 797, column: 30, scope: !14298)
!14314 = !DILocation(line: 797, column: 15, scope: !14298)
!14315 = !DILocation(line: 797, column: 28, scope: !14298)
!14316 = !DILocation(line: 799, column: 22, scope: !14298)
!14317 = !DILocation(line: 799, column: 15, scope: !14298)
!14318 = !DILocation(line: 799, column: 20, scope: !14298)
!14319 = !DILocation(line: 801, column: 15, scope: !14298)
!14320 = !DILocation(line: 801, column: 28, scope: !14298)
!14321 = !DILocation(line: 814, column: 2, scope: !14298)
!14322 = !DILocation(line: 815, column: 1, scope: !14298)
!14323 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2190, file: !2190, line: 449, type: !14324, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !14326)
!14324 = !DISubroutineType(types: !14325)
!14325 = !{!277, !2194, !14253, !132}
!14326 = !{!14327, !14328, !14329, !14330, !14331, !14332, !14333, !14334}
!14327 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14323, file: !2190, line: 449, type: !2194)
!14328 = !DILocalVariable(name: "stack", arg: 2, scope: !14323, file: !2190, line: 450, type: !14253)
!14329 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14323, file: !2190, line: 450, type: !132)
!14330 = !DILocalVariable(name: "stack_obj_size", scope: !14323, file: !2190, line: 452, type: !132)
!14331 = !DILocalVariable(name: "stack_buf_size", scope: !14323, file: !2190, line: 452, type: !132)
!14332 = !DILocalVariable(name: "stack_ptr", scope: !14323, file: !2190, line: 453, type: !277)
!14333 = !DILocalVariable(name: "stack_buf_start", scope: !14323, file: !2190, line: 453, type: !277)
!14334 = !DILocalVariable(name: "delta", scope: !14323, file: !2190, line: 454, type: !132)
!14335 = !DILocation(line: 0, scope: !14323)
!14336 = !DILocation(line: 465, column: 20, scope: !14337)
!14337 = distinct !DILexicalBlock(scope: !14323, file: !2190, line: 463, column: 2)
!14338 = !DILocation(line: 466, column: 21, scope: !14337)
!14339 = !DILocation(line: 473, column: 28, scope: !14323)
!14340 = !DILocation(line: 514, column: 33, scope: !14323)
!14341 = !DILocation(line: 514, column: 25, scope: !14323)
!14342 = !DILocation(line: 514, column: 31, scope: !14323)
!14343 = !DILocation(line: 515, column: 25, scope: !14323)
!14344 = !DILocation(line: 515, column: 30, scope: !14323)
!14345 = !DILocation(line: 516, column: 25, scope: !14323)
!14346 = !DILocation(line: 516, column: 31, scope: !14323)
!14347 = !DILocation(line: 520, column: 2, scope: !14323)
!14348 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !316, file: !316, line: 331, type: !14349, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !14351)
!14349 = !DISubroutineType(types: !14350)
!14350 = !{!277, !14253}
!14351 = !{!14352}
!14352 = !DILocalVariable(name: "sym", arg: 1, scope: !14348, file: !316, line: 331, type: !14253)
!14353 = !DILocation(line: 0, scope: !14348)
!14354 = !DILocation(line: 333, column: 21, scope: !14348)
!14355 = !DILocation(line: 333, column: 2, scope: !14348)
!14356 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !14357, file: !14357, line: 40, type: !14358, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !14360)
!14357 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14358 = !DISubroutineType(types: !14359)
!14359 = !{null, !14301}
!14360 = !{!14361}
!14361 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14356, file: !14357, line: 40, type: !14301)
!14362 = !DILocation(line: 0, scope: !14356)
!14363 = !DILocation(line: 42, column: 31, scope: !14356)
!14364 = !DILocation(line: 42, column: 2, scope: !14356)
!14365 = !DILocation(line: 43, column: 1, scope: !14356)
!14366 = distinct !DISubprogram(name: "z_init_timeout", scope: !14357, file: !14357, line: 25, type: !2251, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !14367)
!14367 = !{!14368}
!14368 = !DILocalVariable(name: "to", arg: 1, scope: !14366, file: !14357, line: 25, type: !2253)
!14369 = !DILocation(line: 0, scope: !14366)
!14370 = !DILocation(line: 27, column: 22, scope: !14366)
!14371 = !DILocation(line: 27, column: 2, scope: !14366)
!14372 = !DILocation(line: 28, column: 1, scope: !14366)
!14373 = distinct !DISubprogram(name: "sys_dnode_init", scope: !146, file: !146, line: 211, type: !14374, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !14376)
!14374 = !DISubroutineType(types: !14375)
!14375 = !{null, !2297}
!14376 = !{!14377}
!14377 = !DILocalVariable(name: "node", arg: 1, scope: !14373, file: !146, line: 211, type: !2297)
!14378 = !DILocation(line: 0, scope: !14373)
!14379 = !DILocation(line: 213, column: 8, scope: !14373)
!14380 = !DILocation(line: 213, column: 13, scope: !14373)
!14381 = !DILocation(line: 214, column: 8, scope: !14373)
!14382 = !DILocation(line: 214, column: 13, scope: !14373)
!14383 = !DILocation(line: 215, column: 1, scope: !14373)
!14384 = distinct !DISubprogram(name: "sys_dlist_init", scope: !146, file: !146, line: 197, type: !14385, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !14388)
!14385 = !DISubroutineType(types: !14386)
!14386 = !{null, !14387}
!14387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2230, size: 32)
!14388 = !{!14389}
!14389 = !DILocalVariable(name: "list", arg: 1, scope: !14384, file: !146, line: 197, type: !14387)
!14390 = !DILocation(line: 0, scope: !14384)
!14391 = !DILocation(line: 199, column: 8, scope: !14384)
!14392 = !DILocation(line: 199, column: 13, scope: !14384)
!14393 = !DILocation(line: 200, column: 8, scope: !14384)
!14394 = !DILocation(line: 200, column: 13, scope: !14384)
!14395 = !DILocation(line: 201, column: 1, scope: !14384)
!14396 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2190, file: !2190, line: 641, type: !14397, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !14403)
!14397 = !DISubroutineType(types: !14398)
!14398 = !{!2193, !2194, !14253, !132, !321, !102, !102, !102, !103, !108, !14399}
!14399 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !14400)
!14400 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !14401)
!14401 = !{!14402}
!14402 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14400, file: !105, line: 66, baseType: !104, size: 64)
!14403 = !{!14404, !14405, !14406, !14407, !14408, !14409, !14410, !14411, !14412, !14413}
!14404 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14396, file: !2190, line: 641, type: !2194)
!14405 = !DILocalVariable(name: "stack", arg: 2, scope: !14396, file: !2190, line: 642, type: !14253)
!14406 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14396, file: !2190, line: 643, type: !132)
!14407 = !DILocalVariable(name: "entry", arg: 4, scope: !14396, file: !2190, line: 643, type: !321)
!14408 = !DILocalVariable(name: "p1", arg: 5, scope: !14396, file: !2190, line: 644, type: !102)
!14409 = !DILocalVariable(name: "p2", arg: 6, scope: !14396, file: !2190, line: 644, type: !102)
!14410 = !DILocalVariable(name: "p3", arg: 7, scope: !14396, file: !2190, line: 644, type: !102)
!14411 = !DILocalVariable(name: "prio", arg: 8, scope: !14396, file: !2190, line: 645, type: !103)
!14412 = !DILocalVariable(name: "options", arg: 9, scope: !14396, file: !2190, line: 645, type: !108)
!14413 = !DILocalVariable(name: "delay", arg: 10, scope: !14396, file: !2190, line: 645, type: !14399)
!14414 = !DILocation(line: 0, scope: !14396)
!14415 = !DILocation(line: 649, column: 2, scope: !14396)
!14416 = !DILocation(line: 652, column: 7, scope: !14417)
!14417 = distinct !DILexicalBlock(scope: !14396, file: !2190, line: 652, column: 6)
!14418 = !DILocation(line: 652, column: 6, scope: !14396)
!14419 = !DILocation(line: 653, column: 3, scope: !14420)
!14420 = distinct !DILexicalBlock(scope: !14417, file: !2190, line: 652, column: 39)
!14421 = !DILocation(line: 654, column: 2, scope: !14420)
!14422 = !DILocation(line: 656, column: 2, scope: !14396)
!14423 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2190, file: !2190, line: 401, type: !14424, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !14426)
!14424 = !DISubroutineType(types: !14425)
!14425 = !{null, !2194, !14399}
!14426 = !{!14427, !14428}
!14427 = !DILocalVariable(name: "thread", arg: 1, scope: !14423, file: !2190, line: 401, type: !2194)
!14428 = !DILocalVariable(name: "delay", arg: 2, scope: !14423, file: !2190, line: 401, type: !14399)
!14429 = !DILocation(line: 0, scope: !14423)
!14430 = !DILocation(line: 404, column: 6, scope: !14431)
!14431 = distinct !DILexicalBlock(scope: !14423, file: !2190, line: 404, column: 6)
!14432 = !DILocation(line: 404, column: 6, scope: !14423)
!14433 = !DILocation(line: 405, column: 3, scope: !14434)
!14434 = distinct !DILexicalBlock(scope: !14431, file: !2190, line: 404, column: 38)
!14435 = !DILocation(line: 406, column: 2, scope: !14434)
!14436 = !DILocation(line: 407, column: 3, scope: !14437)
!14437 = distinct !DILexicalBlock(scope: !14431, file: !2190, line: 406, column: 9)
!14438 = !DILocation(line: 413, column: 1, scope: !14423)
!14439 = distinct !DISubprogram(name: "k_thread_start", scope: !3618, file: !3618, line: 205, type: !14440, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !14442)
!14440 = !DISubroutineType(types: !14441)
!14441 = !{null, !2193}
!14442 = !{!14443}
!14443 = !DILocalVariable(name: "thread", arg: 1, scope: !14439, file: !3618, line: 205, type: !2193)
!14444 = !DILocation(line: 0, scope: !14439)
!14445 = !DILocation(line: 214, column: 2, scope: !14446)
!14446 = distinct !DILexicalBlock(scope: !14439, file: !3618, line: 214, column: 2)
!14447 = !{i64 2154868346}
!14448 = !DILocation(line: 215, column: 2, scope: !14439)
!14449 = !DILocation(line: 216, column: 1, scope: !14439)
!14450 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14357, file: !14357, line: 47, type: !14424, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !14451)
!14451 = !{!14452, !14453}
!14452 = !DILocalVariable(name: "thread", arg: 1, scope: !14450, file: !14357, line: 47, type: !2194)
!14453 = !DILocalVariable(name: "ticks", arg: 2, scope: !14450, file: !14357, line: 47, type: !14399)
!14454 = !DILocation(line: 0, scope: !14450)
!14455 = !DILocation(line: 49, column: 30, scope: !14450)
!14456 = !DILocation(line: 49, column: 2, scope: !14450)
!14457 = !DILocation(line: 50, column: 1, scope: !14450)
!14458 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2190, file: !2190, line: 748, type: !334, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !14459)
!14459 = !{!14460, !14477}
!14460 = !DILocalVariable(name: "thread_data", scope: !14461, file: !2190, line: 750, type: !14462)
!14461 = distinct !DILexicalBlock(scope: !14458, file: !2190, line: 750, column: 2)
!14462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14463, size: 32)
!14463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !137, line: 620, size: 384, elements: !14464)
!14464 = !{!14465, !14466, !14467, !14468, !14469, !14470, !14471, !14472, !14473, !14474, !14475, !14476}
!14465 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !14463, file: !137, line: 621, baseType: !2194, size: 32)
!14466 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !14463, file: !137, line: 622, baseType: !14253, size: 32, offset: 32)
!14467 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !14463, file: !137, line: 623, baseType: !32, size: 32, offset: 64)
!14468 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !14463, file: !137, line: 624, baseType: !321, size: 32, offset: 96)
!14469 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !14463, file: !137, line: 625, baseType: !102, size: 32, offset: 128)
!14470 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !14463, file: !137, line: 626, baseType: !102, size: 32, offset: 160)
!14471 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !14463, file: !137, line: 627, baseType: !102, size: 32, offset: 192)
!14472 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !14463, file: !137, line: 628, baseType: !103, size: 32, offset: 224)
!14473 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !14463, file: !137, line: 629, baseType: !108, size: 32, offset: 256)
!14474 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !14463, file: !137, line: 630, baseType: !331, size: 32, offset: 288)
!14475 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !14463, file: !137, line: 631, baseType: !333, size: 32, offset: 320)
!14476 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !14463, file: !137, line: 632, baseType: !337, size: 32, offset: 352)
!14477 = !DILocalVariable(name: "thread_data", scope: !14478, file: !2190, line: 781, type: !14462)
!14478 = distinct !DILexicalBlock(scope: !14458, file: !2190, line: 781, column: 2)
!14479 = !DILocation(line: 0, scope: !14461)
!14480 = !DILocation(line: 750, column: 2, scope: !14461)
!14481 = !DILocation(line: 780, column: 2, scope: !14458)
!14482 = !DILocation(line: 0, scope: !14478)
!14483 = !DILocation(line: 781, column: 2, scope: !14478)
!14484 = !DILocation(line: 752, column: 17, scope: !14485)
!14485 = distinct !DILexicalBlock(scope: !14486, file: !2190, line: 750, column: 38)
!14486 = distinct !DILexicalBlock(scope: !14461, file: !2190, line: 750, column: 2)
!14487 = !DILocation(line: 753, column: 17, scope: !14485)
!14488 = !DILocation(line: 754, column: 17, scope: !14485)
!14489 = !DILocation(line: 755, column: 17, scope: !14485)
!14490 = !DILocation(line: 756, column: 17, scope: !14485)
!14491 = !DILocation(line: 757, column: 17, scope: !14485)
!14492 = !DILocation(line: 758, column: 17, scope: !14485)
!14493 = !DILocation(line: 759, column: 17, scope: !14485)
!14494 = !DILocation(line: 760, column: 17, scope: !14485)
!14495 = !DILocation(line: 751, column: 3, scope: !14485)
!14496 = !DILocation(line: 763, column: 16, scope: !14485)
!14497 = !DILocation(line: 763, column: 29, scope: !14485)
!14498 = !DILocation(line: 763, column: 39, scope: !14485)
!14499 = !DILocation(line: 750, column: 2, scope: !14486)
!14500 = !DILocation(line: 750, column: 2, scope: !14501)
!14501 = distinct !DILexicalBlock(scope: !14486, file: !2190, line: 750, column: 2)
!14502 = distinct !{!14502, !14480, !14503}
!14503 = !DILocation(line: 764, column: 2, scope: !14461)
!14504 = !DILocation(line: 787, column: 2, scope: !14458)
!14505 = !DILocation(line: 788, column: 1, scope: !14458)
!14506 = !DILocation(line: 782, column: 20, scope: !14507)
!14507 = distinct !DILexicalBlock(scope: !14508, file: !2190, line: 782, column: 7)
!14508 = distinct !DILexicalBlock(scope: !14509, file: !2190, line: 781, column: 38)
!14509 = distinct !DILexicalBlock(scope: !14478, file: !2190, line: 781, column: 2)
!14510 = !DILocation(line: 782, column: 31, scope: !14507)
!14511 = !DILocation(line: 782, column: 7, scope: !14508)
!14512 = !DILocation(line: 783, column: 37, scope: !14513)
!14513 = distinct !DILexicalBlock(scope: !14507, file: !2190, line: 782, column: 51)
!14514 = !DILocation(line: 784, column: 10, scope: !14513)
!14515 = !DILocation(line: 783, column: 4, scope: !14513)
!14516 = !DILocation(line: 785, column: 3, scope: !14513)
!14517 = !DILocation(line: 781, column: 2, scope: !14509)
!14518 = !DILocation(line: 781, column: 2, scope: !14519)
!14519 = distinct !DILexicalBlock(scope: !14509, file: !2190, line: 781, column: 2)
!14520 = distinct !{!14520, !14483, !14521}
!14521 = !DILocation(line: 786, column: 2, scope: !14478)
!14522 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3604, file: !3604, line: 403, type: !3605, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !14523)
!14523 = !{!14524}
!14524 = !DILocalVariable(name: "t", arg: 1, scope: !14522, file: !3604, line: 403, type: !109)
!14525 = !DILocation(line: 0, scope: !14522)
!14526 = !DILocalVariable(name: "t", arg: 1, scope: !14527, file: !3604, line: 102, type: !109)
!14527 = distinct !DISubprogram(name: "z_tmcvt", scope: !3604, file: !3604, line: 102, type: !3630, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !14528)
!14528 = !{!14526, !14529, !14530, !14531, !14532, !14533, !14534, !14535, !14536, !14537, !14538}
!14529 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14527, file: !3604, line: 102, type: !108)
!14530 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14527, file: !3604, line: 103, type: !108)
!14531 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14527, file: !3604, line: 103, type: !131)
!14532 = !DILocalVariable(name: "result32", arg: 5, scope: !14527, file: !3604, line: 104, type: !131)
!14533 = !DILocalVariable(name: "round_up", arg: 6, scope: !14527, file: !3604, line: 104, type: !131)
!14534 = !DILocalVariable(name: "round_off", arg: 7, scope: !14527, file: !3604, line: 105, type: !131)
!14535 = !DILocalVariable(name: "mul_ratio", scope: !14527, file: !3604, line: 107, type: !131)
!14536 = !DILocalVariable(name: "div_ratio", scope: !14527, file: !3604, line: 109, type: !131)
!14537 = !DILocalVariable(name: "off", scope: !14527, file: !3604, line: 116, type: !109)
!14538 = !DILocalVariable(name: "rdivisor", scope: !14539, file: !3604, line: 119, type: !108)
!14539 = distinct !DILexicalBlock(scope: !14540, file: !3604, line: 118, column: 18)
!14540 = distinct !DILexicalBlock(scope: !14527, file: !3604, line: 118, column: 6)
!14541 = !DILocation(line: 0, scope: !14527, inlinedAt: !14542)
!14542 = distinct !DILocation(line: 406, column: 9, scope: !14522)
!14543 = !DILocation(line: 145, column: 13, scope: !14544, inlinedAt: !14542)
!14544 = distinct !DILexicalBlock(scope: !14545, file: !3604, line: 144, column: 10)
!14545 = distinct !DILexicalBlock(scope: !14546, file: !3604, line: 142, column: 7)
!14546 = distinct !DILexicalBlock(scope: !14547, file: !3604, line: 141, column: 24)
!14547 = distinct !DILexicalBlock(scope: !14548, file: !3604, line: 141, column: 13)
!14548 = distinct !DILexicalBlock(scope: !14527, file: !3604, line: 134, column: 6)
!14549 = !DILocation(line: 406, column: 2, scope: !14522)
!14550 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2190, file: !2190, line: 817, type: !4684, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !14551)
!14551 = !{!14552, !14553, !14554, !14555}
!14552 = !DILocalVariable(name: "entry", arg: 1, scope: !14550, file: !2190, line: 817, type: !321)
!14553 = !DILocalVariable(name: "p1", arg: 2, scope: !14550, file: !2190, line: 818, type: !102)
!14554 = !DILocalVariable(name: "p2", arg: 3, scope: !14550, file: !2190, line: 818, type: !102)
!14555 = !DILocalVariable(name: "p3", arg: 4, scope: !14550, file: !2190, line: 818, type: !102)
!14556 = !DILocation(line: 0, scope: !14550)
!14557 = !DILocation(line: 822, column: 2, scope: !14550)
!14558 = !DILocation(line: 822, column: 17, scope: !14550)
!14559 = !DILocation(line: 822, column: 30, scope: !14550)
!14560 = !DILocation(line: 823, column: 2, scope: !14550)
!14561 = !DILocation(line: 845, column: 2, scope: !14550)
!14562 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2190, file: !2190, line: 888, type: !14563, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !14565)
!14563 = !DISubroutineType(types: !14564)
!14564 = !{!103, !2194}
!14565 = !{!14566}
!14566 = !DILocalVariable(name: "thread", arg: 1, scope: !14562, file: !2190, line: 888, type: !2194)
!14567 = !DILocation(line: 0, scope: !14562)
!14568 = !DILocation(line: 893, column: 2, scope: !14562)
!14569 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2190, file: !2190, line: 897, type: !14570, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !14572)
!14570 = !DISubroutineType(types: !14571)
!14571 = !{!103, !2194, !32}
!14572 = !{!14573, !14574}
!14573 = !DILocalVariable(name: "thread", arg: 1, scope: !14569, file: !2190, line: 897, type: !2194)
!14574 = !DILocalVariable(name: "options", arg: 2, scope: !14569, file: !2190, line: 897, type: !32)
!14575 = !DILocation(line: 0, scope: !14569)
!14576 = !DILocation(line: 902, column: 2, scope: !14569)
!14577 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2190, file: !2190, line: 1072, type: !14578, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !14583)
!14578 = !DISubroutineType(types: !14579)
!14579 = !{!103, !2193, !14580}
!14580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14581, size: 32)
!14581 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !163, line: 234, baseType: !14582)
!14582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !163, line: 192, elements: !251)
!14583 = !{!14584, !14585}
!14584 = !DILocalVariable(name: "thread", arg: 1, scope: !14577, file: !2190, line: 1072, type: !2193)
!14585 = !DILocalVariable(name: "stats", arg: 2, scope: !14577, file: !2190, line: 1073, type: !14580)
!14586 = !DILocation(line: 0, scope: !14577)
!14587 = !DILocation(line: 1075, column: 14, scope: !14588)
!14588 = distinct !DILexicalBlock(scope: !14577, file: !2190, line: 1075, column: 6)
!14589 = !DILocation(line: 1075, column: 23, scope: !14588)
!14590 = !DILocation(line: 1086, column: 1, scope: !14577)
!14591 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2190, file: !2190, line: 1088, type: !14592, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !14594)
!14592 = !DISubroutineType(types: !14593)
!14593 = !{!103, !14580}
!14594 = !{!14595}
!14595 = !DILocalVariable(name: "stats", arg: 1, scope: !14591, file: !2190, line: 1088, type: !14580)
!14596 = !DILocation(line: 0, scope: !14591)
!14597 = !DILocation(line: 1094, column: 12, scope: !14598)
!14598 = distinct !DILexicalBlock(scope: !14591, file: !2190, line: 1094, column: 6)
!14599 = !DILocation(line: 1120, column: 1, scope: !14591)
!14600 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !14601, file: !14601, line: 20, type: !334, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3237, retainedNodes: !251)
!14601 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14602 = !DILocation(line: 30, column: 2, scope: !14600)
!14603 = !DILocation(line: 31, column: 1, scope: !14600)
!14604 = distinct !DISubprogram(name: "idle", scope: !14601, file: !14601, line: 33, type: !323, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3237, retainedNodes: !14605)
!14605 = !{!14606, !14607, !14608}
!14606 = !DILocalVariable(name: "unused1", arg: 1, scope: !14604, file: !14601, line: 33, type: !102)
!14607 = !DILocalVariable(name: "unused2", arg: 2, scope: !14604, file: !14601, line: 33, type: !102)
!14608 = !DILocalVariable(name: "unused3", arg: 3, scope: !14604, file: !14601, line: 33, type: !102)
!14609 = !DILocation(line: 0, scope: !14604)
!14610 = !DILocation(line: 41, column: 2, scope: !14604)
!14611 = !DILocation(line: 55, column: 2, scope: !14612, inlinedAt: !14616)
!14612 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6996, file: !6996, line: 42, type: !6997, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3237, retainedNodes: !14613)
!14613 = !{!14614, !14615}
!14614 = !DILocalVariable(name: "key", scope: !14612, file: !6996, line: 44, type: !32)
!14615 = !DILocalVariable(name: "tmp", scope: !14612, file: !6996, line: 53, type: !32)
!14616 = distinct !DILocation(line: 62, column: 10, scope: !14617)
!14617 = distinct !DILexicalBlock(scope: !14604, file: !14601, line: 41, column: 15)
!14618 = !{i64 2223699}
!14619 = !DILocation(line: 0, scope: !14612, inlinedAt: !14616)
!14620 = !DILocation(line: 86, column: 3, scope: !14617)
!14621 = distinct !{!14621, !14610, !14622}
!14622 = !DILocation(line: 105, column: 2, scope: !14604)
!14623 = distinct !DISubprogram(name: "k_cpu_idle", scope: !137, file: !137, line: 5627, type: !334, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3237, retainedNodes: !251)
!14624 = !DILocation(line: 5629, column: 2, scope: !14623)
!14625 = !DILocation(line: 5630, column: 1, scope: !14623)
!14626 = !DISubprogram(name: "arch_cpu_idle", scope: !314, file: !314, line: 167, type: !334, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!14627 = distinct !DISubprogram(name: "k_msgq_init", scope: !14628, file: !14628, line: 35, type: !14629, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3239, retainedNodes: !14644)
!14628 = !DIFile(filename: "zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14629 = !DISubroutineType(types: !14630)
!14630 = !{null, !14631, !277, !132, !108}
!14631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14632, size: 32)
!14632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !137, line: 4204, size: 320, elements: !14633)
!14633 = !{!14634, !14635, !14636, !14637, !14638, !14639, !14640, !14641, !14642, !14643}
!14634 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !14632, file: !137, line: 4206, baseType: !3275, size: 64)
!14635 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !14632, file: !137, line: 4208, baseType: !3337, offset: 64)
!14636 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !14632, file: !137, line: 4210, baseType: !132, size: 32, offset: 64)
!14637 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !14632, file: !137, line: 4212, baseType: !108, size: 32, offset: 96)
!14638 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !14632, file: !137, line: 4214, baseType: !277, size: 32, offset: 128)
!14639 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !14632, file: !137, line: 4216, baseType: !277, size: 32, offset: 160)
!14640 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !14632, file: !137, line: 4218, baseType: !277, size: 32, offset: 192)
!14641 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !14632, file: !137, line: 4220, baseType: !277, size: 32, offset: 224)
!14642 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !14632, file: !137, line: 4222, baseType: !108, size: 32, offset: 256)
!14643 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !14632, file: !137, line: 4227, baseType: !185, size: 8, offset: 288)
!14644 = !{!14645, !14646, !14647, !14648}
!14645 = !DILocalVariable(name: "msgq", arg: 1, scope: !14627, file: !14628, line: 35, type: !14631)
!14646 = !DILocalVariable(name: "buffer", arg: 2, scope: !14627, file: !14628, line: 35, type: !277)
!14647 = !DILocalVariable(name: "msg_size", arg: 3, scope: !14627, file: !14628, line: 35, type: !132)
!14648 = !DILocalVariable(name: "max_msgs", arg: 4, scope: !14627, file: !14628, line: 36, type: !108)
!14649 = !DILocation(line: 0, scope: !14627)
!14650 = !DILocation(line: 38, column: 8, scope: !14627)
!14651 = !DILocation(line: 38, column: 17, scope: !14627)
!14652 = !DILocation(line: 39, column: 8, scope: !14627)
!14653 = !DILocation(line: 39, column: 17, scope: !14627)
!14654 = !DILocation(line: 40, column: 8, scope: !14627)
!14655 = !DILocation(line: 40, column: 21, scope: !14627)
!14656 = !DILocation(line: 41, column: 40, scope: !14627)
!14657 = !DILocation(line: 41, column: 28, scope: !14627)
!14658 = !DILocation(line: 41, column: 8, scope: !14627)
!14659 = !DILocation(line: 41, column: 19, scope: !14627)
!14660 = !DILocation(line: 42, column: 8, scope: !14627)
!14661 = !DILocation(line: 42, column: 17, scope: !14627)
!14662 = !DILocation(line: 43, column: 8, scope: !14627)
!14663 = !DILocation(line: 43, column: 18, scope: !14627)
!14664 = !DILocation(line: 44, column: 8, scope: !14627)
!14665 = !DILocation(line: 44, column: 18, scope: !14627)
!14666 = !DILocation(line: 45, column: 8, scope: !14627)
!14667 = !DILocation(line: 45, column: 14, scope: !14627)
!14668 = !DILocation(line: 46, column: 22, scope: !14627)
!14669 = !DILocation(line: 46, column: 2, scope: !14627)
!14670 = !DILocation(line: 55, column: 1, scope: !14627)
!14671 = distinct !DISubprogram(name: "z_waitq_init", scope: !14289, file: !14289, line: 47, type: !14672, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3239, retainedNodes: !14674)
!14672 = !DISubroutineType(types: !14673)
!14673 = !{null, !3274}
!14674 = !{!14675}
!14675 = !DILocalVariable(name: "w", arg: 1, scope: !14671, file: !14289, line: 47, type: !3274)
!14676 = !DILocation(line: 0, scope: !14671)
!14677 = !DILocation(line: 49, column: 21, scope: !14671)
!14678 = !DILocation(line: 49, column: 2, scope: !14671)
!14679 = !DILocation(line: 50, column: 1, scope: !14671)
!14680 = distinct !DISubprogram(name: "sys_dlist_init", scope: !146, file: !146, line: 197, type: !14681, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3239, retainedNodes: !14684)
!14681 = !DISubroutineType(types: !14682)
!14682 = !{null, !14683}
!14683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3279, size: 32)
!14684 = !{!14685}
!14685 = !DILocalVariable(name: "list", arg: 1, scope: !14680, file: !146, line: 197, type: !14683)
!14686 = !DILocation(line: 0, scope: !14680)
!14687 = !DILocation(line: 199, column: 8, scope: !14680)
!14688 = !DILocation(line: 199, column: 13, scope: !14680)
!14689 = !DILocation(line: 200, column: 8, scope: !14680)
!14690 = !DILocation(line: 200, column: 13, scope: !14680)
!14691 = !DILocation(line: 201, column: 1, scope: !14680)
!14692 = distinct !DISubprogram(name: "z_impl_k_msgq_alloc_init", scope: !14628, file: !14628, line: 57, type: !14693, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3239, retainedNodes: !14695)
!14693 = !DISubroutineType(types: !14694)
!14694 = !{!103, !14631, !132, !108}
!14695 = !{!14696, !14697, !14698, !14699, !14700, !14701}
!14696 = !DILocalVariable(name: "msgq", arg: 1, scope: !14692, file: !14628, line: 57, type: !14631)
!14697 = !DILocalVariable(name: "msg_size", arg: 2, scope: !14692, file: !14628, line: 57, type: !132)
!14698 = !DILocalVariable(name: "max_msgs", arg: 3, scope: !14692, file: !14628, line: 58, type: !108)
!14699 = !DILocalVariable(name: "buffer", scope: !14692, file: !14628, line: 60, type: !102)
!14700 = !DILocalVariable(name: "ret", scope: !14692, file: !14628, line: 61, type: !103)
!14701 = !DILocalVariable(name: "total_size", scope: !14692, file: !14628, line: 62, type: !132)
!14702 = !DILocation(line: 0, scope: !14692)
!14703 = !DILocation(line: 62, column: 2, scope: !14692)
!14704 = !DILocation(line: 66, column: 6, scope: !14705)
!14705 = distinct !DILexicalBlock(scope: !14692, file: !14628, line: 66, column: 6)
!14706 = !DILocation(line: 66, column: 6, scope: !14692)
!14707 = !DILocation(line: 69, column: 28, scope: !14708)
!14708 = distinct !DILexicalBlock(scope: !14705, file: !14628, line: 68, column: 9)
!14709 = !DILocation(line: 69, column: 12, scope: !14708)
!14710 = !DILocation(line: 70, column: 14, scope: !14711)
!14711 = distinct !DILexicalBlock(scope: !14708, file: !14628, line: 70, column: 7)
!14712 = !DILocation(line: 70, column: 7, scope: !14708)
!14713 = !DILocation(line: 71, column: 4, scope: !14714)
!14714 = distinct !DILexicalBlock(scope: !14711, file: !14628, line: 70, column: 23)
!14715 = !DILocation(line: 72, column: 10, scope: !14714)
!14716 = !DILocation(line: 72, column: 16, scope: !14714)
!14717 = !DILocation(line: 74, column: 3, scope: !14714)
!14718 = !DILocation(line: 0, scope: !14705)
!14719 = !DILocation(line: 82, column: 1, scope: !14692)
!14720 = !DILocation(line: 81, column: 2, scope: !14692)
!14721 = distinct !DISubprogram(name: "size_mul_overflow", scope: !14722, file: !14722, line: 105, type: !14723, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3239, retainedNodes: !14725)
!14722 = !DIFile(filename: "zephyr/include/zephyr/sys/math_extras_impl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14723 = !DISubroutineType(types: !14724)
!14724 = !{!131, !132, !132, !2715}
!14725 = !{!14726, !14727, !14728}
!14726 = !DILocalVariable(name: "a", arg: 1, scope: !14721, file: !14722, line: 105, type: !132)
!14727 = !DILocalVariable(name: "b", arg: 2, scope: !14721, file: !14722, line: 105, type: !132)
!14728 = !DILocalVariable(name: "result", arg: 3, scope: !14721, file: !14722, line: 105, type: !2715)
!14729 = !DILocation(line: 0, scope: !14721)
!14730 = !DILocation(line: 107, column: 9, scope: !14721)
!14731 = !DILocation(line: 107, column: 2, scope: !14721)
!14732 = distinct !DISubprogram(name: "z_thread_malloc", scope: !14733, file: !14733, line: 102, type: !14734, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3239, retainedNodes: !14735)
!14733 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14734 = !DISubroutineType(types: !3218)
!14735 = !{!14736}
!14736 = !DILocalVariable(name: "size", arg: 1, scope: !14732, file: !14733, line: 102, type: !132)
!14737 = !DILocation(line: 0, scope: !14732)
!14738 = !DILocation(line: 104, column: 9, scope: !14732)
!14739 = !DILocation(line: 104, column: 2, scope: !14732)
!14740 = distinct !DISubprogram(name: "k_msgq_cleanup", scope: !14628, file: !14628, line: 95, type: !14741, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3239, retainedNodes: !14743)
!14741 = !DISubroutineType(types: !14742)
!14742 = !{!103, !14631}
!14743 = !{!14744}
!14744 = !DILocalVariable(name: "msgq", arg: 1, scope: !14740, file: !14628, line: 95, type: !14631)
!14745 = !DILocation(line: 0, scope: !14740)
!14746 = !DILocation(line: 99, column: 2, scope: !14747)
!14747 = distinct !DILexicalBlock(scope: !14740, file: !14628, line: 99, column: 2)
!14748 = !DILocation(line: 99, column: 2, scope: !14740)
!14749 = !DILocation(line: 105, column: 13, scope: !14750)
!14750 = distinct !DILexicalBlock(scope: !14740, file: !14628, line: 105, column: 6)
!14751 = !DILocation(line: 105, column: 19, scope: !14750)
!14752 = !DILocation(line: 105, column: 40, scope: !14750)
!14753 = !DILocation(line: 105, column: 6, scope: !14740)
!14754 = !DILocation(line: 106, column: 16, scope: !14755)
!14755 = distinct !DILexicalBlock(scope: !14750, file: !14628, line: 105, column: 47)
!14756 = !DILocation(line: 106, column: 3, scope: !14755)
!14757 = !DILocation(line: 107, column: 15, scope: !14755)
!14758 = !DILocation(line: 108, column: 2, scope: !14755)
!14759 = !DILocation(line: 113, column: 1, scope: !14740)
!14760 = distinct !DISubprogram(name: "z_waitq_head", scope: !14289, file: !14289, line: 52, type: !14761, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3239, retainedNodes: !14763)
!14761 = !DISubroutineType(types: !14762)
!14762 = !{!3257, !3274}
!14763 = !{!14764}
!14764 = !DILocalVariable(name: "w", arg: 1, scope: !14760, file: !14289, line: 52, type: !3274)
!14765 = !DILocation(line: 0, scope: !14760)
!14766 = !DILocation(line: 54, column: 52, scope: !14760)
!14767 = !DILocation(line: 54, column: 28, scope: !14760)
!14768 = !DILocation(line: 54, column: 9, scope: !14760)
!14769 = !DILocation(line: 54, column: 2, scope: !14760)
!14770 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !146, file: !146, line: 294, type: !14771, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3239, retainedNodes: !14773)
!14771 = !DISubroutineType(types: !14772)
!14772 = !{!3242, !14683}
!14773 = !{!14774}
!14774 = !DILocalVariable(name: "list", arg: 1, scope: !14770, file: !146, line: 294, type: !14683)
!14775 = !DILocation(line: 0, scope: !14770)
!14776 = !DILocation(line: 296, column: 9, scope: !14770)
!14777 = !DILocation(line: 296, column: 49, scope: !14770)
!14778 = !DILocation(line: 296, column: 2, scope: !14770)
!14779 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !146, file: !146, line: 266, type: !14780, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3239, retainedNodes: !14782)
!14780 = !DISubroutineType(types: !14781)
!14781 = !{!131, !14683}
!14782 = !{!14783}
!14783 = !DILocalVariable(name: "list", arg: 1, scope: !14779, file: !146, line: 266, type: !14683)
!14784 = !DILocation(line: 0, scope: !14779)
!14785 = !DILocation(line: 268, column: 15, scope: !14779)
!14786 = !DILocation(line: 268, column: 20, scope: !14779)
!14787 = !DILocation(line: 268, column: 2, scope: !14779)
!14788 = distinct !DISubprogram(name: "z_impl_k_msgq_put", scope: !14628, file: !14628, line: 116, type: !14789, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3239, retainedNodes: !14795)
!14789 = !DISubroutineType(types: !14790)
!14790 = !{!103, !14631, !13, !14791}
!14791 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !14792)
!14792 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !14793)
!14793 = !{!14794}
!14794 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14792, file: !105, line: 66, baseType: !104, size: 64)
!14795 = !{!14796, !14797, !14798, !14799, !14800, !14805}
!14796 = !DILocalVariable(name: "msgq", arg: 1, scope: !14788, file: !14628, line: 116, type: !14631)
!14797 = !DILocalVariable(name: "data", arg: 2, scope: !14788, file: !14628, line: 116, type: !13)
!14798 = !DILocalVariable(name: "timeout", arg: 3, scope: !14788, file: !14628, line: 116, type: !14791)
!14799 = !DILocalVariable(name: "pending_thread", scope: !14788, file: !14628, line: 120, type: !3257)
!14800 = !DILocalVariable(name: "key", scope: !14788, file: !14628, line: 121, type: !14801)
!14801 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !250, line: 106, baseType: !14802)
!14802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !250, line: 32, size: 32, elements: !14803)
!14803 = !{!14804}
!14804 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14802, file: !250, line: 33, baseType: !103, size: 32)
!14805 = !DILocalVariable(name: "result", scope: !14788, file: !14628, line: 122, type: !103)
!14806 = !DILocation(line: 0, scope: !14788)
!14807 = !DILocation(line: 124, column: 27, scope: !14788)
!14808 = !DILocalVariable(name: "l", arg: 1, scope: !14809, file: !250, line: 136, type: !14812)
!14809 = distinct !DISubprogram(name: "k_spin_lock", scope: !250, file: !250, line: 136, type: !14810, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3239, retainedNodes: !14813)
!14810 = !DISubroutineType(types: !14811)
!14811 = !{!14801, !14812}
!14812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3337, size: 32)
!14813 = !{!14808, !14814}
!14814 = !DILocalVariable(name: "k", scope: !14809, file: !250, line: 139, type: !14801)
!14815 = !DILocation(line: 0, scope: !14809, inlinedAt: !14816)
!14816 = distinct !DILocation(line: 124, column: 8, scope: !14788)
!14817 = !DILocation(line: 55, column: 2, scope: !14818, inlinedAt: !14822)
!14818 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6996, file: !6996, line: 42, type: !6997, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3239, retainedNodes: !14819)
!14819 = !{!14820, !14821}
!14820 = !DILocalVariable(name: "key", scope: !14818, file: !6996, line: 44, type: !32)
!14821 = !DILocalVariable(name: "tmp", scope: !14818, file: !6996, line: 53, type: !32)
!14822 = distinct !DILocation(line: 145, column: 10, scope: !14809, inlinedAt: !14816)
!14823 = !{i64 2229836}
!14824 = !DILocation(line: 0, scope: !14818, inlinedAt: !14822)
!14825 = !DILocation(line: 128, column: 12, scope: !14826)
!14826 = distinct !DILexicalBlock(scope: !14788, file: !14628, line: 128, column: 6)
!14827 = !DILocation(line: 128, column: 30, scope: !14826)
!14828 = !DILocation(line: 128, column: 22, scope: !14826)
!14829 = !DILocation(line: 128, column: 6, scope: !14788)
!14830 = !DILocation(line: 130, column: 49, scope: !14831)
!14831 = distinct !DILexicalBlock(scope: !14826, file: !14628, line: 128, column: 40)
!14832 = !DILocation(line: 130, column: 20, scope: !14831)
!14833 = !DILocation(line: 131, column: 22, scope: !14834)
!14834 = distinct !DILexicalBlock(scope: !14831, file: !14628, line: 131, column: 7)
!14835 = !DILocation(line: 131, column: 7, scope: !14831)
!14836 = !DILocation(line: 135, column: 38, scope: !14837)
!14837 = distinct !DILexicalBlock(scope: !14834, file: !14628, line: 131, column: 31)
!14838 = !DILocation(line: 136, column: 17, scope: !14837)
!14839 = !DILocation(line: 135, column: 10, scope: !14837)
!14840 = !DILocalVariable(name: "thread", arg: 1, scope: !14841, file: !13984, line: 65, type: !3257)
!14841 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13984, file: !13984, line: 65, type: !14842, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3239, retainedNodes: !14844)
!14842 = !DISubroutineType(types: !14843)
!14843 = !{null, !3257, !32}
!14844 = !{!14840, !14845}
!14845 = !DILocalVariable(name: "value", arg: 2, scope: !14841, file: !13984, line: 65, type: !32)
!14846 = !DILocation(line: 0, scope: !14841, inlinedAt: !14847)
!14847 = distinct !DILocation(line: 138, column: 4, scope: !14837)
!14848 = !DILocation(line: 67, column: 15, scope: !14841, inlinedAt: !14847)
!14849 = !DILocation(line: 67, column: 33, scope: !14841, inlinedAt: !14847)
!14850 = !DILocation(line: 139, column: 4, scope: !14837)
!14851 = !DILocation(line: 140, column: 4, scope: !14837)
!14852 = !DILocation(line: 141, column: 4, scope: !14837)
!14853 = !DILocation(line: 144, column: 23, scope: !14854)
!14854 = distinct !DILexicalBlock(scope: !14834, file: !14628, line: 142, column: 10)
!14855 = !DILocation(line: 144, column: 46, scope: !14854)
!14856 = !DILocation(line: 144, column: 10, scope: !14854)
!14857 = !DILocation(line: 145, column: 29, scope: !14854)
!14858 = !DILocation(line: 145, column: 20, scope: !14854)
!14859 = !DILocation(line: 146, column: 33, scope: !14860)
!14860 = distinct !DILexicalBlock(scope: !14854, file: !14628, line: 146, column: 8)
!14861 = !DILocation(line: 146, column: 24, scope: !14860)
!14862 = !DILocation(line: 146, column: 8, scope: !14854)
!14863 = !DILocation(line: 147, column: 29, scope: !14864)
!14864 = distinct !DILexicalBlock(scope: !14860, file: !14628, line: 146, column: 45)
!14865 = !DILocation(line: 147, column: 21, scope: !14864)
!14866 = !DILocation(line: 148, column: 4, scope: !14864)
!14867 = !DILocation(line: 149, column: 19, scope: !14854)
!14868 = !DILocation(line: 155, column: 2, scope: !14831)
!14869 = !DILocation(line: 155, column: 13, scope: !14870)
!14870 = distinct !DILexicalBlock(scope: !14826, file: !14628, line: 155, column: 13)
!14871 = !DILocation(line: 155, column: 13, scope: !14826)
!14872 = !DILocation(line: 162, column: 3, scope: !14873)
!14873 = distinct !DILexicalBlock(scope: !14870, file: !14628, line: 158, column: 9)
!14874 = !DILocation(line: 162, column: 18, scope: !14873)
!14875 = !DILocation(line: 162, column: 28, scope: !14873)
!14876 = !DILocation(line: 164, column: 49, scope: !14873)
!14877 = !DILocation(line: 164, column: 12, scope: !14873)
!14878 = !DILocation(line: 166, column: 3, scope: !14873)
!14879 = !DILocation(line: 0, scope: !14826)
!14880 = !DILocalVariable(name: "key", arg: 2, scope: !14881, file: !250, line: 190, type: !14801)
!14881 = distinct !DISubprogram(name: "k_spin_unlock", scope: !250, file: !250, line: 189, type: !14882, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3239, retainedNodes: !14884)
!14882 = !DISubroutineType(types: !14883)
!14883 = !{null, !14812, !14801}
!14884 = !{!14885, !14880}
!14885 = !DILocalVariable(name: "l", arg: 1, scope: !14881, file: !250, line: 189, type: !14812)
!14886 = !DILocation(line: 0, scope: !14881, inlinedAt: !14887)
!14887 = distinct !DILocation(line: 171, column: 2, scope: !14788)
!14888 = !DILocalVariable(name: "key", arg: 1, scope: !14889, file: !6996, line: 84, type: !32)
!14889 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6996, file: !6996, line: 84, type: !7007, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3239, retainedNodes: !14890)
!14890 = !{!14888}
!14891 = !DILocation(line: 0, scope: !14889, inlinedAt: !14892)
!14892 = distinct !DILocation(line: 215, column: 2, scope: !14881, inlinedAt: !14887)
!14893 = !DILocation(line: 95, column: 2, scope: !14889, inlinedAt: !14892)
!14894 = !{i64 2230653}
!14895 = !DILocation(line: 173, column: 2, scope: !14788)
!14896 = !DILocation(line: 174, column: 1, scope: !14788)
!14897 = distinct !DISubprogram(name: "z_impl_k_msgq_get_attrs", scope: !14628, file: !14628, line: 188, type: !14898, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3239, retainedNodes: !14906)
!14898 = !DISubroutineType(types: !14899)
!14899 = !{null, !14631, !14900}
!14900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14901, size: 32)
!14901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq_attrs", file: !137, line: 4259, size: 96, elements: !14902)
!14902 = !{!14903, !14904, !14905}
!14903 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !14901, file: !137, line: 4261, baseType: !132, size: 32)
!14904 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !14901, file: !137, line: 4263, baseType: !108, size: 32, offset: 32)
!14905 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !14901, file: !137, line: 4265, baseType: !108, size: 32, offset: 64)
!14906 = !{!14907, !14908}
!14907 = !DILocalVariable(name: "msgq", arg: 1, scope: !14897, file: !14628, line: 188, type: !14631)
!14908 = !DILocalVariable(name: "attrs", arg: 2, scope: !14897, file: !14628, line: 188, type: !14900)
!14909 = !DILocation(line: 0, scope: !14897)
!14910 = !DILocation(line: 190, column: 26, scope: !14897)
!14911 = !DILocation(line: 190, column: 9, scope: !14897)
!14912 = !DILocation(line: 190, column: 18, scope: !14897)
!14913 = !DILocation(line: 191, column: 26, scope: !14897)
!14914 = !DILocation(line: 191, column: 9, scope: !14897)
!14915 = !DILocation(line: 191, column: 18, scope: !14897)
!14916 = !DILocation(line: 192, column: 27, scope: !14897)
!14917 = !DILocation(line: 192, column: 9, scope: !14897)
!14918 = !DILocation(line: 192, column: 19, scope: !14897)
!14919 = !DILocation(line: 193, column: 1, scope: !14897)
!14920 = distinct !DISubprogram(name: "z_impl_k_msgq_get", scope: !14628, file: !14628, line: 206, type: !14921, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3239, retainedNodes: !14923)
!14921 = !DISubroutineType(types: !14922)
!14922 = !{!103, !14631, !102, !14791}
!14923 = !{!14924, !14925, !14926, !14927, !14928, !14929}
!14924 = !DILocalVariable(name: "msgq", arg: 1, scope: !14920, file: !14628, line: 206, type: !14631)
!14925 = !DILocalVariable(name: "data", arg: 2, scope: !14920, file: !14628, line: 206, type: !102)
!14926 = !DILocalVariable(name: "timeout", arg: 3, scope: !14920, file: !14628, line: 206, type: !14791)
!14927 = !DILocalVariable(name: "key", scope: !14920, file: !14628, line: 210, type: !14801)
!14928 = !DILocalVariable(name: "pending_thread", scope: !14920, file: !14628, line: 211, type: !3257)
!14929 = !DILocalVariable(name: "result", scope: !14920, file: !14628, line: 212, type: !103)
!14930 = !DILocation(line: 0, scope: !14920)
!14931 = !DILocation(line: 214, column: 27, scope: !14920)
!14932 = !DILocation(line: 0, scope: !14809, inlinedAt: !14933)
!14933 = distinct !DILocation(line: 214, column: 8, scope: !14920)
!14934 = !DILocation(line: 55, column: 2, scope: !14818, inlinedAt: !14935)
!14935 = distinct !DILocation(line: 145, column: 10, scope: !14809, inlinedAt: !14933)
!14936 = !DILocation(line: 0, scope: !14818, inlinedAt: !14935)
!14937 = !DILocation(line: 218, column: 12, scope: !14938)
!14938 = distinct !DILexicalBlock(scope: !14920, file: !14628, line: 218, column: 6)
!14939 = !DILocation(line: 218, column: 22, scope: !14938)
!14940 = !DILocation(line: 218, column: 6, scope: !14920)
!14941 = !DILocation(line: 220, column: 28, scope: !14942)
!14942 = distinct !DILexicalBlock(scope: !14938, file: !14628, line: 218, column: 28)
!14943 = !DILocation(line: 220, column: 44, scope: !14942)
!14944 = !DILocation(line: 220, column: 9, scope: !14942)
!14945 = !DILocation(line: 221, column: 27, scope: !14942)
!14946 = !DILocation(line: 221, column: 18, scope: !14942)
!14947 = !DILocation(line: 222, column: 31, scope: !14948)
!14948 = distinct !DILexicalBlock(scope: !14942, file: !14628, line: 222, column: 7)
!14949 = !DILocation(line: 222, column: 22, scope: !14948)
!14950 = !DILocation(line: 222, column: 7, scope: !14942)
!14951 = !DILocation(line: 223, column: 27, scope: !14952)
!14952 = distinct !DILexicalBlock(scope: !14948, file: !14628, line: 222, column: 43)
!14953 = !DILocation(line: 223, column: 19, scope: !14952)
!14954 = !DILocation(line: 224, column: 3, scope: !14952)
!14955 = !DILocation(line: 225, column: 18, scope: !14942)
!14956 = !DILocation(line: 228, column: 49, scope: !14942)
!14957 = !DILocation(line: 228, column: 20, scope: !14942)
!14958 = !DILocation(line: 229, column: 22, scope: !14959)
!14959 = distinct !DILexicalBlock(scope: !14942, file: !14628, line: 229, column: 7)
!14960 = !DILocation(line: 229, column: 7, scope: !14942)
!14961 = !DILocation(line: 233, column: 23, scope: !14962)
!14962 = distinct !DILexicalBlock(scope: !14959, file: !14628, line: 229, column: 31)
!14963 = !DILocation(line: 233, column: 55, scope: !14962)
!14964 = !DILocation(line: 234, column: 17, scope: !14962)
!14965 = !DILocation(line: 233, column: 10, scope: !14962)
!14966 = !DILocation(line: 235, column: 29, scope: !14962)
!14967 = !DILocation(line: 235, column: 20, scope: !14962)
!14968 = !DILocation(line: 236, column: 33, scope: !14969)
!14969 = distinct !DILexicalBlock(scope: !14962, file: !14628, line: 236, column: 8)
!14970 = !DILocation(line: 236, column: 24, scope: !14969)
!14971 = !DILocation(line: 236, column: 8, scope: !14962)
!14972 = !DILocation(line: 237, column: 29, scope: !14973)
!14973 = distinct !DILexicalBlock(scope: !14969, file: !14628, line: 236, column: 45)
!14974 = !DILocation(line: 237, column: 21, scope: !14973)
!14975 = !DILocation(line: 238, column: 4, scope: !14973)
!14976 = !DILocation(line: 239, column: 19, scope: !14962)
!14977 = !DILocation(line: 0, scope: !14841, inlinedAt: !14978)
!14978 = distinct !DILocation(line: 242, column: 4, scope: !14962)
!14979 = !DILocation(line: 67, column: 15, scope: !14841, inlinedAt: !14978)
!14980 = !DILocation(line: 67, column: 33, scope: !14841, inlinedAt: !14978)
!14981 = !DILocation(line: 243, column: 4, scope: !14962)
!14982 = !DILocation(line: 244, column: 4, scope: !14962)
!14983 = !DILocation(line: 248, column: 4, scope: !14962)
!14984 = !DILocation(line: 251, column: 13, scope: !14985)
!14985 = distinct !DILexicalBlock(scope: !14938, file: !14628, line: 251, column: 13)
!14986 = !DILocation(line: 251, column: 13, scope: !14938)
!14987 = !DILocation(line: 258, column: 3, scope: !14988)
!14988 = distinct !DILexicalBlock(scope: !14985, file: !14628, line: 254, column: 9)
!14989 = !DILocation(line: 258, column: 18, scope: !14988)
!14990 = !DILocation(line: 258, column: 28, scope: !14988)
!14991 = !DILocation(line: 260, column: 49, scope: !14988)
!14992 = !DILocation(line: 260, column: 12, scope: !14988)
!14993 = !DILocation(line: 262, column: 3, scope: !14988)
!14994 = !DILocation(line: 0, scope: !14938)
!14995 = !DILocation(line: 0, scope: !14881, inlinedAt: !14996)
!14996 = distinct !DILocation(line: 267, column: 2, scope: !14920)
!14997 = !DILocation(line: 0, scope: !14889, inlinedAt: !14998)
!14998 = distinct !DILocation(line: 215, column: 2, scope: !14881, inlinedAt: !14996)
!14999 = !DILocation(line: 95, column: 2, scope: !14889, inlinedAt: !14998)
!15000 = !DILocation(line: 269, column: 2, scope: !14920)
!15001 = !DILocation(line: 270, column: 1, scope: !14920)
!15002 = distinct !DISubprogram(name: "z_impl_k_msgq_peek", scope: !14628, file: !14628, line: 284, type: !15003, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3239, retainedNodes: !15005)
!15003 = !DISubroutineType(types: !15004)
!15004 = !{!103, !14631, !102}
!15005 = !{!15006, !15007, !15008, !15009}
!15006 = !DILocalVariable(name: "msgq", arg: 1, scope: !15002, file: !14628, line: 284, type: !14631)
!15007 = !DILocalVariable(name: "data", arg: 2, scope: !15002, file: !14628, line: 284, type: !102)
!15008 = !DILocalVariable(name: "key", scope: !15002, file: !14628, line: 286, type: !14801)
!15009 = !DILocalVariable(name: "result", scope: !15002, file: !14628, line: 287, type: !103)
!15010 = !DILocation(line: 0, scope: !15002)
!15011 = !DILocation(line: 0, scope: !14809, inlinedAt: !15012)
!15012 = distinct !DILocation(line: 289, column: 8, scope: !15002)
!15013 = !DILocation(line: 55, column: 2, scope: !14818, inlinedAt: !15014)
!15014 = distinct !DILocation(line: 145, column: 10, scope: !14809, inlinedAt: !15012)
!15015 = !DILocation(line: 0, scope: !14818, inlinedAt: !15014)
!15016 = !DILocation(line: 291, column: 12, scope: !15017)
!15017 = distinct !DILexicalBlock(scope: !15002, file: !14628, line: 291, column: 6)
!15018 = !DILocation(line: 291, column: 22, scope: !15017)
!15019 = !DILocation(line: 291, column: 6, scope: !15002)
!15020 = !DILocation(line: 293, column: 28, scope: !15021)
!15021 = distinct !DILexicalBlock(scope: !15017, file: !14628, line: 291, column: 28)
!15022 = !DILocation(line: 293, column: 44, scope: !15021)
!15023 = !DILocation(line: 293, column: 9, scope: !15021)
!15024 = !DILocation(line: 295, column: 2, scope: !15021)
!15025 = !DILocation(line: 0, scope: !15017)
!15026 = !DILocation(line: 0, scope: !14881, inlinedAt: !15027)
!15027 = distinct !DILocation(line: 302, column: 2, scope: !15002)
!15028 = !DILocation(line: 0, scope: !14889, inlinedAt: !15029)
!15029 = distinct !DILocation(line: 215, column: 2, scope: !14881, inlinedAt: !15027)
!15030 = !DILocation(line: 95, column: 2, scope: !14889, inlinedAt: !15029)
!15031 = !DILocation(line: 304, column: 2, scope: !15002)
!15032 = distinct !DISubprogram(name: "z_impl_k_msgq_purge", scope: !14628, file: !14628, line: 318, type: !15033, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3239, retainedNodes: !15035)
!15033 = !DISubroutineType(types: !15034)
!15034 = !{null, !14631}
!15035 = !{!15036, !15037, !15038}
!15036 = !DILocalVariable(name: "msgq", arg: 1, scope: !15032, file: !14628, line: 318, type: !14631)
!15037 = !DILocalVariable(name: "key", scope: !15032, file: !14628, line: 320, type: !14801)
!15038 = !DILocalVariable(name: "pending_thread", scope: !15032, file: !14628, line: 321, type: !3257)
!15039 = !DILocation(line: 0, scope: !15032)
!15040 = !DILocation(line: 0, scope: !14809, inlinedAt: !15041)
!15041 = distinct !DILocation(line: 323, column: 8, scope: !15032)
!15042 = !DILocation(line: 55, column: 2, scope: !14818, inlinedAt: !15043)
!15043 = distinct !DILocation(line: 145, column: 10, scope: !14809, inlinedAt: !15041)
!15044 = !DILocation(line: 0, scope: !14818, inlinedAt: !15043)
!15045 = !DILocation(line: 328, column: 27, scope: !15032)
!15046 = !DILocation(line: 328, column: 65, scope: !15032)
!15047 = !DILocation(line: 328, column: 2, scope: !15032)
!15048 = !DILocation(line: 0, scope: !14841, inlinedAt: !15049)
!15049 = distinct !DILocation(line: 329, column: 3, scope: !15050)
!15050 = distinct !DILexicalBlock(scope: !15032, file: !14628, line: 328, column: 74)
!15051 = !DILocation(line: 67, column: 15, scope: !14841, inlinedAt: !15049)
!15052 = !DILocation(line: 67, column: 33, scope: !14841, inlinedAt: !15049)
!15053 = !DILocation(line: 330, column: 3, scope: !15050)
!15054 = distinct !{!15054, !15047, !15055}
!15055 = !DILocation(line: 331, column: 2, scope: !15032)
!15056 = !DILocation(line: 323, column: 27, scope: !15032)
!15057 = !DILocation(line: 333, column: 8, scope: !15032)
!15058 = !DILocation(line: 333, column: 18, scope: !15032)
!15059 = !DILocation(line: 334, column: 25, scope: !15032)
!15060 = !DILocation(line: 334, column: 8, scope: !15032)
!15061 = !DILocation(line: 334, column: 17, scope: !15032)
!15062 = !DILocation(line: 336, column: 2, scope: !15032)
!15063 = !DILocation(line: 337, column: 1, scope: !15032)
!15064 = distinct !DISubprogram(name: "z_impl_k_mutex_init", scope: !2419, file: !2419, line: 49, type: !15065, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2314, retainedNodes: !15074)
!15065 = !DISubroutineType(types: !15066)
!15066 = !{!103, !15067}
!15067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15068, size: 32)
!15068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !137, line: 2720, size: 160, elements: !15069)
!15069 = !{!15070, !15071, !15072, !15073}
!15070 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !15068, file: !137, line: 2722, baseType: !2350, size: 64)
!15071 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !15068, file: !137, line: 2724, baseType: !2332, size: 32, offset: 64)
!15072 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !15068, file: !137, line: 2727, baseType: !108, size: 32, offset: 96)
!15073 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !15068, file: !137, line: 2730, baseType: !103, size: 32, offset: 128)
!15074 = !{!15075}
!15075 = !DILocalVariable(name: "mutex", arg: 1, scope: !15064, file: !2419, line: 49, type: !15067)
!15076 = !DILocation(line: 0, scope: !15064)
!15077 = !DILocation(line: 51, column: 9, scope: !15064)
!15078 = !DILocation(line: 51, column: 15, scope: !15064)
!15079 = !DILocation(line: 52, column: 9, scope: !15064)
!15080 = !DILocation(line: 52, column: 20, scope: !15064)
!15081 = !DILocation(line: 54, column: 23, scope: !15064)
!15082 = !DILocation(line: 54, column: 2, scope: !15064)
!15083 = !DILocation(line: 60, column: 2, scope: !15064)
!15084 = distinct !DISubprogram(name: "z_waitq_init", scope: !14289, file: !14289, line: 47, type: !15085, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2314, retainedNodes: !15087)
!15085 = !DISubroutineType(types: !15086)
!15086 = !{null, !2349}
!15087 = !{!15088}
!15088 = !DILocalVariable(name: "w", arg: 1, scope: !15084, file: !14289, line: 47, type: !2349)
!15089 = !DILocation(line: 0, scope: !15084)
!15090 = !DILocation(line: 49, column: 21, scope: !15084)
!15091 = !DILocation(line: 49, column: 2, scope: !15084)
!15092 = !DILocation(line: 50, column: 1, scope: !15084)
!15093 = distinct !DISubprogram(name: "sys_dlist_init", scope: !146, file: !146, line: 197, type: !15094, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2314, retainedNodes: !15097)
!15094 = !DISubroutineType(types: !15095)
!15095 = !{null, !15096}
!15096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2354, size: 32)
!15097 = !{!15098}
!15098 = !DILocalVariable(name: "list", arg: 1, scope: !15093, file: !146, line: 197, type: !15096)
!15099 = !DILocation(line: 0, scope: !15093)
!15100 = !DILocation(line: 199, column: 8, scope: !15093)
!15101 = !DILocation(line: 199, column: 13, scope: !15093)
!15102 = !DILocation(line: 200, column: 8, scope: !15093)
!15103 = !DILocation(line: 200, column: 13, scope: !15093)
!15104 = !DILocation(line: 201, column: 1, scope: !15093)
!15105 = distinct !DISubprogram(name: "z_impl_k_mutex_lock", scope: !2419, file: !2419, line: 95, type: !15106, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2314, retainedNodes: !15112)
!15106 = !DISubroutineType(types: !15107)
!15107 = !{!103, !15067, !15108}
!15108 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !15109)
!15109 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !15110)
!15110 = !{!15111}
!15111 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15109, file: !105, line: 66, baseType: !104, size: 64)
!15112 = !{!15113, !15114, !15115, !15116, !15121, !15122, !15123}
!15113 = !DILocalVariable(name: "mutex", arg: 1, scope: !15105, file: !2419, line: 95, type: !15067)
!15114 = !DILocalVariable(name: "timeout", arg: 2, scope: !15105, file: !2419, line: 95, type: !15108)
!15115 = !DILocalVariable(name: "new_prio", scope: !15105, file: !2419, line: 97, type: !103)
!15116 = !DILocalVariable(name: "key", scope: !15105, file: !2419, line: 98, type: !15117)
!15117 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !250, line: 106, baseType: !15118)
!15118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !250, line: 32, size: 32, elements: !15119)
!15119 = !{!15120}
!15120 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15118, file: !250, line: 33, baseType: !103, size: 32)
!15121 = !DILocalVariable(name: "resched", scope: !15105, file: !2419, line: 99, type: !131)
!15122 = !DILocalVariable(name: "got_mutex", scope: !15105, file: !2419, line: 146, type: !103)
!15123 = !DILocalVariable(name: "waiter", scope: !15124, file: !2419, line: 169, type: !2332)
!15124 = distinct !DILexicalBlock(scope: !15125, file: !2419, line: 168, column: 36)
!15125 = distinct !DILexicalBlock(scope: !15105, file: !2419, line: 168, column: 6)
!15126 = !DILocation(line: 0, scope: !15105)
!15127 = !DILocalVariable(name: "l", arg: 1, scope: !15128, file: !250, line: 136, type: !15131)
!15128 = distinct !DISubprogram(name: "k_spin_lock", scope: !250, file: !250, line: 136, type: !15129, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2314, retainedNodes: !15132)
!15129 = !DISubroutineType(types: !15130)
!15130 = !{!15117, !15131}
!15131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2412, size: 32)
!15132 = !{!15127, !15133}
!15133 = !DILocalVariable(name: "k", scope: !15128, file: !250, line: 139, type: !15117)
!15134 = !DILocation(line: 0, scope: !15128, inlinedAt: !15135)
!15135 = distinct !DILocation(line: 105, column: 8, scope: !15105)
!15136 = !DILocation(line: 55, column: 2, scope: !15137, inlinedAt: !15141)
!15137 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6996, file: !6996, line: 42, type: !6997, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2314, retainedNodes: !15138)
!15138 = !{!15139, !15140}
!15139 = !DILocalVariable(name: "key", scope: !15137, file: !6996, line: 44, type: !32)
!15140 = !DILocalVariable(name: "tmp", scope: !15137, file: !6996, line: 53, type: !32)
!15141 = distinct !DILocation(line: 145, column: 10, scope: !15128, inlinedAt: !15135)
!15142 = !{i64 2228107}
!15143 = !DILocation(line: 0, scope: !15137, inlinedAt: !15141)
!15144 = !DILocation(line: 107, column: 6, scope: !15145)
!15145 = distinct !DILexicalBlock(scope: !15105, file: !2419, line: 107, column: 6)
!15146 = !DILocation(line: 107, column: 6, scope: !15105)
!15147 = !{!"branch_weights", i32 2000, i32 1}
!15148 = !DILocation(line: 110, column: 6, scope: !15149)
!15149 = distinct !DILexicalBlock(scope: !15145, file: !2419, line: 107, column: 71)
!15150 = !DILocation(line: 110, column: 21, scope: !15149)
!15151 = !DILocation(line: 109, column: 28, scope: !15149)
!15152 = !DILocation(line: 111, column: 13, scope: !15149)
!15153 = !DILocation(line: 114, column: 18, scope: !15149)
!15154 = !DILocation(line: 109, column: 10, scope: !15149)
!15155 = !DILocation(line: 109, column: 26, scope: !15149)
!15156 = !DILocation(line: 113, column: 20, scope: !15149)
!15157 = !DILocation(line: 114, column: 10, scope: !15149)
!15158 = !DILocation(line: 114, column: 16, scope: !15149)
!15159 = !DILocalVariable(name: "key", arg: 2, scope: !15160, file: !250, line: 190, type: !15117)
!15160 = distinct !DISubprogram(name: "k_spin_unlock", scope: !250, file: !250, line: 189, type: !15161, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2314, retainedNodes: !15163)
!15161 = !DISubroutineType(types: !15162)
!15162 = !{null, !15131, !15117}
!15163 = !{!15164, !15159}
!15164 = !DILocalVariable(name: "l", arg: 1, scope: !15160, file: !250, line: 189, type: !15131)
!15165 = !DILocation(line: 0, scope: !15160, inlinedAt: !15166)
!15166 = distinct !DILocation(line: 120, column: 3, scope: !15149)
!15167 = !DILocalVariable(name: "key", arg: 1, scope: !15168, file: !6996, line: 84, type: !32)
!15168 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6996, file: !6996, line: 84, type: !7007, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2314, retainedNodes: !15169)
!15169 = !{!15167}
!15170 = !DILocation(line: 0, scope: !15168, inlinedAt: !15171)
!15171 = distinct !DILocation(line: 215, column: 2, scope: !15160, inlinedAt: !15166)
!15172 = !DILocation(line: 95, column: 2, scope: !15168, inlinedAt: !15171)
!15173 = !{i64 2228924}
!15174 = !DILocation(line: 124, column: 3, scope: !15149)
!15175 = !DILocation(line: 127, column: 6, scope: !15176)
!15176 = distinct !DILexicalBlock(scope: !15105, file: !2419, line: 127, column: 6)
!15177 = !DILocation(line: 127, column: 6, scope: !15105)
!15178 = !{!"branch_weights", i32 1, i32 2000}
!15179 = !DILocation(line: 0, scope: !15160, inlinedAt: !15180)
!15180 = distinct !DILocation(line: 128, column: 3, scope: !15181)
!15181 = distinct !DILexicalBlock(scope: !15176, file: !2419, line: 127, column: 50)
!15182 = !DILocation(line: 0, scope: !15168, inlinedAt: !15183)
!15183 = distinct !DILocation(line: 215, column: 2, scope: !15160, inlinedAt: !15180)
!15184 = !DILocation(line: 95, column: 2, scope: !15168, inlinedAt: !15183)
!15185 = !DILocation(line: 132, column: 3, scope: !15181)
!15186 = !DILocation(line: 137, column: 53, scope: !15105)
!15187 = !DILocation(line: 137, column: 38, scope: !15105)
!15188 = !DILocation(line: 138, column: 29, scope: !15105)
!15189 = !DILocation(line: 138, column: 10, scope: !15105)
!15190 = !DILocation(line: 137, column: 13, scope: !15105)
!15191 = !DILocation(line: 142, column: 6, scope: !15192)
!15192 = distinct !DILexicalBlock(scope: !15105, file: !2419, line: 142, column: 6)
!15193 = !DILocation(line: 142, column: 6, scope: !15105)
!15194 = !DILocation(line: 143, column: 13, scope: !15195)
!15195 = distinct !DILexicalBlock(scope: !15192, file: !2419, line: 142, column: 59)
!15196 = !DILocation(line: 144, column: 2, scope: !15195)
!15197 = !DILocation(line: 146, column: 50, scope: !15105)
!15198 = !DILocation(line: 146, column: 18, scope: !15105)
!15199 = !DILocation(line: 153, column: 16, scope: !15200)
!15200 = distinct !DILexicalBlock(scope: !15105, file: !2419, line: 153, column: 6)
!15201 = !DILocation(line: 153, column: 6, scope: !15105)
!15202 = !DILocation(line: 0, scope: !15128, inlinedAt: !15203)
!15203 = distinct !DILocation(line: 162, column: 8, scope: !15105)
!15204 = !DILocation(line: 55, column: 2, scope: !15137, inlinedAt: !15205)
!15205 = distinct !DILocation(line: 145, column: 10, scope: !15128, inlinedAt: !15203)
!15206 = !DILocation(line: 0, scope: !15137, inlinedAt: !15205)
!15207 = !DILocation(line: 168, column: 6, scope: !15125)
!15208 = !DILocation(line: 168, column: 6, scope: !15105)
!15209 = !DILocation(line: 169, column: 29, scope: !15124)
!15210 = !DILocation(line: 0, scope: !15124)
!15211 = !DILocation(line: 171, column: 22, scope: !15124)
!15212 = !DILocation(line: 171, column: 14, scope: !15124)
!15213 = !DILocation(line: 172, column: 42, scope: !15124)
!15214 = !DILocation(line: 172, column: 29, scope: !15124)
!15215 = !DILocation(line: 172, column: 55, scope: !15124)
!15216 = !DILocation(line: 172, column: 4, scope: !15124)
!15217 = !DILocation(line: 173, column: 11, scope: !15124)
!15218 = !DILocation(line: 177, column: 13, scope: !15124)
!15219 = !DILocation(line: 177, column: 48, scope: !15124)
!15220 = !DILocation(line: 180, column: 6, scope: !15105)
!15221 = !DILocation(line: 181, column: 3, scope: !15222)
!15222 = distinct !DILexicalBlock(scope: !15223, file: !2419, line: 180, column: 15)
!15223 = distinct !DILexicalBlock(scope: !15105, file: !2419, line: 180, column: 6)
!15224 = !DILocation(line: 182, column: 2, scope: !15222)
!15225 = !DILocation(line: 0, scope: !15160, inlinedAt: !15226)
!15226 = distinct !DILocation(line: 183, column: 3, scope: !15227)
!15227 = distinct !DILexicalBlock(scope: !15223, file: !2419, line: 182, column: 9)
!15228 = !DILocation(line: 0, scope: !15168, inlinedAt: !15229)
!15229 = distinct !DILocation(line: 215, column: 2, scope: !15160, inlinedAt: !15226)
!15230 = !DILocation(line: 95, column: 2, scope: !15168, inlinedAt: !15229)
!15231 = !DILocation(line: 189, column: 1, scope: !15105)
!15232 = distinct !DISubprogram(name: "new_prio_for_inheritance", scope: !2419, file: !2419, line: 72, type: !15233, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2314, retainedNodes: !15235)
!15233 = !DISubroutineType(types: !15234)
!15234 = !{!331, !331, !331}
!15235 = !{!15236, !15237, !15238}
!15236 = !DILocalVariable(name: "target", arg: 1, scope: !15232, file: !2419, line: 72, type: !331)
!15237 = !DILocalVariable(name: "limit", arg: 2, scope: !15232, file: !2419, line: 72, type: !331)
!15238 = !DILocalVariable(name: "new_prio", scope: !15232, file: !2419, line: 74, type: !103)
!15239 = !DILocation(line: 0, scope: !15232)
!15240 = !DILocation(line: 74, column: 17, scope: !15232)
!15241 = !DILocation(line: 76, column: 13, scope: !15232)
!15242 = !DILocation(line: 78, column: 2, scope: !15232)
!15243 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !13964, file: !13964, line: 211, type: !15244, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2314, retainedNodes: !15246)
!15244 = !DISubroutineType(types: !15245)
!15245 = !{!131, !103, !103}
!15246 = !{!15247, !15248}
!15247 = !DILocalVariable(name: "prio", arg: 1, scope: !15243, file: !13964, line: 211, type: !103)
!15248 = !DILocalVariable(name: "test_prio", arg: 2, scope: !15243, file: !13964, line: 211, type: !103)
!15249 = !DILocation(line: 0, scope: !15243)
!15250 = !DILocation(line: 213, column: 9, scope: !15243)
!15251 = !DILocation(line: 213, column: 2, scope: !15243)
!15252 = distinct !DISubprogram(name: "adjust_owner_prio", scope: !2419, file: !2419, line: 81, type: !15253, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2314, retainedNodes: !15255)
!15253 = !DISubroutineType(types: !15254)
!15254 = !{!131, !15067, !331}
!15255 = !{!15256, !15257}
!15256 = !DILocalVariable(name: "mutex", arg: 1, scope: !15252, file: !2419, line: 81, type: !15067)
!15257 = !DILocalVariable(name: "new_prio", arg: 2, scope: !15252, file: !2419, line: 81, type: !331)
!15258 = !DILocation(line: 0, scope: !15252)
!15259 = !DILocation(line: 83, column: 13, scope: !15260)
!15260 = distinct !DILexicalBlock(scope: !15252, file: !2419, line: 83, column: 6)
!15261 = !DILocation(line: 83, column: 25, scope: !15260)
!15262 = !DILocation(line: 83, column: 6, scope: !15260)
!15263 = !DILocation(line: 83, column: 30, scope: !15260)
!15264 = !DILocation(line: 83, column: 6, scope: !15252)
!15265 = !DILocation(line: 90, column: 10, scope: !15266)
!15266 = distinct !DILexicalBlock(scope: !15260, file: !2419, line: 83, column: 43)
!15267 = !DILocation(line: 90, column: 3, scope: !15266)
!15268 = !DILocation(line: 93, column: 1, scope: !15252)
!15269 = distinct !DISubprogram(name: "z_waitq_head", scope: !14289, file: !14289, line: 52, type: !15270, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2314, retainedNodes: !15272)
!15270 = !DISubroutineType(types: !15271)
!15271 = !{!2332, !2349}
!15272 = !{!15273}
!15273 = !DILocalVariable(name: "w", arg: 1, scope: !15269, file: !14289, line: 52, type: !2349)
!15274 = !DILocation(line: 0, scope: !15269)
!15275 = !DILocation(line: 54, column: 52, scope: !15269)
!15276 = !DILocation(line: 54, column: 28, scope: !15269)
!15277 = !DILocation(line: 54, column: 9, scope: !15269)
!15278 = !DILocation(line: 54, column: 2, scope: !15269)
!15279 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !146, file: !146, line: 294, type: !15280, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2314, retainedNodes: !15282)
!15280 = !DISubroutineType(types: !15281)
!15281 = !{!2317, !15096}
!15282 = !{!15283}
!15283 = !DILocalVariable(name: "list", arg: 1, scope: !15279, file: !146, line: 294, type: !15096)
!15284 = !DILocation(line: 0, scope: !15279)
!15285 = !DILocation(line: 296, column: 9, scope: !15279)
!15286 = !DILocation(line: 296, column: 49, scope: !15279)
!15287 = !DILocation(line: 296, column: 2, scope: !15279)
!15288 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !146, file: !146, line: 266, type: !15289, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2314, retainedNodes: !15291)
!15289 = !DISubroutineType(types: !15290)
!15290 = !{!131, !15096}
!15291 = !{!15292}
!15292 = !DILocalVariable(name: "list", arg: 1, scope: !15288, file: !146, line: 266, type: !15096)
!15293 = !DILocation(line: 0, scope: !15288)
!15294 = !DILocation(line: 268, column: 15, scope: !15288)
!15295 = !DILocation(line: 268, column: 20, scope: !15288)
!15296 = !DILocation(line: 268, column: 2, scope: !15288)
!15297 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !13964, file: !13964, line: 206, type: !15244, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2314, retainedNodes: !15298)
!15298 = !{!15299, !15300}
!15299 = !DILocalVariable(name: "prio1", arg: 1, scope: !15297, file: !13964, line: 206, type: !103)
!15300 = !DILocalVariable(name: "prio2", arg: 2, scope: !15297, file: !13964, line: 206, type: !103)
!15301 = !DILocation(line: 0, scope: !15297)
!15302 = !DILocation(line: 208, column: 15, scope: !15297)
!15303 = !DILocation(line: 208, column: 2, scope: !15297)
!15304 = distinct !DISubprogram(name: "z_get_new_prio_with_ceiling", scope: !13964, file: !13964, line: 186, type: !396, scopeLine: 187, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2314, retainedNodes: !15305)
!15305 = !{!15306}
!15306 = !DILocalVariable(name: "prio", arg: 1, scope: !15304, file: !13964, line: 186, type: !103)
!15307 = !DILocation(line: 0, scope: !15304)
!15308 = !DILocation(line: 188, column: 9, scope: !15304)
!15309 = !DILocation(line: 188, column: 2, scope: !15304)
!15310 = distinct !DISubprogram(name: "z_is_under_prio_ceiling", scope: !13964, file: !13964, line: 181, type: !15311, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2314, retainedNodes: !15313)
!15311 = !DISubroutineType(types: !15312)
!15312 = !{!131, !103}
!15313 = !{!15314}
!15314 = !DILocalVariable(name: "prio", arg: 1, scope: !15310, file: !13964, line: 181, type: !103)
!15315 = !DILocation(line: 0, scope: !15310)
!15316 = !DILocation(line: 183, column: 14, scope: !15310)
!15317 = !DILocation(line: 183, column: 2, scope: !15310)
!15318 = distinct !DISubprogram(name: "z_impl_k_mutex_unlock", scope: !2419, file: !2419, line: 201, type: !15065, scopeLine: 202, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2314, retainedNodes: !15319)
!15319 = !{!15320, !15321, !15322, !15323}
!15320 = !DILocalVariable(name: "mutex", arg: 1, scope: !15318, file: !2419, line: 201, type: !15067)
!15321 = !DILocalVariable(name: "new_owner", scope: !15318, file: !2419, line: 203, type: !2332)
!15322 = !DILocalVariable(name: "key", scope: !15318, file: !2419, line: 242, type: !15117)
!15323 = !DILabel(scope: !15318, name: "k_mutex_unlock_return", file: !2419, line: 270)
!15324 = !DILocation(line: 0, scope: !15318)
!15325 = !DILocation(line: 209, column: 2, scope: !15326)
!15326 = distinct !DILexicalBlock(scope: !15318, file: !2419, line: 209, column: 2)
!15327 = !DILocation(line: 209, column: 2, scope: !15318)
!15328 = !DILocation(line: 217, column: 2, scope: !15329)
!15329 = distinct !DILexicalBlock(scope: !15318, file: !2419, line: 217, column: 2)
!15330 = !DILocation(line: 217, column: 2, scope: !15318)
!15331 = !DILocation(line: 237, column: 13, scope: !15332)
!15332 = distinct !DILexicalBlock(scope: !15318, file: !2419, line: 237, column: 6)
!15333 = !DILocation(line: 237, column: 24, scope: !15332)
!15334 = !DILocation(line: 237, column: 6, scope: !15318)
!15335 = !DILocation(line: 238, column: 20, scope: !15336)
!15336 = distinct !DILexicalBlock(scope: !15332, file: !2419, line: 237, column: 30)
!15337 = !DILocation(line: 239, column: 3, scope: !15336)
!15338 = !DILocation(line: 0, scope: !15128, inlinedAt: !15339)
!15339 = distinct !DILocation(line: 242, column: 25, scope: !15318)
!15340 = !DILocation(line: 55, column: 2, scope: !15137, inlinedAt: !15341)
!15341 = distinct !DILocation(line: 145, column: 10, scope: !15128, inlinedAt: !15339)
!15342 = !DILocation(line: 0, scope: !15137, inlinedAt: !15341)
!15343 = !DILocation(line: 244, column: 34, scope: !15318)
!15344 = !DILocation(line: 244, column: 2, scope: !15318)
!15345 = !DILocation(line: 247, column: 44, scope: !15318)
!15346 = !DILocation(line: 247, column: 14, scope: !15318)
!15347 = !DILocation(line: 249, column: 15, scope: !15318)
!15348 = !DILocation(line: 254, column: 16, scope: !15349)
!15349 = distinct !DILexicalBlock(scope: !15318, file: !2419, line: 254, column: 6)
!15350 = !DILocation(line: 254, column: 6, scope: !15318)
!15351 = !DILocation(line: 260, column: 44, scope: !15352)
!15352 = distinct !DILexicalBlock(scope: !15349, file: !2419, line: 254, column: 25)
!15353 = !DILocation(line: 260, column: 28, scope: !15352)
!15354 = !DILocation(line: 260, column: 26, scope: !15352)
!15355 = !DILocalVariable(name: "thread", arg: 1, scope: !15356, file: !13984, line: 65, type: !2332)
!15356 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13984, file: !13984, line: 65, type: !15357, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2314, retainedNodes: !15359)
!15357 = !DISubroutineType(types: !15358)
!15358 = !{null, !2332, !32}
!15359 = !{!15355, !15360}
!15360 = !DILocalVariable(name: "value", arg: 2, scope: !15356, file: !13984, line: 65, type: !32)
!15361 = !DILocation(line: 0, scope: !15356, inlinedAt: !15362)
!15362 = distinct !DILocation(line: 261, column: 3, scope: !15352)
!15363 = !DILocation(line: 67, column: 15, scope: !15356, inlinedAt: !15362)
!15364 = !DILocation(line: 67, column: 33, scope: !15356, inlinedAt: !15362)
!15365 = !DILocation(line: 262, column: 3, scope: !15352)
!15366 = !DILocation(line: 263, column: 3, scope: !15352)
!15367 = !DILocation(line: 264, column: 2, scope: !15352)
!15368 = !DILocation(line: 265, column: 21, scope: !15369)
!15369 = distinct !DILexicalBlock(scope: !15349, file: !2419, line: 264, column: 9)
!15370 = !DILocation(line: 0, scope: !15160, inlinedAt: !15371)
!15371 = distinct !DILocation(line: 266, column: 3, scope: !15369)
!15372 = !DILocation(line: 0, scope: !15168, inlinedAt: !15373)
!15373 = distinct !DILocation(line: 215, column: 2, scope: !15160, inlinedAt: !15371)
!15374 = !DILocation(line: 95, column: 2, scope: !15168, inlinedAt: !15373)
!15375 = !DILocation(line: 274, column: 1, scope: !15318)
!15376 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2530, file: !2530, line: 93, type: !15377, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !15379)
!15377 = !DISubroutineType(types: !15378)
!15378 = !{!331, !2425, !2425}
!15379 = !{!15380, !15381, !15382, !15383}
!15380 = !DILocalVariable(name: "thread_1", arg: 1, scope: !15376, file: !2530, line: 93, type: !2425)
!15381 = !DILocalVariable(name: "thread_2", arg: 2, scope: !15376, file: !2530, line: 94, type: !2425)
!15382 = !DILocalVariable(name: "b1", scope: !15376, file: !2530, line: 97, type: !331)
!15383 = !DILocalVariable(name: "b2", scope: !15376, file: !2530, line: 98, type: !331)
!15384 = !DILocation(line: 0, scope: !15376)
!15385 = !DILocation(line: 97, column: 30, scope: !15376)
!15386 = !DILocation(line: 98, column: 30, scope: !15376)
!15387 = !DILocation(line: 100, column: 9, scope: !15388)
!15388 = distinct !DILexicalBlock(scope: !15376, file: !2530, line: 100, column: 6)
!15389 = !DILocation(line: 100, column: 6, scope: !15376)
!15390 = !DILocation(line: 125, column: 1, scope: !15376)
!15391 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2530, file: !2530, line: 428, type: !15392, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !15394)
!15392 = !DISubroutineType(types: !15393)
!15393 = !{null, !2425}
!15394 = !{!15395}
!15395 = !DILocalVariable(name: "curr", arg: 1, scope: !15391, file: !2530, line: 428, type: !2425)
!15396 = !DILocation(line: 0, scope: !15391)
!15397 = !DILocation(line: 434, column: 6, scope: !15398)
!15398 = distinct !DILexicalBlock(scope: !15391, file: !2530, line: 434, column: 6)
!15399 = !DILocation(line: 434, column: 23, scope: !15398)
!15400 = !DILocation(line: 434, column: 6, scope: !15391)
!15401 = !DILocation(line: 435, column: 50, scope: !15402)
!15402 = distinct !DILexicalBlock(scope: !15398, file: !2530, line: 434, column: 29)
!15403 = !DILocation(line: 435, column: 48, scope: !15402)
!15404 = !DILocation(line: 435, column: 29, scope: !15402)
!15405 = !DILocation(line: 436, column: 24, scope: !15402)
!15406 = !DILocation(line: 436, column: 3, scope: !15402)
!15407 = !DILocation(line: 437, column: 2, scope: !15402)
!15408 = !DILocation(line: 438, column: 1, scope: !15391)
!15409 = distinct !DISubprogram(name: "slice_time", scope: !2530, file: !2530, line: 407, type: !15410, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !15412)
!15410 = !DISubroutineType(types: !15411)
!15411 = !{!103, !2425}
!15412 = !{!15413, !15414}
!15413 = !DILocalVariable(name: "curr", arg: 1, scope: !15409, file: !2530, line: 407, type: !2425)
!15414 = !DILocalVariable(name: "ret", scope: !15409, file: !2530, line: 409, type: !103)
!15415 = !DILocation(line: 0, scope: !15409)
!15416 = !DILocation(line: 409, column: 12, scope: !15409)
!15417 = !DILocation(line: 416, column: 2, scope: !15409)
!15418 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2530, file: !2530, line: 440, type: !15419, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !15421)
!15419 = !DISubroutineType(types: !15420)
!15420 = !{null, !331, !103}
!15421 = !{!15422, !15423, !15424, !15430}
!15422 = !DILocalVariable(name: "slice", arg: 1, scope: !15418, file: !2530, line: 440, type: !331)
!15423 = !DILocalVariable(name: "prio", arg: 2, scope: !15418, file: !2530, line: 440, type: !103)
!15424 = !DILocalVariable(name: "__i", scope: !15425, file: !2530, line: 442, type: !15426)
!15425 = distinct !DILexicalBlock(scope: !15418, file: !2530, line: 442, column: 2)
!15426 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !250, line: 106, baseType: !15427)
!15427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !250, line: 32, size: 32, elements: !15428)
!15428 = !{!15429}
!15429 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15427, file: !250, line: 33, baseType: !103, size: 32)
!15430 = !DILocalVariable(name: "__key", scope: !15425, file: !2530, line: 442, type: !15426)
!15431 = !DILocation(line: 0, scope: !15418)
!15432 = !DILocation(line: 0, scope: !15425)
!15433 = !DILocalVariable(name: "l", arg: 1, scope: !15434, file: !250, line: 136, type: !15437)
!15434 = distinct !DISubprogram(name: "k_spin_lock", scope: !250, file: !250, line: 136, type: !15435, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !15438)
!15435 = !DISubroutineType(types: !15436)
!15436 = !{!15426, !15437}
!15437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2519, size: 32)
!15438 = !{!15433, !15439}
!15439 = !DILocalVariable(name: "k", scope: !15434, file: !250, line: 139, type: !15426)
!15440 = !DILocation(line: 0, scope: !15434, inlinedAt: !15441)
!15441 = distinct !DILocation(line: 442, column: 2, scope: !15425)
!15442 = !DILocation(line: 55, column: 2, scope: !15443, inlinedAt: !15447)
!15443 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6996, file: !6996, line: 42, type: !6997, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !15444)
!15444 = !{!15445, !15446}
!15445 = !DILocalVariable(name: "key", scope: !15443, file: !6996, line: 44, type: !32)
!15446 = !DILocalVariable(name: "tmp", scope: !15443, file: !6996, line: 53, type: !32)
!15447 = distinct !DILocation(line: 145, column: 10, scope: !15434, inlinedAt: !15441)
!15448 = !{i64 2267670}
!15449 = !DILocation(line: 0, scope: !15443, inlinedAt: !15447)
!15450 = !DILocation(line: 443, column: 29, scope: !15451)
!15451 = distinct !DILexicalBlock(scope: !15452, file: !2530, line: 442, column: 26)
!15452 = distinct !DILexicalBlock(scope: !15425, file: !2530, line: 442, column: 2)
!15453 = !DILocation(line: 444, column: 17, scope: !15451)
!15454 = !DILocation(line: 445, column: 51, scope: !15455)
!15455 = distinct !DILexicalBlock(scope: !15451, file: !2530, line: 445, column: 7)
!15456 = !DILocation(line: 445, column: 7, scope: !15451)
!15457 = !DILocation(line: 0, scope: !15451)
!15458 = !DILocation(line: 451, column: 18, scope: !15451)
!15459 = !DILocation(line: 452, column: 3, scope: !15451)
!15460 = !DILocalVariable(name: "key", arg: 2, scope: !15461, file: !250, line: 190, type: !15426)
!15461 = distinct !DISubprogram(name: "k_spin_unlock", scope: !250, file: !250, line: 189, type: !15462, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !15464)
!15462 = !DISubroutineType(types: !15463)
!15463 = !{null, !15437, !15426}
!15464 = !{!15465, !15460}
!15465 = !DILocalVariable(name: "l", arg: 1, scope: !15461, file: !250, line: 189, type: !15437)
!15466 = !DILocation(line: 0, scope: !15461, inlinedAt: !15467)
!15467 = distinct !DILocation(line: 442, column: 2, scope: !15452)
!15468 = !DILocalVariable(name: "key", arg: 1, scope: !15469, file: !6996, line: 84, type: !32)
!15469 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6996, file: !6996, line: 84, type: !7007, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !15470)
!15470 = !{!15468}
!15471 = !DILocation(line: 0, scope: !15469, inlinedAt: !15472)
!15472 = distinct !DILocation(line: 215, column: 2, scope: !15461, inlinedAt: !15467)
!15473 = !DILocation(line: 95, column: 2, scope: !15469, inlinedAt: !15472)
!15474 = !{i64 2268487}
!15475 = !DILocation(line: 454, column: 1, scope: !15418)
!15476 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !3604, file: !3604, line: 389, type: !8557, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !15477)
!15477 = !{!15478}
!15478 = !DILocalVariable(name: "t", arg: 1, scope: !15476, file: !3604, line: 389, type: !108)
!15479 = !DILocation(line: 0, scope: !15476)
!15480 = !DILocalVariable(name: "t", arg: 1, scope: !15481, file: !3604, line: 102, type: !109)
!15481 = distinct !DISubprogram(name: "z_tmcvt", scope: !3604, file: !3604, line: 102, type: !3630, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !15482)
!15482 = !{!15480, !15483, !15484, !15485, !15486, !15487, !15488, !15489, !15490, !15491, !15492}
!15483 = !DILocalVariable(name: "from_hz", arg: 2, scope: !15481, file: !3604, line: 102, type: !108)
!15484 = !DILocalVariable(name: "to_hz", arg: 3, scope: !15481, file: !3604, line: 103, type: !108)
!15485 = !DILocalVariable(name: "const_hz", arg: 4, scope: !15481, file: !3604, line: 103, type: !131)
!15486 = !DILocalVariable(name: "result32", arg: 5, scope: !15481, file: !3604, line: 104, type: !131)
!15487 = !DILocalVariable(name: "round_up", arg: 6, scope: !15481, file: !3604, line: 104, type: !131)
!15488 = !DILocalVariable(name: "round_off", arg: 7, scope: !15481, file: !3604, line: 105, type: !131)
!15489 = !DILocalVariable(name: "mul_ratio", scope: !15481, file: !3604, line: 107, type: !131)
!15490 = !DILocalVariable(name: "div_ratio", scope: !15481, file: !3604, line: 109, type: !131)
!15491 = !DILocalVariable(name: "off", scope: !15481, file: !3604, line: 116, type: !109)
!15492 = !DILocalVariable(name: "rdivisor", scope: !15493, file: !3604, line: 119, type: !108)
!15493 = distinct !DILexicalBlock(scope: !15494, file: !3604, line: 118, column: 18)
!15494 = distinct !DILexicalBlock(scope: !15481, file: !3604, line: 118, column: 6)
!15495 = !DILocation(line: 0, scope: !15481, inlinedAt: !15496)
!15496 = distinct !DILocation(line: 392, column: 9, scope: !15476)
!15497 = !DILocation(line: 143, column: 25, scope: !15498, inlinedAt: !15496)
!15498 = distinct !DILexicalBlock(scope: !15499, file: !3604, line: 142, column: 17)
!15499 = distinct !DILexicalBlock(scope: !15500, file: !3604, line: 142, column: 7)
!15500 = distinct !DILexicalBlock(scope: !15501, file: !3604, line: 141, column: 24)
!15501 = distinct !DILexicalBlock(scope: !15502, file: !3604, line: 141, column: 13)
!15502 = distinct !DILexicalBlock(scope: !15481, file: !3604, line: 134, column: 6)
!15503 = !DILocation(line: 392, column: 2, scope: !15476)
!15504 = distinct !DISubprogram(name: "z_time_slice", scope: !2530, file: !2530, line: 502, type: !9573, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !15505)
!15505 = !{!15506, !15507}
!15506 = !DILocalVariable(name: "ticks", arg: 1, scope: !15504, file: !2530, line: 502, type: !103)
!15507 = !DILocalVariable(name: "key", scope: !15504, file: !2530, line: 511, type: !15426)
!15508 = !DILocation(line: 0, scope: !15504)
!15509 = !DILocation(line: 0, scope: !15434, inlinedAt: !15510)
!15510 = distinct !DILocation(line: 511, column: 25, scope: !15504)
!15511 = !DILocation(line: 55, column: 2, scope: !15443, inlinedAt: !15512)
!15512 = distinct !DILocation(line: 145, column: 10, scope: !15434, inlinedAt: !15510)
!15513 = !DILocation(line: 0, scope: !15443, inlinedAt: !15512)
!15514 = !DILocation(line: 514, column: 6, scope: !15515)
!15515 = distinct !DILexicalBlock(scope: !15504, file: !2530, line: 514, column: 6)
!15516 = !DILocation(line: 514, column: 25, scope: !15515)
!15517 = !DILocation(line: 514, column: 22, scope: !15515)
!15518 = !DILocation(line: 514, column: 6, scope: !15504)
!15519 = !DILocation(line: 515, column: 3, scope: !15520)
!15520 = distinct !DILexicalBlock(scope: !15515, file: !2530, line: 514, column: 35)
!15521 = !DILocation(line: 0, scope: !15461, inlinedAt: !15522)
!15522 = distinct !DILocation(line: 516, column: 3, scope: !15520)
!15523 = !DILocation(line: 0, scope: !15469, inlinedAt: !15524)
!15524 = distinct !DILocation(line: 215, column: 2, scope: !15461, inlinedAt: !15522)
!15525 = !DILocation(line: 95, column: 2, scope: !15469, inlinedAt: !15524)
!15526 = !DILocation(line: 517, column: 3, scope: !15520)
!15527 = !DILocation(line: 519, column: 18, scope: !15504)
!15528 = !DILocation(line: 522, column: 6, scope: !15529)
!15529 = distinct !DILexicalBlock(scope: !15504, file: !2530, line: 522, column: 6)
!15530 = !DILocation(line: 522, column: 27, scope: !15529)
!15531 = !DILocation(line: 522, column: 30, scope: !15529)
!15532 = !DILocation(line: 522, column: 6, scope: !15504)
!15533 = !DILocation(line: 523, column: 30, scope: !15534)
!15534 = distinct !DILexicalBlock(scope: !15535, file: !2530, line: 523, column: 7)
!15535 = distinct !DILexicalBlock(scope: !15529, file: !2530, line: 522, column: 51)
!15536 = !DILocation(line: 523, column: 13, scope: !15534)
!15537 = !DILocation(line: 523, column: 7, scope: !15535)
!15538 = !DILocation(line: 530, column: 10, scope: !15539)
!15539 = distinct !DILexicalBlock(scope: !15534, file: !2530, line: 523, column: 43)
!15540 = !DILocation(line: 531, column: 3, scope: !15539)
!15541 = !DILocation(line: 532, column: 30, scope: !15542)
!15542 = distinct !DILexicalBlock(scope: !15534, file: !2530, line: 531, column: 10)
!15543 = !DILocation(line: 535, column: 29, scope: !15544)
!15544 = distinct !DILexicalBlock(scope: !15529, file: !2530, line: 534, column: 9)
!15545 = !DILocation(line: 0, scope: !15461, inlinedAt: !15546)
!15546 = distinct !DILocation(line: 537, column: 2, scope: !15504)
!15547 = !DILocation(line: 0, scope: !15469, inlinedAt: !15548)
!15548 = distinct !DILocation(line: 215, column: 2, scope: !15461, inlinedAt: !15546)
!15549 = !DILocation(line: 95, column: 2, scope: !15469, inlinedAt: !15548)
!15550 = !DILocation(line: 538, column: 1, scope: !15504)
!15551 = distinct !DISubprogram(name: "sliceable", scope: !2530, file: !2530, line: 468, type: !15552, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !15554)
!15552 = !DISubroutineType(types: !15553)
!15553 = !{!131, !2425}
!15554 = !{!15555, !15556}
!15555 = !DILocalVariable(name: "thread", arg: 1, scope: !15551, file: !2530, line: 468, type: !2425)
!15556 = !DILocalVariable(name: "ret", scope: !15551, file: !2530, line: 470, type: !131)
!15557 = !DILocation(line: 0, scope: !15551)
!15558 = !DILocation(line: 470, column: 13, scope: !15551)
!15559 = !DILocation(line: 471, column: 3, scope: !15551)
!15560 = !DILocation(line: 471, column: 7, scope: !15551)
!15561 = !DILocation(line: 472, column: 3, scope: !15551)
!15562 = !DILocation(line: 472, column: 37, scope: !15551)
!15563 = !DILocation(line: 472, column: 24, scope: !15551)
!15564 = !DILocation(line: 472, column: 43, scope: !15551)
!15565 = !DILocation(line: 472, column: 7, scope: !15551)
!15566 = !DILocation(line: 473, column: 3, scope: !15551)
!15567 = !DILocation(line: 473, column: 7, scope: !15551)
!15568 = !DILocation(line: 473, column: 6, scope: !15551)
!15569 = !DILocation(line: 479, column: 2, scope: !15551)
!15570 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2530, file: !2530, line: 482, type: !15571, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !15573)
!15571 = !DISubroutineType(types: !15572)
!15572 = !{!15426, !15426}
!15573 = !{!15574, !15575}
!15574 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !15570, file: !2530, line: 482, type: !15426)
!15575 = !DILocalVariable(name: "curr", scope: !15570, file: !2530, line: 484, type: !2425)
!15576 = !DILocation(line: 0, scope: !15570)
!15577 = !DILocation(line: 484, column: 26, scope: !15570)
!15578 = !DILocation(line: 493, column: 7, scope: !15579)
!15579 = distinct !DILexicalBlock(scope: !15570, file: !2530, line: 493, column: 6)
!15580 = !DILocation(line: 493, column: 6, scope: !15570)
!15581 = !DILocation(line: 494, column: 3, scope: !15582)
!15582 = distinct !DILexicalBlock(scope: !15579, file: !2530, line: 493, column: 49)
!15583 = !DILocation(line: 495, column: 2, scope: !15582)
!15584 = !DILocation(line: 496, column: 2, scope: !15570)
!15585 = !DILocation(line: 499, column: 1, scope: !15570)
!15586 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !13964, file: !13964, line: 106, type: !15552, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !15587)
!15587 = !{!15588, !15589}
!15588 = !DILocalVariable(name: "thread", arg: 1, scope: !15586, file: !13964, line: 106, type: !2425)
!15589 = !DILocalVariable(name: "state", scope: !15586, file: !13964, line: 108, type: !185)
!15590 = !DILocation(line: 0, scope: !15586)
!15591 = !DILocation(line: 108, column: 31, scope: !15586)
!15592 = !DILocation(line: 110, column: 16, scope: !15586)
!15593 = !DILocation(line: 111, column: 41, scope: !15586)
!15594 = !DILocation(line: 110, column: 2, scope: !15586)
!15595 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2530, file: !2530, line: 393, type: !15392, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !15596)
!15596 = !{!15597}
!15597 = !DILocalVariable(name: "thread", arg: 1, scope: !15595, file: !2530, line: 393, type: !2425)
!15598 = !DILocation(line: 0, scope: !15595)
!15599 = !DILocation(line: 395, column: 6, scope: !15600)
!15600 = distinct !DILexicalBlock(scope: !15595, file: !2530, line: 395, column: 6)
!15601 = !DILocation(line: 395, column: 6, scope: !15595)
!15602 = !DILocalVariable(name: "thread", arg: 1, scope: !15603, file: !2530, line: 264, type: !2425)
!15603 = distinct !DISubprogram(name: "dequeue_thread", scope: !2530, file: !2530, line: 264, type: !15392, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !15604)
!15604 = !{!15602}
!15605 = !DILocation(line: 0, scope: !15603, inlinedAt: !15606)
!15606 = distinct !DILocation(line: 396, column: 3, scope: !15607)
!15607 = distinct !DILexicalBlock(scope: !15600, file: !2530, line: 395, column: 34)
!15608 = !DILocation(line: 266, column: 15, scope: !15603, inlinedAt: !15606)
!15609 = !DILocation(line: 266, column: 28, scope: !15603, inlinedAt: !15606)
!15610 = !DILocalVariable(name: "thread", arg: 1, scope: !15611, file: !2530, line: 232, type: !2425)
!15611 = distinct !DISubprogram(name: "runq_remove", scope: !2530, file: !2530, line: 232, type: !15392, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !15612)
!15612 = !{!15610}
!15613 = !DILocation(line: 0, scope: !15611, inlinedAt: !15614)
!15614 = distinct !DILocation(line: 268, column: 3, scope: !15615, inlinedAt: !15606)
!15615 = distinct !DILexicalBlock(scope: !15616, file: !2530, line: 267, column: 35)
!15616 = distinct !DILexicalBlock(scope: !15603, file: !2530, line: 267, column: 6)
!15617 = !DILocation(line: 234, column: 2, scope: !15611, inlinedAt: !15614)
!15618 = !DILocation(line: 397, column: 2, scope: !15607)
!15619 = !DILocalVariable(name: "thread", arg: 1, scope: !15620, file: !2530, line: 250, type: !2425)
!15620 = distinct !DISubprogram(name: "queue_thread", scope: !2530, file: !2530, line: 250, type: !15392, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !15621)
!15621 = !{!15619}
!15622 = !DILocation(line: 0, scope: !15620, inlinedAt: !15623)
!15623 = distinct !DILocation(line: 398, column: 2, scope: !15595)
!15624 = !DILocation(line: 252, column: 15, scope: !15620, inlinedAt: !15623)
!15625 = !DILocation(line: 252, column: 28, scope: !15620, inlinedAt: !15623)
!15626 = !DILocalVariable(name: "thread", arg: 1, scope: !15627, file: !2530, line: 227, type: !2425)
!15627 = distinct !DISubprogram(name: "runq_add", scope: !2530, file: !2530, line: 227, type: !15392, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !15628)
!15628 = !{!15626}
!15629 = !DILocation(line: 0, scope: !15627, inlinedAt: !15630)
!15630 = distinct !DILocation(line: 254, column: 3, scope: !15631, inlinedAt: !15623)
!15631 = distinct !DILexicalBlock(scope: !15632, file: !2530, line: 253, column: 35)
!15632 = distinct !DILexicalBlock(scope: !15620, file: !2530, line: 253, column: 6)
!15633 = !DILocalVariable(name: "pq", arg: 1, scope: !15634, file: !2530, line: 181, type: !15637)
!15634 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2530, file: !2530, line: 181, type: !15635, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !15638)
!15635 = !DISubroutineType(types: !15636)
!15636 = !{null, !15637, !2425}
!15637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2461, size: 32)
!15638 = !{!15633, !15639, !15640}
!15639 = !DILocalVariable(name: "thread", arg: 2, scope: !15634, file: !2530, line: 182, type: !2425)
!15640 = !DILocalVariable(name: "t", scope: !15634, file: !2530, line: 184, type: !2425)
!15641 = !DILocation(line: 0, scope: !15634, inlinedAt: !15642)
!15642 = distinct !DILocation(line: 229, column: 2, scope: !15627, inlinedAt: !15630)
!15643 = !DILocation(line: 188, column: 2, scope: !15644, inlinedAt: !15642)
!15644 = distinct !DILexicalBlock(scope: !15634, file: !2530, line: 188, column: 2)
!15645 = !DILocation(line: 188, column: 2, scope: !15646, inlinedAt: !15642)
!15646 = distinct !DILexicalBlock(scope: !15644, file: !2530, line: 188, column: 2)
!15647 = !DILocation(line: 0, scope: !15644, inlinedAt: !15642)
!15648 = !DILocation(line: 189, column: 7, scope: !15649, inlinedAt: !15642)
!15649 = distinct !DILexicalBlock(scope: !15650, file: !2530, line: 189, column: 7)
!15650 = distinct !DILexicalBlock(scope: !15646, file: !2530, line: 188, column: 56)
!15651 = !DILocation(line: 189, column: 35, scope: !15649, inlinedAt: !15642)
!15652 = !DILocation(line: 189, column: 7, scope: !15650, inlinedAt: !15642)
!15653 = !DILocation(line: 191, column: 21, scope: !15654, inlinedAt: !15642)
!15654 = distinct !DILexicalBlock(scope: !15649, file: !2530, line: 189, column: 40)
!15655 = !DILocation(line: 190, column: 4, scope: !15654, inlinedAt: !15642)
!15656 = !DILocation(line: 192, column: 4, scope: !15654, inlinedAt: !15642)
!15657 = distinct !{!15657, !15643, !15658}
!15658 = !DILocation(line: 194, column: 2, scope: !15644, inlinedAt: !15642)
!15659 = !DILocation(line: 196, column: 37, scope: !15634, inlinedAt: !15642)
!15660 = !DILocation(line: 196, column: 2, scope: !15634, inlinedAt: !15642)
!15661 = !DILocation(line: 197, column: 1, scope: !15634, inlinedAt: !15642)
!15662 = !DILocation(line: 399, column: 25, scope: !15595)
!15663 = !DILocation(line: 399, column: 22, scope: !15595)
!15664 = !DILocation(line: 399, column: 2, scope: !15595)
!15665 = !DILocation(line: 400, column: 1, scope: !15595)
!15666 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !13964, file: !13964, line: 136, type: !15552, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !15667)
!15667 = !{!15668}
!15668 = !DILocalVariable(name: "thread", arg: 1, scope: !15666, file: !13964, line: 136, type: !2425)
!15669 = !DILocation(line: 0, scope: !15666)
!15670 = !DILocation(line: 138, column: 9, scope: !15666)
!15671 = !DILocation(line: 138, column: 2, scope: !15666)
!15672 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2530, file: !2530, line: 1137, type: !15635, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !15673)
!15673 = !{!15674, !15675}
!15674 = !DILocalVariable(name: "pq", arg: 1, scope: !15672, file: !2530, line: 1137, type: !15637)
!15675 = !DILocalVariable(name: "thread", arg: 2, scope: !15672, file: !2530, line: 1137, type: !2425)
!15676 = !DILocation(line: 0, scope: !15672)
!15677 = !DILocation(line: 1141, column: 33, scope: !15672)
!15678 = !DILocation(line: 1141, column: 2, scope: !15672)
!15679 = !DILocation(line: 1142, column: 1, scope: !15672)
!15680 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !146, file: !146, line: 294, type: !15681, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !15683)
!15681 = !DISubroutineType(types: !15682)
!15682 = !{!2526, !15637}
!15683 = !{!15684}
!15684 = !DILocalVariable(name: "list", arg: 1, scope: !15680, file: !146, line: 294, type: !15637)
!15685 = !DILocation(line: 0, scope: !15680)
!15686 = !DILocation(line: 296, column: 9, scope: !15680)
!15687 = !DILocation(line: 296, column: 49, scope: !15680)
!15688 = !DILocation(line: 296, column: 2, scope: !15680)
!15689 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !146, file: !146, line: 443, type: !15690, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !15692)
!15690 = !DISubroutineType(types: !15691)
!15691 = !{null, !2526, !2526}
!15692 = !{!15693, !15694, !15695}
!15693 = !DILocalVariable(name: "successor", arg: 1, scope: !15689, file: !146, line: 443, type: !2526)
!15694 = !DILocalVariable(name: "node", arg: 2, scope: !15689, file: !146, line: 443, type: !2526)
!15695 = !DILocalVariable(name: "prev", scope: !15689, file: !146, line: 445, type: !15696)
!15696 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2526)
!15697 = !DILocation(line: 0, scope: !15689)
!15698 = !DILocation(line: 445, column: 39, scope: !15689)
!15699 = !DILocation(line: 447, column: 8, scope: !15689)
!15700 = !DILocation(line: 447, column: 13, scope: !15689)
!15701 = !DILocation(line: 448, column: 8, scope: !15689)
!15702 = !DILocation(line: 448, column: 13, scope: !15689)
!15703 = !DILocation(line: 449, column: 8, scope: !15689)
!15704 = !DILocation(line: 449, column: 13, scope: !15689)
!15705 = !DILocation(line: 450, column: 18, scope: !15689)
!15706 = !DILocation(line: 451, column: 1, scope: !15689)
!15707 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !146, file: !146, line: 341, type: !15708, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !15710)
!15708 = !DISubroutineType(types: !15709)
!15709 = !{!2526, !15637, !2526}
!15710 = !{!15711, !15712}
!15711 = !DILocalVariable(name: "list", arg: 1, scope: !15707, file: !146, line: 341, type: !15637)
!15712 = !DILocalVariable(name: "node", arg: 2, scope: !15707, file: !146, line: 342, type: !2526)
!15713 = !DILocation(line: 0, scope: !15707)
!15714 = !DILocation(line: 344, column: 15, scope: !15707)
!15715 = !DILocation(line: 344, column: 9, scope: !15707)
!15716 = !DILocation(line: 344, column: 26, scope: !15707)
!15717 = !DILocation(line: 344, column: 2, scope: !15707)
!15718 = distinct !DISubprogram(name: "sys_dlist_append", scope: !146, file: !146, line: 404, type: !15719, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !15721)
!15719 = !DISubroutineType(types: !15720)
!15720 = !{null, !15637, !2526}
!15721 = !{!15722, !15723, !15724}
!15722 = !DILocalVariable(name: "list", arg: 1, scope: !15718, file: !146, line: 404, type: !15637)
!15723 = !DILocalVariable(name: "node", arg: 2, scope: !15718, file: !146, line: 404, type: !2526)
!15724 = !DILocalVariable(name: "tail", scope: !15718, file: !146, line: 406, type: !15696)
!15725 = !DILocation(line: 0, scope: !15718)
!15726 = !DILocation(line: 406, column: 34, scope: !15718)
!15727 = !DILocation(line: 408, column: 8, scope: !15718)
!15728 = !DILocation(line: 408, column: 13, scope: !15718)
!15729 = !DILocation(line: 409, column: 8, scope: !15718)
!15730 = !DILocation(line: 409, column: 13, scope: !15718)
!15731 = !DILocation(line: 411, column: 8, scope: !15718)
!15732 = !DILocation(line: 411, column: 13, scope: !15718)
!15733 = !DILocation(line: 412, column: 13, scope: !15718)
!15734 = !DILocation(line: 413, column: 1, scope: !15718)
!15735 = distinct !DISubprogram(name: "update_cache", scope: !2530, file: !2530, line: 559, type: !9573, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !15736)
!15736 = !{!15737, !15738}
!15737 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !15735, file: !2530, line: 559, type: !103)
!15738 = !DILocalVariable(name: "thread", scope: !15735, file: !2530, line: 562, type: !2425)
!15739 = !DILocation(line: 0, scope: !15735)
!15740 = !DILocation(line: 239, column: 9, scope: !15741, inlinedAt: !15744)
!15741 = distinct !DISubprogram(name: "runq_best", scope: !2530, file: !2530, line: 237, type: !15742, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !251)
!15742 = !DISubroutineType(types: !15743)
!15743 = !{!2425}
!15744 = distinct !DILocation(line: 314, column: 28, scope: !15745, inlinedAt: !15748)
!15745 = distinct !DISubprogram(name: "next_up", scope: !2530, file: !2530, line: 312, type: !15742, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !15746)
!15746 = !{!15747}
!15747 = !DILocalVariable(name: "thread", scope: !15745, file: !2530, line: 314, type: !2425)
!15748 = distinct !DILocation(line: 562, column: 28, scope: !15735)
!15749 = !DILocation(line: 0, scope: !15745, inlinedAt: !15748)
!15750 = !DILocation(line: 340, column: 17, scope: !15745, inlinedAt: !15748)
!15751 = !DILocation(line: 340, column: 9, scope: !15745, inlinedAt: !15748)
!15752 = !DILocalVariable(name: "thread", arg: 1, scope: !15753, file: !2530, line: 127, type: !2425)
!15753 = distinct !DISubprogram(name: "should_preempt", scope: !2530, file: !2530, line: 127, type: !15754, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !15756)
!15754 = !DISubroutineType(types: !15755)
!15755 = !{!131, !2425, !103}
!15756 = !{!15752, !15757}
!15757 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !15753, file: !2530, line: 128, type: !103)
!15758 = !DILocation(line: 0, scope: !15753, inlinedAt: !15759)
!15759 = distinct !DILocation(line: 564, column: 6, scope: !15760)
!15760 = distinct !DILexicalBlock(scope: !15735, file: !2530, line: 564, column: 6)
!15761 = !DILocation(line: 133, column: 17, scope: !15762, inlinedAt: !15759)
!15762 = distinct !DILexicalBlock(scope: !15753, file: !2530, line: 133, column: 6)
!15763 = !DILocation(line: 0, scope: !15760)
!15764 = !DILocation(line: 133, column: 6, scope: !15753, inlinedAt: !15759)
!15765 = !DILocation(line: 140, column: 6, scope: !15766, inlinedAt: !15759)
!15766 = distinct !DILexicalBlock(scope: !15753, file: !2530, line: 140, column: 6)
!15767 = !DILocation(line: 140, column: 6, scope: !15753, inlinedAt: !15759)
!15768 = !DILocation(line: 150, column: 9, scope: !15769, inlinedAt: !15759)
!15769 = distinct !DILexicalBlock(scope: !15753, file: !2530, line: 149, column: 6)
!15770 = !DILocation(line: 149, column: 6, scope: !15753, inlinedAt: !15759)
!15771 = !DILocation(line: 157, column: 6, scope: !15772, inlinedAt: !15759)
!15772 = distinct !DILexicalBlock(scope: !15753, file: !2530, line: 157, column: 6)
!15773 = !DILocation(line: 564, column: 6, scope: !15735)
!15774 = !DILocation(line: 566, column: 14, scope: !15775)
!15775 = distinct !DILexicalBlock(scope: !15776, file: !2530, line: 566, column: 7)
!15776 = distinct !DILexicalBlock(scope: !15760, file: !2530, line: 564, column: 42)
!15777 = !DILocation(line: 566, column: 7, scope: !15776)
!15778 = !DILocation(line: 567, column: 4, scope: !15779)
!15779 = distinct !DILexicalBlock(scope: !15775, file: !2530, line: 566, column: 27)
!15780 = !DILocation(line: 568, column: 3, scope: !15779)
!15781 = !DILocation(line: 585, column: 1, scope: !15735)
!15782 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2530, file: !2530, line: 1144, type: !15783, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !15785)
!15783 = !DISubroutineType(types: !15784)
!15784 = !{!2425, !15637}
!15785 = !{!15786, !15787, !15788}
!15786 = !DILocalVariable(name: "pq", arg: 1, scope: !15782, file: !2530, line: 1144, type: !15637)
!15787 = !DILocalVariable(name: "thread", scope: !15782, file: !2530, line: 1146, type: !2425)
!15788 = !DILocalVariable(name: "n", scope: !15782, file: !2530, line: 1147, type: !2526)
!15789 = !DILocation(line: 0, scope: !15782)
!15790 = !DILocation(line: 1147, column: 19, scope: !15782)
!15791 = !DILocation(line: 1152, column: 2, scope: !15782)
!15792 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !13964, file: !13964, line: 115, type: !15552, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !15793)
!15793 = !{!15794}
!15794 = !DILocalVariable(name: "thread", arg: 1, scope: !15792, file: !13964, line: 115, type: !2425)
!15795 = !DILocation(line: 0, scope: !15792)
!15796 = !DILocation(line: 117, column: 46, scope: !15792)
!15797 = !DILocation(line: 117, column: 10, scope: !15792)
!15798 = !DILocation(line: 117, column: 9, scope: !15792)
!15799 = !DILocation(line: 117, column: 2, scope: !15792)
!15800 = distinct !DISubprogram(name: "is_preempt", scope: !2530, file: !2530, line: 62, type: !15410, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !15801)
!15801 = !{!15802}
!15802 = !DILocalVariable(name: "thread", arg: 1, scope: !15800, file: !2530, line: 62, type: !2425)
!15803 = !DILocation(line: 0, scope: !15800)
!15804 = !DILocation(line: 65, column: 22, scope: !15800)
!15805 = !DILocation(line: 65, column: 30, scope: !15800)
!15806 = !DILocation(line: 65, column: 2, scope: !15800)
!15807 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14357, file: !14357, line: 35, type: !15808, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !15812)
!15808 = !DISubroutineType(types: !15809)
!15809 = !{!131, !15810}
!15810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15811, size: 32)
!15811 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2476)
!15812 = !{!15813}
!15813 = !DILocalVariable(name: "to", arg: 1, scope: !15807, file: !14357, line: 35, type: !15810)
!15814 = !DILocation(line: 0, scope: !15807)
!15815 = !DILocation(line: 37, column: 35, scope: !15807)
!15816 = !DILocation(line: 37, column: 10, scope: !15807)
!15817 = !DILocation(line: 37, column: 9, scope: !15807)
!15818 = !DILocation(line: 37, column: 2, scope: !15807)
!15819 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !146, file: !146, line: 225, type: !15820, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !15824)
!15820 = !DISubroutineType(types: !15821)
!15821 = !{!131, !15822}
!15822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15823, size: 32)
!15823 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2435)
!15824 = !{!15825}
!15825 = !DILocalVariable(name: "node", arg: 1, scope: !15819, file: !146, line: 225, type: !15822)
!15826 = !DILocation(line: 0, scope: !15819)
!15827 = !DILocation(line: 227, column: 15, scope: !15819)
!15828 = !DILocation(line: 227, column: 20, scope: !15819)
!15829 = !DILocation(line: 227, column: 2, scope: !15819)
!15830 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !146, file: !146, line: 325, type: !15708, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !15831)
!15831 = !{!15832, !15833}
!15832 = !DILocalVariable(name: "list", arg: 1, scope: !15830, file: !146, line: 325, type: !15637)
!15833 = !DILocalVariable(name: "node", arg: 2, scope: !15830, file: !146, line: 326, type: !2526)
!15834 = !DILocation(line: 0, scope: !15830)
!15835 = !DILocation(line: 328, column: 24, scope: !15830)
!15836 = !DILocation(line: 328, column: 15, scope: !15830)
!15837 = !DILocation(line: 328, column: 9, scope: !15830)
!15838 = !DILocation(line: 328, column: 45, scope: !15830)
!15839 = !DILocation(line: 328, column: 2, scope: !15830)
!15840 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !146, file: !146, line: 266, type: !15841, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !15843)
!15841 = !DISubroutineType(types: !15842)
!15842 = !{!131, !15637}
!15843 = !{!15844}
!15844 = !DILocalVariable(name: "list", arg: 1, scope: !15840, file: !146, line: 266, type: !15637)
!15845 = !DILocation(line: 0, scope: !15840)
!15846 = !DILocation(line: 268, column: 15, scope: !15840)
!15847 = !DILocation(line: 268, column: 20, scope: !15840)
!15848 = !DILocation(line: 268, column: 2, scope: !15840)
!15849 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !146, file: !146, line: 496, type: !15850, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !15852)
!15850 = !DISubroutineType(types: !15851)
!15851 = !{null, !2526}
!15852 = !{!15853, !15854, !15855}
!15853 = !DILocalVariable(name: "node", arg: 1, scope: !15849, file: !146, line: 496, type: !2526)
!15854 = !DILocalVariable(name: "prev", scope: !15849, file: !146, line: 498, type: !15696)
!15855 = !DILocalVariable(name: "next", scope: !15849, file: !146, line: 499, type: !15696)
!15856 = !DILocation(line: 0, scope: !15849)
!15857 = !DILocation(line: 498, column: 34, scope: !15849)
!15858 = !DILocation(line: 499, column: 34, scope: !15849)
!15859 = !DILocation(line: 501, column: 8, scope: !15849)
!15860 = !DILocation(line: 501, column: 13, scope: !15849)
!15861 = !DILocation(line: 502, column: 8, scope: !15849)
!15862 = !DILocation(line: 502, column: 13, scope: !15849)
!15863 = !DILocation(line: 503, column: 2, scope: !15849)
!15864 = !DILocation(line: 504, column: 1, scope: !15849)
!15865 = distinct !DISubprogram(name: "sys_dnode_init", scope: !146, file: !146, line: 211, type: !15850, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !15866)
!15866 = !{!15867}
!15867 = !DILocalVariable(name: "node", arg: 1, scope: !15865, file: !146, line: 211, type: !2526)
!15868 = !DILocation(line: 0, scope: !15865)
!15869 = !DILocation(line: 213, column: 8, scope: !15865)
!15870 = !DILocation(line: 213, column: 13, scope: !15865)
!15871 = !DILocation(line: 214, column: 8, scope: !15865)
!15872 = !DILocation(line: 214, column: 13, scope: !15865)
!15873 = !DILocation(line: 215, column: 1, scope: !15865)
!15874 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !13964, file: !13964, line: 131, type: !15875, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !15877)
!15875 = !DISubroutineType(types: !15876)
!15876 = !{!131, !2425, !108}
!15877 = !{!15878, !15879}
!15878 = !DILocalVariable(name: "thread", arg: 1, scope: !15874, file: !13964, line: 131, type: !2425)
!15879 = !DILocalVariable(name: "state", arg: 2, scope: !15874, file: !13964, line: 131, type: !108)
!15880 = !DILocation(line: 0, scope: !15874)
!15881 = !DILocation(line: 133, column: 23, scope: !15874)
!15882 = !DILocation(line: 133, column: 45, scope: !15874)
!15883 = !DILocation(line: 133, column: 2, scope: !15874)
!15884 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !13964, file: !13964, line: 211, type: !15244, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !15885)
!15885 = !{!15886, !15887}
!15886 = !DILocalVariable(name: "prio", arg: 1, scope: !15884, file: !13964, line: 211, type: !103)
!15887 = !DILocalVariable(name: "test_prio", arg: 2, scope: !15884, file: !13964, line: 211, type: !103)
!15888 = !DILocation(line: 0, scope: !15884)
!15889 = !DILocation(line: 213, column: 9, scope: !15884)
!15890 = !DILocation(line: 213, column: 2, scope: !15884)
!15891 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !13964, file: !13964, line: 83, type: !15552, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !15892)
!15892 = !{!15893}
!15893 = !DILocalVariable(name: "thread", arg: 1, scope: !15891, file: !13964, line: 83, type: !2425)
!15894 = !DILocation(line: 0, scope: !15891)
!15895 = !DILocation(line: 89, column: 16, scope: !15891)
!15896 = !DILocation(line: 89, column: 2, scope: !15891)
!15897 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !13964, file: !13964, line: 206, type: !15244, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !15898)
!15898 = !{!15899, !15900}
!15899 = !DILocalVariable(name: "prio1", arg: 1, scope: !15897, file: !13964, line: 206, type: !103)
!15900 = !DILocalVariable(name: "prio2", arg: 2, scope: !15897, file: !13964, line: 206, type: !103)
!15901 = !DILocation(line: 0, scope: !15897)
!15902 = !DILocation(line: 208, column: 15, scope: !15897)
!15903 = !DILocation(line: 208, column: 2, scope: !15897)
!15904 = distinct !DISubprogram(name: "z_ready_thread", scope: !2530, file: !2530, line: 635, type: !15392, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !15905)
!15905 = !{!15906, !15907, !15909}
!15906 = !DILocalVariable(name: "thread", arg: 1, scope: !15904, file: !2530, line: 635, type: !2425)
!15907 = !DILocalVariable(name: "__i", scope: !15908, file: !2530, line: 637, type: !15426)
!15908 = distinct !DILexicalBlock(scope: !15904, file: !2530, line: 637, column: 2)
!15909 = !DILocalVariable(name: "__key", scope: !15908, file: !2530, line: 637, type: !15426)
!15910 = !DILocation(line: 0, scope: !15904)
!15911 = !DILocation(line: 0, scope: !15908)
!15912 = !DILocation(line: 0, scope: !15434, inlinedAt: !15913)
!15913 = distinct !DILocation(line: 637, column: 2, scope: !15908)
!15914 = !DILocation(line: 55, column: 2, scope: !15443, inlinedAt: !15915)
!15915 = distinct !DILocation(line: 145, column: 10, scope: !15434, inlinedAt: !15913)
!15916 = !DILocation(line: 0, scope: !15443, inlinedAt: !15915)
!15917 = !DILocation(line: 639, column: 4, scope: !15918)
!15918 = distinct !DILexicalBlock(scope: !15919, file: !2530, line: 638, column: 41)
!15919 = distinct !DILexicalBlock(scope: !15920, file: !2530, line: 638, column: 7)
!15920 = distinct !DILexicalBlock(scope: !15921, file: !2530, line: 637, column: 26)
!15921 = distinct !DILexicalBlock(scope: !15908, file: !2530, line: 637, column: 2)
!15922 = !DILocation(line: 0, scope: !15461, inlinedAt: !15923)
!15923 = distinct !DILocation(line: 637, column: 2, scope: !15921)
!15924 = !DILocation(line: 0, scope: !15469, inlinedAt: !15925)
!15925 = distinct !DILocation(line: 215, column: 2, scope: !15461, inlinedAt: !15923)
!15926 = !DILocation(line: 95, column: 2, scope: !15469, inlinedAt: !15925)
!15927 = !DILocation(line: 642, column: 1, scope: !15904)
!15928 = distinct !DISubprogram(name: "ready_thread", scope: !2530, file: !2530, line: 617, type: !15392, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !15929)
!15929 = !{!15930}
!15930 = !DILocalVariable(name: "thread", arg: 1, scope: !15928, file: !2530, line: 617, type: !2425)
!15931 = !DILocation(line: 0, scope: !15928)
!15932 = !DILocation(line: 626, column: 7, scope: !15933)
!15933 = distinct !DILexicalBlock(scope: !15928, file: !2530, line: 626, column: 6)
!15934 = !DILocation(line: 626, column: 34, scope: !15933)
!15935 = !DILocation(line: 626, column: 37, scope: !15933)
!15936 = !DILocation(line: 626, column: 6, scope: !15928)
!15937 = !DILocation(line: 0, scope: !15620, inlinedAt: !15938)
!15938 = distinct !DILocation(line: 629, column: 3, scope: !15939)
!15939 = distinct !DILexicalBlock(scope: !15933, file: !2530, line: 626, column: 64)
!15940 = !DILocation(line: 252, column: 15, scope: !15620, inlinedAt: !15938)
!15941 = !DILocation(line: 252, column: 28, scope: !15620, inlinedAt: !15938)
!15942 = !DILocation(line: 0, scope: !15627, inlinedAt: !15943)
!15943 = distinct !DILocation(line: 254, column: 3, scope: !15631, inlinedAt: !15938)
!15944 = !DILocation(line: 0, scope: !15634, inlinedAt: !15945)
!15945 = distinct !DILocation(line: 229, column: 2, scope: !15627, inlinedAt: !15943)
!15946 = !DILocation(line: 188, column: 2, scope: !15644, inlinedAt: !15945)
!15947 = !DILocation(line: 188, column: 2, scope: !15646, inlinedAt: !15945)
!15948 = !DILocation(line: 0, scope: !15644, inlinedAt: !15945)
!15949 = !DILocation(line: 189, column: 7, scope: !15649, inlinedAt: !15945)
!15950 = !DILocation(line: 189, column: 35, scope: !15649, inlinedAt: !15945)
!15951 = !DILocation(line: 189, column: 7, scope: !15650, inlinedAt: !15945)
!15952 = !DILocation(line: 191, column: 21, scope: !15654, inlinedAt: !15945)
!15953 = !DILocation(line: 190, column: 4, scope: !15654, inlinedAt: !15945)
!15954 = !DILocation(line: 192, column: 4, scope: !15654, inlinedAt: !15945)
!15955 = distinct !{!15955, !15946, !15956}
!15956 = !DILocation(line: 194, column: 2, scope: !15644, inlinedAt: !15945)
!15957 = !DILocation(line: 196, column: 37, scope: !15634, inlinedAt: !15945)
!15958 = !DILocation(line: 196, column: 2, scope: !15634, inlinedAt: !15945)
!15959 = !DILocation(line: 197, column: 1, scope: !15634, inlinedAt: !15945)
!15960 = !DILocation(line: 630, column: 3, scope: !15939)
!15961 = !DILocation(line: 632, column: 2, scope: !15939)
!15962 = !DILocation(line: 633, column: 1, scope: !15928)
!15963 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !13964, file: !13964, line: 120, type: !15552, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !15964)
!15964 = !{!15965}
!15965 = !DILocalVariable(name: "thread", arg: 1, scope: !15963, file: !13964, line: 120, type: !2425)
!15966 = !DILocation(line: 0, scope: !15963)
!15967 = !DILocation(line: 122, column: 12, scope: !15963)
!15968 = !DILocation(line: 122, column: 62, scope: !15963)
!15969 = !DILocation(line: 123, column: 4, scope: !15963)
!15970 = !DILocation(line: 122, column: 2, scope: !15963)
!15971 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2530, file: !2530, line: 644, type: !15392, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !15972)
!15972 = !{!15973, !15974, !15976}
!15973 = !DILocalVariable(name: "thread", arg: 1, scope: !15971, file: !2530, line: 644, type: !2425)
!15974 = !DILocalVariable(name: "__i", scope: !15975, file: !2530, line: 646, type: !15426)
!15975 = distinct !DILexicalBlock(scope: !15971, file: !2530, line: 646, column: 2)
!15976 = !DILocalVariable(name: "__key", scope: !15975, file: !2530, line: 646, type: !15426)
!15977 = !DILocation(line: 0, scope: !15971)
!15978 = !DILocation(line: 0, scope: !15975)
!15979 = !DILocation(line: 0, scope: !15434, inlinedAt: !15980)
!15980 = distinct !DILocation(line: 646, column: 2, scope: !15975)
!15981 = !DILocation(line: 55, column: 2, scope: !15443, inlinedAt: !15982)
!15982 = distinct !DILocation(line: 145, column: 10, scope: !15434, inlinedAt: !15980)
!15983 = !DILocation(line: 0, scope: !15443, inlinedAt: !15982)
!15984 = !DILocation(line: 647, column: 3, scope: !15985)
!15985 = distinct !DILexicalBlock(scope: !15986, file: !2530, line: 646, column: 26)
!15986 = distinct !DILexicalBlock(scope: !15975, file: !2530, line: 646, column: 2)
!15987 = !DILocation(line: 0, scope: !15461, inlinedAt: !15988)
!15988 = distinct !DILocation(line: 646, column: 2, scope: !15986)
!15989 = !DILocation(line: 0, scope: !15469, inlinedAt: !15990)
!15990 = distinct !DILocation(line: 215, column: 2, scope: !15461, inlinedAt: !15988)
!15991 = !DILocation(line: 95, column: 2, scope: !15469, inlinedAt: !15990)
!15992 = !DILocation(line: 649, column: 1, scope: !15971)
!15993 = distinct !DISubprogram(name: "z_sched_start", scope: !2530, file: !2530, line: 651, type: !15392, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !15994)
!15994 = !{!15995, !15996}
!15995 = !DILocalVariable(name: "thread", arg: 1, scope: !15993, file: !2530, line: 651, type: !2425)
!15996 = !DILocalVariable(name: "key", scope: !15993, file: !2530, line: 653, type: !15426)
!15997 = !DILocation(line: 0, scope: !15993)
!15998 = !DILocation(line: 0, scope: !15434, inlinedAt: !15999)
!15999 = distinct !DILocation(line: 653, column: 25, scope: !15993)
!16000 = !DILocation(line: 55, column: 2, scope: !15443, inlinedAt: !16001)
!16001 = distinct !DILocation(line: 145, column: 10, scope: !15434, inlinedAt: !15999)
!16002 = !DILocation(line: 0, scope: !15443, inlinedAt: !16001)
!16003 = !DILocation(line: 655, column: 6, scope: !16004)
!16004 = distinct !DILexicalBlock(scope: !15993, file: !2530, line: 655, column: 6)
!16005 = !DILocation(line: 655, column: 6, scope: !15993)
!16006 = !DILocation(line: 0, scope: !15461, inlinedAt: !16007)
!16007 = distinct !DILocation(line: 656, column: 3, scope: !16008)
!16008 = distinct !DILexicalBlock(scope: !16004, file: !2530, line: 655, column: 36)
!16009 = !DILocation(line: 0, scope: !15469, inlinedAt: !16010)
!16010 = distinct !DILocation(line: 215, column: 2, scope: !15461, inlinedAt: !16007)
!16011 = !DILocation(line: 95, column: 2, scope: !15469, inlinedAt: !16010)
!16012 = !DILocation(line: 657, column: 3, scope: !16008)
!16013 = !DILocation(line: 660, column: 2, scope: !15993)
!16014 = !DILocation(line: 661, column: 2, scope: !15993)
!16015 = !DILocation(line: 662, column: 2, scope: !15993)
!16016 = !DILocation(line: 663, column: 1, scope: !15993)
!16017 = distinct !DISubprogram(name: "z_has_thread_started", scope: !13964, file: !13964, line: 126, type: !15552, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !16018)
!16018 = !{!16019}
!16019 = !DILocalVariable(name: "thread", arg: 1, scope: !16017, file: !13964, line: 126, type: !2425)
!16020 = !DILocation(line: 0, scope: !16017)
!16021 = !DILocation(line: 128, column: 23, scope: !16017)
!16022 = !DILocation(line: 128, column: 36, scope: !16017)
!16023 = !DILocation(line: 128, column: 56, scope: !16017)
!16024 = !DILocation(line: 128, column: 2, scope: !16017)
!16025 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13964, file: !13964, line: 155, type: !15392, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !16026)
!16026 = !{!16027}
!16027 = !DILocalVariable(name: "thread", arg: 1, scope: !16025, file: !13964, line: 155, type: !2425)
!16028 = !DILocation(line: 0, scope: !16025)
!16029 = !DILocation(line: 157, column: 15, scope: !16025)
!16030 = !DILocation(line: 157, column: 28, scope: !16025)
!16031 = !DILocation(line: 158, column: 1, scope: !16025)
!16032 = distinct !DISubprogram(name: "z_reschedule", scope: !2530, file: !2530, line: 967, type: !15462, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !16033)
!16033 = !{!16034, !16035}
!16034 = !DILocalVariable(name: "lock", arg: 1, scope: !16032, file: !2530, line: 967, type: !15437)
!16035 = !DILocalVariable(name: "key", arg: 2, scope: !16032, file: !2530, line: 967, type: !15426)
!16036 = !DILocation(line: 0, scope: !16032)
!16037 = !DILocation(line: 969, column: 6, scope: !16038)
!16038 = distinct !DILexicalBlock(scope: !16032, file: !2530, line: 969, column: 6)
!16039 = !DILocation(line: 969, column: 23, scope: !16038)
!16040 = !DILocation(line: 969, column: 26, scope: !16038)
!16041 = !DILocation(line: 969, column: 6, scope: !16032)
!16042 = !DILocalVariable(name: "key", arg: 2, scope: !16043, file: !14068, line: 193, type: !15426)
!16043 = distinct !DISubprogram(name: "z_swap", scope: !14068, file: !14068, line: 193, type: !16044, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !16046)
!16044 = !DISubroutineType(types: !16045)
!16045 = !{!103, !15437, !15426}
!16046 = !{!16047, !16042}
!16047 = !DILocalVariable(name: "lock", arg: 1, scope: !16043, file: !14068, line: 193, type: !15437)
!16048 = !DILocation(line: 0, scope: !16043, inlinedAt: !16049)
!16049 = distinct !DILocation(line: 970, column: 3, scope: !16050)
!16050 = distinct !DILexicalBlock(scope: !16038, file: !2530, line: 969, column: 39)
!16051 = !DILocation(line: 196, column: 9, scope: !16043, inlinedAt: !16049)
!16052 = !DILocation(line: 971, column: 2, scope: !16050)
!16053 = !DILocation(line: 0, scope: !15461, inlinedAt: !16054)
!16054 = distinct !DILocation(line: 972, column: 3, scope: !16055)
!16055 = distinct !DILexicalBlock(scope: !16038, file: !2530, line: 971, column: 9)
!16056 = !DILocation(line: 0, scope: !15469, inlinedAt: !16057)
!16057 = distinct !DILocation(line: 215, column: 2, scope: !15461, inlinedAt: !16054)
!16058 = !DILocation(line: 95, column: 2, scope: !15469, inlinedAt: !16057)
!16059 = !DILocation(line: 975, column: 1, scope: !16032)
!16060 = distinct !DISubprogram(name: "resched", scope: !2530, file: !2530, line: 940, type: !16061, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !16063)
!16061 = !DISubroutineType(types: !16062)
!16062 = !{!131, !108}
!16063 = !{!16064}
!16064 = !DILocalVariable(name: "key", arg: 1, scope: !16060, file: !2530, line: 940, type: !108)
!16065 = !DILocation(line: 0, scope: !16060)
!16066 = !DILocalVariable(name: "key", arg: 1, scope: !16067, file: !6996, line: 112, type: !32)
!16067 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !6996, file: !6996, line: 112, type: !16068, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !16070)
!16068 = !DISubroutineType(types: !16069)
!16069 = !{!131, !32}
!16070 = !{!16066}
!16071 = !DILocation(line: 0, scope: !16067, inlinedAt: !16072)
!16072 = distinct !DILocation(line: 946, column: 9, scope: !16060)
!16073 = !DILocation(line: 115, column: 13, scope: !16067, inlinedAt: !16072)
!16074 = !DILocation(line: 946, column: 32, scope: !16060)
!16075 = !DILocation(line: 1031, column: 3, scope: !16076, inlinedAt: !16079)
!16076 = distinct !DISubprogram(name: "__get_IPSR", scope: !7314, file: !7314, line: 1027, type: !3598, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !16077)
!16077 = !{!16078}
!16078 = !DILocalVariable(name: "result", scope: !16076, file: !7314, line: 1029, type: !108)
!16079 = distinct !DILocation(line: 48, column: 10, scope: !16080, inlinedAt: !16081)
!16080 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8330, file: !8330, line: 46, type: !8331, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !251)
!16081 = distinct !DILocation(line: 946, column: 36, scope: !16060)
!16082 = !{i64 3585283}
!16083 = !DILocation(line: 0, scope: !16076, inlinedAt: !16079)
!16084 = !DILocation(line: 48, column: 9, scope: !16080, inlinedAt: !16081)
!16085 = !DILocation(line: 946, column: 2, scope: !16060)
!16086 = distinct !DISubprogram(name: "need_swap", scope: !2530, file: !2530, line: 953, type: !8331, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !16087)
!16087 = !{!16088}
!16088 = !DILocalVariable(name: "new_thread", scope: !16086, file: !2530, line: 959, type: !2425)
!16089 = !DILocation(line: 962, column: 31, scope: !16086)
!16090 = !DILocation(line: 0, scope: !16086)
!16091 = !DILocation(line: 963, column: 23, scope: !16086)
!16092 = !DILocation(line: 963, column: 20, scope: !16086)
!16093 = !DILocation(line: 963, column: 2, scope: !16086)
!16094 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !14068, file: !14068, line: 181, type: !7324, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !16095)
!16095 = !{!16096, !16097}
!16096 = !DILocalVariable(name: "key", arg: 1, scope: !16094, file: !14068, line: 181, type: !32)
!16097 = !DILocalVariable(name: "ret", scope: !16094, file: !14068, line: 183, type: !103)
!16098 = !DILocation(line: 0, scope: !16094)
!16099 = !DILocation(line: 185, column: 8, scope: !16094)
!16100 = !DILocation(line: 186, column: 2, scope: !16094)
!16101 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2530, file: !2530, line: 665, type: !15392, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !16102)
!16102 = !{!16103, !16104, !16106}
!16103 = !DILocalVariable(name: "thread", arg: 1, scope: !16101, file: !2530, line: 665, type: !2425)
!16104 = !DILocalVariable(name: "__i", scope: !16105, file: !2530, line: 671, type: !15426)
!16105 = distinct !DILexicalBlock(scope: !16101, file: !2530, line: 671, column: 2)
!16106 = !DILocalVariable(name: "__key", scope: !16105, file: !2530, line: 671, type: !15426)
!16107 = !DILocation(line: 0, scope: !16101)
!16108 = !DILocation(line: 669, column: 8, scope: !16101)
!16109 = !DILocation(line: 0, scope: !16105)
!16110 = !DILocation(line: 0, scope: !15434, inlinedAt: !16111)
!16111 = distinct !DILocation(line: 671, column: 2, scope: !16105)
!16112 = !DILocation(line: 55, column: 2, scope: !15443, inlinedAt: !16113)
!16113 = distinct !DILocation(line: 145, column: 10, scope: !15434, inlinedAt: !16111)
!16114 = !DILocation(line: 0, scope: !15443, inlinedAt: !16113)
!16115 = !DILocation(line: 672, column: 7, scope: !16116)
!16116 = distinct !DILexicalBlock(scope: !16117, file: !2530, line: 672, column: 7)
!16117 = distinct !DILexicalBlock(scope: !16118, file: !2530, line: 671, column: 26)
!16118 = distinct !DILexicalBlock(scope: !16105, file: !2530, line: 671, column: 2)
!16119 = !DILocation(line: 672, column: 7, scope: !16117)
!16120 = !DILocation(line: 0, scope: !15603, inlinedAt: !16121)
!16121 = distinct !DILocation(line: 673, column: 4, scope: !16122)
!16122 = distinct !DILexicalBlock(scope: !16116, file: !2530, line: 672, column: 35)
!16123 = !DILocation(line: 266, column: 15, scope: !15603, inlinedAt: !16121)
!16124 = !DILocation(line: 266, column: 28, scope: !15603, inlinedAt: !16121)
!16125 = !DILocation(line: 0, scope: !15611, inlinedAt: !16126)
!16126 = distinct !DILocation(line: 268, column: 3, scope: !15615, inlinedAt: !16121)
!16127 = !DILocation(line: 234, column: 2, scope: !15611, inlinedAt: !16126)
!16128 = !DILocation(line: 674, column: 3, scope: !16122)
!16129 = !DILocation(line: 675, column: 3, scope: !16117)
!16130 = !DILocation(line: 676, column: 26, scope: !16117)
!16131 = !DILocation(line: 676, column: 23, scope: !16117)
!16132 = !DILocation(line: 676, column: 3, scope: !16117)
!16133 = !DILocation(line: 0, scope: !15461, inlinedAt: !16134)
!16134 = distinct !DILocation(line: 671, column: 2, scope: !16118)
!16135 = !DILocation(line: 0, scope: !15469, inlinedAt: !16136)
!16136 = distinct !DILocation(line: 215, column: 2, scope: !15461, inlinedAt: !16134)
!16137 = !DILocation(line: 95, column: 2, scope: !15469, inlinedAt: !16136)
!16138 = !DILocation(line: 679, column: 16, scope: !16139)
!16139 = distinct !DILexicalBlock(scope: !16101, file: !2530, line: 679, column: 6)
!16140 = !DILocation(line: 679, column: 13, scope: !16139)
!16141 = !DILocation(line: 679, column: 6, scope: !16101)
!16142 = !DILocation(line: 680, column: 3, scope: !16143)
!16143 = distinct !DILexicalBlock(scope: !16139, file: !2530, line: 679, column: 26)
!16144 = !DILocation(line: 681, column: 2, scope: !16143)
!16145 = !DILocation(line: 684, column: 1, scope: !16101)
!16146 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !14357, file: !14357, line: 52, type: !15410, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !16147)
!16147 = !{!16148}
!16148 = !DILocalVariable(name: "thread", arg: 1, scope: !16146, file: !14357, line: 52, type: !2425)
!16149 = !DILocation(line: 0, scope: !16146)
!16150 = !DILocation(line: 54, column: 39, scope: !16146)
!16151 = !DILocation(line: 54, column: 9, scope: !16146)
!16152 = !DILocation(line: 54, column: 2, scope: !16146)
!16153 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !13964, file: !13964, line: 141, type: !15392, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !16154)
!16154 = !{!16155}
!16155 = !DILocalVariable(name: "thread", arg: 1, scope: !16153, file: !13964, line: 141, type: !2425)
!16156 = !DILocation(line: 0, scope: !16153)
!16157 = !DILocation(line: 143, column: 15, scope: !16153)
!16158 = !DILocation(line: 143, column: 28, scope: !16153)
!16159 = !DILocation(line: 146, column: 1, scope: !16153)
!16160 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !13964, file: !13964, line: 73, type: !334, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !251)
!16161 = !DILocation(line: 55, column: 2, scope: !15443, inlinedAt: !16162)
!16162 = distinct !DILocation(line: 75, column: 30, scope: !16160)
!16163 = !DILocation(line: 0, scope: !15443, inlinedAt: !16162)
!16164 = !DILocation(line: 75, column: 9, scope: !16160)
!16165 = !DILocation(line: 76, column: 1, scope: !16160)
!16166 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2530, file: !2530, line: 977, type: !7403, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !16167)
!16167 = !{!16168}
!16168 = !DILocalVariable(name: "key", arg: 1, scope: !16166, file: !2530, line: 977, type: !108)
!16169 = !DILocation(line: 0, scope: !16166)
!16170 = !DILocation(line: 979, column: 6, scope: !16171)
!16171 = distinct !DILexicalBlock(scope: !16166, file: !2530, line: 979, column: 6)
!16172 = !DILocation(line: 979, column: 6, scope: !16166)
!16173 = !DILocation(line: 980, column: 3, scope: !16174)
!16174 = distinct !DILexicalBlock(scope: !16171, file: !2530, line: 979, column: 20)
!16175 = !DILocation(line: 981, column: 2, scope: !16174)
!16176 = !DILocation(line: 0, scope: !15469, inlinedAt: !16177)
!16177 = distinct !DILocation(line: 982, column: 3, scope: !16178)
!16178 = distinct !DILexicalBlock(scope: !16171, file: !2530, line: 981, column: 9)
!16179 = !DILocation(line: 95, column: 2, scope: !15469, inlinedAt: !16177)
!16180 = !DILocation(line: 985, column: 1, scope: !16166)
!16181 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2530, file: !2530, line: 695, type: !15392, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !16182)
!16182 = !{!16183, !16184}
!16183 = !DILocalVariable(name: "thread", arg: 1, scope: !16181, file: !2530, line: 695, type: !2425)
!16184 = !DILocalVariable(name: "key", scope: !16181, file: !2530, line: 699, type: !15426)
!16185 = !DILocation(line: 0, scope: !16181)
!16186 = !DILocation(line: 0, scope: !15434, inlinedAt: !16187)
!16187 = distinct !DILocation(line: 699, column: 25, scope: !16181)
!16188 = !DILocation(line: 55, column: 2, scope: !15443, inlinedAt: !16189)
!16189 = distinct !DILocation(line: 145, column: 10, scope: !15434, inlinedAt: !16187)
!16190 = !DILocation(line: 0, scope: !15443, inlinedAt: !16189)
!16191 = !DILocation(line: 702, column: 7, scope: !16192)
!16192 = distinct !DILexicalBlock(scope: !16181, file: !2530, line: 702, column: 6)
!16193 = !DILocation(line: 702, column: 6, scope: !16181)
!16194 = !DILocation(line: 0, scope: !15461, inlinedAt: !16195)
!16195 = distinct !DILocation(line: 703, column: 3, scope: !16196)
!16196 = distinct !DILexicalBlock(scope: !16192, file: !2530, line: 702, column: 38)
!16197 = !DILocation(line: 0, scope: !15469, inlinedAt: !16198)
!16198 = distinct !DILocation(line: 215, column: 2, scope: !15461, inlinedAt: !16195)
!16199 = !DILocation(line: 95, column: 2, scope: !15469, inlinedAt: !16198)
!16200 = !DILocation(line: 704, column: 3, scope: !16196)
!16201 = !DILocation(line: 707, column: 2, scope: !16181)
!16202 = !DILocation(line: 708, column: 2, scope: !16181)
!16203 = !DILocation(line: 710, column: 2, scope: !16181)
!16204 = !DILocation(line: 713, column: 1, scope: !16181)
!16205 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !13964, file: !13964, line: 96, type: !15552, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !16206)
!16206 = !{!16207}
!16207 = !DILocalVariable(name: "thread", arg: 1, scope: !16205, file: !13964, line: 96, type: !2425)
!16208 = !DILocation(line: 0, scope: !16205)
!16209 = !DILocation(line: 98, column: 23, scope: !16205)
!16210 = !DILocation(line: 98, column: 36, scope: !16205)
!16211 = !DILocation(line: 98, column: 57, scope: !16205)
!16212 = !DILocation(line: 98, column: 2, scope: !16205)
!16213 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !13964, file: !13964, line: 148, type: !15392, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !16214)
!16214 = !{!16215}
!16215 = !DILocalVariable(name: "thread", arg: 1, scope: !16213, file: !13964, line: 148, type: !2425)
!16216 = !DILocation(line: 0, scope: !16213)
!16217 = !DILocation(line: 150, column: 15, scope: !16213)
!16218 = !DILocation(line: 150, column: 28, scope: !16213)
!16219 = !DILocation(line: 153, column: 1, scope: !16213)
!16220 = distinct !DISubprogram(name: "z_pend_thread", scope: !2530, file: !2530, line: 770, type: !16221, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !16227)
!16221 = !DISubroutineType(types: !16222)
!16222 = !{null, !2425, !2456, !16223}
!16223 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !16224)
!16224 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !16225)
!16225 = !{!16226}
!16226 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16224, file: !105, line: 66, baseType: !104, size: 64)
!16227 = !{!16228, !16229, !16230, !16231, !16233}
!16228 = !DILocalVariable(name: "thread", arg: 1, scope: !16220, file: !2530, line: 770, type: !2425)
!16229 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16220, file: !2530, line: 770, type: !2456)
!16230 = !DILocalVariable(name: "timeout", arg: 3, scope: !16220, file: !2530, line: 771, type: !16223)
!16231 = !DILocalVariable(name: "__i", scope: !16232, file: !2530, line: 774, type: !15426)
!16232 = distinct !DILexicalBlock(scope: !16220, file: !2530, line: 774, column: 2)
!16233 = !DILocalVariable(name: "__key", scope: !16232, file: !2530, line: 774, type: !15426)
!16234 = !DILocation(line: 0, scope: !16220)
!16235 = !DILocation(line: 0, scope: !16232)
!16236 = !DILocation(line: 0, scope: !15434, inlinedAt: !16237)
!16237 = distinct !DILocation(line: 774, column: 2, scope: !16232)
!16238 = !DILocation(line: 55, column: 2, scope: !15443, inlinedAt: !16239)
!16239 = distinct !DILocation(line: 145, column: 10, scope: !15434, inlinedAt: !16237)
!16240 = !DILocation(line: 0, scope: !15443, inlinedAt: !16239)
!16241 = !DILocation(line: 775, column: 3, scope: !16242)
!16242 = distinct !DILexicalBlock(scope: !16243, file: !2530, line: 774, column: 26)
!16243 = distinct !DILexicalBlock(scope: !16232, file: !2530, line: 774, column: 2)
!16244 = !DILocation(line: 0, scope: !15461, inlinedAt: !16245)
!16245 = distinct !DILocation(line: 774, column: 2, scope: !16243)
!16246 = !DILocation(line: 0, scope: !15469, inlinedAt: !16247)
!16247 = distinct !DILocation(line: 215, column: 2, scope: !15461, inlinedAt: !16245)
!16248 = !DILocation(line: 95, column: 2, scope: !15469, inlinedAt: !16247)
!16249 = !DILocation(line: 777, column: 1, scope: !16220)
!16250 = distinct !DISubprogram(name: "pend_locked", scope: !2530, file: !2530, line: 760, type: !16221, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !16251)
!16251 = !{!16252, !16253, !16254}
!16252 = !DILocalVariable(name: "thread", arg: 1, scope: !16250, file: !2530, line: 760, type: !2425)
!16253 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16250, file: !2530, line: 760, type: !2456)
!16254 = !DILocalVariable(name: "timeout", arg: 3, scope: !16250, file: !2530, line: 761, type: !16223)
!16255 = !DILocation(line: 0, scope: !16250)
!16256 = !DILocation(line: 766, column: 2, scope: !16250)
!16257 = !DILocation(line: 767, column: 2, scope: !16250)
!16258 = !DILocation(line: 768, column: 1, scope: !16250)
!16259 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2530, file: !2530, line: 740, type: !16260, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !16262)
!16260 = !DISubroutineType(types: !16261)
!16261 = !{null, !2425, !2456}
!16262 = !{!16263, !16264}
!16263 = !DILocalVariable(name: "thread", arg: 1, scope: !16259, file: !2530, line: 740, type: !2425)
!16264 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16259, file: !2530, line: 740, type: !2456)
!16265 = !DILocation(line: 0, scope: !16259)
!16266 = !DILocation(line: 742, column: 2, scope: !16259)
!16267 = !DILocation(line: 743, column: 2, scope: !16259)
!16268 = !DILocation(line: 747, column: 13, scope: !16269)
!16269 = distinct !DILexicalBlock(scope: !16259, file: !2530, line: 747, column: 6)
!16270 = !DILocation(line: 747, column: 6, scope: !16259)
!16271 = !DILocation(line: 748, column: 16, scope: !16272)
!16272 = distinct !DILexicalBlock(scope: !16269, file: !2530, line: 747, column: 22)
!16273 = !DILocation(line: 748, column: 26, scope: !16272)
!16274 = !DILocation(line: 749, column: 28, scope: !16272)
!16275 = !DILocation(line: 0, scope: !15634, inlinedAt: !16276)
!16276 = distinct !DILocation(line: 749, column: 3, scope: !16272)
!16277 = !DILocation(line: 188, column: 2, scope: !15644, inlinedAt: !16276)
!16278 = !DILocation(line: 188, column: 2, scope: !15646, inlinedAt: !16276)
!16279 = !DILocation(line: 0, scope: !15644, inlinedAt: !16276)
!16280 = !DILocation(line: 189, column: 7, scope: !15649, inlinedAt: !16276)
!16281 = !DILocation(line: 189, column: 35, scope: !15649, inlinedAt: !16276)
!16282 = !DILocation(line: 189, column: 7, scope: !15650, inlinedAt: !16276)
!16283 = !DILocation(line: 191, column: 21, scope: !15654, inlinedAt: !16276)
!16284 = !DILocation(line: 190, column: 4, scope: !15654, inlinedAt: !16276)
!16285 = !DILocation(line: 192, column: 4, scope: !15654, inlinedAt: !16276)
!16286 = distinct !{!16286, !16277, !16287}
!16287 = !DILocation(line: 194, column: 2, scope: !15644, inlinedAt: !16276)
!16288 = !DILocation(line: 196, column: 37, scope: !15634, inlinedAt: !16276)
!16289 = !DILocation(line: 196, column: 2, scope: !15634, inlinedAt: !16276)
!16290 = !DILocation(line: 197, column: 1, scope: !15634, inlinedAt: !16276)
!16291 = !DILocation(line: 751, column: 1, scope: !16259)
!16292 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2530, file: !2530, line: 753, type: !16293, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !16295)
!16293 = !DISubroutineType(types: !16294)
!16294 = !{null, !2425, !16223}
!16295 = !{!16296, !16297}
!16296 = !DILocalVariable(name: "thread", arg: 1, scope: !16292, file: !2530, line: 753, type: !2425)
!16297 = !DILocalVariable(name: "timeout", arg: 2, scope: !16292, file: !2530, line: 753, type: !16223)
!16298 = !DILocation(line: 0, scope: !16292)
!16299 = !DILocation(line: 755, column: 7, scope: !16300)
!16300 = distinct !DILexicalBlock(scope: !16292, file: !2530, line: 755, column: 6)
!16301 = !DILocation(line: 755, column: 6, scope: !16292)
!16302 = !DILocation(line: 756, column: 3, scope: !16303)
!16303 = distinct !DILexicalBlock(scope: !16300, file: !2530, line: 755, column: 41)
!16304 = !DILocation(line: 757, column: 2, scope: !16303)
!16305 = !DILocation(line: 758, column: 1, scope: !16292)
!16306 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14357, file: !14357, line: 47, type: !16293, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !16307)
!16307 = !{!16308, !16309}
!16308 = !DILocalVariable(name: "thread", arg: 1, scope: !16306, file: !14357, line: 47, type: !2425)
!16309 = !DILocalVariable(name: "ticks", arg: 2, scope: !16306, file: !14357, line: 47, type: !16223)
!16310 = !DILocation(line: 0, scope: !16306)
!16311 = !DILocation(line: 49, column: 30, scope: !16306)
!16312 = !DILocation(line: 49, column: 2, scope: !16306)
!16313 = !DILocation(line: 50, column: 1, scope: !16306)
!16314 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2530, file: !2530, line: 795, type: !2482, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !16315)
!16315 = !{!16316, !16317, !16318, !16320, !16321}
!16316 = !DILocalVariable(name: "timeout", arg: 1, scope: !16314, file: !2530, line: 795, type: !2484)
!16317 = !DILocalVariable(name: "thread", scope: !16314, file: !2530, line: 797, type: !2425)
!16318 = !DILocalVariable(name: "__i", scope: !16319, file: !2530, line: 800, type: !15426)
!16319 = distinct !DILexicalBlock(scope: !16314, file: !2530, line: 800, column: 2)
!16320 = !DILocalVariable(name: "__key", scope: !16319, file: !2530, line: 800, type: !15426)
!16321 = !DILocalVariable(name: "killed", scope: !16322, file: !2530, line: 801, type: !131)
!16322 = distinct !DILexicalBlock(scope: !16323, file: !2530, line: 800, column: 26)
!16323 = distinct !DILexicalBlock(scope: !16319, file: !2530, line: 800, column: 2)
!16324 = !DILocation(line: 0, scope: !16314)
!16325 = !DILocation(line: 797, column: 28, scope: !16314)
!16326 = !DILocation(line: 0, scope: !16319)
!16327 = !DILocation(line: 0, scope: !15434, inlinedAt: !16328)
!16328 = distinct !DILocation(line: 800, column: 2, scope: !16319)
!16329 = !DILocation(line: 55, column: 2, scope: !15443, inlinedAt: !16330)
!16330 = distinct !DILocation(line: 145, column: 10, scope: !15434, inlinedAt: !16328)
!16331 = !DILocation(line: 0, scope: !15443, inlinedAt: !16330)
!16332 = !DILocation(line: 801, column: 27, scope: !16322)
!16333 = !DILocation(line: 801, column: 32, scope: !16322)
!16334 = !DILocation(line: 801, column: 61, scope: !16322)
!16335 = !DILocation(line: 0, scope: !16322)
!16336 = !DILocation(line: 804, column: 7, scope: !16322)
!16337 = !DILocation(line: 805, column: 21, scope: !16338)
!16338 = distinct !DILexicalBlock(scope: !16339, file: !2530, line: 805, column: 8)
!16339 = distinct !DILexicalBlock(scope: !16340, file: !2530, line: 804, column: 16)
!16340 = distinct !DILexicalBlock(scope: !16322, file: !2530, line: 804, column: 7)
!16341 = !DILocation(line: 805, column: 31, scope: !16338)
!16342 = !DILocation(line: 805, column: 8, scope: !16339)
!16343 = !DILocation(line: 806, column: 5, scope: !16344)
!16344 = distinct !DILexicalBlock(scope: !16338, file: !2530, line: 805, column: 40)
!16345 = !DILocation(line: 807, column: 4, scope: !16344)
!16346 = !DILocation(line: 808, column: 4, scope: !16339)
!16347 = !DILocation(line: 809, column: 4, scope: !16339)
!16348 = !DILocation(line: 810, column: 4, scope: !16339)
!16349 = !DILocation(line: 811, column: 3, scope: !16339)
!16350 = !DILocation(line: 0, scope: !15461, inlinedAt: !16351)
!16351 = distinct !DILocation(line: 800, column: 2, scope: !16323)
!16352 = !DILocation(line: 0, scope: !15469, inlinedAt: !16353)
!16353 = distinct !DILocation(line: 215, column: 2, scope: !15461, inlinedAt: !16351)
!16354 = !DILocation(line: 95, column: 2, scope: !15469, inlinedAt: !16353)
!16355 = !DILocation(line: 813, column: 1, scope: !16314)
!16356 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2530, file: !2530, line: 779, type: !15392, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !16357)
!16357 = !{!16358}
!16358 = !DILocalVariable(name: "thread", arg: 1, scope: !16356, file: !2530, line: 779, type: !2425)
!16359 = !DILocation(line: 0, scope: !16356)
!16360 = !DILocation(line: 781, column: 2, scope: !16356)
!16361 = !DILocation(line: 782, column: 2, scope: !16356)
!16362 = !DILocation(line: 783, column: 15, scope: !16356)
!16363 = !DILocation(line: 783, column: 25, scope: !16356)
!16364 = !DILocation(line: 784, column: 1, scope: !16356)
!16365 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !13964, file: !13964, line: 165, type: !15392, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !16366)
!16366 = !{!16367}
!16367 = !DILocalVariable(name: "thread", arg: 1, scope: !16365, file: !13964, line: 165, type: !2425)
!16368 = !DILocation(line: 0, scope: !16365)
!16369 = !DILocation(line: 167, column: 15, scope: !16365)
!16370 = !DILocation(line: 167, column: 28, scope: !16365)
!16371 = !DILocation(line: 168, column: 1, scope: !16365)
!16372 = distinct !DISubprogram(name: "unready_thread", scope: !2530, file: !2530, line: 731, type: !15392, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !16373)
!16373 = !{!16374}
!16374 = !DILocalVariable(name: "thread", arg: 1, scope: !16372, file: !2530, line: 731, type: !2425)
!16375 = !DILocation(line: 0, scope: !16372)
!16376 = !DILocation(line: 733, column: 6, scope: !16377)
!16377 = distinct !DILexicalBlock(scope: !16372, file: !2530, line: 733, column: 6)
!16378 = !DILocation(line: 733, column: 6, scope: !16372)
!16379 = !DILocation(line: 0, scope: !15603, inlinedAt: !16380)
!16380 = distinct !DILocation(line: 734, column: 3, scope: !16381)
!16381 = distinct !DILexicalBlock(scope: !16377, file: !2530, line: 733, column: 34)
!16382 = !DILocation(line: 266, column: 15, scope: !15603, inlinedAt: !16380)
!16383 = !DILocation(line: 266, column: 28, scope: !15603, inlinedAt: !16380)
!16384 = !DILocation(line: 0, scope: !15611, inlinedAt: !16385)
!16385 = distinct !DILocation(line: 268, column: 3, scope: !15615, inlinedAt: !16380)
!16386 = !DILocation(line: 234, column: 2, scope: !15611, inlinedAt: !16385)
!16387 = !DILocation(line: 735, column: 2, scope: !16381)
!16388 = !DILocation(line: 736, column: 25, scope: !16372)
!16389 = !DILocation(line: 736, column: 22, scope: !16372)
!16390 = !DILocation(line: 736, column: 2, scope: !16372)
!16391 = !DILocation(line: 737, column: 1, scope: !16372)
!16392 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !13964, file: !13964, line: 160, type: !15392, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !16393)
!16393 = !{!16394}
!16394 = !DILocalVariable(name: "thread", arg: 1, scope: !16392, file: !13964, line: 160, type: !2425)
!16395 = !DILocation(line: 0, scope: !16392)
!16396 = !DILocation(line: 162, column: 15, scope: !16392)
!16397 = !DILocation(line: 162, column: 28, scope: !16392)
!16398 = !DILocation(line: 163, column: 1, scope: !16392)
!16399 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2530, file: !2530, line: 786, type: !15392, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !16400)
!16400 = !{!16401, !16402, !16404}
!16401 = !DILocalVariable(name: "thread", arg: 1, scope: !16399, file: !2530, line: 786, type: !2425)
!16402 = !DILocalVariable(name: "__i", scope: !16403, file: !2530, line: 788, type: !15426)
!16403 = distinct !DILexicalBlock(scope: !16399, file: !2530, line: 788, column: 2)
!16404 = !DILocalVariable(name: "__key", scope: !16403, file: !2530, line: 788, type: !15426)
!16405 = !DILocation(line: 0, scope: !16399)
!16406 = !DILocation(line: 0, scope: !16403)
!16407 = !DILocation(line: 0, scope: !15434, inlinedAt: !16408)
!16408 = distinct !DILocation(line: 788, column: 2, scope: !16403)
!16409 = !DILocation(line: 55, column: 2, scope: !15443, inlinedAt: !16410)
!16410 = distinct !DILocation(line: 145, column: 10, scope: !15434, inlinedAt: !16408)
!16411 = !DILocation(line: 0, scope: !15443, inlinedAt: !16410)
!16412 = !DILocation(line: 789, column: 3, scope: !16413)
!16413 = distinct !DILexicalBlock(scope: !16414, file: !2530, line: 788, column: 26)
!16414 = distinct !DILexicalBlock(scope: !16403, file: !2530, line: 788, column: 2)
!16415 = !DILocation(line: 0, scope: !15461, inlinedAt: !16416)
!16416 = distinct !DILocation(line: 788, column: 2, scope: !16414)
!16417 = !DILocation(line: 0, scope: !15469, inlinedAt: !16418)
!16418 = distinct !DILocation(line: 215, column: 2, scope: !15461, inlinedAt: !16416)
!16419 = !DILocation(line: 95, column: 2, scope: !15469, inlinedAt: !16418)
!16420 = !DILocation(line: 791, column: 1, scope: !16399)
!16421 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2530, file: !2530, line: 816, type: !16422, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !16424)
!16422 = !DISubroutineType(types: !16423)
!16423 = !{!103, !108, !2456, !16223}
!16424 = !{!16425, !16426, !16427, !16428, !16429, !16431}
!16425 = !DILocalVariable(name: "key", arg: 1, scope: !16421, file: !2530, line: 816, type: !108)
!16426 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16421, file: !2530, line: 816, type: !2456)
!16427 = !DILocalVariable(name: "timeout", arg: 3, scope: !16421, file: !2530, line: 816, type: !16223)
!16428 = !DILocalVariable(name: "ret", scope: !16421, file: !2530, line: 828, type: !103)
!16429 = !DILocalVariable(name: "__i", scope: !16430, file: !2530, line: 829, type: !15426)
!16430 = distinct !DILexicalBlock(scope: !16421, file: !2530, line: 829, column: 2)
!16431 = !DILocalVariable(name: "__key", scope: !16430, file: !2530, line: 829, type: !15426)
!16432 = !DILocation(line: 0, scope: !16421)
!16433 = !DILocation(line: 823, column: 14, scope: !16421)
!16434 = !DILocation(line: 823, column: 2, scope: !16421)
!16435 = !DILocation(line: 826, column: 20, scope: !16421)
!16436 = !DILocation(line: 826, column: 18, scope: !16421)
!16437 = !DILocation(line: 828, column: 12, scope: !16421)
!16438 = !DILocation(line: 0, scope: !16430)
!16439 = !DILocation(line: 0, scope: !15434, inlinedAt: !16440)
!16440 = distinct !DILocation(line: 829, column: 2, scope: !16430)
!16441 = !DILocation(line: 55, column: 2, scope: !15443, inlinedAt: !16442)
!16442 = distinct !DILocation(line: 145, column: 10, scope: !15434, inlinedAt: !16440)
!16443 = !DILocation(line: 0, scope: !15443, inlinedAt: !16442)
!16444 = !DILocation(line: 830, column: 7, scope: !16445)
!16445 = distinct !DILexicalBlock(scope: !16446, file: !2530, line: 830, column: 7)
!16446 = distinct !DILexicalBlock(scope: !16447, file: !2530, line: 829, column: 26)
!16447 = distinct !DILexicalBlock(scope: !16430, file: !2530, line: 829, column: 2)
!16448 = !DILocation(line: 830, column: 26, scope: !16445)
!16449 = !DILocation(line: 830, column: 23, scope: !16445)
!16450 = !DILocation(line: 830, column: 7, scope: !16446)
!16451 = !DILocation(line: 831, column: 20, scope: !16452)
!16452 = distinct !DILexicalBlock(scope: !16445, file: !2530, line: 830, column: 36)
!16453 = !DILocation(line: 832, column: 3, scope: !16452)
!16454 = !DILocation(line: 0, scope: !15461, inlinedAt: !16455)
!16455 = distinct !DILocation(line: 829, column: 2, scope: !16447)
!16456 = !DILocation(line: 0, scope: !15469, inlinedAt: !16457)
!16457 = distinct !DILocation(line: 215, column: 2, scope: !15461, inlinedAt: !16455)
!16458 = !DILocation(line: 95, column: 2, scope: !15469, inlinedAt: !16457)
!16459 = !DILocation(line: 834, column: 2, scope: !16421)
!16460 = distinct !DISubprogram(name: "z_pend_curr", scope: !2530, file: !2530, line: 840, type: !16461, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !16463)
!16461 = !DISubroutineType(types: !16462)
!16462 = !{!103, !15437, !15426, !2456, !16223}
!16463 = !{!16464, !16465, !16466, !16467}
!16464 = !DILocalVariable(name: "lock", arg: 1, scope: !16460, file: !2530, line: 840, type: !15437)
!16465 = !DILocalVariable(name: "key", arg: 2, scope: !16460, file: !2530, line: 840, type: !15426)
!16466 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16460, file: !2530, line: 841, type: !2456)
!16467 = !DILocalVariable(name: "timeout", arg: 4, scope: !16460, file: !2530, line: 841, type: !16223)
!16468 = !DILocation(line: 0, scope: !16460)
!16469 = !DILocation(line: 844, column: 20, scope: !16460)
!16470 = !DILocation(line: 844, column: 18, scope: !16460)
!16471 = !DILocation(line: 0, scope: !15434, inlinedAt: !16472)
!16472 = distinct !DILocation(line: 856, column: 9, scope: !16460)
!16473 = !DILocation(line: 55, column: 2, scope: !15443, inlinedAt: !16474)
!16474 = distinct !DILocation(line: 145, column: 10, scope: !15434, inlinedAt: !16472)
!16475 = !DILocation(line: 0, scope: !15443, inlinedAt: !16474)
!16476 = !DILocation(line: 857, column: 14, scope: !16460)
!16477 = !DILocation(line: 857, column: 2, scope: !16460)
!16478 = !DILocation(line: 0, scope: !16043, inlinedAt: !16479)
!16479 = distinct !DILocation(line: 859, column: 9, scope: !16460)
!16480 = !DILocation(line: 196, column: 9, scope: !16043, inlinedAt: !16479)
!16481 = !DILocation(line: 859, column: 2, scope: !16460)
!16482 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2530, file: !2530, line: 862, type: !16483, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !16485)
!16483 = !DISubroutineType(types: !16484)
!16484 = !{!2425, !2456}
!16485 = !{!16486, !16487, !16488, !16490}
!16486 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16482, file: !2530, line: 862, type: !2456)
!16487 = !DILocalVariable(name: "thread", scope: !16482, file: !2530, line: 864, type: !2425)
!16488 = !DILocalVariable(name: "__i", scope: !16489, file: !2530, line: 866, type: !15426)
!16489 = distinct !DILexicalBlock(scope: !16482, file: !2530, line: 866, column: 2)
!16490 = !DILocalVariable(name: "__key", scope: !16489, file: !2530, line: 866, type: !15426)
!16491 = !DILocation(line: 0, scope: !16482)
!16492 = !DILocation(line: 0, scope: !16489)
!16493 = !DILocation(line: 0, scope: !15434, inlinedAt: !16494)
!16494 = distinct !DILocation(line: 866, column: 2, scope: !16489)
!16495 = !DILocation(line: 55, column: 2, scope: !15443, inlinedAt: !16496)
!16496 = distinct !DILocation(line: 145, column: 10, scope: !15434, inlinedAt: !16494)
!16497 = !DILocation(line: 0, scope: !15443, inlinedAt: !16496)
!16498 = !DILocation(line: 867, column: 12, scope: !16499)
!16499 = distinct !DILexicalBlock(scope: !16500, file: !2530, line: 866, column: 26)
!16500 = distinct !DILexicalBlock(scope: !16489, file: !2530, line: 866, column: 2)
!16501 = !DILocation(line: 869, column: 14, scope: !16502)
!16502 = distinct !DILexicalBlock(scope: !16499, file: !2530, line: 869, column: 7)
!16503 = !DILocation(line: 869, column: 7, scope: !16499)
!16504 = !DILocation(line: 870, column: 4, scope: !16505)
!16505 = distinct !DILexicalBlock(scope: !16502, file: !2530, line: 869, column: 23)
!16506 = !DILocation(line: 871, column: 3, scope: !16505)
!16507 = !DILocation(line: 0, scope: !15461, inlinedAt: !16508)
!16508 = distinct !DILocation(line: 866, column: 2, scope: !16500)
!16509 = !DILocation(line: 0, scope: !15469, inlinedAt: !16510)
!16510 = distinct !DILocation(line: 215, column: 2, scope: !15461, inlinedAt: !16508)
!16511 = !DILocation(line: 95, column: 2, scope: !15469, inlinedAt: !16510)
!16512 = !DILocation(line: 874, column: 2, scope: !16482)
!16513 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2530, file: !2530, line: 877, type: !16483, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !16514)
!16514 = !{!16515, !16516, !16517, !16519}
!16515 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16513, file: !2530, line: 877, type: !2456)
!16516 = !DILocalVariable(name: "thread", scope: !16513, file: !2530, line: 879, type: !2425)
!16517 = !DILocalVariable(name: "__i", scope: !16518, file: !2530, line: 881, type: !15426)
!16518 = distinct !DILexicalBlock(scope: !16513, file: !2530, line: 881, column: 2)
!16519 = !DILocalVariable(name: "__key", scope: !16518, file: !2530, line: 881, type: !15426)
!16520 = !DILocation(line: 0, scope: !16513)
!16521 = !DILocation(line: 0, scope: !16518)
!16522 = !DILocation(line: 0, scope: !15434, inlinedAt: !16523)
!16523 = distinct !DILocation(line: 881, column: 2, scope: !16518)
!16524 = !DILocation(line: 55, column: 2, scope: !15443, inlinedAt: !16525)
!16525 = distinct !DILocation(line: 145, column: 10, scope: !15434, inlinedAt: !16523)
!16526 = !DILocation(line: 0, scope: !15443, inlinedAt: !16525)
!16527 = !DILocation(line: 882, column: 12, scope: !16528)
!16528 = distinct !DILexicalBlock(scope: !16529, file: !2530, line: 881, column: 26)
!16529 = distinct !DILexicalBlock(scope: !16518, file: !2530, line: 881, column: 2)
!16530 = !DILocation(line: 884, column: 14, scope: !16531)
!16531 = distinct !DILexicalBlock(scope: !16528, file: !2530, line: 884, column: 7)
!16532 = !DILocation(line: 884, column: 7, scope: !16528)
!16533 = !DILocation(line: 885, column: 4, scope: !16534)
!16534 = distinct !DILexicalBlock(scope: !16531, file: !2530, line: 884, column: 23)
!16535 = !DILocation(line: 886, column: 10, scope: !16534)
!16536 = !DILocation(line: 887, column: 3, scope: !16534)
!16537 = !DILocation(line: 0, scope: !15461, inlinedAt: !16538)
!16538 = distinct !DILocation(line: 881, column: 2, scope: !16529)
!16539 = !DILocation(line: 0, scope: !15469, inlinedAt: !16540)
!16540 = distinct !DILocation(line: 215, column: 2, scope: !15461, inlinedAt: !16538)
!16541 = !DILocation(line: 95, column: 2, scope: !15469, inlinedAt: !16540)
!16542 = !DILocation(line: 890, column: 2, scope: !16513)
!16543 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2530, file: !2530, line: 893, type: !15392, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !16544)
!16544 = !{!16545}
!16545 = !DILocalVariable(name: "thread", arg: 1, scope: !16543, file: !2530, line: 893, type: !2425)
!16546 = !DILocation(line: 0, scope: !16543)
!16547 = !DILocation(line: 0, scope: !16399, inlinedAt: !16548)
!16548 = distinct !DILocation(line: 895, column: 2, scope: !16543)
!16549 = !DILocation(line: 0, scope: !16403, inlinedAt: !16548)
!16550 = !DILocation(line: 0, scope: !15434, inlinedAt: !16551)
!16551 = distinct !DILocation(line: 788, column: 2, scope: !16403, inlinedAt: !16548)
!16552 = !DILocation(line: 55, column: 2, scope: !15443, inlinedAt: !16553)
!16553 = distinct !DILocation(line: 145, column: 10, scope: !15434, inlinedAt: !16551)
!16554 = !DILocation(line: 0, scope: !15443, inlinedAt: !16553)
!16555 = !DILocation(line: 789, column: 3, scope: !16413, inlinedAt: !16548)
!16556 = !DILocation(line: 0, scope: !15461, inlinedAt: !16557)
!16557 = distinct !DILocation(line: 788, column: 2, scope: !16414, inlinedAt: !16548)
!16558 = !DILocation(line: 0, scope: !15469, inlinedAt: !16559)
!16559 = distinct !DILocation(line: 215, column: 2, scope: !15461, inlinedAt: !16557)
!16560 = !DILocation(line: 95, column: 2, scope: !15469, inlinedAt: !16559)
!16561 = !DILocation(line: 896, column: 8, scope: !16543)
!16562 = !DILocation(line: 897, column: 1, scope: !16543)
!16563 = distinct !DISubprogram(name: "z_set_prio", scope: !2530, file: !2530, line: 902, type: !15754, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !16564)
!16564 = !{!16565, !16566, !16567, !16568, !16570}
!16565 = !DILocalVariable(name: "thread", arg: 1, scope: !16563, file: !2530, line: 902, type: !2425)
!16566 = !DILocalVariable(name: "prio", arg: 2, scope: !16563, file: !2530, line: 902, type: !103)
!16567 = !DILocalVariable(name: "need_sched", scope: !16563, file: !2530, line: 904, type: !131)
!16568 = !DILocalVariable(name: "__i", scope: !16569, file: !2530, line: 906, type: !15426)
!16569 = distinct !DILexicalBlock(scope: !16563, file: !2530, line: 906, column: 2)
!16570 = !DILocalVariable(name: "__key", scope: !16569, file: !2530, line: 906, type: !15426)
!16571 = !DILocation(line: 0, scope: !16563)
!16572 = !DILocation(line: 0, scope: !16569)
!16573 = !DILocation(line: 0, scope: !15434, inlinedAt: !16574)
!16574 = distinct !DILocation(line: 906, column: 2, scope: !16569)
!16575 = !DILocation(line: 55, column: 2, scope: !15443, inlinedAt: !16576)
!16576 = distinct !DILocation(line: 145, column: 10, scope: !15434, inlinedAt: !16574)
!16577 = !DILocation(line: 0, scope: !15443, inlinedAt: !16576)
!16578 = !DILocation(line: 907, column: 16, scope: !16579)
!16579 = distinct !DILexicalBlock(scope: !16580, file: !2530, line: 906, column: 26)
!16580 = distinct !DILexicalBlock(scope: !16569, file: !2530, line: 906, column: 2)
!16581 = !DILocation(line: 909, column: 7, scope: !16579)
!16582 = !DILocation(line: 0, scope: !15603, inlinedAt: !16583)
!16583 = distinct !DILocation(line: 912, column: 5, scope: !16584)
!16584 = distinct !DILexicalBlock(scope: !16585, file: !2530, line: 911, column: 63)
!16585 = distinct !DILexicalBlock(scope: !16586, file: !2530, line: 911, column: 8)
!16586 = distinct !DILexicalBlock(scope: !16587, file: !2530, line: 909, column: 19)
!16587 = distinct !DILexicalBlock(scope: !16579, file: !2530, line: 909, column: 7)
!16588 = !DILocation(line: 266, column: 28, scope: !15603, inlinedAt: !16583)
!16589 = !DILocation(line: 0, scope: !15611, inlinedAt: !16590)
!16590 = distinct !DILocation(line: 268, column: 3, scope: !15615, inlinedAt: !16583)
!16591 = !DILocation(line: 234, column: 2, scope: !15611, inlinedAt: !16590)
!16592 = !DILocation(line: 913, column: 23, scope: !16584)
!16593 = !DILocation(line: 0, scope: !15620, inlinedAt: !16594)
!16594 = distinct !DILocation(line: 914, column: 5, scope: !16584)
!16595 = !DILocation(line: 252, column: 28, scope: !15620, inlinedAt: !16594)
!16596 = !DILocation(line: 0, scope: !15627, inlinedAt: !16597)
!16597 = distinct !DILocation(line: 254, column: 3, scope: !15631, inlinedAt: !16594)
!16598 = !DILocation(line: 0, scope: !15634, inlinedAt: !16599)
!16599 = distinct !DILocation(line: 229, column: 2, scope: !15627, inlinedAt: !16597)
!16600 = !DILocation(line: 188, column: 2, scope: !15644, inlinedAt: !16599)
!16601 = !DILocation(line: 188, column: 2, scope: !15646, inlinedAt: !16599)
!16602 = !DILocation(line: 0, scope: !15644, inlinedAt: !16599)
!16603 = !DILocation(line: 189, column: 7, scope: !15649, inlinedAt: !16599)
!16604 = !DILocation(line: 189, column: 35, scope: !15649, inlinedAt: !16599)
!16605 = !DILocation(line: 189, column: 7, scope: !15650, inlinedAt: !16599)
!16606 = !DILocation(line: 190, column: 4, scope: !15654, inlinedAt: !16599)
!16607 = !DILocation(line: 192, column: 4, scope: !15654, inlinedAt: !16599)
!16608 = distinct !{!16608, !16600, !16609}
!16609 = !DILocation(line: 194, column: 2, scope: !15644, inlinedAt: !16599)
!16610 = !DILocation(line: 196, column: 2, scope: !15634, inlinedAt: !16599)
!16611 = !DILocation(line: 197, column: 1, scope: !15634, inlinedAt: !16599)
!16612 = !DILocation(line: 918, column: 4, scope: !16586)
!16613 = !DILocation(line: 919, column: 3, scope: !16586)
!16614 = !DILocation(line: 920, column: 22, scope: !16615)
!16615 = distinct !DILexicalBlock(scope: !16587, file: !2530, line: 919, column: 10)
!16616 = !DILocation(line: 0, scope: !15461, inlinedAt: !16617)
!16617 = distinct !DILocation(line: 906, column: 2, scope: !16580)
!16618 = !DILocation(line: 0, scope: !15469, inlinedAt: !16619)
!16619 = distinct !DILocation(line: 215, column: 2, scope: !15461, inlinedAt: !16617)
!16620 = !DILocation(line: 95, column: 2, scope: !15469, inlinedAt: !16619)
!16621 = !DILocation(line: 926, column: 2, scope: !16563)
!16622 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2530, file: !2530, line: 929, type: !16623, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !16625)
!16623 = !DISubroutineType(types: !16624)
!16624 = !{null, !2425, !103}
!16625 = !{!16626, !16627, !16628}
!16626 = !DILocalVariable(name: "thread", arg: 1, scope: !16622, file: !2530, line: 929, type: !2425)
!16627 = !DILocalVariable(name: "prio", arg: 2, scope: !16622, file: !2530, line: 929, type: !103)
!16628 = !DILocalVariable(name: "need_sched", scope: !16622, file: !2530, line: 931, type: !131)
!16629 = !DILocation(line: 0, scope: !16622)
!16630 = !DILocation(line: 931, column: 20, scope: !16622)
!16631 = !DILocation(line: 935, column: 17, scope: !16632)
!16632 = distinct !DILexicalBlock(scope: !16622, file: !2530, line: 935, column: 6)
!16633 = !DILocation(line: 935, column: 20, scope: !16632)
!16634 = !DILocation(line: 935, column: 35, scope: !16632)
!16635 = !DILocation(line: 935, column: 48, scope: !16632)
!16636 = !DILocation(line: 935, column: 6, scope: !16622)
!16637 = !DILocation(line: 936, column: 3, scope: !16638)
!16638 = distinct !DILexicalBlock(scope: !16632, file: !2530, line: 935, column: 55)
!16639 = !DILocation(line: 937, column: 2, scope: !16638)
!16640 = !DILocation(line: 938, column: 1, scope: !16622)
!16641 = distinct !DISubprogram(name: "k_sched_lock", scope: !2530, file: !2530, line: 987, type: !334, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !16642)
!16642 = !{!16643, !16645}
!16643 = !DILocalVariable(name: "__i", scope: !16644, file: !2530, line: 989, type: !15426)
!16644 = distinct !DILexicalBlock(scope: !16641, file: !2530, line: 989, column: 2)
!16645 = !DILocalVariable(name: "__key", scope: !16644, file: !2530, line: 989, type: !15426)
!16646 = !DILocation(line: 0, scope: !16644)
!16647 = !DILocation(line: 0, scope: !15434, inlinedAt: !16648)
!16648 = distinct !DILocation(line: 989, column: 2, scope: !16644)
!16649 = !DILocation(line: 55, column: 2, scope: !15443, inlinedAt: !16650)
!16650 = distinct !DILocation(line: 145, column: 10, scope: !15434, inlinedAt: !16648)
!16651 = !DILocation(line: 0, scope: !15443, inlinedAt: !16650)
!16652 = !DILocation(line: 992, column: 3, scope: !16653)
!16653 = distinct !DILexicalBlock(scope: !16654, file: !2530, line: 989, column: 26)
!16654 = distinct !DILexicalBlock(scope: !16644, file: !2530, line: 989, column: 2)
!16655 = !DILocation(line: 0, scope: !15461, inlinedAt: !16656)
!16656 = distinct !DILocation(line: 989, column: 2, scope: !16654)
!16657 = !DILocation(line: 0, scope: !15469, inlinedAt: !16658)
!16658 = distinct !DILocation(line: 215, column: 2, scope: !15461, inlinedAt: !16656)
!16659 = !DILocation(line: 95, column: 2, scope: !15469, inlinedAt: !16658)
!16660 = !DILocation(line: 994, column: 1, scope: !16641)
!16661 = distinct !DISubprogram(name: "z_sched_lock", scope: !13964, file: !13964, line: 251, type: !334, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !251)
!16662 = !DILocation(line: 256, column: 4, scope: !16661)
!16663 = !DILocation(line: 256, column: 19, scope: !16661)
!16664 = !DILocation(line: 256, column: 2, scope: !16661)
!16665 = !DILocation(line: 258, column: 2, scope: !16666)
!16666 = distinct !DILexicalBlock(scope: !16661, file: !13964, line: 258, column: 2)
!16667 = !{i64 2154967522}
!16668 = !DILocation(line: 259, column: 1, scope: !16661)
!16669 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2530, file: !2530, line: 996, type: !334, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !16670)
!16670 = !{!16671, !16673}
!16671 = !DILocalVariable(name: "__i", scope: !16672, file: !2530, line: 998, type: !15426)
!16672 = distinct !DILexicalBlock(scope: !16669, file: !2530, line: 998, column: 2)
!16673 = !DILocalVariable(name: "__key", scope: !16672, file: !2530, line: 998, type: !15426)
!16674 = !DILocation(line: 0, scope: !16672)
!16675 = !DILocation(line: 0, scope: !15434, inlinedAt: !16676)
!16676 = distinct !DILocation(line: 998, column: 2, scope: !16672)
!16677 = !DILocation(line: 55, column: 2, scope: !15443, inlinedAt: !16678)
!16678 = distinct !DILocation(line: 145, column: 10, scope: !15434, inlinedAt: !16676)
!16679 = !DILocation(line: 0, scope: !15443, inlinedAt: !16678)
!16680 = !DILocation(line: 1002, column: 5, scope: !16681)
!16681 = distinct !DILexicalBlock(scope: !16682, file: !2530, line: 998, column: 26)
!16682 = distinct !DILexicalBlock(scope: !16672, file: !2530, line: 998, column: 2)
!16683 = !DILocation(line: 1002, column: 20, scope: !16681)
!16684 = !DILocation(line: 1002, column: 3, scope: !16681)
!16685 = !DILocation(line: 1003, column: 3, scope: !16681)
!16686 = !DILocation(line: 0, scope: !15461, inlinedAt: !16687)
!16687 = distinct !DILocation(line: 998, column: 2, scope: !16682)
!16688 = !DILocation(line: 0, scope: !15469, inlinedAt: !16689)
!16689 = distinct !DILocation(line: 215, column: 2, scope: !15461, inlinedAt: !16687)
!16690 = !DILocation(line: 95, column: 2, scope: !15469, inlinedAt: !16689)
!16691 = !DILocation(line: 1011, column: 2, scope: !16669)
!16692 = !DILocation(line: 1012, column: 1, scope: !16669)
!16693 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2530, file: !2530, line: 1014, type: !15742, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !251)
!16694 = !DILocation(line: 1028, column: 25, scope: !16693)
!16695 = !DILocation(line: 1028, column: 2, scope: !16693)
!16696 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2530, file: !2530, line: 1155, type: !16697, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !16699)
!16697 = !DISubroutineType(types: !16698)
!16698 = !{!131, !2454, !2454}
!16699 = !{!16700, !16701, !16702, !16703, !16704}
!16700 = !DILocalVariable(name: "a", arg: 1, scope: !16696, file: !2530, line: 1155, type: !2454)
!16701 = !DILocalVariable(name: "b", arg: 2, scope: !16696, file: !2530, line: 1155, type: !2454)
!16702 = !DILocalVariable(name: "thread_a", scope: !16696, file: !2530, line: 1157, type: !2425)
!16703 = !DILocalVariable(name: "thread_b", scope: !16696, file: !2530, line: 1157, type: !2425)
!16704 = !DILocalVariable(name: "cmp", scope: !16696, file: !2530, line: 1158, type: !331)
!16705 = !DILocation(line: 0, scope: !16696)
!16706 = !DILocation(line: 1160, column: 13, scope: !16696)
!16707 = !DILocation(line: 1161, column: 13, scope: !16696)
!16708 = !DILocation(line: 1163, column: 8, scope: !16696)
!16709 = !DILocation(line: 1165, column: 10, scope: !16710)
!16710 = distinct !DILexicalBlock(scope: !16696, file: !2530, line: 1165, column: 6)
!16711 = !DILocation(line: 1165, column: 6, scope: !16696)
!16712 = !DILocation(line: 1167, column: 17, scope: !16713)
!16713 = distinct !DILexicalBlock(scope: !16710, file: !2530, line: 1167, column: 13)
!16714 = !DILocation(line: 1167, column: 13, scope: !16710)
!16715 = !DILocation(line: 1170, column: 25, scope: !16716)
!16716 = distinct !DILexicalBlock(scope: !16713, file: !2530, line: 1169, column: 9)
!16717 = !DILocation(line: 1170, column: 52, scope: !16716)
!16718 = !DILocation(line: 1170, column: 35, scope: !16716)
!16719 = !DILocation(line: 1170, column: 3, scope: !16716)
!16720 = !DILocation(line: 0, scope: !16710)
!16721 = !DILocation(line: 1173, column: 1, scope: !16696)
!16722 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2530, file: !2530, line: 1175, type: !16723, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !16738)
!16723 = !DISubroutineType(types: !16724)
!16724 = !{null, !16725, !2425}
!16725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16726, size: 32)
!16726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !16727, line: 37, size: 128, elements: !16728)
!16727 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16728 = !{!16729, !16737}
!16729 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !16726, file: !16727, line: 38, baseType: !16730, size: 96)
!16730 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !175, line: 83, size: 96, elements: !16731)
!16731 = !{!16732, !16733, !16736}
!16732 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !16730, file: !175, line: 84, baseType: !2454, size: 32)
!16733 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !16730, file: !175, line: 85, baseType: !16734, size: 32, offset: 32)
!16734 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !175, line: 81, baseType: !16735)
!16735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16697, size: 32)
!16736 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !16730, file: !175, line: 86, baseType: !103, size: 32, offset: 64)
!16737 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !16726, file: !16727, line: 39, baseType: !103, size: 32, offset: 96)
!16738 = !{!16739, !16740, !16741, !16742, !16751}
!16739 = !DILocalVariable(name: "pq", arg: 1, scope: !16722, file: !2530, line: 1175, type: !16725)
!16740 = !DILocalVariable(name: "thread", arg: 2, scope: !16722, file: !2530, line: 1175, type: !2425)
!16741 = !DILocalVariable(name: "t", scope: !16722, file: !2530, line: 1177, type: !2425)
!16742 = !DILocalVariable(name: "__f", scope: !16743, file: !2530, line: 1190, type: !16746)
!16743 = distinct !DILexicalBlock(scope: !16744, file: !2530, line: 1190, column: 3)
!16744 = distinct !DILexicalBlock(scope: !16745, file: !2530, line: 1189, column: 27)
!16745 = distinct !DILexicalBlock(scope: !16722, file: !2530, line: 1189, column: 6)
!16746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !175, line: 155, size: 96, elements: !16747)
!16747 = !{!16748, !16749, !16750}
!16748 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !16746, file: !175, line: 156, baseType: !2525, size: 32)
!16749 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !16746, file: !175, line: 157, baseType: !379, size: 32, offset: 32)
!16750 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !16746, file: !175, line: 158, baseType: !331, size: 32, offset: 64)
!16751 = !DILocalVariable(name: "n", scope: !16752, file: !2530, line: 1190, type: !2454)
!16752 = distinct !DILexicalBlock(scope: !16753, file: !2530, line: 1190, column: 3)
!16753 = distinct !DILexicalBlock(scope: !16743, file: !2530, line: 1190, column: 3)
!16754 = !DILocation(line: 0, scope: !16722)
!16755 = !DILocation(line: 1181, column: 31, scope: !16722)
!16756 = !DILocation(line: 1181, column: 45, scope: !16722)
!16757 = !DILocation(line: 1181, column: 15, scope: !16722)
!16758 = !DILocation(line: 1181, column: 25, scope: !16722)
!16759 = !DILocation(line: 1189, column: 11, scope: !16745)
!16760 = !DILocation(line: 1189, column: 7, scope: !16745)
!16761 = !DILocation(line: 1189, column: 6, scope: !16722)
!16762 = !DILocation(line: 1190, column: 3, scope: !16743)
!16763 = !DILocation(line: 1190, column: 3, scope: !16752)
!16764 = !DILocation(line: 0, scope: !16752)
!16765 = !DILocation(line: 1190, column: 3, scope: !16753)
!16766 = !DILocation(line: 1193, column: 2, scope: !16744)
!16767 = !DILocation(line: 1191, column: 42, scope: !16768)
!16768 = distinct !DILexicalBlock(scope: !16753, file: !2530, line: 1190, column: 54)
!16769 = !DILocation(line: 1191, column: 12, scope: !16768)
!16770 = !DILocation(line: 1191, column: 22, scope: !16768)
!16771 = distinct !{!16771, !16762, !16772}
!16772 = !DILocation(line: 1192, column: 3, scope: !16743)
!16773 = !DILocation(line: 1195, column: 17, scope: !16722)
!16774 = !DILocation(line: 1195, column: 37, scope: !16722)
!16775 = !DILocation(line: 1195, column: 2, scope: !16722)
!16776 = !DILocation(line: 1196, column: 1, scope: !16722)
!16777 = !DISubprogram(name: "z_rb_foreach_next", scope: !175, file: !175, line: 176, type: !16778, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!16778 = !DISubroutineType(types: !16779)
!16779 = !{!2454, !16780, !16781}
!16780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16730, size: 32)
!16781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16746, size: 32)
!16782 = !DISubprogram(name: "rb_insert", scope: !175, file: !175, line: 105, type: !16783, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!16783 = !DISubroutineType(types: !16784)
!16784 = !{null, !16780, !2454}
!16785 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2530, file: !2530, line: 1198, type: !16723, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !16786)
!16786 = !{!16787, !16788}
!16787 = !DILocalVariable(name: "pq", arg: 1, scope: !16785, file: !2530, line: 1198, type: !16725)
!16788 = !DILocalVariable(name: "thread", arg: 2, scope: !16785, file: !2530, line: 1198, type: !2425)
!16789 = !DILocation(line: 0, scope: !16785)
!16790 = !DILocation(line: 1202, column: 17, scope: !16785)
!16791 = !DILocation(line: 1202, column: 37, scope: !16785)
!16792 = !DILocation(line: 1202, column: 2, scope: !16785)
!16793 = !DILocation(line: 1204, column: 16, scope: !16794)
!16794 = distinct !DILexicalBlock(scope: !16785, file: !2530, line: 1204, column: 6)
!16795 = !DILocation(line: 1204, column: 7, scope: !16794)
!16796 = !DILocation(line: 1204, column: 6, scope: !16785)
!16797 = !DILocation(line: 1205, column: 7, scope: !16798)
!16798 = distinct !DILexicalBlock(scope: !16794, file: !2530, line: 1204, column: 22)
!16799 = !DILocation(line: 1205, column: 22, scope: !16798)
!16800 = !DILocation(line: 1206, column: 2, scope: !16798)
!16801 = !DILocation(line: 1207, column: 1, scope: !16785)
!16802 = !DISubprogram(name: "rb_remove", scope: !175, file: !175, line: 110, type: !16783, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!16803 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2530, file: !2530, line: 1209, type: !16804, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !16806)
!16804 = !DISubroutineType(types: !16805)
!16805 = !{!2425, !16725}
!16806 = !{!16807, !16808, !16809}
!16807 = !DILocalVariable(name: "pq", arg: 1, scope: !16803, file: !2530, line: 1209, type: !16725)
!16808 = !DILocalVariable(name: "thread", scope: !16803, file: !2530, line: 1211, type: !2425)
!16809 = !DILocalVariable(name: "n", scope: !16803, file: !2530, line: 1212, type: !2454)
!16810 = !DILocation(line: 0, scope: !16803)
!16811 = !DILocation(line: 1212, column: 37, scope: !16803)
!16812 = !DILocation(line: 1212, column: 21, scope: !16803)
!16813 = !DILocation(line: 1217, column: 2, scope: !16803)
!16814 = distinct !DISubprogram(name: "rb_get_min", scope: !175, file: !175, line: 115, type: !16815, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !16817)
!16815 = !DISubroutineType(types: !16816)
!16816 = !{!2454, !16780}
!16817 = !{!16818}
!16818 = !DILocalVariable(name: "tree", arg: 1, scope: !16814, file: !175, line: 115, type: !16780)
!16819 = !DILocation(line: 0, scope: !16814)
!16820 = !DILocation(line: 117, column: 9, scope: !16814)
!16821 = !DILocation(line: 117, column: 2, scope: !16814)
!16822 = !DISubprogram(name: "z_rb_get_minmax", scope: !175, file: !175, line: 100, type: !16823, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!16823 = !DISubroutineType(types: !16824)
!16824 = !{!2454, !16780, !185}
!16825 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2530, file: !2530, line: 1246, type: !16826, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !16836)
!16826 = !DISubroutineType(types: !16827)
!16827 = !{!2425, !16828}
!16828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16829, size: 32)
!16829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !16727, line: 53, size: 2080, elements: !16830)
!16830 = !{!16831, !16835}
!16831 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !16829, file: !16727, line: 54, baseType: !16832, size: 2048)
!16832 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2461, size: 2048, elements: !16833)
!16833 = !{!16834}
!16834 = !DISubrange(count: 32)
!16835 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !16829, file: !16727, line: 55, baseType: !32, size: 32, offset: 2048)
!16836 = !{!16837, !16838, !16839, !16840}
!16837 = !DILocalVariable(name: "pq", arg: 1, scope: !16825, file: !2530, line: 1246, type: !16828)
!16838 = !DILocalVariable(name: "thread", scope: !16825, file: !2530, line: 1252, type: !2425)
!16839 = !DILocalVariable(name: "l", scope: !16825, file: !2530, line: 1253, type: !15637)
!16840 = !DILocalVariable(name: "n", scope: !16825, file: !2530, line: 1254, type: !2526)
!16841 = !DILocation(line: 0, scope: !16825)
!16842 = !DILocation(line: 1248, column: 11, scope: !16843)
!16843 = distinct !DILexicalBlock(scope: !16825, file: !2530, line: 1248, column: 6)
!16844 = !DILocation(line: 1248, column: 7, scope: !16843)
!16845 = !DILocation(line: 1248, column: 6, scope: !16825)
!16846 = !DILocation(line: 1253, column: 31, scope: !16825)
!16847 = !DILocation(line: 1253, column: 20, scope: !16825)
!16848 = !DILocation(line: 1254, column: 19, scope: !16825)
!16849 = !DILocation(line: 1260, column: 1, scope: !16825)
!16850 = distinct !DISubprogram(name: "z_unpend_all", scope: !2530, file: !2530, line: 1262, type: !16851, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !16853)
!16851 = !DISubroutineType(types: !16852)
!16852 = !{!103, !2456}
!16853 = !{!16854, !16855, !16856}
!16854 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16850, file: !2530, line: 1262, type: !2456)
!16855 = !DILocalVariable(name: "need_sched", scope: !16850, file: !2530, line: 1264, type: !103)
!16856 = !DILocalVariable(name: "thread", scope: !16850, file: !2530, line: 1265, type: !2425)
!16857 = !DILocation(line: 0, scope: !16850)
!16858 = !DILocation(line: 1267, column: 19, scope: !16850)
!16859 = !DILocation(line: 1267, column: 41, scope: !16850)
!16860 = !DILocation(line: 1267, column: 2, scope: !16850)
!16861 = !DILocation(line: 1268, column: 3, scope: !16862)
!16862 = distinct !DILexicalBlock(scope: !16850, file: !2530, line: 1267, column: 50)
!16863 = !DILocation(line: 1269, column: 3, scope: !16862)
!16864 = distinct !{!16864, !16860, !16865}
!16865 = !DILocation(line: 1271, column: 2, scope: !16850)
!16866 = !DILocation(line: 1273, column: 2, scope: !16850)
!16867 = distinct !DISubprogram(name: "z_waitq_head", scope: !14289, file: !14289, line: 52, type: !16483, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !16868)
!16868 = !{!16869}
!16869 = !DILocalVariable(name: "w", arg: 1, scope: !16867, file: !14289, line: 52, type: !2456)
!16870 = !DILocation(line: 0, scope: !16867)
!16871 = !DILocation(line: 54, column: 52, scope: !16867)
!16872 = !DILocation(line: 54, column: 28, scope: !16867)
!16873 = !DILocation(line: 54, column: 9, scope: !16867)
!16874 = !DILocation(line: 54, column: 2, scope: !16867)
!16875 = distinct !DISubprogram(name: "init_ready_q", scope: !2530, file: !2530, line: 1276, type: !16876, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !16883)
!16876 = !DISubroutineType(types: !16877)
!16877 = !{null, !16878}
!16878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16879, size: 32)
!16879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !141, line: 83, size: 96, elements: !16880)
!16880 = !{!16881, !16882}
!16881 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !16879, file: !141, line: 86, baseType: !2425, size: 32)
!16882 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !16879, file: !141, line: 90, baseType: !2461, size: 64, offset: 32)
!16883 = !{!16884}
!16884 = !DILocalVariable(name: "rq", arg: 1, scope: !16875, file: !2530, line: 1276, type: !16878)
!16885 = !DILocation(line: 0, scope: !16875)
!16886 = !DILocation(line: 1289, column: 22, scope: !16875)
!16887 = !DILocation(line: 1289, column: 2, scope: !16875)
!16888 = !DILocation(line: 1291, column: 1, scope: !16875)
!16889 = distinct !DISubprogram(name: "sys_dlist_init", scope: !146, file: !146, line: 197, type: !16890, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !16892)
!16890 = !DISubroutineType(types: !16891)
!16891 = !{null, !15637}
!16892 = !{!16893}
!16893 = !DILocalVariable(name: "list", arg: 1, scope: !16889, file: !146, line: 197, type: !15637)
!16894 = !DILocation(line: 0, scope: !16889)
!16895 = !DILocation(line: 199, column: 8, scope: !16889)
!16896 = !DILocation(line: 199, column: 13, scope: !16889)
!16897 = !DILocation(line: 200, column: 8, scope: !16889)
!16898 = !DILocation(line: 200, column: 13, scope: !16889)
!16899 = !DILocation(line: 201, column: 1, scope: !16889)
!16900 = distinct !DISubprogram(name: "z_sched_init", scope: !2530, file: !2530, line: 1293, type: !334, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !251)
!16901 = !DILocation(line: 1302, column: 2, scope: !16900)
!16902 = !DILocation(line: 1306, column: 2, scope: !16900)
!16903 = !DILocation(line: 1309, column: 1, scope: !16900)
!16904 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2530, file: !2530, line: 1311, type: !16905, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !16908)
!16905 = !DISubroutineType(types: !16906)
!16906 = !{!103, !16907}
!16907 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !163, line: 347, baseType: !2425)
!16908 = !{!16909}
!16909 = !DILocalVariable(name: "thread", arg: 1, scope: !16904, file: !2530, line: 1311, type: !16907)
!16910 = !DILocation(line: 0, scope: !16904)
!16911 = !DILocation(line: 1313, column: 22, scope: !16904)
!16912 = !DILocation(line: 1313, column: 9, scope: !16904)
!16913 = !DILocation(line: 1313, column: 2, scope: !16904)
!16914 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2530, file: !2530, line: 1325, type: !16915, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !16917)
!16915 = !DISubroutineType(types: !16916)
!16916 = !{null, !16907, !103}
!16917 = !{!16918, !16919, !16920}
!16918 = !DILocalVariable(name: "thread", arg: 1, scope: !16914, file: !2530, line: 1325, type: !16907)
!16919 = !DILocalVariable(name: "prio", arg: 2, scope: !16914, file: !2530, line: 1325, type: !103)
!16920 = !DILocalVariable(name: "th", scope: !16914, file: !2530, line: 1334, type: !2425)
!16921 = !DILocation(line: 0, scope: !16914)
!16922 = !DILocation(line: 1336, column: 2, scope: !16914)
!16923 = !DILocation(line: 1337, column: 1, scope: !16914)
!16924 = distinct !DISubprogram(name: "k_can_yield", scope: !2530, file: !2530, line: 1384, type: !8331, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !251)
!16925 = !DILocation(line: 1386, column: 11, scope: !16924)
!16926 = !DILocation(line: 1386, column: 29, scope: !16924)
!16927 = !DILocation(line: 1386, column: 32, scope: !16924)
!16928 = !DILocation(line: 1386, column: 46, scope: !16924)
!16929 = !DILocation(line: 1387, column: 28, scope: !16924)
!16930 = !DILocation(line: 1387, column: 4, scope: !16924)
!16931 = !DILocation(line: 1386, column: 2, scope: !16924)
!16932 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !137, file: !137, line: 989, type: !8331, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !251)
!16933 = !DILocation(line: 993, column: 10, scope: !16932)
!16934 = !DILocation(line: 993, column: 2, scope: !16932)
!16935 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2530, file: !2530, line: 1390, type: !334, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !16936)
!16936 = !{!16937}
!16937 = !DILocalVariable(name: "key", scope: !16935, file: !2530, line: 1396, type: !15426)
!16938 = !DILocation(line: 0, scope: !15434, inlinedAt: !16939)
!16939 = distinct !DILocation(line: 1396, column: 25, scope: !16935)
!16940 = !DILocation(line: 55, column: 2, scope: !15443, inlinedAt: !16941)
!16941 = distinct !DILocation(line: 145, column: 10, scope: !15434, inlinedAt: !16939)
!16942 = !DILocation(line: 0, scope: !15443, inlinedAt: !16941)
!16943 = !DILocation(line: 0, scope: !16935)
!16944 = !DILocation(line: 1400, column: 18, scope: !16945)
!16945 = distinct !DILexicalBlock(scope: !16946, file: !2530, line: 1399, column: 36)
!16946 = distinct !DILexicalBlock(scope: !16935, file: !2530, line: 1398, column: 6)
!16947 = !DILocation(line: 0, scope: !15603, inlinedAt: !16948)
!16948 = distinct !DILocation(line: 1400, column: 3, scope: !16945)
!16949 = !DILocation(line: 266, column: 15, scope: !15603, inlinedAt: !16948)
!16950 = !DILocation(line: 266, column: 28, scope: !15603, inlinedAt: !16948)
!16951 = !DILocation(line: 0, scope: !15611, inlinedAt: !16952)
!16952 = distinct !DILocation(line: 268, column: 3, scope: !15615, inlinedAt: !16948)
!16953 = !DILocation(line: 234, column: 2, scope: !15611, inlinedAt: !16952)
!16954 = !DILocation(line: 1402, column: 15, scope: !16935)
!16955 = !DILocation(line: 0, scope: !15620, inlinedAt: !16956)
!16956 = distinct !DILocation(line: 1402, column: 2, scope: !16935)
!16957 = !DILocation(line: 252, column: 15, scope: !15620, inlinedAt: !16956)
!16958 = !DILocation(line: 252, column: 28, scope: !15620, inlinedAt: !16956)
!16959 = !DILocation(line: 0, scope: !15627, inlinedAt: !16960)
!16960 = distinct !DILocation(line: 254, column: 3, scope: !15631, inlinedAt: !16956)
!16961 = !DILocation(line: 0, scope: !15634, inlinedAt: !16962)
!16962 = distinct !DILocation(line: 229, column: 2, scope: !15627, inlinedAt: !16960)
!16963 = !DILocation(line: 188, column: 2, scope: !15644, inlinedAt: !16962)
!16964 = !DILocation(line: 188, column: 2, scope: !15646, inlinedAt: !16962)
!16965 = !DILocation(line: 0, scope: !15644, inlinedAt: !16962)
!16966 = !DILocation(line: 189, column: 7, scope: !15649, inlinedAt: !16962)
!16967 = !DILocation(line: 189, column: 35, scope: !15649, inlinedAt: !16962)
!16968 = !DILocation(line: 189, column: 7, scope: !15650, inlinedAt: !16962)
!16969 = !DILocation(line: 191, column: 21, scope: !15654, inlinedAt: !16962)
!16970 = !DILocation(line: 190, column: 4, scope: !15654, inlinedAt: !16962)
!16971 = !DILocation(line: 192, column: 4, scope: !15654, inlinedAt: !16962)
!16972 = distinct !{!16972, !16963, !16973}
!16973 = !DILocation(line: 194, column: 2, scope: !15644, inlinedAt: !16962)
!16974 = !DILocation(line: 196, column: 37, scope: !15634, inlinedAt: !16962)
!16975 = !DILocation(line: 196, column: 2, scope: !15634, inlinedAt: !16962)
!16976 = !DILocation(line: 197, column: 1, scope: !15634, inlinedAt: !16962)
!16977 = !DILocation(line: 1403, column: 2, scope: !16935)
!16978 = !DILocation(line: 0, scope: !16043, inlinedAt: !16979)
!16979 = distinct !DILocation(line: 1404, column: 2, scope: !16935)
!16980 = !DILocation(line: 196, column: 9, scope: !16043, inlinedAt: !16979)
!16981 = !DILocation(line: 1405, column: 1, scope: !16935)
!16982 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2530, file: !2530, line: 1459, type: !16983, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !16985)
!16983 = !DISubroutineType(types: !16984)
!16984 = !{!331, !16223}
!16985 = !{!16986, !16987, !16988}
!16986 = !DILocalVariable(name: "timeout", arg: 1, scope: !16982, file: !2530, line: 1459, type: !16223)
!16987 = !DILocalVariable(name: "ticks", scope: !16982, file: !2530, line: 1461, type: !104)
!16988 = !DILocalVariable(name: "ret", scope: !16982, file: !2530, line: 1480, type: !331)
!16989 = !DILocation(line: 0, scope: !16982)
!16990 = !DILocation(line: 1468, column: 6, scope: !16991)
!16991 = distinct !DILexicalBlock(scope: !16982, file: !2530, line: 1468, column: 6)
!16992 = !DILocation(line: 1468, column: 6, scope: !16982)
!16993 = !DILocation(line: 1469, column: 20, scope: !16994)
!16994 = distinct !DILexicalBlock(scope: !16991, file: !2530, line: 1468, column: 40)
!16995 = !DILocation(line: 1469, column: 3, scope: !16994)
!16996 = !DILocation(line: 1473, column: 3, scope: !16994)
!16997 = !DILocation(line: 1478, column: 10, scope: !16982)
!16998 = !DILocation(line: 1480, column: 16, scope: !16982)
!16999 = !DILocation(line: 1485, column: 1, scope: !16982)
!17000 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3618, file: !3618, line: 310, type: !17001, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !17003)
!17001 = !DISubroutineType(types: !17002)
!17002 = !{null, !16907}
!17003 = !{!17004}
!17004 = !DILocalVariable(name: "thread", arg: 1, scope: !17000, file: !3618, line: 310, type: !16907)
!17005 = !DILocation(line: 0, scope: !17000)
!17006 = !DILocation(line: 319, column: 2, scope: !17007)
!17007 = distinct !DILexicalBlock(scope: !17000, file: !3618, line: 319, column: 2)
!17008 = !{i64 2154885911}
!17009 = !DILocation(line: 320, column: 2, scope: !17000)
!17010 = !DILocation(line: 321, column: 1, scope: !17000)
!17011 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2530, file: !2530, line: 1415, type: !17012, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !17014)
!17012 = !DISubroutineType(types: !17013)
!17013 = !{!331, !104}
!17014 = !{!17015, !17016, !17017, !17018}
!17015 = !DILocalVariable(name: "ticks", arg: 1, scope: !17011, file: !2530, line: 1415, type: !104)
!17016 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !17011, file: !2530, line: 1418, type: !108)
!17017 = !DILocalVariable(name: "timeout", scope: !17011, file: !2530, line: 1430, type: !16223)
!17018 = !DILocalVariable(name: "key", scope: !17011, file: !2530, line: 1437, type: !15426)
!17019 = !DILocation(line: 0, scope: !17011)
!17020 = !DILocation(line: 1425, column: 12, scope: !17021)
!17021 = distinct !DILexicalBlock(scope: !17011, file: !2530, line: 1425, column: 6)
!17022 = !DILocation(line: 1425, column: 6, scope: !17011)
!17023 = !DILocation(line: 1426, column: 3, scope: !17024)
!17024 = distinct !DILexicalBlock(scope: !17021, file: !2530, line: 1425, column: 18)
!17025 = !DILocation(line: 1427, column: 3, scope: !17024)
!17026 = !DILocation(line: 1431, column: 24, scope: !17027)
!17027 = distinct !DILexicalBlock(scope: !17011, file: !2530, line: 1431, column: 6)
!17028 = !DILocation(line: 1431, column: 6, scope: !17011)
!17029 = !DILocation(line: 1432, column: 35, scope: !17030)
!17030 = distinct !DILexicalBlock(scope: !17027, file: !2530, line: 1431, column: 30)
!17031 = !DILocation(line: 1432, column: 27, scope: !17030)
!17032 = !DILocation(line: 1433, column: 2, scope: !17030)
!17033 = !DILocation(line: 1434, column: 27, scope: !17034)
!17034 = distinct !DILexicalBlock(scope: !17027, file: !2530, line: 1433, column: 9)
!17035 = !DILocation(line: 0, scope: !17027)
!17036 = !DILocation(line: 0, scope: !15434, inlinedAt: !17037)
!17037 = distinct !DILocation(line: 1437, column: 25, scope: !17011)
!17038 = !DILocation(line: 55, column: 2, scope: !15443, inlinedAt: !17039)
!17039 = distinct !DILocation(line: 145, column: 10, scope: !15434, inlinedAt: !17037)
!17040 = !DILocation(line: 0, scope: !15443, inlinedAt: !17039)
!17041 = !DILocation(line: 1440, column: 20, scope: !17011)
!17042 = !DILocation(line: 1440, column: 18, scope: !17011)
!17043 = !DILocation(line: 1442, column: 2, scope: !17011)
!17044 = !DILocation(line: 1443, column: 23, scope: !17011)
!17045 = !DILocation(line: 1443, column: 2, scope: !17011)
!17046 = !DILocation(line: 1444, column: 29, scope: !17011)
!17047 = !DILocation(line: 1444, column: 2, scope: !17011)
!17048 = !DILocation(line: 0, scope: !16043, inlinedAt: !17049)
!17049 = distinct !DILocation(line: 1446, column: 8, scope: !17011)
!17050 = !DILocation(line: 196, column: 9, scope: !16043, inlinedAt: !17049)
!17051 = !DILocation(line: 1450, column: 10, scope: !17011)
!17052 = !DILocation(line: 1450, column: 45, scope: !17011)
!17053 = !DILocation(line: 1450, column: 43, scope: !17011)
!17054 = !DILocation(line: 1451, column: 6, scope: !17011)
!17055 = !DILocation(line: 1457, column: 1, scope: !17011)
!17056 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !3604, file: !3604, line: 1103, type: !3605, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !17057)
!17057 = !{!17058}
!17058 = !DILocalVariable(name: "t", arg: 1, scope: !17056, file: !3604, line: 1103, type: !109)
!17059 = !DILocation(line: 0, scope: !17056)
!17060 = !DILocation(line: 0, scope: !15481, inlinedAt: !17061)
!17061 = distinct !DILocation(line: 1106, column: 9, scope: !17056)
!17062 = !DILocation(line: 139, column: 13, scope: !17063, inlinedAt: !17061)
!17063 = distinct !DILexicalBlock(scope: !17064, file: !3604, line: 138, column: 10)
!17064 = distinct !DILexicalBlock(scope: !17065, file: !3604, line: 136, column: 7)
!17065 = distinct !DILexicalBlock(scope: !15502, file: !3604, line: 134, column: 17)
!17066 = !DILocation(line: 1106, column: 2, scope: !17056)
!17067 = distinct !DISubprogram(name: "k_yield", scope: !3618, file: !3618, line: 140, type: !334, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !251)
!17068 = !DILocation(line: 148, column: 2, scope: !17069)
!17069 = distinct !DILexicalBlock(scope: !17067, file: !3618, line: 148, column: 2)
!17070 = !{i64 2154885231}
!17071 = !DILocation(line: 149, column: 2, scope: !17067)
!17072 = !DILocation(line: 150, column: 1, scope: !17067)
!17073 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2530, file: !2530, line: 1495, type: !17074, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !17076)
!17074 = !DISubroutineType(types: !17075)
!17075 = !{!331, !103}
!17076 = !{!17077, !17078}
!17077 = !DILocalVariable(name: "us", arg: 1, scope: !17073, file: !2530, line: 1495, type: !103)
!17078 = !DILocalVariable(name: "ticks", scope: !17073, file: !2530, line: 1497, type: !331)
!17079 = !DILocation(line: 0, scope: !17073)
!17080 = !DILocation(line: 1501, column: 31, scope: !17073)
!17081 = !DILocation(line: 1501, column: 10, scope: !17073)
!17082 = !DILocation(line: 1502, column: 23, scope: !17073)
!17083 = !DILocation(line: 1502, column: 10, scope: !17073)
!17084 = !DILocation(line: 1506, column: 31, scope: !17073)
!17085 = !DILocation(line: 1506, column: 9, scope: !17073)
!17086 = !DILocation(line: 1506, column: 2, scope: !17073)
!17087 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !3604, file: !3604, line: 571, type: !3605, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !17088)
!17088 = !{!17089}
!17089 = !DILocalVariable(name: "t", arg: 1, scope: !17087, file: !3604, line: 571, type: !109)
!17090 = !DILocation(line: 0, scope: !17087)
!17091 = !DILocation(line: 0, scope: !15481, inlinedAt: !17092)
!17092 = distinct !DILocation(line: 574, column: 9, scope: !17087)
!17093 = !DILocation(line: 135, column: 5, scope: !17065, inlinedAt: !17092)
!17094 = !DILocation(line: 139, column: 13, scope: !17063, inlinedAt: !17092)
!17095 = !DILocation(line: 574, column: 2, scope: !17087)
!17096 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !3604, file: !3604, line: 1187, type: !3605, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !17097)
!17097 = !{!17098}
!17098 = !DILocalVariable(name: "t", arg: 1, scope: !17096, file: !3604, line: 1187, type: !109)
!17099 = !DILocation(line: 0, scope: !17096)
!17100 = !DILocation(line: 0, scope: !15481, inlinedAt: !17101)
!17101 = distinct !DILocation(line: 1190, column: 9, scope: !17096)
!17102 = !DILocation(line: 145, column: 13, scope: !17103, inlinedAt: !17101)
!17103 = distinct !DILexicalBlock(scope: !15499, file: !3604, line: 144, column: 10)
!17104 = !DILocation(line: 1190, column: 2, scope: !17096)
!17105 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2530, file: !2530, line: 1517, type: !17001, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !17106)
!17106 = !{!17107}
!17107 = !DILocalVariable(name: "thread", arg: 1, scope: !17105, file: !2530, line: 1517, type: !16907)
!17108 = !DILocation(line: 0, scope: !17105)
!17109 = !DILocation(line: 1521, column: 6, scope: !17110)
!17110 = distinct !DILexicalBlock(scope: !17105, file: !2530, line: 1521, column: 6)
!17111 = !DILocation(line: 1521, column: 6, scope: !17105)
!17112 = !DILocation(line: 1525, column: 6, scope: !17113)
!17113 = distinct !DILexicalBlock(scope: !17105, file: !2530, line: 1525, column: 6)
!17114 = !DILocation(line: 1525, column: 37, scope: !17113)
!17115 = !DILocation(line: 1525, column: 6, scope: !17105)
!17116 = !DILocation(line: 1527, column: 20, scope: !17117)
!17117 = distinct !DILexicalBlock(scope: !17118, file: !2530, line: 1527, column: 7)
!17118 = distinct !DILexicalBlock(scope: !17113, file: !2530, line: 1525, column: 42)
!17119 = !DILocation(line: 1527, column: 33, scope: !17117)
!17120 = !DILocation(line: 1527, column: 7, scope: !17118)
!17121 = !DILocation(line: 1532, column: 2, scope: !17105)
!17122 = !DILocation(line: 1533, column: 2, scope: !17105)
!17123 = !DILocation(line: 1031, column: 3, scope: !16076, inlinedAt: !17124)
!17124 = distinct !DILocation(line: 48, column: 10, scope: !16080, inlinedAt: !17125)
!17125 = distinct !DILocation(line: 1537, column: 7, scope: !17126)
!17126 = distinct !DILexicalBlock(scope: !17105, file: !2530, line: 1537, column: 6)
!17127 = !DILocation(line: 0, scope: !16076, inlinedAt: !17124)
!17128 = !DILocation(line: 48, column: 9, scope: !16080, inlinedAt: !17125)
!17129 = !DILocation(line: 1537, column: 6, scope: !17105)
!17130 = !DILocation(line: 1538, column: 3, scope: !17131)
!17131 = distinct !DILexicalBlock(scope: !17126, file: !2530, line: 1537, column: 25)
!17132 = !DILocation(line: 1539, column: 2, scope: !17131)
!17133 = !DILocation(line: 1540, column: 1, scope: !17105)
!17134 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !13964, file: !13964, line: 101, type: !15552, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !17135)
!17135 = !{!17136}
!17136 = !DILocalVariable(name: "thread", arg: 1, scope: !17134, file: !13964, line: 101, type: !2425)
!17137 = !DILocation(line: 0, scope: !17134)
!17138 = !DILocation(line: 103, column: 23, scope: !17134)
!17139 = !DILocation(line: 103, column: 36, scope: !17134)
!17140 = !DILocation(line: 103, column: 55, scope: !17134)
!17141 = !DILocation(line: 103, column: 2, scope: !17134)
!17142 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2530, file: !2530, line: 1567, type: !17143, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !17145)
!17143 = !DISubroutineType(types: !17144)
!17144 = !{!16907}
!17145 = !{!17146}
!17146 = !DILocalVariable(name: "ret", scope: !17142, file: !2530, line: 1577, type: !16907)
!17147 = !DILocation(line: 1577, column: 30, scope: !17142)
!17148 = !DILocation(line: 0, scope: !17142)
!17149 = !DILocation(line: 1582, column: 2, scope: !17142)
!17150 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2530, file: !2530, line: 1593, type: !8619, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !251)
!17151 = !DILocation(line: 1031, column: 3, scope: !16076, inlinedAt: !17152)
!17152 = distinct !DILocation(line: 48, column: 10, scope: !16080, inlinedAt: !17153)
!17153 = distinct !DILocation(line: 1595, column: 10, scope: !17150)
!17154 = !DILocation(line: 0, scope: !16076, inlinedAt: !17152)
!17155 = !DILocation(line: 48, column: 9, scope: !16080, inlinedAt: !17153)
!17156 = !DILocation(line: 1595, column: 27, scope: !17150)
!17157 = !DILocation(line: 1595, column: 41, scope: !17150)
!17158 = !DILocation(line: 1595, column: 30, scope: !17150)
!17159 = !DILocation(line: 1595, column: 2, scope: !17150)
!17160 = distinct !DISubprogram(name: "z_thread_abort", scope: !2530, file: !2530, line: 1725, type: !15392, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !17161)
!17161 = !{!17162, !17163}
!17162 = !DILocalVariable(name: "thread", arg: 1, scope: !17160, file: !2530, line: 1725, type: !2425)
!17163 = !DILocalVariable(name: "key", scope: !17160, file: !2530, line: 1727, type: !15426)
!17164 = !DILocation(line: 0, scope: !17160)
!17165 = !DILocation(line: 0, scope: !15434, inlinedAt: !17166)
!17166 = distinct !DILocation(line: 1727, column: 25, scope: !17160)
!17167 = !DILocation(line: 55, column: 2, scope: !15443, inlinedAt: !17168)
!17168 = distinct !DILocation(line: 145, column: 10, scope: !15434, inlinedAt: !17166)
!17169 = !DILocation(line: 0, scope: !15443, inlinedAt: !17168)
!17170 = !DILocation(line: 1729, column: 20, scope: !17171)
!17171 = distinct !DILexicalBlock(scope: !17160, file: !2530, line: 1729, column: 6)
!17172 = !DILocation(line: 1729, column: 33, scope: !17171)
!17173 = !DILocation(line: 1729, column: 48, scope: !17171)
!17174 = !DILocation(line: 1729, column: 6, scope: !17160)
!17175 = !DILocation(line: 0, scope: !15461, inlinedAt: !17176)
!17176 = distinct !DILocation(line: 1730, column: 3, scope: !17177)
!17177 = distinct !DILexicalBlock(scope: !17171, file: !2530, line: 1729, column: 54)
!17178 = !DILocation(line: 0, scope: !15469, inlinedAt: !17179)
!17179 = distinct !DILocation(line: 215, column: 2, scope: !15461, inlinedAt: !17176)
!17180 = !DILocation(line: 95, column: 2, scope: !15469, inlinedAt: !17179)
!17181 = !DILocation(line: 1732, column: 3, scope: !17182)
!17182 = distinct !DILexicalBlock(scope: !17177, file: !2530, line: 1732, column: 3)
!17183 = !{i64 2155621227, i64 2155621243, i64 2155621269, i64 2155621297, i64 2155621317}
!17184 = !DILocation(line: 1733, column: 3, scope: !17177)
!17185 = !DILocation(line: 1736, column: 20, scope: !17186)
!17186 = distinct !DILexicalBlock(scope: !17160, file: !2530, line: 1736, column: 6)
!17187 = !DILocation(line: 1736, column: 33, scope: !17186)
!17188 = !DILocation(line: 1736, column: 49, scope: !17186)
!17189 = !DILocation(line: 1736, column: 6, scope: !17160)
!17190 = !DILocation(line: 0, scope: !15461, inlinedAt: !17191)
!17191 = distinct !DILocation(line: 1737, column: 3, scope: !17192)
!17192 = distinct !DILexicalBlock(scope: !17186, file: !2530, line: 1736, column: 56)
!17193 = !DILocation(line: 0, scope: !15469, inlinedAt: !17194)
!17194 = distinct !DILocation(line: 215, column: 2, scope: !15461, inlinedAt: !17191)
!17195 = !DILocation(line: 95, column: 2, scope: !15469, inlinedAt: !17194)
!17196 = !DILocation(line: 1738, column: 3, scope: !17192)
!17197 = !DILocation(line: 1775, column: 2, scope: !17160)
!17198 = !DILocation(line: 1776, column: 16, scope: !17199)
!17199 = distinct !DILexicalBlock(scope: !17160, file: !2530, line: 1776, column: 6)
!17200 = !DILocation(line: 1776, column: 13, scope: !17199)
!17201 = !DILocation(line: 1776, column: 25, scope: !17199)
!17202 = !DILocation(line: 1031, column: 3, scope: !16076, inlinedAt: !17203)
!17203 = distinct !DILocation(line: 48, column: 10, scope: !16080, inlinedAt: !17204)
!17204 = distinct !DILocation(line: 1776, column: 29, scope: !17199)
!17205 = !DILocation(line: 0, scope: !16076, inlinedAt: !17203)
!17206 = !DILocation(line: 48, column: 9, scope: !16080, inlinedAt: !17204)
!17207 = !DILocation(line: 1776, column: 6, scope: !17160)
!17208 = !DILocation(line: 0, scope: !16043, inlinedAt: !17209)
!17209 = distinct !DILocation(line: 1777, column: 3, scope: !17210)
!17210 = distinct !DILexicalBlock(scope: !17199, file: !2530, line: 1776, column: 47)
!17211 = !DILocation(line: 196, column: 9, scope: !16043, inlinedAt: !17209)
!17212 = !DILocation(line: 1779, column: 2, scope: !17210)
!17213 = !DILocation(line: 0, scope: !15461, inlinedAt: !17214)
!17214 = distinct !DILocation(line: 1780, column: 2, scope: !17160)
!17215 = !DILocation(line: 0, scope: !15469, inlinedAt: !17216)
!17216 = distinct !DILocation(line: 215, column: 2, scope: !15461, inlinedAt: !17214)
!17217 = !DILocation(line: 95, column: 2, scope: !15469, inlinedAt: !17216)
!17218 = !DILocation(line: 1781, column: 1, scope: !17160)
!17219 = distinct !DISubprogram(name: "end_thread", scope: !2530, file: !2530, line: 1690, type: !15392, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !17220)
!17220 = !{!17221}
!17221 = !DILocalVariable(name: "thread", arg: 1, scope: !17219, file: !2530, line: 1690, type: !2425)
!17222 = !DILocation(line: 0, scope: !17219)
!17223 = !DILocation(line: 1695, column: 20, scope: !17224)
!17224 = distinct !DILexicalBlock(scope: !17219, file: !2530, line: 1695, column: 6)
!17225 = !DILocation(line: 1695, column: 33, scope: !17224)
!17226 = !DILocation(line: 1695, column: 49, scope: !17224)
!17227 = !DILocation(line: 1695, column: 6, scope: !17219)
!17228 = !DILocation(line: 1697, column: 29, scope: !17229)
!17229 = distinct !DILexicalBlock(scope: !17224, file: !2530, line: 1695, column: 56)
!17230 = !DILocation(line: 1698, column: 7, scope: !17231)
!17231 = distinct !DILexicalBlock(scope: !17229, file: !2530, line: 1698, column: 7)
!17232 = !DILocation(line: 1698, column: 7, scope: !17229)
!17233 = !DILocation(line: 0, scope: !15603, inlinedAt: !17234)
!17234 = distinct !DILocation(line: 1699, column: 4, scope: !17235)
!17235 = distinct !DILexicalBlock(scope: !17231, file: !2530, line: 1698, column: 35)
!17236 = !DILocation(line: 266, column: 28, scope: !15603, inlinedAt: !17234)
!17237 = !DILocation(line: 0, scope: !15611, inlinedAt: !17238)
!17238 = distinct !DILocation(line: 268, column: 3, scope: !15615, inlinedAt: !17234)
!17239 = !DILocation(line: 234, column: 2, scope: !15611, inlinedAt: !17238)
!17240 = !DILocation(line: 1700, column: 3, scope: !17235)
!17241 = !DILocation(line: 1701, column: 20, scope: !17242)
!17242 = distinct !DILexicalBlock(scope: !17229, file: !2530, line: 1701, column: 7)
!17243 = !DILocation(line: 1701, column: 30, scope: !17242)
!17244 = !DILocation(line: 1701, column: 7, scope: !17229)
!17245 = !DILocation(line: 1702, column: 4, scope: !17246)
!17246 = distinct !DILexicalBlock(scope: !17242, file: !2530, line: 1701, column: 39)
!17247 = !DILocation(line: 1703, column: 3, scope: !17246)
!17248 = !DILocation(line: 1704, column: 9, scope: !17229)
!17249 = !DILocation(line: 1705, column: 23, scope: !17229)
!17250 = !DILocation(line: 1705, column: 3, scope: !17229)
!17251 = !DILocation(line: 1706, column: 3, scope: !17229)
!17252 = !DILocation(line: 1722, column: 2, scope: !17229)
!17253 = !DILocation(line: 1723, column: 1, scope: !17219)
!17254 = distinct !DISubprogram(name: "unpend_all", scope: !2530, file: !2530, line: 1674, type: !17255, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !17257)
!17255 = !DISubroutineType(types: !17256)
!17256 = !{null, !2456}
!17257 = !{!17258, !17259}
!17258 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17254, file: !2530, line: 1674, type: !2456)
!17259 = !DILocalVariable(name: "thread", scope: !17254, file: !2530, line: 1676, type: !2425)
!17260 = !DILocation(line: 0, scope: !17254)
!17261 = !DILocation(line: 1678, column: 19, scope: !17254)
!17262 = !DILocation(line: 1678, column: 41, scope: !17254)
!17263 = !DILocation(line: 1678, column: 2, scope: !17254)
!17264 = !DILocation(line: 1679, column: 3, scope: !17265)
!17265 = distinct !DILexicalBlock(scope: !17254, file: !2530, line: 1678, column: 50)
!17266 = !DILocation(line: 1680, column: 9, scope: !17265)
!17267 = !DILocalVariable(name: "thread", arg: 1, scope: !17268, file: !13984, line: 65, type: !2425)
!17268 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13984, file: !13984, line: 65, type: !17269, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !17271)
!17269 = !DISubroutineType(types: !17270)
!17270 = !{null, !2425, !32}
!17271 = !{!17267, !17272}
!17272 = !DILocalVariable(name: "value", arg: 2, scope: !17268, file: !13984, line: 65, type: !32)
!17273 = !DILocation(line: 0, scope: !17268, inlinedAt: !17274)
!17274 = distinct !DILocation(line: 1681, column: 3, scope: !17265)
!17275 = !DILocation(line: 67, column: 15, scope: !17268, inlinedAt: !17274)
!17276 = !DILocation(line: 67, column: 33, scope: !17268, inlinedAt: !17274)
!17277 = !DILocation(line: 1682, column: 3, scope: !17265)
!17278 = distinct !{!17278, !17263, !17279}
!17279 = !DILocation(line: 1683, column: 2, scope: !17254)
!17280 = !DILocation(line: 1684, column: 1, scope: !17254)
!17281 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2530, file: !2530, line: 1794, type: !17282, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !17284)
!17282 = !DISubroutineType(types: !17283)
!17283 = !{!103, !2425, !16223}
!17284 = !{!17285, !17286, !17287, !17288}
!17285 = !DILocalVariable(name: "thread", arg: 1, scope: !17281, file: !2530, line: 1794, type: !2425)
!17286 = !DILocalVariable(name: "timeout", arg: 2, scope: !17281, file: !2530, line: 1794, type: !16223)
!17287 = !DILocalVariable(name: "key", scope: !17281, file: !2530, line: 1796, type: !15426)
!17288 = !DILocalVariable(name: "ret", scope: !17281, file: !2530, line: 1797, type: !103)
!17289 = !DILocation(line: 0, scope: !17281)
!17290 = !DILocation(line: 0, scope: !15434, inlinedAt: !17291)
!17291 = distinct !DILocation(line: 1796, column: 25, scope: !17281)
!17292 = !DILocation(line: 55, column: 2, scope: !15443, inlinedAt: !17293)
!17293 = distinct !DILocation(line: 145, column: 10, scope: !15434, inlinedAt: !17291)
!17294 = !DILocation(line: 0, scope: !15443, inlinedAt: !17293)
!17295 = !DILocation(line: 1801, column: 20, scope: !17296)
!17296 = distinct !DILexicalBlock(scope: !17281, file: !2530, line: 1801, column: 6)
!17297 = !DILocation(line: 1801, column: 33, scope: !17296)
!17298 = !DILocation(line: 1801, column: 49, scope: !17296)
!17299 = !DILocation(line: 1801, column: 6, scope: !17281)
!17300 = !DILocation(line: 1803, column: 13, scope: !17301)
!17301 = distinct !DILexicalBlock(scope: !17296, file: !2530, line: 1803, column: 13)
!17302 = !DILocation(line: 1803, column: 13, scope: !17296)
!17303 = !DILocation(line: 1805, column: 24, scope: !17304)
!17304 = distinct !DILexicalBlock(scope: !17301, file: !2530, line: 1805, column: 13)
!17305 = !DILocation(line: 1805, column: 21, scope: !17304)
!17306 = !DILocation(line: 1805, column: 34, scope: !17304)
!17307 = !DILocation(line: 1806, column: 20, scope: !17304)
!17308 = !DILocation(line: 1806, column: 44, scope: !17304)
!17309 = !DILocation(line: 1806, column: 30, scope: !17304)
!17310 = !DILocation(line: 1805, column: 13, scope: !17301)
!17311 = !DILocation(line: 1810, column: 42, scope: !17312)
!17312 = distinct !DILexicalBlock(scope: !17304, file: !2530, line: 1808, column: 9)
!17313 = !DILocation(line: 1810, column: 3, scope: !17312)
!17314 = !DILocation(line: 1811, column: 22, scope: !17312)
!17315 = !DILocation(line: 1811, column: 3, scope: !17312)
!17316 = !DILocation(line: 0, scope: !16043, inlinedAt: !17317)
!17317 = distinct !DILocation(line: 1814, column: 9, scope: !17312)
!17318 = !DILocation(line: 196, column: 9, scope: !16043, inlinedAt: !17317)
!17319 = !DILocation(line: 1817, column: 3, scope: !17312)
!17320 = !DILocation(line: 0, scope: !17296)
!17321 = !DILocation(line: 0, scope: !15461, inlinedAt: !17322)
!17322 = distinct !DILocation(line: 1822, column: 2, scope: !17281)
!17323 = !DILocation(line: 0, scope: !15469, inlinedAt: !17324)
!17324 = distinct !DILocation(line: 215, column: 2, scope: !15461, inlinedAt: !17322)
!17325 = !DILocation(line: 95, column: 2, scope: !15469, inlinedAt: !17324)
!17326 = !DILocation(line: 1823, column: 2, scope: !17281)
!17327 = !DILocation(line: 1824, column: 1, scope: !17281)
!17328 = distinct !DISubprogram(name: "z_sched_wake", scope: !2530, file: !2530, line: 1882, type: !17329, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !17331)
!17329 = !DISubroutineType(types: !17330)
!17330 = !{!131, !2456, !103, !102}
!17331 = !{!17332, !17333, !17334, !17335, !17336, !17337, !17339}
!17332 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17328, file: !2530, line: 1882, type: !2456)
!17333 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !17328, file: !2530, line: 1882, type: !103)
!17334 = !DILocalVariable(name: "swap_data", arg: 3, scope: !17328, file: !2530, line: 1882, type: !102)
!17335 = !DILocalVariable(name: "thread", scope: !17328, file: !2530, line: 1884, type: !2425)
!17336 = !DILocalVariable(name: "ret", scope: !17328, file: !2530, line: 1885, type: !131)
!17337 = !DILocalVariable(name: "__i", scope: !17338, file: !2530, line: 1887, type: !15426)
!17338 = distinct !DILexicalBlock(scope: !17328, file: !2530, line: 1887, column: 2)
!17339 = !DILocalVariable(name: "__key", scope: !17338, file: !2530, line: 1887, type: !15426)
!17340 = !DILocation(line: 0, scope: !17328)
!17341 = !DILocation(line: 0, scope: !17338)
!17342 = !DILocation(line: 0, scope: !15434, inlinedAt: !17343)
!17343 = distinct !DILocation(line: 1887, column: 2, scope: !17338)
!17344 = !DILocation(line: 55, column: 2, scope: !15443, inlinedAt: !17345)
!17345 = distinct !DILocation(line: 145, column: 10, scope: !15434, inlinedAt: !17343)
!17346 = !DILocation(line: 0, scope: !15443, inlinedAt: !17345)
!17347 = !DILocation(line: 1888, column: 12, scope: !17348)
!17348 = distinct !DILexicalBlock(scope: !17349, file: !2530, line: 1887, column: 26)
!17349 = distinct !DILexicalBlock(scope: !17338, file: !2530, line: 1887, column: 2)
!17350 = !DILocation(line: 1890, column: 14, scope: !17351)
!17351 = distinct !DILexicalBlock(scope: !17348, file: !2530, line: 1890, column: 7)
!17352 = !DILocation(line: 1890, column: 7, scope: !17348)
!17353 = !DILocalVariable(name: "thread", arg: 1, scope: !17354, file: !14733, line: 134, type: !2425)
!17354 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !14733, file: !14733, line: 134, type: !17355, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !17357)
!17355 = !DISubroutineType(types: !17356)
!17356 = !{null, !2425, !32, !102}
!17357 = !{!17353, !17358, !17359}
!17358 = !DILocalVariable(name: "value", arg: 2, scope: !17354, file: !14733, line: 135, type: !32)
!17359 = !DILocalVariable(name: "data", arg: 3, scope: !17354, file: !14733, line: 136, type: !102)
!17360 = !DILocation(line: 0, scope: !17354, inlinedAt: !17361)
!17361 = distinct !DILocation(line: 1891, column: 4, scope: !17362)
!17362 = distinct !DILexicalBlock(scope: !17351, file: !2530, line: 1890, column: 23)
!17363 = !DILocation(line: 0, scope: !17268, inlinedAt: !17364)
!17364 = distinct !DILocation(line: 138, column: 2, scope: !17354, inlinedAt: !17361)
!17365 = !DILocation(line: 67, column: 15, scope: !17268, inlinedAt: !17364)
!17366 = !DILocation(line: 67, column: 33, scope: !17268, inlinedAt: !17364)
!17367 = !DILocation(line: 139, column: 15, scope: !17354, inlinedAt: !17361)
!17368 = !DILocation(line: 139, column: 25, scope: !17354, inlinedAt: !17361)
!17369 = !DILocation(line: 1894, column: 4, scope: !17362)
!17370 = !DILocation(line: 1895, column: 10, scope: !17362)
!17371 = !DILocation(line: 1896, column: 4, scope: !17362)
!17372 = !DILocation(line: 1898, column: 3, scope: !17362)
!17373 = !DILocation(line: 0, scope: !15461, inlinedAt: !17374)
!17374 = distinct !DILocation(line: 1887, column: 2, scope: !17349)
!17375 = !DILocation(line: 0, scope: !15469, inlinedAt: !17376)
!17376 = distinct !DILocation(line: 215, column: 2, scope: !15461, inlinedAt: !17374)
!17377 = !DILocation(line: 95, column: 2, scope: !15469, inlinedAt: !17376)
!17378 = !DILocation(line: 1901, column: 2, scope: !17328)
!17379 = distinct !DISubprogram(name: "z_sched_wait", scope: !2530, file: !2530, line: 1904, type: !17380, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !17383)
!17380 = !DISubroutineType(types: !17381)
!17381 = !{!103, !15437, !15426, !2456, !16223, !17382}
!17382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!17383 = !{!17384, !17385, !17386, !17387, !17388, !17389}
!17384 = !DILocalVariable(name: "lock", arg: 1, scope: !17379, file: !2530, line: 1904, type: !15437)
!17385 = !DILocalVariable(name: "key", arg: 2, scope: !17379, file: !2530, line: 1904, type: !15426)
!17386 = !DILocalVariable(name: "wait_q", arg: 3, scope: !17379, file: !2530, line: 1905, type: !2456)
!17387 = !DILocalVariable(name: "timeout", arg: 4, scope: !17379, file: !2530, line: 1905, type: !16223)
!17388 = !DILocalVariable(name: "data", arg: 5, scope: !17379, file: !2530, line: 1905, type: !17382)
!17389 = !DILocalVariable(name: "ret", scope: !17379, file: !2530, line: 1907, type: !103)
!17390 = !DILocation(line: 0, scope: !17379)
!17391 = !DILocation(line: 1907, column: 12, scope: !17379)
!17392 = !DILocation(line: 1909, column: 11, scope: !17393)
!17393 = distinct !DILexicalBlock(scope: !17379, file: !2530, line: 1909, column: 6)
!17394 = !DILocation(line: 1909, column: 6, scope: !17379)
!17395 = !DILocation(line: 1910, column: 11, scope: !17396)
!17396 = distinct !DILexicalBlock(scope: !17393, file: !2530, line: 1909, column: 20)
!17397 = !DILocation(line: 1910, column: 26, scope: !17396)
!17398 = !DILocation(line: 1910, column: 9, scope: !17396)
!17399 = !DILocation(line: 1911, column: 2, scope: !17396)
!17400 = !DILocation(line: 1912, column: 2, scope: !17379)
!17401 = distinct !DISubprogram(name: "z_data_copy", scope: !17402, file: !17402, line: 22, type: !334, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3343, retainedNodes: !251)
!17402 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17403 = !DILocation(line: 24, column: 2, scope: !17401)
!17404 = !DILocation(line: 27, column: 2, scope: !17401)
!17405 = !DILocation(line: 31, column: 2, scope: !17401)
!17406 = !DILocation(line: 71, column: 1, scope: !17401)
!17407 = distinct !DISubprogram(name: "z_add_timeout", scope: !2567, file: !2567, line: 88, type: !17408, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !17414)
!17408 = !DISubroutineType(types: !17409)
!17409 = !{null, !2540, !2559, !17410}
!17410 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !17411)
!17411 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !17412)
!17412 = !{!17413}
!17413 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !17411, file: !105, line: 66, baseType: !104, size: 64)
!17414 = !{!17415, !17416, !17417, !17418, !17424, !17425, !17428, !17431}
!17415 = !DILocalVariable(name: "to", arg: 1, scope: !17407, file: !2567, line: 88, type: !2540)
!17416 = !DILocalVariable(name: "fn", arg: 2, scope: !17407, file: !2567, line: 88, type: !2559)
!17417 = !DILocalVariable(name: "timeout", arg: 3, scope: !17407, file: !2567, line: 89, type: !17410)
!17418 = !DILocalVariable(name: "__i", scope: !17419, file: !2567, line: 102, type: !17420)
!17419 = distinct !DILexicalBlock(scope: !17407, file: !2567, line: 102, column: 2)
!17420 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !250, line: 106, baseType: !17421)
!17421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !250, line: 32, size: 32, elements: !17422)
!17422 = !{!17423}
!17423 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !17421, file: !250, line: 33, baseType: !103, size: 32)
!17424 = !DILocalVariable(name: "__key", scope: !17419, file: !2567, line: 102, type: !17420)
!17425 = !DILocalVariable(name: "t", scope: !17426, file: !2567, line: 103, type: !2540)
!17426 = distinct !DILexicalBlock(scope: !17427, file: !2567, line: 102, column: 24)
!17427 = distinct !DILexicalBlock(scope: !17419, file: !2567, line: 102, column: 2)
!17428 = !DILocalVariable(name: "ticks", scope: !17429, file: !2567, line: 107, type: !104)
!17429 = distinct !DILexicalBlock(scope: !17430, file: !2567, line: 106, column: 39)
!17430 = distinct !DILexicalBlock(scope: !17426, file: !2567, line: 105, column: 7)
!17431 = !DILocalVariable(name: "next_time", scope: !17432, file: !2567, line: 137, type: !331)
!17432 = distinct !DILexicalBlock(scope: !17433, file: !2567, line: 127, column: 22)
!17433 = distinct !DILexicalBlock(scope: !17426, file: !2567, line: 127, column: 7)
!17434 = !DILocation(line: 0, scope: !17407)
!17435 = !DILocation(line: 91, column: 6, scope: !17436)
!17436 = distinct !DILexicalBlock(scope: !17407, file: !2567, line: 91, column: 6)
!17437 = !DILocation(line: 91, column: 6, scope: !17407)
!17438 = !DILocation(line: 100, column: 6, scope: !17407)
!17439 = !DILocation(line: 100, column: 9, scope: !17407)
!17440 = !DILocation(line: 0, scope: !17419)
!17441 = !DILocalVariable(name: "l", arg: 1, scope: !17442, file: !250, line: 136, type: !17445)
!17442 = distinct !DISubprogram(name: "k_spin_lock", scope: !250, file: !250, line: 136, type: !17443, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !17446)
!17443 = !DISubroutineType(types: !17444)
!17444 = !{!17420, !17445}
!17445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2568, size: 32)
!17446 = !{!17441, !17447}
!17447 = !DILocalVariable(name: "k", scope: !17442, file: !250, line: 139, type: !17420)
!17448 = !DILocation(line: 0, scope: !17442, inlinedAt: !17449)
!17449 = distinct !DILocation(line: 102, column: 2, scope: !17419)
!17450 = !DILocation(line: 55, column: 2, scope: !17451, inlinedAt: !17455)
!17451 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6996, file: !6996, line: 42, type: !6997, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !17452)
!17452 = !{!17453, !17454}
!17453 = !DILocalVariable(name: "key", scope: !17451, file: !6996, line: 44, type: !32)
!17454 = !DILocalVariable(name: "tmp", scope: !17451, file: !6996, line: 53, type: !32)
!17455 = distinct !DILocation(line: 145, column: 10, scope: !17442, inlinedAt: !17449)
!17456 = !{i64 2229212}
!17457 = !DILocation(line: 0, scope: !17451, inlinedAt: !17455)
!17458 = !DILocation(line: 106, column: 33, scope: !17430)
!17459 = !DILocation(line: 105, column: 7, scope: !17426)
!17460 = !DILocation(line: 107, column: 50, scope: !17429)
!17461 = !DILocation(line: 107, column: 48, scope: !17429)
!17462 = !DILocation(line: 0, scope: !17429)
!17463 = !DILocation(line: 109, column: 17, scope: !17429)
!17464 = !DILocation(line: 110, column: 3, scope: !17429)
!17465 = !DILocation(line: 111, column: 31, scope: !17466)
!17466 = distinct !DILexicalBlock(scope: !17430, file: !2567, line: 110, column: 10)
!17467 = !DILocation(line: 111, column: 37, scope: !17466)
!17468 = !DILocation(line: 111, column: 35, scope: !17466)
!17469 = !DILocation(line: 0, scope: !17430)
!17470 = !DILocation(line: 109, column: 8, scope: !17429)
!17471 = !DILocation(line: 109, column: 15, scope: !17429)
!17472 = !DILocation(line: 114, column: 12, scope: !17473)
!17473 = distinct !DILexicalBlock(scope: !17426, file: !2567, line: 114, column: 3)
!17474 = !DILocation(line: 0, scope: !17426)
!17475 = !DILocation(line: 114, column: 3, scope: !17473)
!17476 = !DILocation(line: 115, column: 24, scope: !17477)
!17477 = distinct !DILexicalBlock(scope: !17478, file: !2567, line: 115, column: 8)
!17478 = distinct !DILexicalBlock(scope: !17479, file: !2567, line: 114, column: 45)
!17479 = distinct !DILexicalBlock(scope: !17473, file: !2567, line: 114, column: 3)
!17480 = !DILocation(line: 115, column: 11, scope: !17477)
!17481 = !DILocation(line: 115, column: 18, scope: !17477)
!17482 = !DILocation(line: 115, column: 8, scope: !17478)
!17483 = !DILocation(line: 116, column: 15, scope: !17484)
!17484 = distinct !DILexicalBlock(scope: !17477, file: !2567, line: 115, column: 32)
!17485 = !DILocation(line: 117, column: 26, scope: !17484)
!17486 = !DILocation(line: 117, column: 37, scope: !17484)
!17487 = !DILocation(line: 117, column: 5, scope: !17484)
!17488 = !DILocation(line: 123, column: 7, scope: !17426)
!17489 = !DILocation(line: 120, column: 15, scope: !17478)
!17490 = !DILocation(line: 114, column: 36, scope: !17479)
!17491 = distinct !{!17491, !17475, !17492}
!17492 = !DILocation(line: 121, column: 3, scope: !17473)
!17493 = !DILocation(line: 124, column: 41, scope: !17494)
!17494 = distinct !DILexicalBlock(scope: !17495, file: !2567, line: 123, column: 18)
!17495 = distinct !DILexicalBlock(scope: !17426, file: !2567, line: 123, column: 7)
!17496 = !DILocation(line: 124, column: 4, scope: !17494)
!17497 = !DILocation(line: 125, column: 3, scope: !17494)
!17498 = !DILocation(line: 127, column: 13, scope: !17433)
!17499 = !DILocation(line: 127, column: 10, scope: !17433)
!17500 = !DILocation(line: 127, column: 7, scope: !17426)
!17501 = !DILocation(line: 137, column: 24, scope: !17432)
!17502 = !DILocation(line: 0, scope: !17432)
!17503 = !DILocation(line: 139, column: 18, scope: !17504)
!17504 = distinct !DILexicalBlock(scope: !17432, file: !2567, line: 139, column: 8)
!17505 = !DILocation(line: 139, column: 23, scope: !17504)
!17506 = !DILocation(line: 141, column: 5, scope: !17507)
!17507 = distinct !DILexicalBlock(scope: !17504, file: !2567, line: 140, column: 48)
!17508 = !DILocation(line: 142, column: 4, scope: !17507)
!17509 = !DILocalVariable(name: "key", arg: 2, scope: !17510, file: !250, line: 190, type: !17420)
!17510 = distinct !DISubprogram(name: "k_spin_unlock", scope: !250, file: !250, line: 189, type: !17511, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !17513)
!17511 = !DISubroutineType(types: !17512)
!17512 = !{null, !17445, !17420}
!17513 = !{!17514, !17509}
!17514 = !DILocalVariable(name: "l", arg: 1, scope: !17510, file: !250, line: 189, type: !17445)
!17515 = !DILocation(line: 0, scope: !17510, inlinedAt: !17516)
!17516 = distinct !DILocation(line: 102, column: 2, scope: !17427)
!17517 = !DILocalVariable(name: "key", arg: 1, scope: !17518, file: !6996, line: 84, type: !32)
!17518 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6996, file: !6996, line: 84, type: !7007, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !17519)
!17519 = !{!17517}
!17520 = !DILocation(line: 0, scope: !17518, inlinedAt: !17521)
!17521 = distinct !DILocation(line: 215, column: 2, scope: !17510, inlinedAt: !17516)
!17522 = !DILocation(line: 95, column: 2, scope: !17518, inlinedAt: !17521)
!17523 = !{i64 2230029}
!17524 = !DILocation(line: 148, column: 1, scope: !17407)
!17525 = distinct !DISubprogram(name: "elapsed", scope: !2567, file: !2567, line: 62, type: !17526, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !251)
!17526 = !DISubroutineType(types: !17527)
!17527 = !{!331}
!17528 = !DILocation(line: 64, column: 9, scope: !17525)
!17529 = !DILocation(line: 64, column: 28, scope: !17525)
!17530 = !DILocation(line: 64, column: 35, scope: !17525)
!17531 = !DILocation(line: 64, column: 2, scope: !17525)
!17532 = distinct !DISubprogram(name: "first", scope: !2567, file: !2567, line: 39, type: !17533, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !17535)
!17533 = !DISubroutineType(types: !17534)
!17534 = !{!2540}
!17535 = !{!17536}
!17536 = !DILocalVariable(name: "t", scope: !17532, file: !2567, line: 41, type: !17537)
!17537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2544, size: 32)
!17538 = !DILocation(line: 41, column: 19, scope: !17532)
!17539 = !DILocation(line: 0, scope: !17532)
!17540 = !DILocation(line: 43, column: 9, scope: !17532)
!17541 = !DILocation(line: 43, column: 2, scope: !17532)
!17542 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !146, file: !146, line: 443, type: !17543, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !17545)
!17543 = !DISubroutineType(types: !17544)
!17544 = !{null, !17537, !17537}
!17545 = !{!17546, !17547, !17548}
!17546 = !DILocalVariable(name: "successor", arg: 1, scope: !17542, file: !146, line: 443, type: !17537)
!17547 = !DILocalVariable(name: "node", arg: 2, scope: !17542, file: !146, line: 443, type: !17537)
!17548 = !DILocalVariable(name: "prev", scope: !17542, file: !146, line: 445, type: !17549)
!17549 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !17537)
!17550 = !DILocation(line: 0, scope: !17542)
!17551 = !DILocation(line: 445, column: 39, scope: !17542)
!17552 = !DILocation(line: 447, column: 8, scope: !17542)
!17553 = !DILocation(line: 447, column: 13, scope: !17542)
!17554 = !DILocation(line: 448, column: 8, scope: !17542)
!17555 = !DILocation(line: 448, column: 13, scope: !17542)
!17556 = !DILocation(line: 449, column: 8, scope: !17542)
!17557 = !DILocation(line: 449, column: 13, scope: !17542)
!17558 = !DILocation(line: 450, column: 18, scope: !17542)
!17559 = !DILocation(line: 451, column: 1, scope: !17542)
!17560 = distinct !DISubprogram(name: "next", scope: !2567, file: !2567, line: 46, type: !17561, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !17563)
!17561 = !DISubroutineType(types: !17562)
!17562 = !{!2540, !2540}
!17563 = !{!17564, !17565}
!17564 = !DILocalVariable(name: "t", arg: 1, scope: !17560, file: !2567, line: 46, type: !2540)
!17565 = !DILocalVariable(name: "n", scope: !17560, file: !2567, line: 48, type: !17537)
!17566 = !DILocation(line: 0, scope: !17560)
!17567 = !DILocation(line: 48, column: 58, scope: !17560)
!17568 = !DILocation(line: 48, column: 19, scope: !17560)
!17569 = !DILocation(line: 50, column: 9, scope: !17560)
!17570 = !DILocation(line: 50, column: 2, scope: !17560)
!17571 = distinct !DISubprogram(name: "sys_dlist_append", scope: !146, file: !146, line: 404, type: !17572, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !17575)
!17572 = !DISubroutineType(types: !17573)
!17573 = !{null, !17574, !17537}
!17574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2573, size: 32)
!17575 = !{!17576, !17577, !17578}
!17576 = !DILocalVariable(name: "list", arg: 1, scope: !17571, file: !146, line: 404, type: !17574)
!17577 = !DILocalVariable(name: "node", arg: 2, scope: !17571, file: !146, line: 404, type: !17537)
!17578 = !DILocalVariable(name: "tail", scope: !17571, file: !146, line: 406, type: !17549)
!17579 = !DILocation(line: 0, scope: !17571)
!17580 = !DILocation(line: 406, column: 34, scope: !17571)
!17581 = !DILocation(line: 408, column: 8, scope: !17571)
!17582 = !DILocation(line: 408, column: 13, scope: !17571)
!17583 = !DILocation(line: 409, column: 8, scope: !17571)
!17584 = !DILocation(line: 409, column: 13, scope: !17571)
!17585 = !DILocation(line: 411, column: 8, scope: !17571)
!17586 = !DILocation(line: 411, column: 13, scope: !17571)
!17587 = !DILocation(line: 412, column: 13, scope: !17571)
!17588 = !DILocation(line: 413, column: 1, scope: !17571)
!17589 = distinct !DISubprogram(name: "next_timeout", scope: !2567, file: !2567, line: 67, type: !17526, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !17590)
!17590 = !{!17591, !17592, !17593}
!17591 = !DILocalVariable(name: "to", scope: !17589, file: !2567, line: 69, type: !2540)
!17592 = !DILocalVariable(name: "ticks_elapsed", scope: !17589, file: !2567, line: 70, type: !331)
!17593 = !DILocalVariable(name: "ret", scope: !17589, file: !2567, line: 71, type: !331)
!17594 = !DILocation(line: 69, column: 24, scope: !17589)
!17595 = !DILocation(line: 0, scope: !17589)
!17596 = !DILocation(line: 70, column: 26, scope: !17589)
!17597 = !DILocation(line: 73, column: 10, scope: !17598)
!17598 = distinct !DILexicalBlock(scope: !17589, file: !2567, line: 73, column: 6)
!17599 = !DILocation(line: 73, column: 19, scope: !17598)
!17600 = !DILocation(line: 74, column: 21, scope: !17598)
!17601 = !DILocation(line: 74, column: 30, scope: !17598)
!17602 = !DILocation(line: 74, column: 28, scope: !17598)
!17603 = !DILocation(line: 74, column: 45, scope: !17598)
!17604 = !DILocation(line: 73, column: 6, scope: !17589)
!17605 = !DILocation(line: 77, column: 9, scope: !17606)
!17606 = distinct !DILexicalBlock(scope: !17598, file: !2567, line: 76, column: 9)
!17607 = !DILocation(line: 0, scope: !17598)
!17608 = !DILocation(line: 81, column: 20, scope: !17609)
!17609 = distinct !DILexicalBlock(scope: !17589, file: !2567, line: 81, column: 6)
!17610 = !DILocation(line: 81, column: 6, scope: !17609)
!17611 = !DILocation(line: 81, column: 32, scope: !17609)
!17612 = !DILocation(line: 85, column: 2, scope: !17589)
!17613 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !146, file: !146, line: 341, type: !17614, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !17616)
!17614 = !DISubroutineType(types: !17615)
!17615 = !{!17537, !17574, !17537}
!17616 = !{!17617, !17618}
!17617 = !DILocalVariable(name: "list", arg: 1, scope: !17613, file: !146, line: 341, type: !17574)
!17618 = !DILocalVariable(name: "node", arg: 2, scope: !17613, file: !146, line: 342, type: !17537)
!17619 = !DILocation(line: 0, scope: !17613)
!17620 = !DILocation(line: 344, column: 15, scope: !17613)
!17621 = !DILocation(line: 344, column: 9, scope: !17613)
!17622 = !DILocation(line: 344, column: 26, scope: !17613)
!17623 = !DILocation(line: 344, column: 2, scope: !17613)
!17624 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !146, file: !146, line: 325, type: !17614, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !17625)
!17625 = !{!17626, !17627}
!17626 = !DILocalVariable(name: "list", arg: 1, scope: !17624, file: !146, line: 325, type: !17574)
!17627 = !DILocalVariable(name: "node", arg: 2, scope: !17624, file: !146, line: 326, type: !17537)
!17628 = !DILocation(line: 0, scope: !17624)
!17629 = !DILocation(line: 328, column: 24, scope: !17624)
!17630 = !DILocation(line: 328, column: 15, scope: !17624)
!17631 = !DILocation(line: 328, column: 9, scope: !17624)
!17632 = !DILocation(line: 328, column: 45, scope: !17624)
!17633 = !DILocation(line: 328, column: 2, scope: !17624)
!17634 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !146, file: !146, line: 294, type: !17635, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !17637)
!17635 = !DISubroutineType(types: !17636)
!17636 = !{!17537, !17574}
!17637 = !{!17638}
!17638 = !DILocalVariable(name: "list", arg: 1, scope: !17634, file: !146, line: 294, type: !17574)
!17639 = !DILocation(line: 0, scope: !17634)
!17640 = !DILocation(line: 296, column: 9, scope: !17634)
!17641 = !DILocation(line: 296, column: 2, scope: !17634)
!17642 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !146, file: !146, line: 266, type: !17643, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !17645)
!17643 = !DISubroutineType(types: !17644)
!17644 = !{!131, !17574}
!17645 = !{!17646}
!17646 = !DILocalVariable(name: "list", arg: 1, scope: !17642, file: !146, line: 266, type: !17574)
!17647 = !DILocation(line: 0, scope: !17642)
!17648 = !DILocation(line: 268, column: 15, scope: !17642)
!17649 = !DILocation(line: 268, column: 20, scope: !17642)
!17650 = !DILocation(line: 268, column: 2, scope: !17642)
!17651 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2567, file: !2567, line: 150, type: !17652, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !17654)
!17652 = !DISubroutineType(types: !17653)
!17653 = !{!103, !2540}
!17654 = !{!17655, !17656, !17657, !17659}
!17655 = !DILocalVariable(name: "to", arg: 1, scope: !17651, file: !2567, line: 150, type: !2540)
!17656 = !DILocalVariable(name: "ret", scope: !17651, file: !2567, line: 152, type: !103)
!17657 = !DILocalVariable(name: "__i", scope: !17658, file: !2567, line: 154, type: !17420)
!17658 = distinct !DILexicalBlock(scope: !17651, file: !2567, line: 154, column: 2)
!17659 = !DILocalVariable(name: "__key", scope: !17658, file: !2567, line: 154, type: !17420)
!17660 = !DILocation(line: 0, scope: !17651)
!17661 = !DILocation(line: 0, scope: !17658)
!17662 = !DILocation(line: 0, scope: !17442, inlinedAt: !17663)
!17663 = distinct !DILocation(line: 154, column: 2, scope: !17658)
!17664 = !DILocation(line: 55, column: 2, scope: !17451, inlinedAt: !17665)
!17665 = distinct !DILocation(line: 145, column: 10, scope: !17442, inlinedAt: !17663)
!17666 = !DILocation(line: 0, scope: !17451, inlinedAt: !17665)
!17667 = !DILocation(line: 155, column: 7, scope: !17668)
!17668 = distinct !DILexicalBlock(scope: !17669, file: !2567, line: 155, column: 7)
!17669 = distinct !DILexicalBlock(scope: !17670, file: !2567, line: 154, column: 24)
!17670 = distinct !DILexicalBlock(scope: !17658, file: !2567, line: 154, column: 2)
!17671 = !DILocation(line: 155, column: 7, scope: !17669)
!17672 = !DILocation(line: 156, column: 4, scope: !17673)
!17673 = distinct !DILexicalBlock(scope: !17668, file: !2567, line: 155, column: 39)
!17674 = !DILocation(line: 158, column: 3, scope: !17673)
!17675 = !DILocation(line: 0, scope: !17510, inlinedAt: !17676)
!17676 = distinct !DILocation(line: 154, column: 2, scope: !17670)
!17677 = !DILocation(line: 0, scope: !17518, inlinedAt: !17678)
!17678 = distinct !DILocation(line: 215, column: 2, scope: !17510, inlinedAt: !17676)
!17679 = !DILocation(line: 95, column: 2, scope: !17518, inlinedAt: !17678)
!17680 = !DILocation(line: 161, column: 2, scope: !17651)
!17681 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !146, file: !146, line: 225, type: !17682, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !17686)
!17682 = !DISubroutineType(types: !17683)
!17683 = !{!131, !17684}
!17684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17685, size: 32)
!17685 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2544)
!17686 = !{!17687}
!17687 = !DILocalVariable(name: "node", arg: 1, scope: !17681, file: !146, line: 225, type: !17684)
!17688 = !DILocation(line: 0, scope: !17681)
!17689 = !DILocation(line: 227, column: 15, scope: !17681)
!17690 = !DILocation(line: 227, column: 20, scope: !17681)
!17691 = !DILocation(line: 227, column: 2, scope: !17681)
!17692 = distinct !DISubprogram(name: "remove_timeout", scope: !2567, file: !2567, line: 53, type: !2561, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !17693)
!17693 = !{!17694}
!17694 = !DILocalVariable(name: "t", arg: 1, scope: !17692, file: !2567, line: 53, type: !2540)
!17695 = !DILocation(line: 0, scope: !17692)
!17696 = !DILocation(line: 55, column: 6, scope: !17697)
!17697 = distinct !DILexicalBlock(scope: !17692, file: !2567, line: 55, column: 6)
!17698 = !DILocation(line: 55, column: 14, scope: !17697)
!17699 = !DILocation(line: 55, column: 6, scope: !17692)
!17700 = !DILocation(line: 56, column: 25, scope: !17701)
!17701 = distinct !DILexicalBlock(scope: !17697, file: !2567, line: 55, column: 23)
!17702 = !DILocation(line: 56, column: 12, scope: !17701)
!17703 = !DILocation(line: 56, column: 19, scope: !17701)
!17704 = !DILocation(line: 57, column: 2, scope: !17701)
!17705 = !DILocation(line: 59, column: 23, scope: !17692)
!17706 = !DILocation(line: 59, column: 2, scope: !17692)
!17707 = !DILocation(line: 60, column: 1, scope: !17692)
!17708 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !146, file: !146, line: 496, type: !17709, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !17711)
!17709 = !DISubroutineType(types: !17710)
!17710 = !{null, !17537}
!17711 = !{!17712, !17713, !17714}
!17712 = !DILocalVariable(name: "node", arg: 1, scope: !17708, file: !146, line: 496, type: !17537)
!17713 = !DILocalVariable(name: "prev", scope: !17708, file: !146, line: 498, type: !17549)
!17714 = !DILocalVariable(name: "next", scope: !17708, file: !146, line: 499, type: !17549)
!17715 = !DILocation(line: 0, scope: !17708)
!17716 = !DILocation(line: 498, column: 34, scope: !17708)
!17717 = !DILocation(line: 499, column: 34, scope: !17708)
!17718 = !DILocation(line: 501, column: 8, scope: !17708)
!17719 = !DILocation(line: 501, column: 13, scope: !17708)
!17720 = !DILocation(line: 502, column: 8, scope: !17708)
!17721 = !DILocation(line: 502, column: 13, scope: !17708)
!17722 = !DILocation(line: 503, column: 2, scope: !17708)
!17723 = !DILocation(line: 504, column: 1, scope: !17708)
!17724 = distinct !DISubprogram(name: "sys_dnode_init", scope: !146, file: !146, line: 211, type: !17709, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !17725)
!17725 = !{!17726}
!17726 = !DILocalVariable(name: "node", arg: 1, scope: !17724, file: !146, line: 211, type: !17537)
!17727 = !DILocation(line: 0, scope: !17724)
!17728 = !DILocation(line: 213, column: 8, scope: !17724)
!17729 = !DILocation(line: 213, column: 13, scope: !17724)
!17730 = !DILocation(line: 214, column: 8, scope: !17724)
!17731 = !DILocation(line: 214, column: 13, scope: !17724)
!17732 = !DILocation(line: 215, column: 1, scope: !17724)
!17733 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2567, file: !2567, line: 183, type: !17734, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !17738)
!17734 = !DISubroutineType(types: !17735)
!17735 = !{!104, !17736}
!17736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17737, size: 32)
!17737 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2541)
!17738 = !{!17739, !17740, !17741, !17743}
!17739 = !DILocalVariable(name: "timeout", arg: 1, scope: !17733, file: !2567, line: 183, type: !17736)
!17740 = !DILocalVariable(name: "ticks", scope: !17733, file: !2567, line: 185, type: !104)
!17741 = !DILocalVariable(name: "__i", scope: !17742, file: !2567, line: 187, type: !17420)
!17742 = distinct !DILexicalBlock(scope: !17733, file: !2567, line: 187, column: 2)
!17743 = !DILocalVariable(name: "__key", scope: !17742, file: !2567, line: 187, type: !17420)
!17744 = !DILocation(line: 0, scope: !17733)
!17745 = !DILocation(line: 0, scope: !17742)
!17746 = !DILocation(line: 0, scope: !17442, inlinedAt: !17747)
!17747 = distinct !DILocation(line: 187, column: 2, scope: !17742)
!17748 = !DILocation(line: 55, column: 2, scope: !17451, inlinedAt: !17749)
!17749 = distinct !DILocation(line: 145, column: 10, scope: !17442, inlinedAt: !17747)
!17750 = !DILocation(line: 0, scope: !17451, inlinedAt: !17749)
!17751 = !DILocation(line: 188, column: 11, scope: !17752)
!17752 = distinct !DILexicalBlock(scope: !17753, file: !2567, line: 187, column: 24)
!17753 = distinct !DILexicalBlock(scope: !17742, file: !2567, line: 187, column: 2)
!17754 = !DILocation(line: 0, scope: !17510, inlinedAt: !17755)
!17755 = distinct !DILocation(line: 187, column: 2, scope: !17753)
!17756 = !DILocation(line: 0, scope: !17518, inlinedAt: !17757)
!17757 = distinct !DILocation(line: 215, column: 2, scope: !17510, inlinedAt: !17755)
!17758 = !DILocation(line: 95, column: 2, scope: !17518, inlinedAt: !17757)
!17759 = !DILocation(line: 191, column: 2, scope: !17733)
!17760 = distinct !DISubprogram(name: "timeout_rem", scope: !2567, file: !2567, line: 165, type: !17734, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !17761)
!17761 = !{!17762, !17763, !17764}
!17762 = !DILocalVariable(name: "timeout", arg: 1, scope: !17760, file: !2567, line: 165, type: !17736)
!17763 = !DILocalVariable(name: "ticks", scope: !17760, file: !2567, line: 167, type: !104)
!17764 = !DILocalVariable(name: "t", scope: !17765, file: !2567, line: 173, type: !2540)
!17765 = distinct !DILexicalBlock(scope: !17760, file: !2567, line: 173, column: 2)
!17766 = !DILocation(line: 0, scope: !17760)
!17767 = !DILocation(line: 169, column: 6, scope: !17768)
!17768 = distinct !DILexicalBlock(scope: !17760, file: !2567, line: 169, column: 6)
!17769 = !DILocation(line: 169, column: 6, scope: !17760)
!17770 = !DILocation(line: 173, column: 28, scope: !17765)
!17771 = !DILocation(line: 0, scope: !17765)
!17772 = !DILocation(line: 173, column: 39, scope: !17773)
!17773 = distinct !DILexicalBlock(scope: !17765, file: !2567, line: 173, column: 2)
!17774 = !DILocation(line: 173, column: 2, scope: !17765)
!17775 = !DILocation(line: 174, column: 15, scope: !17776)
!17776 = distinct !DILexicalBlock(scope: !17773, file: !2567, line: 173, column: 61)
!17777 = !DILocation(line: 174, column: 9, scope: !17776)
!17778 = !DILocation(line: 175, column: 15, scope: !17779)
!17779 = distinct !DILexicalBlock(scope: !17776, file: !2567, line: 175, column: 7)
!17780 = !DILocation(line: 175, column: 7, scope: !17776)
!17781 = !DILocation(line: 173, column: 52, scope: !17773)
!17782 = distinct !{!17782, !17774, !17783}
!17783 = !DILocation(line: 178, column: 2, scope: !17765)
!17784 = !DILocation(line: 180, column: 17, scope: !17760)
!17785 = !DILocation(line: 180, column: 15, scope: !17760)
!17786 = !DILocation(line: 180, column: 2, scope: !17760)
!17787 = !DILocation(line: 181, column: 1, scope: !17760)
!17788 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14357, file: !14357, line: 35, type: !17789, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !17791)
!17789 = !DISubroutineType(types: !17790)
!17790 = !{!131, !17736}
!17791 = !{!17792}
!17792 = !DILocalVariable(name: "to", arg: 1, scope: !17788, file: !14357, line: 35, type: !17736)
!17793 = !DILocation(line: 0, scope: !17788)
!17794 = !DILocation(line: 37, column: 35, scope: !17788)
!17795 = !DILocation(line: 37, column: 10, scope: !17788)
!17796 = !DILocation(line: 37, column: 9, scope: !17788)
!17797 = !DILocation(line: 37, column: 2, scope: !17788)
!17798 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2567, file: !2567, line: 194, type: !17734, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !17799)
!17799 = !{!17800, !17801, !17802, !17804}
!17800 = !DILocalVariable(name: "timeout", arg: 1, scope: !17798, file: !2567, line: 194, type: !17736)
!17801 = !DILocalVariable(name: "ticks", scope: !17798, file: !2567, line: 196, type: !104)
!17802 = !DILocalVariable(name: "__i", scope: !17803, file: !2567, line: 198, type: !17420)
!17803 = distinct !DILexicalBlock(scope: !17798, file: !2567, line: 198, column: 2)
!17804 = !DILocalVariable(name: "__key", scope: !17803, file: !2567, line: 198, type: !17420)
!17805 = !DILocation(line: 0, scope: !17798)
!17806 = !DILocation(line: 0, scope: !17803)
!17807 = !DILocation(line: 0, scope: !17442, inlinedAt: !17808)
!17808 = distinct !DILocation(line: 198, column: 2, scope: !17803)
!17809 = !DILocation(line: 55, column: 2, scope: !17451, inlinedAt: !17810)
!17810 = distinct !DILocation(line: 145, column: 10, scope: !17442, inlinedAt: !17808)
!17811 = !DILocation(line: 0, scope: !17451, inlinedAt: !17810)
!17812 = !DILocation(line: 199, column: 11, scope: !17813)
!17813 = distinct !DILexicalBlock(scope: !17814, file: !2567, line: 198, column: 24)
!17814 = distinct !DILexicalBlock(scope: !17803, file: !2567, line: 198, column: 2)
!17815 = !DILocation(line: 199, column: 23, scope: !17813)
!17816 = !DILocation(line: 0, scope: !17510, inlinedAt: !17817)
!17817 = distinct !DILocation(line: 198, column: 2, scope: !17814)
!17818 = !DILocation(line: 0, scope: !17518, inlinedAt: !17819)
!17819 = distinct !DILocation(line: 215, column: 2, scope: !17510, inlinedAt: !17817)
!17820 = !DILocation(line: 95, column: 2, scope: !17518, inlinedAt: !17819)
!17821 = !DILocation(line: 199, column: 21, scope: !17813)
!17822 = !DILocation(line: 202, column: 2, scope: !17798)
!17823 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2567, file: !2567, line: 205, type: !17526, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !17824)
!17824 = !{!17825, !17826, !17828}
!17825 = !DILocalVariable(name: "ret", scope: !17823, file: !2567, line: 207, type: !331)
!17826 = !DILocalVariable(name: "__i", scope: !17827, file: !2567, line: 209, type: !17420)
!17827 = distinct !DILexicalBlock(scope: !17823, file: !2567, line: 209, column: 2)
!17828 = !DILocalVariable(name: "__key", scope: !17827, file: !2567, line: 209, type: !17420)
!17829 = !DILocation(line: 0, scope: !17823)
!17830 = !DILocation(line: 0, scope: !17827)
!17831 = !DILocation(line: 0, scope: !17442, inlinedAt: !17832)
!17832 = distinct !DILocation(line: 209, column: 2, scope: !17827)
!17833 = !DILocation(line: 55, column: 2, scope: !17451, inlinedAt: !17834)
!17834 = distinct !DILocation(line: 145, column: 10, scope: !17442, inlinedAt: !17832)
!17835 = !DILocation(line: 0, scope: !17451, inlinedAt: !17834)
!17836 = !DILocation(line: 210, column: 9, scope: !17837)
!17837 = distinct !DILexicalBlock(scope: !17838, file: !2567, line: 209, column: 24)
!17838 = distinct !DILexicalBlock(scope: !17827, file: !2567, line: 209, column: 2)
!17839 = !DILocation(line: 0, scope: !17510, inlinedAt: !17840)
!17840 = distinct !DILocation(line: 209, column: 2, scope: !17838)
!17841 = !DILocation(line: 0, scope: !17518, inlinedAt: !17842)
!17842 = distinct !DILocation(line: 215, column: 2, scope: !17510, inlinedAt: !17840)
!17843 = !DILocation(line: 95, column: 2, scope: !17518, inlinedAt: !17842)
!17844 = !DILocation(line: 212, column: 2, scope: !17823)
!17845 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2567, file: !2567, line: 215, type: !11914, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !17846)
!17846 = !{!17847, !17848, !17849, !17851, !17852, !17855, !17856}
!17847 = !DILocalVariable(name: "ticks", arg: 1, scope: !17845, file: !2567, line: 215, type: !331)
!17848 = !DILocalVariable(name: "is_idle", arg: 2, scope: !17845, file: !2567, line: 215, type: !131)
!17849 = !DILocalVariable(name: "__i", scope: !17850, file: !2567, line: 217, type: !17420)
!17850 = distinct !DILexicalBlock(scope: !17845, file: !2567, line: 217, column: 2)
!17851 = !DILocalVariable(name: "__key", scope: !17850, file: !2567, line: 217, type: !17420)
!17852 = !DILocalVariable(name: "next_to", scope: !17853, file: !2567, line: 218, type: !103)
!17853 = distinct !DILexicalBlock(scope: !17854, file: !2567, line: 217, column: 24)
!17854 = distinct !DILexicalBlock(scope: !17850, file: !2567, line: 217, column: 2)
!17855 = !DILocalVariable(name: "sooner", scope: !17853, file: !2567, line: 219, type: !131)
!17856 = !DILocalVariable(name: "imminent", scope: !17853, file: !2567, line: 221, type: !131)
!17857 = !DILocation(line: 0, scope: !17845)
!17858 = !DILocation(line: 0, scope: !17850)
!17859 = !DILocation(line: 0, scope: !17442, inlinedAt: !17860)
!17860 = distinct !DILocation(line: 217, column: 2, scope: !17850)
!17861 = !DILocation(line: 55, column: 2, scope: !17451, inlinedAt: !17862)
!17862 = distinct !DILocation(line: 145, column: 10, scope: !17442, inlinedAt: !17860)
!17863 = !DILocation(line: 0, scope: !17451, inlinedAt: !17862)
!17864 = !DILocation(line: 218, column: 17, scope: !17853)
!17865 = !DILocation(line: 0, scope: !17853)
!17866 = !DILocation(line: 221, column: 27, scope: !17853)
!17867 = !DILocation(line: 233, column: 17, scope: !17868)
!17868 = distinct !DILexicalBlock(scope: !17853, file: !2567, line: 233, column: 7)
!17869 = !DILocation(line: 234, column: 26, scope: !17870)
!17870 = distinct !DILexicalBlock(scope: !17868, file: !2567, line: 233, column: 56)
!17871 = !DILocation(line: 234, column: 4, scope: !17870)
!17872 = !DILocation(line: 235, column: 3, scope: !17870)
!17873 = !DILocation(line: 0, scope: !17510, inlinedAt: !17874)
!17874 = distinct !DILocation(line: 217, column: 2, scope: !17854)
!17875 = !DILocation(line: 0, scope: !17518, inlinedAt: !17876)
!17876 = distinct !DILocation(line: 215, column: 2, scope: !17510, inlinedAt: !17874)
!17877 = !DILocation(line: 95, column: 2, scope: !17518, inlinedAt: !17876)
!17878 = !DILocation(line: 237, column: 1, scope: !17845)
!17879 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2567, file: !2567, line: 239, type: !17880, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !17882)
!17880 = !DISubroutineType(types: !17881)
!17881 = !{null, !331}
!17882 = !{!17883, !17884, !17885, !17887}
!17883 = !DILocalVariable(name: "ticks", arg: 1, scope: !17879, file: !2567, line: 239, type: !331)
!17884 = !DILocalVariable(name: "key", scope: !17879, file: !2567, line: 245, type: !17420)
!17885 = !DILocalVariable(name: "t", scope: !17886, file: !2567, line: 262, type: !2540)
!17886 = distinct !DILexicalBlock(scope: !17879, file: !2567, line: 261, column: 67)
!17887 = !DILocalVariable(name: "dt", scope: !17886, file: !2567, line: 263, type: !103)
!17888 = !DILocation(line: 0, scope: !17879)
!17889 = !DILocation(line: 242, column: 2, scope: !17879)
!17890 = !DILocation(line: 0, scope: !17442, inlinedAt: !17891)
!17891 = distinct !DILocation(line: 245, column: 25, scope: !17879)
!17892 = !DILocation(line: 55, column: 2, scope: !17451, inlinedAt: !17893)
!17893 = distinct !DILocation(line: 145, column: 10, scope: !17442, inlinedAt: !17891)
!17894 = !DILocation(line: 0, scope: !17451, inlinedAt: !17893)
!17895 = !DILocation(line: 261, column: 9, scope: !17879)
!17896 = !DILocation(line: 261, column: 17, scope: !17879)
!17897 = !DILocation(line: 261, column: 25, scope: !17879)
!17898 = !DILocation(line: 261, column: 37, scope: !17879)
!17899 = !DILocation(line: 261, column: 47, scope: !17879)
!17900 = !DILocation(line: 261, column: 44, scope: !17879)
!17901 = !DILocation(line: 261, column: 2, scope: !17879)
!17902 = !DILocation(line: 0, scope: !17886)
!17903 = !DILocation(line: 263, column: 12, scope: !17886)
!17904 = !DILocation(line: 265, column: 16, scope: !17886)
!17905 = !DILocation(line: 265, column: 13, scope: !17886)
!17906 = !DILocation(line: 266, column: 13, scope: !17886)
!17907 = !DILocation(line: 267, column: 3, scope: !17886)
!17908 = !DILocation(line: 0, scope: !17510, inlinedAt: !17909)
!17909 = distinct !DILocation(line: 269, column: 3, scope: !17886)
!17910 = !DILocation(line: 0, scope: !17518, inlinedAt: !17911)
!17911 = distinct !DILocation(line: 215, column: 2, scope: !17510, inlinedAt: !17909)
!17912 = !DILocation(line: 95, column: 2, scope: !17518, inlinedAt: !17911)
!17913 = !DILocation(line: 270, column: 6, scope: !17886)
!17914 = !DILocation(line: 270, column: 3, scope: !17886)
!17915 = !DILocation(line: 0, scope: !17442, inlinedAt: !17916)
!17916 = distinct !DILocation(line: 271, column: 9, scope: !17886)
!17917 = !DILocation(line: 55, column: 2, scope: !17451, inlinedAt: !17918)
!17918 = distinct !DILocation(line: 145, column: 10, scope: !17442, inlinedAt: !17916)
!17919 = !DILocation(line: 0, scope: !17451, inlinedAt: !17918)
!17920 = !DILocation(line: 272, column: 22, scope: !17886)
!17921 = distinct !{!17921, !17901, !17922}
!17922 = !DILocation(line: 273, column: 2, scope: !17879)
!17923 = !DILocation(line: 276, column: 19, scope: !17924)
!17924 = distinct !DILexicalBlock(scope: !17925, file: !2567, line: 275, column: 23)
!17925 = distinct !DILexicalBlock(scope: !17879, file: !2567, line: 275, column: 6)
!17926 = !DILocation(line: 277, column: 2, scope: !17924)
!17927 = !DILocation(line: 279, column: 15, scope: !17879)
!17928 = !DILocation(line: 279, column: 12, scope: !17879)
!17929 = !DILocation(line: 280, column: 21, scope: !17879)
!17930 = !DILocation(line: 282, column: 24, scope: !17879)
!17931 = !DILocation(line: 282, column: 2, scope: !17879)
!17932 = !DILocation(line: 0, scope: !17510, inlinedAt: !17933)
!17933 = distinct !DILocation(line: 284, column: 2, scope: !17879)
!17934 = !DILocation(line: 0, scope: !17518, inlinedAt: !17935)
!17935 = distinct !DILocation(line: 215, column: 2, scope: !17510, inlinedAt: !17933)
!17936 = !DILocation(line: 95, column: 2, scope: !17518, inlinedAt: !17935)
!17937 = !DILocation(line: 285, column: 1, scope: !17879)
!17938 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2567, file: !2567, line: 287, type: !3612, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !17939)
!17939 = !{!17940, !17941, !17943}
!17940 = !DILocalVariable(name: "t", scope: !17938, file: !2567, line: 289, type: !109)
!17941 = !DILocalVariable(name: "__i", scope: !17942, file: !2567, line: 291, type: !17420)
!17942 = distinct !DILexicalBlock(scope: !17938, file: !2567, line: 291, column: 2)
!17943 = !DILocalVariable(name: "__key", scope: !17942, file: !2567, line: 291, type: !17420)
!17944 = !DILocation(line: 0, scope: !17938)
!17945 = !DILocation(line: 0, scope: !17942)
!17946 = !DILocation(line: 0, scope: !17442, inlinedAt: !17947)
!17947 = distinct !DILocation(line: 291, column: 2, scope: !17942)
!17948 = !DILocation(line: 55, column: 2, scope: !17451, inlinedAt: !17949)
!17949 = distinct !DILocation(line: 145, column: 10, scope: !17442, inlinedAt: !17947)
!17950 = !DILocation(line: 0, scope: !17451, inlinedAt: !17949)
!17951 = !DILocation(line: 292, column: 7, scope: !17952)
!17952 = distinct !DILexicalBlock(scope: !17953, file: !2567, line: 291, column: 24)
!17953 = distinct !DILexicalBlock(scope: !17942, file: !2567, line: 291, column: 2)
!17954 = !DILocation(line: 292, column: 19, scope: !17952)
!17955 = !DILocation(line: 0, scope: !17510, inlinedAt: !17956)
!17956 = distinct !DILocation(line: 291, column: 2, scope: !17953)
!17957 = !DILocation(line: 0, scope: !17518, inlinedAt: !17958)
!17958 = distinct !DILocation(line: 215, column: 2, scope: !17510, inlinedAt: !17956)
!17959 = !DILocation(line: 95, column: 2, scope: !17518, inlinedAt: !17958)
!17960 = !DILocation(line: 292, column: 17, scope: !17952)
!17961 = !DILocation(line: 294, column: 2, scope: !17938)
!17962 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2567, file: !2567, line: 297, type: !3598, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !251)
!17963 = !DILocation(line: 300, column: 19, scope: !17962)
!17964 = !DILocation(line: 300, column: 9, scope: !17962)
!17965 = !DILocation(line: 300, column: 2, scope: !17962)
!17966 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2567, file: !2567, line: 306, type: !3612, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !251)
!17967 = !DILocation(line: 308, column: 9, scope: !17966)
!17968 = !DILocation(line: 308, column: 2, scope: !17966)
!17969 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2567, file: !2567, line: 319, type: !7403, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !17970)
!17970 = !{!17971, !17972, !17973, !17974}
!17971 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !17969, file: !2567, line: 319, type: !108)
!17972 = !DILocalVariable(name: "start_cycles", scope: !17969, file: !2567, line: 328, type: !108)
!17973 = !DILocalVariable(name: "cycles_to_wait", scope: !17969, file: !2567, line: 331, type: !108)
!17974 = !DILocalVariable(name: "current_cycles", scope: !17975, file: !2567, line: 338, type: !108)
!17975 = distinct !DILexicalBlock(scope: !17976, file: !2567, line: 337, column: 11)
!17976 = distinct !DILexicalBlock(scope: !17977, file: !2567, line: 337, column: 2)
!17977 = distinct !DILexicalBlock(scope: !17969, file: !2567, line: 337, column: 2)
!17978 = !DILocation(line: 0, scope: !17969)
!17979 = !DILocation(line: 322, column: 19, scope: !17980)
!17980 = distinct !DILexicalBlock(scope: !17969, file: !2567, line: 322, column: 6)
!17981 = !DILocation(line: 322, column: 6, scope: !17969)
!17982 = !DILocation(line: 328, column: 26, scope: !17969)
!17983 = !DILocation(line: 333, column: 43, scope: !17969)
!17984 = !DILocation(line: 337, column: 2, scope: !17969)
!17985 = !DILocation(line: 338, column: 29, scope: !17975)
!17986 = !DILocation(line: 0, scope: !17975)
!17987 = !DILocation(line: 341, column: 23, scope: !17988)
!17988 = distinct !DILexicalBlock(scope: !17975, file: !2567, line: 341, column: 7)
!17989 = !DILocation(line: 341, column: 39, scope: !17988)
!17990 = !DILocation(line: 349, column: 1, scope: !17969)
!17991 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !137, file: !137, line: 1675, type: !3598, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !251)
!17992 = !DILocation(line: 1677, column: 9, scope: !17991)
!17993 = !DILocation(line: 1677, column: 2, scope: !17991)
!17994 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !17995, file: !17995, line: 24, type: !3598, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !251)
!17995 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17996 = !DILocation(line: 26, column: 9, scope: !17994)
!17997 = !DILocation(line: 26, column: 2, scope: !17994)
!17998 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2567, file: !2567, line: 364, type: !17999, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2537, retainedNodes: !18001)
!17999 = !DISubroutineType(types: !18000)
!18000 = !{!109, !17410}
!18001 = !{!18002, !18003}
!18002 = !DILocalVariable(name: "timeout", arg: 1, scope: !17998, file: !2567, line: 364, type: !17410)
!18003 = !DILocalVariable(name: "dt", scope: !17998, file: !2567, line: 366, type: !104)
!18004 = !DILocation(line: 0, scope: !17998)
!18005 = !DILocation(line: 368, column: 6, scope: !17998)
!18006 = !DILocation(line: 371, column: 10, scope: !18007)
!18007 = distinct !DILexicalBlock(scope: !18008, file: !2567, line: 370, column: 47)
!18008 = distinct !DILexicalBlock(scope: !18009, file: !2567, line: 370, column: 13)
!18009 = distinct !DILexicalBlock(scope: !17998, file: !2567, line: 368, column: 6)
!18010 = !DILocation(line: 371, column: 3, scope: !18007)
!18011 = !DILocation(line: 376, column: 58, scope: !18012)
!18012 = distinct !DILexicalBlock(scope: !18013, file: !2567, line: 376, column: 7)
!18013 = distinct !DILexicalBlock(scope: !18008, file: !2567, line: 372, column: 9)
!18014 = !DILocation(line: 376, column: 7, scope: !18013)
!18015 = !DILocation(line: 376, column: 43, scope: !18012)
!18016 = !DILocation(line: 377, column: 4, scope: !18017)
!18017 = distinct !DILexicalBlock(scope: !18012, file: !2567, line: 376, column: 64)
!18018 = !DILocation(line: 379, column: 10, scope: !18013)
!18019 = !DILocation(line: 379, column: 33, scope: !18013)
!18020 = !DILocation(line: 379, column: 31, scope: !18013)
!18021 = !DILocation(line: 379, column: 3, scope: !18013)
!18022 = !DILocation(line: 0, scope: !18009)
!18023 = !DILocation(line: 381, column: 1, scope: !17998)
!18024 = distinct !DISubprogram(name: "k_free", scope: !2581, file: !2581, line: 43, type: !7251, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2576, retainedNodes: !18025)
!18025 = !{!18026, !18027}
!18026 = !DILocalVariable(name: "ptr", arg: 1, scope: !18024, file: !2581, line: 43, type: !102)
!18027 = !DILocalVariable(name: "heap_ref", scope: !18024, file: !2581, line: 45, type: !18028)
!18028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18029, size: 32)
!18029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2582, size: 32)
!18030 = !DILocation(line: 0, scope: !18024)
!18031 = !DILocation(line: 47, column: 10, scope: !18032)
!18032 = distinct !DILexicalBlock(scope: !18024, file: !2581, line: 47, column: 6)
!18033 = !DILocation(line: 47, column: 6, scope: !18024)
!18034 = !DILocation(line: 49, column: 9, scope: !18035)
!18035 = distinct !DILexicalBlock(scope: !18032, file: !2581, line: 47, column: 19)
!18036 = !DILocation(line: 53, column: 15, scope: !18035)
!18037 = !DILocation(line: 53, column: 3, scope: !18035)
!18038 = !DILocation(line: 56, column: 2, scope: !18035)
!18039 = !DILocation(line: 57, column: 1, scope: !18024)
!18040 = distinct !DISubprogram(name: "k_aligned_alloc", scope: !2581, file: !2581, line: 64, type: !18041, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2576, retainedNodes: !18043)
!18041 = !DISubroutineType(types: !18042)
!18042 = !{!102, !132, !132}
!18043 = !{!18044, !18045, !18046}
!18044 = !DILocalVariable(name: "align", arg: 1, scope: !18040, file: !2581, line: 64, type: !132)
!18045 = !DILocalVariable(name: "size", arg: 2, scope: !18040, file: !2581, line: 64, type: !132)
!18046 = !DILocalVariable(name: "ret", scope: !18040, file: !2581, line: 75, type: !102)
!18047 = !DILocation(line: 0, scope: !18040)
!18048 = !DILocation(line: 75, column: 14, scope: !18040)
!18049 = !DILocation(line: 79, column: 2, scope: !18040)
!18050 = distinct !DISubprogram(name: "z_heap_aligned_alloc", scope: !2581, file: !2581, line: 12, type: !18051, scopeLine: 13, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2576, retainedNodes: !18053)
!18051 = !DISubroutineType(types: !18052)
!18052 = !{!102, !18029, !132, !132}
!18053 = !{!18054, !18055, !18056, !18057, !18058, !18059}
!18054 = !DILocalVariable(name: "heap", arg: 1, scope: !18050, file: !2581, line: 12, type: !18029)
!18055 = !DILocalVariable(name: "align", arg: 2, scope: !18050, file: !2581, line: 12, type: !132)
!18056 = !DILocalVariable(name: "size", arg: 3, scope: !18050, file: !2581, line: 12, type: !132)
!18057 = !DILocalVariable(name: "mem", scope: !18050, file: !2581, line: 14, type: !102)
!18058 = !DILocalVariable(name: "heap_ref", scope: !18050, file: !2581, line: 15, type: !18028)
!18059 = !DILocalVariable(name: "__align", scope: !18050, file: !2581, line: 16, type: !132)
!18060 = !DILocation(line: 0, scope: !18050)
!18061 = !DILocation(line: 24, column: 6, scope: !18062)
!18062 = distinct !DILexicalBlock(scope: !18050, file: !2581, line: 24, column: 6)
!18063 = !DILocation(line: 24, column: 6, scope: !18050)
!18064 = !DILocation(line: 27, column: 18, scope: !18050)
!18065 = !DILocation(line: 29, column: 44, scope: !18050)
!18066 = !DILocation(line: 29, column: 8, scope: !18050)
!18067 = !DILocation(line: 30, column: 10, scope: !18068)
!18068 = distinct !DILexicalBlock(scope: !18050, file: !2581, line: 30, column: 6)
!18069 = !DILocation(line: 30, column: 6, scope: !18050)
!18070 = !DILocation(line: 34, column: 13, scope: !18050)
!18071 = !DILocation(line: 35, column: 12, scope: !18050)
!18072 = !DILocation(line: 36, column: 8, scope: !18050)
!18073 = !DILocation(line: 40, column: 2, scope: !18050)
!18074 = !DILocation(line: 41, column: 1, scope: !18050)
!18075 = distinct !DISubprogram(name: "size_add_overflow", scope: !14722, file: !14722, line: 47, type: !14723, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2576, retainedNodes: !18076)
!18076 = !{!18077, !18078, !18079}
!18077 = !DILocalVariable(name: "a", arg: 1, scope: !18075, file: !14722, line: 47, type: !132)
!18078 = !DILocalVariable(name: "b", arg: 2, scope: !18075, file: !14722, line: 47, type: !132)
!18079 = !DILocalVariable(name: "result", arg: 3, scope: !18075, file: !14722, line: 47, type: !2715)
!18080 = !DILocation(line: 0, scope: !18075)
!18081 = !DILocation(line: 49, column: 9, scope: !18075)
!18082 = !DILocation(line: 49, column: 2, scope: !18075)
!18083 = distinct !DISubprogram(name: "k_malloc", scope: !2581, file: !2581, line: 82, type: !14734, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2576, retainedNodes: !18084)
!18084 = !{!18085, !18086}
!18085 = !DILocalVariable(name: "size", arg: 1, scope: !18083, file: !2581, line: 82, type: !132)
!18086 = !DILocalVariable(name: "ret", scope: !18083, file: !2581, line: 86, type: !102)
!18087 = !DILocation(line: 0, scope: !18083)
!18088 = !DILocation(line: 86, column: 14, scope: !18083)
!18089 = !DILocation(line: 90, column: 2, scope: !18083)
!18090 = distinct !DISubprogram(name: "k_calloc", scope: !2581, file: !2581, line: 93, type: !18041, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2576, retainedNodes: !18091)
!18091 = !{!18092, !18093, !18094, !18095}
!18092 = !DILocalVariable(name: "nmemb", arg: 1, scope: !18090, file: !2581, line: 93, type: !132)
!18093 = !DILocalVariable(name: "size", arg: 2, scope: !18090, file: !2581, line: 93, type: !132)
!18094 = !DILocalVariable(name: "ret", scope: !18090, file: !2581, line: 95, type: !102)
!18095 = !DILocalVariable(name: "bounds", scope: !18090, file: !2581, line: 96, type: !132)
!18096 = !DILocation(line: 0, scope: !18090)
!18097 = !DILocation(line: 96, column: 2, scope: !18090)
!18098 = !DILocation(line: 100, column: 6, scope: !18099)
!18099 = distinct !DILexicalBlock(scope: !18090, file: !2581, line: 100, column: 6)
!18100 = !DILocation(line: 100, column: 6, scope: !18090)
!18101 = !DILocation(line: 106, column: 17, scope: !18090)
!18102 = !DILocation(line: 106, column: 8, scope: !18090)
!18103 = !DILocation(line: 107, column: 10, scope: !18104)
!18104 = distinct !DILexicalBlock(scope: !18090, file: !2581, line: 107, column: 6)
!18105 = !DILocation(line: 107, column: 6, scope: !18090)
!18106 = !DILocation(line: 108, column: 9, scope: !18107)
!18107 = distinct !DILexicalBlock(scope: !18104, file: !2581, line: 107, column: 19)
!18108 = !DILocation(line: 109, column: 2, scope: !18107)
!18109 = !DILocation(line: 114, column: 1, scope: !18090)
!18110 = distinct !DISubprogram(name: "size_mul_overflow", scope: !14722, file: !14722, line: 105, type: !14723, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2576, retainedNodes: !18111)
!18111 = !{!18112, !18113, !18114}
!18112 = !DILocalVariable(name: "a", arg: 1, scope: !18110, file: !14722, line: 105, type: !132)
!18113 = !DILocalVariable(name: "b", arg: 2, scope: !18110, file: !14722, line: 105, type: !132)
!18114 = !DILocalVariable(name: "result", arg: 3, scope: !18110, file: !14722, line: 105, type: !2715)
!18115 = !DILocation(line: 0, scope: !18110)
!18116 = !DILocation(line: 107, column: 9, scope: !18110)
!18117 = !DILocation(line: 107, column: 2, scope: !18110)
!18118 = distinct !DISubprogram(name: "k_thread_system_pool_assign", scope: !2581, file: !2581, line: 116, type: !18119, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2576, retainedNodes: !18191)
!18119 = !DISubroutineType(types: !18120)
!18120 = !{null, !18121}
!18121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18122, size: 32)
!18122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !18123)
!18123 = !{!18124, !18164, !18176, !18177, !18178, !18179, !18185, !18186}
!18124 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !18122, file: !163, line: 247, baseType: !18125, size: 384)
!18125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !18126)
!18126 = !{!18127, !18138, !18140, !18141, !18142, !18151, !18152, !18153}
!18127 = !DIDerivedType(tag: DW_TAG_member, scope: !18125, file: !163, line: 60, baseType: !18128, size: 64)
!18128 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !18125, file: !163, line: 60, size: 64, elements: !18129)
!18129 = !{!18130, !18132}
!18130 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !18128, file: !163, line: 61, baseType: !18131, size: 64)
!18131 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !2596)
!18132 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !18128, file: !163, line: 62, baseType: !18133, size: 64)
!18133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !18134)
!18134 = !{!18135}
!18135 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !18133, file: !175, line: 50, baseType: !18136, size: 64)
!18136 = !DICompositeType(tag: DW_TAG_array_type, baseType: !18137, size: 64, elements: !180)
!18137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18133, size: 32)
!18138 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !18125, file: !163, line: 68, baseType: !18139, size: 32, offset: 64)
!18139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2591, size: 32)
!18140 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !18125, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!18141 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !18125, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!18142 = !DIDerivedType(tag: DW_TAG_member, scope: !18125, file: !163, line: 90, baseType: !18143, size: 16, offset: 112)
!18143 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !18125, file: !163, line: 90, size: 16, elements: !18144)
!18144 = !{!18145, !18150}
!18145 = !DIDerivedType(tag: DW_TAG_member, scope: !18143, file: !163, line: 91, baseType: !18146, size: 16)
!18146 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !18143, file: !163, line: 91, size: 16, elements: !18147)
!18147 = !{!18148, !18149}
!18148 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !18146, file: !163, line: 96, baseType: !195, size: 8)
!18149 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !18146, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!18150 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !18143, file: !163, line: 100, baseType: !121, size: 16)
!18151 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !18125, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!18152 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !18125, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!18153 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !18125, file: !163, line: 131, baseType: !18154, size: 192, offset: 192)
!18154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !18155)
!18155 = !{!18156, !18157, !18163}
!18156 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !18154, file: !141, line: 245, baseType: !18131, size: 64)
!18157 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !18154, file: !141, line: 246, baseType: !18158, size: 32, offset: 64)
!18158 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !18159)
!18159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18160, size: 32)
!18160 = !DISubroutineType(types: !18161)
!18161 = !{null, !18162}
!18162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18154, size: 32)
!18163 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !18154, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!18164 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !18122, file: !163, line: 250, baseType: !18165, size: 288, offset: 384)
!18165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !18166)
!18166 = !{!18167, !18168, !18169, !18170, !18171, !18172, !18173, !18174, !18175}
!18167 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !18165, file: !214, line: 26, baseType: !108, size: 32)
!18168 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !18165, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!18169 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !18165, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!18170 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !18165, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!18171 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !18165, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!18172 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !18165, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!18173 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !18165, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!18174 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !18165, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!18175 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !18165, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!18176 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !18122, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!18177 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !18122, file: !163, line: 256, baseType: !2591, size: 64, offset: 704)
!18178 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !18122, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!18179 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !18122, file: !163, line: 300, baseType: !18180, size: 96, offset: 800)
!18180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !18181)
!18181 = !{!18182, !18183, !18184}
!18182 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !18180, file: !163, line: 153, baseType: !22, size: 32)
!18183 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !18180, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!18184 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !18180, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!18185 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !18122, file: !163, line: 325, baseType: !18029, size: 32, offset: 896)
!18186 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !18122, file: !163, line: 343, baseType: !18187, size: 64, offset: 928)
!18187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !18188)
!18188 = !{!18189, !18190}
!18189 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !18187, file: !214, line: 63, baseType: !108, size: 32)
!18190 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !18187, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!18191 = !{!18192}
!18192 = !DILocalVariable(name: "thread", arg: 1, scope: !18118, file: !2581, line: 116, type: !18121)
!18193 = !DILocation(line: 0, scope: !18118)
!18194 = !DILocation(line: 118, column: 10, scope: !18118)
!18195 = !DILocation(line: 118, column: 24, scope: !18118)
!18196 = !DILocation(line: 119, column: 1, scope: !18118)
!18197 = distinct !DISubprogram(name: "z_thread_aligned_alloc", scope: !2581, file: !2581, line: 124, type: !18041, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2576, retainedNodes: !18198)
!18198 = !{!18199, !18200, !18201, !18202}
!18199 = !DILocalVariable(name: "align", arg: 1, scope: !18197, file: !2581, line: 124, type: !132)
!18200 = !DILocalVariable(name: "size", arg: 2, scope: !18197, file: !2581, line: 124, type: !132)
!18201 = !DILocalVariable(name: "ret", scope: !18197, file: !2581, line: 126, type: !102)
!18202 = !DILocalVariable(name: "heap", scope: !18197, file: !2581, line: 127, type: !18029)
!18203 = !DILocation(line: 0, scope: !18197)
!18204 = !DILocation(line: 129, column: 6, scope: !18205)
!18205 = distinct !DILexicalBlock(scope: !18197, file: !2581, line: 129, column: 6)
!18206 = !DILocation(line: 129, column: 6, scope: !18197)
!18207 = !DILocation(line: 132, column: 10, scope: !18208)
!18208 = distinct !DILexicalBlock(scope: !18205, file: !2581, line: 131, column: 9)
!18209 = !DILocation(line: 132, column: 20, scope: !18208)
!18210 = !DILocation(line: 135, column: 11, scope: !18211)
!18211 = distinct !DILexicalBlock(scope: !18197, file: !2581, line: 135, column: 6)
!18212 = !DILocation(line: 135, column: 6, scope: !18197)
!18213 = !DILocation(line: 136, column: 9, scope: !18214)
!18214 = distinct !DILexicalBlock(scope: !18211, file: !2581, line: 135, column: 20)
!18215 = !DILocation(line: 137, column: 2, scope: !18214)
!18216 = !DILocation(line: 0, scope: !18211)
!18217 = !DILocation(line: 141, column: 2, scope: !18197)
!18218 = distinct !DISubprogram(name: "main", scope: !18219, file: !18219, line: 27, type: !334, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3346, retainedNodes: !251)
!18219 = !DIFile(filename: "zephyr/kernel/main_weak.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18220 = !DILocation(line: 38, column: 2, scope: !18221, inlinedAt: !18222)
!18221 = distinct !DISubprogram(name: "arch_nop", scope: !17995, file: !17995, line: 36, type: !334, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3346, retainedNodes: !251)
!18222 = distinct !DILocation(line: 31, column: 2, scope: !18218)
!18223 = !{i64 2225123}
!18224 = !DILocation(line: 36, column: 1, scope: !18218)
!18225 = distinct !DISubprogram(name: "boot_banner", scope: !18226, file: !18226, line: 26, type: !334, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3348, retainedNodes: !251)
!18226 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18227 = !DILocation(line: 34, column: 2, scope: !18225)
!18228 = !DILocation(line: 36, column: 1, scope: !18225)
!18229 = distinct !DISubprogram(name: "statics_init", scope: !2635, file: !2635, line: 21, type: !2641, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2616, retainedNodes: !18230)
!18230 = !{!18231, !18232}
!18231 = !DILocalVariable(name: "unused", arg: 1, scope: !18229, file: !2635, line: 21, type: !2643)
!18232 = !DILocalVariable(name: "h", scope: !18233, file: !2635, line: 24, type: !18234)
!18233 = distinct !DILexicalBlock(scope: !18229, file: !2635, line: 24, column: 2)
!18234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18235, size: 32)
!18235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !18236)
!18236 = !{!18237, !18243, !18249}
!18237 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !18235, file: !137, line: 5074, baseType: !18238, size: 96)
!18238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !18239)
!18239 = !{!18240, !18241, !18242}
!18240 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !18238, file: !240, line: 57, baseType: !243, size: 32)
!18241 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !18238, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!18242 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !18238, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!18243 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !18235, file: !137, line: 5075, baseType: !18244, size: 64, offset: 96)
!18244 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !18245)
!18245 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !18246)
!18246 = !{!18247}
!18247 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !18245, file: !141, line: 232, baseType: !18248, size: 64)
!18248 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !2621)
!18249 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !18235, file: !137, line: 5076, baseType: !18250, offset: 160)
!18250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!18251 = !DILocation(line: 0, scope: !18229)
!18252 = !DILocation(line: 0, scope: !18233)
!18253 = !DILocation(line: 24, column: 2, scope: !18233)
!18254 = !DILocation(line: 52, column: 2, scope: !18229)
!18255 = !DILocation(line: 49, column: 27, scope: !18256)
!18256 = distinct !DILexicalBlock(scope: !18257, file: !2635, line: 48, column: 3)
!18257 = distinct !DILexicalBlock(scope: !18258, file: !2635, line: 24, column: 36)
!18258 = distinct !DILexicalBlock(scope: !18233, file: !2635, line: 24, column: 2)
!18259 = !DILocation(line: 49, column: 45, scope: !18256)
!18260 = !DILocation(line: 49, column: 4, scope: !18256)
!18261 = !DILocation(line: 24, column: 2, scope: !18258)
!18262 = !DILocation(line: 24, column: 2, scope: !18263)
!18263 = distinct !DILexicalBlock(scope: !18258, file: !2635, line: 24, column: 2)
!18264 = distinct !{!18264, !18253, !18265}
!18265 = !DILocation(line: 51, column: 2, scope: !18233)
!18266 = distinct !DISubprogram(name: "k_heap_init", scope: !2635, file: !2635, line: 13, type: !18267, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2616, retainedNodes: !18269)
!18267 = !DISubroutineType(types: !18268)
!18268 = !{null, !18234, !102, !132}
!18269 = !{!18270, !18271, !18272}
!18270 = !DILocalVariable(name: "h", arg: 1, scope: !18266, file: !2635, line: 13, type: !18234)
!18271 = !DILocalVariable(name: "mem", arg: 2, scope: !18266, file: !2635, line: 13, type: !102)
!18272 = !DILocalVariable(name: "bytes", arg: 3, scope: !18266, file: !2635, line: 13, type: !132)
!18273 = !DILocation(line: 0, scope: !18266)
!18274 = !DILocation(line: 15, column: 19, scope: !18266)
!18275 = !DILocation(line: 15, column: 2, scope: !18266)
!18276 = !DILocation(line: 16, column: 20, scope: !18266)
!18277 = !DILocation(line: 16, column: 2, scope: !18266)
!18278 = !DILocation(line: 19, column: 1, scope: !18266)
!18279 = distinct !DISubprogram(name: "z_waitq_init", scope: !14289, file: !14289, line: 47, type: !18280, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2616, retainedNodes: !18283)
!18280 = !DISubroutineType(types: !18281)
!18281 = !{null, !18282}
!18282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18244, size: 32)
!18283 = !{!18284}
!18284 = !DILocalVariable(name: "w", arg: 1, scope: !18279, file: !14289, line: 47, type: !18282)
!18285 = !DILocation(line: 0, scope: !18279)
!18286 = !DILocation(line: 49, column: 21, scope: !18279)
!18287 = !DILocation(line: 49, column: 2, scope: !18279)
!18288 = !DILocation(line: 50, column: 1, scope: !18279)
!18289 = distinct !DISubprogram(name: "sys_dlist_init", scope: !146, file: !146, line: 197, type: !18290, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2616, retainedNodes: !18293)
!18290 = !DISubroutineType(types: !18291)
!18291 = !{null, !18292}
!18292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18248, size: 32)
!18293 = !{!18294}
!18294 = !DILocalVariable(name: "list", arg: 1, scope: !18289, file: !146, line: 197, type: !18292)
!18295 = !DILocation(line: 0, scope: !18289)
!18296 = !DILocation(line: 199, column: 8, scope: !18289)
!18297 = !DILocation(line: 199, column: 13, scope: !18289)
!18298 = !DILocation(line: 200, column: 8, scope: !18289)
!18299 = !DILocation(line: 200, column: 13, scope: !18289)
!18300 = !DILocation(line: 201, column: 1, scope: !18289)
!18301 = distinct !DISubprogram(name: "k_heap_aligned_alloc", scope: !2635, file: !2635, line: 64, type: !18302, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2616, retainedNodes: !18308)
!18302 = !DISubroutineType(types: !18303)
!18303 = !{!102, !18234, !132, !132, !18304}
!18304 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !18305)
!18305 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !18306)
!18306 = !{!18307}
!18307 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !18305, file: !105, line: 66, baseType: !104, size: 64)
!18308 = !{!18309, !18310, !18311, !18312, !18313, !18314, !18315, !18316, !18321}
!18309 = !DILocalVariable(name: "h", arg: 1, scope: !18301, file: !2635, line: 64, type: !18234)
!18310 = !DILocalVariable(name: "align", arg: 2, scope: !18301, file: !2635, line: 64, type: !132)
!18311 = !DILocalVariable(name: "bytes", arg: 3, scope: !18301, file: !2635, line: 64, type: !132)
!18312 = !DILocalVariable(name: "timeout", arg: 4, scope: !18301, file: !2635, line: 65, type: !18304)
!18313 = !DILocalVariable(name: "now", scope: !18301, file: !2635, line: 67, type: !106)
!18314 = !DILocalVariable(name: "end", scope: !18301, file: !2635, line: 67, type: !106)
!18315 = !DILocalVariable(name: "ret", scope: !18301, file: !2635, line: 68, type: !102)
!18316 = !DILocalVariable(name: "key", scope: !18301, file: !2635, line: 72, type: !18317)
!18317 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !250, line: 106, baseType: !18318)
!18318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !250, line: 32, size: 32, elements: !18319)
!18319 = !{!18320}
!18320 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !18318, file: !250, line: 33, baseType: !103, size: 32)
!18321 = !DILocalVariable(name: "blocked_alloc", scope: !18301, file: !2635, line: 78, type: !131)
!18322 = !DILocation(line: 0, scope: !18301)
!18323 = !DILocation(line: 67, column: 21, scope: !18301)
!18324 = !DILocation(line: 70, column: 8, scope: !18301)
!18325 = !DILocation(line: 72, column: 41, scope: !18301)
!18326 = !DILocalVariable(name: "l", arg: 1, scope: !18327, file: !250, line: 136, type: !18330)
!18327 = distinct !DISubprogram(name: "k_spin_lock", scope: !250, file: !250, line: 136, type: !18328, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2616, retainedNodes: !18331)
!18328 = !DISubroutineType(types: !18329)
!18329 = !{!18317, !18330}
!18330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18250, size: 32)
!18331 = !{!18326, !18332}
!18332 = !DILocalVariable(name: "k", scope: !18327, file: !250, line: 139, type: !18317)
!18333 = !DILocation(line: 0, scope: !18327, inlinedAt: !18334)
!18334 = distinct !DILocation(line: 72, column: 25, scope: !18301)
!18335 = !DILocation(line: 55, column: 2, scope: !18336, inlinedAt: !18340)
!18336 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6996, file: !6996, line: 42, type: !6997, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2616, retainedNodes: !18337)
!18337 = !{!18338, !18339}
!18338 = !DILocalVariable(name: "key", scope: !18336, file: !6996, line: 44, type: !32)
!18339 = !DILocalVariable(name: "tmp", scope: !18336, file: !6996, line: 53, type: !32)
!18340 = distinct !DILocation(line: 145, column: 10, scope: !18327, inlinedAt: !18334)
!18341 = !{i64 2224266}
!18342 = !DILocation(line: 0, scope: !18336, inlinedAt: !18340)
!18343 = !DILocation(line: 81, column: 9, scope: !18344)
!18344 = distinct !DILexicalBlock(scope: !18301, file: !2635, line: 80, column: 22)
!18345 = !DILocation(line: 83, column: 9, scope: !18344)
!18346 = !DILocation(line: 85, column: 12, scope: !18347)
!18347 = distinct !DILexicalBlock(scope: !18344, file: !2635, line: 84, column: 7)
!18348 = !DILocation(line: 85, column: 21, scope: !18347)
!18349 = !DILocation(line: 85, column: 30, scope: !18347)
!18350 = !DILocation(line: 85, column: 37, scope: !18347)
!18351 = !DILocation(line: 84, column: 7, scope: !18344)
!18352 = !DILocation(line: 99, column: 10, scope: !18344)
!18353 = !DILocation(line: 0, scope: !18327, inlinedAt: !18354)
!18354 = distinct !DILocation(line: 101, column: 9, scope: !18344)
!18355 = !DILocation(line: 55, column: 2, scope: !18336, inlinedAt: !18356)
!18356 = distinct !DILocation(line: 145, column: 10, scope: !18327, inlinedAt: !18354)
!18357 = !DILocation(line: 0, scope: !18336, inlinedAt: !18356)
!18358 = distinct !{!18358, !18359, !18360}
!18359 = !DILocation(line: 80, column: 2, scope: !18301)
!18360 = !DILocation(line: 102, column: 2, scope: !18301)
!18361 = !DILocalVariable(name: "key", arg: 2, scope: !18362, file: !250, line: 190, type: !18317)
!18362 = distinct !DISubprogram(name: "k_spin_unlock", scope: !250, file: !250, line: 189, type: !18363, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2616, retainedNodes: !18365)
!18363 = !DISubroutineType(types: !18364)
!18364 = !{null, !18330, !18317}
!18365 = !{!18366, !18361}
!18366 = !DILocalVariable(name: "l", arg: 1, scope: !18362, file: !250, line: 189, type: !18330)
!18367 = !DILocation(line: 0, scope: !18362, inlinedAt: !18368)
!18368 = distinct !DILocation(line: 106, column: 2, scope: !18301)
!18369 = !DILocalVariable(name: "key", arg: 1, scope: !18370, file: !6996, line: 84, type: !32)
!18370 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6996, file: !6996, line: 84, type: !7007, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2616, retainedNodes: !18371)
!18371 = !{!18369}
!18372 = !DILocation(line: 0, scope: !18370, inlinedAt: !18373)
!18373 = distinct !DILocation(line: 215, column: 2, scope: !18362, inlinedAt: !18368)
!18374 = !DILocation(line: 95, column: 2, scope: !18370, inlinedAt: !18373)
!18375 = !{i64 2225083}
!18376 = !DILocation(line: 107, column: 2, scope: !18301)
!18377 = distinct !DISubprogram(name: "k_heap_alloc", scope: !2635, file: !2635, line: 110, type: !18378, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2616, retainedNodes: !18380)
!18378 = !DISubroutineType(types: !18379)
!18379 = !{!102, !18234, !132, !18304}
!18380 = !{!18381, !18382, !18383, !18384}
!18381 = !DILocalVariable(name: "h", arg: 1, scope: !18377, file: !2635, line: 110, type: !18234)
!18382 = !DILocalVariable(name: "bytes", arg: 2, scope: !18377, file: !2635, line: 110, type: !132)
!18383 = !DILocalVariable(name: "timeout", arg: 3, scope: !18377, file: !2635, line: 110, type: !18304)
!18384 = !DILocalVariable(name: "ret", scope: !18377, file: !2635, line: 114, type: !102)
!18385 = !DILocation(line: 0, scope: !18377)
!18386 = !DILocation(line: 114, column: 14, scope: !18377)
!18387 = !DILocation(line: 118, column: 2, scope: !18377)
!18388 = distinct !DISubprogram(name: "k_heap_free", scope: !2635, file: !2635, line: 121, type: !18389, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2616, retainedNodes: !18391)
!18389 = !DISubroutineType(types: !18390)
!18390 = !{null, !18234, !102}
!18391 = !{!18392, !18393, !18394}
!18392 = !DILocalVariable(name: "h", arg: 1, scope: !18388, file: !2635, line: 121, type: !18234)
!18393 = !DILocalVariable(name: "mem", arg: 2, scope: !18388, file: !2635, line: 121, type: !102)
!18394 = !DILocalVariable(name: "key", scope: !18388, file: !2635, line: 123, type: !18317)
!18395 = !DILocation(line: 0, scope: !18388)
!18396 = !DILocation(line: 0, scope: !18327, inlinedAt: !18397)
!18397 = distinct !DILocation(line: 123, column: 25, scope: !18388)
!18398 = !DILocation(line: 55, column: 2, scope: !18336, inlinedAt: !18399)
!18399 = distinct !DILocation(line: 145, column: 10, scope: !18327, inlinedAt: !18397)
!18400 = !DILocation(line: 0, scope: !18336, inlinedAt: !18399)
!18401 = !DILocation(line: 125, column: 20, scope: !18388)
!18402 = !DILocation(line: 125, column: 2, scope: !18388)
!18403 = !DILocation(line: 128, column: 60, scope: !18404)
!18404 = distinct !DILexicalBlock(scope: !18388, file: !2635, line: 128, column: 6)
!18405 = !DILocation(line: 128, column: 43, scope: !18404)
!18406 = !DILocation(line: 128, column: 68, scope: !18404)
!18407 = !DILocation(line: 128, column: 6, scope: !18388)
!18408 = !DILocation(line: 123, column: 41, scope: !18388)
!18409 = !DILocation(line: 129, column: 3, scope: !18410)
!18410 = distinct !DILexicalBlock(scope: !18404, file: !2635, line: 128, column: 74)
!18411 = !DILocation(line: 130, column: 2, scope: !18410)
!18412 = !DILocation(line: 0, scope: !18362, inlinedAt: !18413)
!18413 = distinct !DILocation(line: 131, column: 3, scope: !18414)
!18414 = distinct !DILexicalBlock(scope: !18404, file: !2635, line: 130, column: 9)
!18415 = !DILocation(line: 0, scope: !18370, inlinedAt: !18416)
!18416 = distinct !DILocation(line: 215, column: 2, scope: !18362, inlinedAt: !18413)
!18417 = !DILocation(line: 95, column: 2, scope: !18370, inlinedAt: !18416)
!18418 = !DILocation(line: 133, column: 1, scope: !18388)
